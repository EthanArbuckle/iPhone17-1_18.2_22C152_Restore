id sub_2414726F8()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)(*(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo]+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_observers), sel_unregisterObserver_, v0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MenstrualCyclesOnboardingFertilityTrackingViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_241472830()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_tableViewHeight;
  double v2 = *(double *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_tableViewHeight];
  id result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v4 = result;
  objc_msgSend(result, sel_contentSize);
  double v6 = v5;

  if (v2 == v6)
  {
LABEL_8:
    v16.receiver = v0;
    v16.super_class = (Class)type metadata accessor for MenstrualCyclesOnboardingFertilityTrackingViewController();
    return objc_msgSendSuper2(&v16, sel_viewDidLayoutSubviews);
  }
  id result = objc_msgSend(v0, sel_tableView);
  if (!result) {
    goto LABEL_10;
  }
  v7 = result;
  objc_msgSend(result, sel_contentSize);
  uint64_t v9 = v8;

  *(void *)&v0[v1] = v9;
  id result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = result;
  objc_msgSend(result, sel_reloadData);

  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v11 = result;
  objc_msgSend(result, sel_layoutIfNeeded);

  id v12 = sub_241471FA0();
  id result = objc_msgSend(v0, sel_tableView);
  if (result)
  {
    v13 = result;
    objc_msgSend(result, sel_contentSize);
    double v15 = v14;

    objc_msgSend(v12, sel_setConstant_, v15);
    goto LABEL_8;
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_241472A00()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for MenstrualCyclesOnboardingFertilityTrackingViewController();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  id v1 = sub_2413CDAA8();
  objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v0, sel_nextButtonTapped_, 64);
  id v2 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v2, sel_addButton_, v1);

  id v3 = objc_msgSend(v0, sel_headerView);
  if (qword_26B00F370 != -1) {
    swift_once();
  }
  long long v5 = xmmword_26B017FC8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  v4 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v5);
}

void sub_241472B98()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  v87 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241631CA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v7 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v10 = (char *)&v84 - v9;
  uint64_t v84 = sub_24162EFA8();
  uint64_t v94 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  v92 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v91 = (char *)&v84 - v13;
  MEMORY[0x270FA5388](v14);
  v90 = (char *)&v84 - v15;
  MEMORY[0x270FA5388](v16);
  v18 = (char *)&v84 - v17;
  sub_24162EF48();
  v19 = v1;
  v20 = sub_24162EF98();
  os_log_type_t v21 = sub_2416322E8();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v88 = v5;
  uint64_t v89 = v4;
  v86 = v10;
  v85 = v7;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v95 = swift_slowAlloc();
    v97[0] = v95;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v24 = sub_2416333E8();
    *(void *)&v96[0] = sub_2411B6898(v24, v25, v97);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    if (*(unsigned char *)(*(void *)&v19[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo]
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertileWindowProjectionsEnabled))
      uint64_t v26 = 1702195828;
    else {
      uint64_t v26 = 0x65736C6166;
    }
    if (*(unsigned char *)(*(void *)&v19[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo]
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertileWindowProjectionsEnabled))
      unint64_t v27 = 0xE400000000000000;
    else {
      unint64_t v27 = 0xE500000000000000;
    }
    *(void *)&v96[0] = sub_2411B6898(v26, v27, v97);
    sub_241632C28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v20, v21, "[%{public}s] Fertility projections enabled: %{public}s", (uint8_t *)v23, 0x16u);
    uint64_t v28 = v95;
    swift_arrayDestroy();
    MEMORY[0x245621640](v28, -1, -1);
    MEMORY[0x245621640](v23, -1, -1);

    uint64_t v29 = v84;
    uint64_t v95 = *(void *)(v94 + 8);
    ((void (*)(char *, uint64_t))v95)(v18, v84);
  }
  else
  {

    uint64_t v29 = v84;
    uint64_t v95 = *(void *)(v94 + 8);
    ((void (*)(char *, uint64_t))v95)(v18, v84);
  }
  v30 = v90;
  sub_24162EF48();
  v31 = v19;
  v32 = sub_24162EF98();
  os_log_type_t v33 = sub_2416322E8();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v97[0] = v35;
    *(_DWORD *)uint64_t v34 = 136446466;
    uint64_t v36 = sub_2416333E8();
    *(void *)&v96[0] = sub_2411B6898(v36, v37, v97);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2082;
    if (*(unsigned char *)(*(void *)&v31[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo]
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertileWindowNotificationsEnabled))
      uint64_t v38 = 1702195828;
    else {
      uint64_t v38 = 0x65736C6166;
    }
    if (*(unsigned char *)(*(void *)&v31[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo]
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertileWindowNotificationsEnabled))
      unint64_t v39 = 0xE400000000000000;
    else {
      unint64_t v39 = 0xE500000000000000;
    }
    *(void *)&v96[0] = sub_2411B6898(v38, v39, v97);
    sub_241632C28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v32, v33, "[%{public}s] Fertility notifications enabled: %{public}s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245621640](v35, -1, -1);
    MEMORY[0x245621640](v34, -1, -1);

    v40 = v90;
    uint64_t v41 = v29;
  }
  else
  {

    v40 = v30;
    uint64_t v41 = v29;
  }
  ((void (*)(char *, uint64_t))v95)(v40, v41);
  v42 = v91;
  sub_24162EF48();
  v43 = v31;
  v44 = sub_24162EF98();
  os_log_type_t v45 = sub_2416322E8();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    v97[0] = v47;
    *(_DWORD *)uint64_t v46 = 136446466;
    uint64_t v48 = sub_2416333E8();
    *(void *)&v96[0] = sub_2411B6898(v48, v49, v97);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2082;
    if (*(unsigned char *)(*(void *)&v43[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo]
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertilityTrackingDisplayTypesVisible))
      uint64_t v50 = 1702195828;
    else {
      uint64_t v50 = 0x65736C6166;
    }
    if (*(unsigned char *)(*(void *)&v43[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo]
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertilityTrackingDisplayTypesVisible))
      unint64_t v51 = 0xE400000000000000;
    else {
      unint64_t v51 = 0xE500000000000000;
    }
    *(void *)&v96[0] = sub_2411B6898(v50, v51, v97);
    sub_241632C28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v44, v45, "[%{public}s] Log fertility display types enabled: %{public}s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245621640](v47, -1, -1);
    MEMORY[0x245621640](v46, -1, -1);

    v52 = v91;
    uint64_t v53 = v29;
  }
  else
  {

    v52 = v42;
    uint64_t v53 = v29;
  }
  ((void (*)(char *, uint64_t))v95)(v52, v53);
  v54 = v92;
  sub_24162EF48();
  v55 = v43;
  v56 = sub_24162EF98();
  os_log_type_t v57 = sub_2416322E8();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    v97[0] = v59;
    *(_DWORD *)uint64_t v58 = 136446466;
    uint64_t v60 = sub_2416333E8();
    *(void *)&v96[0] = sub_2411B6898(v60, v61, v97);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2082;
    if (*(unsigned char *)(*(void *)&v55[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo]
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_sexualActivityDisplayTypeVisible))
      uint64_t v62 = 1702195828;
    else {
      uint64_t v62 = 0x65736C6166;
    }
    if (*(unsigned char *)(*(void *)&v55[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo]
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_sexualActivityDisplayTypeVisible))
      unint64_t v63 = 0xE400000000000000;
    else {
      unint64_t v63 = 0xE500000000000000;
    }
    *(void *)&v96[0] = sub_2411B6898(v62, v63, v97);
    sub_241632C28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v56, v57, "[%{public}s] Log sexual activity type enabled: %{public}s", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245621640](v59, -1, -1);
    MEMORY[0x245621640](v58, -1, -1);

    ((void (*)(char *, uint64_t))v95)(v92, v29);
    uint64_t v64 = v88;
  }
  else
  {

    ((void (*)(char *, uint64_t))v95)(v54, v29);
    uint64_t v64 = v88;
  }
  uint64_t v94 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo;
  uint64_t v65 = *(void *)&v55[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo];
  sub_2411A3DF4((uint64_t)&v55[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_pinnedContentManager], (uint64_t)v97);
  v66 = &v55[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_delegate];
  uint64_t v67 = MEMORY[0x245621790](&v55[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_delegate]);
  uint64_t v95 = (uint64_t)v66;
  uint64_t v68 = *((void *)v66 + 1);
  type metadata accessor for MenstrualCyclesOnboardingCoordinator();
  v69 = (void *)swift_allocObject();
  v69[2] = v65;
  v69[3] = v67;
  v69[4] = v68;
  sub_2411A3DF4((uint64_t)v97, (uint64_t)v96);
  type metadata accessor for MenstrualCyclesOnboardingCompletionManager();
  uint64_t v70 = swift_allocObject();
  *(void *)(v70 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v70 + 16) = v65;
  *(void *)(v70 + 32) = v68;
  swift_unknownObjectWeakAssign();
  sub_2411B6CD4(v96, v70 + 40);
  swift_retain_n();
  uint64_t ObjectType = (uint64_t)v55;
  v71 = v55;
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v97);
  v69[5] = v70;
  v69[6] = v71;
  v72 = objc_allocWithZone((Class)type metadata accessor for OnboardingTimelineTutorialViewController());
  uint64_t v73 = swift_retain();
  v74 = (void *)sub_2415F2EB4(v73, v72);
  v75 = (void *)v69[6];
  v69[6] = v74;
  id v76 = v74;

  id v77 = objc_msgSend(v71, sel_navigationItem);
  v78 = v86;
  sub_241631C38();
  uint64_t v79 = v89;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v85, v78, v89);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v80 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v78, v79);
  v81 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v77, sel_setBackButtonTitle_, v81);

  objc_msgSend(v71, sel_showViewController_sender_, v76, 0);
  if (MEMORY[0x245621790](v95))
  {
    uint64_t v82 = *(void *)(v95 + 8);
    uint64_t v83 = swift_getObjectType();
    sub_2414FC4D4(8, (*(unsigned char *)(*(void *)(ObjectType + v94)+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertileWindowProjectionsEnabled) & 1) == 0, v83, v82);
    swift_release();

    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
}

void sub_241473894(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x245621790](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = v3
       + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_delegate;
    if (MEMORY[0x245621790](v3+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_delegate))
    {
      uint64_t v6 = *(void *)(v5 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v4, ObjectType, v6);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t type metadata accessor for MenstrualCyclesOnboardingFertilityTrackingViewController()
{
  return self;
}

uint64_t sub_241473B08(char a1, void *a2, uint64_t (*a3)(void))
{
  if (a1)
  {
    sub_2411B9D00(0, (unint64_t *)&unk_268D00700);
    id v6 = sub_2411D319C(1);
    objc_msgSend(a2, sel_presentViewController_animated_completion_, v6, 1, 0);
  }
  return a3(a1 & 1);
}

uint64_t sub_241473C20(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo;
  swift_retain();
  uint64_t v5 = sub_24162BB08();
  id v6 = sub_2413AC144(1);
  if (v5 >= v6[2]) {
    goto LABEL_25;
  }
  if (v5 < 0)
  {
    __break(1u);
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unsigned int v7 = *((unsigned __int8 *)v6 + v5 + 32);
  swift_release();
  swift_bridgeObjectRelease();
  if (v7 < 2)
  {
    if (sub_241497E98(1, *(void *)(*(void *)(v1 + v4)+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_suppressedAnalysisKinds)))
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v8 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      uint64_t v9 = (void *)sub_24162BA88();
      id v10 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v8, v9);

      type metadata accessor for OnboardingCycleFactorsForcedOffTableViewCell();
      uint64_t v11 = (void *)swift_dynamicCastClassUnconditional();
      sub_2413AE710(v7, 1);
      sub_241340D60();
      swift_bridgeObjectRelease();
      uint64_t v12 = self;
      id v13 = v10;
      id v14 = objc_msgSend(v12, sel_hkmc_cycleLogCellBackgroundColor);
      objc_msgSend(v11, sel_setBackgroundColor_, v14);

      id v15 = v13;
LABEL_23:
      unint64_t v37 = v15;
      sub_2414554EC(8);
      uint64_t v38 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setAccessibilityIdentifier_, v38);

      return (uint64_t)v11;
    }
    id v26 = objc_msgSend(self, sel_reuseIdentifier);
    if (v26)
    {
      unint64_t v27 = v26;
      uint64_t v28 = (void *)sub_24162BA88();
      id v19 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v27, v28);

      self;
      uint64_t v11 = (void *)swift_dynamicCastObjCClassUnconditional();
      objc_msgSend(v11, sel_setDelegate_, v2);
      id v29 = objc_msgSend(v11, sel_textLabel);
      if (v29)
      {
        v30 = v29;
        sub_2413AE710(v7, 1);
        v31 = (void *)sub_241631CC8();
        swift_bridgeObjectRelease();
        objc_msgSend(v30, sel_setText_, v31);
      }
      id v32 = objc_msgSend(v11, sel_textLabel);
      if (v32)
      {
        os_log_type_t v33 = v32;
        objc_msgSend(v32, sel_setNumberOfLines_, 0);
      }
      unint64_t v25 = &OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertileWindowProjectionsEnabled;
      if (v7) {
        unint64_t v25 = &OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertileWindowNotificationsEnabled;
      }
LABEL_22:
      objc_msgSend(v11, sel_setOn_, *(unsigned __int8 *)(*(void *)(v2 + v4) + *v25));
      uint64_t v34 = self;
      id v35 = v19;
      id v36 = objc_msgSend(v34, sel_hkmc_cycleLogCellBackgroundColor);
      objc_msgSend(v11, sel_setBackgroundColor_, v36);

      id v15 = v35;
      goto LABEL_23;
    }
    goto LABEL_27;
  }
  if (v7 - 2 < 2)
  {
    id v16 = objc_msgSend(self, sel_reuseIdentifier);
    if (v16)
    {
      uint64_t v17 = v16;
      v18 = (void *)sub_24162BA88();
      id v19 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v17, v18);

      self;
      uint64_t v11 = (void *)swift_dynamicCastObjCClassUnconditional();
      objc_msgSend(v11, sel_setDelegate_, v2);
      id v20 = objc_msgSend(v11, sel_textLabel);
      if (v20)
      {
        os_log_type_t v21 = v20;
        sub_2413AE710(v7, 1);
        BOOL v22 = (void *)sub_241631CC8();
        swift_bridgeObjectRelease();
        objc_msgSend(v21, sel_setText_, v22);
      }
      id v23 = objc_msgSend(v11, sel_textLabel);
      if (v23)
      {
        uint64_t v24 = v23;
        objc_msgSend(v23, sel_setNumberOfLines_, 0);
      }
      unint64_t v25 = &OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_sexualActivityDisplayTypeVisible;
      if (v7 != 3) {
        unint64_t v25 = &OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_fertilityTrackingDisplayTypesVisible;
      }
      goto LABEL_22;
    }
    goto LABEL_26;
  }
LABEL_28:
  uint64_t result = sub_241633038();
  __break(1u);
  return result;
}

void sub_2414742D8(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_24162B7E8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_241631CA8();
  v30[0] = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v30 - v10;
  uint64_t v12 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo;
  uint64_t v13 = *(void *)(v2
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo);
  swift_retain();
  id v14 = sub_2413AC144(1);
  if (*((void *)v14 + 2) <= a2)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (a2 < 0)
    {
      __break(1u);
      goto LABEL_10;
    }
    char v15 = v14[a2 + 32];
    swift_release();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_2413AC2C8(v15, 1);
    uint64_t v17 = v16;
    swift_release();
    if (v17)
    {
      v18 = (void *)sub_241631CC8();
      id v19 = objc_msgSend(a1, sel_dequeueReusableHeaderFooterViewWithIdentifier_, v18);

      if (v19)
      {
        type metadata accessor for TappableTableViewFooter();
        uint64_t v13 = swift_dynamicCastClassUnconditional();
        sub_241631C38();
        uint64_t v12 = v30[0];
        (*(void (**)(char *, char *, uint64_t))(v30[0] + 16))(v8, v11, v6);
        if (qword_26B0131F0 == -1)
        {
LABEL_6:
          id v20 = (id)qword_26B0181A0;
          sub_24162B7D8();
          uint64_t v21 = sub_241631D38();
          uint64_t v23 = v22;
          (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v6);
          uint64_t v24 = swift_allocObject();
          swift_unknownObjectWeakInit();
          unint64_t v25 = *(void **)(v13 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23TappableTableViewFooter_footerTextView);
          swift_retain();
          _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          id v26 = v25;
          unint64_t v27 = (void *)sub_241631CC8();
          swift_bridgeObjectRelease();
          objc_msgSend(v26, sel_setText_, v27);

          uint64_t v28 = (uint64_t *)(v13 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23TappableTableViewFooter_highlightedText);
          *uint64_t v28 = v21;
          v28[1] = v23;
          _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          swift_bridgeObjectRelease();
          id v29 = (void (**)())(v13 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23TappableTableViewFooter_tapCompletion);
          *id v29 = sub_241475788;
          v29[1] = (void (*)())v24;
          swift_retain();
          swift_release();
          sub_241456330();
          swift_bridgeObjectRelease();
          swift_release_n();
          swift_bridgeObjectRelease();
          return;
        }
LABEL_10:
        swift_once();
        goto LABEL_6;
      }
      __break(1u);
    }
  }
}

void sub_2414746D0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x245621790](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = *(void *)(v2
                   + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo);
    uint64_t v5 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_suppressedAnalysisKinds;
    char v6 = sub_241497E98(1, *(void *)(v4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_suppressedAnalysisKinds))&& *(void *)(*(void *)(v4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_countryGatingHandler)+ 48) != 0;
    if (!sub_241497E98(1, *(void *)(v4 + v5)))
    {
      if (*(void *)(*(void *)(v4
                                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_countryGatingHandler)
                     + 56))
        char v6 = 2;
    }
    uint64_t v7 = (objc_class *)type metadata accessor for LearnMoreViewController();
    uint64_t v8 = objc_allocWithZone(v7);
    *(void *)&v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreViewController____lazy_storage___doneBarButtonItem] = 0;
    v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreViewController_presentedModally] = 1;
    v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreViewController_learnMoreType] = v6;
    v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23LearnMoreViewController_learnMoreSource] = 4;
    v11.receiver = v8;
    v11.super_class = v7;
    id v9 = objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, 0, 0);
    sub_2412CCF34();
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v9);
    objc_msgSend(v3, sel_presentViewController_animated_completion_, v10, 1, 0);
  }
}

void *sub_2414748C8(void *a1, int a2)
{
  uint64_t v3 = v2;
  sub_241227EB0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162BB18();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v14 = MEMORY[0x270FA5388](v13).n128_u64[0];
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t result = objc_msgSend(v3, sel_tableView, v14);
  if (!result) {
    goto LABEL_22;
  }
  if (!a1)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v18 = result;
  id v19 = objc_msgSend(result, sel_indexPathForCell_, a1);

  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    return (void *)sub_2412556D4((uint64_t)v8);
  }
  LODWORD(v51) = a2;
  v52 = v16;
  sub_24162BAA8();

  id v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v20(v8, v12, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return (void *)sub_2412556D4((uint64_t)v8);
  }
  uint64_t v21 = v52;
  v20(v52, v8, v9);
  uint64_t v22 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_userInfo;
  swift_retain();
  uint64_t v23 = sub_24162BB08();
  char v24 = v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_topic];
  uint64_t result = sub_2413AC144(v24);
  if (v23 >= result[2])
  {
    swift_release();
    swift_bridgeObjectRelease();
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v21, v9);
  }
  if (v23 < 0)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int v25 = *((unsigned __int8 *)result + v23 + 32);
  swift_release();
  swift_bridgeObjectRelease();
  sub_2413ACC24(v51 & 1, v25, v24);
  if ((v25 - 2) < 3) {
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v52, v9);
  }
  if (v25)
  {
    if (v51)
    {
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = a1;
      uint64_t v37 = *(void *)&v3[v22];
      uint64_t v38 = (void *)swift_allocObject();
      v38[2] = v3;
      v38[3] = sub_24147562C;
      v38[4] = v36;
      unint64_t v39 = self;
      id v40 = a1;
      swift_retain();
      uint64_t v41 = v3;
      swift_retain();
      id v42 = objc_msgSend(v39, sel_currentNotificationCenter);
      v43 = (void *)swift_allocObject();
      v43[2] = v37;
      v43[3] = sub_241475694;
      v43[4] = v38;
      os_log_type_t v57 = sub_2413AE378;
      uint64_t v58 = v43;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v54 = 1107296256;
      v55 = sub_2412A82A0;
      v56 = &unk_26F573990;
      v44 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v42, sel_getNotificationSettingsWithCompletionHandler_, v44);
      _Block_release(v44);
      swift_release();
      swift_release();
      swift_release();
    }
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v52, v9);
  }
  uint64_t result = objc_msgSend(v3, sel_tableView);
  id v26 = result;
  if (v51)
  {
    if (result)
    {
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = a1;
      *(void *)(v27 + 24) = v3;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = sub_241475570;
      *(void *)(v28 + 24) = v27;
      os_log_type_t v57 = sub_241475798;
      uint64_t v58 = (void *)v28;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v54 = 1107296256;
      v55 = sub_241471F78;
      v56 = &unk_26F573878;
      id v29 = _Block_copy(&aBlock);
      id v30 = a1;
      v31 = v3;
      swift_release();
      uint64_t v32 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v32;
      *(void *)(v33 + 24) = a1;
      os_log_type_t v57 = sub_241475624;
      uint64_t v58 = (void *)v33;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v54 = 1107296256;
      v55 = sub_241563BBC;
      v56 = &unk_26F5738F0;
      uint64_t v34 = _Block_copy(&aBlock);
      id v35 = v30;
      swift_release();
      objc_msgSend(v26, sel_performBatchUpdates_completion_, v29, v34, v51);
LABEL_20:
      _Block_release(v34);
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v52, v9);
      return (void *)swift_release();
    }
    goto LABEL_24;
  }
  id v51 = result;
  if (result)
  {
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = a1;
    *(void *)(v45 + 24) = v3;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = sub_2414754FC;
    *(void *)(v46 + 24) = v45;
    os_log_type_t v57 = sub_2411D3DA4;
    uint64_t v58 = (void *)v46;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v54 = 1107296256;
    v55 = sub_241471F78;
    v56 = &unk_26F5737B0;
    id v29 = _Block_copy(&aBlock);
    id v47 = a1;
    uint64_t v48 = v3;
    swift_release();
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = a1;
    os_log_type_t v57 = sub_2413B247C;
    uint64_t v58 = (void *)v49;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v54 = 1107296256;
    v55 = sub_241563BBC;
    v56 = &unk_26F573800;
    uint64_t v34 = _Block_copy(&aBlock);
    id v50 = v47;
    swift_release();
    id v26 = v51;
    objc_msgSend(v51, sel_performBatchUpdates_completion_, v29, v34, v51);
    goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_24147509C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x245621790](v4);
  if (v5)
  {
    if (a3)
    {
      uint64_t v6 = (char *)v5;
      objc_msgSend(a3, sel_setUserInteractionEnabled_, 1);
      id v7 = objc_msgSend(v6, sel_tableView);
      if (v7)
      {
        uint64_t v8 = v7;
        objc_msgSend(v7, sel_layoutIfNeeded);

        id v9 = sub_241471FA0();
        objc_msgSend(v9, sel_constant);
        double v11 = v10;

        id v12 = objc_msgSend(v6, sel_tableView);
        if (v12)
        {
          uint64_t v13 = v12;
          objc_msgSend(v12, sel_contentSize);
          double v15 = v14;

          if (v11 == v15)
          {
LABEL_10:

            return;
          }
          id v16 = objc_msgSend(v6, sel_tableView);
          if (v16)
          {
            uint64_t v17 = v16;
            objc_msgSend(v16, sel_contentSize);
            uint64_t v19 = v18;

            *(void *)&v6[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin56MenstrualCyclesOnboardingFertilityTrackingViewController_tableViewHeight] = v19;
            id v20 = sub_241471FA0();
            id v21 = objc_msgSend(v6, sel_tableView);
            if (v21)
            {
              uint64_t v22 = v21;
              objc_msgSend(v21, sel_contentSize);
              double v24 = v23;

              objc_msgSend(v20, sel_setConstant_, v24);
              id v25 = objc_msgSend(v6, sel_tableView);
              if (v25)
              {
                id v26 = v25;
                objc_msgSend(v25, sel_layoutIfNeeded);

                goto LABEL_10;
              }
LABEL_17:
              __break(1u);
              return;
            }
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
LABEL_15:
          __break(1u);
          goto LABEL_16;
        }
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
}

void sub_241475268(void *a1, void *a2, uint64_t a3, SEL *a4)
{
  uint64_t v8 = sub_24162BA28();
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)&double v10 = MEMORY[0x270FA5388](v8).n128_u64[0];
  id v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    objc_msgSend(a1, sel_setUserInteractionEnabled_, 0, v10);
    id v13 = objc_msgSend(a2, sel_tableView);
    if (v13)
    {
      double v14 = v13;
      v16[1] = a3;
      sub_241475740((unint64_t *)&qword_268CFE770, MEMORY[0x263F07978]);
      sub_2414756E8();
      sub_241475740((unint64_t *)&qword_268CFE780, (void (*)(uint64_t))sub_2414756E8);
      sub_241632D08();
      double v15 = (void *)sub_24162BA18();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      objc_msgSend(v14, *a4, v15, 0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_2414754BC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2414754FC()
{
  sub_241475268(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_26F567660, (SEL *)&selRef_deleteSections_withRowAnimation_);
}

uint64_t sub_241475528()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241475538()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_241475570()
{
  sub_241475268(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_26F567638, (SEL *)&selRef_insertSections_withRowAnimation_);
}

uint64_t sub_24147559C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2414755AC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2414755E4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241475624(uint64_t a1)
{
  sub_24147509C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_24147562C(id result)
{
  if (result)
  {
    uint64_t result = *(id *)(v1 + 16);
    if (result) {
      return objc_msgSend(result, sel_setOn_animated_, 0, 1);
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_241475654()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241475694(char a1)
{
  return sub_241473B08(a1, *(void **)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_2414756A0()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2414756E8()
{
  if (!qword_268D00710)
  {
    unint64_t v0 = sub_241631FA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00710);
    }
  }
}

uint64_t sub_241475740(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241475788()
{
  sub_2414746D0(v0);
}

void sub_241475790(uint64_t a1)
{
  sub_241473894(a1, v1);
}

uint64_t sub_2414757C4()
{
  sub_241267528(0, (unint64_t *)&unk_26B013110, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v17 - v1;
  sub_241267528(0, &qword_26B0130C8, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v17 - v4;
  uint64_t v6 = sub_24162B138();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v11 = sub_24162BA08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  uint64_t v12 = sub_24162BA68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  sub_24162B118();
  id v13 = (void *)sub_24162B068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v14 = objc_msgSend(ObjCClassFromMetadata, sel_localizedStringFromDateComponents_unitsStyle_, v13, 3);

  if (!v14) {
    return 0;
  }
  uint64_t v15 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();

  return v15;
}

uint64_t sub_241475AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_241267528(0, (unint64_t *)&unk_26B013110, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v22 - v6;
  sub_241267528(0, &qword_26B0130C8, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v8 - 8);
  double v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_24162B138();
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)&double v13 = MEMORY[0x270FA5388](v11).n128_u64[0];
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v2, sel_setAllowedUnits_, 16, v13);
  objc_msgSend(v2, sel_setUnitsStyle_, 3);
  objc_msgSend(v2, sel_setFormattingContext_, a2);
  uint64_t v16 = sub_24162BA08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
  uint64_t v17 = sub_24162BA68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  sub_24162B118();
  uint64_t v18 = (void *)sub_24162B068();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  id v19 = objc_msgSend(v3, sel_stringFromDateComponents_, v18);

  if (!v19) {
    return 0;
  }
  uint64_t v20 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();

  return v20;
}

uint64_t sub_241475DF4()
{
  sub_241267528(0, (unint64_t *)&unk_26B013110, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v17 - v1;
  sub_241267528(0, &qword_26B0130C8, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v17 - v4;
  uint64_t v6 = sub_24162B138();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v11 = sub_24162BA08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  uint64_t v12 = sub_24162BA68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  sub_24162B118();
  double v13 = (void *)sub_24162B068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v14 = objc_msgSend(ObjCClassFromMetadata, sel_localizedStringFromDateComponents_unitsStyle_, v13, 3);

  if (!v14) {
    return 0;
  }
  uint64_t v15 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();

  return v15;
}

uint64_t sub_2414760F4()
{
  sub_241267528(0, (unint64_t *)&unk_26B013110, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v17 - v1;
  sub_241267528(0, &qword_26B0130C8, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v17 - v4;
  uint64_t v6 = sub_24162B138();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v11 = sub_24162BA08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  uint64_t v12 = sub_24162BA68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  sub_24162B118();
  double v13 = (void *)sub_24162B068();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v14 = objc_msgSend(ObjCClassFromMetadata, sel_localizedStringFromDateComponents_unitsStyle_, v13, 3);

  if (!v14) {
    return 0;
  }
  uint64_t v15 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();

  return v15;
}

id sub_2414763F4(double a1, double a2, double a3)
{
  return sub_2414763FC(a1, a2, a3, a3);
}

id sub_2414763FC(double a1, double a2, double a3, double a4)
{
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bezierPathWithOvalInRect_, a1 - a3 * 0.5, a2 - a4 * 0.5, a3, a4);

  return v4;
}

uint64_t sub_241476474()
{
  uint64_t v0 = self;
  uint64_t v1 = (void *)*MEMORY[0x263F83570];
  id v2 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x263F83570]);
  id v3 = objc_msgSend(self, sel_configurationWithFont_scale_, v2, -1);
  sub_241367288();
  id v4 = v1;
  uint64_t v5 = (void *)sub_241632978();

  if (v5
    && (id v6 = objc_msgSend(v5, sel_imageWithConfiguration_, v3), v5, v6))
  {
    uint64_t v7 = self;
    id v8 = v6;
    id v9 = objc_msgSend(v7, sel_systemGrayColor);
    id v10 = objc_msgSend(v8, sel_imageWithTintColor_, v9);

    id v11 = objc_allocWithZone(MEMORY[0x263F824E8]);
    id v12 = v10;
    id v13 = objc_msgSend(v11, sel_init);
    objc_msgSend(v12, sel_size);
    double v15 = v14;
    objc_msgSend(v12, sel_size);
    objc_msgSend(v13, sel_setFrame_, 0.0, 0.0, v15, v16);
    objc_msgSend(v13, sel_setBackgroundImage_forState_, v12, 0);

    return (uint64_t)v13;
  }
  else
  {
    uint64_t result = sub_241633038();
    __break(1u);
  }
  return result;
}

uint64_t sub_2414766C8()
{
  uint64_t v1 = sub_24162B7E8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_241631CA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v104[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  id v8 = &v104[-v7];
  uint64_t v9 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v11 = v10;
  if (v9 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
    return sub_2414771FC();
  }
  char v14 = sub_241633218();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14) {
    return sub_2414771FC();
  }
  uint64_t v15 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v17 = v16;
  if (v15 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v17 == v18)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  char v20 = sub_241633218();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20)
  {
LABEL_19:
    uint64_t v28 = v0 + *(int *)(type metadata accessor for CycleLogModel() + 24);
    id v29 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v28
                                                                + *(int *)(type metadata accessor for CycleDay() + 20)), sel_daySummary));
    id v26 = v29;
    if (!v29) {
      return (uint64_t)v26;
    }
    id v30 = objc_msgSend(v29, sel_cervicalMucusQuality);

    return sub_2415941BC((uint64_t)v30);
  }
  uint64_t v21 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v23 = v22;
  if (v21 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
    return sub_24147741C();
  }
  char v31 = sub_241633218();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31) {
    return sub_24147741C();
  }
  uint64_t v32 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v34 = v33;
  if (v32 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v34 == v35)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_27;
  }
  char v36 = sub_241633218();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v36 & 1) == 0)
  {
    uint64_t v41 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    uint64_t v43 = v42;
    if (v41 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v43 == v44)
    {
      swift_bridgeObjectRelease_n();
LABEL_38:
      uint64_t v46 = v0 + *(int *)(type metadata accessor for CycleLogModel() + 24);
      id v47 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v46
                                                                  + *(int *)(type metadata accessor for CycleDay() + 20)), sel_daySummary));
      id v26 = v47;
      if (!v47) {
        return (uint64_t)v26;
      }
      id v48 = objc_msgSend(v47, sel_menstrualFlow);

      uint64_t v49 = 0;
      return sub_24160AD40(v49, (uint64_t)v48);
    }
    char v45 = sub_241633218();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_38;
    }
    uint64_t v50 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    uint64_t v52 = v51;
    if (v50 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v52 == v53)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v54 = sub_241633218();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v54 & 1) == 0)
      {
        uint64_t v57 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
        uint64_t v59 = v58;
        if (v57 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v59 == v60)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v61 = sub_241633218();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v61 & 1) == 0)
          {
            uint64_t v64 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
            uint64_t v66 = v65;
            if (v64 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v66 == v67)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v68 = sub_241633218();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v68 & 1) == 0)
              {
                uint64_t v72 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
                uint64_t v74 = v73;
                if (v72 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v74 == v75)
                {
                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  char v76 = sub_241633218();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v76 & 1) == 0)
                  {
                    uint64_t v80 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
                    uint64_t v82 = v81;
                    if (v80 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v82 == v83)
                    {
                      swift_bridgeObjectRelease_n();
                    }
                    else
                    {
                      char v84 = sub_241633218();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v84 & 1) == 0)
                      {
                        uint64_t v88 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
                        uint64_t v90 = v89;
                        if (v88 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v90 == v91)
                        {
                          swift_bridgeObjectRelease_n();
                        }
                        else
                        {
                          char v92 = sub_241633218();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if ((v92 & 1) == 0)
                          {
                            uint64_t v96 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
                            uint64_t v98 = v97;
                            if (v96 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0()
                              && v98 == v99)
                            {
                              swift_bridgeObjectRelease_n();
                            }
                            else
                            {
                              char v100 = sub_241633218();
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              if ((v100 & 1) == 0) {
                                return 0;
                              }
                            }
                            uint64_t v101 = v0 + *(int *)(type metadata accessor for CycleLogModel() + 24);
                            id v102 = objc_msgSend(*(id *)(v101 + *(int *)(type metadata accessor for CycleDay() + 20)), sel_daySummary);
                            id v26 = v102;
                            if (!v102) {
                              return (uint64_t)v26;
                            }
                            id v103 = objc_msgSend(v102, sel_symptoms);

                            return sub_24159A1C4((uint64_t)v103);
                          }
                        }
                        uint64_t v93 = v0 + *(int *)(type metadata accessor for CycleLogModel() + 24);
                        id v94 = objc_msgSend(*(id *)(v93 + *(int *)(type metadata accessor for CycleDay() + 20)), sel_daySummary);
                        id v26 = v94;
                        if (!v94) {
                          return (uint64_t)v26;
                        }
                        id v95 = objc_msgSend(v94, sel_sexualActivity);

                        return sub_2412B1F20((uint64_t)v95);
                      }
                    }
                    uint64_t v85 = v0 + *(int *)(type metadata accessor for CycleLogModel() + 24);
                    id v86 = objc_msgSend(*(id *)(v85 + *(int *)(type metadata accessor for CycleDay() + 20)), sel_daySummary);
                    id v26 = v86;
                    if (!v86) {
                      return (uint64_t)v26;
                    }
                    id v87 = objc_msgSend(v86, sel_progesteroneTestResult);

                    return sub_24127406C((uint64_t)v87);
                  }
                }
                uint64_t v77 = v0 + *(int *)(type metadata accessor for CycleLogModel() + 24);
                id v78 = objc_msgSend(*(id *)(v77 + *(int *)(type metadata accessor for CycleDay() + 20)), sel_daySummary);
                id v26 = v78;
                if (!v78) {
                  return (uint64_t)v26;
                }
                id v79 = objc_msgSend(v78, sel_pregnancyTestResult);

                return sub_2414D6A9C((uint64_t)v79);
              }
            }
            uint64_t v69 = v0 + *(int *)(type metadata accessor for CycleLogModel() + 24);
            id v70 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v69
                                                                        + *(int *)(type metadata accessor for CycleDay()
                                                                                 + 20)), sel_daySummary));
            id v26 = v70;
            if (!v70) {
              return (uint64_t)v26;
            }
            id v71 = objc_msgSend(v70, sel_ovulationTestResult);

            return sub_24161B65C((uint64_t)v71);
          }
        }
        uint64_t v62 = v0 + *(int *)(type metadata accessor for CycleLogModel() + 24);
        id v63 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v62
                                                                    + *(int *)(type metadata accessor for CycleDay() + 20)), sel_daySummary));
        id v26 = v63;
        if (!v63) {
          return (uint64_t)v26;
        }
        id v48 = objc_msgSend(v63, sel_bleedingAfterPregnancyFlow);

        uint64_t v49 = 2;
        return sub_24160AD40(v49, (uint64_t)v48);
      }
    }
    uint64_t v55 = v0 + *(int *)(type metadata accessor for CycleLogModel() + 24);
    id v56 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v55
                                                                + *(int *)(type metadata accessor for CycleDay() + 20)), sel_daySummary));
    id v26 = v56;
    if (!v56) {
      return (uint64_t)v26;
    }
    id v48 = objc_msgSend(v56, sel_bleedingInPregnancyFlow);

    uint64_t v49 = 1;
    return sub_24160AD40(v49, (uint64_t)v48);
  }
LABEL_27:
  uint64_t v37 = v0 + *(int *)(type metadata accessor for CycleLogModel() + 24);
  id v38 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v37
                                                              + *(int *)(type metadata accessor for CycleDay() + 20)), sel_daySummary));
  if (!v38) {
    return 0;
  }
  unint64_t v39 = v38;
  if (!objc_msgSend(v38, sel_intermenstrualBleeding))
  {

    return 0;
  }
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v5, v8, v2);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v40 = (id)qword_26B0181A0;
  sub_24162B7D8();
  id v26 = (void *)sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);

  return (uint64_t)v26;
}

uint64_t sub_2414771FC()
{
  sub_2412A0260();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for CycleLogModel();
  uint64_t v7 = *(void **)(v0 + v6[10]);
  id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + v6[6]
                                                             + *(int *)(type metadata accessor for CycleDay() + 20)), sel_daySummary));
  id v9 = objc_msgSend(v8, sel_basalBodyTemperature);

  if (!v9) {
    return 0;
  }
  uint64_t v10 = *(void **)(v0 + v6[9]);
  id v11 = v9;
  id v12 = objc_msgSend(v10, sel__foundationUnit);
  if (!v12)
  {

    return 0;
  }
  id v13 = v12;
  objc_msgSend(v11, sel_doubleValueForUnit_, v10);
  sub_2411B9D00(0, (unint64_t *)&qword_268CFC020);
  id v14 = v13;
  sub_24162AE48();
  uint64_t v15 = (void *)sub_24162AE38();
  id v16 = objc_msgSend(v7, sel_stringFromMeasurement_, v15);

  uint64_t v17 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

  return v17;
}

uint64_t sub_24147741C()
{
  uint64_t v1 = sub_24162B7E8();
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v39 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_241631CA8();
  uint64_t v40 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v38 = (char *)&v35 - v6;
  uint64_t v7 = sub_241631AC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v13 = (char *)&v35 - v12;
  uint64_t v14 = type metadata accessor for CycleLogModel();
  uint64_t v15 = v0 + *(int *)(v14 + 24);
  uint64_t v16 = *(void *)(v8 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v16)(v13, v15, v7);
  ((void (*)(char *, uint64_t, uint64_t))v16)(v10, v0 + *(int *)(v14 + 28), v7);
  sub_24162E778();
  uint64_t v17 = 0;
  if ((sub_24162E768() & 1) == 0)
  {
    id v18 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v15
                                                                + *(int *)(type metadata accessor for CycleDay() + 20)), sel_cycleFactors));
    if (!v18) {
      return 0;
    }
    sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
    unint64_t v19 = sub_241631F28();

    if (v19 >> 62)
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v33 = sub_241633068();
      swift_bridgeObjectRelease();
      if (v33)
      {
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v20 = sub_241633068();
        swift_bridgeObjectRelease();
        if (!v20)
        {
          char v36 = (uint64_t *)v3;
          swift_bridgeObjectRelease();
          uint64_t v23 = MEMORY[0x263F8EE78];
          goto LABEL_14;
        }
LABEL_5:
        char v36 = (uint64_t *)v3;
        uint64_t v41 = MEMORY[0x263F8EE78];
        uint64_t v21 = &v41;
        sub_24149DD78(0, v20 & ~(v20 >> 63), 0);
        if (v20 < 0)
        {
          __break(1u);
          goto LABEL_23;
        }
        uint64_t v22 = 0;
        uint64_t v23 = v41;
        do
        {
          if ((v19 & 0xC000000000000001) != 0) {
            id v24 = (id)MEMORY[0x245620370](v22, v19);
          }
          else {
            id v24 = *(id *)(v19 + 8 * v22 + 32);
          }
          id v25 = v24;
          uint64_t v26 = sub_2413CCEF8((uint64_t)objc_msgSend(v24, sel_hkmc_cycleFactor));
          uint64_t v28 = v27;

          uint64_t v41 = v23;
          unint64_t v30 = *(void *)(v23 + 16);
          unint64_t v29 = *(void *)(v23 + 24);
          if (v30 >= v29 >> 1)
          {
            sub_24149DD78(v29 > 1, v30 + 1, 1);
            uint64_t v23 = v41;
          }
          ++v22;
          *(void *)(v23 + 16) = v30 + 1;
          uint64_t v31 = v23 + 16 * v30;
          *(void *)(v31 + 32) = v26;
          *(void *)(v31 + 40) = v28;
        }
        while (v20 != v22);
        swift_bridgeObjectRelease();
LABEL_14:
        uint64_t v41 = v23;
        uint64_t v3 = (uint64_t)v38;
        sub_241631C38();
        uint64_t v16 = v40;
        uint64_t v21 = v36;
        (*(void (**)(char *, uint64_t, uint64_t *))(v40 + 16))(v37, v3, v36);
        if (qword_26B0131F0 == -1)
        {
LABEL_15:
          id v32 = (id)qword_26B0181A0;
          sub_24162B7D8();
          sub_241631D38();
          (*(void (**)(uint64_t, uint64_t *))(v16 + 8))(v3, v21);
          sub_2412A032C();
          sub_2413FF558();
          uint64_t v17 = sub_241631B98();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v17;
        }
LABEL_23:
        swift_once();
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v20) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return v17;
}

id sub_241477934(char a1)
{
  id v1 = objc_msgSend(self, *off_2650E7F38[a1]);

  return v1;
}

id sub_241477988(char a1)
{
  id v1 = objc_msgSend(self, *off_2650E7F68[a1]);

  return v1;
}

double sub_2414779DC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_241477C0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_241489380, (uint64_t (*)(void))sub_241377B9C).n128_u64[0];
  return result;
}

uint64_t sub_241477A4C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2416322D8();
    uint64_t v23 = (void *)sub_241630908();
    sub_24162EE48();
  }
  sub_2416301F8();
  long long v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v13 + 57);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[9] = v31;
  a9[10] = v32;
  a9[11] = v33;
  a9[5] = v27;
  a9[6] = v28;
  a9[7] = v29;
  a9[8] = v30;

  return sub_2413779FC((uint64_t)v13);
}

__n128 sub_241477C0C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t, uint64_t), uint64_t (*a17)(void))
{
  uint64_t v18 = v17;
  uint64_t v20 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2416322D8();
    long long v29 = (void *)sub_241630908();
    sub_24162EE48();

    uint64_t v20 = a17;
  }
  sub_2416301F8();
  a16(v18, a9);
  long long v30 = (_OWORD *)(a9 + *(int *)(v20(0) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  _OWORD *v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  void v30[2] = v34;
  v30[3] = v35;
  return result;
}

double sub_241477DE0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_241477C0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_24148891C, (uint64_t (*)(void))sub_241489098).n128_u64[0];
  return result;
}

uint64_t sub_241477E50@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v31 = a7;
  int v30 = a4;
  id v29 = a3;
  *a8 = swift_getKeyPath();
  sub_241483B08(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = type metadata accessor for EditPregnancyView(0);
  type metadata accessor for PregnancyDatesInputViewModel();
  sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  swift_retain();
  sub_241631388();
  uint64_t v34 = type metadata accessor for PregnancyOffboardingCoordinator();
  __n128 v35 = &off_26F573AD8;
  v33[0] = a5;
  type metadata accessor for EditPregnancyView.ViewModel(0);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = sub_241192BB0((uint64_t)v33, v34);
  __n128 v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (uint64_t *)((char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
  uint64_t v20 = *v18;
  swift_unknownObjectRetain();
  swift_retain();
  id v21 = a2;
  id v22 = v29;
  swift_retain();
  uint64_t v23 = sub_2414855E8(v21, v22, v30, v20, a1, a6, v31, v14);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v33);
  long long v24 = (uint64_t *)((char *)a8 + *(int *)(v13 + 24));
  uint64_t v32 = v23;
  sub_241631108();
  swift_unknownObjectRelease();
  uint64_t v25 = v33[0];
  uint64_t v26 = v33[1];
  swift_release();

  uint64_t result = swift_release();
  *long long v24 = v25;
  v24[1] = v26;
  return result;
}

uint64_t sub_2414780EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24147829C(a1, &OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__pregnancyStartDate, a2);
}

uint64_t sub_241478100(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_24162B718();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = *a2;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_24162BB38();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_241478288@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24147829C(a1, &OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__pregnancyEndDate, a2);
}

uint64_t sub_24147829C@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_24162BB48();
  swift_release();
  uint64_t v6 = v5 + *a2;
  swift_beginAccess();
  uint64_t v7 = sub_24162B718();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t sub_24147839C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_24162B718();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = *a2;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_24162BB38();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

int64x2_t sub_241478524()
{
  int64x2_t result = vdupq_n_s64(0x4054000000000000uLL);
  xmmword_268D240D0 = (__int128)result;
  return result;
}

void sub_241478538()
{
  qword_268D240E0 = 0x4010000000000000;
}

void sub_241478548()
{
  qword_268D240E8 = 0x402E000000000000;
}

void sub_241478558()
{
  qword_268D240F0 = 0x402E000000000000;
}

void sub_241478568()
{
  qword_268D240F8 = 0x4024000000000000;
}

void sub_241478578()
{
  qword_268D24100 = 0x4041000000000000;
}

uint64_t sub_241478588()
{
  uint64_t v0 = type metadata accessor for EditPregnancyView(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v36 = (uint64_t)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24162B718();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v30 - v7;
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v34 = v9;
  sub_241631368();
  uint64_t v10 = v42;
  swift_getKeyPath();
  uint64_t v42 = v10;
  uint64_t v33 = sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_24162BB48();
  swift_release();
  uint64_t v11 = v10 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__pregnancyStartDate;
  swift_beginAccess();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v12(v8, v11, v2);
  swift_release();
  uint64_t v13 = v0;
  uint64_t v14 = *(int *)(v0 + 24);
  uint64_t v15 = v35;
  __n128 v16 = (uint64_t *)(v35 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  uint64_t v40 = v18;
  uint64_t v41 = v17;
  sub_241483B08(0, &qword_268D00A40, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B5D0]);
  uint64_t v32 = v19;
  sub_241631118();
  v12(v5, v37 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_oldStartDate, v2);
  swift_release();
  LOBYTE(v11) = sub_24162B698();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20(v5, v2);
  v20(v8, v2);
  uint64_t v21 = v15;
  uint64_t v22 = v36;
  sub_241489398(v21, v36, type metadata accessor for EditPregnancyView);
  if (v11)
  {
    uint64_t v31 = v13;
    sub_241631368();
    uint64_t v23 = v40;
    swift_getKeyPath();
    uint64_t v40 = v23;
    sub_24162BB48();
    swift_release();
    uint64_t v24 = v23 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__pregnancyEndDate;
    swift_beginAccess();
    v12(v8, v24, v2);
    uint64_t v22 = v36;
    swift_release();
    uint64_t v25 = (uint64_t *)(v22 + *(int *)(v31 + 24));
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v37 = v27;
    uint64_t v38 = v26;
    sub_241631118();
    v12(v5, v39 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_oldEndDate, v2);
    swift_release();
    char v28 = sub_24162B698();
    v20(v5, v2);
    v20(v8, v2);
  }
  else
  {
    char v28 = 0;
  }
  sub_241488764(v22, type metadata accessor for EditPregnancyView);
  return v28 & 1;
}

void sub_2414789F4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_241483B08(0, &qword_268D00930, (uint64_t (*)(uint64_t))sub_24148645C, MEMORY[0x263F1A418]);
  uint64_t v108 = v4;
  MEMORY[0x270FA5388](v4);
  v111 = (uint64_t *)&v104[-v5];
  sub_24148645C(0);
  MEMORY[0x270FA5388](v6 - 8);
  v109 = &v104[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2414863CC();
  uint64_t v107 = v8;
  MEMORY[0x270FA5388](v8);
  v113 = &v104[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24148634C();
  uint64_t v110 = v10;
  MEMORY[0x270FA5388](v10);
  v115 = &v104[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2414862CC();
  uint64_t v112 = v12;
  MEMORY[0x270FA5388](v12);
  v116 = &v104[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241486240();
  uint64_t v122 = *(void *)(v14 - 8);
  uint64_t v123 = v14;
  MEMORY[0x270FA5388](v14);
  v114 = &v104[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241483B08(0, &qword_268D00908, (uint64_t (*)(uint64_t))sub_241486240, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = &v104[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = &v104[-v20];
  uint64_t v22 = sub_241631068();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = &v104[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = self;
  uint64_t v27 = (void *)sub_241631CC8();
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v28 = objc_msgSend(v26, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v27, qword_26B0181A0, 0);

  if (v28)
  {
    objc_msgSend(v28, sel_setIsAccessibilityElement_, 0);
    sub_241631048();
    (*(void (**)(unsigned char *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x263F1B4B8], v22);
    uint64_t v119 = sub_2416310B8();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v23 + 8))(v25, v22);
    if (qword_268CF96D0 != -1) {
      swift_once();
    }
    sub_2416313F8();
    sub_24162FFB8();
    uint64_t v126 = v172;
    unsigned __int8 v29 = v173;
    unsigned __int8 v30 = v175;
    uint64_t v31 = v176;
    uint64_t v117 = v174;
    uint64_t v118 = v177;
    unsigned __int8 v32 = sub_241630968();
    int v33 = sub_241630998();
    sub_241630998();
    if (sub_241630998() != v32) {
      int v33 = sub_241630998();
    }
    if (qword_268CF96D8 != -1) {
      swift_once();
    }
    sub_24162FE78();
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    unsigned __int8 v42 = sub_241630978();
    int v128 = sub_241630998();
    sub_241630998();
    if (sub_241630998() != v42) {
      int v128 = sub_241630998();
    }
    int v125 = v33;
    if (qword_268CF96E0 != -1) {
      swift_once();
    }
    sub_24162FE78();
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    unsigned __int8 v171 = v29;
    unsigned __int8 v169 = v30;
    unsigned __int8 v166 = 0;
    unsigned __int8 v163 = 0;
    uint64_t v51 = (uint64_t *)(a1 + *(int *)(type metadata accessor for EditPregnancyView(0) + 24));
    uint64_t v53 = *v51;
    uint64_t v52 = v51[1];
    uint64_t v139 = v53;
    uint64_t v140 = v52;
    sub_241483B08(0, &qword_268D00A40, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B5D0]);
    sub_241631118();
    char v54 = *(unsigned char *)(v129
                   + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_pregnancyOccurrenceType);
    swift_release();
    v120 = v18;
    uint64_t v121 = a2;
    v124 = v21;
    uint64_t v127 = v31;
    if (v54)
    {
      uint64_t v55 = 1;
      uint64_t v56 = v123;
    }
    else
    {
      if (qword_268CF9700 != -1) {
        swift_once();
      }
      uint64_t v139 = qword_268D00730;
      uint64_t v140 = *(void *)algn_268D00738;
      sub_2411D662C();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v57 = sub_241630C28();
      uint64_t v106 = v58;
      uint64_t v60 = v59;
      int v62 = v61 & 1;
      uint64_t v63 = sub_241630BC8();
      uint64_t v64 = (uint64_t)v109;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v109, 1, 1, v63);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v66 = v111;
      sub_241489398(v64, (uint64_t)v111 + *(int *)(v108 + 28), (uint64_t (*)(void))sub_24148645C);
      uint64_t *v66 = KeyPath;
      uint64_t v67 = (uint64_t)v113;
      char v68 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1A418];
      sub_241488410((uint64_t)v66, (uint64_t)&v113[*(int *)(v107 + 36)], &qword_268D00930, (uint64_t (*)(uint64_t))sub_24148645C, MEMORY[0x263F1A418]);
      uint64_t v69 = v57;
      *(void *)uint64_t v67 = v57;
      uint64_t v70 = v106;
      *(void *)(v67 + 8) = v106;
      char v71 = v62;
      int v105 = v62;
      *(unsigned char *)(v67 + 16) = v62;
      *(void *)(v67 + 24) = v60;
      uint64_t v72 = v69;
      sub_24120F7E4(v69, v70, v71);
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_2414884BC((uint64_t)v66, &qword_268D00930, (uint64_t (*)(uint64_t))sub_24148645C, v68);
      sub_241488764(v64, (uint64_t (*)(void))sub_24148645C);
      sub_24120EFBC(v72, v70, v105);
      swift_bridgeObjectRelease();
      uint64_t v73 = sub_2416309E8();
      uint64_t v74 = swift_getKeyPath();
      uint64_t v75 = v115;
      sub_241489398(v67, (uint64_t)v115, (uint64_t (*)(void))sub_2414863CC);
      char v76 = (uint64_t *)&v75[*(int *)(v110 + 36)];
      *char v76 = v74;
      v76[1] = v73;
      sub_241488764(v67, (uint64_t (*)(void))sub_2414863CC);
      uint64_t v77 = sub_241630F88();
      uint64_t v78 = swift_getKeyPath();
      id v79 = v116;
      sub_241489398((uint64_t)v75, (uint64_t)v116, (uint64_t (*)(void))sub_24148634C);
      uint64_t v80 = (uint64_t *)&v79[*(int *)(v112 + 36)];
      *uint64_t v80 = v78;
      v80[1] = v77;
      sub_241488764((uint64_t)v75, (uint64_t (*)(void))sub_24148634C);
      uint64_t v81 = swift_getKeyPath();
      uint64_t v82 = v114;
      sub_241489398((uint64_t)v79, (uint64_t)v114, (uint64_t (*)(void))sub_2414862CC);
      uint64_t v56 = v123;
      uint64_t v83 = &v82[*(int *)(v123 + 36)];
      *(void *)uint64_t v83 = v81;
      v83[8] = 1;
      sub_241488764((uint64_t)v79, (uint64_t (*)(void))sub_2414862CC);
      uint64_t v21 = v124;
      sub_24148744C((uint64_t)v82, (uint64_t)v124, (uint64_t (*)(void))sub_241486240);
      uint64_t v55 = 0;
    }
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v122 + 56))(v21, v55, 1, v56);
    uint64_t v84 = (uint64_t)v21;
    unsigned __int8 v85 = v171;
    LODWORD(v116) = v171;
    unsigned __int8 v86 = v169;
    LODWORD(v122) = v169;
    unsigned __int8 v87 = v166;
    LODWORD(v123) = v166;
    int v88 = v163;
    uint64_t v89 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
    uint64_t v90 = (uint64_t)v120;
    sub_241488410(v84, (uint64_t)v120, &qword_268D00908, (uint64_t (*)(uint64_t))sub_241486240, MEMORY[0x263F8D8F0]);
    uint64_t v91 = v119;
    *(void *)&long long v129 = v119;
    *((void *)&v129 + 1) = v126;
    LOBYTE(v130) = v85;
    *(_DWORD *)((char *)&v130 + 1) = *(_DWORD *)v170;
    DWORD1(v130) = *(_DWORD *)&v170[3];
    uint64_t v92 = v117;
    *((void *)&v130 + 1) = v117;
    LOBYTE(v131) = v86;
    *(_DWORD *)((char *)&v131 + 1) = *(_DWORD *)v168;
    DWORD1(v131) = *(_DWORD *)&v168[3];
    uint64_t v93 = v118;
    *((void *)&v131 + 1) = v127;
    *(void *)&long long v132 = v118;
    BYTE8(v132) = v125;
    HIDWORD(v132) = *(_DWORD *)&v167[3];
    *(_DWORD *)((char *)&v132 + 9) = *(_DWORD *)v167;
    *(void *)&long long v133 = v35;
    *((void *)&v133 + 1) = v37;
    *(void *)&long long v134 = v39;
    *((void *)&v134 + 1) = v41;
    LOBYTE(v135) = v87;
    DWORD1(v135) = *(_DWORD *)&v165[3];
    *(_DWORD *)((char *)&v135 + 1) = *(_DWORD *)v165;
    BYTE8(v135) = v128;
    *(_DWORD *)((char *)&v135 + 9) = *(_DWORD *)v164;
    HIDWORD(v135) = *(_DWORD *)&v164[3];
    *(void *)&long long v136 = v44;
    *((void *)&v136 + 1) = v46;
    *(void *)&long long v137 = v48;
    *((void *)&v137 + 1) = v50;
    char v94 = v88;
    LODWORD(v115) = v88;
    char v138 = v88;
    long long v95 = v135;
    long long v96 = v136;
    long long v97 = v137;
    uint64_t v98 = (_OWORD *)v121;
    *(unsigned char *)(v121 + 144) = v94;
    v98[7] = v96;
    v98[8] = v97;
    long long v99 = v130;
    *uint64_t v98 = v129;
    v98[1] = v99;
    long long v100 = v131;
    long long v101 = v132;
    long long v102 = v133;
    v98[5] = v134;
    v98[6] = v95;
    v98[3] = v101;
    v98[4] = v102;
    v98[2] = v100;
    sub_241486070();
    sub_241488410(v90, (uint64_t)v98 + *(int *)(v103 + 48), &qword_268D00908, (uint64_t (*)(uint64_t))sub_241486240, v89);
    sub_2414876BC((uint64_t)&v129);
    sub_2414884BC((uint64_t)v124, &qword_268D00908, (uint64_t (*)(uint64_t))sub_241486240, v89);
    sub_2414884BC(v90, &qword_268D00908, (uint64_t (*)(uint64_t))sub_241486240, v89);
    uint64_t v139 = v91;
    uint64_t v140 = v126;
    char v141 = (char)v116;
    *(_DWORD *)v142 = *(_DWORD *)v170;
    *(_DWORD *)&v142[3] = *(_DWORD *)&v170[3];
    uint64_t v143 = v92;
    char v144 = v122;
    *(_DWORD *)v145 = *(_DWORD *)v168;
    *(_DWORD *)&v145[3] = *(_DWORD *)&v168[3];
    uint64_t v146 = v127;
    uint64_t v147 = v93;
    char v148 = v125;
    *(_DWORD *)&v149[3] = *(_DWORD *)&v167[3];
    *(_DWORD *)v149 = *(_DWORD *)v167;
    uint64_t v150 = v35;
    uint64_t v151 = v37;
    uint64_t v152 = v39;
    uint64_t v153 = v41;
    char v154 = v123;
    *(_DWORD *)v155 = *(_DWORD *)v165;
    *(_DWORD *)&v155[3] = *(_DWORD *)&v165[3];
    char v156 = v128;
    *(_DWORD *)v157 = *(_DWORD *)v164;
    *(_DWORD *)&v157[3] = *(_DWORD *)&v164[3];
    uint64_t v158 = v44;
    uint64_t v159 = v46;
    uint64_t v160 = v48;
    uint64_t v161 = v50;
    char v162 = (char)v115;
    sub_2414876E8((uint64_t)&v139);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2414796A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  sub_241486888(0, &qword_268D00990, (uint64_t (*)(uint64_t))sub_241486908, sub_241486A60, MEMORY[0x263F1B5E8]);
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v25 - v4;
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(type metadata accessor for EditPregnancyView(0) + 24));
  uint64_t v7 = v6[1];
  uint64_t v36 = *v6;
  uint64_t v37 = v7;
  sub_241483B08(0, &qword_268D00A40, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B5D0]);
  sub_241631118();
  sub_241486908();
  sub_241486A60();
  uint64_t v31 = v5;
  sub_241631168();
  if (qword_268CF9748 != -1) {
    swift_once();
  }
  uint64_t v36 = qword_268D007C0;
  uint64_t v37 = *(void *)algn_268D007C8;
  sub_2411D662C();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v8 = sub_241630C28();
  uint64_t v27 = v9;
  uint64_t v28 = v8;
  uint64_t v29 = v10;
  uint64_t v11 = *v6;
  uint64_t v12 = v6[1];
  int v26 = v13 & 1;
  uint64_t v34 = v11;
  uint64_t v35 = v12;
  sub_241631138();
  uint64_t v14 = v36;
  uint64_t v15 = v37;
  uint64_t v16 = v38;
  swift_getKeyPath();
  uint64_t v36 = v14;
  uint64_t v37 = v15;
  uint64_t v38 = v16;
  sub_241483B08(0, &qword_268D00A50, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B750]);
  sub_241631278();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v17 = swift_release();
  MEMORY[0x270FA5388](v17);
  MEMORY[0x270FA5388](v18);
  sub_241483B08(0, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94, MEMORY[0x263F1BAC8]);
  sub_241486B24();
  sub_241489400((unint64_t *)&qword_268CFD9C8, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94);
  uint64_t v19 = v33;
  uint64_t v21 = v27;
  uint64_t v20 = v28;
  char v22 = v26;
  uint64_t v23 = v31;
  sub_241630DB8();
  swift_release();
  swift_release();
  sub_24120EFBC(v20, v21, v22);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v23, v19);
}

uint64_t sub_241479AF8()
{
  return swift_release();
}

__n128 sub_241479BC8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_241630498();
  sub_241479C2C((uint64_t)&v8);
  char v3 = v9;
  uint64_t v4 = v10;
  uint64_t v5 = v11;
  char v6 = v12;
  __n128 result = v8;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = v6;
  return result;
}

uint64_t sub_241479C2C@<X0>(uint64_t a1@<X8>)
{
  if (qword_268CF9740 != -1) {
    swift_once();
  }
  sub_2411D662C();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v2 = sub_241630C28();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_241630FC8();
  uint64_t v7 = sub_241630BA8();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_24120EFBC(v2, v4, v6);
  swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  sub_24120F7E4(v7, v9, v11 & 1);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24120EFBC(v7, v9, v11 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_241479D7C()
{
  swift_getKeyPath();
  sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  sub_24162BB48();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_241479E1C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  sub_24162BB48();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_241479EC4()
{
  return swift_release();
}

uint64_t sub_241479F94@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = type metadata accessor for EditPregnancyView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  char v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241483B08(0, &qword_268D00A58, MEMORY[0x263F18380], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v36 - v8;
  sub_2414895EC(0, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unsigned __int8 v42 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v41 = (char *)&v36 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v39 = (char *)&v36 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v36 - v19;
  sub_24162FE28();
  uint64_t v21 = sub_24162FE48();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56);
  uint64_t v36 = v22 + 56;
  uint64_t v37 = v23;
  v23(v9, 0, 1, v21);
  uint64_t v40 = a1;
  sub_241489398(a1, (uint64_t)v6, type metadata accessor for EditPregnancyView);
  unint64_t v24 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v25 = swift_allocObject();
  sub_24148744C((uint64_t)v6, v25 + v24, type metadata accessor for EditPregnancyView);
  uint64_t v38 = v20;
  sub_241631158();
  if (qword_268CF9738 != -1) {
    swift_once();
  }
  uint64_t v44 = qword_268D007A0;
  uint64_t v45 = *(void *)algn_268D007A8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24162FE38();
  v37(v9, 0, 1, v21);
  sub_241489398(v40, (uint64_t)v6, type metadata accessor for EditPregnancyView);
  uint64_t v26 = swift_allocObject();
  sub_24148744C((uint64_t)v6, v26 + v24, type metadata accessor for EditPregnancyView);
  sub_2411D662C();
  uint64_t v27 = v39;
  sub_241631178();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v29 = v41;
  uint64_t v30 = v38;
  v28(v41, v38, v11);
  uint64_t v31 = v42;
  v28(v42, v27, v11);
  uint64_t v32 = v43;
  v28(v43, v29, v11);
  sub_241486A94();
  v28(&v32[*(int *)(v33 + 48)], v31, v11);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v12 + 8);
  v34(v27, v11);
  v34(v30, v11);
  v34(v31, v11);
  return ((uint64_t (*)(char *, uint64_t))v34)(v29, v11);
}

uint64_t sub_24147A4B8()
{
  return swift_release();
}

uint64_t sub_24147A54C()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v87 = *v0;
  uint64_t v2 = sub_24162B788();
  uint64_t v82 = *(void *)(v2 - 8);
  uint64_t v83 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162EE78();
  uint64_t v84 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v75 - v9;
  uint64_t v11 = sub_24162EFA8();
  uint64_t v88 = *(void *)(v11 - 8);
  uint64_t v89 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v75 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v75 - v18;
  swift_getKeyPath();
  uint64_t v20 = (char *)v0 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel___observationRegistrar;
  aBlock[0] = v1;
  uint64_t v85 = sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  uint64_t v86 = (uint64_t)v20;
  sub_24162BB48();
  swift_release();
  if (*(unsigned char *)(v1 + 21))
  {
    sub_24162EF48();
    swift_retain_n();
    uint64_t v21 = sub_24162EF98();
    os_log_type_t v22 = sub_2416322E8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v91[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315394;
      aBlock[0] = v87;
      swift_getMetatypeMetadata();
      uint64_t v25 = sub_241631D78();
      uint64_t v26 = v88;
      aBlock[0] = sub_2411B6898(v25, v27, v91);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      swift_getKeyPath();
      aBlock[0] = v1;
      sub_24162BB48();
      swift_release();
      LOBYTE(aBlock[0]) = *(unsigned char *)(v1 + 21);
      uint64_t v28 = sub_241631D48();
      aBlock[0] = sub_2411B6898(v28, v29, v91);
      sub_241632C28();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v21, v22, "[%s] User tapped delete factor but we're already processing an action %s, ignoring tap", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v24, -1, -1);
      MEMORY[0x245621640](v23, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v19, v89);
    }
    else
    {

      swift_release_n();
      return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v19, v89);
    }
  }
  else
  {
    uint64_t v77 = v1;
    uint64_t v78 = v7;
    uint64_t v80 = v4;
    uint64_t v81 = v10;
    uint64_t v79 = v5;
    sub_24162EF48();
    uint64_t v31 = sub_24162EF98();
    os_log_type_t v32 = sub_2416322E8();
    BOOL v33 = os_log_type_enabled(v31, v32);
    char v76 = v13;
    if (v33)
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v91[0] = v35;
      uint64_t v36 = v87;
      *(_DWORD *)uint64_t v34 = 136315138;
      aBlock[0] = v36;
      swift_getMetatypeMetadata();
      uint64_t v37 = sub_241631D78();
      aBlock[0] = sub_2411B6898(v37, v38, v91);
      sub_241632C28();
      uint64_t v39 = v88;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v31, v32, "[%s] User tapped delete factor, starting delete flow", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v35, -1, -1);
      MEMORY[0x245621640](v34, -1, -1);

      uint64_t v40 = v39;
    }
    else
    {

      uint64_t v40 = v88;
    }
    uint64_t v75 = *(void (**)(char *, uint64_t))(v40 + 8);
    v75(v16, v89);
    uint64_t v41 = v79;
    unsigned __int8 v42 = v80;
    uint64_t v43 = v84;
    uint64_t v44 = v77;
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v75 - 2) = (void (*)(char *, uint64_t))v44;
    *((unsigned char *)&v75 - 8) = 1;
    aBlock[0] = v44;
    sub_24162BB38();
    swift_release();
    uint64_t v46 = v81;
    sub_24162EE68();
    uint64_t v47 = sub_24162EE98();
    os_signpost_type_t v48 = sub_241632628();
    if (sub_241632BC8())
    {
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
      uint64_t v50 = v78;
      v49(v78, v46, v41);
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      os_signpost_id_t v52 = sub_24162EE58();
      _os_signpost_emit_with_name_impl(&dword_24118E000, v47, v48, v52, "OffboardingCoordinator.deleteFactor", "", v51, 2u);
      uint64_t v53 = v51;
      uint64_t v46 = v81;
      MEMORY[0x245621640](v53, -1, -1);

      char v54 = v50;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v50, v41);
    }
    else
    {

      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
      char v54 = v78;
    }
    v49(v54, v46, v41);
    sub_24162EEE8();
    swift_allocObject();
    uint64_t v55 = sub_24162EED8();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v41);
    uint64_t v56 = &qword_268D24000;
    if (HKShowSensitiveLogItems())
    {
      uint64_t v57 = v76;
      sub_24162EF48();
      swift_retain_n();
      uint64_t v58 = sub_24162EF98();
      os_log_type_t v59 = sub_2416322E8();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = swift_slowAlloc();
        uint64_t v86 = swift_slowAlloc();
        aBlock[0] = v86;
        *(_DWORD *)uint64_t v60 = 136315394;
        uint64_t v61 = sub_2416333E8();
        v91[0] = sub_2411B6898(v61, v62, aBlock);
        sub_241632C28();
        swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 12) = 2080;
        id v63 = objc_msgSend(*(id *)(v44 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_pregnancySample), sel_UUID);
        sub_24162B768();

        uint64_t v64 = sub_24162B738();
        uint64_t v65 = v42;
        unint64_t v67 = v66;
        (*(void (**)(char *, uint64_t))(v82 + 8))(v65, v83);
        v91[0] = sub_2411B6898(v64, v67, aBlock);
        sub_241632C28();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v58, v59, "[%s] Attempting to delete sample with UUID: %s", (uint8_t *)v60, 0x16u);
        uint64_t v68 = v86;
        swift_arrayDestroy();
        MEMORY[0x245621640](v68, -1, -1);
        uint64_t v69 = v60;
        uint64_t v56 = &qword_268D24000;
        MEMORY[0x245621640](v69, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      v75(v57, v89);
    }
    uint64_t v70 = *(void **)(v44 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_healthStore);
    uint64_t v71 = *(void *)(v44 + v56[36]);
    uint64_t v72 = swift_allocObject();
    swift_weakInit();
    uint64_t v73 = (void *)swift_allocObject();
    v73[2] = v72;
    v73[3] = v55;
    v73[4] = v87;
    aBlock[4] = (uint64_t)sub_241487610;
    aBlock[5] = (uint64_t)v73;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_241328D44;
    aBlock[3] = (uint64_t)&unk_26F573C98;
    uint64_t v74 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v70, sel_deleteObject_withCompletion_, v71, v74);
    _Block_release(v74);
    return swift_release();
  }
}

uint64_t sub_24147B014@<X0>(uint64_t a1@<X8>)
{
  return sub_24147E834(&qword_268CF9750, a1);
}

uint64_t sub_24147B03C()
{
  return swift_release();
}

uint64_t sub_24147B170@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for EditPregnancyView(0);
  sub_241483B08(0, &qword_268D00A40, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B5D0]);
  sub_241631118();
  char v2 = sub_24147B2C0();
  swift_release();
  if (v2)
  {
    if (qword_268CF9758 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_268CF9760 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2411D662C();
  uint64_t result = sub_241630C28();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_24147B2C0()
{
  uint64_t v1 = sub_24162BA08();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241483B08(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = sub_24162B718();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)(v0 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator);
  sub_2411B6854((void *)(v0 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator), *(void *)(v0 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator + 24));
  if (sub_24132B12C())
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_pregnancyOccurrenceType) != 1)
    {
      char v13 = 1;
      return v13 & 1;
    }
    sub_2411B6854(v12, v12[3]);
    sub_241331BA4((uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_24162B9A8();
      char v13 = sub_24162B978();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return v13 & 1;
    }
    sub_2414884BC((uint64_t)v7, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_24147B59C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v2 = sub_241630468();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241485A5C();
  uint64_t v39 = v5;
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241486BF4();
  uint64_t v42 = v8;
  uint64_t v40 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v38 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241486CC4();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v41 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v1;
  uint64_t v47 = v1;
  sub_241485C04();
  sub_241488C54(255, &qword_268D00898, (void (*)(uint64_t))sub_241485D7C, (void (*)(void))sub_241486BC0);
  uint64_t v13 = v12;
  sub_241483B08(255, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94, MEMORY[0x263F1BAC8]);
  uint64_t v15 = v14;
  sub_241485D7C();
  uint64_t v17 = v16;
  uint64_t v18 = sub_241486BC0();
  uint64_t v48 = v17;
  uint64_t v49 = v18;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = sub_241489400((unint64_t *)&qword_268CFD9C8, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94);
  uint64_t v48 = v13;
  uint64_t v49 = v15;
  uint64_t v50 = MEMORY[0x263F1A830];
  unint64_t v51 = OpaqueTypeConformance2;
  uint64_t v52 = v20;
  uint64_t v53 = MEMORY[0x263F1A820];
  swift_getOpaqueTypeConformance2();
  sub_241630198();
  if (qword_268CF9728 != -1) {
    swift_once();
  }
  uint64_t v48 = qword_268D00780;
  uint64_t v49 = *(void *)algn_268D00788;
  uint64_t v22 = v36;
  uint64_t v21 = v37;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v4, *MEMORY[0x263F19698], v37);
  uint64_t v23 = sub_241486530(&qword_268D009D0, (void (*)(uint64_t))sub_241485A5C);
  unint64_t v24 = sub_2411D662C();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v25 = MEMORY[0x263F8D310];
  unint64_t v27 = v38;
  uint64_t v26 = v39;
  sub_241630DF8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v21);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v26);
  sub_241483B08(0, &qword_268D009E0, MEMORY[0x263F190C0], MEMORY[0x263F8E0F8]);
  sub_2416301E8();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_241637EE0;
  sub_2416301D8();
  uint64_t v48 = v26;
  uint64_t v49 = v25;
  uint64_t v50 = v23;
  unint64_t v51 = v24;
  uint64_t v29 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = v41;
  uint64_t v30 = v42;
  MEMORY[0x24561E250](0, v28, v42, v29);
  swift_bridgeObjectRelease();
  uint64_t v32 = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v27, v30);
  MEMORY[0x270FA5388](v32);
  *(&v35 - 2) = v45;
  sub_241483B08(0, &qword_268D009E8, (uint64_t (*)(uint64_t))sub_241486DD4, MEMORY[0x263F19AD0]);
  uint64_t v48 = v30;
  uint64_t v49 = v29;
  swift_getOpaqueTypeConformance2();
  sub_241487198();
  uint64_t v33 = v44;
  sub_241630EC8();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v31, v33);
}

uint64_t sub_24147BC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  sub_241485D7C();
  uint64_t v37 = v3;
  uint64_t v38 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241488C54(0, &qword_268D00898, (void (*)(uint64_t))sub_241485D7C, (void (*)(void))sub_241486BC0);
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v45 = a1;
  sub_241483B08(0, &qword_268D008A8, (uint64_t (*)(uint64_t))sub_241485E4C, MEMORY[0x263F1BAC8]);
  sub_241489400(&qword_268D009B8, &qword_268D008A8, (uint64_t (*)(uint64_t))sub_241485E4C);
  sub_241630B58();
  uint64_t v9 = (uint64_t *)(a1 + *(int *)(type metadata accessor for EditPregnancyView(0) + 24));
  uint64_t v10 = v9[1];
  uint64_t v46 = *v9;
  uint64_t v47 = v10;
  sub_241483B08(0, &qword_268D00A40, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B5D0]);
  uint64_t v35 = v11;
  sub_241631138();
  uint64_t v12 = v48;
  uint64_t v13 = v49;
  uint64_t v14 = v50;
  swift_getKeyPath();
  uint64_t v48 = v12;
  uint64_t v49 = v13;
  uint64_t v50 = v14;
  sub_241483B08(0, &qword_268D00A50, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B750]);
  uint64_t v34 = v15;
  sub_241631278();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v39 = a1;
  uint64_t v44 = a1;
  uint64_t v16 = sub_241486BC0();
  uint64_t v40 = v8;
  uint64_t v17 = v37;
  uint64_t v36 = v16;
  sub_241630E78();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v17);
  if (qword_268CF9768 != -1) {
    swift_once();
  }
  uint64_t v48 = qword_268D00800;
  uint64_t v49 = *(void *)algn_268D00808;
  sub_2411D662C();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v33 = sub_241630C28();
  uint64_t v32 = v18;
  uint64_t v38 = v19;
  uint64_t v20 = v9[1];
  char v22 = v21 & 1;
  uint64_t v46 = *v9;
  uint64_t v47 = v20;
  sub_241631138();
  uint64_t v23 = v48;
  uint64_t v24 = v49;
  uint64_t v25 = v50;
  swift_getKeyPath();
  uint64_t v48 = v23;
  uint64_t v49 = v24;
  uint64_t v50 = v25;
  sub_241631278();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v26 = swift_release();
  MEMORY[0x270FA5388](v26);
  sub_241483B08(0, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94, MEMORY[0x263F1BAC8]);
  uint64_t v48 = v17;
  uint64_t v49 = v36;
  swift_getOpaqueTypeConformance2();
  sub_241489400((unint64_t *)&qword_268CFD9C8, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94);
  uint64_t v27 = v42;
  uint64_t v28 = v33;
  uint64_t v29 = v32;
  uint64_t v30 = v40;
  sub_241630DB8();
  swift_release();
  swift_release();
  sub_24120EFBC(v28, v29, v22);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v30, v27);
}

uint64_t sub_24147C244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v126 = a2;
  sub_241486654(0);
  uint64_t v120 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v123 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241487FE0(0, &qword_268D00980, (void (*)(uint64_t))sub_24148673C);
  uint64_t v133 = v5;
  uint64_t v122 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v132 = (char *)&v100 - v6;
  sub_241486634(0);
  uint64_t v119 = v7;
  MEMORY[0x270FA5388](v7);
  int v125 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v124 = (uint64_t)&v100 - v10;
  uint64_t v115 = type metadata accessor for EditPregnancyView.PastPregnancySection(0);
  MEMORY[0x270FA5388](v115);
  long long v101 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24148828C(0, &qword_268D00A68, type metadata accessor for EditPregnancyView.OngoingPregnancySection, type metadata accessor for EditPregnancyView.PastPregnancySection, MEMORY[0x263F19B20]);
  uint64_t v112 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v114 = (uint64_t)&v100 - v13;
  uint64_t v113 = type metadata accessor for EditPregnancyView.OngoingPregnancySection(0);
  MEMORY[0x270FA5388](v113);
  long long v100 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414865AC(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v121 = (uint64_t)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v131 = (uint64_t)&v100 - v18;
  sub_241486578(0);
  MEMORY[0x270FA5388](v19 - 8);
  int v128 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241485EF4();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v117 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_2416304C8();
  uint64_t v24 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130);
  uint64_t v26 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241486040(0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v100 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241486004(0);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v100 - v34;
  sub_241485FA0();
  uint64_t v127 = v36;
  uint64_t v104 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)&v100 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241485ED4(0);
  v116 = v39;
  MEMORY[0x270FA5388](v39);
  uint64_t v118 = (uint64_t)&v100 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  uint64_t v103 = (char *)&v100 - v42;
  MEMORY[0x270FA5388](v43);
  uint64_t v129 = (uint64_t)&v100 - v44;
  *(void *)uint64_t v29 = sub_241630598();
  *((void *)v29 + 1) = 0;
  v29[16] = 0;
  sub_2414873B4();
  uint64_t v46 = (uint64_t)&v29[*(int *)(v45 + 44)];
  uint64_t v111 = a1;
  sub_2414789F4(a1, v46);
  uint64_t v47 = sub_2416313F8();
  sub_241477C0C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v32, 0.0, 1, 0.0, 1, v47, v48, (void (*)(uint64_t, uint64_t))sub_2414876A4, (uint64_t (*)(void))sub_241486004);
  sub_241488764((uint64_t)v29, (uint64_t (*)(void))sub_241486040);
  sub_24148744C((uint64_t)v32, (uint64_t)v35, (uint64_t (*)(void))sub_241486004);
  sub_2414874B4();
  uint64_t v49 = v38;
  sub_241631318();
  if (qword_268CF96E8 != -1) {
    swift_once();
  }
  sub_2416304A8();
  uint64_t v50 = *(int *)(v22 + 36);
  uint64_t v51 = (uint64_t)v117;
  uint64_t v52 = &v117[v50];
  uint64_t v53 = v24 + 16;
  char v54 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v55 = v130;
  v54(&v117[v50], v26, v130);
  uint64_t v56 = v24;
  uint64_t v58 = v24 + 56;
  uint64_t v57 = *(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56);
  v57(v52, 0, 1, v55);
  uint64_t v59 = v104;
  uint64_t v60 = *(void (**)(uint64_t, char *, uint64_t))(v104 + 16);
  long long v102 = v49;
  v60(v51, v49, v127);
  uint64_t KeyPath = (void (*)(char *, uint64_t))swift_getKeyPath();
  uint64_t v61 = (uint64_t)v128;
  uint64_t v110 = v53;
  v109 = v54;
  v54(v128, v26, v55);
  uint64_t v108 = v58;
  uint64_t v107 = (void (*)(uint64_t, void, uint64_t, uint64_t))v57;
  v57((char *)v61, 0, 1, v55);
  uint64_t v62 = (uint64_t)v103;
  id v63 = &v103[*((int *)v116 + 9)];
  sub_241483B08(0, &qword_268D00958, (uint64_t (*)(uint64_t))sub_241486578, MEMORY[0x263F1A418]);
  uint64_t v105 = v64;
  sub_241489398(v61, (uint64_t)&v63[*(int *)(v64 + 28)], (uint64_t (*)(void))sub_241486578);
  *(void *)id v63 = KeyPath;
  sub_241489398(v51, v62, (uint64_t (*)(void))sub_241485EF4);
  sub_241488764(v61, (uint64_t (*)(void))sub_241486578);
  sub_241488764(v51, (uint64_t (*)(void))sub_241485EF4);
  uint64_t v65 = *(void (**)(char *, uint64_t))(v56 + 8);
  v116 = v26;
  uint64_t KeyPath = v65;
  v65(v26, v55);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v102, v127);
  sub_24148744C(v62, v129, (uint64_t (*)(void))sub_241485ED4);
  unint64_t v66 = (uint64_t *)(v111 + *(int *)(type metadata accessor for EditPregnancyView(0) + 24));
  uint64_t v68 = *v66;
  uint64_t v67 = v66[1];
  uint64_t v134 = v68;
  uint64_t v135 = v67;
  sub_241483B08(0, &qword_268D00A40, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B5D0]);
  sub_241631118();
  char v69 = *(unsigned char *)(v140
                 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_pregnancyOccurrenceType);
  swift_release();
  uint64_t v117 = (char *)(v56 + 8);
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  sub_241631368();
  type metadata accessor for PregnancyDatesInputViewModel();
  sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  if (v69)
  {
    uint64_t v70 = (uint64_t)v101;
    sub_241631388();
    sub_241489398(v70, v114, type metadata accessor for EditPregnancyView.PastPregnancySection);
    swift_storeEnumTagMultiPayload();
    sub_241486530(&qword_268D00A88, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.OngoingPregnancySection);
    sub_241486530(&qword_268D00A90, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.PastPregnancySection);
    sub_241630638();
    uint64_t v71 = type metadata accessor for EditPregnancyView.PastPregnancySection;
  }
  else
  {
    uint64_t v70 = (uint64_t)v100;
    sub_241631388();
    sub_241489398(v70, v114, type metadata accessor for EditPregnancyView.OngoingPregnancySection);
    swift_storeEnumTagMultiPayload();
    sub_241486530(&qword_268D00A88, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.OngoingPregnancySection);
    sub_241486530(&qword_268D00A90, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.PastPregnancySection);
    sub_241630638();
    uint64_t v71 = type metadata accessor for EditPregnancyView.OngoingPregnancySection;
  }
  uint64_t v72 = sub_241488764(v70, v71);
  MEMORY[0x270FA5388](v72);
  sub_24148673C();
  sub_241486888(255, &qword_268D00990, (uint64_t (*)(uint64_t))sub_241486908, sub_241486A60, MEMORY[0x263F1B5E8]);
  uint64_t v74 = v73;
  sub_241483B08(255, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94, MEMORY[0x263F1BAC8]);
  uint64_t v76 = v75;
  unint64_t v77 = sub_241486B24();
  uint64_t v78 = sub_241489400((unint64_t *)&qword_268CFD9C8, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94);
  uint64_t v134 = v74;
  uint64_t v135 = v76;
  uint64_t v136 = MEMORY[0x263F1A830];
  unint64_t v137 = v77;
  uint64_t v138 = v78;
  uint64_t v139 = MEMORY[0x263F1A820];
  swift_getOpaqueTypeConformance2();
  uint64_t v79 = v132;
  sub_241631338();
  uint64_t v80 = v116;
  if (qword_268CF96F8 != -1) {
    swift_once();
  }
  sub_2416304A8();
  uint64_t v81 = (uint64_t)v123;
  uint64_t v82 = &v123[*(int *)(v120 + 36)];
  uint64_t v83 = v130;
  uint64_t v84 = v109;
  v109(v82, v80, v130);
  uint64_t v85 = v107;
  v107((uint64_t)v82, 0, 1, v83);
  uint64_t v86 = v122;
  (*(void (**)(uint64_t, char *, uint64_t))(v122 + 16))(v81, v79, v133);
  uint64_t v87 = swift_getKeyPath();
  uint64_t v88 = (uint64_t)v128;
  v84(v128, v80, v83);
  v85(v88, 0, 1, v83);
  uint64_t v89 = (uint64_t)v125;
  uint64_t v90 = (uint64_t *)&v125[*(int *)(v119 + 36)];
  sub_241489398(v88, (uint64_t)v90 + *(int *)(v105 + 28), (uint64_t (*)(void))sub_241486578);
  uint64_t *v90 = v87;
  sub_241489398(v81, v89, (uint64_t (*)(void))sub_241486654);
  sub_241488764(v88, (uint64_t (*)(void))sub_241486578);
  sub_241488764(v81, (uint64_t (*)(void))sub_241486654);
  KeyPath(v80, v83);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v132, v133);
  uint64_t v91 = v124;
  sub_24148744C(v89, v124, (uint64_t (*)(void))sub_241486634);
  uint64_t v92 = v129;
  uint64_t v93 = v118;
  sub_241489398(v129, v118, (uint64_t (*)(void))sub_241485ED4);
  uint64_t v94 = v131;
  uint64_t v95 = v121;
  sub_241489398(v131, v121, (uint64_t (*)(void))sub_2414865AC);
  sub_241489398(v91, v89, (uint64_t (*)(void))sub_241486634);
  uint64_t v96 = v126;
  sub_241489398(v93, v126, (uint64_t (*)(void))sub_241485ED4);
  sub_241485E4C();
  uint64_t v98 = v97;
  sub_241489398(v95, v96 + *(int *)(v97 + 48), (uint64_t (*)(void))sub_2414865AC);
  sub_241489398(v89, v96 + *(int *)(v98 + 64), (uint64_t (*)(void))sub_241486634);
  sub_241488764(v91, (uint64_t (*)(void))sub_241486634);
  sub_241488764(v94, (uint64_t (*)(void))sub_2414865AC);
  sub_241488764(v92, (uint64_t (*)(void))sub_241485ED4);
  sub_241488764(v89, (uint64_t (*)(void))sub_241486634);
  sub_241488764(v95, (uint64_t (*)(void))sub_2414865AC);
  return sub_241488764(v93, (uint64_t (*)(void))sub_241485ED4);
}

uint64_t sub_24147D468()
{
  swift_getKeyPath();
  sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  sub_24162BB48();
  swift_release();
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_24147D508@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  sub_24162BB48();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 18);
  return result;
}

uint64_t sub_24147D5B0()
{
  return swift_release();
}

uint64_t sub_24147D680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v28[4] = a2;
  sub_241483B08(0, &qword_268D00A60, MEMORY[0x263F1B348], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v28 - v4;
  uint64_t v6 = type metadata accessor for EditPregnancyView(0);
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  sub_241631368();
  if (qword_268CF9500 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_268CFE030;
  unint64_t v7 = *(void *)algn_268CFE038;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_release();
  uint64_t v29 = v8;
  unint64_t v30 = v7;
  sub_2411D662C();
  uint64_t v9 = sub_241630C28();
  v28[2] = v10;
  v28[3] = v9;
  v28[1] = v11;
  sub_241631368();
  uint64_t v12 = (uint64_t *)(a1 + *(int *)(v6 + 24));
  uint64_t v14 = *v12;
  unint64_t v13 = v12[1];
  uint64_t v29 = v14;
  unint64_t v30 = v13;
  sub_241483B08(0, &qword_268D00A40, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B5D0]);
  sub_241631118();
  uint64_t v15 = v28[7];
  swift_getKeyPath();
  uint64_t v29 = v15;
  sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  sub_24162BB48();
  swift_release();
  int v16 = *(unsigned __int8 *)(v15 + 19);
  swift_release();
  if (v16 == 1)
  {
    if (qword_268CF9508 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_268CFE040;
    unint64_t v17 = *(void *)algn_268CFE048;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v17 = 0xE000000000000000;
  }
  swift_release();
  uint64_t v29 = v18;
  unint64_t v30 = v17;
  sub_241630C28();
  sub_241631368();
  if (qword_268CF9510 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_268CFE050;
  unint64_t v19 = *(void *)algn_268CFE058;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_release();
  uint64_t v29 = v20;
  unint64_t v30 = v19;
  uint64_t v21 = sub_241630C28();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  sub_241630F48();
  sub_24120EFBC(v21, v23, v25);
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_241630F58();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v5, 0, 1, v26);
  return sub_241630F18();
}

uint64_t sub_24147DAB0()
{
  swift_getKeyPath();
  sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  sub_24162BB48();
  swift_release();
  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t sub_24147DB50()
{
  swift_getKeyPath();
  sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  sub_24162BB48();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_24147DBF0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  sub_24162BB48();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_24147DC98()
{
  return swift_release();
}

uint64_t sub_24147DD68@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v38 = a2;
  sub_241483B08(0, &qword_268D00A58, MEMORY[0x263F18380], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v35 = (char *)&v33 - v4;
  uint64_t v5 = type metadata accessor for EditPregnancyView(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414895EC(0, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v36 = (char *)&v33 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v34 = (char *)&v33 - v16;
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v33 - v18;
  sub_241489398(a1, (uint64_t)v8, type metadata accessor for EditPregnancyView);
  unint64_t v20 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v21 = swift_allocObject();
  sub_24148744C((uint64_t)v8, v21 + v20, type metadata accessor for EditPregnancyView);
  sub_241631168();
  uint64_t v22 = v35;
  sub_24162FE28();
  uint64_t v23 = sub_24162FE48();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
  sub_241489398(v33, (uint64_t)v8, type metadata accessor for EditPregnancyView);
  uint64_t v24 = swift_allocObject();
  sub_24148744C((uint64_t)v8, v24 + v20, type metadata accessor for EditPregnancyView);
  char v25 = v34;
  sub_241631158();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v27 = v36;
  v26(v36, v19, v10);
  uint64_t v28 = v37;
  v26(v37, v25, v10);
  uint64_t v29 = v38;
  v26(v38, v27, v10);
  sub_241486A94();
  v26(&v29[*(int *)(v30 + 48)], v28, v10);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v11 + 8);
  v31(v25, v10);
  v31(v19, v10);
  v31(v28, v10);
  return ((uint64_t (*)(char *, uint64_t))v31)(v27, v10);
}

uint64_t sub_24147E210(uint64_t a1)
{
  uint64_t v34 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241483B08(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v32 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v31 = (char *)&v29 - v5;
  uint64_t v6 = sub_24162B718();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v7 = v35;
  MEMORY[0x270FA5388](v6);
  uint64_t v30 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = (uint64_t *)(a1 + *(int *)(type metadata accessor for EditPregnancyView(0) + 24));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v38 = v14;
  uint64_t v39 = v13;
  sub_241483B08(0, &qword_268D00A40, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B5D0]);
  sub_241631118();
  uint64_t v36 = v37;
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  sub_241631368();
  uint64_t v15 = v38;
  swift_getKeyPath();
  uint64_t v38 = v15;
  sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_24162BB48();
  swift_release();
  uint64_t v16 = v15 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__pregnancyStartDate;
  swift_beginAccess();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v29 = v11;
  v17(v11, v16, v6);
  swift_release();
  sub_241631368();
  uint64_t v18 = v37;
  swift_getKeyPath();
  uint64_t v37 = v18;
  sub_24162BB48();
  swift_release();
  uint64_t v19 = v18 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__estimatedDueDate;
  swift_beginAccess();
  unint64_t v20 = v30;
  v17(v30, v19, v6);
  swift_release();
  uint64_t v21 = (void *)(v36 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator);
  sub_2411B6854((void *)(v36 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator), *(void *)(v36 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator + 24));
  uint64_t v22 = (uint64_t)v31;
  v17(v31, (uint64_t)v11, v6);
  uint64_t v23 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56);
  v23(v22, 0, 1, v6);
  uint64_t v24 = (uint64_t)v32;
  v17(v32, (uint64_t)v20, v6);
  v23(v24, 0, 1, v6);
  sub_24132C050(v22, v24);
  uint64_t v26 = v33;
  char v25 = v34;
  sub_2414884BC(v24, &qword_26B0130C0, v34, v33);
  sub_2414884BC(v22, &qword_26B0130C0, v25, v26);
  sub_2411B6854(v21, v21[3]);
  sub_24132CC7C((uint64_t)nullsub_1, 0);
  swift_release();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v35 + 8);
  v27(v20, v6);
  return ((uint64_t (*)(char *, uint64_t))v27)(v29, v6);
}

uint64_t sub_24147E6E4@<X0>(uint64_t a1@<X8>)
{
  return sub_24147E834(&qword_268CF9778, a1);
}

uint64_t sub_24147E70C(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)(a1 + *(int *)(type metadata accessor for EditPregnancyView(0) + 24));
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  v5[0] = v3;
  v5[1] = v2;
  sub_241483B08(0, &qword_268D00A40, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B5D0]);
  sub_241631118();
  sub_2411A3DF4(v5[5] + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator, (uint64_t)v5);
  swift_release();
  sub_2411B6854(v5, v5[3]);
  sub_24132CC7C((uint64_t)nullsub_1, 0);
  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v5);
}

uint64_t sub_24147E7E4@<X0>(uint64_t a1@<X8>)
{
  return sub_24147E834(&qword_268CF9780, a1);
}

uint64_t sub_24147E80C@<X0>(uint64_t a1@<X8>)
{
  return sub_24147E834(&qword_268CF9770, a1);
}

uint64_t sub_24147E834@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  sub_2411D662C();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t result = sub_241630C28();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_24147E8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  sub_241486DD4();
  v19[0] = v3;
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241486F7C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2416306B8();
  MEMORY[0x270FA5388](v11 - 8);
  sub_241486E44();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241630678();
  v19[8] = a1;
  sub_241486EF8();
  sub_241489000(&qword_268D00A08, (void (*)(uint64_t))sub_241486EF8, (void (*)(void))sub_2413550D8);
  sub_24162FF38();
  sub_241630688();
  v19[4] = a1;
  sub_241486FEC();
  sub_2414870A4();
  sub_24162FF38();
  uint64_t v17 = &v5[*(int *)(v19[0] + 48)];
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v5, v16, v13);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v10, v7);
  sub_2416305D8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_24147EBF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for EditPregnancyView(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(v7 + 32));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v18 = v10;
  uint64_t v19 = v9;
  sub_241483B08(0, &qword_268D00A40, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B5D0]);
  sub_241631118();
  int v11 = *(unsigned __int8 *)(v20
                           + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_shouldShowCancelButton);
  swift_release();
  if (v11 == 1)
  {
    if (qword_268CF9738 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_268D007A0;
    uint64_t v19 = *(void *)algn_268D007A8;
    sub_241489398(a1, (uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for EditPregnancyView);
    unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v13 = swift_allocObject();
    sub_24148744C((uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for EditPregnancyView);
    sub_2411D662C();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241631198();
    sub_2414895EC(0, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
  }
  else
  {
    sub_2414895EC(0, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_24147EEBC()
{
  type metadata accessor for EditPregnancyView(0);
  sub_241483B08(0, &qword_268D00A40, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B5D0]);
  sub_241631118();
  sub_2411B6854((void *)(v1 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator), *(void *)(v1 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator + 24));
  sub_24132CC7C((uint64_t)nullsub_1, 0);
  return swift_release();
}

uint64_t sub_24147EF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for EditPregnancyView(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  sub_2414895EC(0, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int v11 = (char *)&v19 - v10;
  sub_241489398(a1, (uint64_t)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for EditPregnancyView);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  sub_24148744C((uint64_t)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for EditPregnancyView);
  sub_241631168();
  LOBYTE(a1) = sub_241478588();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a1 & 1;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a2, v11, v8);
  sub_241486FEC();
  uint64_t v17 = (uint64_t *)(a2 + *(int *)(v16 + 36));
  *uint64_t v17 = KeyPath;
  v17[1] = (uint64_t)sub_241487264;
  v17[2] = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_24147F21C(uint64_t a1)
{
  uint64_t v2 = *(char **)(a1 + *(int *)(type metadata accessor for EditPregnancyView(0) + 24));
  sub_241483B08(0, &qword_268D00A40, type metadata accessor for EditPregnancyView.ViewModel, MEMORY[0x263F1B5D0]);
  sub_241631118();
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  sub_241631368();
  sub_24147F318(v2);
  swift_release();
  return swift_release();
}

uint64_t sub_24147F318(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)v1;
  uint64_t v5 = sub_24162EFA8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int v11 = (char *)&v34 - v10;
  swift_getKeyPath();
  uint64_t v12 = v1 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel___observationRegistrar;
  uint64_t v40 = v1;
  uint64_t v38 = sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  sub_24162BB48();
  swift_release();
  if (*(unsigned char *)(v1 + 21))
  {
    uint64_t v37 = v12;
    sub_24162EF48();
    swift_retain_n();
    uint64_t v13 = sub_24162EF98();
    os_log_type_t v14 = sub_2416322E8();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v39 = v16;
      uint64_t v40 = v4;
      *(_DWORD *)uint64_t v15 = 136315394;
      swift_getMetatypeMetadata();
      uint64_t v36 = v5;
      uint64_t v17 = sub_241631D78();
      uint64_t v40 = sub_2411B6898(v17, v18, &v39);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      swift_getKeyPath();
      uint64_t v40 = v1;
      sub_24162BB48();
      swift_release();
      LOBYTE(v40) = *(unsigned char *)(v1 + 21);
      uint64_t v19 = sub_241631D48();
      uint64_t v40 = sub_2411B6898(v19, v20, &v39);
      sub_241632C28();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v13, v14, "[%s] User tapped done but we're already processing an action %s, ignoring tap", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v16, -1, -1);
      MEMORY[0x245621640](v15, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v36);
    }
    else
    {

      swift_release_n();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
  }
  else
  {
    sub_24162EF48();
    uint64_t v22 = sub_24162EF98();
    os_log_type_t v23 = sub_2416322E8();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v35 = a1;
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v37 = v12;
      uint64_t v26 = v25;
      uint64_t v39 = v25;
      uint64_t v40 = v4;
      uint64_t v36 = v5;
      *(_DWORD *)uint64_t v24 = 136315138;
      swift_getMetatypeMetadata();
      uint64_t v27 = sub_241631D78();
      uint64_t v40 = sub_2411B6898(v27, v28, &v39);
      a1 = v35;
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v22, v23, "[%s] User tapped done", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v26, -1, -1);
      MEMORY[0x245621640](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v36);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v34 - 2) = v2;
    *((unsigned char *)&v34 - 8) = 2;
    uint64_t v40 = v2;
    sub_24162BB38();
    swift_release();
    BOOL v30 = sub_24137A4C8();
    uint64_t v31 = swift_getKeyPath();
    MEMORY[0x270FA5388](v31);
    *(&v34 - 2) = v2;
    *((unsigned char *)&v34 - 8) = v30;
    uint64_t v40 = v2;
    sub_24162BB38();
    swift_release();
    swift_getKeyPath();
    uint64_t v40 = v2;
    sub_24162BB48();
    swift_release();
    if (*(unsigned char *)(v2 + 19))
    {
      uint64_t v32 = swift_getKeyPath();
      MEMORY[0x270FA5388](v32);
      *(&v34 - 2) = v2;
      *((unsigned char *)&v34 - 8) = 1;
      uint64_t v40 = v2;
      sub_24162BB38();
      swift_release();
      uint64_t v33 = swift_getKeyPath();
      MEMORY[0x270FA5388](v33);
      *(&v34 - 2) = v2;
      *((unsigned char *)&v34 - 8) = 0;
      uint64_t v40 = v2;
      sub_24162BB38();
      return swift_release();
    }
    else
    {
      sub_241482DC4(a1);
      sub_2411B6854((void *)(v2 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator), *(void *)(v2 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator + 24));
      return sub_24132A448(15);
    }
  }
}

uint64_t sub_24147FA44@<X0>(uint64_t a1@<X8>)
{
  if (qword_268CF9730 != -1) {
    swift_once();
  }
  sub_2411D662C();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v2 = sub_241630C28();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = sub_241630BD8();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_24120EFBC(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_24147FB40@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v75 = a2;
  sub_241486578(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v65 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241487FB0(0);
  uint64_t v58 = v5;
  MEMORY[0x270FA5388](v5);
  id v63 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_2416304C8();
  uint64_t v62 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v61 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241487FE0(0, &qword_268D00AC0, (void (*)(uint64_t))type metadata accessor for EstimatedDueDateView);
  uint64_t v69 = v8;
  uint64_t v60 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v67 = (char *)&v58 - v9;
  sub_24148804C(0);
  uint64_t v72 = v10;
  uint64_t v70 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v59 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241483B08(0, &qword_268D00AD0, (uint64_t (*)(uint64_t))sub_24148804C, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v74 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v71 = (uint64_t)&v58 - v15;
  sub_241488108();
  uint64_t v17 = v16;
  uint64_t v77 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v68 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v58 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v58 - v23;
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t KeyPath = v25;
  sub_241631368();
  uint64_t v26 = v80;
  swift_getKeyPath();
  uint64_t v80 = v26;
  sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_24162BB48();
  swift_release();
  int v27 = *(unsigned __int8 *)(v26
                           + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__selectedInputMethod);
  swift_release();
  BOOL v79 = v27 != 1;
  uint64_t v78 = a1;
  sub_241483B08(0, &qword_268D00AE0, (uint64_t (*)(uint64_t))sub_2414881CC, MEMORY[0x263F1BAC8]);
  sub_241488E40(0, &qword_268D00AF8, (uint64_t)&type metadata for PregnancyPrivacyFooterView, MEMORY[0x263F8D8F0]);
  sub_241489400(&qword_268D00B00, &qword_268D00AE0, (uint64_t (*)(uint64_t))sub_2414881CC);
  sub_241488320();
  sub_241631348();
  unint64_t v28 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
  uint64_t v76 = v24;
  uint64_t v73 = v17;
  v28(v24, v21, v17);
  sub_241631368();
  uint64_t v29 = v80;
  swift_getKeyPath();
  uint64_t v80 = v29;
  sub_24162BB48();
  swift_release();
  int v30 = *(unsigned __int8 *)(v29
                           + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__selectedInputMethod);
  uint64_t v31 = swift_release();
  if (v30 == 1)
  {
    uint64_t v32 = 1;
    uint64_t v34 = v71;
    uint64_t v33 = v72;
  }
  else
  {
    MEMORY[0x270FA5388](v31);
    *(&v58 - 2) = a1;
    type metadata accessor for EstimatedDueDateView();
    sub_241486530(&qword_268D00B18, (void (*)(uint64_t))type metadata accessor for EstimatedDueDateView);
    sub_2414883B4();
    uint64_t v35 = v67;
    sub_241631348();
    if (qword_268CF96F0 != -1) {
      swift_once();
    }
    uint64_t v36 = v61;
    sub_2416304A8();
    uint64_t v37 = v62;
    uint64_t v38 = (uint64_t)v63;
    uint64_t v39 = &v63[*(int *)(v58 + 36)];
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
    uint64_t v41 = v64;
    v40(v39, v36, v64);
    uint64_t v42 = *(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56);
    v42(v39, 0, 1, v41);
    uint64_t v43 = v60;
    (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v38, v35, v69);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v44 = (uint64_t)v65;
    v40(v65, v36, v41);
    v42((char *)v44, 0, 1, v41);
    uint64_t v33 = v72;
    uint64_t v45 = (uint64_t)v59;
    uint64_t v46 = (uint64_t *)&v59[*(int *)(v72 + 36)];
    sub_241483B08(0, &qword_268D00958, (uint64_t (*)(uint64_t))sub_241486578, MEMORY[0x263F1A418]);
    sub_241489398(v44, (uint64_t)v46 + *(int *)(v47 + 28), (uint64_t (*)(void))sub_241486578);
    *uint64_t v46 = KeyPath;
    sub_241489398(v38, v45, (uint64_t (*)(void))sub_241487FB0);
    sub_241488764(v44, (uint64_t (*)(void))sub_241486578);
    sub_241488764(v38, (uint64_t (*)(void))sub_241487FB0);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v41);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v67, v69);
    uint64_t v34 = v71;
    sub_24148744C(v45, v71, (uint64_t (*)(void))sub_24148804C);
    uint64_t v32 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v34, v32, 1, v33);
  uint64_t v48 = v77;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
  uint64_t v50 = v68;
  uint64_t v51 = v73;
  v49(v68, v76, v73);
  uint64_t v52 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  uint64_t v53 = v74;
  sub_241488410(v34, v74, &qword_268D00AD0, (uint64_t (*)(uint64_t))sub_24148804C, MEMORY[0x263F8D8F0]);
  char v54 = v75;
  v49(v75, v50, v51);
  sub_241488480(0);
  sub_241488410(v53, (uint64_t)&v54[*(int *)(v55 + 48)], &qword_268D00AD0, (uint64_t (*)(uint64_t))sub_24148804C, v52);
  sub_2414884BC(v34, &qword_268D00AD0, (uint64_t (*)(uint64_t))sub_24148804C, v52);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v48 + 8);
  v56(v76, v51);
  sub_2414884BC(v53, &qword_268D00AD0, (uint64_t (*)(uint64_t))sub_24148804C, v52);
  return ((uint64_t (*)(char *, uint64_t))v56)(v50, v51);
}

uint64_t sub_24148057C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  sub_24148828C(0, &qword_268CFB060, (uint64_t (*)(uint64_t))sub_24121BAFC, (uint64_t (*)(uint64_t))type metadata accessor for EndDatePickerRow, MEMORY[0x263F19B20]);
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v56 = (uint64_t)v47 - v4;
  uint64_t v54 = type metadata accessor for EndDatePickerRow();
  MEMORY[0x270FA5388](v54);
  uint64_t v53 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24121BAB4(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v55 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v57 = (uint64_t)v47 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v58 = (uint64_t)v47 - v11;
  uint64_t v51 = sub_24162DA38();
  uint64_t v12 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241486148(0, &qword_268D00AF0, (uint64_t (*)(uint64_t))sub_241392A40, MEMORY[0x263F1BA08], MEMORY[0x263F19B28]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v61 = (uint64_t)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v62 = (uint64_t)v47 - v18;
  uint64_t started = type metadata accessor for PregnancyStartDateMethodInputRow(0);
  uint64_t v20 = started - 8;
  MEMORY[0x270FA5388](started);
  uint64_t v52 = (uint64_t)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (void *)((char *)v47 - v23);
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  sub_241631368();
  *uint64_t v24 = swift_getKeyPath();
  sub_241483B08(0, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v50 = v24;
  uint64_t v49 = type metadata accessor for PregnancyDatesInputViewModel();
  v47[2] = sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_241631388();
  uint64_t v25 = (char *)v24 + *(int *)(v20 + 32);
  char v63 = 0;
  sub_241631108();
  uint64_t v26 = v65;
  *uint64_t v25 = v64;
  *((void *)v25 + 1) = v26;
  v47[1] = a1;
  sub_241631368();
  uint64_t v27 = v64;
  sub_241631368();
  uint64_t v28 = v64;
  swift_getKeyPath();
  uint64_t v64 = v28;
  sub_24162BB48();
  swift_release();
  char v29 = *(unsigned char *)(v28 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__selectedInputMethod);
  swift_release();
  uint64_t v30 = v12;
  uint64_t v31 = *(void (**)(char *, void, uint64_t))(v12 + 104);
  uint64_t v32 = v51;
  v31(v14, *MEMORY[0x263F44288], v51);
  uint64_t v33 = v61;
  sub_241391C5C(v27, v29, (uint64_t)v14, v61);
  swift_release();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v12 + 8);
  v48(v14, v32);
  sub_241488520(v33, v62);
  sub_241631368();
  v31(v14, *MEMORY[0x263F44290], v32);
  uint64_t v34 = (uint64_t)v53;
  uint64_t v35 = v54;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(&v53[*(int *)(v54 + 20)], v14, v32);
  swift_retain();
  sub_241631388();
  *(unsigned char *)(v34 + *(int *)(v35 + 24)) = 0;
  sub_241489398(v34, v56, (uint64_t (*)(void))type metadata accessor for EndDatePickerRow);
  swift_storeEnumTagMultiPayload();
  sub_24121BAFC(0);
  sub_2414885BC();
  sub_241486530(&qword_268CFB0D8, (void (*)(uint64_t))type metadata accessor for EndDatePickerRow);
  uint64_t v36 = (uint64_t)v55;
  sub_241630638();
  sub_241488764(v34, (uint64_t (*)(void))type metadata accessor for EndDatePickerRow);
  uint64_t v37 = v57;
  sub_24148744C(v36, v57, (uint64_t (*)(void))sub_24121BAB4);
  swift_release();
  v48(v14, v32);
  uint64_t v38 = v58;
  sub_24148744C(v37, v58, (uint64_t (*)(void))sub_24121BAB4);
  uint64_t v39 = (uint64_t)v50;
  uint64_t v40 = v52;
  sub_241489398((uint64_t)v50, v52, type metadata accessor for PregnancyStartDateMethodInputRow);
  uint64_t v41 = v61;
  uint64_t v42 = v62;
  sub_241488634(v62, v61);
  sub_241489398(v38, v37, (uint64_t (*)(void))sub_24121BAB4);
  uint64_t v43 = v60;
  sub_241489398(v40, v60, type metadata accessor for PregnancyStartDateMethodInputRow);
  sub_2414881CC();
  uint64_t v45 = v44;
  sub_241488634(v41, v43 + *(int *)(v44 + 48));
  sub_241489398(v37, v43 + *(int *)(v45 + 64), (uint64_t (*)(void))sub_24121BAB4);
  sub_241488764(v38, (uint64_t (*)(void))sub_24121BAB4);
  sub_2414886D0(v42);
  sub_241488764(v39, type metadata accessor for PregnancyStartDateMethodInputRow);
  sub_241488764(v37, (uint64_t (*)(void))sub_24121BAB4);
  sub_2414886D0(v41);
  return sub_241488764(v40, type metadata accessor for PregnancyStartDateMethodInputRow);
}

uint64_t sub_241480D88@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_241483B08(0, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for EstimatedDueDateView();
  type metadata accessor for PregnancyDatesInputViewModel();
  sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  return sub_241631388();
}

uint64_t sub_241480EBC@<X0>(char *a1@<X8>)
{
  return sub_24147FB40(v1, a1);
}

uint64_t sub_241480EC4()
{
  return sub_241631348();
}

uint64_t sub_241480FE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  sub_24148828C(0, &qword_268CFB060, (uint64_t (*)(uint64_t))sub_24121BAFC, (uint64_t (*)(uint64_t))type metadata accessor for EndDatePickerRow, MEMORY[0x263F19B20]);
  uint64_t v41 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v40 = (uint64_t)&v31 - v2;
  uint64_t v37 = type metadata accessor for EndDatePickerRow();
  MEMORY[0x270FA5388](v37);
  uint64_t v36 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162DA38();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24121BAB4(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v38 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v39 = (uint64_t)&v31 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v31 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v43 = (uint64_t)&v31 - v16;
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  sub_241631368();
  uint64_t v17 = v44;
  uint64_t v18 = *MEMORY[0x263F44288];
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v19(v7, v18, v4);
  uint64_t v33 = v14;
  sub_24138F638(v17, 7, (uint64_t)v7, 1, (uint64_t)v14);
  swift_release();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v35 = v5 + 8;
  v34(v7, v4);
  sub_24148744C((uint64_t)v14, v43, (uint64_t (*)(void))sub_24121BAB4);
  sub_241631368();
  uint64_t v20 = v7;
  uint64_t v32 = v4;
  v19(v7, v18, v4);
  uint64_t v21 = (uint64_t)v36;
  uint64_t v22 = v37;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(&v36[*(int *)(v37 + 20)], v7, v4);
  type metadata accessor for PregnancyDatesInputViewModel();
  sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  swift_retain();
  sub_241631388();
  *(unsigned char *)(v21 + *(int *)(v22 + 24)) = 1;
  uint64_t v23 = v21;
  sub_241489398(v21, v40, (uint64_t (*)(void))type metadata accessor for EndDatePickerRow);
  swift_storeEnumTagMultiPayload();
  sub_24121BAFC(0);
  sub_2414885BC();
  sub_241486530(&qword_268CFB0D8, (void (*)(uint64_t))type metadata accessor for EndDatePickerRow);
  uint64_t v24 = (uint64_t)v38;
  sub_241630638();
  sub_241488764(v23, (uint64_t (*)(void))type metadata accessor for EndDatePickerRow);
  uint64_t v25 = v39;
  sub_24148744C(v24, v39, (uint64_t (*)(void))sub_24121BAB4);
  swift_release();
  v34(v20, v32);
  uint64_t v26 = (uint64_t)v33;
  sub_24148744C(v25, (uint64_t)v33, (uint64_t (*)(void))sub_24121BAB4);
  uint64_t v27 = v43;
  sub_241489398(v43, v25, (uint64_t (*)(void))sub_24121BAB4);
  sub_241489398(v26, v24, (uint64_t (*)(void))sub_24121BAB4);
  uint64_t v28 = v42;
  sub_241489398(v25, v42, (uint64_t (*)(void))sub_24121BAB4);
  sub_241392948();
  sub_241489398(v24, v28 + *(int *)(v29 + 48), (uint64_t (*)(void))sub_24121BAB4);
  sub_241488764(v26, (uint64_t (*)(void))sub_24121BAB4);
  sub_241488764(v27, (uint64_t (*)(void))sub_24121BAB4);
  sub_241488764(v24, (uint64_t (*)(void))sub_24121BAB4);
  return sub_241488764(v25, (uint64_t (*)(void))sub_24121BAB4);
}

uint64_t sub_241481584@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  sub_24162BB48();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 19);
  return result;
}

uint64_t sub_24148162C()
{
  return swift_release();
}

uint64_t sub_2414816FC()
{
  swift_getKeyPath();
  sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  sub_24162BB48();
  swift_release();
  return *(unsigned __int8 *)(v0 + 21);
}

uint64_t sub_24148179C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
  sub_24162BB48();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 21);
  return result;
}

uint64_t sub_241481844()
{
  return swift_release();
}

uint64_t sub_241481914(char a1, void *a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  os_log_t v105 = a5;
  uint64_t v93 = sub_24162EEB8();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v91 = (char *)v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162EE78();
  uint64_t v97 = *(void *)(v9 - 8);
  uint64_t v98 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v94 = (char *)v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v87 - v12;
  uint64_t v14 = sub_241631488();
  uint64_t v103 = *(void *)(v14 - 8);
  uint64_t v104 = v14;
  MEMORY[0x270FA5388](v14);
  long long v100 = (char *)v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2416314A8();
  uint64_t v101 = *(void *)(v16 - 8);
  uint64_t v102 = v16;
  MEMORY[0x270FA5388](v16);
  long long v99 = (char *)v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24162B788();
  uint64_t v95 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24162EFA8();
  uint64_t v96 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v87 - v25;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v28 = result;
    int v29 = HKShowSensitiveLogItems();
    if (a1)
    {
      uint64_t v90 = a4;
      if (v29)
      {
        sub_24162EF48();
        swift_retain_n();
        uint64_t v30 = sub_24162EF98();
        os_log_type_t v31 = sub_2416322E8();
        int v32 = v31;
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v33 = swift_slowAlloc();
          uint64_t v98 = swift_slowAlloc();
          uint64_t aBlock = v98;
          *(_DWORD *)uint64_t v33 = 136315394;
          LODWORD(v97) = v32;
          uint64_t v34 = sub_2416333E8();
          uint64_t v106 = sub_2411B6898(v34, v35, &aBlock);
          sub_241632C28();
          swift_bridgeObjectRelease();
          *(_WORD *)(v33 + 12) = 2080;
          uint64_t v94 = (char *)(v33 + 14);
          id v36 = objc_msgSend(*(id *)(v28+ OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_pregnancySample), sel_UUID);
          sub_24162B768();

          uint64_t v37 = sub_24162B738();
          unint64_t v39 = v38;
          (*(void (**)(char *, uint64_t))(v95 + 8))(v20, v18);
          uint64_t v106 = sub_2411B6898(v37, v39, &aBlock);
          sub_241632C28();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24118E000, v30, (os_log_type_t)v97, "[%s] Successfully deleted sample %s", (uint8_t *)v33, 0x16u);
          uint64_t v40 = v98;
          swift_arrayDestroy();
          MEMORY[0x245621640](v40, -1, -1);
          MEMORY[0x245621640](v33, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        (*(void (**)(char *, uint64_t))(v96 + 8))(v26, v21);
      }
      if (sub_24147B2C0())
      {
        sub_2411B6854((void *)(v28 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator), *(void *)(v28 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator + 24));
        id v58 = objc_msgSend(*(id *)(v28 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_pregnancySample), sel_UUID);
        sub_24162B768();

        sub_24132DB28((uint64_t)v20);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v20, v18);
      }
      uint64_t v59 = (void *)(v28 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator);
      sub_2411B6854((void *)(v28 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator), *(void *)(v28 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator + 24));
      sub_241333954();
      sub_2411B6854(v59, v59[3]);
      sub_24132A448(14);
      sub_2411B7D14();
      uint64_t v60 = (void *)sub_2416325A8();
      uint64_t v61 = swift_allocObject();
      swift_weakInit();
      uint64_t v62 = (void *)swift_allocObject();
      uint64_t v63 = v90;
      v62[2] = v61;
      v62[3] = v63;
      v62[4] = v105;
      uint64_t v111 = sub_241487668;
      uint64_t v112 = v62;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v108 = 1107296256;
      v109 = sub_2411987F4;
      uint64_t v110 = &unk_26F573D10;
      uint64_t v64 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      uint64_t v65 = v99;
      sub_241631498();
      uint64_t aBlock = MEMORY[0x263F8EE78];
      sub_241486530((unint64_t *)&qword_26B013080, MEMORY[0x263F8F030]);
      sub_241483B08(0, (unint64_t *)&qword_26B013090, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
      sub_2411ACDF0();
      unint64_t v66 = v100;
      uint64_t v67 = v104;
      sub_241632D08();
      MEMORY[0x24561FA80](0, v65, v66, v64);
      _Block_release(v64);
      swift_release();

      (*(void (**)(char *, uint64_t))(v103 + 8))(v66, v67);
      return (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v65, v102);
    }
    else
    {
      if (v29)
      {
        sub_24162EF48();
        swift_retain();
        id v41 = a2;
        swift_retain();
        id v42 = a2;
        uint64_t v43 = sub_24162EF98();
        os_log_type_t v44 = sub_2416322C8();
        int v45 = v44;
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v46 = swift_slowAlloc();
          int v88 = v45;
          uint64_t v47 = v46;
          uint64_t v89 = swift_slowAlloc();
          uint64_t aBlock = v89;
          *(_DWORD *)uint64_t v47 = 136315650;
          uint64_t v90 = v47 + 4;
          uint64_t v48 = sub_2416333E8();
          os_log_t v105 = v43;
          uint64_t v106 = sub_2411B6898(v48, v49, &aBlock);
          v87[2] = &aBlock;
          sub_241632C28();
          swift_bridgeObjectRelease();
          *(_WORD *)(v47 + 12) = 2080;
          v87[1] = v47 + 14;
          id v50 = objc_msgSend(*(id *)(v28+ OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_pregnancySample), sel_UUID);
          sub_24162B768();

          uint64_t v51 = sub_24162B738();
          uint64_t v90 = a4;
          unint64_t v53 = v52;
          (*(void (**)(char *, uint64_t))(v95 + 8))(v20, v18);
          uint64_t v106 = sub_2411B6898(v51, v53, &aBlock);
          sub_241632C28();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v47 + 22) = 2080;
          uint64_t v106 = (uint64_t)a2;
          id v54 = a2;
          sub_241483B08(0, (unint64_t *)&qword_26B010860, (uint64_t (*)(uint64_t))sub_2411CE834, MEMORY[0x263F8D8F0]);
          uint64_t v55 = sub_241631D48();
          uint64_t v106 = sub_2411B6898(v55, v56, &aBlock);
          sub_241632C28();
          swift_bridgeObjectRelease();

          uint64_t v43 = v105;
          _os_log_impl(&dword_24118E000, v105, (os_log_type_t)v88, "[%s] Unable to delete sample with UUID %s error: %s", (uint8_t *)v47, 0x20u);
          uint64_t v57 = v89;
          swift_arrayDestroy();
          MEMORY[0x245621640](v57, -1, -1);
          MEMORY[0x245621640](v47, -1, -1);
        }
        else
        {
          swift_release_n();
        }
        (*(void (**)(char *, uint64_t))(v96 + 8))(v23, v21);
      }
      if (a2)
      {
        uint64_t v68 = (void *)sub_24162B338();
        if (objc_msgSend(v68, sel_hk_isHealthKitErrorWithCode_, 3))
        {
          sub_2411B7D14();
          os_log_t v105 = (os_log_t)sub_2416325A8();
          uint64_t v69 = swift_allocObject();
          swift_weakInit();
          uint64_t v111 = sub_24148761C;
          uint64_t v112 = (void *)v69;
          uint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v108 = 1107296256;
          v109 = sub_2411987F4;
          uint64_t v110 = &unk_26F573CC0;
          uint64_t v70 = _Block_copy(&aBlock);
          swift_release();
          uint64_t v71 = v99;
          sub_241631498();
          uint64_t aBlock = MEMORY[0x263F8EE78];
          sub_241486530((unint64_t *)&qword_26B013080, MEMORY[0x263F8F030]);
          sub_241483B08(0, (unint64_t *)&qword_26B013090, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
          sub_2411ACDF0();
          uint64_t v72 = v100;
          uint64_t v73 = v104;
          sub_241632D08();
          os_log_t v74 = v105;
          MEMORY[0x24561FA80](0, v71, v72, v70);
          _Block_release(v70);

          (*(void (**)(char *, uint64_t))(v103 + 8))(v72, v73);
          (*(void (**)(char *, uint64_t))(v101 + 8))(v71, v102);
        }
        else
        {
        }
      }
      uint64_t v75 = sub_24162EE98();
      sub_24162EEC8();
      os_signpost_type_t v76 = sub_241632618();
      if (sub_241632BC8())
      {
        swift_retain();
        uint64_t v77 = v91;
        sub_24162EEF8();
        swift_release();
        uint64_t v78 = v92;
        uint64_t v79 = v93;
        if ((*(unsigned int (**)(char *, uint64_t))(v92 + 88))(v77, v93) == *MEMORY[0x263F90238])
        {
          uint64_t v80 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v79);
          uint64_t v80 = "";
        }
        uint64_t v82 = v97;
        uint64_t v81 = v98;
        uint64_t v83 = v94;
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v94, v13, v98);
        uint64_t v84 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v84 = 0;
        os_signpost_id_t v85 = sub_24162EE58();
        _os_signpost_emit_with_name_impl(&dword_24118E000, v75, v76, v85, "OffboardingCoordinator.deleteFactor", v80, v84, 2u);
        MEMORY[0x245621640](v84, -1, -1);
        swift_release();

        uint64_t v86 = *(void (**)(char *, uint64_t))(v82 + 8);
        v86(v13, v81);
        return ((uint64_t (*)(char *, uint64_t))v86)(v83, v81);
      }
      else
      {
        swift_release();

        return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v13, v98);
      }
    }
  }
  return result;
}

id sub_2414827E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a3;
  uint64_t v46 = a2;
  uint64_t v3 = sub_24162EEB8();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v43 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162EE78();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v37 - v10;
  uint64_t v12 = sub_24162EFA8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  id result = (id)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = (uint64_t)result;
    id v41 = v8;
    id result = objc_msgSend(self, sel_sharedBehavior);
    if (result)
    {
      uint64_t v18 = result;
      unsigned int v19 = objc_msgSend(result, sel_showSensitiveLogItems);

      if (v19)
      {
        uint64_t v40 = v5;
        sub_24162EF48();
        uint64_t v20 = sub_24162EF98();
        os_log_type_t v21 = sub_2416322E8();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          uint64_t v48 = v39;
          unint64_t v38 = v22;
          *(_DWORD *)uint64_t v22 = 136315138;
          v37[1] = v22 + 4;
          uint64_t v23 = sub_2416333E8();
          uint64_t v47 = sub_2411B6898(v23, v24, &v48);
          sub_241632C28();
          swift_bridgeObjectRelease();
          uint64_t v25 = v38;
          _os_log_impl(&dword_24118E000, v20, v21, "[%s] Dismissing edit view", v38, 0xCu);
          uint64_t v26 = v39;
          swift_arrayDestroy();
          MEMORY[0x245621640](v26, -1, -1);
          MEMORY[0x245621640](v25, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        uint64_t v5 = v40;
      }
      sub_2411B6854((void *)(v17 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator), *(void *)(v17 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator + 24));
      swift_retain();
      sub_24132CC7C((uint64_t)sub_241487674, v17);
      swift_release();
      uint64_t v27 = sub_24162EE98();
      sub_24162EEC8();
      os_signpost_type_t v28 = sub_241632618();
      if (sub_241632BC8())
      {
        swift_retain();
        int v29 = v43;
        sub_24162EEF8();
        swift_release();
        uint64_t v31 = v44;
        uint64_t v30 = v45;
        if ((*(unsigned int (**)(char *, uint64_t))(v44 + 88))(v29, v45) == *MEMORY[0x263F90238])
        {
          int v32 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
          int v32 = "";
        }
        uint64_t v33 = v41;
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v41, v11, v5);
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        os_signpost_id_t v35 = sub_24162EE58();
        _os_signpost_emit_with_name_impl(&dword_24118E000, v27, v28, v35, "OffboardingCoordinator.deleteFactor", v32, v34, 2u);
        MEMORY[0x245621640](v34, -1, -1);
        swift_release();

        id v36 = *(void (**)(char *, uint64_t))(v6 + 8);
        v36(v11, v5);
        return (id)((uint64_t (*)(char *, uint64_t))v36)(v33, v5);
      }
      else
      {
        swift_release();

        return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_241482D28()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_2411A3DF4(result + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator, (uint64_t)v1);
    swift_release();
    sub_2411B6854(v1, v1[3]);
    sub_24132CC7C((uint64_t)nullsub_1, 0);
    return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v1);
  }
  return result;
}

void sub_241482DC4(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v42 = *v1;
  uint64_t v4 = sub_24162B718();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v41 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = sub_24162EFA8();
  uint64_t v45 = *(void *)(v10 - 8);
  uint64_t v46 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v43 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v39 - v13;
  if (HKShowSensitiveLogItems())
  {
    sub_24162EF48();
    uint64_t v15 = sub_24162EF98();
    os_log_type_t v16 = sub_2416322E8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v44 = a1;
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v40 = v5;
      uint64_t v20 = v19;
      uint64_t v47 = (char *)v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v39 = v18 + 4;
      uint64_t v21 = sub_2416333E8();
      uint64_t v49 = sub_2411B6898(v21, v22, (uint64_t *)&v47);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v15, v16, "[%s] Processing edits made by user", v18, 0xCu);
      swift_arrayDestroy();
      uint64_t v23 = v20;
      uint64_t v5 = v40;
      MEMORY[0x245621640](v23, -1, -1);
      unint64_t v24 = v18;
      a1 = v44;
      MEMORY[0x245621640](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v46);
  }
  uint64_t v25 = (char *)sub_241380C40();
  uint64_t v26 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator);
  sub_2411B6854((uint64_t *)((char *)v2 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator), *(uint64_t *)((char *)v2 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator + 24));
  uint64_t v27 = *(void **)((char *)v2 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_pregnancySample);
  uint64_t v44 = v25;
  sub_241332810(v27, v25);
  sub_24162B5E8();
  LOBYTE(v25) = sub_24162B698();
  os_signpost_type_t v28 = *(void (**)(char *, uint64_t))(v5 + 8);
  v28(v9, v4);
  if ((v25 & 1) == 0) {
    goto LABEL_7;
  }
  swift_getKeyPath();
  uint64_t v47 = a1;
  sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_24162BB48();
  swift_release();
  int v29 = &a1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__pregnancyEndDate];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v29, v4);
  uint64_t v30 = v41;
  sub_24162B5E8();
  sub_241486530((unint64_t *)&qword_268CFAD00, MEMORY[0x263F07490]);
  LOBYTE(v29) = sub_241631C28();
  v28(v30, v4);
  v28(v9, v4);
  if ((v29 & 1) == 0)
  {
    *(unsigned char *)(*sub_2411B6854(v26, v26[3])
             + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31PregnancyOffboardingCoordinator_flowType) = 2;
    sub_24132A754(0, 0, 0);
    if (sub_24132B12C()) {
      sub_24132B520(1);
    }
    else {
      sub_24132B7DC(1);
    }
  }
  else
  {
LABEL_7:
    sub_2411B6854(v26, v26[3]);
    sub_24132A754(0, 0, 0);
    sub_2411B6854(v26, v26[3]);
    if ((sub_24132B12C() & 1) != 0
      && (*((unsigned char *)v2
          + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_pregnancyOccurrenceType) & 1) == 0)
    {
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      *(&v39 - 2) = (uint8_t *)v2;
      *((unsigned char *)&v39 - 8) = 1;
      uint64_t v49 = (uint64_t)v2;
      sub_241486530(&qword_268D00A48, (void (*)(uint64_t))type metadata accessor for EditPregnancyView.ViewModel);
      sub_24162BB38();

      swift_release();
      return;
    }
    uint64_t v31 = v43;
    sub_24162EF48();
    int v32 = sub_24162EF98();
    os_log_type_t v33 = sub_2416322E8();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v48 = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v49 = v42;
      swift_getMetatypeMetadata();
      uint64_t v36 = sub_241631D78();
      uint64_t v49 = sub_2411B6898(v36, v37, &v48);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v32, v33, "[%s] Dismissing", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v35, -1, -1);
      MEMORY[0x245621640](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v46);
    sub_2411B6854(v26, v26[3]);
    sub_24132CC7C((uint64_t)nullsub_1, 0);
  }
}

uint64_t sub_241483524()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_oldStartDate;
  uint64_t v2 = sub_24162B718();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_oldEndDate, v2);

  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v0 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator);
  uint64_t v4 = v0 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_signposter;
  uint64_t v5 = sub_24162EEA8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel___observationRegistrar;
  uint64_t v7 = sub_24162BB88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_deallocClassInstance();
}

uint64_t sub_2414836BC()
{
  return type metadata accessor for EditPregnancyView.ViewModel(0);
}

uint64_t type metadata accessor for EditPregnancyView.ViewModel(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D00858);
}

uint64_t sub_2414836E4()
{
  uint64_t result = sub_24162B718();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24162EEA8();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_24162BB88();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EditPregnancyView.OccurrenceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2414838F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditPregnancyView.OccurrenceType()
{
  return &type metadata for EditPregnancyView.OccurrenceType;
}

uint64_t *sub_241483930(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    unsigned int v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_241483B08(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_24162FEE8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      uint64_t *v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    swift_retain();
  }
  swift_retain();
  return v4;
}

void sub_241483B08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241483B6C(uint64_t a1, uint64_t a2)
{
  sub_241483B08(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_24162FEE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();

  return swift_release();
}

void *sub_241483CBC(void *a1, void *a2, uint64_t a3)
{
  sub_241483B08(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24162FEE8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_241483E48(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2414884BC((uint64_t)a1, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_241483B08(0, (unint64_t *)&qword_268CFA8A8, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_24162FEE8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  swift_retain();
  swift_release();
  *((void *)v14 + 1) = *((void *)v15 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_241484018(char *a1, char *a2, uint64_t a3)
{
  sub_241483B08(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_24162FEE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_241484198(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_2414884BC((uint64_t)a1, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_241483B08(0, (unint64_t *)&qword_268CFA8A8, v6, v7);
    uint64_t v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_24162FEE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)&a1[v15] = *(void *)v17;
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_release();
  return a1;
}

uint64_t sub_241484360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241484374);
}

uint64_t sub_241484374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241483B08(0, &qword_268CFAFC8, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_2414844E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2414844FC);
}

void sub_2414844FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_241483B08(0, &qword_268CFAFC8, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for EditPregnancyView(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D00868);
}

void sub_24148468C()
{
  sub_241483B08(319, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_241483B08(319, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for EditPregnancyView.ViewState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241484888);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditPregnancyView.ViewState()
{
  return &type metadata for EditPregnancyView.ViewState;
}

unint64_t sub_2414848C4()
{
  unint64_t result = qword_268D00878;
  if (!qword_268D00878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00878);
  }
  return result;
}

uint64_t sub_241484918()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_241484938()
{
  unint64_t result = qword_268D00880;
  if (!qword_268D00880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00880);
  }
  return result;
}

uint64_t sub_24148498C@<X0>(uint64_t *a1@<X8>)
{
  if (qword_268CF9708 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_268D00740;
  uint64_t v2 = *(void *)algn_268D00748;
  uint64_t v4 = qword_268CF9710;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_268D00750;
  uint64_t v5 = *(void *)algn_268D00758;
  uint64_t v7 = qword_268CF9718;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_268D00760;
  uint64_t v8 = *(void *)algn_268D00768;
  uint64_t v10 = self;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v11 = MEMORY[0x24561E470](objc_msgSend(v10, sel_secondaryLabelColor));
  uint64_t v12 = sub_241630AA8();
  uint64_t result = swift_getKeyPath();
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v9;
  a1[5] = v8;
  a1[6] = v11;
  a1[7] = result;
  a1[8] = v12;
  return result;
}

uint64_t sub_241484AF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_241630518();
  MEMORY[0x270FA5388](v2 - 8);
  sub_241630508();
  sub_2416304F8();
  if (qword_268CF9720 != -1) {
    swift_once();
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2416304E8();
  swift_bridgeObjectRelease();
  sub_2416304F8();
  sub_241630538();
  uint64_t v3 = sub_241630C08();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  id v8 = objc_msgSend(self, sel_secondaryLabelColor);
  MEMORY[0x24561E470](v8);
  uint64_t v9 = sub_241630BB8();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_24120EFBC(v3, v5, v7);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241630AA8();
  uint64_t v14 = sub_241630BE8();
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v20 = v19;
  swift_release();
  sub_24120EFBC(v9, v11, v13);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v16;
  *(unsigned char *)(a1 + 16) = v18 & 1;
  *(void *)(a1 + 24) = v20;
  return result;
}

uint64_t sub_241484D28(uint64_t a1)
{
  return sub_24148518C(a1, 0xD000000000000021, 0x800000024166D8B0, &qword_268D00730, algn_268D00738);
}

uint64_t sub_241484D50(uint64_t a1)
{
  return sub_24148518C(a1, 0xD000000000000024, 0x800000024166D940, &qword_268D00740, algn_268D00748);
}

uint64_t sub_241484D78(uint64_t a1)
{
  return sub_24148518C(a1, 0xD000000000000035, 0x800000024166D900, &qword_268D00750, algn_268D00758);
}

uint64_t sub_241484DA0(uint64_t a1)
{
  return sub_24148518C(a1, 0xD000000000000032, 0x8000000241657F60, &qword_268D00760, algn_268D00768);
}

uint64_t sub_241484DC8(uint64_t a1)
{
  return sub_24148518C(a1, 0xD00000000000001BLL, 0x800000024166D8E0, &qword_268D00770, algn_268D00778);
}

uint64_t sub_241484DF0(uint64_t a1)
{
  return sub_24148518C(a1, 0xD000000000000023, 0x800000024166D650, &qword_268D00780, algn_268D00788);
}

uint64_t sub_241484E18(uint64_t a1)
{
  return sub_24148518C(a1, 0xD000000000000014, 0x800000024166D610, &qword_268D00790, algn_268D00798);
}

uint64_t sub_241484E40(uint64_t a1)
{
  return sub_24148518C(a1, 0xD000000000000016, 0x800000024166D630, &qword_268D007A0, algn_268D007A8);
}

uint64_t sub_241484E68(uint64_t a1)
{
  return sub_24148518C(a1, 0xD00000000000001DLL, 0x800000024166D890, &qword_268D007B0, algn_268D007B8);
}

uint64_t sub_241484E90()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  char v7 = &v13[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  uint64_t v11 = v10;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  qword_268D007C0 = v9;
  *(void *)algn_268D007C8 = v11;
  return result;
}

uint64_t sub_241485074(uint64_t a1)
{
  return sub_24148518C(a1, 0xD000000000000031, 0x800000024166D7D0, &qword_268D007D0, &qword_268D007D8);
}

uint64_t sub_24148509C(uint64_t a1)
{
  return sub_24148518C(a1, 0xD00000000000003BLL, 0x800000024166D760, &qword_268D007E0, algn_268D007E8);
}

uint64_t sub_2414850C4(uint64_t a1)
{
  return sub_24148518C(a1, 0xD00000000000002CLL, 0x800000024166D7A0, &qword_268D007F0, algn_268D007F8);
}

uint64_t sub_2414850EC(uint64_t a1)
{
  return sub_24148518C(a1, 0xD00000000000002CLL, 0x800000024166D730, &qword_268D00800, algn_268D00808);
}

uint64_t sub_241485114(uint64_t a1)
{
  return sub_24148518C(a1, 0xD00000000000002FLL, 0x800000024166D680, &qword_268D00810, &qword_268D00818);
}

uint64_t sub_24148513C(uint64_t a1)
{
  return sub_24148518C(a1, 0xD000000000000037, 0x800000024166D6F0, &qword_268D00820, &qword_268D00828);
}

uint64_t sub_241485164(uint64_t a1)
{
  return sub_24148518C(a1, 0xD000000000000036, 0x800000024166D6B0, &qword_268D00830, &qword_268D00838);
}

uint64_t sub_24148518C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v20[-v13];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v11, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v16 = sub_241631D38();
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
  *a4 = v16;
  *a5 = v18;
  return result;
}

uint64_t sub_24148538C()
{
  return sub_241630298();
}

uint64_t sub_2414853B0()
{
  return sub_241630298();
}

uint64_t sub_2414853D4(uint64_t a1)
{
  uint64_t v2 = sub_24162FEE8();
  __n128 v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_2416302A8();
}

uint64_t sub_2414854A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_241630358();
  *a1 = result;
  return result;
}

uint64_t sub_2414854CC()
{
  return sub_241630368();
}

uint64_t sub_2414854F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_241630378();
  *a1 = result;
  return result;
}

uint64_t sub_241485520()
{
  return sub_241630388();
}

uint64_t sub_24148554C(uint64_t a1)
{
  sub_24148645C(0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_241489398(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_24148645C);
  return sub_2416303F8();
}

uint64_t sub_2414855E8(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v41 = a6;
  uint64_t v42 = a7;
  int v40 = a3;
  unint64_t v37 = a1;
  unint64_t v38 = a2;
  uint64_t v11 = sub_24162B718();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v39 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = sub_24162EFA8();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v46 = type metadata accessor for PregnancyOffboardingCoordinator();
  uint64_t v47 = &off_26F573AD8;
  *(void *)&long long v45 = a4;
  *(_DWORD *)(a8 + 16) = 0;
  *(_WORD *)(a8 + 20) = 1;
  sub_24162EF48();
  sub_24162EE88();
  sub_24162BB78();
  swift_getKeyPath();
  uint64_t v44 = a5;
  sub_241486530((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_24162BB48();
  swift_release();
  uint64_t v18 = a5 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__pregnancyStartDate;
  swift_beginAccess();
  uint64_t v36 = v12;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v34 = v11;
  v19(v16, v18, v11);
  uint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v20(a8 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_oldStartDate, v16, v11);
  swift_getKeyPath();
  uint64_t v35 = a5;
  uint64_t v43 = a5;
  sub_24162BB48();
  swift_release();
  uint64_t v21 = a5 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__pregnancyEndDate;
  swift_beginAccess();
  uint64_t v22 = v34;
  v19(v16, v21, v34);
  v20(a8 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_oldEndDate, v16, v22);
  uint64_t v23 = v37;
  unint64_t v24 = v38;
  *(void *)(a8 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_healthStore) = v37;
  *(void *)(a8 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_pregnancySample) = v24;
  id v25 = v23;
  id v26 = v24;
  id v27 = objc_msgSend(v26, sel_endDate);
  sub_24162B6A8();

  os_signpost_type_t v28 = v39;
  sub_24162B5E8();
  LOBYTE(v27) = sub_24162B698();

  swift_release();
  int v29 = *(void (**)(char *, uint64_t))(v36 + 8);
  v29(v28, v22);
  v29(v16, v22);
  *(unsigned char *)(a8 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_pregnancyOccurrenceType) = (v27 & 1) == 0;
  *(unsigned char *)(a8 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_shouldShowCancelButton) = v40;
  uint64_t v30 = (void *)(a8
                 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_cycleFactorsNotificationHandler);
  uint64_t v31 = v42;
  void *v30 = v41;
  v30[1] = v31;
  sub_2411B6CD4(&v45, a8 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_coordinator);
  return a8;
}

uint64_t sub_2414859E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24147829C(a1, &OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__pregnancyStartDate, a2);
}

uint64_t sub_241485A14@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24147829C(a1, &OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__pregnancyEndDate, a2);
}

uint64_t sub_241485A40()
{
  return sub_24137C14C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_241485A5C()
{
  if (!qword_268D00888)
  {
    sub_241630078();
    sub_241485C04();
    sub_241488C54(255, &qword_268D00898, (void (*)(uint64_t))sub_241485D7C, (void (*)(void))sub_241486BC0);
    sub_241483B08(255, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94, MEMORY[0x263F1BAC8]);
    sub_241485D7C();
    sub_241486BC0();
    swift_getOpaqueTypeConformance2();
    sub_241489400((unint64_t *)&qword_268CFD9C8, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94);
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_2416301A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00888);
    }
  }
}

void sub_241485C04()
{
  if (!qword_268D00890)
  {
    sub_241488C54(255, &qword_268D00898, (void (*)(uint64_t))sub_241485D7C, (void (*)(void))sub_241486BC0);
    sub_241483B08(255, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94, MEMORY[0x263F1BAC8]);
    sub_241485D7C();
    sub_241486BC0();
    swift_getOpaqueTypeConformance2();
    sub_241489400((unint64_t *)&qword_268CFD9C8, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D00890);
    }
  }
}

void sub_241485D7C()
{
  if (!qword_268D008A0)
  {
    sub_241483B08(255, &qword_268D008A8, (uint64_t (*)(uint64_t))sub_241485E4C, MEMORY[0x263F1BAC8]);
    sub_241489400(&qword_268D009B8, &qword_268D008A8, (uint64_t (*)(uint64_t))sub_241485E4C);
    unint64_t v0 = sub_241630B68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D008A0);
    }
  }
}

void sub_241485E4C()
{
  if (!qword_268D008B0)
  {
    sub_241485ED4(255);
    sub_2414865AC(255);
    sub_241486634(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D008B0);
    }
  }
}

void sub_241485ED4(uint64_t a1)
{
}

void sub_241485EF4()
{
  if (!qword_268D008C0)
  {
    sub_241485FA0();
    sub_241486888(255, (unint64_t *)&qword_268D00948, MEMORY[0x263F1A2C8], sub_2414864FC, MEMORY[0x263F19DC0]);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D008C0);
    }
  }
}

void sub_241485FA0()
{
  if (!qword_268D008C8)
  {
    sub_241486004(255);
    unint64_t v0 = sub_241631358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D008C8);
    }
  }
}

void sub_241486004(uint64_t a1)
{
}

void sub_241486040(uint64_t a1)
{
}

void sub_241486070()
{
  if (!qword_268D008E8)
  {
    sub_241486148(255, &qword_268D008F0, (uint64_t (*)(uint64_t))sub_2414861B4, MEMORY[0x263F18C18], MEMORY[0x263F18E28]);
    sub_241483B08(255, &qword_268D00908, (uint64_t (*)(uint64_t))sub_241486240, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D008E8);
    }
  }
}

void sub_241486148(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_2414861B4()
{
  if (!qword_268D008F8)
  {
    sub_2414895EC(255, &qword_268D00900, MEMORY[0x263F1B570], MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D008F8);
    }
  }
}

void sub_241486240()
{
  if (!qword_268D00910)
  {
    sub_2414862CC();
    sub_241488E40(255, &qword_268CFAE38, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00910);
    }
  }
}

void sub_2414862CC()
{
  if (!qword_268D00918)
  {
    sub_24148634C();
    sub_241486490(255, (unint64_t *)&qword_268CFAE40, (unint64_t *)&qword_268CFAE48, MEMORY[0x263F1B440]);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00918);
    }
  }
}

void sub_24148634C()
{
  if (!qword_268D00920)
  {
    sub_2414863CC();
    sub_241486490(255, (unint64_t *)&qword_268CFF9A0, &qword_268CFF9A8, MEMORY[0x263F1A738]);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00920);
    }
  }
}

void sub_2414863CC()
{
  if (!qword_268D00928)
  {
    sub_241483B08(255, &qword_268D00930, (uint64_t (*)(uint64_t))sub_24148645C, MEMORY[0x263F1A418]);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00928);
    }
  }
}

void sub_24148645C(uint64_t a1)
{
}

void sub_241486490(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_241488E40(255, a3, a4, MEMORY[0x263F8D8F0]);
    unint64_t v5 = sub_2416308C8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2414864FC()
{
  return sub_241486530(&qword_268D00950, MEMORY[0x263F1A2C8]);
}

uint64_t sub_241486530(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241486578(uint64_t a1)
{
}

void sub_2414865AC(uint64_t a1)
{
}

uint64_t type metadata accessor for EditPregnancyView.OngoingPregnancySection(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D00AA8);
}

uint64_t type metadata accessor for EditPregnancyView.PastPregnancySection(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D00A98);
}

void sub_241486634(uint64_t a1)
{
}

void sub_241486654(uint64_t a1)
{
}

void sub_241486684(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_241487FE0(255, a3, a4);
    sub_241486888(255, (unint64_t *)&qword_268D00948, MEMORY[0x263F1A2C8], sub_2414864FC, MEMORY[0x263F19DC0]);
    unint64_t v5 = sub_241630188();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_24148673C()
{
  if (!qword_268D00988)
  {
    sub_241486888(255, &qword_268D00990, (uint64_t (*)(uint64_t))sub_241486908, sub_241486A60, MEMORY[0x263F1B5E8]);
    sub_241483B08(255, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94, MEMORY[0x263F1BAC8]);
    sub_241486B24();
    sub_241489400((unint64_t *)&qword_268CFD9C8, &qword_268CFD990, (uint64_t (*)(uint64_t))sub_241486A94);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D00988);
    }
  }
}

void sub_241486888(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_241486908()
{
  if (!qword_268D00998)
  {
    sub_24148698C(255, &qword_268CFFD50, (unint64_t *)&qword_268CFFD58);
    sub_2414869E8();
    unint64_t v0 = sub_2416311C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00998);
    }
  }
}

void sub_24148698C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241488850(255, a3);
    unint64_t v4 = sub_241631458();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_2414869E8()
{
  unint64_t result = qword_268D009A0;
  if (!qword_268D009A0)
  {
    sub_24148698C(255, &qword_268CFFD50, (unint64_t *)&qword_268CFFD58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D009A0);
  }
  return result;
}

uint64_t sub_241486A60()
{
  return sub_241486530(&qword_268D009A8, (void (*)(uint64_t))sub_241486908);
}

void sub_241486A94()
{
  if (!qword_268CFD998)
  {
    sub_2414895EC(255, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CFD998);
    }
  }
}

unint64_t sub_241486B24()
{
  unint64_t result = qword_268D009B0;
  if (!qword_268D009B0)
  {
    sub_241486888(255, &qword_268D00990, (uint64_t (*)(uint64_t))sub_241486908, sub_241486A60, MEMORY[0x263F1B5E8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D009B0);
  }
  return result;
}

uint64_t sub_241486BC0()
{
  return sub_241486530(&qword_268D009C0, (void (*)(uint64_t))sub_241485D7C);
}

void sub_241486BF4()
{
  if (!qword_268D009C8)
  {
    sub_241485A5C();
    sub_241486530(&qword_268D009D0, (void (*)(uint64_t))sub_241485A5C);
    sub_2411D662C();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D009C8);
    }
  }
}

void sub_241486CC4()
{
  if (!qword_268D009D8)
  {
    sub_241486BF4();
    sub_241485A5C();
    sub_241486530(&qword_268D009D0, (void (*)(uint64_t))sub_241485A5C);
    sub_2411D662C();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D009D8);
    }
  }
}

uint64_t sub_241486DC4@<X0>(uint64_t a1@<X8>)
{
  return sub_24147BC44(*(void *)(v1 + 16), a1);
}

uint64_t sub_241486DCC@<X0>(uint64_t a1@<X8>)
{
  return sub_24147E8C4(*(void *)(v1 + 16), a1);
}

void sub_241486DD4()
{
  if (!qword_268D009F0)
  {
    sub_241486E44();
    sub_241486F7C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D009F0);
    }
  }
}

void sub_241486E44()
{
  if (!qword_268D009F8)
  {
    sub_241486EF8();
    sub_241489000(&qword_268D00A08, (void (*)(uint64_t))sub_241486EF8, (void (*)(void))sub_2413550D8);
    unint64_t v0 = sub_24162FF48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D009F8);
    }
  }
}

void sub_241486EF8()
{
  if (!qword_268D00A00)
  {
    sub_2414895EC(255, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00A00);
    }
  }
}

void sub_241486F7C()
{
  if (!qword_268D00A10)
  {
    sub_241486FEC();
    sub_2414870A4();
    unint64_t v0 = sub_24162FF48();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00A10);
    }
  }
}

void sub_241486FEC()
{
  if (!qword_268D00A18)
  {
    sub_2414895EC(255, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    sub_241488E40(255, &qword_268D00A20, MEMORY[0x263F8D4F8], MEMORY[0x263F1A4D8]);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00A18);
    }
  }
}

unint64_t sub_2414870A4()
{
  unint64_t result = qword_268D00A28;
  if (!qword_268D00A28)
  {
    sub_241486FEC();
    sub_2413550D8();
    sub_24148711C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00A28);
  }
  return result;
}

unint64_t sub_24148711C()
{
  unint64_t result = qword_268D00A30;
  if (!qword_268D00A30)
  {
    sub_241488E40(255, &qword_268D00A20, MEMORY[0x263F8D4F8], MEMORY[0x263F1A4D8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00A30);
  }
  return result;
}

unint64_t sub_241487198()
{
  unint64_t result = qword_268D00A38;
  if (!qword_268D00A38)
  {
    sub_241483B08(255, &qword_268D009E8, (uint64_t (*)(uint64_t))sub_241486DD4, MEMORY[0x263F19AD0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00A38);
  }
  return result;
}

uint64_t sub_241487220@<X0>(uint64_t a1@<X8>)
{
  return sub_24147EBF0(*(void *)(v1 + 16), a1);
}

uint64_t sub_241487228@<X0>(uint64_t a1@<X8>)
{
  return sub_24147EF80(*(void *)(v1 + 16), a1);
}

uint64_t sub_241487234()
{
  return sub_2414872E8(sub_24147F21C);
}

uint64_t sub_241487254()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char *sub_241487264(unsigned char *a1)
{
  return sub_241547A94(a1, *(unsigned char *)(v1 + 16));
}

void sub_241487274()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 21) = *(unsigned char *)(v0 + 24);
}

void sub_24148728C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 19) = *(unsigned char *)(v0 + 24);
}

void sub_2414872A4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 18) = *(unsigned char *)(v0 + 24);
}

void sub_2414872BC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 17) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_2414872D0()
{
  return sub_2414872E8((uint64_t (*)(uint64_t))sub_24147EEBC);
}

uint64_t sub_2414872E8(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for EditPregnancyView(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_24148735C@<X0>(uint64_t a1@<X8>)
{
  return sub_24147C244(*(void *)(v1 + 16), a1);
}

uint64_t sub_241487364@<X0>(uint64_t a1@<X8>)
{
  return sub_24147D680(*(void *)(v1 + 16), a1);
}

uint64_t sub_24148736C@<X0>(char *a1@<X8>)
{
  return sub_24147DD68(*(void *)(v1 + 16), a1);
}

uint64_t sub_241487378()
{
  return sub_2414872E8(sub_24147E210);
}

uint64_t sub_241487394()
{
  return sub_2414872E8(sub_24147E70C);
}

void sub_2414873B4()
{
  if (!qword_268D00A70)
  {
    sub_241483B08(255, &qword_268D008E0, (uint64_t (*)(uint64_t))sub_241486070, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00A70);
    }
  }
}

uint64_t sub_24148744C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_2414874B4()
{
  unint64_t result = qword_268D00A78;
  if (!qword_268D00A78)
  {
    sub_241486004(255);
    sub_241486530(&qword_268D00A80, sub_241486040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00A78);
  }
  return result;
}

uint64_t sub_241487564@<X0>(uint64_t a1@<X8>)
{
  return sub_2414796A4(*(void *)(v1 + 16), a1);
}

uint64_t sub_24148756C()
{
  return sub_241479AF8();
}

uint64_t sub_24148757C@<X0>(char *a1@<X8>)
{
  return sub_241479F94(*(void *)(v1 + 16), a1);
}

uint64_t sub_241487584@<X0>(uint64_t a1@<X8>)
{
  return sub_24147B170(a1);
}

uint64_t sub_241487590()
{
  return sub_2414872E8((uint64_t (*)(uint64_t))sub_24147A4B8);
}

uint64_t sub_2414875AC()
{
  return sub_2414872E8((uint64_t (*)(uint64_t))sub_24147B03C);
}

void sub_2414875C4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 16) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_2414875D4()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241487610(char a1, void *a2)
{
  return sub_241481914(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32));
}

uint64_t sub_24148761C()
{
  return sub_241482D28();
}

uint64_t sub_241487628()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

id sub_241487668()
{
  return sub_2414827E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_241487674()
{
  if (*(void *)(v0
                 + OBJC_IVAR____TtCV24MenstrualCyclesAppPlugin17EditPregnancyView9ViewModel_cycleFactorsNotificationHandler))
    return sub_2413EDA34();
  return result;
}

uint64_t sub_2414876A4(uint64_t a1, uint64_t a2)
{
  return sub_241489398(a1, a2, (uint64_t (*)(void))sub_241486040);
}

uint64_t sub_2414876BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_2414876E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_241487714()
{
  return sub_2416303E8();
}

uint64_t sub_24148773C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_241630378();
  *a1 = result;
  return result;
}

uint64_t sub_241487768()
{
  return sub_241630388();
}

uint64_t sub_24148779C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_241630358();
  *a1 = result;
  return result;
}

uint64_t sub_2414877C8()
{
  return sub_241630368();
}

uint64_t sub_241487808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24148781C);
}

uint64_t sub_241487820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241487834);
}

uint64_t sub_24148783C(uint64_t a1, uint64_t a2)
{
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_2414878EC(uint64_t a1)
{
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_241487980(uint64_t a1, uint64_t a2)
{
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_241487A14(uint64_t a1, uint64_t a2)
{
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_241487AA8(uint64_t a1, uint64_t a2)
{
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_241487B3C(uint64_t a1, uint64_t a2)
{
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_241487BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241487BE4);
}

uint64_t sub_241487BE8(uint64_t a1, uint64_t a2)
{
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_241487C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241487C98);
}

uint64_t sub_241487C9C(uint64_t a1, uint64_t a2)
{
  sub_241483B08(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_241487D3C()
{
  sub_241483B08(319, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for PastPregnancyFooterView()
{
  return &type metadata for PastPregnancyFooterView;
}

uint64_t sub_241487E08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241487F5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241487F78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241487F94()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241487FB0(uint64_t a1)
{
}

void sub_241487FE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241631358();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24148804C(uint64_t a1)
{
}

void sub_24148806C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_241483B08(255, &qword_268D00958, (uint64_t (*)(uint64_t))sub_241486578, MEMORY[0x263F1A418]);
    unint64_t v4 = sub_241630188();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241488108()
{
  if (!qword_268D00AD8)
  {
    sub_241483B08(255, &qword_268D00AE0, (uint64_t (*)(uint64_t))sub_2414881CC, MEMORY[0x263F1BAC8]);
    sub_241488E40(255, &qword_268D00AF8, (uint64_t)&type metadata for PregnancyPrivacyFooterView, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241631358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00AD8);
    }
  }
}

void sub_2414881CC()
{
  if (!qword_268D00AE8)
  {
    type metadata accessor for PregnancyStartDateMethodInputRow(255);
    sub_241486148(255, &qword_268D00AF0, (uint64_t (*)(uint64_t))sub_241392A40, MEMORY[0x263F1BA08], MEMORY[0x263F19B28]);
    sub_24121BAB4(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D00AE8);
    }
  }
}

void sub_24148828C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_241488318@<X0>(uint64_t a1@<X8>)
{
  return sub_24148057C(*(void *)(v1 + 16), a1);
}

unint64_t sub_241488320()
{
  unint64_t result = qword_268D00B08;
  if (!qword_268D00B08)
  {
    sub_241488E40(255, &qword_268D00AF8, (uint64_t)&type metadata for PregnancyPrivacyFooterView, MEMORY[0x263F8D8F0]);
    sub_2414883B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00B08);
  }
  return result;
}

unint64_t sub_2414883B4()
{
  unint64_t result = qword_268D00B10;
  if (!qword_268D00B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00B10);
  }
  return result;
}

uint64_t sub_241488408@<X0>(uint64_t *a1@<X8>)
{
  return sub_241480D88(a1);
}

uint64_t sub_241488410(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_241483B08(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_241488480(uint64_t a1)
{
}

uint64_t sub_2414884BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_241483B08(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_241488520(uint64_t a1, uint64_t a2)
{
  sub_241486148(0, &qword_268D00AF0, (uint64_t (*)(uint64_t))sub_241392A40, MEMORY[0x263F1BA08], MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2414885BC()
{
  unint64_t result = qword_268CFB068;
  if (!qword_268CFB068)
  {
    sub_24121BAFC(255);
    sub_24121BF18();
    sub_24121C0D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFB068);
  }
  return result;
}

uint64_t sub_241488634(uint64_t a1, uint64_t a2)
{
  sub_241486148(0, &qword_268D00AF0, (uint64_t (*)(uint64_t))sub_241392A40, MEMORY[0x263F1BA08], MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2414886D0(uint64_t a1)
{
  sub_241486148(0, &qword_268D00AF0, (uint64_t (*)(uint64_t))sub_241392A40, MEMORY[0x263F1BA08], MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241488764(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2414887C4@<X0>(uint64_t a1@<X8>)
{
  return sub_241480FE0(a1);
}

void sub_2414887CC()
{
  if (!qword_268D00B28)
  {
    sub_24148698C(255, &qword_268D00B30, &qword_268D00B38);
    sub_2414888A4();
    unint64_t v0 = sub_241631238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00B28);
    }
  }
}

void sub_241488850(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

unint64_t sub_2414888A4()
{
  unint64_t result = qword_268D00B40;
  if (!qword_268D00B40)
  {
    sub_24148698C(255, &qword_268D00B30, &qword_268D00B38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00B40);
  }
  return result;
}

uint64_t sub_24148891C(uint64_t a1, uint64_t a2)
{
  return sub_241489398(a1, a2, (uint64_t (*)(void))sub_241488934);
}

void sub_241488934()
{
  if (!qword_268D00B50)
  {
    sub_2414889DC();
    sub_241489000(&qword_268D00BD8, (void (*)(uint64_t))sub_2414889DC, (void (*)(void))sub_241489070);
    unint64_t v0 = sub_241631238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00B50);
    }
  }
}

void sub_2414889DC()
{
  if (!qword_268D00B58)
  {
    sub_2414895EC(255, (unint64_t *)&qword_268CFDE60, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6E0], MEMORY[0x263F8D870]);
    sub_241483B08(255, &qword_268D00B60, (uint64_t (*)(uint64_t))sub_241488ACC, MEMORY[0x263F1BAC8]);
    sub_241377F10();
    unint64_t v0 = sub_241631308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00B58);
    }
  }
}

void sub_241488ACC(uint64_t a1)
{
}

void sub_241488B08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_241483B08(255, a4, a5, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v9) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_241488BA8()
{
  if (!qword_268D00B70)
  {
    sub_241488C54(255, &qword_268D00B78, sub_241488CE0, (void (*)(void))sub_241488E8C);
    sub_2416308D8();
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00B70);
    }
  }
}

void sub_241488C54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v7) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

void sub_241488CE0(uint64_t a1)
{
}

void sub_241488D10(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_241483B08(255, a3, a4, MEMORY[0x263F1BAC8]);
    sub_241489400(a5, a3, a4);
    unint64_t v9 = sub_241631238();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241488DB0()
{
  if (!qword_268D00B90)
  {
    sub_241488E40(255, &qword_268D00B98, MEMORY[0x263F1A830], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D00B90);
    }
  }
}

void sub_241488E40(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241488E8C()
{
  return sub_241486530(&qword_268D00BA8, sub_241488CE0);
}

void sub_241488EC0(uint64_t a1)
{
}

void sub_241488EF4()
{
  if (!qword_268D00BC0)
  {
    sub_241488F60();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D00BC0);
    }
  }
}

void sub_241488F60()
{
  if (!qword_268D00BC8)
  {
    sub_241486148(255, &qword_268D00BD0, MEMORY[0x263F1B7B8], MEMORY[0x263F18868], MEMORY[0x263F18E28]);
    sub_2416312C8();
    unint64_t v0 = sub_241630648();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00BC8);
    }
  }
}

uint64_t sub_241489000(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241489070()
{
  return sub_241489400(&qword_268D00BE0, &qword_268D00B60, (uint64_t (*)(uint64_t))sub_241488ACC);
}

void sub_241489098(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for PregnancyPrivacyFooterView()
{
  return &type metadata for PregnancyPrivacyFooterView;
}

uint64_t sub_2414890E4()
{
  return sub_241489000(&qword_268D00BF0, sub_241489140, (void (*)(void))sub_2414891A8);
}

void sub_241489140(uint64_t a1)
{
}

void sub_241489174(uint64_t a1)
{
}

uint64_t sub_2414891A8()
{
  return sub_241486530(&qword_268D00C08, sub_241489174);
}

unint64_t sub_2414891E0()
{
  unint64_t result = qword_268D00C10;
  if (!qword_268D00C10)
  {
    sub_2414892B8();
    sub_241489400(&qword_268CFE580, (unint64_t *)&qword_268CFE520, (uint64_t (*)(uint64_t))sub_241392948);
    sub_241486530(&qword_268D00B48, (void (*)(uint64_t))sub_2414887CC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00C10);
  }
  return result;
}

void sub_2414892B8()
{
  if (!qword_268D00C18)
  {
    sub_241483B08(255, (unint64_t *)&qword_268CFE520, (uint64_t (*)(uint64_t))sub_241392948, MEMORY[0x263F1BAC8]);
    sub_2414887CC();
    unint64_t v0 = sub_241631358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00C18);
    }
  }
}

uint64_t sub_241489358()
{
  return MEMORY[0x263F1A820];
}

uint64_t sub_241489364()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241489380(uint64_t a1, uint64_t a2)
{
  return sub_241489398(a1, a2, (uint64_t (*)(void))sub_241377C28);
}

uint64_t sub_241489398(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241489400(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241483B08(255, a2, a3, MEMORY[0x263F1BAC8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241489468()
{
  unint64_t result = qword_268D00C20;
  if (!qword_268D00C20)
  {
    sub_2414894E0();
    sub_24148963C();
    sub_241489708();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00C20);
  }
  return result;
}

void sub_2414894E0()
{
  if (!qword_268D00C28)
  {
    sub_241489560();
    sub_241486490(255, (unint64_t *)&qword_268CFF9A0, &qword_268CFF9A8, MEMORY[0x263F1A738]);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00C28);
    }
  }
}

void sub_241489560()
{
  if (!qword_268D00C30)
  {
    sub_2414895EC(255, &qword_268CFF860, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A180]);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00C30);
    }
  }
}

void sub_2414895EC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_24148963C()
{
  unint64_t result = qword_268D00C38;
  if (!qword_268D00C38)
  {
    sub_241489560();
    sub_2414896B4();
    sub_24142A0F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00C38);
  }
  return result;
}

unint64_t sub_2414896B4()
{
  unint64_t result = qword_268D00C40;
  if (!qword_268D00C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00C40);
  }
  return result;
}

unint64_t sub_241489708()
{
  unint64_t result = qword_268CFF9C8;
  if (!qword_268CFF9C8)
  {
    sub_241486490(255, (unint64_t *)&qword_268CFF9A0, &qword_268CFF9A8, MEMORY[0x263F1A738]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFF9C8);
  }
  return result;
}

void sub_241489778()
{
}

void sub_2414897A0()
{
}

void sub_2414897B8()
{
}

void sub_2414897D0()
{
}

void sub_2414897E8()
{
}

uint64_t sub_241489800(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v18 = sub_24162B788();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    if (!v7) {
      return v8;
    }
    uint64_t v19 = MEMORY[0x263F8EE78];
    uint64_t result = sub_24149E25C(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0;
    uint64_t v8 = v19;
    v16[1] = v2;
    unint64_t v17 = a1 & 0xC000000000000001;
    unint64_t v11 = a1;
    while (v7 != v10)
    {
      if (v17) {
        id v12 = (id)MEMORY[0x245620370](v10, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v10 + 32);
      }
      uint64_t v13 = v12;
      id v14 = objc_msgSend(v12, sel_UUID);
      sub_24162B768();

      uint64_t v19 = v8;
      unint64_t v2 = *(void *)(v8 + 16);
      unint64_t v15 = *(void *)(v8 + 24);
      if (v2 >= v15 >> 1)
      {
        sub_24149E25C(v15 > 1, v2 + 1, 1);
        uint64_t v8 = v19;
      }
      ++v10;
      *(void *)(v8 + 16) = v2 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v2, v6, v18);
      a1 = v11;
      if (v7 == v10) {
        return v8;
      }
    }
    __break(1u);
LABEL_15:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_241489A28()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  if (*(void *)(v3 + 16))
  {
    char v0 = *(unsigned char *)(v3 + 32);
    swift_bridgeObjectRelease();
    char v1 = v0 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v1 = 1;
  }
  return v1 & 1;
}

uint64_t sub_241489AC0()
{
  char v1 = v0;
  uint64_t v2 = *v0;
  sub_24148CA40(0, (unint64_t *)&qword_268CFCD40, MEMORY[0x263F08FD0]);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  uint64_t v63 = v4;
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v52 - v5;
  sub_24148C9EC(0, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v57 = (char *)&v52 - v8;
  sub_24148CD44(0, &qword_268D00C80, MEMORY[0x263F8F760]);
  uint64_t v58 = v9;
  uint64_t v56 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v54 = v10;
  uint64_t v55 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v60 = (uint64_t)&v52 - v12;
  uint64_t v13 = sub_24162EFA8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  unint64_t v17 = sub_24162EF98();
  os_log_type_t v18 = sub_2416322E8();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v61 = v2;
  uint64_t v59 = v1;
  if (v19)
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v65 = v21;
    *(_DWORD *)uint64_t v20 = 136446210;
    unint64_t v53 = v20 + 4;
    uint64_t v22 = sub_2416333E8();
    uint64_t v64 = sub_2411B6898(v22, v23, &v65);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v17, v18, "[%{public}s]: Beginning observation of deviations samples", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v21, -1, -1);
    unint64_t v24 = v20;
    char v1 = v59;
    MEMORY[0x245621640](v24, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  id v25 = *(uint8_t **)((char *)v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin26DeviationsHistoryViewModel_healthStore);
  id v26 = (id)HKMCDeviationSampleTypes();
  sub_2411B9D00(0, (unint64_t *)&qword_26B0125F0);
  unint64_t v27 = sub_241631F28();

  if (!(v27 >> 62))
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v28) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_2416333E8();
    uint64_t v40 = v60;
    sub_24148A960(v39, v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_241632028();
    uint64_t v42 = (uint64_t)v57;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v57, 1, 1, v41);
    uint64_t v43 = swift_allocObject();
    swift_weakInit();
    uint64_t v44 = v55;
    uint64_t v45 = v56;
    uint64_t v46 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v40, v58);
    sub_241632008();
    swift_retain();
    uint64_t v47 = sub_241631FF8();
    unint64_t v48 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    unint64_t v49 = (v54 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v50 = swift_allocObject();
    uint64_t v51 = MEMORY[0x263F8F500];
    *(void *)(v50 + 16) = v47;
    *(void *)(v50 + 24) = v51;
    (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v50 + v48, v44, v46);
    *(void *)(v50 + v49) = v43;
    *(void *)(v50 + ((v49 + 15) & 0xFFFFFFFFFFFFFFF8)) = v61;
    swift_release();
    sub_241328DBC(v42, (uint64_t)&unk_268D00C98, v50);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v60, v46);
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v28 = sub_241633068();
  swift_bridgeObjectRelease();
  if (!v28) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v65 = MEMORY[0x263F8EE78];
  uint64_t result = sub_24149DF94(0, v28 & ~(v28 >> 63), 0);
  if ((v28 & 0x8000000000000000) == 0)
  {
    unint64_t v53 = v25;
    uint64_t v30 = 0;
    uint64_t v31 = v65;
    unint64_t v32 = v27 & 0xC000000000000001;
    unint64_t v33 = v27;
    do
    {
      if (v32) {
        id v34 = (id)MEMORY[0x245620370](v30, v27);
      }
      else {
        id v34 = *(id *)(v27 + 8 * v30 + 32);
      }
      uint64_t v35 = v34;
      sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
      sub_241631848();

      uint64_t v65 = v31;
      uint64_t v36 = v6;
      unint64_t v38 = *(void *)(v31 + 16);
      unint64_t v37 = *(void *)(v31 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_24149DF94(v37 > 1, v38 + 1, 1);
        uint64_t v31 = v65;
      }
      ++v30;
      *(void *)(v31 + 16) = v38 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))(v31+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v38, v36, v62);
      unint64_t v6 = v36;
      unint64_t v27 = v33;
    }
    while (v28 != v30);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_24148A1E4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  return v1;
}

void sub_24148A258(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_24162B788();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v19 = a2 + 32;
  uint64_t v20 = a2;
  swift_bridgeObjectRetain_n();
  unint64_t v21 = 0;
LABEL_16:
  while (1)
  {
    unint64_t v14 = *(void *)(v20 + 16);
    if (v21 == v14) {
      break;
    }
    if (v21 >= v14) {
      goto LABEL_24;
    }
    unint64_t v15 = v21 + 1;
    uint64_t v16 = *(void *)(v19 + 16 * v21 + 8);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_bridgeObjectRelease();
    uint64_t v17 = v16;
    unint64_t v21 = v15;
    if (v16)
    {
      unint64_t v8 = 0;
      if (v17 >= 0) {
        uint64_t v9 = v17 & 0xFFFFFFFFFFFFFF8;
      }
      else {
        uint64_t v9 = v17;
      }
      uint64_t v18 = v9;
      if ((unint64_t)v17 >> 62) {
        goto LABEL_13;
      }
      while (v8 != *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        while (1)
        {
          if ((v17 & 0xC000000000000001) != 0)
          {
            id v10 = (id)MEMORY[0x245620370](v8, v17);
          }
          else
          {
            if (v8 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_23:
              __break(1u);
LABEL_24:
              __break(1u);
              return;
            }
            id v10 = *(id *)(v17 + 8 * v8 + 32);
          }
          uint64_t v11 = v10;
          if (__OFADD__(v8, 1)) {
            goto LABEL_23;
          }
          id v12 = objc_msgSend(v10, sel_UUID, v18);
          sub_24162B768();

          LOBYTE(v12) = _s24MenstrualCyclesAppPlugin34ReviewPregnancyInMedicalIDUserDataV23__derived_struct_equalsySbAC_ACtFZ_0();
          (*v7)(v5, v3);
          if (v12)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            return;
          }

          ++v8;
          if (!((unint64_t)v17 >> 62)) {
            break;
          }
LABEL_13:
          _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          uint64_t v13 = sub_241633068();
          swift_bridgeObjectRelease();
          if (v8 == v13) {
            goto LABEL_16;
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
}

uint64_t sub_24148A4B4(void *a1)
{
  uint64_t v2 = a1[2];
  if (!v2)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = 0;
    unsigned int v6 = 1;
    goto LABEL_17;
  }
  unint64_t v3 = a1[5];
  if (v3 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v8 = sub_241633068();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v4)
    {
LABEL_4:
      unsigned int v6 = 0;
      uint64_t v7 = 0;
LABEL_17:
      if (v7 == v2) {
        uint64_t v12 = v6;
      }
      else {
        uint64_t v12 = 0;
      }
LABEL_20:
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  if (v2 == 1)
  {
    unsigned int v6 = 1;
    uint64_t v7 = 1;
    goto LABEL_17;
  }
  uint64_t v9 = a1 + 7;
  uint64_t v7 = 1;
  while (1)
  {
    if (*v9 >> 62)
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v11 = sub_241633068();
      uint64_t result = swift_bridgeObjectRelease();
      if (v11)
      {
LABEL_16:
        unsigned int v6 = 0;
        goto LABEL_17;
      }
    }
    else if (*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_16;
    }
    uint64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    ++v7;
    v9 += 2;
    if (v10 == v2)
    {
      uint64_t v12 = 1;
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24148A600()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v11[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_24148A814(unsigned char *a1, unsigned char *a2)
{
  return *a2 & ~*a1 & 1;
}

uint64_t sub_24148A828(unsigned char *a1, unsigned char *a2)
{
  return *a2 & 1 | ((*a1 & 1) == 0);
}

uint64_t sub_24148A83C(unsigned char *a1, unsigned char *a2)
{
  return *a1 & 1 | ((*a2 & 1) == 0);
}

uint64_t sub_24148A850(unsigned char *a1, unsigned char *a2)
{
  return *a1 & ~*a2 & 1;
}

uint64_t sub_24148A864@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24148A8E4()
{
  return sub_24162FC58();
}

uint64_t sub_24148A960@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v15[0] = a1;
  v15[3] = a2;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F09038];
  sub_24148CA40(0, (unint64_t *)&unk_268D00E00, MEMORY[0x263F09038]);
  v15[2] = v3;
  MEMORY[0x270FA5388](v3);
  sub_24148CA40(0, (unint64_t *)&unk_268D00E10, MEMORY[0x263F09048]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v15 - v10;
  sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2416318F8();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v12 = (void (*)(unsigned char *, void))sub_241631908();
  sub_241631838();
  v12(v16, 0);
  *(void *)(swift_allocObject() + 16) = MEMORY[0x263F8EE78];
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  sub_241631948();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  sub_24148CA40(0, (unint64_t *)&qword_268CFB1B0, MEMORY[0x263F8D488]);
  sub_24148CE34(&qword_268D00C88, (unint64_t *)&unk_268D00E00, v2);
  swift_retain();
  sub_241632FC8();
  v13(v11, v5);
  return swift_release();
}

uint64_t sub_24148AC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[11] = a4;
  uint64_t v7 = sub_24162EFA8();
  v6[14] = v7;
  v6[15] = *(void *)(v7 - 8);
  v6[16] = swift_task_alloc();
  sub_2412FAB1C();
  v6[17] = swift_task_alloc();
  sub_24148CA40(0, &qword_268CFCDD8, MEMORY[0x263F09020]);
  v6[18] = v8;
  v6[19] = *(void *)(v8 - 8);
  v6[20] = swift_task_alloc();
  sub_24148CA40(0, (unint64_t *)&unk_268D00E00, MEMORY[0x263F09038]);
  v6[21] = v9;
  v6[22] = swift_task_alloc();
  sub_24148CA40(0, &qword_268CFCDE8, MEMORY[0x263F09028]);
  v6[23] = v10;
  v6[24] = swift_task_alloc();
  sub_24148CD44(0, &qword_268D00CA0, MEMORY[0x263F8F750]);
  v6[25] = v11;
  v6[26] = *(void *)(v11 - 8);
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  v6[29] = sub_241632008();
  v6[30] = sub_241631FF8();
  uint64_t v13 = sub_241631FC8();
  v6[31] = v13;
  v6[32] = v12;
  return MEMORY[0x270FA2498](sub_24148AF28, v13, v12);
}

uint64_t sub_24148AF28()
{
  sub_24148CD44(0, &qword_268D00C80, MEMORY[0x263F8F760]);
  MEMORY[0x245620440]();
  sub_24148CE34(&qword_268D00C88, (unint64_t *)&unk_268D00E00, MEMORY[0x263F09038]);
  sub_241632048();
  sub_241632F98();
  sub_24148CA40(0, (unint64_t *)&qword_268CFB1B0, MEMORY[0x263F8D488]);
  sub_241632FA8();
  swift_beginAccess();
  uint64_t v1 = sub_241631FF8();
  v0[33] = v1;
  if (v1)
  {
    swift_getObjectType();
    uint64_t v2 = sub_241631FC8();
    uint64_t v4 = v3;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v4 = 0;
  }
  v0[34] = v2;
  v0[35] = v4;
  return MEMORY[0x270FA2498](sub_24148B0F0, v2, v4);
}

uint64_t sub_24148B0F0()
{
  uint64_t v1 = v0[33];
  v0[36] = sub_241632F88();
  uint64_t v2 = sub_24148CE34((unint64_t *)&qword_268CFCDF0, &qword_268CFCDE8, MEMORY[0x263F09028]);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[37] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24148B208;
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[17];
  uint64_t v6 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v5, v1, v6, v0 + 9, v4, v2);
}

uint64_t sub_24148B208()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 272);
    uint64_t v4 = *(void *)(v2 + 280);
    uint64_t v5 = sub_24148B538;
  }
  else
  {
    (*(void (**)(void))(v2 + 288))();
    uint64_t v3 = *(void *)(v2 + 272);
    uint64_t v4 = *(void *)(v2 + 280);
    uint64_t v5 = sub_24148B330;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24148B330()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[17];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_24148F7DC(v3, (uint64_t (*)(void))sub_2412FAB1C);
    swift_release();
    uint64_t v4 = v0[31];
    uint64_t v5 = v0[32];
    return MEMORY[0x270FA2498](sub_24148B6AC, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[27];
    uint64_t v6 = v0[28];
    uint64_t v8 = v0[25];
    uint64_t v9 = v0[26];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[20], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = (int *)sub_241632F98();
    v0[39] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    uint64_t v15 = (int *)((char *)v10 + *v10);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[40] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_24148B790;
    uint64_t v13 = v0[20];
    return ((uint64_t (*)(void *, uint64_t))v15)(v0 + 10, v13);
  }
}

uint64_t sub_24148B538()
{
  uint64_t v1 = (void (*)(void))v0[36];
  v0[38] = v0[9];
  v1();
  swift_release();
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[32];
  return MEMORY[0x270FA2498](sub_24148B5C0, v2, v3);
}

uint64_t sub_24148B5C0()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24148B6AC()
{
  (*(void (**)(void, void))(v0[26] + 8))(v0[28], v0[25]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24148B790()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 160);
  uint64_t v3 = *(void *)(*(void *)v0 + 152);
  uint64_t v4 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  swift_release();
  v1[41] = v1[10];
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = v1[35];
  uint64_t v6 = v1[34];
  return MEMORY[0x270FA2498](sub_24148B94C, v6, v5);
}

uint64_t sub_24148B94C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 256);
  return MEMORY[0x270FA2498](sub_24148B9B0, v1, v2);
}

uint64_t sub_24148B9B0()
{
  uint64_t v17 = v0;
  sub_24162EF48();
  uint64_t v1 = sub_24162EF98();
  os_log_type_t v2 = sub_2416322E8();
  BOOL v3 = os_log_type_enabled(v1, v2);
  uint64_t v5 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[14];
  if (v3)
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v9 = sub_2416333E8();
    *(void *)(v7 + 4) = sub_2411B6898(v9, v10, &v16);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v1, v2, "[%{public}s]: Received update to deviations samples", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v8, -1, -1);
    MEMORY[0x245621640](v7, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (swift_weakLoadStrong())
  {
    sub_24148BB98(v0[41]);
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_241631FF8();
  v0[33] = v11;
  if (v11)
  {
    swift_getObjectType();
    uint64_t v12 = sub_241631FC8();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  v0[34] = v12;
  v0[35] = v14;
  return MEMORY[0x270FA2498](sub_24148B0F0, v12, v14);
}

uint64_t sub_24148BB98(uint64_t a1)
{
  v23[1] = a1;
  uint64_t v2 = sub_24162B9E8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24148C9EC(0, &qword_26B0130C0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v23 - v7;
  uint64_t v9 = sub_24162B718();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))(v5, *MEMORY[0x263F078A8], v2, v11);
  uint64_t v14 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin26DeviationsHistoryViewModel_currentDate;
  sub_24162B968();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v14, v9);
    uint64_t v15 = sub_2411E7908((uint64_t)v8);
  }
  else
  {
    uint64_t v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  }
  MEMORY[0x270FA5388](v15);
  v23[-2] = v13;
  unint64_t v16 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v17 = sub_24148C070(v16, (void (*)(char *__return_ptr, id *))sub_24148CE78);
  swift_retain();
  sub_24148F478(v17, v1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v18 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v19 = sub_24149DA5C(v18);
  swift_release();
  unint64_t v24 = v19;
  sub_24148CE94(&v24);
  swift_release();
  uint64_t v20 = sub_2412924B8((uint64_t)v24);
  swift_release();
  unint64_t v21 = (void *)sub_241292618(v20);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  unint64_t v24 = v21;
  swift_retain();
  sub_24162FC58();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_24148BF50@<X0>(id *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = sub_24162B718();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = MEMORY[0x270FA5388](v4).n128_u64[0];
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(*a1, sel_endDate, v6);
  sub_24162B6A8();

  char v10 = sub_24162B678();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  *a2 = (v10 & 1) == 0;
  return result;
}

uint64_t sub_24148C070(unint64_t a1, void (*a2)(char *__return_ptr, id *))
{
  unint64_t v3 = v2;
  unint64_t v4 = a1;
  unint64_t v32 = (void *)MEMORY[0x263F8EE80];
  if (a1 >> 62)
  {
LABEL_24:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v5 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      unint64_t v26 = v4 & 0xC000000000000001;
      double v6 = (void *)MEMORY[0x263F8EE80];
      uint64_t v7 = 4;
      uint64_t v25 = MEMORY[0x263F8EE50] + 8;
      while (1)
      {
        if (v26) {
          id v9 = (id)MEMORY[0x245620370](v7 - 4, v4);
        }
        else {
          id v9 = *(id *)(v4 + 8 * v7);
        }
        char v10 = v9;
        if (__OFADD__(v7 - 4, 1))
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        id v31 = v9;
        a2(&v30, &v31);
        if (v3)
        {
          swift_release();
          swift_bridgeObjectRelease();

          return (uint64_t)v6;
        }
        uint64_t v28 = v7 - 3;
        uint64_t v11 = v5;
        unint64_t v3 = v4;
        char v12 = v30;
        unint64_t v4 = sub_241545BBC(v30);
        uint64_t v14 = v6[2];
        BOOL v15 = (v13 & 1) == 0;
        uint64_t v16 = v14 + v15;
        if (__OFADD__(v14, v15)) {
          goto LABEL_22;
        }
        char v17 = v13;
        if (v6[3] < v16)
        {
          sub_24134838C(v16, 1);
          double v6 = v32;
          unint64_t v18 = sub_241545BBC(v12);
          if ((v17 & 1) != (v19 & 1))
          {
            uint64_t result = sub_241633268();
            __break(1u);
            return result;
          }
          unint64_t v4 = v18;
        }
        if (v17)
        {
          uint64_t v8 = (void *)(v6[7] + 8 * v4);
          MEMORY[0x24561F3D0]();
          if (*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_241631F68();
          }
          sub_241631F98();
          sub_241631F48();
        }
        else
        {
          sub_2414239AC(0, (unint64_t *)&qword_26B0121F0, v25, MEMORY[0x263F8E0F8]);
          uint64_t v20 = swift_allocObject();
          *(_OWORD *)(v20 + 16) = xmmword_24163B390;
          *(void *)(v20 + 32) = v10;
          uint64_t v29 = v20;
          sub_241631F48();
          v6[(v4 >> 6) + 8] |= 1 << v4;
          *(unsigned char *)(v6[6] + v4) = v12;
          *(void *)(v6[7] + 8 * v4) = v29;
          uint64_t v21 = v6[2];
          BOOL v22 = __OFADD__(v21, 1);
          uint64_t v23 = v21 + 1;
          if (v22) {
            goto LABEL_23;
          }
          v6[2] = v23;
        }
        uint64_t v5 = v11;
        ++v7;
        unint64_t v4 = v3;
        unint64_t v3 = 0;
        if (v28 == v11) {
          goto LABEL_26;
        }
      }
    }
  }
  double v6 = (void *)MEMORY[0x263F8EE80];
LABEL_26:
  swift_bridgeObjectRelease();
  return (uint64_t)v6;
}

uint64_t sub_24148C34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  sub_24148F774();
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = sub_24162B718();
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v16, a1, v17);
  char v19 = &v16[*(int *)(v11 + 56)];
  *(void *)char v19 = a2;
  *((void *)v19 + 1) = a3;
  v18(v13, v25, v17);
  uint64_t v20 = v26;
  uint64_t v21 = &v13[*(int *)(v11 + 56)];
  *(void *)uint64_t v21 = v26;
  *((void *)v21 + 1) = a6;
  sub_2414900C0((unint64_t *)&qword_268CFAD00, MEMORY[0x263F07490]);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if ((sub_241631C28() & 1) == 0)
  {
    sub_2414900C0((unint64_t *)&unk_26B00E680, MEMORY[0x263F07490]);
    char v23 = sub_241631BB8();
LABEL_7:
    char v22 = v23;
    goto LABEL_8;
  }
  if (a2 != v20 || a3 != a6)
  {
    char v23 = sub_241633218();
    goto LABEL_7;
  }
  char v22 = 0;
LABEL_8:
  sub_24148F7DC((uint64_t)v13, (uint64_t (*)(void))sub_24148F774);
  sub_24148F7DC((uint64_t)v16, (uint64_t (*)(void))sub_24148F774);
  return v22 & 1;
}

uint64_t sub_24148C594()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin26DeviationsHistoryViewModel__samplesBySection;
  sub_2414239AC(0, &qword_268CFBAB8, (uint64_t)&type metadata for DeviationsHistoryViewModel.SamplesBySection, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin26DeviationsHistoryViewModel_calendar;
  uint64_t v4 = sub_24162BA08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin26DeviationsHistoryViewModel_currentDate;
  uint64_t v6 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_24148C6F0()
{
  return type metadata accessor for DeviationsHistoryViewModel();
}

uint64_t type metadata accessor for DeviationsHistoryViewModel()
{
  uint64_t result = qword_268D00C68;
  if (!qword_268D00C68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24148C744()
{
  sub_2414239AC(319, &qword_268CFBAB8, (uint64_t)&type metadata for DeviationsHistoryViewModel.SamplesBySection, MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F)
  {
    sub_24162BA08();
    if (v1 <= 0x3F)
    {
      sub_24162B718();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

ValueMetadata *type metadata accessor for DeviationsHistoryViewModel.SamplesBySection()
{
  return &type metadata for DeviationsHistoryViewModel.SamplesBySection;
}

unsigned char *storeEnumTagSinglePayload for DeviationsHistoryViewModel.Section(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24148C954);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviationsHistoryViewModel.Section()
{
  return &type metadata for DeviationsHistoryViewModel.Section;
}

unint64_t sub_24148C990()
{
  unint64_t result = qword_268D00C78;
  if (!qword_268D00C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00C78);
  }
  return result;
}

void sub_24148C9EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241632C18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24148CA40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_2411B9D00(255, (unint64_t *)&qword_26B012390);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_24148CAB0()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24148CAE8()
{
  sub_24148CD44(0, &qword_268D00C80, MEMORY[0x263F8F760]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);
  swift_release();

  return MEMORY[0x270FA0238](v0, v7, v6);
}

uint64_t sub_24148CBF4(uint64_t a1)
{
  sub_24148CD44(0, &qword_268D00C80, MEMORY[0x263F8F760]);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  unint64_t v6 = (*(void *)(*(void *)(v4 - 8) + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_241201428;
  return sub_24148AC68(a1, v7, v8, v9, v10, v11);
}

void sub_24148CD44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F09038];
    sub_24148CA40(255, (unint64_t *)&unk_268D00E00, MEMORY[0x263F09038]);
    uint64_t v8 = v7;
    sub_24148CA40(255, (unint64_t *)&qword_268CFB1B0, MEMORY[0x263F8D488]);
    uint64_t v10 = v9;
    uint64_t v11 = sub_24148CE34(&qword_268D00C88, (unint64_t *)&unk_268D00E00, v6);
    unint64_t v12 = a3(a1, v8, v10, v11);
    if (!v13) {
      atomic_store(v12, a2);
    }
  }
}

uint64_t sub_24148CE34(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24148CA40(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24148CE78@<X0>(id *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_24148BF50(a1, a2);
}

uint64_t sub_24148CE94(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_2414A14C8(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_24148CF00(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_24148CF00(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2416331C8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v83 = *a1;
      uint64_t v84 = -1;
      uint64_t v85 = 1;
      uint64_t v86 = *a1;
      do
      {
        unsigned __int8 v87 = *(unsigned char *)(v83 + 16 * v85);
        uint64_t v88 = v84;
        uint64_t v89 = v86;
        do
        {
          if ((*(unsigned char *)v89 & (v87 ^ 1)) != 1) {
            break;
          }
          if (!v83) {
            goto LABEL_141;
          }
          uint64_t v90 = *(void *)(v89 + 24);
          *(_OWORD *)(v89 + 16) = *(_OWORD *)v89;
          *(unsigned char *)uint64_t v89 = v87;
          *(void *)(v89 + 8) = v90;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        ++v85;
        v86 += 16;
        --v84;
      }
      while (v85 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v92 = v12;
      uint64_t v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v93 = *v101;
        do
        {
          unint64_t v94 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v93) {
            goto LABEL_145;
          }
          uint64_t v95 = v92;
          uint64_t v96 = *(void *)&v92[16 * v94 + 32];
          uint64_t v97 = *(void *)&v92[16 * v13 + 24];
          sub_24148D95C((char *)(v93 + 16 * v96), (char *)(v93 + 16 * *(void *)&v92[16 * v13 + 16]), v93 + 16 * v97, __dst);
          if (v1) {
            break;
          }
          if (v97 < v96) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v95 = sub_2414AA258((uint64_t)v95);
          }
          if (v94 >= *((void *)v95 + 2)) {
            goto LABEL_134;
          }
          uint64_t v98 = &v95[16 * v94 + 32];
          *(void *)uint64_t v98 = v96;
          *((void *)v98 + 1) = v97;
          unint64_t v99 = *((void *)v95 + 2);
          if (v13 > v99) {
            goto LABEL_135;
          }
          memmove(&v95[16 * v13 + 16], &v95[16 * v13 + 32], 16 * (v99 - v13));
          uint64_t v92 = v95;
          *((void *)v95 + 2) = v99 - 1;
          unint64_t v13 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_24148F6EC();
    uint64_t v8 = sub_241631F88();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 32;
  uint64_t v100 = *a1 - 16;
  unint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v104 = v6;
  uint64_t v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      int v15 = *(unsigned __int8 *)(v11 + 16 * v10);
      uint64_t v16 = 16 * v14;
      int v17 = *(unsigned __int8 *)(v11 + 16 * v14) & (v15 ^ 1);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        unint64_t v18 = (unsigned __int8 *)(v102 + 16 * v14);
        while (1)
        {
          int v19 = *v18;
          if (v17 != (v15 & (v19 ^ 1))) {
            break;
          }
          ++v10;
          v18 += 16;
          int v15 = v19;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v17)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 16 * v10;
          uint64_t v21 = v10;
          uint64_t v22 = v14;
          do
          {
            if (v22 != --v21)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v23 = v11 + v20;
              char v24 = *(unsigned char *)(v11 + v16);
              uint64_t v25 = *(void *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v20 - 16);
              *(unsigned char *)(v23 - 16) = v24;
              *(void *)(v23 - 8) = v25;
            }
            ++v22;
            v20 -= 16;
            v16 += 16;
          }
          while (v22 < v21);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v26 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v26 >= v3) {
      uint64_t v26 = v3;
    }
    if (v26 < v14) {
      break;
    }
    if (v10 != v26)
    {
      uint64_t v27 = v100 + 16 * v10;
      do
      {
        unsigned __int8 v28 = *(unsigned char *)(v11 + 16 * v10);
        uint64_t v29 = v14;
        uint64_t v30 = v27;
        do
        {
          if ((*(unsigned char *)v30 & (v28 ^ 1)) != 1) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v31 = *(void *)(v30 + 24);
          *(_OWORD *)(v30 + 16) = *(_OWORD *)v30;
          *(unsigned char *)uint64_t v30 = v28;
          *(void *)(v30 + 8) = v31;
          v30 -= 16;
          ++v29;
        }
        while (v10 != v29);
        ++v10;
        v27 += 16;
      }
      while (v10 != v26);
      uint64_t v10 = v26;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_2414A9DD0(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v33 = *((void *)v12 + 2);
    unint64_t v32 = *((void *)v12 + 3);
    unint64_t v13 = v33 + 1;
    uint64_t v11 = v106;
    if (v33 >= v32 >> 1)
    {
      uint64_t v82 = sub_2414A9DD0((char *)(v32 > 1), v33 + 1, 1, v12);
      uint64_t v11 = v106;
      unint64_t v12 = v82;
    }
    *((void *)v12 + 2) = v13;
    id v34 = v12 + 32;
    uint64_t v35 = &v12[16 * v33 + 32];
    *(void *)uint64_t v35 = v14;
    *((void *)v35 + 1) = v10;
    if (v33)
    {
      while (1)
      {
        unint64_t v36 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v41 = &v34[16 * v13];
          uint64_t v42 = *((void *)v41 - 8);
          uint64_t v43 = *((void *)v41 - 7);
          BOOL v47 = __OFSUB__(v43, v42);
          uint64_t v44 = v43 - v42;
          if (v47) {
            goto LABEL_120;
          }
          uint64_t v46 = *((void *)v41 - 6);
          uint64_t v45 = *((void *)v41 - 5);
          BOOL v47 = __OFSUB__(v45, v46);
          uint64_t v39 = v45 - v46;
          char v40 = v47;
          if (v47) {
            goto LABEL_121;
          }
          unint64_t v48 = v13 - 2;
          unint64_t v49 = &v34[16 * v13 - 32];
          uint64_t v51 = *(void *)v49;
          uint64_t v50 = *((void *)v49 + 1);
          BOOL v47 = __OFSUB__(v50, v51);
          uint64_t v52 = v50 - v51;
          if (v47) {
            goto LABEL_123;
          }
          BOOL v47 = __OFADD__(v39, v52);
          uint64_t v53 = v39 + v52;
          if (v47) {
            goto LABEL_126;
          }
          if (v53 >= v44)
          {
            uint64_t v71 = &v34[16 * v36];
            uint64_t v73 = *(void *)v71;
            uint64_t v72 = *((void *)v71 + 1);
            BOOL v47 = __OFSUB__(v72, v73);
            uint64_t v74 = v72 - v73;
            if (v47) {
              goto LABEL_130;
            }
            BOOL v64 = v39 < v74;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v65 = *((void *)v12 + 4);
            uint64_t v66 = *((void *)v12 + 5);
            BOOL v47 = __OFSUB__(v66, v65);
            uint64_t v58 = v66 - v65;
            char v59 = v47;
            goto LABEL_77;
          }
          uint64_t v38 = *((void *)v12 + 4);
          uint64_t v37 = *((void *)v12 + 5);
          BOOL v47 = __OFSUB__(v37, v38);
          uint64_t v39 = v37 - v38;
          char v40 = v47;
        }
        if (v40) {
          goto LABEL_122;
        }
        unint64_t v48 = v13 - 2;
        uint64_t v54 = &v34[16 * v13 - 32];
        uint64_t v56 = *(void *)v54;
        uint64_t v55 = *((void *)v54 + 1);
        BOOL v57 = __OFSUB__(v55, v56);
        uint64_t v58 = v55 - v56;
        char v59 = v57;
        if (v57) {
          goto LABEL_125;
        }
        uint64_t v60 = &v34[16 * v36];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v47 = __OFSUB__(v61, v62);
        uint64_t v63 = v61 - v62;
        if (v47) {
          goto LABEL_128;
        }
        if (__OFADD__(v58, v63)) {
          goto LABEL_129;
        }
        if (v58 + v63 >= v39)
        {
          BOOL v64 = v39 < v63;
LABEL_83:
          if (v64) {
            unint64_t v36 = v48;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v59) {
          goto LABEL_124;
        }
        uint64_t v67 = &v34[16 * v36];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v47 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v47) {
          goto LABEL_127;
        }
        if (v70 < v58) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v75 = v36 - 1;
        if (v36 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        os_signpost_type_t v76 = v12;
        uint64_t v77 = &v34[16 * v75];
        uint64_t v78 = *(void *)v77;
        uint64_t v79 = &v34[16 * v36];
        uint64_t v80 = *((void *)v79 + 1);
        sub_24148D95C((char *)(v11 + 16 * *(void *)v77), (char *)(v11 + 16 * *(void *)v79), v11 + 16 * v80, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v80 < v78) {
          goto LABEL_117;
        }
        if (v36 > *((void *)v76 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v77 = v78;
        *(void *)&v34[16 * v75 + 8] = v80;
        unint64_t v81 = *((void *)v76 + 2);
        if (v36 >= v81) {
          goto LABEL_119;
        }
        unint64_t v12 = v76;
        unint64_t v13 = v81 - 1;
        memmove(&v34[16 * v36], v79 + 16, 16 * (v81 - 1 - v36));
        *((void *)v76 + 2) = v81 - 1;
        uint64_t v11 = v106;
        if (v81 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v104;
    uint64_t v3 = v105;
    if (v10 >= v105)
    {
      uint64_t v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_241633028();
  __break(1u);
  return result;
}

uint64_t sub_24148D5F4(void **__src, void **a2, unint64_t a3, id *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v44 = __src;
  uint64_t v43 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      char v24 = &v4[v13];
      uint64_t v42 = v24;
      uint64_t v44 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v25 = (void **)(a3 - 8);
        uint64_t v26 = v6;
        uint64_t v37 = v4;
        uint64_t v38 = v7;
        while (1)
        {
          unint64_t v27 = (unint64_t)v24;
          unsigned __int8 v28 = v24 - 1;
          uint64_t v41 = *(v24 - 1);
          uint64_t v29 = *--v26;
          id v40 = v29;
          uint64_t v30 = v41;
          id v31 = v29;
          char v32 = sub_24148E12C(&v41, &v40);
          if (v39) {
            break;
          }
          char v33 = v32;
          uint64_t v39 = 0;
          id v34 = v25 + 1;

          if (v33)
          {
            if (v34 != v6 || v25 >= v6) {
              *uint64_t v25 = *v26;
            }
            uint64_t v44 = v26;
            uint64_t v35 = v37;
            char v24 = (id *)v27;
            if (v26 <= v38) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v42 = v28;
            if ((unint64_t)v34 < v27 || (unint64_t)v25 >= v27 || v34 != (void **)v27) {
              *uint64_t v25 = *v28;
            }
            uint64_t v26 = v6;
            char v24 = v28;
            uint64_t v35 = v37;
            if (v6 <= v38) {
              goto LABEL_48;
            }
          }
          --v25;
          uint64_t v6 = v26;
          if (v24 <= v35) {
            goto LABEL_48;
          }
        }
      }
      goto LABEL_48;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[v10];
    uint64_t v42 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      while (1)
      {
        int v15 = v7;
        uint64_t v41 = *v6;
        uint64_t v16 = v4;
        id v40 = *v4;
        id v17 = v40;
        unint64_t v18 = v41;
        id v19 = v17;
        char v20 = sub_24148E12C(&v41, &v40);
        if (v39) {
          break;
        }
        char v21 = v20;

        if (v21)
        {
          uint64_t v22 = v6 + 1;
          uint64_t v23 = v15;
          if (v15 < v6 || v15 >= v22 || v15 != v6) {
            *int v15 = *v6;
          }
          uint64_t v4 = v16;
        }
        else
        {
          uint64_t v23 = v15;
          if (v15 != v16) {
            *int v15 = *v16;
          }
          uint64_t v4 = v16 + 1;
          uint64_t v43 = v16 + 1;
          uint64_t v22 = v6;
        }
        uint64_t v39 = 0;
        uint64_t v7 = v23 + 1;
        uint64_t v44 = v7;
        if (v4 < v14)
        {
          uint64_t v6 = v22;
          if ((unint64_t)v22 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_2414A9F6C((void **)&v44, (const void **)&v43, &v42);
    swift_release();
    return 1;
  }
  swift_release();
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24148D95C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v25 = __src;
  char v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      id v17 = &v4[16 * v13];
      uint64_t v23 = v17;
      uint64_t v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        unint64_t v18 = (char *)(a3 - 16);
        while (1)
        {
          id v19 = v18 + 16;
          if (*(v6 - 16) == 1 && *(v17 - 16) == 0)
          {
            char v21 = v6 - 16;
            if (v19 != v6 || v18 >= v6) {
              *(_OWORD *)unint64_t v18 = *(_OWORD *)v21;
            }
            uint64_t v25 = v6 - 16;
            if (v21 <= v7) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v23 = v17 - 16;
            if (v19 < v17 || v18 >= v17 || v19 != v17) {
              *(_OWORD *)unint64_t v18 = *((_OWORD *)v17 - 1);
            }
            char v21 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_48;
            }
          }
          v18 -= 16;
          uint64_t v6 = v21;
          if (v17 <= v4) {
            goto LABEL_48;
          }
        }
      }
      goto LABEL_48;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*v4 == 1 && *v6 == 0)
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        else
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          char v24 = v4;
          uint64_t v16 = v6;
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v25 = v7;
    }
LABEL_48:
    sub_2414AA19C((void **)&v25, (const void **)&v24, &v23);
    return 1;
  }
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24148DBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_24148DC94;
  v6[6] = a2;
  v6[7] = a3;
  return MEMORY[0x270FA2498](sub_24148FEE4, 0, 0);
}

uint64_t sub_24148DC94(uint64_t a1)
{
  uint64_t v3 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *uint64_t v3 = a1;
  uint64_t v5 = *(uint64_t (**)(void))(v6 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v5();
}

uint64_t sub_24148DDBC(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = a2;
  uint64_t v5 = sub_24162B788();
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = MEMORY[0x270FA5388](v8);
  char v33 = (char *)v22 - v10;
  if (!(a1 >> 62))
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_3;
    }
    return 0;
  }
LABEL_17:
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v11 = sub_241633068();
  swift_bridgeObjectRelease();
  if (!v11) {
    return 0;
  }
LABEL_3:
  uint64_t v12 = 0;
  uint64_t v26 = v11;
  unint64_t v27 = a1 & 0xC000000000000001;
  unint64_t v24 = a1;
  v22[1] = v3;
  unint64_t v23 = a1 + 32;
  uint64_t v30 = v25 + 16;
  uint64_t v31 = v32 + 56;
  uint64_t v13 = (void (**)(char *, uint64_t))(v25 + 8);
  while (1)
  {
    uint64_t v29 = v12;
    id v14 = v27 ? (id)MEMORY[0x245620370](v9) : *(id *)(v23 + 8 * v12);
    id v28 = v14;
    a1 = (unint64_t)objc_msgSend(v14, sel_UUID);
    sub_24162B768();

    if (*(void *)(v32 + 16))
    {
      uint64_t v3 = v32;
      sub_2414900C0((unint64_t *)&qword_268CFEAB0, MEMORY[0x263F07508]);
      a1 = (unint64_t)v33;
      uint64_t v15 = sub_241631B68();
      uint64_t v16 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v17 = v15 & ~v16;
      if ((*(void *)(v31 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17)) {
        break;
      }
    }
LABEL_12:
    (*v13)(v33, v5);

    uint64_t v12 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    if (v12 == v26) {
      return 0;
    }
  }
  uint64_t v3 = ~v16;
  uint64_t v18 = *(void *)(v25 + 72);
  id v19 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
  while (1)
  {
    v19(v7, *(void *)(v32 + 48) + v18 * v17, v5);
    sub_2414900C0((unint64_t *)&unk_268D00E40, MEMORY[0x263F07508]);
    a1 = sub_241631C28();
    char v20 = *v13;
    (*v13)(v7, v5);
    if (a1) {
      break;
    }
    unint64_t v17 = (v17 + 1) & v3;
    if (((*(void *)(v31 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
      goto LABEL_12;
    }
  }
  v20(v33, v5);

  return v29;
}

uint64_t sub_24148E12C(void **a1, id *a2)
{
  uint64_t v4 = sub_24162B718();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v9 = MEMORY[0x270FA5388](v8).n128_u64[0];
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = *a1;
  id v13 = *a2;
  id v14 = objc_msgSend(*a2, sel_endDate, v9);
  sub_24162B6A8();

  id v15 = objc_msgSend(v12, sel_categoryType);
  unint64_t v16 = sub_2412704EC();
  char v18 = v17;

  if (v18)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v16 >= 4) {
    goto LABEL_8;
  }
  uint64_t v19 = sub_2411EA9E0();
  uint64_t v21 = v20;
  id v22 = objc_msgSend(v12, sel_endDate);
  sub_24162B6A8();

  id v23 = objc_msgSend(v13, sel_categoryType);
  unint64_t v24 = sub_2412704EC();
  char v26 = v25;

  if (v26)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v24 < 4)
  {
    uint64_t v27 = sub_2411EA9E0();
    char v29 = sub_24148C34C((uint64_t)v11, v19, v21, (uint64_t)v7, v27, v28);
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
    v30(v7, v4);
    swift_bridgeObjectRelease();
    v30(v11, v4);
    return v29 & 1;
  }
LABEL_8:
  uint64_t result = sub_241633038();
  __break(1u);
  return result;
}

void sub_24148E3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v43 = a1;
  uint64_t v46 = sub_24162B718();
  MEMORY[0x270FA5388](v46);
  uint64_t v52 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v53 = (uint64_t)&v41 - v10;
  uint64_t v42 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    uint64_t v45 = (void (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v47 = v11;
    uint64_t v12 = v11 + 8 * a3 - 8;
LABEL_5:
    id v13 = *(void **)(v47 + 8 * a3);
    uint64_t v48 = a3;
    uint64_t v49 = v43;
    uint64_t v44 = v12;
    while (1)
    {
      id v14 = *(void **)v12;
      id v15 = v13;
      id v16 = v14;
      id v17 = objc_msgSend(v16, sel_endDate);
      sub_24162B6A8();

      id v18 = objc_msgSend(v15, sel_categoryType);
      unint64_t v19 = sub_2412704EC();
      char v21 = v20;

      if (v21) {
        break;
      }
      if (v19 >= 4) {
        goto LABEL_17;
      }
      uint64_t v22 = sub_2411EA9E0();
      uint64_t v24 = v23;
      id v51 = v15;
      id v25 = objc_msgSend(v15, sel_endDate);
      sub_24162B6A8();

      id v26 = objc_msgSend(v16, sel_categoryType);
      unint64_t v27 = sub_2412704EC();
      char v29 = v28;

      if (v29) {
        goto LABEL_15;
      }
      if (v27 >= 4) {
        goto LABEL_17;
      }
      uint64_t v30 = sub_2411EA9E0();
      uint64_t v32 = v31;
      uint64_t v33 = v53;
      uint64_t v34 = v22;
      uint64_t v35 = v52;
      int v50 = sub_24148C34C(v53, v34, v24, v52, v30, v32);
      swift_bridgeObjectRelease();
      unint64_t v36 = *v45;
      uint64_t v37 = v35;
      uint64_t v38 = v46;
      (*v45)(v37, v46);
      swift_bridgeObjectRelease();
      v36(v33, v38);

      uint64_t v39 = v48;
      if (v50)
      {
        if (!v47) {
          goto LABEL_16;
        }
        id v40 = *(void **)v12;
        id v13 = *(void **)(v12 + 8);
        *(void *)uint64_t v12 = v13;
        *(void *)(v12 + 8) = v40;
        v12 -= 8;
        if (v39 != ++v49) {
          continue;
        }
      }
      a3 = v39 + 1;
      uint64_t v12 = v44 + 8;
      if (a3 == v42) {
        return;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    sub_241633038();
    __break(1u);
  }
}

uint64_t sub_24148E748(uint64_t *a1, uint64_t a2)
{
  uint64_t v181 = sub_24162B718();
  uint64_t v5 = *(void *)(v181 - 8);
  MEMORY[0x270FA5388](v181);
  uint64_t v185 = (uint64_t)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v186 = (uint64_t)&v166 - v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v175 = (uint64_t)&v166 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v176 = (uint64_t)&v166 - v12;
  v170 = a1;
  uint64_t v13 = a1[1];
  uint64_t v178 = a2;
  swift_retain_n();
  uint64_t v14 = sub_2416331C8();
  if (v14 >= v13)
  {
    if (v13 < 0) {
      goto LABEL_148;
    }
    if (v13) {
      sub_24148E3D4(0, v13, 1, v170);
    }
    return swift_release_n();
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_161;
  }
  uint64_t v169 = v14;
  uint64_t v179 = v2;
  if (v13 < 2)
  {
    unint64_t v19 = (char *)MEMORY[0x263F8EE78];
    uint64_t v189 = MEMORY[0x263F8EE78];
    uint64_t v177 = (id *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v13 != 1)
    {
      unint64_t v96 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_112:
      if (v96 >= 2)
      {
        uint64_t v152 = *v170;
        uint64_t v186 = *v170;
        do
        {
          unint64_t v153 = v96 - 2;
          if (v96 < 2) {
            goto LABEL_142;
          }
          if (!v152) {
            goto LABEL_159;
          }
          uint64_t v154 = (uint64_t)v19;
          v155 = v19 + 32;
          uint64_t v156 = *(void *)&v19[16 * v153 + 32];
          uint64_t v157 = *(void *)&v155[16 * v96 - 8];
          uint64_t v158 = (void **)(v152 + 8 * v156);
          uint64_t v159 = (void **)(v152 + 8 * *(void *)&v155[16 * v96 - 16]);
          unint64_t v160 = v152 + 8 * v157;
          swift_retain();
          uint64_t v161 = v158;
          uint64_t v162 = v179;
          sub_24148D5F4(v161, v159, v160, v177);
          uint64_t v179 = v162;
          if (v162) {
            break;
          }
          if (v157 < v156) {
            goto LABEL_144;
          }
          unsigned __int8 v163 = (char *)v154;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unsigned __int8 v163 = sub_2414AA258(v154);
          }
          if (v153 >= *((void *)v163 + 2)) {
            goto LABEL_145;
          }
          v164 = &v163[16 * v153 + 32];
          *(void *)v164 = v156;
          *((void *)v164 + 1) = v157;
          unint64_t v165 = *((void *)v163 + 2);
          if (v96 > v165) {
            goto LABEL_146;
          }
          unint64_t v19 = v163;
          memmove(&v163[16 * v96 + 16], &v163[16 * v96 + 32], 16 * (v165 - v96));
          *((void *)v163 + 2) = v165 - 1;
          unint64_t v96 = v165 - 1;
          uint64_t v152 = v186;
        }
        while (v165 > 2);
      }
LABEL_123:
      swift_bridgeObjectRelease();
      goto LABEL_126;
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
    uint64_t v17 = sub_241631F88();
    *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
    uint64_t v177 = (id *)((v17 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v189 = v17;
  }
  uint64_t v20 = 0;
  uint64_t v21 = *v170;
  v180 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v166 = v21 + 16;
  uint64_t v167 = v21 - 8;
  unint64_t v19 = (char *)MEMORY[0x263F8EE78];
  uint64_t v173 = v13;
  uint64_t v182 = v21;
  while (1)
  {
    uint64_t v22 = v20 + 1;
    uint64_t v172 = v20;
    if (v20 + 1 >= v13) {
      goto LABEL_36;
    }
    uint64_t v23 = *(void **)(v21 + 8 * v22);
    id v187 = *(id *)(v21 + 8 * v20);
    id v24 = v187;
    v188 = v23;
    uint64_t v25 = v20;
    id v26 = v23;
    id v27 = v24;
    uint64_t v28 = v179;
    LODWORD(v174) = sub_24148E12C(&v188, &v187);
    uint64_t v179 = v28;
    if (v28)
    {
      swift_bridgeObjectRelease();

LABEL_126:
      *(void *)((v189 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_241631F48();
      swift_release_n();
      return swift_bridgeObjectRelease();
    }

    uint64_t v22 = v25 + 2;
    uint64_t v20 = v25;
    if (v25 + 2 < v13)
    {
      v168 = v19;
      char v29 = (id *)(v166 + 8 * v25);
      while (1)
      {
        uint64_t v183 = v22;
        uint64_t v30 = *(v29 - 1);
        id v31 = *v29;
        id v32 = v30;
        id v33 = objc_msgSend(v32, sel_endDate);
        sub_24162B6A8();

        id v34 = objc_msgSend(v31, sel_categoryType);
        unint64_t v35 = sub_2412704EC();
        char v37 = v36;

        if (v37) {
          goto LABEL_157;
        }
        if (v35 >= 4) {
          goto LABEL_160;
        }
        uint64_t v38 = sub_2411EA9E0();
        uint64_t v40 = v39;
        v184 = (void **)v31;
        id v41 = objc_msgSend(v31, sel_endDate);
        sub_24162B6A8();

        uint64_t v42 = v32;
        id v43 = objc_msgSend(v32, sel_categoryType);
        unint64_t v44 = sub_2412704EC();
        char v46 = v45;

        if (v46) {
          goto LABEL_156;
        }
        if (v44 >= 4) {
          goto LABEL_160;
        }
        uint64_t v47 = sub_2411EA9E0();
        uint64_t v48 = v175;
        uint64_t v49 = v176;
        int v51 = sub_24148C34C(v176, v38, v40, v175, v47, v50);
        swift_bridgeObjectRelease();
        uint64_t v52 = *v180;
        uint64_t v53 = v48;
        uint64_t v54 = v181;
        (*v180)(v53, v181);
        swift_bridgeObjectRelease();
        v52(v49, v54);

        if ((v174 ^ v51)) {
          break;
        }
        uint64_t v22 = v183 + 1;
        ++v29;
        if (v13 == v183 + 1)
        {
          uint64_t v22 = v13;
          uint64_t v21 = v182;
          goto LABEL_26;
        }
      }
      uint64_t v21 = v182;
      uint64_t v22 = v183;
LABEL_26:
      unint64_t v19 = v168;
      uint64_t v20 = v172;
    }
    if (v174)
    {
      if (v22 < v20) {
        goto LABEL_151;
      }
      if (v20 < v22)
      {
        uint64_t v55 = (uint64_t *)(v167 + 8 * v22);
        uint64_t v56 = v20;
        uint64_t v57 = v22;
        uint64_t v58 = v56;
        char v59 = (uint64_t *)(v21 + 8 * v56);
        do
        {
          if (v58 != --v57)
          {
            if (!v21) {
              goto LABEL_158;
            }
            uint64_t v60 = *v59;
            *char v59 = *v55;
            uint64_t *v55 = v60;
          }
          ++v58;
          --v55;
          ++v59;
        }
        while (v58 < v57);
        uint64_t v20 = v172;
      }
    }
LABEL_36:
    if (v22 >= v13) {
      goto LABEL_57;
    }
    if (__OFSUB__(v22, v20)) {
      goto LABEL_147;
    }
    if (v22 - v20 >= v169)
    {
      uint64_t v20 = v172;
LABEL_57:
      if (v22 < v20) {
        goto LABEL_143;
      }
      goto LABEL_58;
    }
    uint64_t v61 = v172 + v169;
    if (__OFADD__(v172, v169)) {
      goto LABEL_149;
    }
    uint64_t v20 = v172;
    if (v61 >= v13) {
      uint64_t v61 = v13;
    }
    if (v61 < v172) {
      break;
    }
    if (v22 == v61) {
      goto LABEL_57;
    }
    uint64_t v171 = v61;
    v168 = v19;
    uint64_t v62 = (char *)(v167 + 8 * v22);
    do
    {
      BOOL v64 = *(void **)(v21 + 8 * v22);
      uint64_t v65 = v20;
      uint64_t v174 = v62;
      uint64_t v183 = v22;
      while (1)
      {
        uint64_t v66 = *(void **)v62;
        id v67 = v64;
        id v68 = v66;
        id v69 = objc_msgSend(v68, sel_endDate);
        sub_24162B6A8();

        id v70 = objc_msgSend(v67, sel_categoryType);
        unint64_t v71 = sub_2412704EC();
        char v73 = v72;

        if (v73) {
          goto LABEL_152;
        }
        if (v71 >= 4) {
          goto LABEL_160;
        }
        uint64_t v74 = sub_2411EA9E0();
        uint64_t v76 = v75;
        v184 = (void **)v67;
        id v77 = objc_msgSend(v67, sel_endDate);
        sub_24162B6A8();

        uint64_t v78 = v68;
        id v79 = objc_msgSend(v68, sel_categoryType);
        unint64_t v80 = sub_2412704EC();
        char v82 = v81;

        if (v82) {
          goto LABEL_153;
        }
        if (v80 >= 4) {
          goto LABEL_160;
        }
        uint64_t v83 = v65;
        uint64_t v84 = sub_2411EA9E0();
        uint64_t v85 = v185;
        uint64_t v86 = v186;
        char v88 = sub_24148C34C(v186, v74, v76, v185, v84, v87);
        swift_bridgeObjectRelease();
        uint64_t v89 = *v180;
        uint64_t v90 = v85;
        uint64_t v91 = v181;
        (*v180)(v90, v181);
        swift_bridgeObjectRelease();
        v89(v86, v91);

        if ((v88 & 1) == 0) {
          break;
        }
        uint64_t v21 = v182;
        uint64_t v63 = v183;
        if (!v182) {
          goto LABEL_154;
        }
        uint64_t v92 = *(void **)v62;
        BOOL v64 = (void *)*((void *)v62 + 1);
        *(void *)uint64_t v62 = v64;
        *((void *)v62 + 1) = v92;
        v62 -= 8;
        ++v65;
        if (v63 == v83 + 1) {
          goto LABEL_46;
        }
      }
      uint64_t v21 = v182;
      uint64_t v63 = v183;
LABEL_46:
      uint64_t v22 = v63 + 1;
      uint64_t v62 = v174 + 8;
      uint64_t v20 = v172;
    }
    while (v22 != v171);
    uint64_t v22 = v171;
    unint64_t v19 = v168;
    uint64_t v13 = v173;
    if (v171 < v172) {
      goto LABEL_143;
    }
LABEL_58:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v183 = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v19 = sub_2414A9DD0(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v95 = *((void *)v19 + 2);
    unint64_t v94 = *((void *)v19 + 3);
    unint64_t v96 = v95 + 1;
    uint64_t v97 = v172;
    if (v95 >= v94 >> 1)
    {
      uint64_t v151 = sub_2414A9DD0((char *)(v94 > 1), v95 + 1, 1, v19);
      uint64_t v97 = v172;
      unint64_t v19 = v151;
    }
    *((void *)v19 + 2) = v96;
    uint64_t v98 = v19 + 32;
    unint64_t v99 = &v19[16 * v95 + 32];
    *(void *)unint64_t v99 = v97;
    *((void *)v99 + 1) = v183;
    if (v95)
    {
      uint64_t v174 = v19 + 32;
      while (1)
      {
        unint64_t v100 = v96 - 1;
        if (v96 >= 4)
        {
          uint64_t v105 = &v98[16 * v96];
          uint64_t v106 = *((void *)v105 - 8);
          uint64_t v107 = *((void *)v105 - 7);
          BOOL v111 = __OFSUB__(v107, v106);
          uint64_t v108 = v107 - v106;
          if (v111) {
            goto LABEL_131;
          }
          uint64_t v110 = *((void *)v105 - 6);
          uint64_t v109 = *((void *)v105 - 5);
          BOOL v111 = __OFSUB__(v109, v110);
          uint64_t v103 = v109 - v110;
          char v104 = v111;
          if (v111) {
            goto LABEL_132;
          }
          unint64_t v112 = v96 - 2;
          uint64_t v113 = &v98[16 * v96 - 32];
          uint64_t v115 = *(void *)v113;
          uint64_t v114 = *((void *)v113 + 1);
          BOOL v111 = __OFSUB__(v114, v115);
          uint64_t v116 = v114 - v115;
          if (v111) {
            goto LABEL_134;
          }
          BOOL v111 = __OFADD__(v103, v116);
          uint64_t v117 = v103 + v116;
          if (v111) {
            goto LABEL_137;
          }
          if (v117 >= v108)
          {
            uint64_t v135 = &v98[16 * v100];
            uint64_t v137 = *(void *)v135;
            uint64_t v136 = *((void *)v135 + 1);
            BOOL v111 = __OFSUB__(v136, v137);
            uint64_t v138 = v136 - v137;
            if (v111) {
              goto LABEL_141;
            }
            BOOL v128 = v103 < v138;
            goto LABEL_95;
          }
        }
        else
        {
          if (v96 != 3)
          {
            uint64_t v129 = *((void *)v19 + 4);
            uint64_t v130 = *((void *)v19 + 5);
            BOOL v111 = __OFSUB__(v130, v129);
            uint64_t v122 = v130 - v129;
            char v123 = v111;
            goto LABEL_89;
          }
          uint64_t v102 = *((void *)v19 + 4);
          uint64_t v101 = *((void *)v19 + 5);
          BOOL v111 = __OFSUB__(v101, v102);
          uint64_t v103 = v101 - v102;
          char v104 = v111;
        }
        if (v104) {
          goto LABEL_133;
        }
        unint64_t v112 = v96 - 2;
        uint64_t v118 = &v98[16 * v96 - 32];
        uint64_t v120 = *(void *)v118;
        uint64_t v119 = *((void *)v118 + 1);
        BOOL v121 = __OFSUB__(v119, v120);
        uint64_t v122 = v119 - v120;
        char v123 = v121;
        if (v121) {
          goto LABEL_136;
        }
        uint64_t v124 = &v98[16 * v100];
        uint64_t v126 = *(void *)v124;
        uint64_t v125 = *((void *)v124 + 1);
        BOOL v111 = __OFSUB__(v125, v126);
        uint64_t v127 = v125 - v126;
        if (v111) {
          goto LABEL_139;
        }
        if (__OFADD__(v122, v127)) {
          goto LABEL_140;
        }
        if (v122 + v127 >= v103)
        {
          BOOL v128 = v103 < v127;
LABEL_95:
          if (v128) {
            unint64_t v100 = v112;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v123) {
          goto LABEL_135;
        }
        uint64_t v131 = &v98[16 * v100];
        uint64_t v133 = *(void *)v131;
        uint64_t v132 = *((void *)v131 + 1);
        BOOL v111 = __OFSUB__(v132, v133);
        uint64_t v134 = v132 - v133;
        if (v111) {
          goto LABEL_138;
        }
        if (v134 < v122) {
          goto LABEL_106;
        }
LABEL_97:
        unint64_t v139 = v100 - 1;
        if (v100 - 1 >= v96)
        {
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
          goto LABEL_150;
        }
        if (!v21) {
          goto LABEL_155;
        }
        uint64_t v140 = v19;
        char v141 = &v98[16 * v139];
        uint64_t v142 = *(void *)v141;
        unint64_t v143 = v100;
        char v144 = &v98[16 * v100];
        uint64_t v145 = *((void *)v144 + 1);
        uint64_t v146 = (void **)(v21 + 8 * *(void *)v141);
        v184 = (void **)(v21 + 8 * *(void *)v144);
        swift_retain();
        uint64_t v147 = v146;
        uint64_t v148 = v179;
        sub_24148D5F4(v147, v184, v21 + 8 * v145, v177);
        uint64_t v179 = v148;
        if (v148) {
          goto LABEL_123;
        }
        if (v145 < v142) {
          goto LABEL_128;
        }
        if (v143 > *((void *)v140 + 2)) {
          goto LABEL_129;
        }
        unint64_t v149 = v143;
        *(void *)char v141 = v142;
        uint64_t v98 = v174;
        *(void *)&v174[16 * v139 + 8] = v145;
        unint64_t v150 = *((void *)v140 + 2);
        if (v143 >= v150) {
          goto LABEL_130;
        }
        unint64_t v19 = v140;
        unint64_t v96 = v150 - 1;
        memmove(v144, v144 + 16, 16 * (v150 - 1 - v149));
        *((void *)v140 + 2) = v150 - 1;
        BOOL v128 = v150 > 2;
        uint64_t v13 = v173;
        uint64_t v21 = v182;
        if (!v128) {
          goto LABEL_106;
        }
      }
    }
    unint64_t v96 = 1;
LABEL_106:
    uint64_t v20 = v183;
    if (v183 >= v13) {
      goto LABEL_112;
    }
  }
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  swift_release_n();
  __break(1u);
LABEL_155:
  swift_release_n();
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  swift_release_n();
  __break(1u);
LABEL_159:
  swift_release_n();
  __break(1u);
LABEL_160:
  sub_241633038();
  __break(1u);
LABEL_161:
  swift_release_n();
  uint64_t result = sub_241633028();
  __break(1u);
  return result;
}

uint64_t sub_24148F3CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_retain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_2414A13F0();
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  swift_retain();
  sub_24148E748(v8, a2);
  swift_release();
  sub_241632F28();
  return swift_release_n();
}

uint64_t sub_24148F478(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_24134D3E0();
  uint64_t v6 = sub_241633098();
  uint64_t v7 = (void *)v6;
  int64_t v8 = 0;
  uint64_t v29 = a1;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v10 = a1 + 64;
  uint64_t v9 = v11;
  uint64_t v12 = 1 << *(unsigned char *)(v10 - 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v9;
  uint64_t v26 = v10;
  int64_t v27 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v28 = v6 + 64;
  if ((v13 & v9) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v15 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v8 << 6))
  {
    char v20 = *(unsigned char *)(*(void *)(v29 + 48) + i);
    unint64_t v21 = *(void *)(*(void *)(v29 + 56) + 8 * i);
    if ((v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n();
      swift_retain();
      uint64_t v22 = (uint64_t)sub_24149D280(v21);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
      swift_retain();
    }
    uint64_t v30 = v22;
    sub_24148F3CC(&v30, a2);
    if (v3) {
      break;
    }
    uint64_t v3 = 0;
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v28 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(unsigned char *)(v7[6] + i) = v20;
    *(void *)(v7[7] + 8 * i) = v30;
    uint64_t v23 = v7[2];
    BOOL v17 = __OFADD__(v23, 1);
    uint64_t v24 = v23 + 1;
    if (v17)
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      break;
    }
    v7[2] = v24;
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v17 = __OFADD__(v8++, 1);
    if (v17) {
      goto LABEL_30;
    }
    if (v8 >= v27) {
      return (uint64_t)v7;
    }
    unint64_t v18 = *(void *)(v26 + 8 * v8);
    if (!v18)
    {
      int64_t v19 = v8 + 1;
      if (v8 + 1 >= v27) {
        return (uint64_t)v7;
      }
      unint64_t v18 = *(void *)(v26 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v8 + 2;
        if (v8 + 2 >= v27) {
          return (uint64_t)v7;
        }
        unint64_t v18 = *(void *)(v26 + 8 * v19);
        if (!v18)
        {
          int64_t v19 = v8 + 3;
          if (v8 + 3 >= v27) {
            return (uint64_t)v7;
          }
          unint64_t v18 = *(void *)(v26 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v8 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_31;
              }
              if (v8 >= v27) {
                return (uint64_t)v7;
              }
              unint64_t v18 = *(void *)(v26 + 8 * v8);
              ++v19;
              if (v18) {
                goto LABEL_15;
              }
            }
          }
        }
      }
      int64_t v8 = v19;
    }
LABEL_15:
    unint64_t v14 = (v18 - 1) & v18;
  }
  swift_release();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_24148F6EC()
{
  if (!qword_268D01170)
  {
    sub_24148CA40(255, (unint64_t *)&qword_268CFB1B0, MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01170);
    }
  }
}

void sub_24148F774()
{
  if (!qword_268D00CA8)
  {
    sub_24162B718();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D00CA8);
    }
  }
}

uint64_t sub_24148F7DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24148F83C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24148F874(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_241201428;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268D00CB0 + dword_268D00CB0);
  return v7(a1, a2, v2);
}

uint64_t sub_24148F92C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = sub_24162B788();
  unint64_t v44 = *(char **)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v43 - v9;
  unint64_t v11 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v12 = sub_24148DDBC(v11, a2);
  char v14 = v13;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    unint64_t v15 = v44;
    uint64_t v52 = v10;
    uint64_t v51 = a2;
    v43[1] = 0;
    if (v14)
    {
      if ((unint64_t)*a1 >> 62)
      {
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v12 = sub_241633068();
        swift_bridgeObjectRelease();
      }
      else
      {
        return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      unint64_t v16 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_63;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_64:
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v17 = sub_241633068();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v18 = v51;
      if (v16 != v17)
      {
        uint64_t v49 = v15 + 16;
        uint64_t v50 = v51 + 56;
        int64_t v19 = (void (**)(char *, uint64_t))(v15 + 8);
        char v45 = a1;
        unint64_t v15 = v52;
        do
        {
          uint64_t v20 = *a1;
          BOOL v21 = (*a1 & 0xC000000000000001) == 0;
          unint64_t v47 = v16;
          unint64_t v48 = v12;
          if (v21)
          {
            if ((v16 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
            if (v16 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_54;
            }
            id v41 = *(id *)(v20 + 8 * v16 + 32);
          }
          else
          {
            id v41 = (id)MEMORY[0x245620370](v16);
          }
          id v46 = v41;
          id v22 = objc_msgSend(v41, sel_UUID);
          sub_24162B768();

          if (*(void *)(v18 + 16)
            && (sub_2414900C0((unint64_t *)&qword_268CFEAB0, MEMORY[0x263F07508]),
                uint64_t v23 = sub_241631B68(),
                uint64_t v24 = -1 << *(unsigned char *)(v18 + 32),
                unint64_t v25 = v23 & ~v24,
                ((*(void *)(v50 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) != 0))
          {
            uint64_t v26 = ~v24;
            uint64_t v27 = *((void *)v44 + 9);
            uint64_t v28 = (void (*)(char *, unint64_t, uint64_t))*((void *)v44 + 2);
            while (1)
            {
              v28(v7, *(void *)(v18 + 48) + v27 * v25, v5);
              sub_2414900C0((unint64_t *)&unk_268D00E40, MEMORY[0x263F07508]);
              char v29 = sub_241631C28();
              uint64_t v30 = *v19;
              (*v19)(v7, v5);
              if (v29) {
                break;
              }
              unint64_t v25 = (v25 + 1) & v26;
              uint64_t v18 = v51;
              if (((*(void *)(v50 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
                goto LABEL_18;
              }
            }
            unint64_t v15 = v52;
            v30(v52, v5);

            a1 = v45;
            uint64_t v12 = v48;
            unint64_t v16 = v47 + 1;
            if (__OFADD__(v47, 1)) {
              goto LABEL_55;
            }
          }
          else
          {
LABEL_18:
            unint64_t v15 = v52;
            (*v19)(v52, v5);

            unint64_t v16 = v47;
            uint64_t v12 = v48;
            a1 = v45;
            if (v48 != v47)
            {
              uint64_t v31 = *v45;
              if ((*v45 & 0xC000000000000001) != 0)
              {
                id v32 = (id)MEMORY[0x245620370](v48, *v45);
                uint64_t v31 = *a1;
              }
              else
              {
                if ((v48 & 0x8000000000000000) != 0) {
                  goto LABEL_57;
                }
                if (v48 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_58;
                }
                id v32 = *(id *)(v31 + 8 * v48 + 32);
              }
              id v46 = v32;
              if ((v31 & 0xC000000000000001) != 0)
              {
                id v33 = (id)MEMORY[0x245620370](v16, v31);
                uint64_t v31 = *a1;
              }
              else
              {
                if ((v16 & 0x8000000000000000) != 0) {
                  goto LABEL_59;
                }
                if (v16 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_60;
                }
                id v33 = *(id *)(v31 + 8 * v16 + 32);
              }
              int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v31;
              if (!isUniquelyReferenced_nonNull_bridgeObject || v31 < 0 || (v31 & 0x4000000000000000) != 0)
              {
                uint64_t v31 = sub_2414AA8D8(v31);
                *a1 = v31;
              }
              unint64_t v35 = *(void **)((v31 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20);
              *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20) = v33;

              sub_241631F48();
              uint64_t v36 = *a1;
              int v37 = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v36;
              if (!v37 || v36 < 0 || (v36 & 0x4000000000000000) != 0)
              {
                uint64_t v36 = sub_2414AA8D8(v36);
                *a1 = v36;
              }
              if ((v16 & 0x8000000000000000) != 0) {
                goto LABEL_61;
              }
              if (v16 >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_62;
              }
              uint64_t v38 = *(void **)((v36 & 0xFFFFFFFFFFFFFF8) + 8 * v16 + 0x20);
              *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 8 * v16 + 0x20) = v46;

              sub_241631F48();
            }
            BOOL v39 = __OFADD__(v12++, 1);
            if (v39) {
              goto LABEL_56;
            }
            BOOL v39 = __OFADD__(v16++, 1);
            if (v39) {
              goto LABEL_55;
            }
          }
          if ((unint64_t)*a1 >> 62)
          {
            _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
            uint64_t v40 = sub_241633068();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v40 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          uint64_t v18 = v51;
        }
        while (v16 != v40);
      }
    }
  }
  return v12;
}

uint64_t sub_24148FEC4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x270FA2498](sub_24148FEE4, 0, 0);
}

uint64_t sub_24148FEE4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_24148CA40(0, &qword_268CFCDD8, MEMORY[0x263F09020]);
  unint64_t v2 = sub_241631918();
  swift_beginAccess();
  sub_241496BDC(v2);
  swift_endAccess();
  unint64_t v3 = sub_241631928();
  uint64_t v4 = sub_241489800(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_2414AD210(v4);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v6 = sub_24148F92C((uint64_t *)(v1 + 16), v5);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)(v1 + 16);
  if (v8 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v9 = sub_241633068();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 >= v6) {
      goto LABEL_3;
    }
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 < v6) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v10 = v6;
  unint64_t v11 = (uint64_t *)(*(void *)(v0 + 56) + 16);
  sub_2414ADC68(v10, v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = *v11;
  char v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v13(v12);
}

uint64_t sub_2414900C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MedicationsReviewCollectionViewController(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D00D08);
}

uint64_t sub_241490128()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241490168(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_241632F38();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x245620370](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        type metadata accessor for LoggingCardCarouselLayoutAttributes();
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_241632F18();
        sub_241632F48();
        sub_241632F58();
        sub_241632F28();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        unint64_t v8 = *(void **)(v6 + 8 * v5);
        type metadata accessor for LoggingCardCarouselLayoutAttributes();
        uint64_t v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_241632F18();
        sub_241632F48();
        sub_241632F58();
        sub_241632F28();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241633068();
    swift_bridgeObjectRelease();
    sub_241632F38();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v2 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  return v12;
}

id sub_241490348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162E918();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  type metadata accessor for MedicationsReviewDataSource(0);
  swift_allocObject();
  uint64_t v8 = sub_241492D58((uint64_t)v7, a2);
  sub_241492F9C();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_241637EE0;
  uint64_t v10 = MEMORY[0x263F440A0];
  *(void *)(v9 + 32) = v8;
  *(void *)(v9 + 40) = v10;
  sub_24162DBD8();
  swift_allocObject();
  swift_retain();
  sub_24162DBF8();
  id v11 = (id)sub_24162E498();
  id result = objc_msgSend(v11, sel_collectionView);
  if (result)
  {
    char v13 = result;
    id v14 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v13, sel_setBackgroundColor_, v14);

    sub_241490558();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241490558()
{
  uint64_t v16 = *v0;
  uint64_t v15 = MEMORY[0x263F8F110];
  uint64_t v1 = MEMORY[0x263F8D8F0];
  sub_2411BEC08(0, (unint64_t *)&unk_26B012FA0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - v3;
  sub_241493008();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakAssign();
  uint64_t v17 = sub_24162EDF8();
  sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
  id v18 = (id)sub_2416325A8();
  uint64_t v10 = sub_241632598();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_2414930D4();
  sub_241492AC0(&qword_268D00D48, (void (*)(uint64_t))sub_2414930D4);
  sub_24126BA6C();
  sub_24162FDA8();
  sub_2414933C8((uint64_t)v4, (uint64_t)&unk_26B012FA0, v15, v1, (uint64_t (*)(void))sub_2411BEC08);

  swift_release();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = v16;
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = v13;
  sub_241492AC0(&qword_268D00D50, (void (*)(uint64_t))sub_241493008);
  sub_24162FDD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_24162FA78();
  swift_endAccess();
  return swift_release();
}

void sub_2414908F0()
{
}

void sub_24149094C(void *a1)
{
  uint64_t v2 = (void *)sub_24162BA88();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  uint64_t v3 = (void *)sub_24162BA88();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_24162E488();
    sub_24162DBD8();
    sub_24162D168();
    swift_release();
    sub_2411A3DF4((uint64_t)v11, (uint64_t)v8);
    sub_2411C8460(0, (unint64_t *)&qword_268CFF090);
    sub_2411C8460(0, &qword_268CFF098);
    if (swift_dynamicCast())
    {
      uint64_t v5 = v6;
LABEL_6:
      sub_2411B6CD4(v5, (uint64_t)v10);
      sub_2411B6854(v10, v10[3]);
      sub_24162D548();

      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v11);
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v10);
      return;
    }
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_2414933C8((uint64_t)v6, (uint64_t)&unk_268CFF0A0, (uint64_t)&qword_268CFF098, MEMORY[0x263F43FF0], (uint64_t (*)(void))sub_2413F05FC);
    *(void *)&v6[0] = v4;
    sub_2411B9D00(0, &qword_268CFBDD0);
    id v4 = v4;
    if (swift_dynamicCast())
    {
      uint64_t v5 = v8;
      goto LABEL_6;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));

    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v11);
    sub_2414933C8((uint64_t)v8, (uint64_t)&unk_268CFF0A0, (uint64_t)&qword_268CFF098, MEMORY[0x263F43FF0], (uint64_t (*)(void))sub_2413F05FC);
  }
}

uint64_t sub_241490BA8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_24162BB18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162BAA8();
  id v9 = a3;
  id v10 = a1;
  sub_24149094C(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_241490CA4()
{
}

void sub_241490CD4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_241490D08()
{
  return type metadata accessor for MedicationsReviewCollectionViewController(0);
}

uint64_t type metadata accessor for MedicationsReviewDataSource(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D00D20);
}

uint64_t sub_241490D30()
{
  uint64_t result = sub_24162E918();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241490DF8()
{
  swift_getObjectType();

  return sub_24162E548();
}

uint64_t sub_241490E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_24162D678();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v83 = (char *)&v75 - v9;
  uint64_t v10 = sub_24162EFA8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v75 - v16;
  MEMORY[0x270FA5388](v15);
  int64_t v19 = (char *)&v75 - v18;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v21 = result;
    unint64_t v80 = v8;
    uint64_t v81 = v5;
    unint64_t v22 = sub_24162EDE8();
    unint64_t v23 = sub_2411B9D3C(v22);
    swift_bridgeObjectRelease();
    if (v23)
    {
      uint64_t v79 = v4;
      if (v23 >> 62)
      {
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v24 = sub_241633068();
        swift_bridgeObjectRelease();
        if (v24 >= 1) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v24 >= 1)
        {
LABEL_5:
          uint64_t v82 = v10;
          sub_24162EF28();
          swift_bridgeObjectRetain_n();
          unint64_t v25 = sub_24162EF98();
          os_log_type_t v26 = sub_2416322E8();
          BOOL v27 = os_log_type_enabled(v25, v26);
          uint64_t v77 = a3;
          uint64_t v78 = v11;
          if (v27)
          {
            uint64_t v28 = swift_slowAlloc();
            uint64_t v76 = swift_slowAlloc();
            uint64_t v85 = v76;
            *(_DWORD *)uint64_t v28 = 136446466;
            uint64_t v75 = v28 + 4;
            uint64_t v29 = sub_2416333E8();
            uint64_t v84 = sub_2411B6898(v29, v30, &v85);
            sub_241632C28();
            swift_bridgeObjectRelease();
            *(_WORD *)(v28 + 12) = 2048;
            swift_bridgeObjectRelease();
            uint64_t v84 = v24;
            sub_241632C28();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24118E000, v25, v26, "[%{public}s] Showing %ld medication(s) to review", (uint8_t *)v28, 0x16u);
            uint64_t v31 = v76;
            swift_arrayDestroy();
            MEMORY[0x245621640](v31, -1, -1);
            MEMORY[0x245621640](v28, -1, -1);

            uint64_t v32 = v78;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            uint64_t v32 = v11;
          }
          id v33 = *(void (**)(char *, uint64_t))(v32 + 8);
          v33(v19, v82);
          uint64_t v34 = v21 + qword_268D24150;
          uint64_t v35 = sub_241631F78();
          uint64_t v37 = v36;
          uint64_t v39 = v38;
          swift_bridgeObjectRelease();
          uint64_t v40 = (uint64_t *)(v21 + qword_268D24160);
          uint64_t v41 = *(void *)(v21 + qword_268D24160);
          uint64_t *v40 = v35;
          v40[1] = v37;
          v40[2] = v39;
          sub_2414931B4(v41);
          unint64_t v42 = *v40;
          if (*v40)
          {
            unint64_t v44 = v40[1];
            uint64_t v43 = v40[2];
            uint64_t v45 = qword_268D00CE8;
            id v46 = (char *)off_268D00CF0;
            uint64_t v47 = v21 + qword_268D24168;
            unint64_t v48 = (void *)MEMORY[0x245621790](v21 + qword_268D24168);
            sub_241493200(v42);
            _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
            _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
            _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
            _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
            sub_2414916E8(v42, v44, v43, v45, v46, v34, (uint64_t)v48);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            uint64_t v50 = qword_268D00CF8;
            uint64_t v49 = off_268D00D00;
            uint64_t v51 = (void *)MEMORY[0x245621790](v47);
            _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
            uint64_t v52 = v80;
            sub_2414916E8(v42, v44, v43, v50, v49, v34, (uint64_t)v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            sub_2411BEC08(0, (unint64_t *)&qword_268D00EC0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
            uint64_t v53 = v81;
            uint64_t v54 = *(void *)(v81 + 72);
            unint64_t v55 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
            uint64_t v56 = swift_allocObject();
            *(_OWORD *)(v56 + 16) = xmmword_24163A4F0;
            unint64_t v57 = v56 + v55;
            uint64_t v58 = *(void (**)(unint64_t, char *, uint64_t))(v53 + 16);
            char v59 = v83;
            uint64_t v60 = v79;
            v58(v57, v83, v79);
            v58(v57 + v54, v52, v60);
            sub_24162D738();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v61 = *(void (**)(char *, uint64_t))(v53 + 8);
            v61(v52, v60);
            return ((uint64_t (*)(char *, uint64_t))v61)(v59, v60);
          }
          sub_24162EF28();
          uint64_t v62 = sub_24162EF98();
          os_log_type_t v63 = sub_2416322E8();
          if (os_log_type_enabled(v62, v63))
          {
            BOOL v64 = (uint8_t *)swift_slowAlloc();
            uint64_t v65 = swift_slowAlloc();
            uint64_t v85 = v65;
            *(_DWORD *)BOOL v64 = 136446210;
            uint64_t v66 = sub_2416333E8();
            uint64_t v84 = sub_2411B6898(v66, v67, &v85);
            sub_241632C28();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24118E000, v62, v63, "[%{public}s] Couldn't group medications by criticality", v64, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x245621640](v65, -1, -1);
            MEMORY[0x245621640](v64, -1, -1);
          }

          v33(v17, v82);
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRelease();
    }
    sub_24162EF28();
    id v68 = sub_24162EF98();
    os_log_type_t v69 = sub_2416322E8();
    if (os_log_type_enabled(v68, v69))
    {
      id v70 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      uint64_t v82 = v10;
      uint64_t v72 = v71;
      uint64_t v85 = v71;
      *(_DWORD *)id v70 = 136446210;
      uint64_t v73 = sub_2416333E8();
      uint64_t v84 = sub_2411B6898(v73, v74, &v85);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v68, v69, "[%{public}s] No medications available to review", v70, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v72, -1, -1);
      MEMORY[0x245621640](v70, -1, -1);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v82);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
LABEL_18:
    sub_24162D738();
    return swift_release();
  }
  return result;
}

uint64_t sub_2414916E8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  BOOL v15 = qword_268D00CE8 == a4 && off_268D00CF0 == (_UNKNOWN *)a5;
  if (v15 || (sub_241633218() & 1) != 0)
  {
    uint64_t v16 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
LABEL_13:
    MEMORY[0x270FA5388](v16);
    v21[2] = a6;
    v21[3] = a4;
    v21[4] = a5;
    v21[5] = a7;
    v21[6] = v8;
    uint64_t v19 = sub_2413947FC((void (*)(id *))sub_24149324C, (uint64_t)v21, a1);
    swift_bridgeObjectRelease();
    sub_241292778(v19);
    swift_bridgeObjectRelease();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    return sub_24162D668();
  }
  BOOL v17 = qword_268D00CF8 == a4 && off_268D00D00 == a5;
  if (v17 || (sub_241633218() & 1) != 0)
  {
    v21[11] = a2;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t v18 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v16 = sub_241497614(v18);
    a1 = a2;
    goto LABEL_13;
  }
  uint64_t result = sub_241633038();
  __break(1u);
  return result;
}

uint64_t sub_2414918B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v49 = a4;
  uint64_t v50 = a1;
  LODWORD(v58) = a3;
  uint64_t v57 = a5;
  uint64_t v6 = sub_24162E958();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v56 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162E8D8();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  MEMORY[0x270FA5388](v8);
  id v46 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411BEC08(0, (unint64_t *)&qword_26B0125C0, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v45 = (char *)&v45 - v11;
  uint64_t v12 = sub_24162E918();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  BOOL v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24162E978();
  uint64_t v52 = *(void *)(v16 - 8);
  uint64_t v53 = v16;
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268CF9790 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v51 = a2;
  v19((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v12);
  unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v22 + v20, v15, v12);
  unint64_t v23 = v49;
  uint64_t v24 = v50;
  *(void *)(v22 + v21) = v50;
  *(void *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)) = v23;
  id v25 = v23;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v26 = v24;
  sub_24162E968();
  uint64_t v27 = 0;
  uint64_t v28 = v18;
  if (v58)
  {
    sub_2411B9D00(0, &qword_268CFC2B0);
    uint64_t v27 = sub_241632A08();
  }
  id v29 = objc_msgSend(v26, sel_semanticIdentifier);
  id v30 = objc_msgSend(v29, sel_stringValue);

  uint64_t v58 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v50 = v31;

  v59[0] = v26;
  uint64_t v32 = sub_2411B9D00(0, &qword_268D00F20);
  sub_24162EDC8();
  v59[3] = v32;
  v59[4] = MEMORY[0x263F44ED0];
  v59[0] = v26;
  v26;
  sub_24162E908();
  uint64_t v34 = v33;
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v59);
  if (!v34)
  {
    uint64_t v51 = v27;
    if (qword_268CF9788 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_24162B7E8();
    uint64_t v36 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v45, 1, 1, v35);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v37 = v46;
    sub_24162E8B8();
    sub_24162E988();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v48);
    sub_2414933C8(v36, (uint64_t)&qword_26B0125C0, MEMORY[0x263F07690], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_2411BEC08);
  }
  uint64_t v38 = v56;
  sub_241632818();
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v38, *MEMORY[0x263F44EC0], v55);
  sub_2411BEC08(0, &qword_268D00D58, MEMORY[0x263F44EC8], MEMORY[0x263F8E0F8]);
  uint64_t v39 = v52;
  unint64_t v40 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_241637EE0;
  unint64_t v42 = v41 + v40;
  uint64_t v43 = v53;
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 16))(v42, v28, v53);
  sub_24162E898();
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v28, v43);
}

void sub_241491FA4(uint64_t a1, void *a2, void *a3)
{
  id v23 = a3;
  uint64_t v5 = sub_24162E918();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v25 = sub_2411B9D00(0, &qword_268D00F20);
  uint64_t v26 = MEMORY[0x263F44ED0];
  uint64_t v22 = v25;
  v24[0] = a2;
  id v12 = a2;
  uint64_t v13 = sub_24162E908();
  uint64_t v15 = v14;
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v24);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16(v11, a1, v5);
  if (v15) {
    uint64_t v21 = v13;
  }
  else {
    uint64_t v21 = sub_24162E8F8();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  sub_241632808();
  if (v25)
  {
    sub_2411B6854(v24, v25);
    sub_24162C758();
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v24);
  }
  else
  {
    sub_2414933C8((uint64_t)v24, (uint64_t)&unk_268D00D60, (uint64_t)&unk_268D00D68, MEMORY[0x263F46088], (uint64_t (*)(void))sub_2413F05FC);
  }
  v16(v9, a1, v5);
  uint64_t v25 = v22;
  uint64_t v26 = MEMORY[0x263F44ED0];
  v24[0] = v12;
  objc_allocWithZone((Class)sub_24162E948());
  id v17 = v12;
  unint64_t v18 = (void *)sub_24162E938();
  id v19 = objc_allocWithZone(MEMORY[0x263F46858]);
  id v20 = objc_msgSend(v19, sel_initWithRootViewController_, v18, v21);
  sub_24162E928();
  objc_msgSend(v20, sel_setModalInPresentation_, 1);
  if (v23) {
    objc_msgSend(v23, sel_presentViewController_animated_completion_, v20, 1, 0);
  }
}

uint64_t sub_241492274@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9 = *a1;
  if (qword_268D00CE8 == a3 && off_268D00CF0 == a4) {
    char v11 = 1;
  }
  else {
    char v11 = sub_241633218();
  }
  return sub_2414918B4(v9, a2, v11 & 1, a5, a6);
}

void sub_24149230C()
{
}

uint64_t sub_24149233C()
{
  uint64_t v1 = v0 + qword_268D24150;
  uint64_t v2 = sub_24162E918();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_2414931B4(*(void *)(v0 + qword_268D24160));
  swift_unknownObjectWeakDestroy();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2414923F0()
{
  uint64_t v0 = sub_24162D818();
  uint64_t v1 = v0 + qword_268D24150;
  uint64_t v2 = sub_24162E918();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_2414931B4(*(void *)(v0 + qword_268D24160));
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2414924E0()
{
  return type metadata accessor for MedicationsReviewDataSource(0);
}

uint64_t sub_2414924E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162D8F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162D118();
  unint64_t v7 = sub_24162DB38();
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v7 >= *(void *)(v6 + 16))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v8 = v6 + 16 * v7;
  uint64_t v10 = *(void *)(v8 + 32);
  uint64_t v9 = *(char **)(v8 + 40);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  if (v10 == qword_268D00CF8 && v9 == off_268D00D00)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = sub_241633218();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      goto LABEL_17;
    }
  }
  unint64_t v13 = *(void *)(v1 + qword_268D24160);
  if (!v13) {
    goto LABEL_17;
  }
  if (v13 >> 62)
  {
LABEL_16:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v14 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_13;
    }
LABEL_17:
    sub_24162D8B8();
    goto LABEL_18;
  }
  if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_17;
  }
LABEL_13:
  sub_24162D8A8();
LABEL_18:
  sub_24162D8C8();
  sub_24162DB08();
  uint64_t v15 = sub_24162D8E8();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v15;
}

uint64_t sub_241492718()
{
  return sub_2414924E8();
}

uint64_t sub_24149273C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24162F338();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24162E8D8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x263F07690];
  uint64_t v8 = MEMORY[0x263F8D8F0];
  sub_2411BEC08(0, (unint64_t *)&qword_26B0125C0, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)v19 - v10;
  uint64_t v12 = sub_24162B7E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_24162E8C8();
  uint64_t v13 = sub_24162E988();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_2414933C8((uint64_t)v11, (uint64_t)&qword_26B0125C0, v7, v8, (uint64_t (*)(void))sub_2411BEC08);
  v19[0] = v13;
  v19[1] = v15;
  sub_2411D662C();
  sub_241632C88();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_24162CAE8();
  sub_24162F308();
  uint64_t v17 = sub_24162CAD8();
  a1[3] = v16;
  uint64_t result = sub_241492AC0(&qword_268CFD2C0, MEMORY[0x263F43AA8]);
  a1[4] = result;
  *a1 = v17;
  return result;
}

uint64_t sub_241492A38@<X0>(uint64_t *a1@<X8>)
{
  return sub_24149273C(a1);
}

uint64_t sub_241492A50()
{
  return sub_241632438();
}

uint64_t sub_241492AC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241492B08(uint64_t a1)
{
  return sub_241492B58(a1, 0xD000000000000042, 0x800000024166DBD0, &qword_268D00CC8, &qword_268D00CD0);
}

uint64_t sub_241492B30(uint64_t a1)
{
  return sub_241492B58(a1, 0xD000000000000034, 0x800000024166DC20, &qword_268D00CD8, &qword_268D00CE0);
}

uint64_t sub_241492B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v20[-v13];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v16 = sub_241631D38();
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
  *a4 = v16;
  *a5 = v18;
  return result;
}

uint64_t sub_241492D58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24162B788();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)(v3 + qword_268D24160);
  v10[1] = 0;
  v10[2] = 0;
  void *v10 = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + qword_268D00D18) = MEMORY[0x263F8EE88];
  uint64_t v11 = v3 + qword_268D24150;
  uint64_t v12 = sub_24162E918();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  *(void *)(v3 + qword_268D24158) = a2;
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  swift_retain();
  sub_241632E78();
  swift_bridgeObjectRelease();
  strcpy((char *)v16, "MutableArray<");
  HIWORD(v16[1]) = -4864;
  sub_24162B778();
  sub_24162B738();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  uint64_t v14 = sub_24162D718();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  return v14;
}

void sub_241492F9C()
{
  if (!qword_268CFB510)
  {
    sub_2411C8460(255, (unint64_t *)&qword_268D00FB0);
    unint64_t v0 = sub_2416331E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFB510);
    }
  }
}

void sub_241493008()
{
  if (!qword_268D00D38)
  {
    sub_2414930D4();
    sub_2411B9D00(255, (unint64_t *)&qword_26B0130B0);
    sub_241492AC0(&qword_268D00D48, (void (*)(uint64_t))sub_2414930D4);
    sub_24126BA6C();
    unint64_t v0 = sub_24162FA38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00D38);
    }
  }
}

void sub_2414930D4()
{
  if (!qword_268D00D40)
  {
    sub_24162EE18();
    unint64_t v0 = sub_24162FA68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00D40);
    }
  }
}

uint64_t sub_24149313C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241493174()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2414931AC(uint64_t a1)
{
  return sub_241490E34(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_2414931B4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_241493200(uint64_t result)
{
  if (result)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    return _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return result;
}

uint64_t sub_24149324C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241492274(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), a2);
}

uint64_t sub_241493274()
{
  uint64_t v1 = sub_24162E918();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v7 + 8, v5);
}

void sub_241493330()
{
  uint64_t v1 = *(void *)(sub_24162E918() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void **)(v0 + v3);
  uint64_t v5 = *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_241491FA4(v0 + v2, v4, v5);
}

uint64_t sub_2414933C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void *sub_241493428@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (objc_class *)type metadata accessor for CycleTimelineCollectionViewLayoutAttributes();
  v8.receiver = v2;
  v8.super_class = v5;
  objc_msgSendSuper2(&v8, sel_copyWithZone_, a1);
  sub_241632CE8();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  *(void *)(v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_zoomLevel) = *(void *)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_zoomLevel];
  uint64_t result = memmove((void *)(v7+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration), &v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration], 0x98uLL);
  a2[3] = v5;
  *a2 = v7;
  return result;
}

id sub_24149354C(uint64_t a1)
{
  sub_2411F7884(a1, (uint64_t)&v23);
  if (!*((void *)&v24 + 1))
  {
    sub_2411E0320((uint64_t)&v23);
    return 0;
  }
  unint64_t v3 = (objc_class *)type metadata accessor for CycleTimelineCollectionViewLayoutAttributes();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(char **)&v21[0];
  if (*(double *)(*(void *)&v21[0]
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_zoomLevel) != *(double *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_zoomLevel])
    goto LABEL_8;
  v21[6] = *(_OWORD *)(*(void *)&v21[0]
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                     + 96);
  v21[7] = *(_OWORD *)(*(void *)&v21[0]
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                     + 112);
  v21[8] = *(_OWORD *)(*(void *)&v21[0]
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                     + 128);
  uint64_t v22 = *(void *)(*(void *)&v21[0]
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                  + 144);
  v21[2] = *(_OWORD *)(*(void *)&v21[0]
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                     + 32);
  v21[3] = *(_OWORD *)(*(void *)&v21[0]
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                     + 48);
  v21[4] = *(_OWORD *)(*(void *)&v21[0]
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                     + 64);
  v21[5] = *(_OWORD *)(*(void *)&v21[0]
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                     + 80);
  v21[0] = *(_OWORD *)(*(void *)&v21[0]
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration);
  v21[1] = *(_OWORD *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                        + 16];
  long long v5 = *(_OWORD *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                    + 112];
  long long v29 = *(_OWORD *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                     + 96];
  long long v30 = v5;
  long long v31 = *(_OWORD *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                     + 128];
  uint64_t v32 = *(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                     + 144];
  long long v6 = *(_OWORD *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                    + 48];
  long long v25 = *(_OWORD *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                     + 32];
  long long v26 = v6;
  long long v7 = *(_OWORD *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                    + 80];
  long long v27 = *(_OWORD *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                     + 64];
  long long v28 = v7;
  long long v8 = *(_OWORD *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration
                    + 16];
  long long v23 = *(_OWORD *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration];
  long long v24 = v8;
  if (!sub_24150F31C((double *)v21, (double *)&v23))
  {
LABEL_8:

    return 0;
  }
  sub_2411F7884(a1, (uint64_t)v19);
  uint64_t v9 = v20;
  if (v20)
  {
    uint64_t v10 = sub_2411B6854(v19, v20);
    uint64_t v11 = *(void *)(v9 - 8);
    __n128 v12 = MEMORY[0x270FA5388](v10);
    uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    uint64_t v15 = sub_241633208();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v19);
  }
  else
  {
    uint64_t v15 = 0;
  }
  v18.receiver = v1;
  v18.super_class = v3;
  id v16 = objc_msgSendSuper2(&v18, sel_isEqual_, v15);

  swift_unknownObjectRelease();
  return v16;
}

id sub_241493838()
{
  *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_zoomLevel] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43CycleTimelineCollectionViewLayoutAttributes_configuration];
  *uint64_t v1 = 0;
  *(_OWORD *)(v1 + 8) = xmmword_241645A10;
  *(_OWORD *)(v1 + 24) = xmmword_241645A20;
  *(_OWORD *)(v1 + 40) = xmmword_241645A30;
  *(_OWORD *)(v1 + 56) = xmmword_241645A40;
  *(_OWORD *)(v1 + 72) = xmmword_241645A50;
  *(_OWORD *)(v1 + 88) = xmmword_241645A60;
  *(_OWORD *)(v1 + 104) = xmmword_241645A70;
  *(_OWORD *)(v1 + 120) = xmmword_241645A80;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v1 + 136) = _Q0;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CycleTimelineCollectionViewLayoutAttributes();
  return objc_msgSendSuper2(&v8, sel_init);
}

id sub_241493914()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CycleTimelineCollectionViewLayoutAttributes();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CycleTimelineCollectionViewLayoutAttributes()
{
  return self;
}

uint64_t sub_24149396C(uint64_t a1)
{
  uint64_t v3 = sub_24162ED68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = (uint64_t)v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineCell_item;
  swift_beginAccess();
  sub_2411FA270(v10, (uint64_t)&v33);
  if (!*((void *)&v34 + 1))
  {
    sub_241299DB8((uint64_t)&v33);
    goto LABEL_9;
  }
  sub_2411E1530();
  type metadata accessor for PregnancyModeTimelineItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    uint64_t v35 = 0;
    long long v33 = 0u;
    long long v34 = 0u;
    swift_beginAccess();
    sub_2412309A4((uint64_t)&v33, v10);
    return swift_endAccess();
  }
  uint64_t v28 = v3;
  long long v29 = v9;
  long long v30 = v6;
  uint64_t v31 = v4;
  uint64_t v11 = v32;
  uint64_t v12 = a1;
  uint64_t v13 = *(void *)(v32 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v13 + 56);
  swift_unknownObjectRetain();
  id v27 = v1;
  v15(v1, &off_26F573F20, ObjectType, v13);
  swift_unknownObjectRelease();
  sub_2411FA270(v12, (uint64_t)&v33);
  if (*((void *)&v34 + 1))
  {
    uint64_t v16 = v11;
    if (swift_dynamicCast())
    {
      uint64_t v17 = v32 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineItem_viewModel;
      swift_beginAccess();
      uint64_t v18 = v31;
      id v19 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
      uint64_t v20 = v28;
      uint64_t v21 = v29;
      v19(v29, v17, v28);
      uint64_t v22 = v16 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineItem_viewModel;
      swift_beginAccess();
      long long v23 = v30;
      v19(v30, v22, v20);
      sub_241495108(&qword_268D00D90, MEMORY[0x263F45228]);
      LOBYTE(v22) = sub_241631C28();
      long long v24 = *(void (**)(char *, uint64_t))(v18 + 8);
      v24(v23, v20);
      v24(v21, v20);
      if ((v22 & 1) == 0) {
        objc_msgSend(v27, sel_setNeedsUpdateConfiguration);
      }
      swift_release();
      return swift_release();
    }
    else
    {
      return swift_release();
    }
  }
  else
  {
    swift_release();
    return sub_241299DB8((uint64_t)&v33);
  }
}

void (*sub_241493CD0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0xB8uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineCell_item;
  v3[21] = v1;
  v3[22] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  sub_2411FA270(v5, (uint64_t)v3);
  return sub_241493D54;
}

void sub_241493D54(uint64_t *a1, char a2)
{
  objc_super v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  uint64_t v4 = *a1 + 80;
  if (a2)
  {
    uint64_t v5 = v2[21] + v2[22];
    sub_2411FA270(*a1, v3);
    sub_2411FA270(v5, v4);
    swift_beginAccess();
    sub_2411FA3DC(v3, v5);
    swift_endAccess();
    sub_24149396C(v4);
    sub_241299DB8(v3);
    sub_241299DB8(v4);
    uint64_t v6 = (uint64_t)v2;
  }
  else
  {
    uint64_t v7 = v2[21] + v2[22];
    sub_2411FA270(v7, v3);
    swift_beginAccess();
    sub_2411FA3DC((uint64_t)v2, v7);
    swift_endAccess();
    sub_24149396C(v3);
    sub_241299DB8((uint64_t)v2);
    uint64_t v6 = v3;
  }
  sub_241299DB8(v6);

  free(v2);
}

char *sub_241493E64(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineCell_updateCurrentDayOperation] = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineCell_item];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  v28.receiver = v4;
  v28.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v28, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v11, sel_setAutomaticallyUpdatesContentConfiguration_, 0);
  objc_msgSend(v11, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  uint64_t v12 = qword_26B00F370;
  id v13 = v11;
  if (v12 != -1) {
    swift_once();
  }
  long long v23 = xmmword_26B017FC8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  uint64_t v14 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setAccessibilityIdentifier_, v14, v23);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = (char *)v13;
  swift_retain();
  sub_2416326A8();

  swift_release();
  sub_2411B7D14();
  uint64_t v16 = (void *)sub_2416325A8();
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v18 = objc_allocWithZone(MEMORY[0x263F0A9B0]);
  uint64_t v26 = sub_241494F14;
  uint64_t v27 = v17;
  *(void *)&long long v23 = MEMORY[0x263EF8330];
  *((void *)&v23 + 1) = 1107296256;
  long long v24 = sub_2411987F4;
  long long v25 = &unk_26F573F60;
  id v19 = _Block_copy(&v23);
  swift_retain();
  id v20 = objc_msgSend(v18, sel_initWithMode_clock_queue_delay_block_, 0, 1, v16, v19, 0.25);

  _Block_release(v19);
  swift_release();

  swift_release();
  uint64_t v21 = *(void **)&v15[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineCell_updateCurrentDayOperation];
  *(void *)&v15[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineCell_updateCurrentDayOperation] = v20;

  return v15;
}

void sub_241494148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24162F168();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241494F1C(0, (unint64_t *)&unk_268D000D0, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v30 - v10;
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x245621790](a3 + 16);
  if (!v12) {
    return;
  }
  id v13 = (void *)v12;
  uint64_t v30 = a2;
  uint64_t v31 = v5;
  MEMORY[0x270FA5388](v12);
  *(&v30 - 2) = v14;
  sub_241494F88();
  v32[3] = v15;
  v32[4] = sub_241495108(&qword_268D00DB8, (void (*)(uint64_t))sub_241494F88);
  sub_2411B6C70(v32);
  sub_241494F1C(0, &qword_268D00DA0, type metadata accessor for PregnancyModeTimelineView, MEMORY[0x263F8D8F0]);
  sub_241495038();
  id v16 = v13;
  sub_241630788();
  MEMORY[0x24561FB40](v32);

  uint64_t v17 = qword_26B0131F0;
  id v18 = v16;
  if (v17 != -1) {
    swift_once();
  }
  id v19 = (id)qword_26B0181A0;
  id v20 = (void *)sub_241631CC8();
  uint64_t v21 = self;
  id v22 = objc_msgSend(v21, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v20, v19, 0);

  if (!v22)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v23 = (id)qword_26B0181A0;
  long long v24 = (void *)sub_241631CC8();
  id v25 = objc_msgSend(v21, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v24, v23, 0);

  if (!v25)
  {
LABEL_12:
    __break(1u);
    return;
  }
  char v26 = sub_24162F0B8();
  sub_24162F128();
  if (v26) {
    uint64_t v27 = v25;
  }
  else {
    uint64_t v27 = v22;
  }
  id v28 = v27;
  sub_24162F118();
  uint64_t v29 = v31;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v8, v31);

  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v29);
  MEMORY[0x24561FB60](v11);
}

uint64_t sub_241494540@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for PregnancyModeTimelineView(0);
  uint64_t v5 = *((void *)v4 - 1);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162ED68();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)a1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineCell_item;
  swift_beginAccess();
  sub_2411FA270(v12, (uint64_t)v25);
  if (!v26)
  {
    sub_241299DB8((uint64_t)v25);
    goto LABEL_5;
  }
  sub_2411E1530();
  type metadata accessor for PregnancyModeTimelineItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    uint64_t v22 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v5 + 56))(a2, v22, 1, v4);
  }
  uint64_t v13 = v24[1] + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineItem_viewModel;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
  objc_msgSend(a1, sel_bounds);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  swift_release();
  id v18 = (uint64_t *)&v7[v4[6]];
  uint64_t *v18 = swift_getKeyPath();
  id v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_241494F1C(0, &qword_268CFDD58, (uint64_t (*)(uint64_t))sub_241371C8C, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  id v20 = (uint64_t *)&v7[v4[7]];
  uint64_t *v20 = swift_getKeyPath();
  sub_241494F1C(0, &qword_268CFBA10, MEMORY[0x263F18D80], v19);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v11, v8);
  uint64_t v21 = &v7[v4[5]];
  *(void *)uint64_t v21 = v15;
  *((void *)v21 + 1) = v17;
  *((void *)v21 + 2) = 0;
  sub_241495160((uint64_t)v7, a2);
  uint64_t v22 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v5 + 56))(a2, v22, 1, v4);
}

uint64_t sub_24149486C(uint64_t a1)
{
  uint64_t v2 = sub_241631AC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x245621790](a1 + 16);
  if (!v7)
  {
    uint64_t v18 = 0;
    long long v16 = 0u;
    long long v17 = 0u;
    return sub_241299DB8((uint64_t)&v16);
  }
  uint64_t v8 = (void *)v7;
  uint64_t v9 = v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineCell_item;
  swift_beginAccess();
  sub_2411FA270(v9, (uint64_t)&v16);

  if (!*((void *)&v17 + 1)) {
    return sub_241299DB8((uint64_t)&v16);
  }
  sub_2411E1530();
  type metadata accessor for PregnancyModeTimelineItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v11 = *(void *)(v15[1] + 56);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
    sub_24124AE90((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_beginAccess();
    uint64_t v13 = (void *)MEMORY[0x245621790](v6);
    if (v13)
    {
      uint64_t v14 = v13;
      objc_msgSend(v13, sel_setNeedsUpdateConfiguration);
    }
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for PregnancyModeTimelineCell()
{
  return self;
}

uint64_t sub_241494B7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineCell_item;
  swift_beginAccess();
  return sub_2411FA270(v3, a1);
}

uint64_t sub_241494BD0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineCell_item;
  swift_beginAccess();
  sub_2411FA270(v3, (uint64_t)v5);
  swift_beginAccess();
  sub_2411FA3DC(a1, v3);
  swift_endAccess();
  sub_24149396C((uint64_t)v5);
  sub_241299DB8(a1);
  return sub_241299DB8((uint64_t)v5);
}

void (*sub_241494C6C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_241493CD0(v2);
  return sub_241299D70;
}

id sub_241494CC8()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (HKShowSensitiveLogItems())
  {
    sub_24162EF48();
    uint64_t v6 = sub_24162EF98();
    os_log_type_t v7 = sub_2416322B8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v14 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      v13[1] = v8 + 4;
      uint64_t v10 = sub_2416333E8();
      v13[2] = sub_2411B6898(v10, v11, &v14);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v6, v7, "[%s] Received current day update", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v9, -1, -1);
      MEMORY[0x245621640](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id result = *(id *)(v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineCell_updateCurrentDayOperation);
  if (result) {
    return objc_msgSend(result, sel_execute);
  }
  return result;
}

uint64_t sub_241494ED4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_241494F0C(uint64_t a1, uint64_t a2)
{
  sub_241494148(a1, a2, v2);
}

uint64_t sub_241494F14()
{
  return sub_24149486C(v0);
}

void sub_241494F1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241494F80@<X0>(uint64_t a1@<X8>)
{
  return sub_241494540(*(void **)(v1 + 16), a1);
}

void sub_241494F88()
{
  if (!qword_268D00D98)
  {
    sub_241494F1C(255, &qword_268D00DA0, type metadata accessor for PregnancyModeTimelineView, MEMORY[0x263F8D8F0]);
    sub_241495038();
    unint64_t v0 = sub_241630798();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00D98);
    }
  }
}

unint64_t sub_241495038()
{
  unint64_t result = qword_268D00DA8;
  if (!qword_268D00DA8)
  {
    sub_241494F1C(255, &qword_268D00DA0, type metadata accessor for PregnancyModeTimelineView, MEMORY[0x263F8D8F0]);
    sub_241495108(&qword_268D00DB0, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00DA8);
  }
  return result;
}

uint64_t sub_241495108(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241495160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PregnancyModeTimelineView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2414951C4(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)MEMORY[0x245620370](v8, v4);
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_241632F18();
          sub_241632F48();
          unint64_t v4 = v15;
          sub_241632F58();
          sub_241632F28();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_241633068();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_241495370(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000017;
  unint64_t v3 = 0x80000002416561C0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000017;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000015;
      uint64_t v6 = "openAddPeriodCalendar";
      goto LABEL_7;
    case 2:
      unint64_t v5 = 0x6F4E646F69726570;
      unint64_t v3 = 0xEE006465646E4574;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000010;
      uint64_t v6 = "periodNotStarted";
      goto LABEL_7;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x7373696D736964;
      break;
    case 5:
      uint64_t v6 = "openPregnancyOnboarding";
LABEL_7:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000002416561C0;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000015;
      unint64_t v8 = "openAddPeriodCalendar";
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0x6F4E646F69726570;
      unint64_t v7 = 0xEE006465646E4574;
      break;
    case 3:
      unint64_t v2 = 0xD000000000000010;
      unint64_t v8 = "periodNotStarted";
      goto LABEL_14;
    case 4:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v2 = 0x7373696D736964;
      break;
    case 5:
      unint64_t v8 = "openPregnancyOnboarding";
LABEL_14:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_24149554C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC0000006E6F6974;
  uint64_t v3 = 0x6163696669746F6ELL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x547972616D6D7573;
    }
    else {
      uint64_t v5 = 0x656C69546D6F6F72;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEB00000000656C69;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6163696669746F6ELL;
  unint64_t v6 = 0xEC0000006E6F6974;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x547972616D6D7573;
    }
    else {
      uint64_t v3 = 0x656C69546D6F6F72;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEB00000000656C69;
    }
    else {
      unint64_t v2 = 0xE800000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_241495680(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x636E616E67657270;
    }
    else {
      uint64_t v3 = 0x746144726568746FLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000079;
    }
    else {
      unint64_t v4 = 0xE900000000000061;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x636E616E67657270;
      }
      else {
        uint64_t v6 = 0x746144726568746FLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000079;
      }
      else {
        unint64_t v7 = 0xE900000000000061;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x676E696465656C62;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x676E696465656C62)
  {
LABEL_21:
    char v8 = sub_241633218();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24149579C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6C61636974726576;
  }
  else {
    uint64_t v3 = 0x746E6F7A69726F68;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000006C61;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6C61636974726576;
  }
  else {
    uint64_t v5 = 0x746E6F7A69726F68;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xEA00000000006C61;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_241495848(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x6765725074736150;
  }
  else {
    unint64_t v3 = 0xD000000000000010;
  }
  if (v2) {
    unint64_t v4 = 0x8000000241656470;
  }
  else {
    unint64_t v4 = 0xED000079636E616ELL;
  }
  if (a2) {
    unint64_t v5 = 0x6765725074736150;
  }
  else {
    unint64_t v5 = 0xD000000000000010;
  }
  if (a2) {
    unint64_t v6 = 0xED000079636E616ELL;
  }
  else {
    unint64_t v6 = 0x8000000241656470;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_241495900(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000011;
  }
  else {
    unint64_t v3 = 0x547972616D6D7573;
  }
  if (v2) {
    unint64_t v4 = 0xEB00000000656C69;
  }
  else {
    unint64_t v4 = 0x8000000241655F40;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000011;
  }
  else {
    unint64_t v5 = 0x547972616D6D7573;
  }
  if (a2) {
    unint64_t v6 = 0x8000000241655F40;
  }
  else {
    unint64_t v6 = 0xEB00000000656C69;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2414959B4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA0000000000776FLL;
  unint64_t v3 = 0x6C4668636E75616CLL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C4668636E75616CLL;
  unint64_t v6 = 0xEA0000000000776FLL;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x547373696D736964;
      unint64_t v6 = 0xEB00000000656C69;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x74696445646964;
      break;
    case 3:
      unint64_t v5 = 0x74656C6544646964;
      unint64_t v6 = 0xE900000000000065;
      break;
    case 4:
      unint64_t v6 = 0x8000000241655FE0;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x64657070696B73;
      break;
    case 6:
      unint64_t v5 = 0x656C6C65636E6163;
      goto LABEL_10;
    case 7:
      unint64_t v5 = 0x6E4F646441646964;
      unint64_t v6 = 0xEF65726F4D724F65;
      break;
    case 8:
      unint64_t v5 = 0x6441746F4E646964;
LABEL_10:
      unint64_t v6 = 0xE900000000000064;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x547373696D736964;
      unint64_t v2 = 0xEB00000000656C69;
      break;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      unint64_t v3 = 0x74696445646964;
      break;
    case 3:
      unint64_t v3 = 0x74656C6544646964;
      unint64_t v2 = 0xE900000000000065;
      break;
    case 4:
      unint64_t v2 = 0x8000000241655FE0;
      unint64_t v3 = 0xD000000000000010;
      break;
    case 5:
      unint64_t v2 = 0xE700000000000000;
      unint64_t v3 = 0x64657070696B73;
      break;
    case 6:
      unint64_t v3 = 0x656C6C65636E6163;
      goto LABEL_20;
    case 7:
      unint64_t v3 = 0x6E4F646441646964;
      unint64_t v2 = 0xEF65726F4D724F65;
      break;
    case 8:
      unint64_t v3 = 0x6441746F4E646964;
LABEL_20:
      unint64_t v2 = 0xE900000000000064;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v7 = 1;
  }
  else {
    char v7 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_241495C94(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0x8000000241655F60;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000019;
    }
    else {
      unint64_t v5 = 0x656C637943646461;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000241655F80;
    }
    else {
      unint64_t v6 = 0xEF73726F74636146;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000012;
  unint64_t v6 = 0x8000000241655F60;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0xD000000000000019;
    }
    else {
      unint64_t v2 = 0x656C637943646461;
    }
    if (v7 == 1) {
      unint64_t v3 = 0x8000000241655F80;
    }
    else {
      unint64_t v3 = 0xEF73726F74636146;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_241495DB4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x676F4C656C637963;
  }
  else {
    unint64_t v3 = 0xD000000000000010;
  }
  if (v2) {
    unint64_t v4 = 0x8000000241656250;
  }
  else {
    unint64_t v4 = 0xEB00000000534F49;
  }
  if (a2) {
    unint64_t v5 = 0x676F4C656C637963;
  }
  else {
    unint64_t v5 = 0xD000000000000010;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000534F49;
  }
  else {
    unint64_t v6 = 0x8000000241656250;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_241495E68(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE90000000000006ELL;
  uint64_t v3 = 0x6F6974617463616CLL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x636E616E67657270;
    }
    else {
      uint64_t v5 = 0x65636172746E6F63;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE900000000000079;
    }
    else {
      unint64_t v6 = 0xED00006576697470;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6F6974617463616CLL;
  unint64_t v6 = 0xE90000000000006ELL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x636E616E67657270;
    }
    else {
      uint64_t v3 = 0x65636172746E6F63;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE900000000000079;
    }
    else {
      unint64_t v2 = 0xED00006576697470;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_241495F9C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x57656C6974726566;
  }
  else {
    uint64_t v3 = 0x61757274736E656DLL;
  }
  if (v2) {
    unint64_t v4 = 0xEC0000006E6F6974;
  }
  else {
    unint64_t v4 = 0xED0000776F646E69;
  }
  if (a2) {
    uint64_t v5 = 0x57656C6974726566;
  }
  else {
    uint64_t v5 = 0x61757274736E656DLL;
  }
  if (a2) {
    unint64_t v6 = 0xED0000776F646E69;
  }
  else {
    unint64_t v6 = 0xEC0000006E6F6974;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_241496058(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x8000000241656490;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000012;
      unint64_t v6 = "deviationDetection";
      goto LABEL_6;
    case 2:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v6 = "periodNotifications";
      goto LABEL_6;
    case 3:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v6 = "fertileWindowEstimates";
      goto LABEL_6;
    case 4:
      unint64_t v5 = 0xD00000000000001ALL;
      unint64_t v6 = "fertileWindowNotifications";
LABEL_6:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 5:
      unint64_t v5 = 0x7461527472616568;
      unint64_t v3 = 0xED00006174614465;
      break;
    case 6:
      char v7 = "wristTemperatureData";
      goto LABEL_11;
    case 7:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x676F4C656C637963;
      break;
    case 8:
      char v7 = "periodAndCycleLength";
LABEL_11:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000014;
      break;
    default:
      break;
  }
  unint64_t v8 = 0x8000000241656490;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000012;
      char v9 = "deviationDetection";
      goto LABEL_17;
    case 2:
      unint64_t v2 = 0xD000000000000013;
      char v9 = "periodNotifications";
      goto LABEL_17;
    case 3:
      unint64_t v2 = 0xD000000000000016;
      char v9 = "fertileWindowEstimates";
      goto LABEL_17;
    case 4:
      unint64_t v2 = 0xD00000000000001ALL;
      char v9 = "fertileWindowNotifications";
LABEL_17:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      break;
    case 5:
      unint64_t v2 = 0x7461527472616568;
      unint64_t v8 = 0xED00006174614465;
      break;
    case 6:
      uint64_t v10 = "wristTemperatureData";
      goto LABEL_22;
    case 7:
      unint64_t v8 = 0xE800000000000000;
      unint64_t v2 = 0x676F4C656C637963;
      break;
    case 8:
      uint64_t v10 = "periodAndCycleLength";
LABEL_22:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000014;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v8) {
    char v11 = 1;
  }
  else {
    char v11 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_2414962C8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6867696C68676968;
  unint64_t v3 = 0xEA00000000007374;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6867696C68676968;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6163696669746F6ELL;
      unint64_t v3 = 0xEC0000006E6F6974;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x686372616573;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x7972616D6D7573;
      break;
    case 4:
      uint64_t v5 = 0x696472616F626E6FLL;
      unint64_t v3 = 0xEA0000000000676ELL;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1936746868;
      break;
    case 6:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x72616265646973;
      break;
    case 7:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x656C69666F7270;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xEA00000000007374;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEC0000006E6F6974;
      if (v5 == 0x6163696669746F6ELL) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x686372616573) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x7972616D6D7573) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xEA0000000000676ELL;
      if (v5 != 0x696472616F626E6FLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1936746868) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x72616265646973;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x656C69666F7270) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_241633218();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_24149655C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v3 = 0xD000000000000014;
  }
  if (v2) {
    unint64_t v4 = 0x8000000241656020;
  }
  else {
    unint64_t v4 = 0x8000000241656040;
  }
  if (a2) {
    unint64_t v5 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v5 = 0xD000000000000014;
  }
  if (a2) {
    unint64_t v6 = 0x8000000241656040;
  }
  else {
    unint64_t v6 = 0x8000000241656020;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_241633218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_241496608(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v18 = sub_24162B788();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    if (!v7) {
      return v8;
    }
    uint64_t v19 = MEMORY[0x263F8EE78];
    uint64_t result = sub_24149E25C(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0;
    uint64_t v8 = v19;
    v16[1] = v2;
    unint64_t v17 = a1 & 0xC000000000000001;
    unint64_t v11 = a1;
    while (v7 != v10)
    {
      if (v17) {
        id v12 = (id)MEMORY[0x245620370](v10, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v10 + 32);
      }
      char v13 = v12;
      id v14 = objc_msgSend(v12, sel_UUID);
      sub_24162B768();

      uint64_t v19 = v8;
      unint64_t v2 = *(void *)(v8 + 16);
      unint64_t v15 = *(void *)(v8 + 24);
      if (v2 >= v15 >> 1)
      {
        sub_24149E25C(v15 > 1, v2 + 1, 1);
        uint64_t v8 = v19;
      }
      ++v10;
      *(void *)(v8 + 16) = v2 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v2, v6, v18);
      a1 = v11;
      if (v7 == v10) {
        return v8;
      }
    }
    __break(1u);
LABEL_15:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_241496830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241632028();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_241632018();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_2414AEF90(a1, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_241631FC8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2414969F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241632028();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_241632018();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_2414AEF90(a1, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_241631FC8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_2414AFD68(0, &qword_268D01140, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8D8F0]);
  return swift_task_create();
}

uint64_t sub_241496BDC(unint64_t a1)
{
  return sub_241496E80(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_2414AAC3C, (unint64_t *)&qword_268CFB1B0, (unint64_t *)&qword_26B012390, 0x263F0A150);
}

uint64_t sub_241496C0C(uint64_t a1)
{
  return sub_241497454(a1, (uint64_t (*)(void))sub_24158B8F8, MEMORY[0x263F07490]);
}

uint64_t sub_241496C38(uint64_t a1)
{
  return sub_241497858(a1, (uint64_t (*)(void))sub_2411BB0F4, MEMORY[0x263F45630]);
}

uint64_t sub_241496C64(unint64_t a1)
{
  return sub_24149762C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_2414AAE78);
}

uint64_t sub_241496C7C(uint64_t a1)
{
  return sub_241497104(a1, (uint64_t (*)(void))sub_24158B988, (unint64_t *)&qword_268D00EE0);
}

uint64_t sub_241496CA4(uint64_t a1)
{
  return sub_241497454(a1, (uint64_t (*)(void))sub_24158BF8C, (uint64_t (*)(void))type metadata accessor for Section);
}

uint64_t sub_241496CD0(uint64_t a1)
{
  return sub_241497858(a1, (uint64_t (*)(void))sub_24158C0FC, (uint64_t (*)(void))sub_24143FFB8);
}

uint64_t sub_241496CFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_24158BCCC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_241496E50(unint64_t a1)
{
  return sub_241496E80(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_2414AB2F0, &qword_268D010F8, (unint64_t *)&qword_268D01100, 0x263F825A0);
}

uint64_t sub_241496E80(unint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, unint64_t), unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  if (a1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v10 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v5 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v27 = sub_241633068();
    swift_bridgeObjectRelease();
    uint64_t v12 = v27 + v10;
    if (!__OFADD__(v27, v10)) {
      goto LABEL_5;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v12 = v11 + v10;
  if (__OFADD__(v11, v10)) {
    goto LABEL_26;
  }
LABEL_5:
  unint64_t v13 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v5 = v13;
  uint64_t v15 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v13 & 0x8000000000000000) == 0
    && (v13 & 0x4000000000000000) == 0)
  {
    uint64_t v16 = v13 & 0xFFFFFFFFFFFFFF8;
    if (v12 <= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v15 = 1;
  }
  if (v13 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v17 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v17 <= v12) {
    uint64_t v17 = v12;
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v18 = MEMORY[0x245620380](v15, v17, 1, v13);
  swift_bridgeObjectRelease();
  *int64_t v5 = v18;
  uint64_t v16 = v18 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
  uint64_t v19 = *(void *)(v16 + 16);
  uint64_t v20 = (*(void *)(v16 + 24) >> 1) - v19;
  uint64_t result = a2(v16 + 8 * v19 + 32, v20, a1);
  if (v22 < v10)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    sub_24149D024(0, a3, a4, a5, MEMORY[0x263F8D488]);
    goto LABEL_20;
  }
  uint64_t v23 = v22;
  if (v22 >= 1)
  {
    uint64_t v24 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v25 = __OFADD__(v24, v22);
    uint64_t v26 = v24 + v22;
    if (v25)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v26;
  }
  swift_bridgeObjectRelease();
  if (v23 == v20) {
    goto LABEL_28;
  }
LABEL_20:

  return sub_241631F48();
}

uint64_t sub_2414970AC(unint64_t a1)
{
  return sub_241496E80(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_2414AB52C, (unint64_t *)&unk_268D01090, (unint64_t *)&qword_26B012130, 0x263F08938);
}

uint64_t sub_2414970DC(uint64_t a1)
{
  return sub_241497104(a1, (uint64_t (*)(void))sub_24158C34C, (unint64_t *)&qword_268CFF090);
}

uint64_t sub_241497104(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3)
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v5 = a2();
  unint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  if ((*(void *)(v5 + 24) >> 1) - v11 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v12 = v5 + 40 * v11 + 32;
  if (a1 + 32 < v12 + 40 * v10 && v12 < a1 + 32 + 40 * v10) {
    goto LABEL_21;
  }
  sub_2411C8460(0, a3);
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v14 = *(void *)(v5 + 16);
  BOOL v15 = __OFADD__(v14, v10);
  uint64_t v16 = v14 + v10;
  if (!v15)
  {
    *(void *)(v5 + 16) = v16;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149729C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_24158C3C4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  sub_2414AF444();
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414973FC(uint64_t a1)
{
  return sub_241497858(a1, (uint64_t (*)(void))sub_24158C528, type metadata accessor for InternalLiveOnRequirement);
}

uint64_t sub_241497428(uint64_t a1)
{
  return sub_241497454(a1, (uint64_t (*)(void))sub_24158C570, type metadata accessor for InternalLiveOnDevicesModel.Device);
}

uint64_t sub_241497454(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v5 = a2();
  unint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v12 = (*(void *)(v5 + 24) >> 1) - v11;
  uint64_t v13 = *(void *)(a3(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = v5 + v15 + v14 * v11;
  unint64_t v17 = a1 + v15;
  uint64_t v18 = v14 * v10;
  unint64_t v19 = v16 + v18;
  unint64_t v20 = v17 + v18;
  if (v17 < v19 && v16 < v20) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v22 = *(void *)(v5 + 16);
  BOOL v23 = __OFADD__(v22, v10);
  uint64_t v24 = v22 + v10;
  if (!v23)
  {
    *(void *)(v5 + 16) = v24;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_241497614(unint64_t a1)
{
  return sub_24149762C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_2414AB768);
}

uint64_t sub_24149762C(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v5 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = sub_241633068();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t v6 = MEMORY[0x245620380](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v11 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_241631F48();
}

uint64_t sub_241497800(uint64_t a1)
{
  return sub_241497858(a1, (uint64_t (*)(void))sub_24158C6E8, MEMORY[0x263F44068]);
}

uint64_t sub_24149782C(uint64_t a1)
{
  return sub_241497858(a1, (uint64_t (*)(void))sub_2411BDE2C, MEMORY[0x263F45738]);
}

uint64_t sub_241497858(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

void sub_241497A14(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5) {
      int64_t v9 = v4 + v2;
    }
    else {
      int64_t v9 = v4;
    }
    unint64_t v3 = sub_24158CD9C(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    int64_t v8 = v3[3] >> 1;
  }
  uint64_t v10 = v3[2];
  uint64_t v11 = v8 - v10;
  if (!*(void *)(a1 + 16))
  {
    if (!v2) {
      goto LABEL_19;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v11 < v2)
  {
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v12 = (unint64_t)&v3[2 * v10 + 4];
  if (a1 + 32 < v12 + 16 * v2 && v12 < a1 + 32 + 16 * v2) {
    goto LABEL_26;
  }
  sub_2414AF3CC();
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    if (v2 != v11)
    {
LABEL_20:
      *(void *)uint64_t v1 = v3;
      return;
    }
LABEL_23:
    sub_2414AFD04(0, &qword_268D01050, (uint64_t (*)(uint64_t))sub_2414AF3CC, MEMORY[0x263F8D488]);
    goto LABEL_20;
  }
  uint64_t v14 = v3[2];
  BOOL v15 = __OFADD__(v14, v2);
  uint64_t v16 = v14 + v2;
  if (!v15)
  {
    v3[2] = v16;
    goto LABEL_19;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  sub_2416330E8();
  __break(1u);
}

uint64_t sub_241497BC0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  unint64_t v3 = sub_24158D0A8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  sub_2411C8460(0, (unint64_t *)&qword_268D00FB0);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_241497D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v5 = v4;
  if (v3 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = sub_241633218();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    uint64_t v14 = v13;
    if (v12 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = sub_241633218();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_241497E98(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_241497EFC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    goto LABEL_5;
  }
  if ((((result & 1) == 0) ^ *(unsigned __int8 *)(a2 + 32))) {
    return 1;
  }
  if (v2 != 1)
  {
    uint64_t v4 = 33;
    while (1)
    {
      uint64_t v5 = v4 - 31;
      if (__OFADD__(v4 - 32, 1)) {
        break;
      }
      char v3 = ((result & 1) == 0) ^ *(unsigned char *)(a2 + v4);
      if ((v3 & 1) == 0)
      {
        ++v4;
        if (v5 != v2) {
          continue;
        }
      }
      return v3 & 1;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    char v3 = 0;
    return v3 & 1;
  }
  return result;
}

uint64_t sub_241497F74(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_241633218();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_241633218() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24149803C(void *a1)
{
  sub_241633308();
  id v2 = a1;
  sub_2416329C8();

  sub_241631DC8();
  swift_bridgeObjectRelease();
  return sub_241633358();
}

uint64_t sub_2414980E8(char *a1, char *a2)
{
  return sub_241495848(*a1, *a2);
}

uint64_t sub_2414980F4()
{
  return sub_241633358();
}

uint64_t sub_241498188()
{
  sub_241631DC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241498208()
{
  return sub_241633358();
}

uint64_t sub_241498298@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_241633108();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_2414982F8(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000010;
  if (*v1) {
    unint64_t v2 = 0x6765725074736150;
  }
  unint64_t v3 = 0x8000000241656470;
  if (*v1) {
    unint64_t v3 = 0xED000079636E616ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_241498348(uint64_t a1, uint64_t a2)
{
  return sub_2414AC578(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_241498364()
{
  return sub_24149803C(*v0);
}

uint64_t sub_241498370()
{
  id v1 = *v0;
  sub_2416329C8();

  sub_241631DC8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241498418()
{
  id v1 = *v0;
  sub_241633308();
  id v2 = v1;
  sub_2416329C8();

  sub_241631DC8();
  swift_bridgeObjectRelease();
  return sub_241633358();
}

uint64_t sub_2414984C8()
{
  unint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_241633308();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24139F464((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24139F464((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_241633358();
}

uint64_t sub_24149853C(uint64_t a1)
{
  unint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24139F464(a1, v4);
  swift_bridgeObjectRelease();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24139F464(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2414985AC()
{
  unint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_241633308();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24139F464((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24139F464((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_241633358();
}

void sub_24149861C()
{
  uint64_t v22 = *v0;
  uint64_t v1 = sub_24162EFA8();
  uint64_t v23 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414AE6E4();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = v0[5];
  if (v9 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v10 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v11 = v0[6];
  if (v11 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v21 = sub_241633068();
    swift_bridgeObjectRelease();
    uint64_t v13 = v10 + v21;
    if (!__OFADD__(v10, v21)) {
      goto LABEL_5;
    }
LABEL_15:
    __break(1u);
    return;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v13 = v10 + v12;
  if (__OFADD__(v10, v12)) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v14 = (unsigned int *)MEMORY[0x263F43E40];
  if (v13 <= 0) {
    uint64_t v14 = (unsigned int *)MEMORY[0x263F43E38];
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *v14, v5);
  sub_24162D038();
  if (HKShowSensitiveLogItems())
  {
    sub_24162EF48();
    uint64_t v15 = sub_24162EF98();
    os_log_type_t v16 = sub_2416322E8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v25 = v18;
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v19 = sub_2416333E8();
      uint64_t v24 = sub_2411B6898(v19, v20, &v25);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2048;
      uint64_t v24 = v13;
      sub_241632C28();
      _os_log_impl(&dword_24118E000, v15, v16, "[%s] Updating pregnancy tile section visibility with pregnancy count: %ld", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v18, -1, -1);
      MEMORY[0x245621640](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  }
}

uint64_t sub_24149898C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v3 + 40);
  uint64_t v7 = *(void *)(v3 + 48);
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (sub_24149B574(v6, a1))
  {
    char v8 = sub_24149B574(v7, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_retain();
  unint64_t v10 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v11 = sub_2414AC6A8(v10, v3);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  unint64_t v12 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v13 = sub_2414ACA48(v12, v3);
  swift_bridgeObjectRelease();
  swift_release();
  sub_24149AD10(v11, 0, 2);
  swift_bridgeObjectRelease();
  sub_24162CFE8();
  sub_24162D808();
  uint64_t v14 = (void *)sub_24162D118();
  swift_release();
  char v15 = sub_241497F74(0xD000000000000010, 0x8000000241656470, v14);
  swift_bridgeObjectRelease();
  if (v15) {
    int v16 = 0;
  }
  else {
    int v16 = 2;
  }
  sub_24149AD10(v13, 1, v16);
  swift_bridgeObjectRelease();
  sub_24149861C();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_241498B7C()
{
  uint64_t v1 = *v0;
  sub_2414AFD04(0, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - v3;
  if (v0[7])
  {
    swift_retain();
    sub_241632038();
    swift_release();
  }
  uint64_t v5 = sub_241632028();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = (void *)v0[8];
  char v8 = (void *)swift_allocObject();
  _OWORD v8[2] = 0;
  v8[3] = 0;
  v8[4] = v7;
  v8[5] = v6;
  v8[6] = v1;
  id v9 = v7;
  v0[7] = sub_241496830((uint64_t)v4, (uint64_t)&unk_268D00DE0, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_241498D3C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_241498D8C()
{
  if (*(void *)(v0 + 56))
  {
    swift_retain();
    sub_241632038();
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_241498E1C()
{
  sub_241498D8C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AllPregnanciesDataSource()
{
  return self;
}

ValueMetadata *type metadata accessor for AllPregnanciesDataSource.DisplayConfiguration()
{
  return &type metadata for AllPregnanciesDataSource.DisplayConfiguration;
}

uint64_t initializeBufferWithCopyOfBuffer for AllPregnanciesDataSource.ItemDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for AllPregnanciesDataSource.ItemDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for AllPregnanciesDataSource.ItemDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AllPregnanciesDataSource.ItemDisplayConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AllPregnanciesDataSource.ItemDisplayConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AllPregnanciesDataSource.ItemDisplayConfiguration()
{
  return &type metadata for AllPregnanciesDataSource.ItemDisplayConfiguration;
}

unint64_t sub_241498FE4()
{
  unint64_t result = qword_268D00DC0;
  if (!qword_268D00DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00DC0);
  }
  return result;
}

unint64_t sub_24149903C()
{
  unint64_t result = qword_268D00DC8;
  if (!qword_268D00DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00DC8);
  }
  return result;
}

uint64_t sub_241499090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F09020];
  sub_24149D024(0, &qword_268CFCDD8, (unint64_t *)&qword_26B012390, 0x263F0A150, MEMORY[0x263F09020]);
  v6[13] = v8;
  v6[14] = *(void *)(v8 - 8);
  v6[15] = swift_task_alloc();
  sub_24149D08C(0, (unint64_t *)&qword_268CFCDE0, &qword_268CFCDD8, v7, MEMORY[0x263F8D8F0]);
  v6[16] = swift_task_alloc();
  sub_24149D024(0, (unint64_t *)&unk_268D00E00, (unint64_t *)&qword_26B012390, 0x263F0A150, MEMORY[0x263F09038]);
  v6[17] = v9;
  v6[18] = *(void *)(v9 - 8);
  v6[19] = swift_task_alloc();
  sub_24149D024(0, &qword_268CFCDE8, (unint64_t *)&qword_26B012390, 0x263F0A150, MEMORY[0x263F09028]);
  v6[20] = v10;
  v6[21] = *(void *)(v10 - 8);
  v6[22] = swift_task_alloc();
  sub_24149D024(0, (unint64_t *)&unk_268D00E10, (unint64_t *)&qword_26B012390, 0x263F0A150, MEMORY[0x263F09048]);
  v6[23] = v11;
  v6[24] = *(void *)(v11 - 8);
  v6[25] = swift_task_alloc();
  uint64_t v12 = sub_24162EFA8();
  v6[26] = v12;
  v6[27] = *(void *)(v12 - 8);
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2414993D4, 0, 0);
}

uint64_t sub_2414993D4()
{
  uint64_t v26 = v0;
  sub_24162EF48();
  uint64_t v1 = sub_24162EF98();
  os_log_type_t v2 = sub_2416322E8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v24 = v0[29];
    uint64_t v4 = v0[26];
    uint64_t v3 = v0[27];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v25 = v6;
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v7 = sub_2416333E8();
    v0[9] = sub_2411B6898(v7, v8, &v25);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v1, v2, "[%{public}s] Starting query", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v6, -1, -1);
    MEMORY[0x245621640](v5, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v9(v24, v4);
  }
  else
  {
    uint64_t v10 = v0[29];
    uint64_t v11 = v0[26];
    uint64_t v12 = v0[27];

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v9(v10, v11);
  }
  v0[30] = v9;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F08FD0];
  sub_24149D08C(0, &qword_268CFF170, (unint64_t *)&qword_268CFCD40, MEMORY[0x263F08FD0], MEMORY[0x263F8E0F8]);
  sub_24149D024(0, (unint64_t *)&qword_268CFCD40, (unint64_t *)&qword_26B012390, 0x263F0A150, v13);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241637EE0;
  sub_2411B9D00(0, (unint64_t *)&qword_26B0125F0);
  id v14 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_pregnancyType);
  if (v14)
  {
    uint64_t v17 = v14;
    uint64_t v19 = v0[18];
    uint64_t v18 = v0[19];
    uint64_t v20 = v0[17];
    sub_2411B9D00(0, (unint64_t *)&qword_26B0123B0);
    sub_241631848();

    sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
    sub_2416318F8();
    sub_241631948();
    sub_241631938();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_beginAccess();
    unint64_t v21 = sub_24149D108();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[31] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_2414997E4;
    uint64_t v15 = v0[20];
    id v14 = (id)v0[16];
    unint64_t v16 = v21;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA1E80](v14, v15, v16);
}

uint64_t sub_2414997E4()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_241499CD4;
  }
  else {
    os_log_type_t v2 = sub_2414998F8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2414998F8()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = v0[24];
    uint64_t v4 = v0[25];
    uint64_t v6 = v0[23];
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[15], v1, v2);
    uint64_t Strong = swift_weakLoadStrong();
    v0[33] = Strong;
    if (Strong)
    {
      v0[34] = sub_241631918();
      v0[35] = sub_241631928();
      sub_241632008();
      v0[36] = sub_241631FF8();
      uint64_t v11 = sub_241631FC8();
      return MEMORY[0x270FA2498](sub_241499B78, v11, v10);
    }
    else
    {
      (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
      unint64_t v12 = sub_24149D108();
      uint64_t v13 = (void *)swift_task_alloc();
      v0[31] = v13;
      void *v13 = v0;
      v13[1] = sub_2414997E4;
      uint64_t v14 = v0[20];
      uint64_t v15 = v0[16];
      return MEMORY[0x270FA1E80](v15, v14, v12);
    }
  }
}

uint64_t sub_241499B78()
{
  unint64_t v1 = *(void *)(v0 + 280);
  unint64_t v2 = *(void *)(v0 + 272);
  swift_release();
  sub_24149A09C(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA2498](sub_241499C10, 0, 0);
}

uint64_t sub_241499C10()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  unint64_t v1 = sub_24149D108();
  unint64_t v2 = (void *)swift_task_alloc();
  v0[31] = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_2414997E4;
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[16];
  return MEMORY[0x270FA1E80](v4, v3, v1);
}

uint64_t sub_241499CD4()
{
  v0[5] = v0[32];
  v0[37] = sub_2411C8460(0, (unint64_t *)&qword_26B012410);
  swift_willThrowTypedImpl();
  return MEMORY[0x270FA2498](sub_241499D74, 0, 0);
}

uint64_t sub_241499D74()
{
  uint64_t v30 = v0;
  unint64_t v1 = (void *)v0[32];
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  sub_24162EF48();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24162EF98();
  os_log_type_t v5 = sub_2416322C8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[32];
    uint64_t v24 = v0[26];
    uint64_t v25 = v0[28];
    uint64_t v7 = v0[24];
    uint64_t v27 = (void (*)(uint64_t, uint64_t))v0[30];
    uint64_t v28 = v0[25];
    uint64_t v26 = v0[23];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v29 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v10 = sub_2416333E8();
    v0[6] = sub_2411B6898(v10, v11, &v29);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[7] = v6;
    id v12 = v6;
    uint64_t v13 = sub_241631D48();
    v0[8] = sub_2411B6898(v13, v14, &v29);
    sub_241632C28();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24118E000, v4, v5, "[%{public}s] Error in fetching pregnancy samples: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245621640](v9, -1, -1);
    MEMORY[0x245621640](v8, -1, -1);

    v27(v25, v24);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v28, v26);
  }
  else
  {
    uint64_t v15 = (void *)v0[32];
    uint64_t v16 = (void (*)(uint64_t, uint64_t))v0[30];
    uint64_t v17 = v0[28];
    uint64_t v19 = v0[25];
    uint64_t v18 = v0[26];
    uint64_t v20 = v0[23];
    uint64_t v21 = v0[24];

    v16(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_24149A09C(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = (uint64_t)v2;
  v57[1] = *v2;
  uint64_t v6 = sub_24162B718();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)v57 - v11;
  uint64_t v62 = sub_24162EFA8();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v58 = (char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v57 - v15;
  int v17 = HKShowSensitiveLogItems();
  unint64_t v65 = a1;
  unint64_t v18 = a1 >> 62;
  unint64_t v63 = a2 >> 62;
  if (!v17) {
    goto LABEL_10;
  }
  unint64_t v66 = v7;
  sub_24162EF48();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_24162EF98();
  int v20 = sub_2416322E8();
  if (!os_log_type_enabled(v19, (os_log_type_t)v20))
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v62);
    goto LABEL_9;
  }
  LODWORD(v64) = v20;
  unint64_t v59 = a2;
  uint64_t v21 = swift_slowAlloc();
  v57[0] = swift_slowAlloc();
  v68[0] = v57[0];
  *(_DWORD *)uint64_t v21 = 136315650;
  uint64_t v22 = sub_2416333E8();
  uint64_t v67 = sub_2411B6898(v22, v23, v68);
  sub_241632C28();
  swift_bridgeObjectRelease();
  *(_WORD *)(v21 + 12) = 2048;
  if (v18) {
    goto LABEL_59;
  }
  uint64_t v24 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    uint64_t v67 = v24;
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2048;
    unint64_t v25 = v59;
    if (v63)
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v26 = sub_241633068();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v67 = v26;
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v19, (os_log_type_t)v64, "[%s] Received query result: %ld added, %ld deleted", (uint8_t *)v21, 0x20u);
    uint64_t v27 = v57[0];
    swift_arrayDestroy();
    MEMORY[0x245621640](v27, -1, -1);
    MEMORY[0x245621640](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v62);
    a2 = v25;
LABEL_9:
    uint64_t v7 = v66;
LABEL_10:
    uint64_t v16 = *(char **)(v3 + 40);
    unint64_t v28 = *(void *)(v3 + 48);
    unint64_t v69 = v28;
    id v70 = v16;
    v68[0] = MEMORY[0x263F8EE78];
    if (v18)
    {
      unint64_t v18 = v65;
      unint64_t v66 = v7;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v7 = v66;
      uint64_t v29 = sub_241633068();
    }
    else
    {
      unint64_t v18 = v65;
      uint64_t v29 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    }
    uint64_t v60 = v3;
    if (!v29)
    {
      swift_bridgeObjectRelease();
      unint64_t v41 = MEMORY[0x263F8EE78];
      sub_241496E80(MEMORY[0x263F8EE78], (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_2414AAC3C, (unint64_t *)&qword_268CFB1B0, (unint64_t *)&qword_26B012390, 0x263F0A150);
      goto LABEL_32;
    }
    uint64_t v64 = v29;
    if (v29 < 1) {
      break;
    }
    unint64_t v59 = a2;
    uint64_t v30 = 0;
    unint64_t v66 = v18 & 0xC000000000000001;
    uint64_t v31 = (void (**)(char *, uint64_t))(v7 + 8);
    do
    {
      if (v66) {
        id v32 = (id)MEMORY[0x245620370](v30, v18);
      }
      else {
        id v32 = *(id *)(v18 + 8 * v30 + 32);
      }
      long long v33 = v32;
      id v34 = objc_msgSend(v32, sel_endDate);
      sub_24162B6A8();

      sub_24162B5E8();
      LOBYTE(v34) = sub_24162B698();
      uint64_t v35 = *v31;
      (*v31)(v9, v6);
      v35(v12, v6);
      if (v34)
      {
        sub_241632F18();
        sub_241632F48();
        unint64_t v18 = v65;
        sub_241632F58();
        sub_241632F28();
      }
      else
      {
      }
      ++v30;
    }
    while (v64 != v30);
    swift_bridgeObjectRelease();
    sub_241496E80(v68[0], (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_2414AAC3C, (unint64_t *)&qword_268CFB1B0, (unint64_t *)&qword_26B012390, 0x263F0A150);
    v68[0] = MEMORY[0x263F8EE78];
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v36 = 0;
    uint64_t v37 = v64;
    do
    {
      if (v66) {
        id v38 = (id)MEMORY[0x245620370](v36, v18);
      }
      else {
        id v38 = *(id *)(v18 + 8 * v36 + 32);
      }
      uint64_t v39 = v38;
      id v40 = objc_msgSend(v38, sel_endDate);
      sub_24162B6A8();

      sub_24162B5E8();
      sub_2414AF83C((unint64_t *)&qword_268CFAD00, MEMORY[0x263F07490]);
      LOBYTE(v40) = sub_241631C28();
      v35(v9, v6);
      v35(v12, v6);
      if (v40)
      {
      }
      else
      {
        sub_241632F18();
        sub_241632F48();
        uint64_t v37 = v64;
        sub_241632F58();
        sub_241632F28();
      }
      ++v36;
      unint64_t v18 = v65;
    }
    while (v37 != v36);
    swift_bridgeObjectRelease();
    unint64_t v41 = v68[0];
    a2 = v59;
LABEL_32:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if ((v41 & 0x8000000000000000) != 0 || (unint64_t v42 = (void *)v41, (v41 & 0x4000000000000000) != 0))
    {
      unint64_t v42 = sub_24149D2B0(v41, (void (*)(void *, uint64_t, unint64_t))sub_2414AAC3C);
      swift_release();
    }
    v68[0] = (uint64_t)v42;
    uint64_t v3 = 0;
    sub_2414A8C74(v68);
    swift_release();
    sub_241496E80(v68[0], (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_2414AAC3C, (unint64_t *)&qword_268CFB1B0, (unint64_t *)&qword_26B012390, 0x263F0A150);
    if (v63)
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v56 = sub_241633068();
      swift_bridgeObjectRelease();
      if (!v56) {
        goto LABEL_41;
      }
    }
    else if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_41;
    }
    uint64_t v43 = sub_241496608(a2);
    unint64_t v28 = sub_2414AD210(v43);
    swift_bridgeObjectRelease();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = sub_2414AE0C8((unint64_t *)&v70, v28);
    swift_bridgeObjectRelease();
    uint64_t v16 = v70;
    if ((unint64_t)v70 >> 62) {
      goto LABEL_55;
    }
    uint64_t v21 = *(void *)(((unint64_t)v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21 < v7) {
      goto LABEL_56;
    }
LABEL_38:
    sub_2414ADC68(v7, v21);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v3 = sub_2414AE0C8(&v69, v28);
    swift_bridgeObjectRelease();
    uint64_t v16 = (char *)v69;
    if (v69 >> 62) {
      goto LABEL_57;
    }
    uint64_t v19 = *(NSObject **)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)v19 >= v3) {
      goto LABEL_40;
    }
LABEL_58:
    __break(1u);
LABEL_59:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v24 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_55:
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v21 = sub_241633068();
  swift_bridgeObjectRelease();
  if (v21 >= v7) {
    goto LABEL_38;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v19 = sub_241633068();
  swift_bridgeObjectRelease();
  if ((uint64_t)v19 < v3) {
    goto LABEL_58;
  }
LABEL_40:
  sub_2414ADC68(v3, (uint64_t)v19);
  swift_bridgeObjectRelease();
LABEL_41:
  if (HKShowSensitiveLogItems())
  {
    unint64_t v44 = v58;
    sub_24162EF48();
    uint64_t v45 = sub_24162EF98();
    os_log_type_t v46 = sub_2416322E8();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v68[0] = v48;
      *(_DWORD *)uint64_t v47 = 136315650;
      uint64_t v49 = sub_2416333E8();
      uint64_t v67 = sub_2411B6898(v49, v50, v68);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2048;
      swift_beginAccess();
      if ((unint64_t)v70 >> 62)
      {
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v51 = sub_241633068();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v51 = *(void *)(((unint64_t)v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v67 = v51;
      sub_241632C28();
      *(_WORD *)(v47 + 22) = 2048;
      swift_beginAccess();
      if (v69 >> 62)
      {
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v52 = sub_241633068();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v52 = *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v67 = v52;
      sub_241632C28();
      _os_log_impl(&dword_24118E000, v45, v46, "[%s] Setting display configuration with ongoing: %ld and past: %ld", (uint8_t *)v47, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v48, -1, -1);
      MEMORY[0x245621640](v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v62);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v62);
    }
  }
  swift_beginAccess();
  uint64_t v53 = (uint64_t)v70;
  swift_beginAccess();
  uint64_t v54 = v69;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24149898C(v53, v54);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24149AD10(uint64_t a1, char a2, int a3)
{
  HIDWORD(v14) = a3;
  uint64_t v5 = 0xD000000000000010;
  uint64_t v6 = sub_24162D678();
  uint64_t v15 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162CFE8();
  sub_24162D808();
  uint64_t v9 = (void *)sub_24162D118();
  swift_release();
  if (a2)
  {
    uint64_t v5 = 0x6765725074736150;
    uint64_t v10 = 0xED000079636E616ELL;
  }
  else
  {
    uint64_t v10 = 0x8000000241656470;
  }
  char v11 = sub_241497F74(v5, v10, v9);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16))
  {
    if ((v11 & 1) == 0) {
      return result;
    }
    sub_24162CFE8();
    sub_24162D6E8();
    goto LABEL_9;
  }
  if (v11)
  {
    sub_24162CFE8();
    sub_24162D768();
LABEL_9:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  int v13 = BYTE4(v14);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24162D668();
  sub_24162CFE8();
  if (v13 == 2)
  {
    sub_24162D7C8();
    swift_release();
  }
  else
  {
    sub_24162D7B8();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v8, v6);
}

uint64_t sub_24149AFC8(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24162EFA8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24162CCF8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  int v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411A3DF4(a1, (uint64_t)v28);
  sub_2411C8460(0, (unint64_t *)&qword_268CFF090);
  type metadata accessor for PregnancyItem();
  if (swift_dynamicCast())
  {
    uint64_t v14 = *(void **)(v3 + 64);
    id v15 = *(id *)(*(void *)&v26[0] + 32);
    id v16 = v14;
    sub_2416324B8();
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F43BD8], v10);
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_init);
    uint64_t v27 = 0;
    memset(v26, 0, sizeof(v26));
    unint64_t v18 = *(void **)(v3 + 72);
    type metadata accessor for PregnancyOffboardingCoordinator();
    swift_allocObject();
    swift_unknownObjectRetain();
    sub_241329788(v16, (uint64_t)v28, (uint64_t)v13, v17, (uint64_t)v26, v18, 0, 0, 0, 0, 0, 0);
    sub_241329278(a2, v15, 1, 0, 0);
    swift_release();

    return swift_release();
  }
  else
  {
    uint64_t result = HKShowSensitiveLogItems();
    if (result)
    {
      sub_24162EF48();
      int v20 = sub_24162EF98();
      os_log_type_t v21 = sub_2416322C8();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        v28[0] = v23;
        *(_DWORD *)uint64_t v22 = 136315138;
        uint64_t v24 = sub_2416333E8();
        *(void *)&v26[0] = sub_2411B6898(v24, v25, v28);
        sub_241632C28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v20, v21, "[%s] A valid item is needed to handle tap actions", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245621640](v23, -1, -1);
        MEMORY[0x245621640](v22, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  return result;
}

id sub_24149B3A4(uint64_t a1)
{
  return sub_2414AEA0C(a1);
}

uint64_t sub_24149B3BC()
{
  return sub_241632438();
}

uint64_t sub_24149B42C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24149B464()
{
  swift_unknownObjectRelease();

  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24149B4AC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_241201428;
  return sub_241499090(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_24149B574(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v6 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v22 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v6 == v22) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v6) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v5) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v9;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v6 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x245620370](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v5 = (void *)result;
  unint64_t v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v12 = (id)MEMORY[0x245620370](0, a2);
LABEL_22:
    int v13 = v12;
    sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
    char v14 = sub_2416329B8();

    if (v14)
    {
      uint64_t v15 = 1 - v6;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v6 = v15 + i == 5;
        if (v15 + i == 5) {
          return v6;
        }
        unint64_t v20 = i - 4;
        if (v23)
        {
          id v21 = (id)MEMORY[0x245620370](i - 4, a1);
          if (v2) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v20 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v21 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_24:
            id v17 = (id)MEMORY[0x245620370](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v20 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v17 = *(id *)(a2 + 8 * i);
LABEL_25:
        unint64_t v18 = v17;
        char v19 = sub_2416329B8();

        if ((v19 & 1) == 0) {
          return v6;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_24149B7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241631AC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414AFD04(0, (unint64_t *)&unk_26B00F1B0, MEMORY[0x263F090E8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v66 - v9;
  sub_241251F3C();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v85 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for CompactCalendarDayViewModel(0);
  uint64_t v14 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  id v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  char v19 = (char *)&v66 - v18;
  uint64_t v20 = type metadata accessor for CompactCalendarMonthViewModel(0);
  MEMORY[0x270FA5388](v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v26 = *(void *)(a1 + 16);
  if (v26 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v26 || a1 == a2) {
    return 1;
  }
  uint64_t v71 = v22;
  uint64_t v72 = v16;
  uint64_t v66 = v14;
  uint64_t v88 = v4;
  uint64_t v27 = 0;
  unint64_t v28 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)(v23 + 72);
  uint64_t v82 = v25;
  uint64_t v83 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v73 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  unint64_t v74 = v7;
  uint64_t v75 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v76 = v10;
  id v32 = (int *)v84;
  uint64_t v33 = (uint64_t)v85;
  uint64_t v34 = v25;
  uint64_t v35 = (char *)&v66 - v24;
  uint64_t v81 = (char *)&v66 - v24;
  uint64_t v69 = v29;
  uint64_t v70 = v26;
  uint64_t v68 = v30;
  uint64_t v67 = v31;
  while (1)
  {
    uint64_t v77 = v27;
    uint64_t v37 = v31 * v27;
    sub_2414AF094(v29 + v31 * v27, (uint64_t)v35, type metadata accessor for CompactCalendarMonthViewModel);
    sub_2414AF094(v30 + v37, v34, type metadata accessor for CompactCalendarMonthViewModel);
    char v38 = sub_24162B698();
    uint64_t v39 = (uint64_t)v72;
    id v40 = v83;
    if ((v38 & 1) == 0
      || (uint64_t v41 = *(int *)(v71 + 20),
          uint64_t v42 = *(void *)&v81[v41],
          uint64_t v43 = *(void *)(v82 + v41),
          uint64_t v44 = *(void *)(v42 + 16),
          uint64_t v45 = *(void *)(v43 + 16),
          uint64_t v86 = v42,
          uint64_t v87 = v44,
          v44 != v45))
    {
LABEL_32:
      sub_2414AEF30(v82, type metadata accessor for CompactCalendarMonthViewModel);
      sub_2414AEF30((uint64_t)v81, type metadata accessor for CompactCalendarMonthViewModel);
      return 0;
    }
    if (v87 && v86 != v43) {
      break;
    }
LABEL_5:
    uint64_t v27 = v77 + 1;
    uint64_t v34 = v82;
    sub_2414AEF30(v82, type metadata accessor for CompactCalendarMonthViewModel);
    uint64_t v35 = v81;
    sub_2414AEF30((uint64_t)v81, type metadata accessor for CompactCalendarMonthViewModel);
    uint64_t result = 1;
    uint64_t v29 = v69;
    uint64_t v30 = v68;
    uint64_t v31 = v67;
    if (v27 == v70) {
      return result;
    }
  }
  unint64_t v46 = 0;
  unint64_t v47 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  uint64_t v78 = *(void *)(v66 + 72);
  uint64_t v79 = v43;
  uint64_t v80 = v12;
  while (1)
  {
    uint64_t result = sub_2414AF094(v86 + v47, (uint64_t)v19, type metadata accessor for CompactCalendarDayViewModel);
    uint64_t v48 = v88;
    if (v46 >= *(void *)(v43 + 16)) {
      break;
    }
    sub_2414AF094(v43 + v47, v39, type metadata accessor for CompactCalendarDayViewModel);
    uint64_t v49 = v33 + *(int *)(v12 + 48);
    sub_2411CE5A0((uint64_t)v19, v33);
    sub_2411CE5A0(v39, v49);
    unint64_t v50 = *v40;
    if ((*v40)(v33, 1, v48) == 1)
    {
      if (v50(v49, 1, v48) != 1) {
        goto LABEL_30;
      }
      sub_2414AEF90(v33, (unint64_t *)&unk_26B00F1B0, MEMORY[0x263F090E8]);
    }
    else
    {
      uint64_t v51 = (uint64_t)v76;
      sub_2411CE5A0(v33, (uint64_t)v76);
      if (v50(v49, 1, v48) == 1)
      {
        (*v75)(v51, v48);
LABEL_30:
        sub_2414AEF30(v33, (uint64_t (*)(void))sub_241251F3C);
LABEL_31:
        sub_2414AEF30(v39, type metadata accessor for CompactCalendarDayViewModel);
        sub_2414AEF30((uint64_t)v19, type metadata accessor for CompactCalendarDayViewModel);
        goto LABEL_32;
      }
      uint64_t v52 = v74;
      (*v73)(v74, v49, v48);
      sub_2414AF83C((unint64_t *)&unk_268CFC5A0, MEMORY[0x263F090E8]);
      char v53 = sub_241631C28();
      uint64_t v54 = v88;
      char v55 = v53;
      uint64_t v56 = *v75;
      (*v75)(v51, v88);
      uint64_t v57 = v52;
      uint64_t v33 = (uint64_t)v85;
      v56((uint64_t)v57, v54);
      id v40 = v83;
      sub_2414AEF90(v33, (unint64_t *)&unk_26B00F1B0, MEMORY[0x263F090E8]);
      id v32 = (int *)v84;
      if ((v55 & 1) == 0) {
        goto LABEL_31;
      }
    }
    if ((sub_24162E768() & 1) == 0) {
      goto LABEL_31;
    }
    uint64_t v58 = v32[6];
    uint64_t v59 = *(void *)&v19[v58];
    uint64_t v60 = *(void *)&v19[v58 + 8];
    uint64_t v61 = (void *)(v39 + v58);
    BOOL v62 = v59 == *v61 && v60 == v61[1];
    if (!v62 && (sub_241633218() & 1) == 0 || v19[v32[7]] != *(unsigned char *)(v39 + v32[7])) {
      goto LABEL_31;
    }
    uint64_t v63 = v32[8];
    int v64 = v19[v63];
    int v65 = *(unsigned __int8 *)(v39 + v63);
    sub_2414AEF30(v39, type metadata accessor for CompactCalendarDayViewModel);
    sub_2414AEF30((uint64_t)v19, type metadata accessor for CompactCalendarDayViewModel);
    BOOL v62 = v64 == v65;
    uint64_t v43 = v79;
    uint64_t v12 = v80;
    if (!v62) {
      goto LABEL_32;
    }
    ++v46;
    v47 += v78;
    if (v87 == v46) {
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24149BF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241631AC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414AFD04(0, (unint64_t *)&unk_26B00F1B0, MEMORY[0x263F090E8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v40 - v9;
  sub_241251F3C();
  uint64_t v48 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for CompactCalendarDayViewModel(0);
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v40 - v19;
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21 != *(void *)(a2 + 16)) {
    goto LABEL_24;
  }
  if (!v21 || v50 == v51)
  {
    char v38 = 1;
    return v38 & 1;
  }
  unint64_t v46 = v10;
  unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v23 = *(void *)(v18 + 72);
  uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  id v40 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v44 = v16;
  uint64_t v45 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v25 = v21 - 1;
  uint64_t v42 = v23;
  uint64_t v43 = v7;
  while (1)
  {
    uint64_t v49 = v25;
    sub_2414AF094(v50 + v22, (uint64_t)v20, type metadata accessor for CompactCalendarDayViewModel);
    sub_2414AF094(v51 + v22, (uint64_t)v16, type metadata accessor for CompactCalendarDayViewModel);
    uint64_t v26 = (uint64_t)&v13[*(int *)(v48 + 48)];
    sub_2411CE5A0((uint64_t)v20, (uint64_t)v13);
    sub_2411CE5A0((uint64_t)v16, v26);
    uint64_t v27 = *v24;
    if ((*v24)(v13, 1, v4) != 1) {
      break;
    }
    if (v27((char *)v26, 1, v4) != 1) {
      goto LABEL_22;
    }
    sub_2414AEF90((uint64_t)v13, (unint64_t *)&unk_26B00F1B0, MEMORY[0x263F090E8]);
LABEL_10:
    if ((sub_24162E768() & 1) == 0) {
      goto LABEL_23;
    }
    uint64_t v32 = v14[6];
    uint64_t v33 = *(void *)&v20[v32];
    uint64_t v34 = *(void *)&v20[v32 + 8];
    uint64_t v35 = &v16[v32];
    BOOL v36 = v33 == *(void *)v35 && v34 == *((void *)v35 + 1);
    if (!v36 && (sub_241633218() & 1) == 0 || v20[v14[7]] != v16[v14[7]]) {
      goto LABEL_23;
    }
    char v37 = v20[v14[8]] ^ v16[v14[8]];
    sub_2414AEF30((uint64_t)v16, type metadata accessor for CompactCalendarDayViewModel);
    sub_2414AEF30((uint64_t)v20, type metadata accessor for CompactCalendarDayViewModel);
    if ((v37 & 1) == 0)
    {
      uint64_t v25 = v49 - 1;
      v22 += v23;
      if (v49) {
        continue;
      }
    }
    char v38 = v37 ^ 1;
    return v38 & 1;
  }
  uint64_t v28 = (uint64_t)v46;
  sub_2411CE5A0((uint64_t)v13, (uint64_t)v46);
  if (v27((char *)v26, 1, v4) != 1)
  {
    uint64_t v29 = v43;
    (*v40)(v43, v26, v4);
    sub_2414AF83C((unint64_t *)&unk_268CFC5A0, MEMORY[0x263F090E8]);
    int v47 = sub_241631C28();
    uint64_t v30 = *v45;
    uint64_t v31 = v29;
    uint64_t v23 = v42;
    (*v45)(v31, v4);
    v30((char *)v28, v4);
    sub_2414AEF90((uint64_t)v13, (unint64_t *)&unk_26B00F1B0, MEMORY[0x263F090E8]);
    uint64_t v24 = v41;
    id v16 = v44;
    if ((v47 & 1) == 0) {
      goto LABEL_23;
    }
    goto LABEL_10;
  }
  (*v45)((char *)v28, v4);
  id v16 = v44;
LABEL_22:
  sub_2414AEF30((uint64_t)v13, (uint64_t (*)(void))sub_241251F3C);
LABEL_23:
  sub_2414AEF30((uint64_t)v16, type metadata accessor for CompactCalendarDayViewModel);
  sub_2414AEF30((uint64_t)v20, type metadata accessor for CompactCalendarDayViewModel);
LABEL_24:
  char v38 = 0;
  return v38 & 1;
}

uint64_t sub_24149C4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a2 + 40);
    for (uint64_t i = (void *)(a1 + 40); ; i += 6)
    {
      uint64_t v6 = i[1];
      uint64_t v5 = i[2];
      uint64_t v7 = i[4];
      uint64_t v13 = i[3];
      uint64_t v9 = v3[1];
      uint64_t v8 = v3[2];
      uint64_t v11 = v3[3];
      uint64_t v10 = v3[4];
      if ((*(i - 1) != *(v3 - 1) || *i != *v3) && (sub_241633218() & 1) == 0) {
        break;
      }
      if (v5)
      {
        if (!v8 || (v6 != v9 || v5 != v8) && (sub_241633218() & 1) == 0) {
          return 0;
        }
      }
      else if (v8)
      {
        return 0;
      }
      if (v7)
      {
        if (!v10 || (v13 != v11 || v7 != v10) && (sub_241633218() & 1) == 0) {
          return 0;
        }
      }
      else if (v10)
      {
        return 0;
      }
      v3 += 6;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

BOOL sub_24149C628(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = (unsigned __int8 *)(a1 + 33);
  uint64_t v6 = (unsigned __int8 *)(a2 + 33);
  do
  {
    int v8 = *v5++;
    int v7 = v8;
    int v10 = *v6++;
    int v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t sub_24149C69C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    do
    {
      uint64_t v5 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
      uint64_t v7 = v6;
      if (v5 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v7 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v10 = sub_241633218();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      v3 += 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  return 1;
}

id sub_24149C774(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t v5 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v29 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)MEMORY[0x245620370](0, v3))
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)MEMORY[0x245620370](0, a2);
LABEL_22:
    uint64_t v13 = v12;
    sub_2411B9D00(0, (unint64_t *)&qword_26B00E610);
    char v14 = sub_2416329B8();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)MEMORY[0x245620370](v16 + 1, v3);
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        uint64_t v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x245620370](v16 + 1, a2);
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        uint64_t v21 = v20;
        unint64_t v5 = sub_2416329B8();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      uint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        uint64_t v27 = *v25++;
        uint64_t v26 = v27;
        uint64_t v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_2416329B8();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_24149CA60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    unint64_t v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      while (1)
      {
        unsigned int v7 = *v3++;
        uint64_t v6 = v7;
        unsigned int v9 = *v4++;
        uint64_t v8 = v9;
        unint64_t v10 = 0x8000000241656490;
        unint64_t v11 = 0xD000000000000011;
        switch(v6)
        {
          case 1:
            unint64_t v11 = 0xD000000000000012;
            unint64_t v10 = 0x80000002416564B0;
            break;
          case 2:
            unint64_t v11 = 0xD000000000000013;
            unint64_t v10 = 0x80000002416564D0;
            break;
          case 3:
            unint64_t v11 = 0xD000000000000016;
            unint64_t v10 = 0x80000002416564F0;
            break;
          case 4:
            unint64_t v11 = 0xD00000000000001ALL;
            unint64_t v10 = 0x8000000241656510;
            break;
          case 5:
            unint64_t v11 = 0x7461527472616568;
            unint64_t v10 = 0xED00006174614465;
            break;
          case 6:
            unint64_t v10 = 0x8000000241656540;
            goto LABEL_16;
          case 7:
            unint64_t v10 = 0xE800000000000000;
            unint64_t v11 = 0x676F4C656C637963;
            break;
          case 8:
            unint64_t v10 = 0x8000000241656560;
LABEL_16:
            unint64_t v11 = 0xD000000000000014;
            break;
          default:
            break;
        }
        unint64_t v12 = 0x8000000241656490;
        unint64_t v13 = 0xD000000000000011;
        switch(v8)
        {
          case 1:
            unint64_t v13 = 0xD000000000000012;
            unint64_t v12 = 0x80000002416564B0;
            break;
          case 2:
            unint64_t v13 = 0xD000000000000013;
            unint64_t v12 = 0x80000002416564D0;
            break;
          case 3:
            unint64_t v13 = 0xD000000000000016;
            unint64_t v12 = 0x80000002416564F0;
            break;
          case 4:
            unint64_t v13 = 0xD00000000000001ALL;
            unint64_t v12 = 0x8000000241656510;
            break;
          case 5:
            unint64_t v13 = 0x7461527472616568;
            unint64_t v12 = 0xED00006174614465;
            break;
          case 6:
            unint64_t v12 = 0x8000000241656540;
            goto LABEL_26;
          case 7:
            unint64_t v12 = 0xE800000000000000;
            unint64_t v13 = 0x676F4C656C637963;
            break;
          case 8:
            unint64_t v12 = 0x8000000241656560;
LABEL_26:
            unint64_t v13 = 0xD000000000000014;
            break;
          default:
            break;
        }
        if (v11 != v13 || v10 != v12) {
          break;
        }
        swift_bridgeObjectRelease_n();
        if (!--v2) {
          return 1;
        }
      }
      char v5 = sub_241633218();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0) {
        return 0;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_24149CD60(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_24149CE3C;
  return v6(a1);
}

uint64_t sub_24149CE3C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24149CF34()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24149CF6C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_24120151C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268D00DE8 + dword_268D00DE8);
  return v6(a1, v4);
}

void sub_24149D024(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_2411B9D00(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24149D08C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_24149D024(255, a3, (unint64_t *)&qword_26B012390, 0x263F0A150, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_24149D108()
{
  unint64_t result = qword_268CFCDF0;
  if (!qword_268CFCDF0)
  {
    sub_24149D024(255, &qword_268CFCDE8, (unint64_t *)&qword_26B012390, 0x263F0A150, MEMORY[0x263F09028]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFCDF0);
  }
  return result;
}

uint64_t sub_24149D18C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v2 == -1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v5 = result;
  if (v3 <= 0)
  {
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    sub_2414AFD68(0, (unint64_t *)&unk_268D035C0, MEMORY[0x263F8D6C8], MEMORY[0x263F8E0F8]);
    uint64_t v6 = (void *)swift_allocObject();
    int64_t v7 = j__malloc_size_1(v6);
    uint64_t v8 = v7 - 32;
    if (v7 < 32) {
      uint64_t v8 = v7 - 25;
    }
    _OWORD v6[2] = v3;
    v6[3] = 2 * (v8 >> 3);
  }
  unint64_t result = sub_2414AB9A4((uint64_t)&v9, (uint64_t)(v6 + 4), v3, v5, a2);
  if (result == v3) {
    return (uint64_t)v6;
  }
LABEL_14:
  __break(1u);
  return result;
}

void *sub_24149D280(unint64_t a1)
{
  return sub_24149D2B0(a1, (void (*)(void *, uint64_t, unint64_t))sub_2414AAC3C);
}

void *sub_24149D298(unint64_t a1)
{
  return sub_24149D2B0(a1, (void (*)(void *, uint64_t, unint64_t))sub_2414AB0B4);
}

void *sub_24149D2B0(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      sub_2414AFD68(0, (unint64_t *)&qword_26B0121F0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = j__malloc_size_1(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      uint64_t v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v4 = sub_241633068();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v5;
}

uint64_t sub_24149D3DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_2414AFD68(0, (unint64_t *)&qword_26B013220, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = j__malloc_size_1(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149D570(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_241632D88();
    if (v2) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    sub_2414AFD68(0, (unint64_t *)&qword_26B0121F0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size_1(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  int64_t v6 = sub_2414ABA30(&v8, v3 + 4, v2, a1);
  uint64_t result = sub_2411B96D4();
  if (v6 == (void *)v2) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

size_t sub_24149D690(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_2414AFD04(0, (unint64_t *)&unk_268D01190, MEMORY[0x263F063B0], MEMORY[0x263F8E0F8]);
  uint64_t v3 = *(void *)(sub_24162B138() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  size_t result = j__malloc_size_1(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      _OWORD v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_2414ABD50(&v11, (char *)v6 + v5, v1, a1);
      uint64_t v10 = v9;
      sub_2411B96D4();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24149D7F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  if (v5 <= 0)
  {
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(type metadata accessor for CycleChartDay() - 8);
      unint64_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      uint64_t v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_2414AFD04(0, &qword_268D00EF8, (uint64_t (*)(uint64_t))type metadata accessor for CycleChartDay, MEMORY[0x263F8E0F8]);
  uint64_t v8 = *(void *)(type metadata accessor for CycleChartDay() - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size_1(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

void *sub_24149DA5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_2414AFAB8(0, &qword_268D01168, (unint64_t *)&qword_268D01170);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size_1(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_2414AC180((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2411B96D4();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_24149DB58(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A0554(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_268D01040, (uint64_t (*)(uint64_t))sub_2414AF3CC, (void (*)(void))sub_2414AF3CC);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149DBA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E74C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149DBC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A0704(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_268D00E70, (unint64_t *)&qword_268CFA598, MEMORY[0x263F090E8]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149DC14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_26B0123E0, MEMORY[0x263F45630], MEMORY[0x263F45630]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149DC64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_26B00EC80, MEMORY[0x263F07490], MEMORY[0x263F07490]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149DCB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149F198(a1, a2, a3, *v3, (unint64_t *)&unk_268D01060, (uint64_t)&type metadata for CycleTimelineStep);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149DCE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149EB58(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149DD04(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149ECD8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149DD24(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149FF54(a1, a2, a3, *v3, (void (*)(void))sub_2414AED44);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149DD58(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149EE58(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149DD78(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149F00C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149DD98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_268D00F70, type metadata accessor for CycleChartCycle, type metadata accessor for CycleChartCycle);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149DDE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A0E58(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_268D03530, (unint64_t *)&qword_268D00EE0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149DE20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149F300(a1, a2, a3, *v3, (uint64_t)&unk_268D00FA0, (uint64_t)sub_2414AF0FC, MEMORY[0x263F8E0F8], (void (*)(void, uint64_t, uint64_t, uint64_t))sub_2414AFD04);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149DE84(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, &qword_268D00EF8, (uint64_t (*)(uint64_t))type metadata accessor for CycleChartDay, (uint64_t (*)(void))type metadata accessor for CycleChartDay);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149DED4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149F468(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149DEF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, &qword_268D00F88, (uint64_t (*)(uint64_t))sub_2411FEB18, (uint64_t (*)(void))sub_2411FEB18);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149DF44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_268D00F90, (uint64_t (*)(uint64_t))sub_2412216AC, (uint64_t (*)(void))sub_2412216AC);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149DF94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149F61C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149DFB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149FDDC(a1, a2, a3, *v3, &qword_26B0107A0, (uint64_t (*)(uint64_t))type metadata accessor for HKMCCycleFactor);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149DFF0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149F8DC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149E010(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, &qword_268D01178, type metadata accessor for CycleChartCycle.RelativeDayIndex, type metadata accessor for CycleChartCycle.RelativeDayIndex);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E060(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149FA68(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E080(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149F300(a1, a2, a3, *v3, (uint64_t)&unk_268D00FE8, (uint64_t)&unk_268D00FF0, (uint64_t)type metadata accessor for HKMCDeviationType, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_2414AF6FC);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149E0D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149FC28(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E0F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_268D00EC0, MEMORY[0x263F44068], MEMORY[0x263F44068]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E148(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, &qword_268D00EF0, type metadata accessor for CycleChartDaysPDFChunk, type metadata accessor for CycleChartDaysPDFChunk);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E198(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149FDDC(a1, a2, a3, *v3, &qword_268D00ED8, (uint64_t (*)(uint64_t))type metadata accessor for HKMCDayViewModelFertileWindowLevel);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149E1D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A0E58(a1, a2, a3, (void *)*v3, &qword_268D00EC8, &qword_268D00ED0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E20C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_268D034E0, MEMORY[0x263F06338], MEMORY[0x263F06338]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E25C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, &qword_268D00E58, MEMORY[0x263F07508], MEMORY[0x263F07508]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E2AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_268D00E90, (uint64_t (*)(uint64_t))type metadata accessor for Section, (uint64_t (*)(void))type metadata accessor for Section);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E2FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149FF54(a1, a2, a3, *v3, (void (*)(void))sub_2414AE8FC);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149E330(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, &qword_268D01128, (uint64_t (*)(uint64_t))sub_24143FFB8, (uint64_t (*)(void))sub_24143FFB8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E380(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A00B0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149E3A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_268D01080, type metadata accessor for CycleFactorsSectionViewModel, type metadata accessor for CycleFactorsSectionViewModel);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E3F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A023C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149E410(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A03C8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149E430(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_268D00EB0, (uint64_t (*)(uint64_t))sub_241397EB0, (uint64_t (*)(void))sub_241397EB0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E480(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A0554(a1, a2, a3, (void *)*v3, &qword_268D03640, (uint64_t (*)(uint64_t))sub_2414AF444, (void (*)(void))sub_2414AF444);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E4D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_268CFEB30, type metadata accessor for InternalLiveOnRequirement, type metadata accessor for InternalLiveOnRequirement);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E520(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A0704(a1, a2, a3, (void *)*v3, &qword_268D01030, (unint64_t *)&qword_268D01038, MEMORY[0x263F44068]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E56C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A097C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24149E58C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A0CB0(a1, a2, a3, (void *)*v3, &qword_268D01148, &qword_268D01150);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E5C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A0AFC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E5E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A0E58(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_268CFC790, (unint64_t *)&qword_268CFF090);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E61C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, &qword_268D00F18, MEMORY[0x263F44D38], MEMORY[0x263F44D38]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E66C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A1020(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E68C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, &qword_268D03560, MEMORY[0x263F090E8], MEMORY[0x263F090E8]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E6DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24149E8F4(a1, a2, a3, (void *)*v3, &qword_268D03540, type metadata accessor for CompactCalendarDayViewModel, type metadata accessor for CompactCalendarDayViewModel);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E72C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2414A11D4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24149E74C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD68(0, &qword_268D00F80, (uint64_t)&type metadata for PDFLegend, MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_1(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149E8F4(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    unint64_t v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_2414AFD04(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v17 = (void *)swift_allocObject();
  size_t v18 = j__malloc_size_1(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v22 = (char *)v17 + v21;
  unint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  uint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149EB58(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD68(0, (unint64_t *)&unk_268D011A0, MEMORY[0x263F8D538], MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149ECD8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD68(0, (unint64_t *)&qword_268CFA2A0, MEMORY[0x263F8EF38], MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149EE58(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD04(0, &qword_268D00F10, (uint64_t (*)(uint64_t))sub_2411FE9C4, MEMORY[0x263F8E0F8]);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_2411FE9C4();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149F00C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD68(0, (unint64_t *)&qword_26B013220, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149F198(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  int64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    int64_t v11 = *((void *)a4 + 2);
  }
  else {
    int64_t v11 = v9;
  }
  if (v11)
  {
    sub_2414AFD68(0, a5, a6, MEMORY[0x263F8E0F8]);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = j__malloc_size_1(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v14 = v12 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[v10]) {
      memmove(v14, v15, v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v10] || v14 >= &v15[v10])
  {
    memcpy(v14, v15, v10);
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149F300(char a1, int64_t a2, char a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void, uint64_t, uint64_t, uint64_t))
{
  if (a3)
  {
    unint64_t v10 = *((void *)a4 + 3);
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = *((void *)a4 + 2);
  if (v11 <= v12) {
    uint64_t v13 = *((void *)a4 + 2);
  }
  else {
    uint64_t v13 = v11;
  }
  if (v13)
  {
    a8(0, a5, a6, a7);
    unint64_t v14 = (char *)swift_allocObject();
    int64_t v15 = j__malloc_size_1(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 17;
    }
    *((void *)v14 + 2) = v12;
    *((void *)v14 + 3) = 2 * (v16 >> 4);
  }
  else
  {
    unint64_t v14 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v17 = v14 + 32;
  size_t v18 = a4 + 32;
  size_t v19 = 16 * v12;
  if (a1)
  {
    if (v14 != a4 || v17 >= &v18[v19]) {
      memmove(v17, v18, v19);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v18 >= &v17[v19] || v17 >= &v18[v19])
  {
    memcpy(v17, v18, v19);
LABEL_30:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149F468(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2411B6D38(0, (unint64_t *)&qword_268CFB510, (unint64_t *)&qword_268D00FB0);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_2411C8460(0, (unint64_t *)&qword_268D00FB0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149F61C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v14 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F08FD0];
  sub_24149D08C(0, &qword_268CFF170, (unint64_t *)&qword_268CFCD40, MEMORY[0x263F08FD0], MEMORY[0x263F8E0F8]);
  sub_24149D024(0, (unint64_t *)&qword_268CFCD40, (unint64_t *)&qword_26B012390, 0x263F0A150, v10);
  uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 72);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  unint64_t v14 = (void *)swift_allocObject();
  size_t v15 = j__malloc_size_1(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_34;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_24149D024(0, (unint64_t *)&qword_268CFCD40, (unint64_t *)&qword_26B012390, 0x263F0A150, MEMORY[0x263F08FD0]);
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = (char *)v14 + v19;
  unint64_t v21 = (char *)a4 + v19;
  if (a1)
  {
    if (v14 < a4 || v20 >= &v21[*(void *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v22 = *(void *)(v18 + 72) * v8;
  unint64_t v23 = &v20[v22];
  unint64_t v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149F8DC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD68(0, (unint64_t *)&unk_268D00E80, (uint64_t)&type metadata for LoggingCardRowViewModel, MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149FA68(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AF6FC(0, &qword_268D010C0, &qword_268D010C8, type metadata accessor for HKMCDisplayTypeIdentifier);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 4;
  unint64_t v14 = a4 + 4;
  size_t v15 = 2 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    sub_2414AF754(0, &qword_268D010C8, type metadata accessor for HKMCDisplayTypeIdentifier);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149FC28(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD04(0, &qword_268D034C0, (uint64_t (*)(uint64_t))type metadata accessor for HKMCDisplayTypeIdentifier, MEMORY[0x263F8E0F8]);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    type metadata accessor for HKMCDisplayTypeIdentifier(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149FDDC(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_2414AFD04(0, a5, a6, MEMORY[0x263F8E0F8]);
    uint64_t v12 = (char *)swift_allocObject();
    int64_t v13 = j__malloc_size_1(v12);
    uint64_t v14 = v13 - 32;
    if (v13 < 32) {
      uint64_t v14 = v13 - 25;
    }
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * (v14 >> 3);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v15 = v12 + 32;
  uint64_t v16 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v15 >= &v16[8 * v10]) {
      memmove(v15, v16, 8 * v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[8 * v10] || v15 >= &v16[8 * v10])
  {
    memcpy(v15, v16, 8 * v10);
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_24149FF54(char a1, int64_t a2, char a3, char *a4, void (*a5)(void))
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    a5(0);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size_1(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  size_t v16 = 16 * v9;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414A00B0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD04(0, &qword_268D01110, (uint64_t (*)(uint64_t))sub_2414AF99C, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414A023C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD04(0, (unint64_t *)&unk_268D01010, (uint64_t (*)(uint64_t))type metadata accessor for HKMCDaySummarySymptoms, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414A03C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD04(0, &qword_268D00FC0, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414A0554(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), void (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (v13)
  {
    sub_2414AFD04(0, a5, a6, MEMORY[0x263F8E0F8]);
    uint64_t v14 = (void *)swift_allocObject();
    int64_t v15 = j__malloc_size_1(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 17;
    }
    v14[2] = v12;
    v14[3] = 2 * (v16 >> 4);
  }
  else
  {
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v17 = (unint64_t)(v14 + 4);
  unint64_t v18 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v14 != a4 || v17 >= v18 + 16 * v12) {
      memmove(v14 + 4, a4 + 4, 16 * v12);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 16 * v12 || v17 >= v18 + 16 * v12)
  {
    a7(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414A0704(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, void (*a7)(uint64_t))
{
  if (a3)
  {
    unint64_t v11 = a4[3];
    int64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v12 = a2;
      }
    }
  }
  else
  {
    int64_t v12 = a2;
  }
  uint64_t v13 = a4[2];
  if (v12 <= v13) {
    uint64_t v14 = a4[2];
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_2414AF300(0, a5, a6, a7);
  sub_2414AF35C(0, a6, a7);
  uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 72);
  unint64_t v17 = (*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size_1(v18);
  if (!v16)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v16 == -1) {
    goto LABEL_34;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  sub_2414AF35C(0, a6, a7);
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (char *)v18 + v23;
  uint64_t v25 = (char *)a4 + v23;
  if (a1)
  {
    if (v18 < a4 || v24 >= &v25[*(void *)(v22 + 72) * v13])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v26 = *(void *)(v22 + 72) * v13;
  uint64_t v27 = &v24[v26];
  unint64_t v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v18;
  }
LABEL_36:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414A097C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD68(0, (unint64_t *)&unk_268D035C0, MEMORY[0x263F8D6C8], MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414A0AFC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD04(0, &qword_268D01158, (uint64_t (*)(uint64_t))sub_241292F2C, MEMORY[0x263F8E0F8]);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_241292F2C();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414A0CB0(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_2414AFAB8(0, a5, a6);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size_1(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 17;
    }
    v13[2] = v11;
    void v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 16 * v11) {
      memmove(v13 + 4, a4 + 4, 16 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 16 * v11 || v16 >= v17 + 16 * v11)
  {
    sub_2414AFB10(0, a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414A0E58(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_2411B6D38(0, a5, a6);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size_1(v13);
    v13[2] = v11;
    void v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_2411C8460(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414A1020(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD04(0, &qword_268D00FC8, (uint64_t (*)(uint64_t))sub_2414AF16C, MEMORY[0x263F8E0F8]);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_2414AF16C();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414A11D4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AFD04(0, (unint64_t *)&unk_268D01000, (uint64_t (*)(uint64_t))sub_2414AF280, MEMORY[0x263F8E0F8]);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size_1(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    sub_2414AF280();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414A13A4(uint64_t a1)
{
  return sub_24149ECD8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2414A13B8(uint64_t a1)
{
  return sub_24149F198(0, *(void *)(a1 + 16), 0, (char *)a1, (unint64_t *)&unk_268D010E0, (uint64_t)&type metadata for CycleHistoryFilter);
}

void sub_2414A13F0()
{
}

uint64_t sub_2414A1404(void *a1)
{
  return sub_24149E8F4(0, a1[2], 0, a1, &qword_268CFEB70, type metadata accessor for InternalLiveOnDevicesModel.Device, type metadata accessor for InternalLiveOnDevicesModel.Device);
}

uint64_t sub_2414A145C(void *a1)
{
  return sub_24149E8F4(0, a1[2], 0, a1, (unint64_t *)&unk_268D01190, MEMORY[0x263F063B0], MEMORY[0x263F063B0]);
}

uint64_t sub_2414A14B4(uint64_t a1)
{
  return sub_2414A023C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2414A14C8(void *a1)
{
  return sub_2414A0CB0(0, a1[2], 0, a1, &qword_268D01168, (unint64_t *)&qword_268D01170);
}

uint64_t sub_2414A1508(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_241633308();
  sub_241633318();
  uint64_t v6 = sub_241633358();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_2414A4F00(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2414A1628(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_241631AC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2414AF83C(&qword_268CFBDB8, MEMORY[0x263F090E8]);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v33 = a2;
  uint64_t v11 = sub_241631B68();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    unint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2414AF83C((unint64_t *)&unk_268CFC5A0, MEMORY[0x263F090E8]);
      char v21 = sub_241631C28();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2414A5050((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2414A194C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24162BB18();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2414AF83C((unint64_t *)&unk_268CFB7D0, MEMORY[0x263F07A30]);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v33 = a2;
  uint64_t v11 = sub_241631B68();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    unint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2414AF83C((unint64_t *)&unk_268D01020, MEMORY[0x263F07A30]);
      char v21 = sub_241631C28();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2414A5318((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2414A1C70(void *a1, void *a2)
{
  return sub_2414A271C(a1, a2, (void (*)(void))sub_2414AE978, type metadata accessor for HKMCDisplayTypeIdentifier);
}

uint64_t sub_2414A1C9C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24162B788();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2414AF83C((unint64_t *)&qword_268CFEAB0, MEMORY[0x263F07508]);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v33 = a2;
  uint64_t v11 = sub_241631B68();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    unint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2414AF83C((unint64_t *)&unk_268D00E40, MEMORY[0x263F07508]);
      char v21 = sub_241631C28();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2414A55E0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2414A1FC0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24162BFA8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2414AF83C(&qword_26B00F228, MEMORY[0x263F45618]);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v33 = a2;
  uint64_t v11 = sub_241631B68();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    unint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2414AF83C(&qword_268D010B0, MEMORY[0x263F45618]);
      char v21 = sub_241631C28();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2414A58A8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2414A22E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_241633308();
  sub_241633318();
  uint64_t v6 = sub_241633358();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_2414A5B70(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(void *)(v9 + 8 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v9 + 8 * v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2414A2404(void *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  uint64_t v11 = v6;
  uint64_t v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0) {
      uint64_t v15 = *v6;
    }
    else {
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    }
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    id v16 = a2;
    uint64_t v17 = sub_241632D98();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_2411B9D00(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_241632D88();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = sub_2414A29A0(v15, result + 1, a5, a3, a4, a6);
    uint64_t v43 = v29;
    unint64_t v30 = *(void *)(v29 + 16);
    if (*(void *)(v29 + 24) <= v30)
    {
      uint64_t v35 = a5;
      uint64_t v36 = v30 + 1;
      id v37 = v16;
      sub_2414A379C(v36, v35, a3, a4, a6);
      uint64_t v31 = v43;
    }
    else
    {
      uint64_t v31 = v29;
      id v32 = v16;
    }
    sub_2414A4E7C((uint64_t)v16, v31);
    uint64_t *v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v19 = sub_2416329A8();
    uint64_t v20 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v21 = v19 & ~v20;
    uint64_t v40 = a4;
    if ((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
    {
      sub_2411B9D00(0, a3);
      id v22 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
      char v23 = sub_2416329B8();

      if (v23)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v27 = *(void **)(*(void *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        id v28 = v27;
        return 0;
      }
      uint64_t v24 = ~v20;
      while (1)
      {
        unint64_t v21 = (v21 + 1) & v24;
        if (((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        id v25 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
        char v26 = sub_2416329B8();

        if (v26) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    id v34 = a2;
    sub_2414A5CC0((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    *uint64_t v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

uint64_t sub_2414A26F0(void *a1, void *a2)
{
  return sub_2414A271C(a1, a2, (void (*)(void))sub_2414AEE9C, type metadata accessor for HKMCPregnancyAdjustedFeatureIdentifier);
}

uint64_t sub_2414A271C(void *a1, void *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t v5 = v4;
  uint64_t v8 = *v4;
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  sub_241633308();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631DC8();
  uint64_t v9 = sub_241633358();
  swift_bridgeObjectRelease();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    id v26 = a2;
    sub_2414A5E78((uint64_t)v26, v11, isUniquelyReferenced_nonNull_native, a3, a4);
    *uint64_t v5 = v32;
    swift_bridgeObjectRelease();
    *a1 = v26;
    return 1;
  }
  uint64_t v12 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v14 = v13;
  if (v12 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v14 == v15)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = sub_241633218();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      uint64_t v18 = ~v10;
      do
      {
        unint64_t v11 = (v11 + 1) & v18;
        if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v19 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
        uint64_t v21 = v20;
        if (v19 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v21 == v22) {
          goto LABEL_16;
        }
        char v24 = sub_241633218();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v24 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  id v28 = *(void **)(*(void *)(*v5 + 48) + 8 * v11);
  *a1 = v28;
  id v29 = v28;
  return 0;
}

uint64_t sub_2414A2950(uint64_t a1, uint64_t a2)
{
  return sub_2414A2BC8(a1, a2, (void (*)(void))sub_2414AF1D8, (unint64_t *)&qword_26B012390, 0x263F0A150, (void (*)(void))sub_2414AF1D8);
}

uint64_t sub_2414A297C(uint64_t a1, uint64_t a2)
{
  return sub_2414A29A0(a1, a2, (unint64_t *)&qword_26B0123D0, &qword_26B012350, 0x263F0A598, (unint64_t *)&qword_26B012358);
}

uint64_t sub_2414A29A0(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  if (a2)
  {
    sub_2414AE85C(0, a3, a4, a5, a6);
    uint64_t v10 = sub_241632E48();
    uint64_t v23 = v10;
    sub_241632D48();
    if (sub_241632DC8())
    {
      sub_2411B9D00(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v10 = v23;
        unint64_t v17 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v17)
        {
          sub_2414A379C(v17 + 1, a3, a4, a5, a6);
          uint64_t v10 = v23;
        }
        uint64_t result = sub_2416329A8();
        uint64_t v12 = v10 + 56;
        uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
        unint64_t v14 = result & ~v13;
        unint64_t v15 = v14 >> 6;
        if (((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v15 == v19;
            if (v15 == v19) {
              unint64_t v15 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          unint64_t v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(void *)(*(void *)(v10 + 48) + 8 * v16) = v22;
        ++*(void *)(v10 + 16);
      }
      while (sub_241632DC8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v10;
}

uint64_t sub_2414A2BC8(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, uint64_t a5, void (*a6)(void))
{
  if (a2)
  {
    a3(0);
    uint64_t v8 = sub_241632E48();
    uint64_t v21 = v8;
    sub_241632D48();
    if (sub_241632DC8())
    {
      sub_2411B9D00(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v8 = v21;
        unint64_t v15 = *(void *)(v21 + 16);
        if (*(void *)(v21 + 24) <= v15)
        {
          sub_2414A3E30(v15 + 1, a6);
          uint64_t v8 = v21;
        }
        uint64_t result = sub_2416329A8();
        uint64_t v10 = v8 + 56;
        uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v16 = 0;
          unint64_t v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v18 = v13 == v17;
            if (v13 == v17) {
              unint64_t v13 = 0;
            }
            v16 |= v18;
            uint64_t v19 = *(void *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          unint64_t v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(void *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(void *)(*(void *)(v8 + 48) + 8 * v14) = v20;
        ++*(void *)(v8 + 16);
      }
      while (sub_241632DC8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v8;
}

uint64_t sub_2414A2DD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2411CAE78();
  uint64_t result = sub_241632E38();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_241633308();
      sub_241633318();
      uint64_t result = sub_241633358();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2414A3078()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_241631AC8();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_2414AF884();
  uint64_t v5 = sub_241632E38();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    id v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2414AF83C(&qword_268CFBDB8, MEMORY[0x263F090E8]);
      uint64_t result = sub_241631B68();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_2414A3470()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2414AEDC8(0, (unint64_t *)&qword_26B0123C0, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F8DBD8]);
  uint64_t v3 = sub_241632E38();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_241633308();
      sub_241631DC8();
      uint64_t result = sub_241633358();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2414A3778(uint64_t a1)
{
  return sub_2414A379C(a1, (unint64_t *)&qword_26B0123D0, &qword_26B012350, 0x263F0A598, (unint64_t *)&qword_26B012358);
}

uint64_t sub_2414A379C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_2414AE85C(0, a2, a3, a4, a5);
  uint64_t v8 = sub_241632E38();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    uint64_t v33 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    int64_t v11 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 56);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v15 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v22 = v11[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_33;
            }
            unint64_t v22 = v11[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
                if (v32 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v11 = -1 << v32;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v14) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v11[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
      uint64_t result = sub_2416329A8();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v9;
  return result;
}

uint64_t sub_2414A3A38()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_24162BB18();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_24125606C();
  uint64_t v5 = sub_241632E38();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    id v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2414AF83C((unint64_t *)&unk_268CFB7D0, MEMORY[0x263F07A30]);
      uint64_t result = sub_241631B68();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_2414A3E30(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  a2(0);
  uint64_t v5 = sub_241632E38();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    char v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_2416329A8();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_2414A40D0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_24162B788();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_2414AE744();
  uint64_t v5 = sub_241632E38();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    id v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2414AF83C((unint64_t *)&qword_268CFEAB0, MEMORY[0x263F07508]);
      uint64_t result = sub_241631B68();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_2414A44C8(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  a2(0);
  uint64_t v5 = sub_241632E38();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    unint64_t v29 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    unint64_t v31 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v4 + 56);
    int64_t v30 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v9)
      {
        unint64_t v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v30) {
          goto LABEL_33;
        }
        unint64_t v17 = v31[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v17 = v31[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v30) {
              goto LABEL_33;
            }
            unint64_t v17 = v31[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v30)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v29;
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v31 = -1 << v28;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v17 = v31[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v30) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v31[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v4 + 48) + 8 * v15);
      _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
      sub_241633308();
      sub_241631DC8();
      uint64_t v20 = sub_241633358();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = v20 & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v6 + 48) + 8 * v13) = v19;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_2414A47DC()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_24162BFA8();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_2414AF668();
  uint64_t v5 = sub_241632E38();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    id v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      BOOL v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2414AF83C(&qword_26B00F228, MEMORY[0x263F45618]);
      uint64_t result = sub_241631B68();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_2414A4BD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2414AF000();
  uint64_t result = sub_241632E38();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_241633308();
      sub_241633318();
      uint64_t result = sub_241633358();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_2414A4E7C(uint64_t a1, uint64_t a2)
{
  sub_2416329A8();
  unint64_t result = sub_241632D28();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_2414A4F00(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2414A2DD0();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_2414A60BC();
      goto LABEL_14;
    }
    sub_2414A6E28();
  }
  uint64_t v8 = *v3;
  sub_241633308();
  sub_241633318();
  unint64_t result = sub_241633358();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      unint64_t result = sub_241633258();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_2414A5050(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_241631AC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2414A3078();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2414A6650(MEMORY[0x263F090E8], (void (*)(void))sub_2414AF884);
      goto LABEL_12;
    }
    sub_2414A70A0();
  }
  uint64_t v12 = *v3;
  sub_2414AF83C(&qword_268CFBDB8, MEMORY[0x263F090E8]);
  uint64_t v13 = sub_241631B68();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    int64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_2414AF83C((unint64_t *)&unk_268CFC5A0, MEMORY[0x263F090E8]);
      char v21 = sub_241631C28();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_241633258();
  __break(1u);
  return result;
}

uint64_t sub_2414A5318(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_24162BB18();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2414A3A38();
  }
  else
  {
    if (v12 > v11)
    {
      sub_2414A6650(MEMORY[0x263F07A30], (void (*)(void))sub_24125606C);
      goto LABEL_12;
    }
    sub_2414A799C();
  }
  uint64_t v13 = *v3;
  sub_2414AF83C((unint64_t *)&unk_268CFB7D0, MEMORY[0x263F07A30]);
  uint64_t v14 = sub_241631B68();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_2414AF83C((unint64_t *)&unk_268D01020, MEMORY[0x263F07A30]);
      char v22 = sub_241631C28();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_241633258();
  __break(1u);
  return result;
}

uint64_t sub_2414A55E0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_24162B788();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2414A40D0();
  }
  else
  {
    if (v12 > v11)
    {
      sub_2414A6650(MEMORY[0x263F07508], (void (*)(void))sub_2414AE744);
      goto LABEL_12;
    }
    sub_2414A7FC4();
  }
  uint64_t v13 = *v3;
  sub_2414AF83C((unint64_t *)&qword_268CFEAB0, MEMORY[0x263F07508]);
  uint64_t v14 = sub_241631B68();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_2414AF83C((unint64_t *)&unk_268D00E40, MEMORY[0x263F07508]);
      char v22 = sub_241631C28();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_241633258();
  __break(1u);
  return result;
}

uint64_t sub_2414A58A8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_24162BFA8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2414A47DC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2414A6650(MEMORY[0x263F45618], (void (*)(void))sub_2414AF668);
      goto LABEL_12;
    }
    sub_2414A8650();
  }
  uint64_t v12 = *v3;
  sub_2414AF83C(&qword_26B00F228, MEMORY[0x263F45618]);
  uint64_t v13 = sub_241631B68();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_2414AF83C(&qword_268D010B0, MEMORY[0x263F45618]);
      char v21 = sub_241631C28();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_241633258();
  __break(1u);
  return result;
}

uint64_t sub_2414A5B70(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_2414A4BD4();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2414A6C94();
      goto LABEL_14;
    }
    sub_2414A89FC();
  }
  uint64_t v8 = *v3;
  sub_241633308();
  sub_241633318();
  uint64_t result = sub_241633358();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for HKMCCycleFactor(0);
      uint64_t result = sub_241633258();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void sub_2414A5CC0(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = v11 + 1;
  if (a3)
  {
    sub_2414A379C(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_2414A646C(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_2414A7724(v13, a4, a5, a6, a7);
  }
  uint64_t v14 = *v7;
  uint64_t v15 = sub_2416329A8();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_2411B9D00(0, a5);
    id v17 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
    char v18 = sub_2416329B8();

    if (v18)
    {
LABEL_13:
      sub_241633258();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
        char v21 = sub_2416329B8();

        if (v21) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v22 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = a1;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v25;
  }
}

uint64_t sub_2414A5E78(uint64_t result, unint64_t a2, char a3, void (*a4)(void), void (*a5)(void))
{
  unint64_t v7 = v5;
  uint64_t v9 = result;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_2414A44C8(v12, a4);
  }
  else
  {
    if (v11 > v10)
    {
      uint64_t result = (uint64_t)sub_2414A6AE4(a4);
LABEL_22:
      uint64_t v29 = *v7;
      *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v29 + 48) + 8 * a2) = v9;
      uint64_t v30 = *(void *)(v29 + 16);
      BOOL v31 = __OFADD__(v30, 1);
      uint64_t v32 = v30 + 1;
      if (!v31)
      {
        *(void *)(v29 + 16) = v32;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_2414A8370(v12, a4);
  }
  uint64_t v13 = *v5;
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  sub_241633308();
  sub_241631DC8();
  uint64_t v14 = sub_241633358();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v16 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  uint64_t v18 = v17;
  if (v16 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v18 == v19)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v21 = sub_241633218();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    uint64_t v22 = ~v15;
    do
    {
      a2 = (a2 + 1) & v22;
      if (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v23 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
      uint64_t v25 = v24;
      if (v23 == _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() && v25 == v26) {
        goto LABEL_25;
      }
      char v28 = sub_241633218();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v28 & 1) == 0);
  }
LABEL_26:
  a5(0);
  uint64_t result = sub_241633258();
  __break(1u);
  return result;
}

void *sub_2414A60BC()
{
  uint64_t v1 = v0;
  sub_2411CAE78();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241632E28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2414A624C()
{
  return sub_2414A691C((void (*)(void))sub_2414AF1D8);
}

void *sub_2414A6264()
{
  return sub_2414A6650(MEMORY[0x263F090E8], (void (*)(void))sub_2414AF884);
}

void *sub_2414A6290()
{
  uint64_t v1 = v0;
  sub_2414AEDC8(0, (unint64_t *)&qword_26B0123C0, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F8DBD8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241632E28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)_s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2414A646C(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_2414AE85C(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_241632E28();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v5 = v8;
    return result;
  }
  id result = (id)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v10 + 8 * v13);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    unint64_t v21 = *(void **)(*(void *)(v6 + 48) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v17) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2414A6624()
{
  return sub_2414A6650(MEMORY[0x263F07A30], (void (*)(void))sub_24125606C);
}

void *sub_2414A6650(uint64_t (*a1)(void), void (*a2)(void))
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - v7;
  a2(0);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_241632E28();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    uint64_t *v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  uint64_t v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_2414A6904()
{
  return sub_2414A6AE4((void (*)(void))sub_2414AE978);
}

id sub_2414A691C(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_241632E28();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2414A6ACC()
{
  return sub_2414A6AE4((void (*)(void))sub_2414AEE9C);
}

id sub_2414A6AE4(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_241632E28();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2414A6C94()
{
  uint64_t v1 = v0;
  sub_2414AF000();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241632E28();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2414A6E28()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2411CAE78();
  uint64_t result = sub_241632E38();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_241633308();
    sub_241633318();
    uint64_t result = sub_241633358();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2414A70A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241631AC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_2414AF884();
  uint64_t v7 = sub_241632E38();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2414AF83C(&qword_268CFBDB8, MEMORY[0x263F090E8]);
    uint64_t result = sub_241631B68();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2414A744C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2414AEDC8(0, (unint64_t *)&qword_26B0123C0, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F8DBD8]);
  uint64_t v3 = sub_241632E38();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_241633308();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241631DC8();
    uint64_t result = sub_241633358();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2414A7724(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_2414AE85C(0, a2, a3, a4, a5);
  uint64_t v8 = sub_241632E38();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v6 = v9;
    return result;
  }
  uint64_t v32 = v5;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v7 + 56);
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v15 = v8 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    id v24 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    uint64_t result = sub_2416329A8();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
    ++*(void *)(v9 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v32;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2414A799C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162BB18();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_24125606C();
  uint64_t v7 = sub_241632E38();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2414AF83C((unint64_t *)&unk_268CFB7D0, MEMORY[0x263F07A30]);
    uint64_t result = sub_241631B68();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2414A7D48(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  a2(0);
  uint64_t v5 = sub_241632E38();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  char v29 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_2416329A8();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2414A7FC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162B788();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_2414AE744();
  uint64_t v7 = sub_241632E38();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2414AF83C((unint64_t *)&qword_268CFEAB0, MEMORY[0x263F07508]);
    uint64_t result = sub_241631B68();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2414A8370(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  a2(0);
  uint64_t v5 = sub_241632E38();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  char v29 = v2;
  uint64_t v30 = v4 + 56;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v31) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v30 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v30 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    unint64_t v19 = *(void **)(*(void *)(v4 + 48) + 8 * v15);
    _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    sub_241633308();
    id v20 = v19;
    sub_241631DC8();
    uint64_t v21 = sub_241633358();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v6 + 48) + 8 * v13) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v30 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v31) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2414A8650()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162BFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_2414AF668();
  uint64_t v7 = sub_241632E38();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2414AF83C(&qword_26B00F228, MEMORY[0x263F45618]);
    uint64_t result = sub_241631B68();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2414A89FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2414AF000();
  uint64_t result = sub_241632E38();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_241633308();
    sub_241633318();
    uint64_t result = sub_241633358();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2414A8C74(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_2414A13F0();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2414A8CF0(v6);
  return sub_241632F28();
}

void sub_2414A8CF0(uint64_t *a1)
{
  uint64_t v136 = sub_24162B718();
  uint64_t v2 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v135 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v134 = (char *)&v121 - v5;
  uint64_t v6 = a1[1];
  uint64_t v7 = sub_2416331C8();
  if (v7 >= v6)
  {
    if (v6 < 0) {
      goto LABEL_134;
    }
    if (v6) {
      sub_2414A9688(0, v6, 1, a1);
    }
    return;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_142;
  }
  uint64_t v126 = v7;
  if (v6 < 2)
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
    uint64_t v139 = MEMORY[0x263F8EE78];
    uint64_t v131 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      unint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_100:
      uint64_t v112 = v132;
      if (v14 >= 2)
      {
        uint64_t v113 = *a1;
        do
        {
          unint64_t v114 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_129;
          }
          if (!v113) {
            goto LABEL_141;
          }
          uint64_t v115 = v11;
          uint64_t v116 = v11 + 32;
          uint64_t v117 = *(void *)&v11[16 * v114 + 32];
          uint64_t v118 = *(void *)&v11[16 * v14 + 24];
          sub_2414A98C0(v113 + 8 * v117, (id *)(v113 + 8 * *(void *)&v116[16 * v14 - 16]), (id *)(v113 + 8 * v118), v131);
          if (v112) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_130;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v115 = sub_2414AA258((uint64_t)v115);
          }
          if (v114 >= *((void *)v115 + 2)) {
            goto LABEL_131;
          }
          uint64_t v119 = &v115[16 * v114 + 32];
          *(void *)uint64_t v119 = v117;
          *((void *)v119 + 1) = v118;
          unint64_t v120 = *((void *)v115 + 2);
          if (v14 > v120) {
            goto LABEL_132;
          }
          uint64_t v11 = v115;
          memmove(&v115[16 * v14 + 16], &v115[16 * v14 + 32], 16 * (v120 - v14));
          *((void *)v115 + 2) = v120 - 1;
          unint64_t v14 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_241631F48();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
    uint64_t v10 = sub_241631F88();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v131 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v139 = v10;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v133 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v124 = v13 + 16;
  uint64_t v122 = a1;
  uint64_t v123 = v13 - 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v129 = v6;
  uint64_t v137 = v13;
  while (1)
  {
    uint64_t v15 = v12;
    uint64_t v16 = v12 + 1;
    uint64_t v128 = v12;
    if (v12 + 1 < v6)
    {
      int64_t v17 = *(void **)(v13 + 8 * v12);
      id v18 = *(id *)(v13 + 8 * v16);
      id v19 = v17;
      id v20 = objc_msgSend(v18, sel_endDate);
      unint64_t v21 = v134;
      sub_24162B6A8();

      id v22 = objc_msgSend(v19, sel_endDate);
      unint64_t v23 = v135;
      sub_24162B6A8();

      LODWORD(v138) = sub_24162B678();
      BOOL v24 = *v133;
      uint64_t v25 = v23;
      uint64_t v26 = v136;
      (*v133)(v25, v136);
      v24(v21, v26);

      uint64_t v6 = v129;
      uint64_t v16 = v15 + 2;
      if (v15 + 2 < v6)
      {
        uint64_t v125 = v11;
        unint64_t v27 = (id *)(v124 + 8 * v15);
        while (1)
        {
          unint64_t v28 = *(v27 - 1);
          id v29 = *v27;
          id v30 = v28;
          id v31 = objc_msgSend(v29, sel_endDate);
          uint64_t v32 = v134;
          sub_24162B6A8();

          id v33 = objc_msgSend(v30, sel_endDate);
          uint64_t v34 = v135;
          sub_24162B6A8();

          LODWORD(v33) = sub_24162B678();
          uint64_t v35 = v34;
          uint64_t v36 = v136;
          v24(v35, v136);
          v24(v32, v36);

          if ((v138 ^ v33)) {
            break;
          }
          ++v27;
          uint64_t v6 = v129;
          if (v129 == ++v16)
          {
            uint64_t v16 = v129;
            uint64_t v11 = v125;
            goto LABEL_22;
          }
        }
        uint64_t v11 = v125;
        uint64_t v6 = v129;
LABEL_22:
        uint64_t v15 = v128;
      }
      uint64_t v13 = v137;
      if (v138)
      {
        if (v16 < v15) {
          goto LABEL_135;
        }
        if (v15 < v16)
        {
          uint64_t v37 = (uint64_t *)(v123 + 8 * v16);
          uint64_t v38 = v16;
          uint64_t v39 = v15;
          int64_t v40 = (uint64_t *)(v137 + 8 * v15);
          do
          {
            if (v39 != --v38)
            {
              if (!v13) {
                goto LABEL_140;
              }
              uint64_t v41 = *v40;
              uint64_t *v40 = *v37;
              *uint64_t v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v16 >= v6) {
      goto LABEL_50;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_133;
    }
    if (v16 - v15 >= v126) {
      goto LABEL_50;
    }
    if (__OFADD__(v15, v126)) {
      goto LABEL_136;
    }
    uint64_t v42 = v15 + v126 >= v6 ? v6 : v15 + v126;
    if (v42 < v15) {
      break;
    }
    if (v16 != v42)
    {
      uint64_t v125 = v11;
      uint64_t v43 = v123 + 8 * v16;
      uint64_t v127 = v42;
      do
      {
        uint64_t v44 = *(void **)(v13 + 8 * v16);
        uint64_t v45 = v15;
        uint64_t v130 = v43;
        while (1)
        {
          uint64_t v46 = v16;
          int v47 = *(void **)v43;
          id v48 = v44;
          id v138 = v48;
          id v49 = v47;
          id v50 = objc_msgSend(v48, sel_endDate);
          uint64_t v51 = v134;
          sub_24162B6A8();

          id v52 = objc_msgSend(v49, sel_endDate);
          char v53 = v135;
          sub_24162B6A8();

          LOBYTE(v52) = sub_24162B678();
          uint64_t v54 = *v133;
          char v55 = v53;
          uint64_t v56 = v136;
          (*v133)(v55, v136);
          v54(v51, v56);

          if ((v52 & 1) == 0) {
            break;
          }
          uint64_t v13 = v137;
          if (!v137) {
            goto LABEL_138;
          }
          uint64_t v16 = v46;
          uint64_t v57 = *(void **)v43;
          uint64_t v44 = *(void **)(v43 + 8);
          *(void *)uint64_t v43 = v44;
          *(void *)(v43 + 8) = v57;
          v43 -= 8;
          if (v46 == ++v45) {
            goto LABEL_43;
          }
        }
        uint64_t v13 = v137;
        uint64_t v16 = v46;
LABEL_43:
        ++v16;
        uint64_t v43 = v130 + 8;
        uint64_t v15 = v128;
      }
      while (v16 != v127);
      uint64_t v16 = v127;
      uint64_t v11 = v125;
    }
LABEL_50:
    if (v16 < v15) {
      goto LABEL_128;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v138 = (id)v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v11 = sub_2414A9DD0(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v60 = *((void *)v11 + 2);
    unint64_t v59 = *((void *)v11 + 3);
    unint64_t v14 = v60 + 1;
    uint64_t v13 = v137;
    if (v60 >= v59 >> 1)
    {
      BOOL v111 = sub_2414A9DD0((char *)(v59 > 1), v60 + 1, 1, v11);
      uint64_t v13 = v137;
      uint64_t v11 = v111;
    }
    *((void *)v11 + 2) = v14;
    uint64_t v61 = v11 + 32;
    BOOL v62 = &v11[16 * v60 + 32];
    id v63 = v138;
    *(void *)BOOL v62 = v15;
    *((void *)v62 + 1) = v63;
    if (v60)
    {
      while (1)
      {
        unint64_t v64 = v14 - 1;
        if (v14 >= 4)
        {
          uint64_t v69 = &v61[16 * v14];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_117;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_118;
          }
          unint64_t v76 = v14 - 2;
          uint64_t v77 = &v61[16 * v14 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_120;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_123;
          }
          if (v81 >= v72)
          {
            unint64_t v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_127;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v93 = *((void *)v11 + 4);
            uint64_t v94 = *((void *)v11 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_81;
          }
          uint64_t v66 = *((void *)v11 + 4);
          uint64_t v65 = *((void *)v11 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_119;
        }
        unint64_t v76 = v14 - 2;
        uint64_t v82 = &v61[16 * v14 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_122;
        }
        uint64_t v88 = &v61[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_125;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_126;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_87:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v87) {
          goto LABEL_121;
        }
        unint64_t v95 = &v61[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_124;
        }
        if (v98 < v86) {
          goto LABEL_14;
        }
LABEL_89:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v14)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v13) {
          goto LABEL_139;
        }
        char v104 = v11;
        uint64_t v105 = &v61[16 * v103];
        uint64_t v106 = *(void *)v105;
        uint64_t v107 = &v61[16 * v64];
        uint64_t v108 = *((void *)v107 + 1);
        uint64_t v109 = v132;
        sub_2414A98C0(v13 + 8 * *(void *)v105, (id *)(v13 + 8 * *(void *)v107), (id *)(v13 + 8 * v108), v131);
        uint64_t v132 = v109;
        if (v109) {
          goto LABEL_111;
        }
        if (v108 < v106) {
          goto LABEL_114;
        }
        if (v64 > *((void *)v104 + 2)) {
          goto LABEL_115;
        }
        *(void *)uint64_t v105 = v106;
        *(void *)&v61[16 * v103 + 8] = v108;
        unint64_t v110 = *((void *)v104 + 2);
        if (v64 >= v110) {
          goto LABEL_116;
        }
        uint64_t v11 = v104;
        unint64_t v14 = v110 - 1;
        memmove(&v61[16 * v64], v107 + 16, 16 * (v110 - 1 - v64));
        *((void *)v104 + 2) = v110 - 1;
        uint64_t v13 = v137;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_14:
    uint64_t v6 = v129;
    uint64_t v12 = (uint64_t)v138;
    if ((uint64_t)v138 >= v129)
    {
      a1 = v122;
      goto LABEL_100;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  sub_241633028();
  __break(1u);
}

void sub_2414A9688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v30 = a1;
  uint64_t v35 = sub_24162B718();
  MEMORY[0x270FA5388](v35);
  uint64_t v34 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v33 = (char *)&v28 - v10;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    uint64_t v32 = v9 + 8;
    uint64_t v36 = v11;
    uint64_t v12 = v11 + 8 * a3 - 8;
    uint64_t v13 = (void (**)(char *, uint64_t))(v9 + 8);
LABEL_5:
    unint64_t v14 = *(void **)(v36 + 8 * a3);
    uint64_t v15 = v30;
    uint64_t v31 = v12;
    while (1)
    {
      uint64_t v16 = *(void **)v12;
      id v17 = v14;
      id v37 = v17;
      id v18 = v16;
      id v19 = objc_msgSend(v17, sel_endDate);
      id v20 = v33;
      sub_24162B6A8();

      id v21 = objc_msgSend(v18, sel_endDate);
      id v22 = v34;
      sub_24162B6A8();

      LOBYTE(v21) = sub_24162B678();
      uint64_t v23 = a3;
      BOOL v24 = *v13;
      uint64_t v25 = v22;
      uint64_t v26 = v35;
      (*v13)(v25, v35);
      v24(v20, v26);
      a3 = v23;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v23 + 1;
        uint64_t v12 = v31 + 8;
        if (v23 + 1 == v29) {
          return;
        }
        goto LABEL_5;
      }
      if (!v36) {
        break;
      }
      unint64_t v27 = *(void **)v12;
      unint64_t v14 = *(void **)(v12 + 8);
      *(void *)uint64_t v12 = v14;
      *(void *)(v12 + 8) = v27;
      v12 -= 8;
      if (v23 == ++v15) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_2414A98C0(uint64_t a1, id *a2, id *a3, void **a4)
{
  uint64_t v57 = sub_24162B718();
  uint64_t v8 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v56 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v54 = a3;
  char v55 = (char *)&v48 - v12;
  uint64_t v13 = (uint64_t)a2 - a1;
  uint64_t v14 = v13 / 8;
  uint64_t v15 = a2;
  uint64_t v16 = (char *)a3 - (char *)a2;
  uint64_t v17 = v16 / 8;
  uint64_t v61 = v11;
  unint64_t v60 = a4;
  uint64_t v58 = v11;
  if (v13 / 8 >= v16 / 8)
  {
    if (v16 < -7) {
      goto LABEL_41;
    }
    if (a4 != v15 || &v15[v17] <= a4)
    {
      memmove(a4, v15, 8 * v17);
      uint64_t v11 = v58;
    }
    uint64_t v31 = &a4[v17];
    unint64_t v59 = v31;
    uint64_t v61 = v15;
    if (v16 < 8 || v11 >= v15) {
      goto LABEL_40;
    }
    id v49 = (void (**)(char *, uint64_t))(v8 + 8);
    id v50 = a4;
    uint64_t v32 = v54 - 1;
    id v33 = v15;
    while (1)
    {
      uint64_t v54 = v15;
      id v52 = v31;
      char v53 = v32 + 1;
      uint64_t v35 = v31 - 1;
      uint64_t v36 = *--v33;
      id v37 = *(v31 - 1);
      id v51 = v37;
      id v38 = v36;
      id v39 = objc_msgSend(v37, sel_endDate);
      int64_t v40 = v55;
      sub_24162B6A8();

      id v41 = objc_msgSend(v38, sel_endDate);
      uint64_t v42 = v56;
      sub_24162B6A8();

      LOBYTE(v41) = sub_24162B678();
      uint64_t v43 = *v49;
      uint64_t v44 = v42;
      uint64_t v45 = v57;
      (*v49)(v44, v57);
      v43(v40, v45);

      if (v41) {
        break;
      }
      unint64_t v59 = v35;
      if (v53 < v52 || v32 >= v52)
      {
        id *v32 = *v35;
        id v33 = v54;
        uint64_t v31 = v35;
        goto LABEL_28;
      }
      unint64_t v46 = (unint64_t)v50;
      uint64_t v34 = v58;
      id v33 = v54;
      if (v53 != v52) {
        id *v32 = *v35;
      }
      uint64_t v31 = v35;
      if ((unint64_t)v35 <= v46) {
        goto LABEL_40;
      }
LABEL_29:
      --v32;
      uint64_t v15 = v33;
      if (v33 <= v34) {
        goto LABEL_40;
      }
    }
    uint64_t v31 = v52;
    if (v53 != v54 || v32 >= v54) {
      id *v32 = *v33;
    }
    uint64_t v61 = v33;
LABEL_28:
    uint64_t v34 = v58;
    if (v31 <= v50) {
      goto LABEL_40;
    }
    goto LABEL_29;
  }
  if (v13 >= -7)
  {
    if (a4 != v11 || &v11[v14] <= a4)
    {
      memmove(a4, v58, 8 * v14);
      uint64_t v11 = v58;
    }
    char v53 = &a4[v14];
    unint64_t v59 = v53;
    if (v13 >= 8 && v15 < v54)
    {
      id v52 = (void **)(v8 + 8);
      id v18 = v55;
      do
      {
        uint64_t v58 = v11;
        id v19 = *a4;
        id v20 = *v15;
        id v21 = v19;
        id v22 = a4;
        id v23 = objc_msgSend(v20, sel_endDate);
        sub_24162B6A8();

        id v24 = objc_msgSend(v21, sel_endDate);
        uint64_t v25 = v56;
        sub_24162B6A8();

        LOBYTE(v24) = sub_24162B678();
        uint64_t v26 = (void (*)(char *, uint64_t))*v52;
        unint64_t v27 = v25;
        uint64_t v28 = v57;
        ((void (*)(char *, uint64_t))*v52)(v27, v57);
        v26(v18, v28);

        if (v24)
        {
          a4 = v22;
          unint64_t v29 = (unint64_t)(v15 + 1);
          uint64_t v30 = v58;
          if (v58 < v15 || (unint64_t)v58 >= v29 || v58 != v15) {
            *uint64_t v58 = *v15;
          }
        }
        else
        {
          uint64_t v30 = v58;
          if (v58 != v22) {
            *uint64_t v58 = *v22;
          }
          a4 = v22 + 1;
          unint64_t v60 = v22 + 1;
          unint64_t v29 = (unint64_t)v15;
        }
        uint64_t v11 = v30 + 1;
        uint64_t v61 = v11;
        if (a4 >= v53) {
          break;
        }
        uint64_t v15 = (id *)v29;
      }
      while (v29 < (unint64_t)v54);
    }
LABEL_40:
    sub_2414A9F6C((void **)&v61, (const void **)&v60, &v59);
    return 1;
  }
LABEL_41:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

char *sub_2414A9DD0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2414AE7D8();
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_1(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2414A9EC8(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  int64_t v4 = *a3 - (void)v3;
  if (v4 < 0)
  {
    uint64_t result = (char *)sub_2416330E8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
    {
      return (char *)memmove(result, v3, v4);
    }
  }
  return result;
}

char *sub_2414A9F6C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_2416330E8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_2414AA028(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_2414AA058(a1, a2, a3, type metadata accessor for InternalLiveOnDevicesModel.Device);
}

uint64_t sub_2414AA040(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_2414AA058(a1, a2, a3, MEMORY[0x263F063B0]);
}

uint64_t sub_2414AA058(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_2416330E8();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_2414AA19C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_2416330E8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_2414AA258(uint64_t a1)
{
  return sub_2414A9DD0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_2414AA26C(uint64_t a1, int64_t a2, uint64_t a3, char a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *v4;
  int64_t v7 = *((void *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v11 > *((void *)v6 + 3) >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t result = (char *)sub_24158BFD4(result, v15, 1, v6);
    uint64_t v6 = result;
  }
  uint64_t v16 = (uint64_t)&v6[16 * a1 + 32];
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v17 = *((void *)v6 + 2);
  BOOL v18 = __OFSUB__(v17, a2);
  uint64_t v19 = v17 - a2;
  if (v18) {
    goto LABEL_26;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 16);
    id v20 = &v6[16 * a2 + 32];
    size_t v21 = 16 * v19;
    if ((char *)(v16 + 16) != v20 || result >= &v20[v21]) {
      uint64_t result = (char *)memmove(result, v20, v21);
    }
    uint64_t v22 = *((void *)v6 + 2);
    BOOL v18 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v18)
    {
      *((void *)v6 + 2) = v23;
LABEL_20:
      *(void *)uint64_t v16 = a3;
      *(unsigned char *)(v16 + 8) = a4 & 1;
      uint64_t *v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_2416330E8();
  __break(1u);
  return result;
}

char *sub_2414AA3E4(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_24158BCCC(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[2 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 2);
    size_t v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      uint64_t v6[2] = v23;
LABEL_20:
      *uint64_t v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_2416330E8();
  __break(1u);
  return result;
}

char *sub_2414AA568(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2414AA754(a1, a2, a3, (uint64_t (*)(void))sub_24158CBA8);
}

char *sub_2414AA580(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2414AA5C8(a1, a2, a3, (uint64_t (*)(void))sub_24158CBBC);
}

char *sub_2414AA598(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2414AA754(a1, a2, a3, (uint64_t (*)(void))sub_24158C158);
}

char *sub_2414AA5B0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2414AA5C8(a1, a2, a3, (uint64_t (*)(void))sub_24158D038);
}

char *sub_2414AA5C8(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *((void *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v7 + v10 > *((void *)v6 + 3) >> 1)
  {
    uint64_t result = (char *)a4();
    uint64_t v6 = result;
  }
  uint64_t v14 = v6 + 32;
  int64_t v15 = &v6[a1 + 32];
  if (!v10) {
    goto LABEL_17;
  }
  uint64_t v16 = *((void *)v6 + 2);
  size_t v17 = v16 - a2;
  if (__OFSUB__(v16, a2)) {
    goto LABEL_23;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t result = v15 + 1;
    uint64_t v18 = &v14[a2];
    if (v15 + 1 != &v14[a2] || result >= &v18[v17]) {
      uint64_t result = (char *)memmove(result, v18, v17);
    }
    uint64_t v19 = *((void *)v6 + 2);
    BOOL v20 = __OFADD__(v19, v10);
    uint64_t v21 = v19 + v10;
    if (!v20)
    {
      *((void *)v6 + 2) = v21;
LABEL_17:
      *int64_t v15 = a3 & 1;
      uint64_t *v4 = v6;
      return result;
    }
    goto LABEL_24;
  }
LABEL_25:
  uint64_t result = (char *)sub_2416330E8();
  __break(1u);
  return result;
}

char *sub_2414AA73C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2414AA754(a1, a2, a3, (uint64_t (*)(void))sub_24158C144);
}

char *sub_2414AA754(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *((void *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v7 + v10 > *((void *)v6 + 3) >> 1)
  {
    uint64_t result = (char *)a4();
    uint64_t v6 = result;
  }
  uint64_t v14 = v6 + 32;
  int64_t v15 = &v6[a1 + 32];
  if (!v10) {
    goto LABEL_17;
  }
  uint64_t v16 = *((void *)v6 + 2);
  size_t v17 = v16 - a2;
  if (__OFSUB__(v16, a2)) {
    goto LABEL_23;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t result = v15 + 1;
    uint64_t v18 = &v14[a2];
    if (v15 + 1 != &v14[a2] || result >= &v18[v17]) {
      uint64_t result = (char *)memmove(result, v18, v17);
    }
    uint64_t v19 = *((void *)v6 + 2);
    BOOL v20 = __OFADD__(v19, v10);
    uint64_t v21 = v19 + v10;
    if (!v20)
    {
      *((void *)v6 + 2) = v21;
LABEL_17:
      *int64_t v15 = a3;
      uint64_t *v4 = v6;
      return result;
    }
    goto LABEL_24;
  }
LABEL_25:
  uint64_t result = (char *)sub_2416330E8();
  __break(1u);
  return result;
}

char *sub_2414AA8C4(uint64_t a1)
{
  return sub_24158B7A8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_2414AA8DC(void *a1)
{
  return sub_24158B9A4(0, a1[2], 0, a1);
}

void sub_2414AA8F0(unint64_t a1)
{
  if (a1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241633068();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x245620380);
}

char *sub_2414AA96C(uint64_t a1)
{
  return sub_24158C144(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_2414AA980(uint64_t a1)
{
  return sub_24158C158(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_2414AA994(void *a1)
{
  return sub_24158BCCC(0, a1[2], 0, a1);
}

void *sub_2414AA9A8(void *a1)
{
  return sub_24158C730(0, a1[2], 0, a1);
}

uint64_t sub_2414AA9BC(unint64_t a1)
{
  return sub_24158C8B0(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_2414AA9D0(void *a1)
{
  return sub_24158B66C(0, a1[2], 0, a1);
}

char *sub_2414AA9E4(uint64_t a1)
{
  return sub_24158CBBC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_2414AA9F8(uint64_t a1)
{
  return sub_24158D038(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_2414AAA0C(uint64_t a1)
{
  return sub_24158D04C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t (*sub_2414AAA20(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2414AAB3C(v6, a2, a3);
  return sub_2414AAA88;
}

uint64_t (*sub_2414AAA8C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2414AABBC(v6, a2, a3);
  return sub_2414AAA88;
}

void sub_2414AAAF4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_2414AAB3C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x245620370](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for CycleDeviationsUpdateTileGeneratorPipeline.Change;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_2414AABBC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x245620370](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s24MenstrualCyclesAppPlugin42CycleDeviationsUpdateTileGeneratorPipelineV6ChangeVwxx;
  }
  __break(1u);
  return result;
}

uint64_t sub_2414AAC3C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = sub_241633068();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v10 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_24149D024(0, (unint64_t *)&qword_268CFB1B0, (unint64_t *)&qword_26B012390, 0x263F0A150, MEMORY[0x263F8D488]);
        sub_2414AE660();
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2414AAA8C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414AAE78(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = sub_241633068();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v10 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_24149D024(0, &qword_268D010D0, (unint64_t *)&qword_26B012368, 0x263F0A6E8, MEMORY[0x263F8D488]);
        sub_2414AF7B8();
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2414AAA20(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2411B9D00(0, (unint64_t *)&qword_26B012368);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414AB0B4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = sub_241633068();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v10 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_24149D024(0, &qword_268D01070, (unint64_t *)&qword_26B00E610, 0x263F45130, MEMORY[0x263F8D488]);
        sub_2414AF4B8();
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2414AAA8C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2411B9D00(0, (unint64_t *)&qword_26B00E610);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414AB2F0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = sub_241633068();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v10 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_24149D024(0, &qword_268D010F8, (unint64_t *)&qword_268D01100, 0x263F825A0, MEMORY[0x263F8D488]);
        sub_2414AF918();
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2414AAA8C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2411B9D00(0, (unint64_t *)&qword_268D01100);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414AB52C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = sub_241633068();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v10 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_24149D024(0, (unint64_t *)&unk_268D01090, (unint64_t *)&qword_26B012130, 0x263F08938, MEMORY[0x263F8D488]);
        sub_2414AF53C();
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2414AAA8C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2411B9D00(0, (unint64_t *)&qword_26B012130);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414AB768(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = sub_241633068();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v10 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_24149D024(0, &qword_268D00F28, &qword_268D00F20, 0x263F44C18, MEMORY[0x263F8D488]);
        sub_2414AEE18();
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2414AAA8C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2411B9D00(0, &qword_268D00F20);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414AB9A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    BOOL v7 = 0;
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    BOOL v7 = 0;
LABEL_14:
    uint64_t v8 = a4;
LABEL_15:
    *(void *)uint64_t result = a4;
    *(void *)(result + 8) = a5;
    *(void *)(result + 16) = v8;
    *(unsigned char *)(result + 24) = v7;
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_17;
  }
  uint64_t v5 = 0;
  uint64_t v6 = a4;
  while (1)
  {
    BOOL v7 = v6 == a5;
    if (v6 != a5) {
      break;
    }
    uint64_t v8 = 0;
LABEL_8:
    *(void *)(a2 + 8 * v5) = v6;
    if (a3 - 1 == v5) {
      goto LABEL_15;
    }
    ++v5;
    BOOL v9 = v6 == a5;
    uint64_t v6 = v8;
    if (v9)
    {
      BOOL v7 = 1;
      a3 = v5;
      goto LABEL_15;
    }
  }
  uint64_t v8 = v6 + 1;
  if (!__OFADD__(v6, 1)) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

void *sub_2414ABA30(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  id v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_241632D48();
    sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
    sub_2411A01FC((unint64_t *)&qword_268D00FE0, (unint64_t *)&qword_26B012390);
    uint64_t result = (void *)sub_241632118();
    uint64_t v4 = v27;
    uint64_t v7 = v28;
    uint64_t v8 = v29;
    int64_t v9 = v30;
    unint64_t v10 = v31;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v11 = 0;
    goto LABEL_38;
  }
  int64_t v9 = 0;
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = a4 + 56;
  uint64_t v8 = ~v19;
  uint64_t v20 = -v19;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v10 = v21 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v11 = 0;
LABEL_38:
    uint64_t v22 = v24;
LABEL_41:
    *uint64_t v22 = v4;
    v22[1] = v7;
    void v22[2] = v8;
    v22[3] = v9;
    v22[4] = v10;
    return (void *)v11;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v11 = 0;
  int64_t v25 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_241632DC8()) {
        goto LABEL_40;
      }
      sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v25)
    {
      unint64_t v10 = 0;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    if (v16) {
      goto LABEL_23;
    }
    int64_t v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      unint64_t v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25) {
        goto LABEL_44;
      }
      unint64_t v16 = *(void *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        int64_t v15 = v9 + 3;
        goto LABEL_23;
      }
      int64_t v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        unint64_t v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v17);
      if (!v16)
      {
        int64_t v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          unint64_t v10 = 0;
          int64_t v9 = v17;
          goto LABEL_40;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v15);
        if (!v16)
        {
          int64_t v18 = v9 + 6;
          while (v25 != v18)
          {
            unint64_t v16 = *(void *)(v7 + 8 * v18++);
            if (v16)
            {
              int64_t v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v10 = 0;
          int64_t v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v15 = v17;
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v9 = v15;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    id v14 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      uint64_t v11 = a3;
LABEL_40:
      uint64_t v8 = v23;
      uint64_t v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void sub_2414ABD50(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  sub_2414AFD04(0, &qword_268CFB348, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = sub_24162B138();
  uint64_t v42 = *(void *)(v11 - 8);
  __n128 v12 = MEMORY[0x270FA5388](v11);
  id v41 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a4;
  uint64_t v15 = a4 + 64;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  if (-v33 < 64) {
    uint64_t v16 = ~(-1 << -(char)v33);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
LABEL_39:
    uint64_t v29 = ~v33;
    *a1 = v43;
    a1[1] = v15;
    a1[2] = v29;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v37 = a3;
  int64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = v41;
  uint64_t v39 = v42 + 16;
  int64_t v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v42 + 56);
  uint64_t v38 = v42 + 48;
  uint64_t v36 = (void (**)(char *, char *, uint64_t))(v42 + 32);
  uint64_t v34 = v15;
  int64_t v35 = (unint64_t)(63 - v33) >> 6;
  int64_t v31 = v35 - 1;
  uint64_t v32 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v22 = v21 | (v18 << 6);
  while (1)
  {
    uint64_t v26 = v42;
    uint64_t v27 = *(void *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v42 + 16))(v10, *(void *)(v43 + 48) + v27 * v22, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v34;
      goto LABEL_38;
    }
    ++v19;
    uint64_t v28 = *v36;
    (*v36)(v20, v10, v11);
    v28(a2, v20, v11);
    if (v19 == v37)
    {
      a1 = v32;
      uint64_t v15 = v34;
      goto LABEL_39;
    }
    a2 += v27;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v34;
    if (v23 >= v35) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v34 + 8 * v23);
    if (!v24)
    {
      int64_t v25 = v18 + 2;
      ++v18;
      if (v23 + 1 >= v35) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v34 + 8 * v25);
      if (v24) {
        goto LABEL_14;
      }
      int64_t v18 = v23 + 1;
      if (v23 + 2 >= v35) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v34 + 8 * (v23 + 2));
      if (v24)
      {
        v23 += 2;
      }
      else
      {
        int64_t v18 = v23 + 2;
        if (v23 + 3 >= v35) {
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v34 + 8 * (v23 + 3));
        if (!v24)
        {
          int64_t v25 = v23 + 4;
          int64_t v18 = v23 + 3;
          if (v23 + 4 < v35)
          {
            unint64_t v24 = *(void *)(v34 + 8 * v25);
            if (!v24)
            {
              while (1)
              {
                int64_t v23 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_42;
                }
                if (v23 >= v35)
                {
                  int64_t v18 = v31;
                  goto LABEL_37;
                }
                unint64_t v24 = *(void *)(v34 + 8 * v23);
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v23 = v25;
            goto LABEL_21;
          }
LABEL_37:
          (*v40)(v10, 1, 1, v11, v12);
          unint64_t v17 = 0;
LABEL_38:
          sub_2414AEF90((uint64_t)v10, &qword_268CFB348, MEMORY[0x263F063B0]);
          a1 = v32;
          goto LABEL_39;
        }
        v23 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v18 = v23;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_2414AC180(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    *(unsigned char *)uint64_t v11 = *(unsigned char *)(*(void *)(a4 + 48) + v16);
    *(void *)(v11 + 8) = v20;
    if (v13 == v10)
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      goto LABEL_38;
    }
    v11 += 16;
    uint64_t result = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2414AC384(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2414AC464;
  return v5(v2 + 32);
}

uint64_t sub_2414AC464()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_2414AC578(uint64_t a1, char a2, uint64_t a3, char a4)
{
  sub_2411B9D00(0, (unint64_t *)&qword_26B012200);
  if (sub_2416329B8())
  {
    if (a2) {
      unint64_t v6 = 0x6765725074736150;
    }
    else {
      unint64_t v6 = 0xD000000000000010;
    }
    if (a2) {
      unint64_t v7 = 0xED000079636E616ELL;
    }
    else {
      unint64_t v7 = 0x8000000241656470;
    }
    if (a4) {
      unint64_t v8 = 0x6765725074736150;
    }
    else {
      unint64_t v8 = 0xD000000000000010;
    }
    if (a4) {
      unint64_t v9 = 0xED000079636E616ELL;
    }
    else {
      unint64_t v9 = 0x8000000241656470;
    }
    if (v6 == v8 && v7 == v9) {
      char v10 = 1;
    }
    else {
      char v10 = sub_241633218();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_2414AC678(unint64_t a1)
{
  return sub_2411B96F8(a1, (unint64_t *)&qword_26B012390, 0x263F0A150, (unint64_t *)&qword_268D00FE0, (void (*)(void))sub_2414AF1D8);
}

uint64_t sub_2414AC6A8(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v31 = a2;
  uint64_t v30 = sub_24162B788();
  uint64_t v5 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  unint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    if (!v8) {
      return v9;
    }
    uint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t result = sub_24149E5E4(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v11 = 0;
    uint64_t v9 = v35;
    unint64_t v27 = a1 & 0xC000000000000001;
    uint64_t v28 = v8;
    unint64_t v25 = v3;
    uint64_t v26 = (void (**)(char *, uint64_t))(v5 + 8);
    unint64_t v29 = a1;
    while (v8 != v11)
    {
      if (v27) {
        id v12 = (id)MEMORY[0x245620370](v11, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v11 + 32);
      }
      uint64_t v13 = v12;
      uint64_t v14 = type metadata accessor for PregnancyItem();
      uint64_t v5 = swift_allocObject();
      id v15 = v13;
      sub_24162B778();
      sub_24162B738();
      (*v26)(v7, v30);
      strcpy((char *)v32, "PregnancyItem");
      HIWORD(v32[1]) = -4864;
      sub_241631E08();
      swift_bridgeObjectRelease();
      uint64_t v16 = v32[1];
      *(void *)(v5 + 16) = v32[0];
      *(void *)(v5 + 24) = v16;
      *(void *)(v5 + 56) = 0;
      swift_unknownObjectWeakInit();
      *(void *)(v5 + 32) = v15;
      *(unsigned char *)(v5 + 40) = 0;
      *(void *)(v5 + 56) = &off_26F574088;
      swift_unknownObjectWeakAssign();
      uint64_t v33 = v14;
      uint64_t v34 = sub_2414AF83C((unint64_t *)&unk_268D00E30, (void (*)(uint64_t))type metadata accessor for PregnancyItem);

      v32[0] = v5;
      uint64_t v35 = v9;
      unint64_t v3 = *(void *)(v9 + 16);
      unint64_t v17 = *(void *)(v9 + 24);
      if (v3 >= v17 >> 1) {
        sub_24149E5E4(v17 > 1, v3 + 1, 1);
      }
      ++v11;
      uint64_t v18 = v33;
      uint64_t v19 = v34;
      uint64_t v20 = sub_241192BB0((uint64_t)v32, v33);
      __n128 v21 = MEMORY[0x270FA5388](v20);
      int64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v24 + 16))(v23, v21);
      sub_2413F439C(v3, (uint64_t)v23, &v35, v18, v19);
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v32);
      uint64_t v9 = v35;
      uint64_t v8 = v28;
      a1 = v29;
      if (v28 == v11) {
        return v9;
      }
    }
    __break(1u);
LABEL_15:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v8 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2414ACA48(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v31 = a2;
  uint64_t v30 = sub_24162B788();
  uint64_t v5 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  unint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    if (!v8) {
      return v9;
    }
    uint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t result = sub_24149E5E4(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v11 = 0;
    unint64_t v27 = a1 & 0xC000000000000001;
    uint64_t v28 = v8;
    uint64_t v9 = v35;
    unint64_t v25 = v3;
    uint64_t v26 = (void (**)(char *, uint64_t))(v5 + 8);
    unint64_t v29 = a1;
    while (v8 != v11)
    {
      if (v27) {
        id v12 = (id)MEMORY[0x245620370](v11, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v11 + 32);
      }
      uint64_t v13 = v12;
      uint64_t v14 = type metadata accessor for PregnancyItem();
      uint64_t v5 = swift_allocObject();
      id v15 = v13;
      sub_24162B778();
      sub_24162B738();
      (*v26)(v7, v30);
      strcpy((char *)v32, "PregnancyItem");
      HIWORD(v32[1]) = -4864;
      sub_241631E08();
      swift_bridgeObjectRelease();
      uint64_t v16 = v32[1];
      *(void *)(v5 + 16) = v32[0];
      *(void *)(v5 + 24) = v16;
      *(void *)(v5 + 56) = 0;
      swift_unknownObjectWeakInit();
      *(void *)(v5 + 32) = v15;
      *(unsigned char *)(v5 + 40) = 1;
      *(void *)(v5 + 56) = &off_26F574088;
      swift_unknownObjectWeakAssign();
      uint64_t v33 = v14;
      uint64_t v34 = sub_2414AF83C((unint64_t *)&unk_268D00E30, (void (*)(uint64_t))type metadata accessor for PregnancyItem);

      v32[0] = v5;
      uint64_t v35 = v9;
      unint64_t v3 = *(void *)(v9 + 16);
      unint64_t v17 = *(void *)(v9 + 24);
      if (v3 >= v17 >> 1) {
        sub_24149E5E4(v17 > 1, v3 + 1, 1);
      }
      ++v11;
      uint64_t v18 = v33;
      uint64_t v19 = v34;
      uint64_t v20 = sub_241192BB0((uint64_t)v32, v33);
      __n128 v21 = MEMORY[0x270FA5388](v20);
      int64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v24 + 16))(v23, v21);
      sub_2413F439C(v3, (uint64_t)v23, &v35, v18, v19);
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v32);
      uint64_t v9 = v35;
      uint64_t v8 = v28;
      a1 = v29;
      if (v28 == v11) {
        return v9;
      }
    }
    __break(1u);
LABEL_15:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v8 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2414ACDEC(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v21 = sub_241633068();
  swift_bridgeObjectRelease();
  if (v21 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = sub_241633068();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v12 = sub_241633068();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  *unint64_t v3 = MEMORY[0x245620380](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v13 = v11 + 32;
  uint64_t v14 = (char *)(v11 + 32 + 8 * v4);
  sub_2411B9D00(0, (unint64_t *)&qword_26B012368);
  swift_arrayDestroy();
  if (v5)
  {
    if (*v3 >> 62)
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v22 = sub_241633068();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_2416330E8();
          __break(1u);
          return result;
        }
        unint64_t v17 = (char *)(v13 + 8 * v2);
        if (v4 != v2 || v14 >= &v17[8 * v16]) {
          memmove(v14, v17, 8 * v16);
        }
        if (!(*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_27:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v23 = sub_241633068();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_241631F48();
}

uint64_t sub_2414AD108(unint64_t a1)
{
  return sub_2414AD74C(a1, &qword_26B012350, 0x263F0A598, (unint64_t *)&qword_26B012358, (unint64_t *)&qword_26B0123D0);
}

uint64_t sub_2414AD12C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for HKMCDisplayTypeIdentifier(0);
  sub_2414AF83C(&qword_268CF9E10, type metadata accessor for HKMCDisplayTypeIdentifier);
  uint64_t result = sub_241632108();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_2414A271C(&v6, v5, (void (*)(void))sub_2414AE978, type metadata accessor for HKMCDisplayTypeIdentifier);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_2414AD210(uint64_t a1)
{
  uint64_t v2 = sub_24162B788();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v28 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v27 = (char *)v21 - v6;
  sub_2414AFD04(0, &qword_26B0118A0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  sub_2414AF83C((unint64_t *)&qword_268CFEAB0, MEMORY[0x263F07508]);
  uint64_t v29 = sub_241632108();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    unint64_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    unint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_2414A1C9C(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_2414AD4E0(uint64_t a1)
{
  uint64_t v2 = sub_24162BFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_2414AF83C(&qword_26B00F228, MEMORY[0x263F45618]);
  uint64_t result = sub_241632108();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_2414A1FC0((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_2414AD67C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for HKMCCycleFactor(0);
  sub_2414AF83C(&qword_268D00F60, type metadata accessor for HKMCCycleFactor);
  uint64_t result = sub_241632108();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_2414A22E4(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_2414AD728(unint64_t a1)
{
  return sub_2414AD74C(a1, (unint64_t *)&qword_26B0125F0, 0x263F0A158, &qword_26B010710, &qword_26B011368);
}

uint64_t sub_2414AD74C(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, unint64_t *a5)
{
  unint64_t v10 = a1 >> 62;
  if (a1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241633068();
    swift_bridgeObjectRelease();
  }
  sub_2411B9D00(0, a2);
  sub_2411A01FC(a4, a2);
  uint64_t result = sub_241632108();
  uint64_t v18 = result;
  if (v10)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v12 = sub_241633068();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return v18;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      return v18;
    }
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        uint64_t v14 = (void *)MEMORY[0x245620370](i, a1);
        sub_2414A2404(&v17, v14, a2, a3, a5, a4);
      }
    }
    else
    {
      uint64_t v15 = (void **)(a1 + 32);
      do
      {
        uint64_t v16 = *v15++;
        sub_2414A2404(&v17, v16, a2, a3, a5, a4);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_2414AD8F8(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = a2;
  uint64_t v5 = sub_24162B788();
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = MEMORY[0x270FA5388](v8);
  uint64_t v33 = (char *)v22 - v10;
  if (!(a1 >> 62))
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_3;
    }
    return 0;
  }
LABEL_17:
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v11 = sub_241633068();
  swift_bridgeObjectRelease();
  if (!v11) {
    return 0;
  }
LABEL_3:
  uint64_t v12 = 0;
  uint64_t v26 = v11;
  unint64_t v27 = a1 & 0xC000000000000001;
  unint64_t v24 = a1;
  v22[1] = v3;
  unint64_t v23 = a1 + 32;
  uint64_t v30 = v25 + 16;
  uint64_t v31 = v32 + 56;
  uint64_t v13 = (void (**)(char *, uint64_t))(v25 + 8);
  while (1)
  {
    uint64_t v29 = v12;
    id v14 = v27 ? (id)MEMORY[0x245620370](v9) : *(id *)(v23 + 8 * v12);
    id v28 = v14;
    a1 = (unint64_t)objc_msgSend(v14, sel_UUID);
    sub_24162B768();

    if (*(void *)(v32 + 16))
    {
      uint64_t v3 = v32;
      sub_2414AF83C((unint64_t *)&qword_268CFEAB0, MEMORY[0x263F07508]);
      a1 = (unint64_t)v33;
      uint64_t v15 = sub_241631B68();
      uint64_t v16 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v17 = v15 & ~v16;
      if ((*(void *)(v31 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17)) {
        break;
      }
    }
LABEL_12:
    (*v13)(v33, v5);

    uint64_t v12 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    if (v12 == v26) {
      return 0;
    }
  }
  uint64_t v3 = ~v16;
  uint64_t v18 = *(void *)(v25 + 72);
  uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
  while (1)
  {
    v19(v7, *(void *)(v32 + 48) + v18 * v17, v5);
    sub_2414AF83C((unint64_t *)&unk_268D00E40, MEMORY[0x263F07508]);
    a1 = sub_241631C28();
    uint64_t v20 = *v13;
    (*v13)(v7, v5);
    if (a1) {
      break;
    }
    unint64_t v17 = (v17 + 1) & v3;
    if (((*(void *)(v31 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
      goto LABEL_12;
    }
  }
  v20(v33, v5);

  return v29;
}

uint64_t sub_2414ADC68(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v19 = sub_241633068();
  swift_bridgeObjectRelease();
  if (v19 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v8 = sub_241633068();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v12 = sub_241633068();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v5 = *v3;
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - v7;
  if (__OFADD__(v8, v6)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  unint64_t v5 = MEMORY[0x245620380](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
  swift_arrayDestroy();
  if (v6)
  {
    if (v5 >> 62)
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v20 = sub_241633068();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_21:
        if (v14 < 0)
        {
LABEL_46:
          uint64_t result = sub_2416330E8();
          __break(1u);
          return result;
        }
        uint64_t v15 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14) {
          memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
        }
        if (!(v5 >> 62))
        {
          uint64_t v16 = *(void *)(v11 + 16);
          uint64_t v17 = v16 + v6;
          if (!__OFADD__(v16, v6))
          {
LABEL_27:
            *(void *)(v11 + 16) = v17;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v21 = sub_241633068();
        swift_bridgeObjectRelease();
        uint64_t v17 = v21 + v6;
        if (!__OFADD__(v21, v6)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = v13 - v2;
      if (!__OFSUB__(v13, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_241631F48();
}

uint64_t sub_2414ADF58(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_24158B66C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  type metadata accessor for HKMCDisplayTypeIdentifier(0);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[a2 + 4];
    if (a1 != a2 || &v4[a1 + 4] >= (void *)&v16[8 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[a1 + 4], v16, 8 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_2416330E8();
  __break(1u);
  return result;
}

uint64_t sub_2414AE0C8(unint64_t *a1, uint64_t a2)
{
  uint64_t v5 = sub_24162B788();
  unint64_t v46 = *(char **)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v45 - v9;
  unint64_t v11 = _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v12 = sub_2414AD8F8(v11, a2);
  char v14 = v13;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v15 = v46;
    uint64_t v54 = v10;
    uint64_t v53 = a2;
    v45[1] = 0;
    if (v14)
    {
      if (*a1 >> 62)
      {
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v12 = sub_241633068();
        swift_bridgeObjectRelease();
      }
      else
      {
        return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      unint64_t v16 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_63;
      }
      if (*a1 >> 62)
      {
LABEL_64:
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v17 = sub_241633068();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v18 = v53;
      if (v16 != v17)
      {
        id v51 = v15 + 16;
        uint64_t v52 = v53 + 56;
        uint64_t v19 = (void (**)(char *, uint64_t))(v15 + 8);
        int v47 = a1;
        uint64_t v15 = v54;
        do
        {
          unint64_t v20 = *a1;
          BOOL v21 = (*a1 & 0xC000000000000001) == 0;
          unint64_t v49 = v16;
          unint64_t v50 = v12;
          if (v21)
          {
            if ((v16 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
            if (v16 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_54;
            }
            id v43 = *(id *)(v20 + 8 * v16 + 32);
          }
          else
          {
            id v43 = (id)MEMORY[0x245620370](v16);
          }
          id v48 = v43;
          id v22 = objc_msgSend(v43, sel_UUID);
          sub_24162B768();

          if (*(void *)(v18 + 16)
            && (sub_2414AF83C((unint64_t *)&qword_268CFEAB0, MEMORY[0x263F07508]),
                uint64_t v23 = sub_241631B68(),
                uint64_t v24 = -1 << *(unsigned char *)(v18 + 32),
                unint64_t v25 = v23 & ~v24,
                ((*(void *)(v52 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) != 0))
          {
            uint64_t v26 = ~v24;
            uint64_t v27 = *((void *)v46 + 9);
            id v28 = (void (*)(char *, unint64_t, uint64_t))*((void *)v46 + 2);
            while (1)
            {
              v28(v7, *(void *)(v18 + 48) + v27 * v25, v5);
              sub_2414AF83C((unint64_t *)&unk_268D00E40, MEMORY[0x263F07508]);
              char v29 = sub_241631C28();
              uint64_t v30 = *v19;
              (*v19)(v7, v5);
              if (v29) {
                break;
              }
              unint64_t v25 = (v25 + 1) & v26;
              uint64_t v18 = v53;
              if (((*(void *)(v52 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
                goto LABEL_18;
              }
            }
            uint64_t v15 = v54;
            v30(v54, v5);

            a1 = v47;
            uint64_t v12 = v50;
            unint64_t v16 = v49 + 1;
            if (__OFADD__(v49, 1)) {
              goto LABEL_55;
            }
          }
          else
          {
LABEL_18:
            uint64_t v15 = v54;
            (*v19)(v54, v5);

            unint64_t v16 = v49;
            uint64_t v12 = v50;
            a1 = v47;
            if (v50 != v49)
            {
              unint64_t v31 = *v47;
              if ((*v47 & 0xC000000000000001) != 0)
              {
                id v32 = (id)MEMORY[0x245620370](v50, *v47);
                unint64_t v31 = *a1;
              }
              else
              {
                if ((v50 & 0x8000000000000000) != 0) {
                  goto LABEL_57;
                }
                if (v50 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_58;
                }
                id v32 = *(id *)(v31 + 8 * v50 + 32);
              }
              id v48 = v32;
              if ((v31 & 0xC000000000000001) != 0)
              {
                id v33 = (id)MEMORY[0x245620370](v16, v31);
                unint64_t v31 = *a1;
              }
              else
              {
                if ((v16 & 0x8000000000000000) != 0) {
                  goto LABEL_59;
                }
                if (v16 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_60;
                }
                id v33 = *(id *)(v31 + 8 * v16 + 32);
              }
              int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v31;
              if (!isUniquelyReferenced_nonNull_bridgeObject
                || (v31 & 0x8000000000000000) != 0
                || (v31 & 0x4000000000000000) != 0)
              {
                sub_2414AA8F0(v31);
                unint64_t v31 = v35;
                *a1 = v35;
              }
              uint64_t v36 = *(void **)((v31 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20);
              *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20) = v33;

              sub_241631F48();
              unint64_t v37 = *a1;
              int v38 = swift_isUniquelyReferenced_nonNull_bridgeObject();
              *a1 = v37;
              if (!v38 || (v37 & 0x8000000000000000) != 0 || (v37 & 0x4000000000000000) != 0)
              {
                sub_2414AA8F0(v37);
                unint64_t v37 = v39;
                *a1 = v39;
              }
              if ((v16 & 0x8000000000000000) != 0) {
                goto LABEL_61;
              }
              if (v16 >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_62;
              }
              int64_t v40 = *(void **)((v37 & 0xFFFFFFFFFFFFFF8) + 8 * v16 + 0x20);
              *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 8 * v16 + 0x20) = v48;

              sub_241631F48();
            }
            BOOL v41 = __OFADD__(v12++, 1);
            if (v41) {
              goto LABEL_56;
            }
            BOOL v41 = __OFADD__(v16++, 1);
            if (v41) {
              goto LABEL_55;
            }
          }
          if (*a1 >> 62)
          {
            _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
            uint64_t v42 = sub_241633068();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v42 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          uint64_t v18 = v53;
        }
        while (v16 != v42);
      }
    }
  }
  return v12;
}

unint64_t sub_2414AE660()
{
  unint64_t result = qword_268D00E20;
  if (!qword_268D00E20)
  {
    sub_24149D024(255, (unint64_t *)&qword_268CFB1B0, (unint64_t *)&qword_26B012390, 0x263F0A150, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00E20);
  }
  return result;
}

void sub_2414AE6E4()
{
  if (!qword_268D012A0)
  {
    sub_24162D808();
    unint64_t v0 = sub_24162D018();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D012A0);
    }
  }
}

void sub_2414AE744()
{
  if (!qword_268D00E50)
  {
    sub_24162B788();
    sub_2414AF83C((unint64_t *)&qword_268CFEAB0, MEMORY[0x263F07508]);
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00E50);
    }
  }
}

void sub_2414AE7D8()
{
  if (!qword_268D00E60)
  {
    sub_2414AEDC8(255, (unint64_t *)&qword_268CFDE60, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6E0], MEMORY[0x263F8D870]);
    unint64_t v0 = sub_2416331E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00E60);
    }
  }
}

void sub_2414AE85C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_2411B9D00(255, a3);
    sub_2411A01FC(a5, a3);
    unint64_t v8 = sub_241632E68();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2414AE8FC()
{
  if (!qword_268D034F0)
  {
    sub_2414AFD68(255, (unint64_t *)&qword_26B0106B0, MEMORY[0x263F8D6C8], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_2416331E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D034F0);
    }
  }
}

void sub_2414AE978()
{
  if (!qword_268D00EA0)
  {
    type metadata accessor for HKMCDisplayTypeIdentifier(255);
    sub_2414AF83C(&qword_268CF9E10, type metadata accessor for HKMCDisplayTypeIdentifier);
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00EA0);
    }
  }
}

id sub_2414AEA0C(uint64_t a1)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_24162F538();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162F5A8();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162CE48();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    char v13 = result;
    unsigned int v14 = objc_msgSend(result, sel_isiPad);

    if (v14)
    {
      sub_24162CE28();
      uint64_t v15 = v11;
      uint64_t v16 = v23;
      uint64_t v17 = sub_24162CE18();
      if (!v16) {
        uint64_t v15 = (void *)v17;
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {
      (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F81FE0], v1);
      sub_24162F558();
      id v18 = objc_msgSend(self, sel_clearColor);
      sub_24162F578();
      sub_24162F588();
      sub_2411B9D00(0, &qword_268CFC750);
      sub_24162DB08();
      uint64_t v15 = (void *)sub_2416327F8();
      swift_unknownObjectRelease();
      objc_msgSend(v15, sel_setContentInsets_, 0.0, 0.0, 0.0, 0.0);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v21);
    }
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2414AED44()
{
  if (!qword_268D00F00)
  {
    sub_2414AEDC8(255, &qword_268D00F08, MEMORY[0x263F8D538], MEMORY[0x263F8D568], (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for Determined);
    unint64_t v0 = sub_2416331E8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00F00);
    }
  }
}

void sub_2414AEDC8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_2414AEE18()
{
  unint64_t result = qword_268D00F30;
  if (!qword_268D00F30)
  {
    sub_24149D024(255, &qword_268D00F28, &qword_268D00F20, 0x263F44C18, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D00F30);
  }
  return result;
}

void sub_2414AEE9C()
{
  if (!qword_268D00F38)
  {
    type metadata accessor for HKMCPregnancyAdjustedFeatureIdentifier(255);
    sub_2414AF83C((unint64_t *)&unk_268D00F40, type metadata accessor for HKMCPregnancyAdjustedFeatureIdentifier);
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00F38);
    }
  }
}

uint64_t sub_2414AEF30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2414AEF90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2414AFD04(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_2414AF000()
{
  if (!qword_268D00F68)
  {
    type metadata accessor for HKMCCycleFactor(255);
    sub_2414AF83C(&qword_268D00F60, type metadata accessor for HKMCCycleFactor);
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00F68);
    }
  }
}

uint64_t sub_2414AF094(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_2414AF0FC()
{
  if (!qword_268D00FA8)
  {
    type metadata accessor for HKMCDaySummarySymptoms(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D00FA8);
    }
  }
}

void sub_2414AF16C()
{
  if (!qword_268D00FD0)
  {
    unint64_t v0 = sub_241631B58();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00FD0);
    }
  }
}

void sub_2414AF1D8()
{
  if (!qword_268D00FD8)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B012390);
    sub_2411A01FC((unint64_t *)&qword_268D00FE0, (unint64_t *)&qword_26B012390);
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D00FD8);
    }
  }
}

void sub_2414AF280()
{
  if (!qword_268D035E0)
  {
    type metadata accessor for LoggingCardViewController();
    type metadata accessor for HKMCDisplayTypeIdentifier(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D035E0);
    }
  }
}

void sub_2414AF300(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_2414AF35C(255, a3, a4);
    unint64_t v5 = sub_2416331E8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2414AF35C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_2414AF3CC()
{
  if (!qword_268D03630)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B012390);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D03630);
    }
  }
}

void sub_2414AF444()
{
  if (!qword_268D01058)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B00E600);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01058);
    }
  }
}

unint64_t sub_2414AF4B8()
{
  unint64_t result = qword_268D01078;
  if (!qword_268D01078)
  {
    sub_24149D024(255, &qword_268D01070, (unint64_t *)&qword_26B00E610, 0x263F45130, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01078);
  }
  return result;
}

unint64_t sub_2414AF53C()
{
  unint64_t result = qword_268D010A0;
  if (!qword_268D010A0)
  {
    sub_24149D024(255, (unint64_t *)&unk_268D01090, (unint64_t *)&qword_26B012130, 0x263F08938, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D010A0);
  }
  return result;
}

void sub_2414AF5C0()
{
  if (!qword_26B011910)
  {
    sub_2411B9D00(255, (unint64_t *)&qword_26B012368);
    sub_2411A01FC((unint64_t *)&qword_26B012370, (unint64_t *)&qword_26B012368);
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B011910);
    }
  }
}

void sub_2414AF668()
{
  if (!qword_268D010B8)
  {
    sub_24162BFA8();
    sub_2414AF83C(&qword_26B00F228, MEMORY[0x263F45618]);
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D010B8);
    }
  }
}

void sub_2414AF6FC(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_2414AF754(255, a3, a4);
    unint64_t v5 = sub_2416331E8();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2414AF754(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

unint64_t sub_2414AF7B8()
{
  unint64_t result = qword_268D010D8;
  if (!qword_268D010D8)
  {
    sub_24149D024(255, &qword_268D010D0, (unint64_t *)&qword_26B012368, 0x263F0A6E8, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D010D8);
  }
  return result;
}

uint64_t sub_2414AF83C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2414AF884()
{
  if (!qword_268D010F0)
  {
    sub_241631AC8();
    sub_2414AF83C(&qword_268CFBDB8, MEMORY[0x263F090E8]);
    unint64_t v0 = sub_241632E68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D010F0);
    }
  }
}

unint64_t sub_2414AF918()
{
  unint64_t result = qword_268D01108;
  if (!qword_268D01108)
  {
    sub_24149D024(255, &qword_268D010F8, (unint64_t *)&qword_268D01100, 0x263F825A0, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01108);
  }
  return result;
}

void sub_2414AF99C()
{
  if (!qword_268D01118)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01118);
    }
  }
}

uint64_t sub_2414AFA00(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_241201428;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268D01130 + dword_268D01130);
  return v6(a1, v4);
}

void sub_2414AFAB8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_2414AFB10(255, a3);
    unint64_t v4 = sub_2416331E8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2414AFB10(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_24149D024(255, (unint64_t *)&qword_268CFB1B0, (unint64_t *)&qword_26B012390, 0x263F0A150, MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AllPregnanciesDataSource.OccurrenceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2414AFC74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AllPregnanciesDataSource.OccurrenceType()
{
  return &type metadata for AllPregnanciesDataSource.OccurrenceType;
}

unint64_t sub_2414AFCB0()
{
  unint64_t result = qword_268D01180;
  if (!qword_268D01180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01180);
  }
  return result;
}

void sub_2414AFD04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2414AFD68(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2414AFDC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v26 = sub_24162B888();
  uint64_t v1 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  int v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162B8D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162B858();
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24162BA08();
  uint64_t v24 = *(void *)(v12 - 8);
  uint64_t v25 = v12;
  MEMORY[0x270FA5388](v12);
  unsigned int v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B13BC(0, &qword_26B0130C0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v23 - v16;
  sub_24162B9A8();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F07780], v8);
  uint64_t v18 = v4;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F07800], v4);
  uint64_t v19 = v26;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F077E0], v26);
  sub_24162B938();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v19);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v23);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v25);
  uint64_t v20 = sub_24162B718();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v27, v17, v20);
  }
  sub_2411E7908((uint64_t)v17);
  uint64_t result = sub_241633038();
  __break(1u);
  return result;
}

uint64_t sub_2414B0228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v20[2] = a1;
  uint64_t v21 = a2;
  uint64_t v2 = sub_24162B888();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162B8D8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24162B858();
  v20[0] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B13BC(0, &qword_26B0130C0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v20 - v15;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F07780], v10);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F07800], v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F077E0], v2);
  sub_24162B938();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, void))(v11 + 8))(v13, v20[0]);
  uint64_t v17 = sub_24162B718();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v16, v17);
  }
  sub_2411E7908((uint64_t)v16);
  uint64_t result = sub_241633038();
  __break(1u);
  return result;
}

uint64_t sub_2414B0600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v44 = a2;
  uint64_t v2 = sub_24162B718();
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  MEMORY[0x270FA5388](v2);
  int v38 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_24162EFA8();
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  int64_t v40 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162BA08();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B13BC(0, &qword_26B0130C0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v37 - v10;
  sub_2414B13BC(0, (unint64_t *)&unk_26B013110, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v37 - v13;
  sub_2414B13BC(0, &qword_26B0130C8, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = sub_24162B138();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v17, 1, 1, v5);
  uint64_t v22 = sub_24162BA68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v14, 1, 1, v22);
  uint64_t v23 = v42;
  sub_24162B118();
  sub_24162B0A8();
  sub_24162B9A8();
  sub_24162B958();
  uint64_t v24 = v8;
  uint64_t v25 = v43;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v24, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v11, 1, v25) == 1)
  {
    sub_2411E7908((uint64_t)v11);
    sub_24162EF48();
    uint64_t v27 = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v38, v45, v25);
    id v28 = sub_24162EF98();
    os_log_type_t v29 = sub_2416322C8();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v47 = v27;
      uint64_t v48 = v31;
      *(_DWORD *)uint64_t v30 = 136446722;
      sub_2414B1410();
      uint64_t v32 = sub_241631D48();
      uint64_t v47 = sub_2411B6898(v32, v33, &v48);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2050;
      uint64_t v47 = v46;
      sub_241632C28();
      *(_WORD *)(v30 + 22) = 2082;
      uint64_t v34 = v38;
      uint64_t v35 = sub_24162B5C8();
      uint64_t v47 = sub_2411B6898(v35, v36, &v48);
      sub_241632C28();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v34, v27);
      _os_log_impl(&dword_24118E000, v28, v29, "[%{public}s] Unable to add %{public}ld days to %{public}s", (uint8_t *)v30, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v31, -1, -1);
      MEMORY[0x245621640](v30, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v38, v27);
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
    uint64_t result = sub_241633038();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v44, v11, v25);
  }
  return result;
}

uint64_t sub_2414B0D14()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v19[-v6];
  uint64_t v8 = sub_24162B718();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24162B5E8();
  sub_2414B101C();
  char v12 = sub_241631C28();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    sub_241631C38();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
    if (qword_26B0131F0 != -1) {
      swift_once();
    }
    id v13 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v14 = sub_241631D38();
    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  }
  else
  {
    uint64_t v15 = self;
    uint64_t v16 = (void *)sub_24162B668();
    id v17 = objc_msgSend(v15, sel_localizedStringFromDate_dateStyle_timeStyle_, v16, 3, 0);

    uint64_t v14 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  }
  return v14;
}

unint64_t sub_2414B101C()
{
  unint64_t result = qword_268CFAD00;
  if (!qword_268CFAD00)
  {
    sub_24162B718();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFAD00);
  }
  return result;
}

uint64_t sub_2414B1074@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v1 = sub_24162B718();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162B9E8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162BA08();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414B13BC(0, &qword_26B0130C0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v17 - v14;
  sub_24162B9A8();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F078A0], v5);
  sub_24162B708();
  sub_24162B968();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v15, 1, v1) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v2 + 32))(v18, v15, v1);
  }
  sub_2411E7908((uint64_t)v15);
  uint64_t result = sub_241633038();
  __break(1u);
  return result;
}

void sub_2414B13BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241632C18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_2414B1410()
{
  unint64_t result = qword_268D011B0;
  if (!qword_268D011B0)
  {
    sub_24162B718();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D011B0);
  }
  return result;
}

id sub_2414B144C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17PregnancyTileCell_item;
  swift_beginAccess();
  sub_2414B241C(v6, (uint64_t)&v22, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);
  if (*((void *)&v23 + 1))
  {
    sub_2411E1530();
    type metadata accessor for PregnancyItem();
    if (swift_dynamicCast())
    {
      swift_release();
      return objc_msgSend(v1, sel_setNeedsUpdateConfiguration);
    }
  }
  else
  {
    sub_2414B2488((uint64_t)&v22, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);
  }
  if (HKShowSensitiveLogItems())
  {
    sub_24162EF48();
    id v8 = v1;
    uint64_t v9 = sub_24162EF98();
    os_log_type_t v10 = sub_2416322C8();
    int v11 = v10;
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v12 = swift_slowAlloc();
      HIDWORD(v19) = v11;
      uint64_t v13 = v12;
      uint64_t v20 = swift_slowAlloc();
      v21[0] = v20;
      *(_DWORD *)uint64_t v13 = 136446466;
      uint64_t v14 = sub_2416333E8();
      *(void *)&long long v22 = sub_2411B6898(v14, v15, v21);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      sub_2414B241C(v6, (uint64_t)&v22, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);
      sub_2414B2388(0, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);
      uint64_t v16 = sub_241631D78();
      *(void *)&long long v22 = sub_2411B6898(v16, v17, v21);
      sub_241632C28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v9, BYTE4(v19), "[%{public}s] Received unexpected item %s.", (uint8_t *)v13, 0x16u);
      uint64_t v18 = v20;
      swift_arrayDestroy();
      MEMORY[0x245621640](v18, -1, -1);
      MEMORY[0x245621640](v13, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  swift_beginAccess();
  sub_2412309A4((uint64_t)&v22, v6);
  return (id)swift_endAccess();
}

uint64_t sub_2414B17D4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17PregnancyTileCell_item;
  swift_beginAccess();
  sub_2414B241C(v3, (uint64_t)v5, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);
  if (v6)
  {
    sub_2411E1530();
    type metadata accessor for PregnancyItem();
    if (swift_dynamicCast()) {
      swift_release();
    }
  }
  else
  {
    sub_2414B2488((uint64_t)v5, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);
  }
  swift_beginAccess();
  sub_2411FA3DC(a1, v3);
  swift_endAccess();
  sub_2414B144C();
  return sub_2414B2488(a1, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);
}

id sub_2414B1904(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_2414B2388(0, (unint64_t *)&unk_268D000D0, MEMORY[0x263F81EE0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17PregnancyTileCell_item];
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;
  v18.receiver = v4;
  v18.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  sub_24162F148();
  uint64_t v15 = sub_24162F168();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 0, 1, v15);
  MEMORY[0x24561FB60](v12);
  objc_msgSend(v14, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 1);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v16 = v14;
  swift_retain();
  sub_2416326A8();
  swift_release();

  return v16;
}

void sub_2414B1AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2414B2388(0, (unint64_t *)&unk_268D000D0, MEMORY[0x263F81EE0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v17 - v9;
  MEMORY[0x24561FB50](v8);
  uint64_t v11 = sub_24162F168();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v12 = (void (*)(uint64_t))MEMORY[0x263F81EE0];
    sub_2414B241C((uint64_t)v10, (uint64_t)v6, (unint64_t *)&unk_268D000D0, MEMORY[0x263F81EE0]);
    MEMORY[0x24561FB60](v6);
    sub_2414B2488((uint64_t)v10, (unint64_t *)&unk_268D000D0, v12);
  }
  else
  {
    id v13 = objc_msgSend(self, sel_clearColor);
    sub_24162F118();
    MEMORY[0x24561FB60](v10);
  }
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x245621790](a3 + 16);
  if (v14)
  {
    uint64_t v15 = (void *)v14;
    sub_2414B24EC();
    v17[3] = v16;
    v17[4] = sub_2414B275C(&qword_268D011F0, (void (*)(uint64_t))sub_2414B24EC);
    sub_2411B6C70(v17);
    sub_2414B27A4(0, &qword_268D011C8, MEMORY[0x263F19B28]);
    sub_2414B25F0();
    sub_241630788();
    MEMORY[0x24561FB40](v17);
  }
}

uint64_t sub_2414B1D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PregnancyTileView(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (void *)((char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2414B2588();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v22 - v11;
  sub_2414B27A4(0, &qword_268D011F8, MEMORY[0x263F19B20]);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v22 - v14;
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x245621790](a1 + 16);
  if (!v16)
  {
    uint64_t v25 = 0;
    long long v23 = 0u;
    long long v24 = 0u;
    goto LABEL_6;
  }
  unint64_t v17 = (void *)v16;
  uint64_t v18 = v16 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17PregnancyTileCell_item;
  swift_beginAccess();
  sub_2414B241C(v18, (uint64_t)&v23, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);

  if (!*((void *)&v24 + 1))
  {
LABEL_6:
    sub_2414B2488((uint64_t)&v23, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);
    goto LABEL_7;
  }
  sub_2411E1530();
  type metadata accessor for PregnancyItem();
  if (swift_dynamicCast())
  {
    uint64_t v19 = v22[3];
    uint64_t v20 = swift_retain();
    sub_2413085C8(v20, v6);
    v22[1] = *(void *)(v19 + 16);
    void v22[2] = a2;
    sub_2414B275C(&qword_268D011E8, (void (*)(uint64_t))type metadata accessor for PregnancyTileView);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241630D28();
    swift_bridgeObjectRelease();
    sub_2414B280C((uint64_t)v6, type metadata accessor for PregnancyTileView);
    sub_2414B286C((uint64_t)v9, (uint64_t)v12);
    sub_2414B28D0((uint64_t)v12, (uint64_t)v15);
    swift_storeEnumTagMultiPayload();
    sub_2414B2684();
    sub_241630638();
    swift_release();
    return sub_2414B280C((uint64_t)v12, (uint64_t (*)(void))sub_2414B2588);
  }
LABEL_7:
  swift_storeEnumTagMultiPayload();
  sub_2414B2684();
  return sub_241630638();
}

uint64_t type metadata accessor for PregnancyTileCell()
{
  return self;
}

uint64_t sub_2414B21CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17PregnancyTileCell_item;
  swift_beginAccess();
  return sub_2414B241C(v3, a1, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);
}

void (*sub_2414B2240(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17PregnancyTileCell_item;
  swift_beginAccess();
  sub_2414B241C(v4, (uint64_t)v3, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);
  return sub_2414B22E0;
}

void sub_2414B22E0(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    sub_2414B241C(*a1, (uint64_t)v2 + 40, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);
    sub_2414B17D4((uint64_t)v2 + 40);
    sub_2414B2488((uint64_t)v2, (unint64_t *)&qword_268CFFE30, (void (*)(uint64_t))sub_2411E1530);
  }
  else
  {
    sub_2414B17D4(*a1);
  }

  free(v2);
}

void sub_2414B2388(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241632C18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2414B23DC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2414B2414(uint64_t a1, uint64_t a2)
{
  sub_2414B1AC4(a1, a2, v2);
}

uint64_t sub_2414B241C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_2414B2388(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2414B2488(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2414B2388(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2414B24E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2414B1D30(v1, a1);
}

void sub_2414B24EC()
{
  if (!qword_268D011C0)
  {
    sub_2414B27A4(255, &qword_268D011C8, MEMORY[0x263F19B28]);
    sub_2414B25F0();
    unint64_t v0 = sub_241630798();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D011C0);
    }
  }
}

void sub_2414B2588()
{
  if (!qword_268D011D0)
  {
    type metadata accessor for PregnancyTileView(255);
    sub_2416308D8();
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D011D0);
    }
  }
}

unint64_t sub_2414B25F0()
{
  unint64_t result = qword_268D011D8;
  if (!qword_268D011D8)
  {
    sub_2414B27A4(255, &qword_268D011C8, MEMORY[0x263F19B28]);
    sub_2414B2684();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D011D8);
  }
  return result;
}

unint64_t sub_2414B2684()
{
  unint64_t result = qword_268D011E0;
  if (!qword_268D011E0)
  {
    sub_2414B2588();
    sub_2414B275C(&qword_268D011E8, (void (*)(uint64_t))type metadata accessor for PregnancyTileView);
    sub_2414B275C((unint64_t *)&qword_268CFBC98, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D011E0);
  }
  return result;
}

uint64_t sub_2414B275C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2414B27A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_2414B2588();
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F1BA08]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_2414B280C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2414B286C(uint64_t a1, uint64_t a2)
{
  sub_2414B2588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2414B28D0(uint64_t a1, uint64_t a2)
{
  sub_2414B2588();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PregnancyTestResultLoggingCardDataSource()
{
  return self;
}

uint64_t sub_2414B2958(uint64_t result)
{
  if ((*(unsigned char *)(result
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_checkedIndex
                 + 8) & 1) != 0)
  {
    uint64_t v2 = 0;
    goto LABEL_7;
  }
  unint64_t v3 = *(void *)(result
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37SingleSelectLoggingCardViewController_checkedIndex);
  if (qword_268CF97A8 == -1)
  {
    if ((v3 & 0x8000000000000000) == 0) {
      goto LABEL_5;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t result = swift_once();
  if ((v3 & 0x8000000000000000) != 0) {
    goto LABEL_13;
  }
LABEL_5:
  if (v3 >= *(void *)(qword_268D241B8 + 16))
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v2 = *(void *)(qword_268D241B8 + 8 * v3 + 32);
LABEL_7:
  *(void *)(v1 + 32) = v2;
  uint64_t result = MEMORY[0x245621790](v1 + 16);
  if (result)
  {
    uint64_t v4 = result;
    sub_241588A0C((void *)*MEMORY[0x263F44F90]);
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin33LoggingCardCarouselViewController_mutableDaySummary), sel_setPregnancyTestResult_, v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2414B2A50()
{
  if (qword_268CF97A8 != -1) {
    swift_once();
  }
  return *(void *)(qword_268D241B8 + 16);
}

void sub_2414B2AA0(uint64_t a1, unint64_t a2)
{
  if (qword_268CF97A8 == -1)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  swift_once();
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if (*(void *)(qword_268D241B8 + 16) <= a2)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v3 = *(void *)(qword_268D241B8 + 8 * a2 + 32);

  sub_2414D6A9C(v3);
}

uint64_t type metadata accessor for CompoundOnboardingOngoingCycleFactorsTableViewDataSource(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D01200);
}

uint64_t sub_2414B2B4C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2414B2B8C(uint64_t a1)
{
  uint64_t v2 = sub_24162EFA8();
  v23[4] = *(void *)(v2 - 8);
  v23[5] = v2;
  MEMORY[0x270FA5388](v2);
  v23[3] = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  v23[1] = (char *)v23 - v5;
  uint64_t v6 = sub_24162CDE8();
  void v23[2] = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_24162BB18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v23 - v12;
  __n128 v15 = MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)v23 - v16;
  MEMORY[0x245618F80](0, a1, v15);
  sub_24162DB88();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v13, v7);
  type metadata accessor for OnboardingOngoingCycleFactorsTableViewDataSource(0);
  uint64_t v19 = swift_dynamicCastClass();
  if (v19)
  {
    swift_unknownObjectRetain();
    if (sub_24162BB08())
    {
      v18(v17, v7);
      swift_unknownObjectRelease_n();
      return 0;
    }
    else
    {
      uint64_t v20 = *(void *)(v19 + qword_268D01210);
      unint64_t v21 = *(void *)(v19 + qword_268D01210 + 8);
      sub_2414BB9CC(v20, v21);
      uint64_t v19 = sub_2412394A8(v20, v21);
      sub_2414BB358(v20, v21);
      swift_unknownObjectRelease_n();
      v18(v17, v7);
    }
  }
  else
  {
    swift_unknownObjectRelease();
    v18(v17, v7);
  }
  return v19;
}

uint64_t sub_2414B319C(uint64_t a1)
{
  uint64_t v2 = sub_24162EFA8();
  void v22[4] = *(void *)(v2 - 8);
  v22[5] = v2;
  MEMORY[0x270FA5388](v2);
  v22[3] = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  v22[1] = (char *)v22 - v5;
  uint64_t v6 = sub_24162CDE8();
  void v22[2] = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_24162BB18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v22 - v12;
  __n128 v15 = MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)v22 - v16;
  MEMORY[0x245618F80](0, a1, v15);
  sub_24162DB88();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v13, v7);
  type metadata accessor for OnboardingOngoingCycleFactorsTableViewDataSource(0);
  uint64_t v19 = swift_dynamicCastClass();
  if (v19)
  {
    swift_unknownObjectRetain();
    unint64_t v20 = sub_24162BB08();
    uint64_t v19 = sub_2414B43C8(v20);
    swift_unknownObjectRelease_n();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  v18(v17, v7);
  return v19;
}

uint64_t sub_2414B3758(uint64_t a1)
{
  uint64_t v3 = sub_24162EFA8();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  MEMORY[0x270FA5388](v3);
  void v24[2] = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  v24[0] = (char *)v24 - v6;
  uint64_t v25 = sub_24162CDE8();
  v24[1] = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v7 = sub_24162BB18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v24 - v12;
  __n128 v15 = MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)v24 - v16;
  MEMORY[0x245618F80](0, a1, v15);
  sub_24162DB88();
  uint64_t v26 = a1;
  uint64_t v27 = v1;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v13, v7);
  type metadata accessor for OnboardingOngoingCycleFactorsTableViewDataSource(0);
  if (swift_dynamicCastClass())
  {
    uint64_t v19 = (uint64_t (*)(char *, uint64_t))v18;
    swift_unknownObjectRetain();
    uint64_t v20 = sub_24162BB08();
    uint64_t result = sub_24162D0F8();
    if (__OFSUB__(result, 1))
    {
      __break(1u);
LABEL_11:
      __break(1u);
      return result;
    }
    uint64_t v22 = v26;
    if (v20 == result - 1)
    {
      type metadata accessor for CompoundOnboardingOngoingCycleFactorsTableViewDataSource(0);
      uint64_t v23 = sub_24162D0F8();
      swift_unknownObjectRelease_n();
      uint64_t result = v19(v17, v7);
      if (!__OFSUB__(v23, 1)) {
        return v23 - 1 != v22;
      }
      goto LABEL_11;
    }
    v18(v17, v7);
    swift_unknownObjectRelease_n();
  }
  else
  {
    swift_unknownObjectRelease();
    v18(v17, v7);
  }
  return 0;
}

uint64_t sub_2414B3D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162D678();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162DB58();
  uint64_t v9 = v8;
  uint64_t v27 = *(void *)(v8 + 16);
  if (v27)
  {
    uint64_t v28 = v8 + 32;
    uint64_t v10 = type metadata accessor for OnboardingOngoingCycleFactorsTableViewDataSource(0);
    unint64_t v11 = 0;
    uint64_t v29 = 0;
    uint64_t v32 = v5 + 16;
    uint64_t v33 = v10;
    uint64_t v31 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v25 = v5;
    uint64_t v26 = v4;
    uint64_t v23 = v9;
    long long v24 = v7;
    while (1)
    {
      uint64_t v12 = *(void *)(v28 + 16 * v11);
      unint64_t v35 = v11 + 1;
      swift_dynamicCastClassUnconditional();
      swift_unknownObjectRetain_n();
      uint64_t v13 = sub_24162D728();
      swift_unknownObjectRelease();
      uint64_t v34 = *(void *)(v13 + 16);
      if (v34)
      {
        uint64_t v30 = v12;
        unint64_t v14 = 0;
        unint64_t v36 = v13 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        while (1)
        {
          if (v14 >= *(void *)(v13 + 16))
          {
            __break(1u);
            goto LABEL_30;
          }
          (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, v36 + *(void *)(v5 + 72) * v14, v4);
          uint64_t v15 = sub_24162D658();
          uint64_t v16 = *(void *)(v15 + 16);
          if (v16) {
            break;
          }
          swift_bridgeObjectRelease();
LABEL_19:
          ++v14;
          (*v31)(v7, v4);
          if (v14 == v34)
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
LABEL_24:
            uint64_t v9 = v23;
            goto LABEL_4;
          }
        }
        uint64_t v17 = v15 + 32;
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        while (1)
        {
          sub_2411A3DF4(v17, (uint64_t)v37);
          sub_2411B6854(v37, v37[3]);
          if (sub_24162C8A8() == a1 && v18 == a2) {
            break;
          }
          char v20 = sub_241633218();
          swift_bridgeObjectRelease();
          _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v37);
          if (v20) {
            goto LABEL_22;
          }
          v17 += 40;
          if (!--v16)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v5 = v25;
            uint64_t v4 = v26;
            uint64_t v7 = v24;
            goto LABEL_19;
          }
        }
        swift_bridgeObjectRelease();
        _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v37);
LABEL_22:
        swift_bridgeObjectRelease_n();
        uint64_t v7 = v24;
        uint64_t v4 = v26;
        (*v31)(v24, v26);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v21 = swift_dynamicCastClass();
        if (v21)
        {
          uint64_t v29 = v21;
          uint64_t v5 = v25;
          goto LABEL_24;
        }
        swift_unknownObjectRelease();
        unint64_t v11 = v35;
        uint64_t v5 = v25;
        uint64_t v9 = v23;
        if (v35 != v27)
        {
          uint64_t v29 = 0;
          goto LABEL_5;
        }
        goto LABEL_31;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
LABEL_4:
      unint64_t v11 = v35;
      if (v35 == v27) {
        break;
      }
LABEL_5:
      if (v11 >= *(void *)(v9 + 16))
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = v29;
    if (!v29) {
      goto LABEL_32;
    }
  }
  else
  {
LABEL_31:
    swift_bridgeObjectRelease();
LABEL_32:
    uint64_t result = sub_241633038();
    __break(1u);
  }
  return result;
}

uint64_t sub_2414B4170()
{
  return sub_24162DBF8();
}

uint64_t sub_2414B41AC()
{
  sub_24162DBE8();

  return swift_deallocClassInstance();
}

uint64_t sub_2414B41DC()
{
  return type metadata accessor for CompoundOnboardingOngoingCycleFactorsTableViewDataSource(0);
}

uint64_t type metadata accessor for OnboardingOngoingCycleFactorsTableViewDataSource(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D01218);
}

uint64_t sub_2414B4204()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2414B4250(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24162B788();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)(v3 + qword_268D01210);
  void *v10 = a1;
  v10[1] = a2;
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_241632E78();
  swift_bridgeObjectRelease();
  strcpy((char *)v12, "MutableArray<");
  HIWORD(v12[1]) = -4864;
  sub_24162B778();
  sub_24162B738();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  return sub_24162D718();
}

uint64_t sub_2414B43C8(unint64_t a1)
{
  uint64_t v3 = sub_24162D678();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v19[-v8];
  uint64_t result = sub_24162D728();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (*(void *)(result + 16) <= a1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v12 = *(void *)(v4 + 72) * a1;
  uint64_t v22 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v4 + 16);
  uint64_t v23 = v1;
  v22(v9, result + v11 + v12, v3);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_24162D658();
  unint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v14(v9, v3);
  if (*(void *)(v13 + 16))
  {
    sub_2411A3DF4(v13 + 32, (uint64_t)&v24);
  }
  else
  {
    uint64_t v26 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v25 + 1))
  {
    sub_2414BB95C((uint64_t)&v24, (unint64_t *)&qword_268CFFE30, (unint64_t *)&qword_268CFF090, MEMORY[0x263F437A0]);
    return 0;
  }
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (v30 != 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v21 = v29;
  int v20 = v31;
  uint64_t result = sub_24162D728();
  if (*(void *)(result + 16) > a1)
  {
    v22(v6, result + v11 + v12, v3);
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_24162D658();
    v14(v6, v3);
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = v15 + 32;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      while (1)
      {
        sub_2411A3DF4(v17, (uint64_t)v28);
        sub_2411A3DF4((uint64_t)v28, (uint64_t)v27);
        if (swift_dynamicCast()) {
          break;
        }
        _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v28);
        v17 += 40;
        if (!--v16)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      sub_24126EF94((uint64_t)&v24);
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v28);
      swift_bridgeObjectRelease_n();
      uint64_t v18 = sub_24123B3C0(v20);
      swift_bridgeObjectRelease();
      return v18;
    }
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2414B4734@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v48 = a2;
  uint64_t v2 = sub_24162D678();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414BB26C();
  uint64_t v59 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414BB1B0(0, &qword_268D01248, (void (*)(uint64_t))sub_2414BB26C);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v58 = (unint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v57 = (char *)&v45 - v12;
  uint64_t result = sub_24162D728();
  unint64_t v14 = 0;
  uint64_t v45 = v3 + 16;
  unint64_t v60 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  uint64_t v56 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  char v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  id v63 = (long long *)&v68;
  uint64_t v62 = (uint64_t)&v69 + 8;
  uint64_t v15 = (long long *)&v73;
  uint64_t v47 = v3;
  id v51 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v53 = v2;
  uint64_t v52 = v5;
  uint64_t v54 = result;
LABEL_2:
  unint64_t v16 = *(void *)(result + 16);
  if (v14 == v16)
  {
    uint64_t v17 = 1;
    uint64_t v18 = v59;
    uint64_t v19 = (uint64_t)v58;
  }
  else
  {
    if (v14 >= v16)
    {
LABEL_26:
      __break(1u);
      return result;
    }
    unint64_t v20 = v14 + 1;
    uint64_t v21 = v47;
    unint64_t v22 = result
        + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
        + *(void *)(v21 + 72) * v14;
    uint64_t v18 = v59;
    unint64_t v23 = v14;
    long long v24 = &v46[*(int *)(v59 + 48)];
    (*(void (**)(char *, unint64_t, uint64_t))(v47 + 16))(v24, v22, v2);
    uint64_t v19 = (uint64_t)v58;
    long long v25 = (char *)v58 + *(int *)(v18 + 48);
    *uint64_t v58 = v23;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v25, v24, v2);
    uint64_t v17 = 0;
    unint64_t v14 = v20;
  }
  (*v56)(v19, v17, 1, v18);
  uint64_t v26 = v57;
  sub_2414BB874(v19, (uint64_t)v57, &qword_268D01248, (void (*)(uint64_t))sub_2414BB26C);
  if ((*v55)(v26, 1, v18) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_24162BB18();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v48, 1, 1, v44);
  }
  else
  {
    unint64_t v50 = v14;
    uint64_t v49 = *(void *)v26;
    (*v60)(v5, &v26[*(int *)(v18 + 48)], v2);
    uint64_t result = sub_24162D658();
    uint64_t v27 = result;
    unint64_t v28 = 0;
    unint64_t v29 = *(void *)(result + 16);
    uint64_t v64 = result + 32;
    while (2)
    {
      if (v28 == v29)
      {
LABEL_9:
        long long v70 = 0u;
        long long v71 = 0u;
        unint64_t v28 = v29;
        long long v69 = 0u;
        goto LABEL_12;
      }
      while (1)
      {
        if (v28 >= *(void *)(v27 + 16))
        {
          __break(1u);
          goto LABEL_26;
        }
        char v30 = v63;
        sub_2411A3DF4(v64 + 40 * v28, (uint64_t)v63);
        *(void *)&long long v69 = v28;
        sub_2411B6CD4(v30, v62);
        ++v28;
LABEL_12:
        sub_2414BB874((uint64_t)&v69, (uint64_t)&v72, (unint64_t *)&unk_268D01250, (void (*)(uint64_t))sub_2414BB8E0);
        if (!v74)
        {
          swift_bridgeObjectRelease();
          uint64_t v5 = v52;
          uint64_t v2 = v53;
          (*v51)(v52, v53);
          uint64_t result = v54;
          unint64_t v14 = v50;
          goto LABEL_2;
        }
        uint64_t v31 = v72;
        sub_2411B6CD4(v15, (uint64_t)v67);
        sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
        sub_2411BF880(0, (unint64_t *)&unk_268D01430);
        if (swift_dynamicCast()) {
          break;
        }
        uint64_t v66 = 0;
        memset(v65, 0, sizeof(v65));
        uint64_t result = sub_2414BB95C((uint64_t)v65, (unint64_t *)&unk_268D02F30, (unint64_t *)&unk_268D01430, (uint64_t)&protocol descriptor for OnboardingGenericRow);
        if (v28 == v29) {
          goto LABEL_9;
        }
      }
      uint64_t v32 = v15;
      sub_2411B6CD4(v65, (uint64_t)&v69);
      uint64_t v33 = *((void *)&v70 + 1);
      uint64_t v34 = v71;
      sub_2411B6854(&v69, *((uint64_t *)&v70 + 1));
      uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
      uint64_t v37 = v36;
      uint64_t v38 = v61[3];
      uint64_t v39 = v61[4];
      sub_2411B6854(v61, v38);
      if (v35 == (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 16))(v38, v39) && v37 == v40)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v41 = sub_241633218();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v41 & 1) == 0)
        {
          uint64_t result = _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v69);
          uint64_t v15 = v32;
          continue;
        }
      }
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = v48;
    MEMORY[0x245618F80](v31, v49);
    (*v51)(v52, v53);
    uint64_t v43 = sub_24162BB18();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
    return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v69);
  }
}

uint64_t sub_2414B4EB0(uint64_t a1)
{
  uint64_t v32 = a1;
  uint64_t v1 = sub_24162D678();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v38 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414BB26C();
  uint64_t v36 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v28 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414BB1B0(0, &qword_268D01248, (void (*)(uint64_t))sub_2414BB26C);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (unint64_t *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t result = sub_24162D728();
  unint64_t v14 = 0;
  uint64_t v29 = v2;
  uint64_t v30 = result;
  unint64_t v15 = *(void *)(result + 16);
  uint64_t v27 = v2 + 16;
  uint64_t v37 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v35 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v31 = (void (**)(char *, uint64_t))(v2 + 8);
  while (1)
  {
    if (v14 == v15)
    {
      uint64_t v17 = 1;
      unint64_t v14 = v15;
      uint64_t v18 = v36;
      goto LABEL_7;
    }
    if (v14 >= *(void *)(v30 + 16)) {
      break;
    }
    uint64_t v19 = v29;
    uint64_t v18 = v36;
    unint64_t v20 = &v28[*(int *)(v36 + 48)];
    (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v20, v30+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v14, v1);
    uint64_t v21 = (char *)v9 + *(int *)(v18 + 48);
    *uint64_t v9 = v14;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v20, v1);
    uint64_t v17 = 0;
    ++v14;
LABEL_7:
    (*v35)(v9, v17, 1, v18);
    sub_2414BB874((uint64_t)v9, (uint64_t)v12, &qword_268D01248, (void (*)(uint64_t))sub_2414BB26C);
    if ((*v34)(v12, 1, v18) == 1)
    {
      uint64_t v33 = 0;
      goto LABEL_12;
    }
    uint64_t v33 = *(void *)v12;
    uint64_t v22 = v1;
    (*v37)(v38, &v12[*(int *)(v18 + 48)], v1);
    uint64_t v23 = sub_24162D638();
    uint64_t v25 = v24;
    if (v23 == sub_24162D638() && v25 == v26)
    {
      swift_bridgeObjectRelease_n();
      (*v31)(v38, v22);
LABEL_12:
      swift_bridgeObjectRelease();
      return v33;
    }
    char v16 = sub_241633218();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v22;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v31)(v38, v22);
    if (v16) {
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2414B52CC()
{
  sub_2414BB1B0(0, (unint64_t *)&unk_268D02F40, MEMORY[0x263F44068]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v12 - v1;
  uint64_t v3 = sub_24162D678();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162D728();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v2, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * (v8 - 1), v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_2414BB49C((uint64_t)v2, (unint64_t *)&unk_268D02F40, MEMORY[0x263F44068]);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  uint64_t v10 = sub_24162D658();
  if (*(void *)(v10 + 16))
  {
    sub_2411A3DF4(v10 + 32, (uint64_t)&v16);
  }
  else
  {
    uint64_t v18 = 0;
    long long v16 = 0u;
    long long v17 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v17 + 1))
  {
    sub_2414BB95C((uint64_t)&v16, (unint64_t *)&qword_268CFFE30, (unint64_t *)&qword_268CFF090, MEMORY[0x263F437A0]);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  if ((swift_dynamicCast() & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  if (v13 != 1 || v14 != 3)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  if (v15) {
    unsigned int v11 = 66304;
  }
  else {
    unsigned int v11 = 768;
  }
  sub_2414BA824(v12[1], v12[2], v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return swift_bridgeObjectRelease();
}

BOOL sub_2414B55F4(uint64_t a1, uint64_t a2)
{
  sub_2414BB1B0(0, (unint64_t *)&unk_268D02F40, MEMORY[0x263F44068]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v15[-v5];
  uint64_t v7 = sub_24162D658();
  if (!*(void *)(v7 + 16))
  {
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_2411A3DF4(v7 + 32, (uint64_t)&v18);
  swift_bridgeObjectRelease();
  if (!*((void *)&v19 + 1))
  {
LABEL_10:
    sub_2414BB95C((uint64_t)&v18, (unint64_t *)&qword_268CFFE30, (unint64_t *)&qword_268CFF090, MEMORY[0x263F437A0]);
LABEL_11:
    uint64_t v13 = sub_24162D658();
    if (*(void *)(v13 + 16))
    {
      sub_2411A3DF4(v13 + 32, (uint64_t)&v18);
    }
    else
    {
      uint64_t v20 = 0;
      long long v18 = 0u;
      long long v19 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v19 + 1))
    {
      sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
      if (swift_dynamicCast())
      {
        int v14 = v17;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v14 == 7;
      }
    }
    else
    {
      sub_2414BB95C((uint64_t)&v18, (unint64_t *)&qword_268CFFE30, (unint64_t *)&qword_268CFF090, MEMORY[0x263F437A0]);
    }
    return 0;
  }
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  if (v15[24] != 1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  int v8 = v16;
  if (v16 == 2)
  {
    sub_2414BB2D8(a2, (uint64_t)v6);
    uint64_t v9 = sub_24162D678();
    uint64_t v10 = *(void *)(v9 - 8);
    int v11 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9);
    sub_2414BB49C((uint64_t)v6, (unint64_t *)&unk_268D02F40, MEMORY[0x263F44068]);
    if (v11 == 1)
    {
      sub_2414BB49C(a2, (unint64_t *)&unk_268D02F40, MEMORY[0x263F44068]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, a1, v9);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
    }
  }
  swift_bridgeObjectRelease();
  return v8 != 3;
}

uint64_t sub_2414B592C(uint64_t a1)
{
  uint64_t v73 = sub_24162B788();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  long long v71 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for OnboardingEndDateRow(0);
  MEMORY[0x270FA5388](v77);
  unint64_t v76 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162BB18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v70 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v78 = (char *)&v70 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v70 - v11;
  MEMORY[0x270FA5388](v13);
  char v15 = (char *)&v70 - v14;
  type metadata accessor for OnboardingOngoingCycleFactorsTableViewDataSource(0);
  sub_24162D168();
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  uint64_t v75 = sub_2411BF880(0, &qword_268CFBBB8);
  swift_dynamicCast();
  uint64_t result = sub_24162BAC8();
  uint64_t v17 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v74 = a1;
    uint64_t v18 = sub_24162BB08();
    MEMORY[0x245618F80](v17, v18);
    char v19 = sub_24162D108();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v80 = v15;
    v20(v12, v15, v5);
    uint64_t v79 = v6;
    uint64_t v21 = v1;
    if (v19)
    {
      sub_24162D168();
      sub_2411BF880(0, (unint64_t *)&unk_268D01430);
      swift_dynamicCast();
      uint64_t v22 = (uint64_t)v91;
      uint64_t v23 = v92;
      sub_2411B6854(v90, (uint64_t)v91);
      LODWORD(v22) = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
      uint64_t v24 = *(void (**)(char *, uint64_t))(v79 + 8);
      v24(v12, v5);
      BOOL v25 = v22 == 4;
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v90);
    }
    else
    {
      uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
      v24(v12, v5);
      BOOL v25 = 0;
    }
    uint64_t v26 = v5;
    uint64_t v27 = (uint64_t)v78;
    uint64_t v28 = (uint64_t)v76;
    sub_2411A3DF4((uint64_t)v93, (uint64_t)v81);
    if (swift_dynamicCast())
    {
      sub_2414BB43C(v28, type metadata accessor for OnboardingEndDateRow);
      uint64_t v29 = v94;
      uint64_t v30 = v95;
      uint64_t v31 = sub_2411B6854(v93, v94);
      uint64_t v82 = v29;
      uint64_t v83 = *(void *)(*(void *)(*(void *)(v30 + 8) + 8) + 8);
      uint64_t v32 = sub_2411B6C70(v81);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v32, v31, v29);
      sub_24162D7D8();
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v81);
    }
    uint64_t v33 = (uint64_t)v80;
    if (v25)
    {
      sub_24162D6D8();
      uint64_t v34 = v94;
      uint64_t v35 = v95;
      uint64_t v36 = sub_2411B6854(v93, v94);
      uint64_t v82 = v34;
      uint64_t v83 = *(void *)(v35 + 8);
      uint64_t v37 = v83;
      uint64_t v38 = sub_2411B6C70(v81);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v38, v36, v34);
      sub_2411A3DF4((uint64_t)v81, (uint64_t)v90);
      uint64_t v39 = (uint64_t)v91;
      uint64_t v40 = v92;
      sub_241192BB0((uint64_t)v90, (uint64_t)v91);
      (*(void (**)(void, uint64_t, uint64_t))(v37 + 24))(0, v39, v40);
      char v41 = v91;
      uint64_t v42 = v92;
      uint64_t v43 = sub_2411B6854(v90, (uint64_t)v91);
      uint64_t v88 = v41;
      unint64_t v89 = *(void *)(*(void *)(v42 + 8) + 8);
      uint64_t v44 = sub_2411B6C70((uint64_t *)&v87);
      (*((void (**)(uint64_t *, void *, ValueMetadata *))v41[-1].Description + 2))(v44, v43, v41);
      sub_24162D7D8();
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v87);
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v90);
      v24((char *)v33, v26);
      uint64_t v45 = v81;
LABEL_11:
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v45);
      return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v93);
    }
    sub_2414B780C((uint64_t)v80, v27);
    uint64_t v46 = v94;
    uint64_t v47 = v95;
    uint64_t v48 = sub_2411B6854(v93, v94);
    uint64_t v82 = v46;
    uint64_t v49 = *(void *)(v47 + 8);
    uint64_t v83 = v49;
    unint64_t v50 = sub_2411B6C70(v81);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v46 - 8) + 16))(v50, v48, v46);
    uint64_t result = sub_24162BAF8();
    uint64_t v51 = result - 1;
    if (!__OFSUB__(result, 1))
    {
      uint64_t v52 = sub_24162BB08();
      uint64_t v53 = v26;
      uint64_t v54 = v70;
      MEMORY[0x245618FA0](v51, v52);
      sub_2411A3DF4((uint64_t)v81, (uint64_t)&v87);
      char v55 = v88;
      unint64_t v56 = v89;
      sub_241192BB0((uint64_t)&v87, (uint64_t)v88);
      (*(void (**)(uint64_t, ValueMetadata *, unint64_t))(v49 + 24))(1, v55, v56);
      uint64_t v57 = v88;
      unint64_t v58 = v89;
      uint64_t v59 = sub_2411B6854(&v87, (uint64_t)v88);
      uint64_t v91 = v57;
      uint64_t v92 = *(void *)(*(void *)(v58 + 8) + 8);
      unint64_t v60 = sub_2411B6C70(v90);
      (*((void (**)(uint64_t *, void *, ValueMetadata *))v57[-1].Description + 2))(v60, v59, v57);
      sub_24162D7D8();
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v90);
      sub_2411B6CD4(&v87, (uint64_t)v90);
      uint64_t v78 = v21;
      v24(v54, v53);
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v81);
      sub_2411B6854(v90, (uint64_t)v91);
      uint64_t v61 = sub_24162C8A8();
      uint64_t v63 = v62;
      uint64_t v64 = v71;
      sub_24162B778();
      uint64_t v65 = sub_24162B738();
      uint64_t v67 = v66;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v64, v73);
      uint64_t v88 = &type metadata for OnboardingDatePickerRow;
      unint64_t v89 = sub_24123D6FC();
      uint64_t v68 = swift_allocObject();
      uint64_t v69 = v68 + 16;
      uint64_t v86 = 0;
      *(void *)&long long v87 = v68;
      swift_unknownObjectWeakInit();
      uint64_t v82 = v65;
      uint64_t v83 = v67;
      v81[1] = v65;
      v81[2] = v67;
      uint64_t v84 = v61;
      uint64_t v85 = v63;
      LOBYTE(v81[0]) = 2;
      sub_2414BB7C4((uint64_t)v81, v69);
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_24162D7A8();
      v24((char *)v27, v53);
      v24(v80, v53);
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v87);
      uint64_t v45 = v90;
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2414B6220(uint64_t a1)
{
  uint64_t v2 = sub_24162B788();
  uint64_t v61 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v60 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162BB18();
  uint64_t v70 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v59 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v62 = (uint64_t)&v57 - v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v57 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v57 - v12;
  type metadata accessor for OnboardingOngoingCycleFactorsTableViewDataSource(0);
  sub_24162D168();
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  swift_dynamicCast();
  int v64 = LOBYTE(v77[0]);
  uint64_t v65 = v77[1];
  uint64_t v73 = v77[2];
  uint64_t v66 = v78;
  unint64_t v72 = v79;
  id v68 = v80;
  uint64_t v67 = v81;
  uint64_t v71 = v82;
  uint64_t result = sub_24162BAC8();
  uint64_t v15 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v58 = v2;
    uint64_t v57 = a1;
    uint64_t v16 = sub_24162BB08();
    MEMORY[0x245618F80](v15, v16);
    char v17 = sub_24162D108();
    uint64_t v18 = v70;
    uint64_t v19 = (uint64_t)v13;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v10, v13, v4);
    uint64_t v69 = v4;
    uint64_t v63 = v13;
    if (v17)
    {
      sub_24162D168();
      sub_2411BF880(0, (unint64_t *)&unk_268D01430);
      swift_dynamicCast();
      uint64_t v20 = v84;
      unint64_t v21 = v85;
      sub_2411B6854(v83, (uint64_t)v84);
      LODWORD(v20) = (*(unsigned __int8 (**)(ValueMetadata *, unint64_t))(v21 + 24))(v20, v21);
      uint64_t v22 = *(void (**)(char *, uint64_t))(v18 + 8);
      v22(v10, v69);
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v83);
      if (v20 == 6)
      {
        sub_24162D6D8();
        uint64_t v78 = &type metadata for OnboardingTypeRow;
        unint64_t v79 = sub_24123D438();
        uint64_t v23 = swift_allocObject();
        v77[0] = v23;
        *(unsigned char *)(v23 + 16) = v64;
        unint64_t v25 = v72;
        uint64_t v24 = v73;
        *(void *)(v23 + 24) = v65;
        *(void *)(v23 + 32) = v24;
        *(void *)(v23 + 40) = v66;
        *(void *)(v23 + 48) = v25;
        id v26 = v68;
        uint64_t v27 = v67;
        *(void *)(v23 + 56) = v68;
        *(void *)(v23 + 64) = v27;
        *(void *)(v23 + 72) = v71;
        sub_2411A3DF4((uint64_t)v77, (uint64_t)v83);
        *(unsigned char *)sub_241192BB0((uint64_t)v83, (uint64_t)v84) = 0;
        uint64_t v28 = v84;
        unint64_t v29 = v85;
        uint64_t v30 = sub_2411B6854(v83, (uint64_t)v84);
        uint64_t v75 = v28;
        uint64_t v76 = *(void *)(*(void *)(v29 + 8) + 8);
        uint64_t v31 = sub_2411B6C70((uint64_t *)&v74);
        (*((void (**)(uint64_t *, void *, ValueMetadata *))v28[-1].Description + 2))(v31, v30, v28);
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        swift_retain();
        id v32 = v26;
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        sub_24162D7D8();
        _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v74);
        _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v83);
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        v22(v63, v69);
        return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v77);
      }
    }
    else
    {
      uint64_t v22 = *(void (**)(char *, uint64_t))(v18 + 8);
      v22(v10, v4);
    }
    uint64_t v33 = v71;
    uint64_t v34 = v62;
    sub_2414B780C(v19, v62);
    uint64_t v84 = &type metadata for OnboardingTypeRow;
    unint64_t v85 = sub_24123D438();
    uint64_t v35 = swift_allocObject();
    v83[0] = v35;
    *(unsigned char *)(v35 + 16) = v64;
    unint64_t v37 = v72;
    uint64_t v36 = v73;
    *(void *)(v35 + 24) = v65;
    *(void *)(v35 + 32) = v36;
    *(void *)(v35 + 40) = v66;
    *(void *)(v35 + 48) = v37;
    id v38 = v68;
    uint64_t v39 = v67;
    *(void *)(v35 + 56) = v68;
    *(void *)(v35 + 64) = v39;
    *(void *)(v35 + 72) = v33;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_retain();
    id v40 = v38;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t result = sub_24162BAF8();
    uint64_t v41 = result - 1;
    if (!__OFSUB__(result, 1))
    {
      uint64_t v42 = sub_24162BB08();
      id v68 = v40;
      uint64_t v43 = v59;
      MEMORY[0x245618FA0](v41, v42);
      sub_2411A3DF4((uint64_t)v83, (uint64_t)&v74);
      *(unsigned char *)sub_241192BB0((uint64_t)&v74, (uint64_t)v75) = 1;
      uint64_t v44 = v75;
      uint64_t v45 = v76;
      uint64_t v46 = sub_2411B6854(&v74, (uint64_t)v75);
      uint64_t v78 = v44;
      unint64_t v79 = *(void *)(*(void *)(v45 + 8) + 8);
      uint64_t v47 = sub_2411B6C70(v77);
      (*((void (**)(uint64_t *, void *, ValueMetadata *))v44[-1].Description + 2))(v47, v46, v44);
      sub_24162D7D8();
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v77);
      sub_2411B6CD4(&v74, (uint64_t)v77);
      uint64_t v48 = v69;
      v22(v43, v69);
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v83);
      sub_2411B6854(v77, (uint64_t)v78);
      uint64_t v49 = sub_24162C8A8();
      uint64_t v51 = v50;
      uint64_t v52 = v60;
      sub_24162B778();
      uint64_t v53 = sub_24162B738();
      uint64_t v55 = v54;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v52, v58);
      uint64_t v84 = &type metadata for OnboardingTypePicker;
      unint64_t v85 = sub_24123D778();
      unint64_t v56 = (void *)swift_allocObject();
      v83[0] = v56;
      v56[2] = v53;
      v56[3] = v55;
      v56[4] = v49;
      v56[5] = v51;
      sub_24162D7A8();
      swift_bridgeObjectRelease();

      swift_release();
      swift_bridgeObjectRelease();
      v22((char *)v34, v48);
      v22(v63, v48);
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v83);
      return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v77);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2414B6A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_24162BB18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_24162BAC8();
  uint64_t v10 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = sub_24162BB08();
    MEMORY[0x245618F80](v10, v11);
    type metadata accessor for OnboardingOngoingCycleFactorsTableViewDataSource(0);
    sub_24162D168();
    sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
    swift_dynamicCast();
    sub_24162D168();
    sub_2411BF880(0, &qword_268CFBBB8);
    swift_dynamicCast();
    uint64_t v12 = v30;
    uint64_t v13 = v31;
    sub_241192BB0((uint64_t)v29, v30);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(a2, v12, v13);
    uint64_t v14 = v30;
    uint64_t v15 = sub_2411B6854(v29, v30);
    uint64_t v16 = *(void *)(v14 - 8);
    __n128 v17 = MEMORY[0x270FA5388](v15);
    uint64_t v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v16 + 16))(v19, v17);
    uint64_t v20 = sub_24162C8A8();
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v14);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_bridgeObjectRelease();
    uint64_t v33 = v20;
    uint64_t v34 = v22;
    swift_bridgeObjectRelease();
    uint64_t v23 = v30;
    uint64_t v24 = v31;
    unint64_t v25 = sub_2411B6854(v29, v30);
    v28[3] = v23;
    uint64_t v26 = *(void *)(*(void *)(v24 + 8) + 8);
    v28[4] = v26;
    uint64_t v27 = sub_2411B6C70(v28);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v27, v25, v23);
    sub_2414BAA8C((uint64_t)v27, v3, v23, v26);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v28);
    sub_2414BB6C4((uint64_t)v32, (uint64_t)v28);
    sub_2414BA0F0((uint64_t)v28);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_24126EF94((uint64_t)v28);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v29);
    return sub_24126EF94((uint64_t)v32);
  }
  return result;
}

uint64_t sub_2414B6DC0(uint64_t a1, uint64_t a2, ValueMetadata *a3)
{
  uint64_t v35 = a3;
  sub_2414BB1B0(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v34 - v5;
  uint64_t v40 = sub_24162BB18();
  uint64_t v41 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v37 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v38 = (char *)&v34 - v9;
  uint64_t v39 = v3;
  uint64_t result = sub_24162D788();
  if (*((void *)&v47 + 1))
  {
    sub_2411B6CD4(&v46, (uint64_t)v50);
    uint64_t v36 = sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
    swift_dynamicCast();
    char v11 = v42;
    uint64_t v12 = *((void *)&v42 + 1);
    long long v13 = v43;
    long long v14 = v44;
    long long v15 = v45;
    uint64_t v51 = &type metadata for OnboardingTypeRow;
    *(void *)&long long v52 = sub_24123D680();
    uint64_t v16 = swift_allocObject();
    v50[0] = v16;
    *(unsigned char *)(v16 + 16) = v11;
    *(void *)(v16 + 24) = v12;
    *(_OWORD *)(v16 + 32) = v13;
    *(_OWORD *)(v16 + 48) = v14;
    *(_OWORD *)(v16 + 64) = v15;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_retain();
    id v17 = *((id *)&v14 + 1);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_2414B4734(v50, (uint64_t)v6);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v50);
    uint64_t v18 = v41;
    uint64_t v19 = v40;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v6, 1, v40) == 1)
    {
      sub_2414BB49C((uint64_t)v6, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
LABEL_8:
      uint64_t v33 = (void *)*((void *)&v44 + 1);
      swift_bridgeObjectRelease();

      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t v20 = v38;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v38, v6, v19);
    uint64_t result = sub_24162BAF8();
    uint64_t v21 = result + 1;
    if (!__OFADD__(result, 1))
    {
      uint64_t v22 = sub_24162BB08();
      uint64_t v23 = v37;
      MEMORY[0x245618FA0](v21, v22);
      type metadata accessor for OnboardingOngoingCycleFactorsTableViewDataSource(0);
      sub_24162D168();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v18 + 8);
      uint64_t v24 = v18 + 8;
      unint64_t v25 = v26;
      v26((char *)v23, v19);
      if (swift_dynamicCast())
      {
        uint64_t v36 = *((void *)&v46 + 1);
        uint64_t v37 = v46;
        uint64_t v34 = *((void *)&v47 + 1);
        *((void *)&v43 + 1) = v35;
        uint64_t v41 = v24;
        uint64_t v27 = (void *)*((void *)&v44 + 1);
        LOBYTE(v50[0]) = v42;
        v50[1] = *((void *)&v42 + 1);
        v50[2] = v43;
        uint64_t v51 = v35;
        long long v52 = v44;
        long long v53 = v45;
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        swift_retain();
        id v28 = v27;
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        unint64_t v29 = sub_24123B274();
        uint64_t v30 = v20;
        uint64_t v32 = v31;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        long long v46 = v42;
        long long v47 = v43;
        long long v48 = v44;
        long long v49 = v45;
        sub_2414BB590((uint64_t)&v46);
        sub_2414BA348(&v46);
        sub_2414BB5E0((uint64_t)&v46);
        sub_2414BA5AC(v37, v36, v29, v32);
        v25(v30, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v25(v20, v19);
      }
      goto LABEL_8;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_2414B72DC()
{
  uint64_t v0 = sub_24162D678();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162D728();
  unint64_t result = sub_24162BB08();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (result >= *(void *)(v4 + 16))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, v4+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * result, v0);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_24162D658();
  if (*(void *)(v6 + 16))
  {
    sub_2411A3DF4(v6 + 32, (uint64_t)&v9);
  }
  else
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
  }
  unint64_t result = swift_bridgeObjectRelease();
  if (*((void *)&v10 + 1))
  {
    sub_2411B6CD4(&v9, (uint64_t)v12);
    sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
    swift_dynamicCast();
    id v7 = v8[5];
    sub_24162BB08();
    sub_24162D6F8();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return (unint64_t)v7;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_2414B74D8(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = sub_24162BB18();
  uint64_t v3 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162B718();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OnboardingEndDateRow(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414BB3D4(a2, (uint64_t)v12, type metadata accessor for OnboardingEndDateRow);
  sub_24162B5E8();
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(&v12[*(int *)(v10 + 28)], v9, v6);
  v27[3] = v10;
  v27[4] = sub_2414BB4F8(&qword_268CFB598, (void (*)(uint64_t))type metadata accessor for OnboardingEndDateRow);
  long long v13 = sub_2411B6C70(v27);
  sub_2414BB3D4((uint64_t)v12, (uint64_t)v13, type metadata accessor for OnboardingEndDateRow);
  uint64_t result = sub_24162BAC8();
  uint64_t v15 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = sub_24162BB08();
    MEMORY[0x245618F80](v15, v16);
    sub_2411A3DF4((uint64_t)v27, (uint64_t)v24);
    *(unsigned char *)(sub_241192BB0((uint64_t)v24, v25) + 16) = 0;
    uint64_t v17 = v25;
    uint64_t v18 = v26;
    uint64_t v19 = sub_2411B6854(v24, v25);
    v23[3] = v17;
    v23[4] = *(void *)(*(void *)(v18 + 8) + 8);
    uint64_t v20 = sub_2411B6C70(v23);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v20, v19, v17);
    sub_24162D7D8();
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v23);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v24);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v22);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v27);
    sub_24162D6D8();
    return sub_2414BB43C((uint64_t)v12, type metadata accessor for OnboardingEndDateRow);
  }
  return result;
}

uint64_t sub_2414B780C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2414BB1B0(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  MEMORY[0x270FA5388](v5 - 8);
  id v68 = (char *)&v52 - v6;
  uint64_t v7 = sub_24162BB18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v52 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v52 - v15;
  uint64_t v61 = sub_24162D678();
  uint64_t v17 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v69 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = v2;
  uint64_t result = sub_24162D728();
  uint64_t v67 = *(void (**)(uint64_t, char *, uint64_t))(result + 16);
  if (!v67)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1, v7);
  }
  long long v53 = v13;
  uint64_t v54 = v16;
  long long v52 = v10;
  uint64_t v60 = v7;
  uint64_t v55 = a2;
  uint64_t v56 = a1;
  unint64_t v20 = 0;
  unint64_t v66 = result + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  uint64_t v65 = v17 + 16;
  uint64_t v57 = v8;
  uint64_t v58 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v63 = (void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v21 = MEMORY[0x263F437A0];
  uint64_t v22 = v61;
  uint64_t v62 = v17;
  uint64_t v64 = result;
  while (1)
  {
    if (v20 >= *(void *)(result + 16))
    {
      __break(1u);
      goto LABEL_32;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v69, v66 + *(void *)(v17 + 72) * v20, v22);
    uint64_t v23 = sub_24162D658();
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      uint64_t v25 = v23 + 32;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      while (1)
      {
        sub_2411A3DF4(v25, (uint64_t)&v73);
        sub_2411A3DF4((uint64_t)&v73, (uint64_t)v70);
        sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2411A3DF4((uint64_t)&v73, (uint64_t)v72);
          goto LABEL_15;
        }
        sub_2411A3DF4((uint64_t)&v73, (uint64_t)v72);
        sub_2411A3DF4((uint64_t)v72, (uint64_t)&v71);
        if (swift_dynamicCast()) {
          break;
        }
        _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v72);
        _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v73);
        v25 += 40;
        if (!--v24)
        {
          swift_bridgeObjectRelease();
          uint64_t v22 = v61;
          goto LABEL_12;
        }
      }
      sub_24126EF94((uint64_t)v70);
LABEL_15:
      uint64_t v22 = v61;
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v72);
      swift_bridgeObjectRelease();
      sub_2411B6CD4(&v73, (uint64_t)&v76);
    }
    else
    {
LABEL_12:
      uint64_t v78 = 0;
      long long v76 = 0u;
      long long v77 = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v26 = (uint64_t)v68;
    if (*((void *)&v77 + 1)) {
      break;
    }
    (*v63)(v69, v22);
    sub_2414BB95C((uint64_t)&v76, (unint64_t *)&qword_268CFFE30, (unint64_t *)&qword_268CFF090, v21);
LABEL_4:
    uint64_t result = v64;
    ++v20;
    uint64_t v17 = v62;
    if ((void (*)(uint64_t, char *, uint64_t))v20 == v67)
    {
      swift_bridgeObjectRelease();
      a2 = v55;
      a1 = v56;
      uint64_t v7 = v60;
      uint64_t v8 = v57;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1, v7);
    }
  }
  sub_2411B6CD4(&v76, (uint64_t)v79);
  sub_2411A3DF4((uint64_t)v79, (uint64_t)v70);
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  sub_2411BF880(0, (unint64_t *)&unk_268D01430);
  swift_dynamicCast();
  sub_2414B4734(&v76, v26);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v76);
  if ((*v58)(v26, 1, v60) == 1)
  {
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v79);
    (*v63)(v69, v22);
    sub_2414BB49C(v26, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = v57;
  id v28 = (char *)(v57 + 32);
  unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 32);
  uint64_t v30 = v26;
  uint64_t v31 = v54;
  uint64_t v32 = v60;
  v29(v54, v30, v60);
  uint64_t result = sub_24162BAF8();
  uint64_t v33 = result - 1;
  if (__OFSUB__(result, 1))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v67 = (void (*)(uint64_t, char *, uint64_t))v29;
  id v68 = v28;
  uint64_t v34 = sub_24162BB08();
  uint64_t v35 = v53;
  MEMORY[0x245618FA0](v33, v34);
  type metadata accessor for OnboardingOngoingCycleFactorsTableViewDataSource(0);
  sub_24162D168();
  sub_2411BF880(0, &qword_268D01228);
  swift_dynamicCast();
  sub_2411A3DF4((uint64_t)v70, (uint64_t)&v76);
  uint64_t v36 = *((void *)&v77 + 1);
  uint64_t v37 = v78;
  sub_241192BB0((uint64_t)&v76, *((uint64_t *)&v77 + 1));
  (*(void (**)(void, uint64_t, uint64_t))(v37 + 24))(0, v36, v37);
  uint64_t v38 = *((void *)&v77 + 1);
  uint64_t v39 = v78;
  uint64_t v40 = sub_2411B6854(&v76, *((uint64_t *)&v77 + 1));
  uint64_t v74 = v38;
  uint64_t v75 = *(void *)(*(void *)(v39 + 8) + 8);
  uint64_t v41 = sub_2411B6C70((uint64_t *)&v73);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v41, v40, v38);
  sub_24162D7D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v73);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v76);
  sub_24162D6D8();
  sub_2411A3DF4((uint64_t)v79, (uint64_t)&v76);
  if (!swift_dynamicCast())
  {
    uint64_t v51 = *(void (**)(char *, uint64_t))(v27 + 8);
    v51(v35, v32);
    v51(v31, v32);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v79);
    (*v63)(v69, v61);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v55, v56, v32);
    return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v70);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = v56;
  uint64_t result = sub_24162BAF8();
  uint64_t v43 = result - 1;
  if (!__OFSUB__(result, 1))
  {
    uint64_t v44 = sub_24162BB08();
    long long v45 = v52;
    MEMORY[0x245618FA0](v43, v44);
    uint64_t v46 = sub_24162BB08();
    long long v47 = v54;
    uint64_t v48 = sub_24162BB08();
    uint64_t v49 = v27;
    uint64_t v50 = *(void (**)(char *, uint64_t))(v27 + 8);
    v50(v53, v32);
    v50(v47, v32);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v79);
    (*v63)(v69, v61);
    if (v46 == v48)
    {
      v67(v55, v45, v32);
    }
    else
    {
      v50(v45, v32);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v55, v42, v32);
    }
    return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v70);
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2414B8080(int a1)
{
  int v90 = a1;
  uint64_t v82 = sub_241631AC8();
  unint64_t v103 = *(char **)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v81 = (char *)&v73 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_24162B718();
  uint64_t v102 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v80 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v86 = (char *)&v73 - v4;
  sub_2414BB1B0(0, &qword_268CFBBA8, (void (*)(uint64_t))type metadata accessor for OnboardingEndDateRow);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v96 = (char *)&v73 - v6;
  uint64_t v98 = type metadata accessor for OnboardingEndDateRow(0);
  uint64_t v7 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v88 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v92 = (uint64_t)&v73 - v10;
  uint64_t v97 = sub_24162D678();
  uint64_t v11 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  long long v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24162B7F8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24162BA08();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v79 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v73 - v23;
  uint64_t v116 = MEMORY[0x263F8EE78];
  (*(void (**)(char *, void, uint64_t, __n128))(v15 + 104))(v17, *MEMORY[0x263F07740], v14, v22);
  long long v87 = v24;
  sub_24162B808();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t result = sub_24162D728();
  uint64_t v26 = *(void *)(result + 16);
  if (v26)
  {
    uint64_t v83 = v18;
    unint64_t v27 = 0;
    unint64_t v105 = result + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v104 = v11 + 16;
    uint64_t v95 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v91 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v84 = (void (**)(char *, uint64_t))(v102 + 8);
    uint64_t v78 = (void (**)(char *, uint64_t, uint64_t))(v102 + 16);
    long long v77 = (void (**)(char *, char *, uint64_t))(v19 + 16);
    long long v76 = (void (**)(char *, uint64_t))(v103 + 8);
    id v28 = (void (**)(char *, uint64_t))(v11 + 8);
    unint64_t v85 = (void *)MEMORY[0x263F8EE78];
    uint64_t v29 = v97;
    uint64_t v30 = v19;
    uint64_t v31 = result;
    uint64_t v94 = v11;
    uint64_t v100 = v30;
    uint64_t v93 = result;
    uint64_t v99 = v26;
    while (1)
    {
      if (v27 >= *(void *)(v31 + 16))
      {
        __break(1u);
        return result;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v105 + *(void *)(v11 + 72) * v27, v29);
      uint64_t v32 = sub_24162D658();
      if (*(void *)(v32 + 16))
      {
        sub_2411A3DF4(v32 + 32, (uint64_t)&v113);
      }
      else
      {
        uint64_t v115 = 0;
        long long v114 = 0u;
        long long v113 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v114 + 1))
      {
        sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
        if (swift_dynamicCast())
        {
          uint64_t v102 = *((void *)&v110 + 1);
          uint64_t v101 = v111;
          unint64_t v103 = v112;
          uint64_t v33 = sub_24162D658();
          uint64_t v34 = *(void *)(v33 + 16);
          if (v34)
          {
            uint64_t v35 = v33 + 32;
            while (1)
            {
              sub_2411A3DF4(v35, (uint64_t)&v110);
              sub_2411A3DF4((uint64_t)&v110, (uint64_t)v109);
              sub_2411BF880(0, (unint64_t *)&unk_268D01430);
              swift_dynamicCast();
              uint64_t v37 = v107;
              uint64_t v36 = v108;
              sub_2411B6854(&v106, v107);
              int v38 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v36 + 24))(v37, v36);
              _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v106);
              if (v38 == 3) {
                break;
              }
              _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v110);
              v35 += 40;
              if (!--v34) {
                goto LABEL_16;
              }
            }
            sub_2411B6CD4(&v110, (uint64_t)&v113);
          }
          else
          {
LABEL_16:
            uint64_t v115 = 0;
            long long v114 = 0u;
            long long v113 = 0u;
          }
          swift_bridgeObjectRelease();
          uint64_t v39 = (uint64_t)v96;
          uint64_t v29 = v97;
          uint64_t v30 = v100;
          uint64_t v26 = v99;
          if (!*((void *)&v114 + 1))
          {
            sub_2414BB95C((uint64_t)&v113, (unint64_t *)&qword_268CFFE30, (unint64_t *)&qword_268CFF090, MEMORY[0x263F437A0]);
            (*v95)(v39, 1, 1, v98);
LABEL_23:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            (*v28)(v13, v29);
            uint64_t result = sub_2414BB49C(v39, &qword_268CFBBA8, (void (*)(uint64_t))type metadata accessor for OnboardingEndDateRow);
            uint64_t v11 = v94;
            uint64_t v31 = v93;
            goto LABEL_5;
          }
          uint64_t v40 = v98;
          int v41 = swift_dynamicCast();
          (*v95)(v39, v41 ^ 1u, 1, v40);
          if ((*v91)(v39, 1, v40) == 1) {
            goto LABEL_23;
          }
          uint64_t v42 = v39;
          uint64_t v43 = v92;
          sub_2414BB36C(v42, v92, type metadata accessor for OnboardingEndDateRow);
          uint64_t v44 = v88;
          sub_2414BB3D4(v43, v88, type metadata accessor for OnboardingEndDateRow);
          if (v90)
          {
            sub_2414BB43C(v44, type metadata accessor for OnboardingEndDateRow);
            goto LABEL_25;
          }
          long long v45 = v86;
          sub_24162B5E8();
          sub_2414BB4F8((unint64_t *)&qword_268CFAD00, MEMORY[0x263F07490]);
          uint64_t v46 = v89;
          char v47 = sub_241631C28();
          uint64_t v48 = *v84;
          (*v84)(v45, v46);
          sub_2414BB43C(v44, type metadata accessor for OnboardingEndDateRow);
          if (v47)
          {
LABEL_25:
            uint64_t v49 = v103;
            MEMORY[0x24561F3D0]();
            uint64_t v11 = v94;
            uint64_t v31 = v93;
            if (*(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_241631F68();
            }
            sub_241631F98();
            sub_241631F48();
            uint64_t v30 = v100;
            uint64_t v26 = v99;
          }
          else
          {
            uint64_t v50 = v86;
            (*v78)(v86, v92 + *(int *)(v98 + 28), v89);
            (*v77)(v79, v87, v83);
            uint64_t v51 = v81;
            sub_241631A68();
            uint64_t v52 = sub_241631A88();
            (*v76)(v51, v82);
            long long v53 = self;
            uint64_t v54 = (void *)sub_24162B8E8();
            id v55 = objc_msgSend(v53, sel_hk_noonWithDayIndex_calendar_, v52, v54);

            uint64_t v56 = v103;
            id v57 = objc_msgSend(v56, sel_categoryType);
            long long v73 = v48;
            id v58 = v57;
            id v59 = objc_msgSend(v56, sel_value);
            uint64_t v74 = v56;
            id v60 = objc_msgSend(v56, sel_startDate);
            sub_24162B6A8();

            uint64_t v61 = v80;
            id v75 = v55;
            sub_24162B6A8();
            uint64_t v62 = (void *)sub_24162B668();
            uint64_t v63 = (void *)sub_24162B668();
            id v64 = objc_msgSend(self, sel_categorySampleWithType_value_startDate_endDate_, v58, v59, v62, v63);

            uint64_t v65 = v61;
            uint64_t v66 = v89;
            uint64_t v67 = v73;
            v73(v65, v89);
            v67(v50, v66);
            id v68 = v85;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v68 = sub_24158CD9C(0, v68[2] + 1, 1, v68);
            }
            unint64_t v70 = v68[2];
            unint64_t v69 = v68[3];
            uint64_t v29 = v97;
            uint64_t v30 = v100;
            uint64_t v26 = v99;
            if (v70 >= v69 >> 1) {
              id v68 = sub_24158CD9C((void *)(v69 > 1), v70 + 1, 1, v68);
            }
            v68[2] = v70 + 1;
            unint64_t v85 = v68;
            uint64_t v71 = &v68[2 * v70];
            v71[4] = v74;
            v71[5] = v64;

            uint64_t v11 = v94;
            uint64_t v31 = v93;
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2414BB43C(v92, type metadata accessor for OnboardingEndDateRow);
        }
      }
      else
      {
        sub_2414BB95C((uint64_t)&v113, (unint64_t *)&qword_268CFFE30, (unint64_t *)&qword_268CFF090, MEMORY[0x263F437A0]);
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))*v28)(v13, v29);
LABEL_5:
      if (++v27 == v26)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = v83;
        unint64_t v72 = v85;
        goto LABEL_36;
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v72 = (void *)MEMORY[0x263F8EE78];
  uint64_t v30 = v19;
LABEL_36:
  (*(void (**)(char *, uint64_t))(v30 + 8))(v87, v18);
  return (uint64_t)v72;
}

void sub_2414B8E64()
{
}

uint64_t sub_2414B8E94()
{
  return sub_2414BB358(*(void *)(v0 + qword_268D01210), *(void *)(v0 + qword_268D01210 + 8));
}

uint64_t sub_2414B8EA8()
{
  uint64_t v0 = sub_24162D818();
  sub_2414BB358(*(void *)(v0 + qword_268D01210), *(void *)(v0 + qword_268D01210 + 8));

  return swift_deallocClassInstance();
}

uint64_t sub_2414B8EFC()
{
  return type metadata accessor for OnboardingOngoingCycleFactorsTableViewDataSource(0);
}

void sub_2414B8F04(uint64_t a1, unint64_t a2)
{
  sub_2414BB26C();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v5);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (uint64_t *)((char *)&v38 - v10);
  uint64_t v12 = *(void *)(v2 + qword_268D01210 + 8);
  if (v12 != 1)
  {
    if (!v12)
    {
      sub_2414B9684(a1);
    }
    return;
  }
  uint64_t v50 = v9;
  uint64_t v44 = v8;
  if (a2 >> 62) {
    goto LABEL_33;
  }
  uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  if (v13)
  {
LABEL_8:
    unint64_t v14 = 0;
    uint64_t v15 = 0;
    unint64_t v45 = a2 & 0xC000000000000001;
    unint64_t v39 = a2 + 32;
    uint64_t v40 = a2 & 0xFFFFFFFFFFFFFF8;
    unint64_t v42 = a2;
    uint64_t v43 = v2;
    uint64_t v41 = v13;
    while (1)
    {
      if (v45)
      {
        id v16 = (id)MEMORY[0x245620370](v14, a2);
      }
      else
      {
        if (v14 >= *(void *)(v40 + 16)) {
          goto LABEL_32;
        }
        id v16 = *(id *)(v39 + 8 * v14);
      }
      uint64_t v17 = v16;
      BOOL v18 = __OFADD__(v14, 1);
      unint64_t v19 = v14 + 1;
      if (v18)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v13 = sub_241633068();
        if (!v13) {
          break;
        }
        goto LABEL_8;
      }
      unint64_t v49 = v19;
      uint64_t v20 = sub_24162D728();
      id v21 = v17;
      uint64_t v22 = sub_2414BACF0(v20, (uint64_t)v21);
      swift_bridgeObjectRelease();
      id v48 = v21;

      int64_t v23 = *(void *)(v22 + 16);
      if (v23)
      {
        uint64_t v47 = v15;
        uint64_t v52 = MEMORY[0x263F8EE78];
        sub_24149E56C(0, v23, 0);
        uint64_t v24 = *(unsigned __int8 *)(v44 + 80);
        uint64_t v46 = v22;
        uint64_t v25 = v22 + ((v24 + 32) & ~v24);
        uint64_t v51 = *(void *)(v44 + 72);
        do
        {
          sub_2414BB3D4(v25, (uint64_t)v11, (uint64_t (*)(void))sub_2414BB26C);
          uint64_t v26 = v6;
          uint64_t v27 = *(int *)(v6 + 48);
          id v28 = (char *)v50 + v27;
          uint64_t v29 = (char *)v11 + v27;
          uint64_t v30 = *v11;
          *uint64_t v50 = *v11;
          uint64_t v31 = sub_24162D678();
          uint64_t v32 = *(void *)(v31 - 8);
          (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v28, v29, v31);
          (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v31);
          sub_2414BB43C((uint64_t)v11, (uint64_t (*)(void))sub_2414BB26C);
          uint64_t v33 = v52;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24149E56C(0, *(void *)(v33 + 16) + 1, 1);
            uint64_t v33 = v52;
          }
          unint64_t v35 = *(void *)(v33 + 16);
          unint64_t v34 = *(void *)(v33 + 24);
          if (v35 >= v34 >> 1)
          {
            sub_24149E56C(v34 > 1, v35 + 1, 1);
            uint64_t v33 = v52;
          }
          *(void *)(v33 + 16) = v35 + 1;
          *(void *)(v33 + 8 * v35 + 32) = v30;
          v25 += v51;
          --v23;
          uint64_t v6 = v26;
        }
        while (v23);
        swift_bridgeObjectRelease();
        a2 = v42;
        uint64_t v2 = v43;
        uint64_t v13 = v41;
        uint64_t v15 = v47;
        uint64_t v36 = *(void *)(v33 + 16);
        if (v36)
        {
LABEL_26:
          _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          for (uint64_t i = 0; i != v36; ++i)
            sub_24162D6F8();

          swift_bridgeObjectRelease_n();
          goto LABEL_10;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v36 = *(void *)(MEMORY[0x263F8EE78] + 16);
        if (v36) {
          goto LABEL_26;
        }
      }
      swift_bridgeObjectRelease();

LABEL_10:
      unint64_t v14 = v49;
      if (v49 == v13)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_2414B9378()
{
  sub_2414BB1B0(0, (unint64_t *)&unk_268D02F40, MEMORY[0x263F44068]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v12[-v1];
  uint64_t v3 = sub_24162D728();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    uint64_t v6 = sub_24162D678();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v7 + 16))(v2, v3+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v5, v6);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  }
  else
  {
    uint64_t v6 = sub_24162D678();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  sub_24162D678();
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v6) == 1)
  {
    sub_2414BB49C((uint64_t)v2, (unint64_t *)&unk_268D02F40, MEMORY[0x263F44068]);
    long long v13 = 0u;
    long long v14 = 0u;
    uint64_t v15 = 0;
LABEL_13:
    sub_2414BB95C((uint64_t)&v13, (unint64_t *)&qword_268CFFE30, (unint64_t *)&qword_268CFF090, MEMORY[0x263F437A0]);
    return 0;
  }
  uint64_t v9 = sub_24162D658();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v2, v6);
  if (*(void *)(v9 + 16))
  {
    sub_2411A3DF4(v9 + 32, (uint64_t)&v13);
  }
  else
  {
    uint64_t v15 = 0;
    long long v13 = 0u;
    long long v14 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1)) {
    goto LABEL_13;
  }
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  if (swift_dynamicCast())
  {
    int v10 = v12[25];
    swift_bridgeObjectRelease();
    if (v10 == 3) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_2414B9684(uint64_t a1)
{
  uint64_t v2 = sub_24162B788();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162D678();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin18OnboardingUserInfo_reviewOngoingCycleFactors);
  if (v10 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v11 = sub_241633068();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = sub_2414B9378();
  if (v11)
  {
    if (result)
    {
      sub_24162D728();
      swift_bridgeObjectRelease();
      return sub_24162D6F8();
    }
  }
  else if ((result & 1) == 0)
  {
    sub_2414BB204(0, (unint64_t *)&qword_268CFC790, (unint64_t *)&qword_268CFF090, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_241637EE0;
    sub_24162B778();
    uint64_t v14 = sub_24162B738();
    uint64_t v19 = v7;
    uint64_t v16 = v15;
    uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
    v17(v5, v2);
    *(void *)(v13 + 56) = &type metadata for OnboardingSelectRow;
    *(void *)(v13 + 64) = sub_24123D604();
    *(void *)(v13 + 32) = v14;
    *(void *)(v13 + 40) = v16;
    *(_WORD *)(v13 + 48) = 768;
    *(unsigned char *)(v13 + 50) = 0;
    sub_24162B778();
    sub_24162B738();
    v17(v5, v2);
    sub_24162D668();
    sub_24162D728();
    swift_bridgeObjectRelease();
    sub_24162D7C8();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  }
  return result;
}

uint64_t sub_2414B9990(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    unint64_t v10 = MEMORY[0x263F8EE78];
    sub_241632F38();
    uint64_t v6 = (void **)(a2 + 32);
    do
    {
      uint64_t v7 = *v6;
      v6 += 2;
      id v8 = v7;
      sub_241632F18();
      sub_241632F48();
      sub_241632F58();
      sub_241632F28();
      --v3;
    }
    while (v3);
    unint64_t v4 = v10;
  }
  sub_2414B8F04(a1, v4);

  return swift_bridgeObjectRelease();
}

void sub_2414B9A6C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = (void *)sub_24162B718();
  uint64_t v6 = *(v5 - 1);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)sub_24162B788();
  uint64_t v10 = *(v9 - 1);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24162D678();
  uint64_t v14 = *(char **)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v2 + qword_268D01210 + 8);
  if (v18 != 1)
  {
    if (!v18)
    {
      sub_2414B9684(a1);
    }
    return;
  }
  unint64_t v49 = v17;
  uint64_t v50 = v15;
  id v57 = v12;
  if (a2 >> 62)
  {
LABEL_21:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v19 = sub_241633068();
    if (v19) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v19)
    {
LABEL_8:
      unint64_t v55 = a2 & 0xC000000000000001;
      uint64_t v56 = 0;
      unint64_t v42 = (void (**)(char *, char *, void *))(v6 + 32);
      uint64_t v43 = (void (**)(char *, char *))(v10 + 8);
      uint64_t v41 = (void (**)(char *, uint64_t))(v14 + 8);
      uint64_t v6 = 4;
      long long v40 = xmmword_24163A4F0;
      uint64_t v44 = v9;
      unint64_t v45 = v5;
      uint64_t v14 = v57;
      unint64_t v47 = a2;
      uint64_t v48 = v2;
      uint64_t v46 = v8;
      uint64_t v54 = v19;
      id v8 = (char *)v9;
      while (1)
      {
        if (v55) {
          uint64_t v20 = (void *)MEMORY[0x245620370](v6 - 4, a2);
        }
        else {
          uint64_t v20 = *(id *)(a2 + 8 * v6);
        }
        uint64_t v9 = v20;
        uint64_t v21 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_21;
        }
        uint64_t v10 = sub_24162D728();
        uint64_t v5 = v9;
        uint64_t v22 = v56;
        uint64_t v23 = sub_2414BACF0(v10, (uint64_t)v5);
        uint64_t v56 = v22;
        swift_bridgeObjectRelease();

        uint64_t v24 = *(void *)(v23 + 16);
        swift_bridgeObjectRelease();
        if (v24)
        {
        }
        else
        {
          uint64_t v25 = (char *)objc_msgSend(v5, sel_hkmc_cycleFactor);
          if ((unint64_t)(v25 - 1) >= 9)
          {
            unint64_t v39 = v25;
            uint64_t v59 = 0;
            unint64_t v60 = 0xE000000000000000;
            sub_241632E78();
            sub_241631E08();
            id v58 = v39;
            type metadata accessor for HKMCCycleFactor(0);
            sub_241632F68();
            sub_241633038();
            __break(1u);
            return;
          }
          int v53 = byte_24164D74A[(void)(v25 - 1)];
          sub_2414BB204(0, (unint64_t *)&qword_268CFC790, (unint64_t *)&qword_268CFF090, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
          uint64_t v10 = swift_allocObject();
          *(_OWORD *)(v10 + 16) = v40;
          uint64_t v26 = v5;
          sub_24162B778();
          uint64_t v27 = sub_24162B738();
          uint64_t v29 = v28;
          uint64_t v30 = *v43;
          (*v43)(v57, v8);
          uint64_t v51 = v30;
          *(void *)(v10 + 56) = &type metadata for OnboardingPrefillRow;
          *(void *)(v10 + 64) = sub_24123D50C();
          uint64_t v31 = (void *)swift_allocObject();
          *(void *)(v10 + 32) = v31;
          v31[2] = v27;
          v31[3] = v29;
          v31[4] = v27;
          v31[5] = v29;
          id v52 = v26;
          v31[6] = v26;
          _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          id v32 = objc_msgSend(v26, sel_startDate);
          uint64_t v33 = v46;
          sub_24162B6A8();

          sub_24162B778();
          uint64_t v34 = sub_24162B738();
          uint64_t v5 = v35;
          v30(v57, v8);
          uint64_t started = type metadata accessor for OnboardingStartDateRow(0);
          *(void *)(v10 + 96) = started;
          *(void *)(v10 + 104) = sub_2414BB4F8((unint64_t *)&qword_268CFB5A8, (void (*)(uint64_t))type metadata accessor for OnboardingStartDateRow);
          uint64_t v37 = sub_2411B6C70((uint64_t *)(v10 + 72));
          v37[1] = v34;
          void v37[2] = (uint64_t)v5;
          (*v42)((char *)v37 + *(int *)(started + 28), v33, v45);
          *(unsigned char *)uint64_t v37 = 0;
          *((unsigned char *)v37 + *(int *)(started + 32)) = 0;
          *((unsigned char *)v37 + 1) = v53;
          sub_24162B778();
          sub_24162B738();
          v51(v57, v8);
          uint64_t v14 = v57;
          uint64_t v38 = v49;
          sub_24162D668();
          uint64_t v2 = v48;
          sub_24162D7C8();

          (*v41)(v38, v50);
          a2 = v47;
        }
        ++v6;
        if (v21 == v54)
        {
          swift_bridgeObjectRelease();
          return;
        }
      }
    }
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_2414BA0F0(uint64_t a1)
{
  sub_2414BB1B0(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)v14 - v3;
  uint64_t v5 = sub_24162BB18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = &type metadata for OnboardingDatePickerRow;
  unint64_t v17 = sub_2414BB720();
  v15[0] = swift_allocObject();
  sub_2414BB6C4(a1, v15[0] + 16);
  sub_2414B4734(v15, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_2414BB49C((uint64_t)v4, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v9 = v16;
    unint64_t v10 = v17;
    uint64_t v11 = sub_2411B6854(v15, (uint64_t)v16);
    v14[3] = (uint64_t)v9;
    v14[4] = *(void *)(v10 + 8);
    uint64_t v12 = sub_2411B6C70(v14);
    (*((void (**)(uint64_t *, void *, ValueMetadata *))v9[-1].Description + 2))(v12, v11, v9);
    sub_24162D7D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v14);
  }
  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v15);
}

uint64_t sub_2414BA348(_OWORD *a1)
{
  sub_2414BB1B0(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)v17 - v3;
  uint64_t v5 = sub_24162BB18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = &type metadata for OnboardingTypeRow;
  unint64_t v20 = sub_24123D680();
  uint64_t v9 = (_OWORD *)swift_allocObject();
  v18[0] = v9;
  long long v10 = a1[1];
  v9[1] = *a1;
  v9[2] = v10;
  long long v11 = a1[3];
  v9[3] = a1[2];
  v9[4] = v11;
  sub_2414BB590((uint64_t)a1);
  sub_2414B4734(v18, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_2414BB49C((uint64_t)v4, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v12 = v19;
    unint64_t v13 = v20;
    uint64_t v14 = sub_2411B6854(v18, (uint64_t)v19);
    v17[3] = (uint64_t)v12;
    v17[4] = *(void *)(v13 + 8);
    uint64_t v15 = sub_2411B6C70(v17);
    (*((void (**)(uint64_t *, void *, ValueMetadata *))v12[-1].Description + 2))(v15, v14, v12);
    sub_24162D7D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v17);
  }
  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v18);
}

uint64_t sub_2414BA5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2414BB1B0(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  MEMORY[0x270FA5388](v8 - 8);
  long long v10 = (char *)v21 - v9;
  uint64_t v11 = sub_24162BB18();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = &type metadata for OnboardingTypePicker;
  unint64_t v24 = sub_2414BB630();
  uint64_t v15 = (void *)swift_allocObject();
  v22[0] = v15;
  void v15[2] = a1;
  void v15[3] = a2;
  void v15[4] = a3;
  v15[5] = a4;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2414B4734(v22, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2414BB49C((uint64_t)v10, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    uint64_t v16 = v23;
    unint64_t v17 = v24;
    uint64_t v18 = sub_2411B6854(v22, (uint64_t)v23);
    uint64_t v21[3] = (uint64_t)v16;
    v21[4] = *(void *)(v17 + 8);
    uint64_t v19 = sub_2411B6C70(v21);
    (*((void (**)(uint64_t *, void *, ValueMetadata *))v16[-1].Description + 2))(v19, v18, v16);
    sub_24162D7D8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v21);
  }
  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v22);
}

uint64_t sub_2414BA824(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unsigned int v6 = a3 >> 8;
  sub_2414BB1B0(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v19 - v8;
  uint64_t v10 = sub_24162BB18();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = &type metadata for OnboardingSelectRow;
  unint64_t v25 = sub_2414BB820();
  v20[0] = a1;
  v20[1] = a2;
  char v21 = a3 & 1;
  char v22 = v6;
  char v23 = BYTE2(a3) & 1;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2414B4734(v20, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2414BB49C((uint64_t)v9, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    uint64_t v14 = v24;
    unint64_t v15 = v25;
    uint64_t v16 = sub_2411B6854(v20, (uint64_t)v24);
    void v19[3] = (uint64_t)v14;
    unsigned char v19[4] = *(void *)(v15 + 8);
    unint64_t v17 = sub_2411B6C70(v19);
    (*((void (**)(uint64_t *, void *, ValueMetadata *))v14[-1].Description + 2))(v17, v16, v14);
    sub_24162D7D8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v19);
  }
  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v20);
}

uint64_t sub_2414BAA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2414BB1B0(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v20 - v8;
  uint64_t v10 = sub_24162BB18();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v14 = sub_2411B6C70(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v14, a1, a3);
  sub_2414B4734(v21, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2414BB49C((uint64_t)v9, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    uint64_t v15 = v22;
    uint64_t v16 = v23;
    unint64_t v17 = sub_2411B6854(v21, v22);
    void v20[3] = v15;
    v20[4] = *(void *)(v16 + 8);
    uint64_t v18 = sub_2411B6C70(v20);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v18, v17, v15);
    sub_24162D7D8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v20);
  }
  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v21);
}

uint64_t sub_2414BACF0(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a2;
  sub_2414BB26C();
  uint64_t v5 = v4;
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v39 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v49 = (uint64_t *)((char *)&v37 - v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v48 = (char *)&v37 - v10;
  MEMORY[0x270FA5388](v11);
  unint64_t v47 = (uint64_t *)((char *)&v37 - v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v54 = MEMORY[0x263F8EE78];
  uint64_t v46 = *(void *)(a1 + 16);
  if (v46)
  {
    uint64_t v37 = v2;
    uint64_t v17 = sub_24162D678();
    uint64_t v18 = 0;
    uint64_t v19 = *(void *)(v17 - 8);
    unint64_t v20 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    uint64_t v44 = v19 + 16;
    unint64_t v45 = v20;
    char v21 = (char *)(a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80)));
    uint64_t v22 = *(void *)(v19 + 72);
    unint64_t v42 = (void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v43 = v22;
    uint64_t v41 = (void (**)(char *, uint64_t))(v19 + 8);
    while (1)
    {
      uint64_t v23 = &v48[*(int *)(v5 + 48)];
      unint64_t v24 = v45;
      v45(v23, v21, v17);
      uint64_t v25 = (uint64_t)v47;
      uint64_t v26 = (char *)v47 + *(int *)(v5 + 48);
      *unint64_t v47 = v18;
      (*v42)(v26, v23, v17);
      sub_2414BB36C(v25, (uint64_t)v15, (uint64_t (*)(void))sub_2414BB26C);
      uint64_t v27 = *(int *)(v5 + 48);
      uint64_t v28 = (char *)v49 + v27;
      *unint64_t v49 = *(void *)v15;
      v24(v28, &v15[v27], v17);
      uint64_t v29 = sub_24162D658();
      (*v41)(v28, v17);
      if (*(void *)(v29 + 16))
      {
        sub_2411A3DF4(v29 + 32, (uint64_t)&v51);
      }
      else
      {
        uint64_t v53 = 0;
        long long v51 = 0u;
        long long v52 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v52 + 1))
      {
        sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
        if (swift_dynamicCast())
        {
          uint64_t v30 = v5;
          uint64_t v31 = v50;
          sub_2411D2B70();
          id v32 = v31;
          char v33 = sub_2416329B8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          uint64_t v5 = v30;
          if (v33)
          {
            sub_2414BB36C((uint64_t)v15, v39, (uint64_t (*)(void))sub_2414BB26C);
            uint64_t v34 = v54;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_24149E520(0, *(void *)(v34 + 16) + 1, 1);
              uint64_t v34 = v54;
            }
            unint64_t v36 = *(void *)(v34 + 16);
            unint64_t v35 = *(void *)(v34 + 24);
            if (v36 >= v35 >> 1)
            {
              sub_24149E520(v35 > 1, v36 + 1, 1);
              uint64_t v34 = v54;
            }
            *(void *)(v34 + 16) = v36 + 1;
            sub_2414BB36C(v39, v34+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v36, (uint64_t (*)(void))sub_2414BB26C);
            goto LABEL_5;
          }
        }
      }
      else
      {
        sub_2414BB95C((uint64_t)&v51, (unint64_t *)&qword_268CFFE30, (unint64_t *)&qword_268CFF090, MEMORY[0x263F437A0]);
      }
      sub_2414BB43C((uint64_t)v15, (uint64_t (*)(void))sub_2414BB26C);
LABEL_5:
      ++v18;
      v21 += v43;
      if (v46 == v18) {
        return v54;
      }
    }
  }
  return result;
}

uint64_t sub_2414BB168()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_2414BB1B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241632C18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2414BB204(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_2411BF880(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2414BB26C()
{
  if (!qword_268D01038)
  {
    sub_24162D678();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01038);
    }
  }
}

uint64_t sub_2414BB2D8(uint64_t a1, uint64_t a2)
{
  sub_2414BB1B0(0, (unint64_t *)&unk_268D02F40, MEMORY[0x263F44068]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2414BB358(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2414BB36C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2414BB3D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2414BB43C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2414BB49C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2414BB1B0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2414BB4F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2414BB540()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_2414BB590(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  id v3 = v2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t sub_2414BB5E0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2414BB630()
{
  unint64_t result = qword_268D01230;
  if (!qword_268D01230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01230);
  }
  return result;
}

uint64_t sub_2414BB684()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2414BB6C4(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_2414BB720()
{
  unint64_t result = qword_268D01238;
  if (!qword_268D01238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01238);
  }
  return result;
}

uint64_t sub_2414BB774()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_2414BB7C4(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_2414BB820()
{
  unint64_t result = qword_268D01240;
  if (!qword_268D01240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01240);
  }
  return result;
}

uint64_t sub_2414BB874(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_2414BB1B0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_2414BB8E0()
{
  if (!qword_268D02F50)
  {
    sub_2411BF880(255, (unint64_t *)&qword_268CFF090);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D02F50);
    }
  }
}

uint64_t sub_2414BB95C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_2414BB204(0, a2, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_2414BB9CC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return result;
}

uint64_t sub_2414BB9E0()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31PregnancyModeTimelineDataSource_currentDayIndex;
  uint64_t v2 = sub_241631AC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31PregnancyModeTimelineDataSource_currentCalendar;
  uint64_t v4 = sub_24162BA08();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

uint64_t sub_2414BBAB0()
{
  objc_msgSend(v0[9], sel_unregisterObserver_, v0);
  swift_release();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31PregnancyModeTimelineDataSource_currentDayIndex;
  uint64_t v2 = sub_241631AC8();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = (char *)v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31PregnancyModeTimelineDataSource_currentCalendar;
  uint64_t v4 = sub_24162BA08();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_2414BBBD8()
{
  return type metadata accessor for PregnancyModeTimelineDataSource();
}

uint64_t type metadata accessor for PregnancyModeTimelineDataSource()
{
  uint64_t result = qword_268D01278;
  if (!qword_268D01278) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2414BBC2C()
{
  uint64_t result = sub_241631AC8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24162BA08();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_2414BBD2C(void *a1)
{
  unint64_t v2 = v1;
  v170[3] = *MEMORY[0x263EF8340];
  uint64_t v153 = *v1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2414BF794(0, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v137 - v6;
  uint64_t v152 = sub_24162B788();
  uint64_t v151 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  unint64_t v150 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162EFA8();
  uint64_t v157 = *(void *)(v9 - 8);
  uint64_t v158 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v162 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v142 = (char *)&v137 - v12;
  sub_2414BF794(0, (unint64_t *)&unk_26B013110, MEMORY[0x263F079C8], v4);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v143 = (char *)&v137 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  char v144 = (char *)&v137 - v16;
  uint64_t v148 = sub_24162BA68();
  uint64_t v147 = *(void *)(v148 - 8);
  MEMORY[0x270FA5388](v148);
  uint64_t v140 = (char *)&v137 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  char v141 = (char *)&v137 - v19;
  uint64_t v20 = sub_241631AC8();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v146 = (char *)&v137 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24162ED68();
  uint64_t v155 = *(void *)(v22 - 8);
  uint64_t v156 = v22;
  MEMORY[0x270FA5388](v22);
  unint64_t v149 = (char *)&v137 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  unint64_t v160 = (char *)&v137 - v25;
  uint64_t v26 = sub_24162B718();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v145 = (char *)&v137 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v159 = (char *)&v137 - v30;
  MEMORY[0x270FA5388](v31);
  unsigned __int8 v163 = (char *)&v137 - v32;
  sub_24124AD1C();
  uint64_t v161 = v33;
  MEMORY[0x270FA5388](v33);
  unint64_t v165 = (char *)&v137 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414BF794(0, &qword_26B0130C0, MEMORY[0x263F07490], v4);
  MEMORY[0x270FA5388](v35 - 8);
  v164 = (char *)&v137 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v154 = (uint64_t)&v137 - v38;
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = (char *)&v137 - v40;
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)&v137 - v43;
  MEMORY[0x270FA5388](v45);
  unint64_t v47 = (char *)&v137 - v46;
  sub_2414BD28C(a1);
  uint64_t v48 = (void *)v2[10];
  if (v48) {
    id v49 = objc_msgSend(v48, sel_sample);
  }
  else {
    id v49 = 0;
  }
  uint64_t v166 = v27;
  *(void *)&long long v167 = a1;
  id v50 = objc_msgSend(a1, sel_sample);
  long long v51 = v50;
  if (!v49)
  {
    if (v50)
    {

      goto LABEL_27;
    }
    goto LABEL_10;
  }
  if (!v50)
  {

    goto LABEL_27;
  }
  sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
  id v52 = v49;
  char v53 = sub_2416329B8();

  if (v53)
  {
LABEL_10:
    uint64_t v54 = (void *)v2[10];
    if (v54)
    {
      id v55 = objc_msgSend(v54, sel_estimatedDueDate);
      uint64_t v56 = v166;
      if (v55)
      {
        id v57 = v55;
        sub_24162B6A8();

        id v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
        v58(v44, 0, 1, v26);
      }
      else
      {
        id v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v166 + 56);
        v58(v44, 1, 1, v26);
      }
      uint64_t v59 = (void *)v167;
      sub_2414BF7F8((uint64_t)v44, (uint64_t)v47, &qword_26B0130C0, MEMORY[0x263F07490]);
    }
    else
    {
      uint64_t v56 = v166;
      id v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v166 + 56);
      v58(v47, 1, 1, v26);
      uint64_t v59 = (void *)v167;
    }
    id v60 = objc_msgSend(v59, sel_estimatedDueDate);
    if (v60)
    {
      uint64_t v61 = v60;
      sub_24162B6A8();

      uint64_t v62 = 0;
    }
    else
    {
      uint64_t v62 = 1;
    }
    v58(v41, v62, 1, v26);
    uint64_t v63 = (uint64_t)v165;
    uint64_t v64 = (uint64_t)&v165[*(int *)(v161 + 48)];
    sub_2411ED2F0((uint64_t)v47, (uint64_t)v165);
    sub_2411ED2F0((uint64_t)v41, v64);
    uint64_t v65 = v26;
    uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
    int v67 = v66(v63, 1, v65);
    uint64_t v139 = v2;
    if (v67 == 1)
    {
      id v68 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
      sub_2414BF724((uint64_t)v41, &qword_26B0130C0, MEMORY[0x263F07490]);
      sub_2414BF724((uint64_t)v47, &qword_26B0130C0, v68);
      int v69 = v66(v64, 1, v65);
      uint64_t v26 = v65;
      if (v69 == 1) {
        return sub_2414BF724((uint64_t)v165, &qword_26B0130C0, MEMORY[0x263F07490]);
      }
    }
    else
    {
      uint64_t v71 = v154;
      sub_2411ED2F0(v63, v154);
      if (v66(v64, 1, v65) != 1)
      {
        uint64_t v73 = v71;
        uint64_t v74 = v163;
        (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v163, v64, v65);
        sub_2414BF8D4((unint64_t *)&qword_268CFAD00, MEMORY[0x263F07490]);
        LODWORD(v161) = sub_241631C28();
        id v75 = *(void (**)(char *, uint64_t))(v56 + 8);
        v75(v74, v65);
        long long v76 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
        sub_2414BF724((uint64_t)v41, &qword_26B0130C0, MEMORY[0x263F07490]);
        sub_2414BF724((uint64_t)v47, &qword_26B0130C0, v76);
        v75((char *)v73, v65);
        uint64_t result = sub_2414BF724((uint64_t)v165, &qword_26B0130C0, v76);
        unint64_t v2 = v139;
        uint64_t v26 = v65;
        if (v161) {
          return result;
        }
        goto LABEL_27;
      }
      unint64_t v72 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
      sub_2414BF724((uint64_t)v41, &qword_26B0130C0, MEMORY[0x263F07490]);
      sub_2414BF724((uint64_t)v47, &qword_26B0130C0, v72);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v71, v65);
      uint64_t v26 = v65;
    }
    sub_2414BF878((uint64_t)v165);
    unint64_t v2 = v139;
  }
LABEL_27:
  long long v77 = (void *)v2[10];
  uint64_t v78 = (void *)v167;
  v2[10] = v167;

  uint64_t v79 = MEMORY[0x263F8EE78];
  uint64_t v169 = MEMORY[0x263F8EE78];
  int v80 = *((unsigned __int8 *)v2 + 65);
  id v81 = v78;
  if (v80 != 1)
  {
LABEL_50:
    uint64_t v133 = sub_241632028();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v7, 1, 1, v133);
    sub_241632008();
    swift_retain();
    uint64_t v134 = sub_241631FF8();
    uint64_t v135 = (void *)swift_allocObject();
    uint64_t v136 = MEMORY[0x263F8F500];
    v135[2] = v134;
    v135[3] = v136;
    v135[4] = v2;
    v135[5] = v79;
    sub_241496830((uint64_t)v7, (uint64_t)&unk_268D012E0, (uint64_t)v135);
    return swift_release();
  }
  uint64_t v82 = v81;
  id v83 = objc_msgSend(v81, sel_estimatedDueDate);
  if (!v83)
  {
    uint64_t v88 = v164;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v166 + 56))(v164, 1, 1, v26);
    goto LABEL_35;
  }
  uint64_t v84 = v83;
  unint64_t v85 = v163;
  sub_24162B6A8();

  uint64_t v86 = v166;
  long long v87 = *(void (**)(char *, char *, uint64_t))(v166 + 32);
  uint64_t v88 = v164;
  v87(v164, v85, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v88, 0, 1, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v88, 1, v26) == 1)
  {
LABEL_35:
    sub_2414BF724((uint64_t)v88, &qword_26B0130C0, MEMORY[0x263F07490]);
    goto LABEL_36;
  }
  unint64_t v165 = v7;
  uint64_t v89 = v159;
  v87(v159, v88, v26);
  id v90 = objc_msgSend(v82, sel_sample);
  if (v90)
  {
    uint64_t v91 = v90;
    uint64_t v139 = v2;
    uint64_t v92 = (char *)v2[6];
    uint64_t v93 = v2[7];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v95 = *(void (**)(uint64_t, uint64_t))(v93 + 32);
    uint64_t v162 = v92;
    *(void *)&long long v167 = v93;
    v95(ObjectType, v93);
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v85, v89, v26);
    uint64_t v96 = v91;
    sub_24162B708();
    v164 = v96;
    sub_24162ECF8();
    id v97 = objc_msgSend(v82, (SEL)&selRef_dateFormatFromTemplate_options_locale_ + 6);
    uint64_t v138 = v26;
    if (v97)
    {
      uint64_t v98 = v97;
      id v99 = objc_msgSend(v97, sel__timeZone);

      uint64_t v100 = v148;
      uint64_t v101 = v147;
      if (v99)
      {
        uint64_t v102 = (uint64_t)v143;
        sub_24162BA48();

        uint64_t v103 = 0;
        uint64_t v104 = (uint64_t)v144;
      }
      else
      {
        uint64_t v103 = 1;
        uint64_t v104 = (uint64_t)v144;
        uint64_t v102 = (uint64_t)v143;
      }
      uint64_t v112 = v167;
      long long v113 = v162;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56))(v102, v103, 1, v100);
      sub_2414BF7F8(v102, v104, (unint64_t *)&unk_26B013110, MEMORY[0x263F079C8]);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v104, 1, v100) != 1)
      {
        uint64_t v121 = v141;
        (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v141, v104, v100);
        (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v140, v121, v100);
        swift_beginAccess();
        sub_24162B9D8();
        swift_endAccess();
        (*(void (**)(char *, uint64_t))(v101 + 8))(v121, v100);
LABEL_49:
        uint64_t v122 = v156;
        uint64_t v123 = v155;
        uint64_t v124 = v149;
        (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v149, v160, v156);
        uint64_t v125 = type metadata accessor for PregnancyModeTimelineItem();
        uint64_t v126 = (void *)swift_allocObject();
        v126[3] = 0;
        swift_unknownObjectWeakInit();
        v126[4] = 0xD000000000000020;
        v126[5] = 0x800000024166E350;
        (*(void (**)(uint64_t, char *, uint64_t))(v123 + 32))((uint64_t)v126 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25PregnancyModeTimelineItem_viewModel, v124, v122);
        v126[6] = v113;
        v126[7] = v112;
        v126[3] = &off_26F5742E8;
        swift_unknownObjectWeakAssign();
        uint64_t v127 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
        sub_2414BF794(0, (unint64_t *)&qword_268D00EC0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
        sub_24162D678();
        uint64_t v128 = swift_allocObject();
        long long v167 = xmmword_241637EE0;
        *(_OWORD *)(v128 + 16) = xmmword_241637EE0;
        swift_unknownObjectRetain();
        sub_24162D668();
        sub_241497800(v128);
        uint64_t v129 = swift_allocObject();
        *(_OWORD *)(v129 + 16) = v167;
        sub_2414BF794(0, (unint64_t *)&qword_268CFC790, (uint64_t (*)(uint64_t))sub_2411E1530, v127);
        uint64_t v130 = swift_allocObject();
        *(_OWORD *)(v130 + 16) = v167;
        *(void *)(v130 + 56) = v125;
        *(void *)(v130 + 64) = sub_2414BF8D4(&qword_268D012F0, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineItem);
        *(void *)(v130 + 32) = v126;
        swift_retain();
        uint64_t v131 = v150;
        sub_24162B778();
        sub_24162B738();
        (*(void (**)(char *, uint64_t))(v151 + 8))(v131, v152);
        sub_24162D668();
        uint64_t v132 = v129;
        unint64_t v2 = v139;
        sub_241497800(v132);

        swift_release();
        (*(void (**)(char *, uint64_t))(v155 + 8))(v160, v156);
        (*(void (**)(char *, uint64_t))(v166 + 8))(v159, v138);
        uint64_t v79 = v169;
        uint64_t v7 = v165;
        goto LABEL_50;
      }
    }
    else
    {
      uint64_t v104 = (uint64_t)v144;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v147 + 56))(v144, 1, 1, v148);
      uint64_t v112 = v167;
      long long v113 = v162;
    }
    sub_2414BF724(v104, (unint64_t *)&unk_26B013110, MEMORY[0x263F079C8]);
    if (HKShowSensitiveLogItems())
    {
      long long v114 = v142;
      sub_24162EF48();
      uint64_t v115 = sub_24162EF98();
      os_log_type_t v116 = sub_2416322E8();
      if (os_log_type_enabled(v115, v116))
      {
        uint64_t v117 = (uint8_t *)swift_slowAlloc();
        uint64_t v118 = swift_slowAlloc();
        v170[0] = v118;
        *(_DWORD *)uint64_t v117 = 136315138;
        uint64_t v119 = sub_2416333E8();
        uint64_t v168 = sub_2411B6898(v119, v120, v170);
        sub_241632C28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v115, v116, "[%s] Could not get timezone on pregnancy sample, using default timeZone for the current calendar", v117, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245621640](v118, -1, -1);
        MEMORY[0x245621640](v117, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v157 + 8))(v114, v158);
    }
    goto LABEL_49;
  }
  (*(void (**)(char *, uint64_t))(v86 + 8))(v89, v26);
  swift_bridgeObjectRelease();
LABEL_36:
  uint64_t result = HKShowSensitiveLogItems();
  unint64_t v105 = v162;
  if (result)
  {
    sub_24162EF48();
    uint64_t v106 = sub_24162EF98();
    os_log_type_t v107 = sub_2416322C8();
    if (os_log_type_enabled(v106, v107))
    {
      uint64_t v108 = (uint8_t *)swift_slowAlloc();
      uint64_t v109 = swift_slowAlloc();
      v170[0] = v109;
      *(_DWORD *)uint64_t v108 = 136315138;
      uint64_t v110 = sub_2416333E8();
      uint64_t v168 = sub_2411B6898(v110, v111, v170);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v106, v107, "[%s] Could not get estimated due date or sample from pregnancy model, can't display pregnancy section", v108, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v109, -1, -1);
      MEMORY[0x245621640](v108, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v157 + 8))(v105, v158);
  }
  return result;
}

uint64_t sub_2414BD28C(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  sub_2414BF794(0, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = sub_24162EFA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v41 - v13;
  if (HKShowSensitiveLogItems())
  {
    sub_24162EF48();
    id v15 = a1;
    uint64_t v16 = sub_24162EF98();
    os_log_type_t v17 = sub_2416322E8();
    int v48 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v47 = v8;
      uint64_t v19 = v18;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v50 = v42;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v46 = v9;
      uint64_t v20 = sub_2416333E8();
      uint64_t v44 = v4;
      uint64_t v49 = sub_2411B6898(v20, v21, &v50);
      uint64_t v45 = v11;
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      id v22 = objc_msgSend(v15, sel_description, v19 + 14);
      uint64_t v23 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
      uint64_t v43 = v7;
      uint64_t v24 = a1;
      unint64_t v26 = v25;

      uint64_t v9 = v46;
      uint64_t v49 = sub_2411B6898(v23, v26, &v50);
      uint64_t v11 = v45;
      sub_241632C28();

      a1 = v24;
      uint64_t v7 = v43;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v16, (os_log_type_t)v48, "[%s] Received model update: %s", (uint8_t *)v19, 0x16u);
      uint64_t v27 = v42;
      swift_arrayDestroy();
      MEMORY[0x245621640](v27, -1, -1);
      uint64_t v28 = v19;
      uint64_t v8 = v47;
      MEMORY[0x245621640](v28, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  id v29 = objc_msgSend(a1, sel_state);
  if ((*((unsigned __int8 *)v2 + 65) ^ (v29 == (id)1)))
  {
    *((unsigned char *)v2 + 65) = v29 == (id)1;
    uint64_t v30 = sub_241632028();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v7, 1, 1, v30);
    sub_241632008();
    swift_retain();
    uint64_t v31 = sub_241631FF8();
    uint64_t v32 = (void *)swift_allocObject();
    uint64_t v33 = MEMORY[0x263F8F500];
    v32[2] = v31;
    void v32[3] = v33;
    v32[4] = v2;
    sub_241496830((uint64_t)v7, (uint64_t)&unk_268D012F8, (uint64_t)v32);
    return swift_release();
  }
  else
  {
    uint64_t result = HKShowSensitiveLogItems();
    if (result)
    {
      sub_24162EF48();
      uint64_t v35 = sub_24162EF98();
      os_log_type_t v36 = sub_2416322E8();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        uint64_t v50 = v38;
        *(_DWORD *)uint64_t v37 = 136315138;
        uint64_t v39 = sub_2416333E8();
        uint64_t v49 = sub_2411B6898(v39, v40, &v50);
        sub_241632C28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v35, v36, "[%s] Pregnancy state has not changed, returning", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245621640](v38, -1, -1);
        MEMORY[0x245621640](v37, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return result;
}

uint64_t sub_2414BD814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a4;
  v5[3] = a5;
  sub_241632008();
  v5[4] = sub_241631FF8();
  uint64_t v7 = sub_241631FC8();
  return MEMORY[0x270FA2498](sub_2414BD8AC, v7, v6);
}

uint64_t sub_2414BD8AC()
{
  swift_release();
  sub_24162CFF8();
  sub_24162D738();
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2414BD930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  sub_2414AE6E4();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_24162BA08();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = sub_241631AC8();
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  sub_2414BF794(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  uint64_t v8 = sub_24162B718();
  v4[21] = v8;
  v4[22] = *(void *)(v8 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  sub_241632008();
  v4[25] = sub_241631FF8();
  uint64_t v10 = sub_241631FC8();
  return MEMORY[0x270FA2498](sub_2414BDBC4, v10, v9);
}

uint64_t sub_2414BDBC4()
{
  uint64_t v1 = v0[8];
  swift_release();
  unint64_t v2 = *(void **)(v1 + 80);
  if (!v2)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[22] + 56))(v0[20], 1, 1, v0[21]);
LABEL_7:
    sub_2414BF724(v0[20], &qword_26B0130C0, MEMORY[0x263F07490]);
LABEL_8:
    uint64_t v10 = (unsigned int *)MEMORY[0x263F43E38];
    goto LABEL_9;
  }
  id v3 = objc_msgSend(v2, sel_pregnancyStartDate);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_24162B6A8();

    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = v0[21];
  uint64_t v7 = v0[22];
  uint64_t v9 = v0[19];
  uint64_t v8 = v0[20];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v9, v5, 1, v6);
  sub_2414BF7F8(v9, v8, &qword_26B0130C0, MEMORY[0x263F07490]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1) {
    goto LABEL_7;
  }
  uint64_t v14 = v0[23];
  uint64_t v13 = v0[24];
  uint64_t v16 = v0[21];
  uint64_t v15 = v0[22];
  uint64_t v27 = v0[18];
  uint64_t v17 = v0[16];
  uint64_t v28 = v0[17];
  uint64_t v19 = v0[14];
  uint64_t v18 = v0[15];
  uint64_t v20 = v0[13];
  uint64_t v26 = v0[12];
  uint64_t v21 = v0[8];
  uint64_t v29 = v13;
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 32))(v13, v0[20], v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v13, v16);
  uint64_t v22 = v21 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31PregnancyModeTimelineDataSource_currentCalendar;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v22, v26);
  sub_241631A68();
  uint64_t v23 = v21 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31PregnancyModeTimelineDataSource_currentDayIndex;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v28, v23, v18);
  sub_2414BF8D4((unint64_t *)&qword_26B0121C0, MEMORY[0x263F090E8]);
  LOBYTE(v23) = sub_241631BB8();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v24(v28, v18);
  v24(v27, v18);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v29, v16);
  if (v23) {
    goto LABEL_8;
  }
  uint64_t v25 = v0[8];
  if (*(unsigned char *)(v25 + 64) != 1 || (*(unsigned char *)(v25 + 65) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v10 = (unsigned int *)MEMORY[0x263F43E40];
LABEL_9:
  (*(void (**)(void, void, void))(v0[10] + 104))(v0[11], *v10, v0[9]);
  sub_24162D038();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_2414BDF90(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v35 = *v1;
  uint64_t v4 = sub_24162EFA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - v9;
  if (HKShowSensitiveLogItems())
  {
    sub_24162EF48();
    uint64_t v11 = sub_24162EF98();
    os_log_type_t v12 = sub_2416322E8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v32 = v7;
      uint64_t v14 = (uint8_t *)v13;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v33 = v5;
      uint64_t v16 = v15;
      uint64_t v37 = v15;
      uint64_t v34 = v4;
      *(_DWORD *)uint64_t v14 = 136315138;
      uint64_t v17 = sub_2416333E8();
      uint64_t v36 = sub_2411B6898(v17, v18, &v37);
      uint64_t v4 = v34;
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v11, v12, "[%s] Received pregnancy model update", v14, 0xCu);
      swift_arrayDestroy();
      uint64_t v19 = v16;
      uint64_t v5 = v33;
      MEMORY[0x245621640](v19, -1, -1);
      uint64_t v20 = v14;
      uint64_t v7 = v32;
      MEMORY[0x245621640](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  uint64_t v21 = (void *)v2[10];
  if (!v21) {
    return sub_2414BBD2C(a1);
  }
  sub_2411B9D00(0, &qword_26B00ED70);
  id v22 = a1;
  id v23 = v21;
  char v24 = sub_2416329B8();

  if ((v24 & 1) == 0) {
    return sub_2414BBD2C(a1);
  }
  uint64_t result = HKShowSensitiveLogItems();
  if (result)
  {
    sub_24162EF48();
    uint64_t v26 = sub_24162EF98();
    os_log_type_t v27 = sub_2416322E8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v37 = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v30 = sub_2416333E8();
      uint64_t v36 = sub_2411B6898(v30, v31, &v37);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v26, v27, "[%s] No updates needed", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v29, -1, -1);
      MEMORY[0x245621640](v28, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_2414BE3C0(uint64_t a1, char a2)
{
  return sub_2414BED9C(a2);
}

uint64_t sub_2414BE3E8(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v40 = *v2;
  sub_2414BF794(0, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v32 - v7;
  uint64_t v9 = sub_241631AC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24162EFA8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (HKShowSensitiveLogItems())
  {
    uint64_t v38 = v9;
    uint64_t v39 = a1;
    sub_24162EF48();
    uint64_t v17 = sub_24162EF98();
    os_log_type_t v18 = sub_2416322B8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v37 = v8;
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v42[0] = v35;
      uint64_t v33 = v17;
      uint64_t v36 = a2;
      uint64_t v34 = v19;
      *(_DWORD *)uint64_t v19 = 136315138;
      v32[1] = v19 + 4;
      uint64_t v20 = sub_2416333E8();
      uint64_t v41 = sub_2411B6898(v20, v21, v42);
      a2 = v36;
      sub_241632C28();
      uint64_t v8 = v37;
      swift_bridgeObjectRelease();
      os_log_type_t v22 = v18;
      id v23 = v34;
      _os_log_impl(&dword_24118E000, v17, v22, "[%s] Received current day update", v34, 0xCu);
      uint64_t v24 = v35;
      swift_arrayDestroy();
      MEMORY[0x245621640](v24, -1, -1);
      MEMORY[0x245621640](v23, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v9 = v38;
  }
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  uint64_t v26 = (char *)v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31PregnancyModeTimelineDataSource_currentDayIndex;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v26, v12, v9);
  swift_endAccess();
  uint64_t v27 = sub_241632028();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v8, 1, 1, v27);
  sub_241632008();
  swift_retain();
  uint64_t v28 = sub_241631FF8();
  uint64_t v29 = (void *)swift_allocObject();
  uint64_t v30 = MEMORY[0x263F8F500];
  v29[2] = v28;
  void v29[3] = v30;
  v29[4] = v3;
  sub_241496830((uint64_t)v8, (uint64_t)&unk_268D012A8, (uint64_t)v29);
  return swift_release();
}

uint64_t sub_2414BE82C(uint64_t a1, void *a2)
{
  id v3 = v2;
  v31[1] = *v2;
  uint64_t v5 = sub_24162EFA8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162CCF8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)v3[10];
  if (v13)
  {
    id v14 = v13;
    id v15 = objc_msgSend(v14, sel_sample);
    if (v15)
    {
      uint64_t v16 = v15;
      id v17 = (id)v3[5];
      sub_2416324B8();
      (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F43BF8], v9);
      id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_init);
      uint64_t v33 = 0;
      memset(v32, 0, sizeof(v32));
      uint64_t v19 = (void *)v3[9];
      type metadata accessor for PregnancyOffboardingCoordinator();
      swift_allocObject();
      swift_unknownObjectRetain();
      sub_241329788(v17, (uint64_t)v34, (uint64_t)v12, v18, (uint64_t)v32, v19, 0, 0, 0, 0, 0, 0);
      swift_getObjectType();
      uint64_t v20 = swift_conformsToProtocol2();
      if (v20) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 0;
      }
      if (v20) {
        uint64_t v22 = (uint64_t)a2;
      }
      else {
        uint64_t v22 = 0;
      }
      if (v22) {
        uint64_t v23 = v21;
      }
      else {
        uint64_t v23 = 0;
      }
      sub_241329278(a2, v16, 1, v22, v23);

      return swift_release();
    }
  }
  uint64_t result = HKShowSensitiveLogItems();
  if (result)
  {
    sub_24162EF48();
    uint64_t v25 = sub_24162EF98();
    os_log_type_t v26 = sub_2416322C8();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v34[0] = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v29 = sub_2416333E8();
      *(void *)&v32[0] = sub_2411B6898(v29, v30, v34);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v25, v26, "[%s] Tried to present edit view with nil model", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v28, -1, -1);
      MEMORY[0x245621640](v27, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

unint64_t sub_2414BEBFC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for CycleTrackingSubheaderItem;
  unint64_t result = sub_241290928();
  *(void *)(a1 + 32) = result;
  *(unsigned char *)a1 = 1;
  return result;
}

void *sub_2414BEC38()
{
  return sub_2414BF2C4();
}

BOOL sub_2414BEC50(uint64_t a1)
{
  return a1 != 0;
}

void sub_2414BEC5C(void *a1)
{
  type metadata accessor for PregnancyModeTimelineCell();
  sub_2414BF8D4((unint64_t *)&unk_268D012C0, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineCell);
  sub_241632438();
  type metadata accessor for CycleLogSubheader();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = (void *)*MEMORY[0x263F833F0];
  sub_2414BF8D4((unint64_t *)&qword_268CFAA20, (void (*)(uint64_t))type metadata accessor for CycleLogSubheader);
  id v4 = v3;
  sub_24162CD08();
  id v5 = (id)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_, ObjCClassFromMetadata, v4, v5);
}

uint64_t sub_2414BED9C(char a1)
{
  unint64_t v2 = v1;
  uint64_t v31 = *v1;
  sub_2414BF794(0, (unint64_t *)&qword_26B00F1C0, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v28 - v5;
  uint64_t v7 = sub_24162EFA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2416314D8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (uint64_t *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
  *id v14 = sub_2416325A8();
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  char v15 = sub_241631508();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    if (HKShowSensitiveLogItems())
    {
      sub_24162EF48();
      id v17 = sub_24162EF98();
      os_log_type_t v18 = sub_2416322E8();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        uint64_t v30 = v8;
        uint64_t v21 = v20;
        uint64_t v33 = v20;
        *(_DWORD *)uint64_t v19 = 136315394;
        uint64_t v29 = v7;
        uint64_t v22 = sub_2416333E8();
        uint64_t v32 = sub_2411B6898(v22, v23, &v33);
        sub_241632C28();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 1024;
        LODWORD(v32) = a1 & 1;
        sub_241632C28();
        _os_log_impl(&dword_24118E000, v17, v18, "[%s] Received update to onboarding completion: %{BOOL}d", (uint8_t *)v19, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x245621640](v21, -1, -1);
        MEMORY[0x245621640](v19, -1, -1);

        (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v29);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
    *((unsigned char *)v2 + 64) = a1 & 1;
    uint64_t v24 = sub_241632028();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v6, 1, 1, v24);
    sub_241632008();
    swift_retain();
    uint64_t v25 = sub_241631FF8();
    os_log_type_t v26 = (void *)swift_allocObject();
    uint64_t v27 = MEMORY[0x263F8F500];
    void v26[2] = v25;
    v26[3] = v27;
    v26[4] = v2;
    sub_241496830((uint64_t)v6, (uint64_t)&unk_268D01298, (uint64_t)v26);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2414BF20C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_24120151C;
  return sub_2414BD930(a1, v4, v5, v6);
}

void *sub_2414BF2C4()
{
  uint64_t v0 = sub_24162F548();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162F538();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24162F5A8();
  uint64_t v8 = *(void *)(v17 - 8);
  __n128 v9 = MEMORY[0x270FA5388](v17);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v5 + 104))(v7, *MEMORY[0x263F81FC8], v4, v9);
  sub_24162F558();
  id v12 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_24162F578();
  if (sub_24162DB38() == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F82000], v0);
    sub_24162F568();
  }
  sub_2411B9D00(0, &qword_268CFC750);
  sub_24162DB08();
  uint64_t v13 = (void *)sub_2416327F8();
  swift_unknownObjectRelease();
  objc_msgSend(v13, sel_setContentInsetsReference_, 2);
  uint64_t v14 = sub_24162DB38();
  objc_msgSend(v13, sel_contentInsets);
  objc_msgSend(v13, sel_setContentInsets_, 0.0);
  objc_msgSend(v13, sel_contentInsets);
  if (v14 == 1)
  {
    objc_msgSend(v13, sel_setContentInsets_);
    objc_msgSend(v13, sel_contentInsets);
    objc_msgSend(v13, sel_setContentInsets_);
    objc_msgSend(v13, sel_contentInsets);
  }
  objc_msgSend(v13, sel_setContentInsets_);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v17);
  return v13;
}

uint64_t sub_2414BF61C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2414BF664(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_241201428;
  return sub_2414BD814(a1, v4, v5, v7, v6);
}

uint64_t sub_2414BF724(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2414BF794(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_2414BF794(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2414BF7F8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2414BF794(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_2414BF878(uint64_t a1)
{
  sub_24124AD1C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2414BF8D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2414BF920()
{
  uint64_t v1 = (uint64_t)v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CycleHistoryCell_item;
  swift_beginAccess();
  sub_2411FA270(v1, (uint64_t)v6);
  if (v7)
  {
    sub_2411E1530();
    type metadata accessor for CycleStatisticsItem();
    if (swift_dynamicCast())
    {
      uint64_t v2 = MEMORY[0x245621790](v5 + 48);
      if (v2)
      {
        id v3 = (void *)v2;
        swift_unknownObjectRelease();
        if (v3 == v0)
        {
          *(void *)(v5 + 56) = 0;
          swift_unknownObjectWeakAssign();
        }
      }
      id v4 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
      objc_msgSend(v0, sel_setBackgroundColor_, v4);
      swift_release();
    }
  }
  else
  {
    sub_241299DB8((uint64_t)v6);
  }
}

void sub_2414BFA34()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CycleHistoryCell_item;
  swift_beginAccess();
  sub_2411FA270(v2, (uint64_t)&v11);
  if (v12)
  {
    sub_2411E1530();
    type metadata accessor for CycleHistoryItem();
    if (swift_dynamicCast())
    {
      sub_24133C82C((void *)(v9 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CycleHistoryItem_viewModel), *(double *)(v9 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CycleHistoryItem_containerWidth));
      *(void *)(v9 + 56) = &off_26F5743C0;
      swift_unknownObjectWeakAssign();
      uint64_t v3 = sub_24130F90C();
      uint64_t v5 = v4;
      if (qword_26B00F370 != -1) {
        swift_once();
      }
      long long v11 = xmmword_26B017FC8;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_241631E08();
      uint64_t v10 = v5;
      unint64_t v8 = sub_2411D662C();
      uint64_t v7 = MEMORY[0x263F8D310];
      sub_241632C98();
      sub_241631E08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setAccessibilityIdentifier_, v6, v7, v8, v8, v8, 0, 0xE000000000000000, 32, 0xE100000000000000, v3, v10);
      swift_release();
    }
  }
  else
  {
    sub_241299DB8((uint64_t)&v11);
  }
}

void (*sub_2414BFC48(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x90uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CycleHistoryCell_item;
  v3[16] = v1;
  v3[17] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  sub_2411FA270(v5, (uint64_t)v3);
  return sub_2414BFCCC;
}

void sub_2414BFCCC(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  if (a2)
  {
    uint64_t v4 = v2[16] + v2[17];
    sub_2411FA270(*a1, v3);
    sub_2414BF920();
    swift_beginAccess();
    sub_2411FA3DC(v3, v4);
    swift_endAccess();
    sub_2414BFA34();
    sub_241299DB8(v3);
  }
  else
  {
    uint64_t v5 = v2[16] + v2[17];
    sub_2414BF920();
    swift_beginAccess();
    sub_2411FA3DC((uint64_t)v2, v5);
    swift_endAccess();
    sub_2414BFA34();
  }
  sub_241299DB8((uint64_t)v2);

  free(v2);
}

uint64_t sub_2414BFFA0(char a1)
{
  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for CycleHistoryCell();
  objc_msgSendSuper2(&v14, sel_setHighlighted_, a1 & 1);
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CycleHistoryCell_item;
  swift_beginAccess();
  sub_2411FA270(v3, (uint64_t)v11);
  if (!v12) {
    return sub_241299DB8((uint64_t)v11);
  }
  sub_2411E1530();
  uint64_t v4 = type metadata accessor for CycleHistoryItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if (MEMORY[0x245621790](v10 + 32))
    {
      uint64_t v6 = *(void *)(v10 + 40);
      uint64_t ObjectType = swift_getObjectType();
      id v8 = objc_msgSend(v1, sel_isHighlighted);
      uint64_t v12 = v4;
      unint64_t v13 = sub_2414C0800();
      v11[0] = v10;
      uint64_t v9 = *(void (**)(id, void *, uint64_t, uint64_t))(v6 + 8);
      swift_retain();
      v9(v8, v11, ObjectType, v6);
      swift_release();
      swift_unknownObjectRelease();
      return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v11);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void sub_2414C01BC()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_setPreservesSuperviewLayoutMargins_, 1);

  id v2 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v2);

  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CycleHistoryCell_singleCycleView];
  objc_msgSend(v3, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v4 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v4, sel_addSubview_, v3);

  uint64_t v5 = self;
  sub_2411BFC90();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24163B1D0;
  id v7 = objc_msgSend(v3, sel_leadingAnchor);
  id v8 = objc_msgSend(v0, sel_contentView);
  id v9 = objc_msgSend(v8, sel_leadingAnchor);

  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(void *)(v6 + 32) = v10;
  id v11 = objc_msgSend(v3, sel_trailingAnchor);
  id v12 = objc_msgSend(v0, sel_contentView);
  id v13 = objc_msgSend(v12, sel_trailingAnchor);

  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  *(void *)(v6 + 40) = v14;
  id v15 = objc_msgSend(v3, sel_topAnchor);
  id v16 = objc_msgSend(v0, sel_contentView);
  id v17 = objc_msgSend(v16, sel_topAnchor);

  id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(void *)(v6 + 48) = v18;
  id v19 = objc_msgSend(v3, sel_bottomAnchor);
  id v20 = objc_msgSend(v0, sel_contentView);
  id v21 = objc_msgSend(v20, sel_bottomAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(void *)(v6 + 56) = v22;
  sub_241631F48();
  sub_2411B9D00(0, (unint64_t *)&qword_26B012130);
  id v23 = (id)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_activateConstraints_, v23);
}

id sub_2414C053C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CycleHistoryCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CycleHistoryCell()
{
  return self;
}

uint64_t sub_2414C05E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CycleHistoryCell_item;
  swift_beginAccess();
  return sub_2411FA270(v3, a1);
}

uint64_t sub_2414C0634(uint64_t a1)
{
  sub_2414BF920();
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CycleHistoryCell_item;
  swift_beginAccess();
  sub_2411FA3DC(a1, v3);
  swift_endAccess();
  sub_2414BFA34();
  return sub_241299DB8(a1);
}

void (*sub_2414C06A8(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2414BFC48(v2);
  return sub_241299D70;
}

void sub_2414C0700(uint64_t a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for CycleHistoryCell();
  objc_msgSendSuper2(&v9, sel_setBackgroundColor_, a1);
  id v3 = objc_msgSend(v1, sel_backgroundColor);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void **)(*(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin16CycleHistoryCell_singleCycleView]
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27CycleHistorySingleCycleView_cycleView);
    uint64_t v6 = self;
    id v7 = v5;
    objc_msgSend(v6, sel_begin);
    objc_msgSend(v6, sel_setDisableActions_, 1);
    id v8 = *(id *)&v7[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin15SingleCycleView_overlayGradient];
    sub_24152A950(v4);

    objc_msgSend(v6, sel_commit);
  }
}

unint64_t sub_2414C0800()
{
  unint64_t result = qword_268CFBEE0;
  if (!qword_268CFBEE0)
  {
    type metadata accessor for CycleHistoryItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CFBEE0);
  }
  return result;
}

id sub_2414C0858()
{
  id result = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  qword_268D01310 = (uint64_t)result;
  return result;
}

uint64_t sub_2414C0894(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24162B718();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v17 - v9;
  uint64_t v11 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_endDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v11, a1, v4);
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v11, v4);
  id v12 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_factorSample), sel_endDate);
  sub_24162B6A8();

  sub_2414C79E0((unint64_t *)&qword_268CFAD00, MEMORY[0x263F07490]);
  char v13 = sub_241631C28();
  id v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  v14(v10, v4);
  id v15 = sub_2414C0AC4();
  objc_msgSend(v15, sel_setEnabled_, (v13 & 1) == 0);

  return ((uint64_t (*)(uint64_t, uint64_t))v14)(a1, v4);
}

id sub_2414C0AC4()
{
  return sub_2414C0AFC(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController____lazy_storage___doneBarButtonItem, &selRef_doneSaveAndDismiss, 0, 0);
}

id sub_2414C0AE0()
{
  return sub_2414C0AFC(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController____lazy_storage___cancelBarButtonItem, &selRef_cancelAndDismiss, 1, 1);
}

id sub_2414C0AFC(uint64_t *a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    id v7 = *(id *)(v4 + *a1);
  }
  else
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, a3, v4, *a2);
    objc_msgSend(v9, sel_setEnabled_, a4 & 1);
    id v10 = *(void **)(v4 + v5);
    *(void *)(v4 + v5) = v9;
    id v7 = v9;

    uint64_t v6 = 0;
  }
  id v11 = v6;
  return v7;
}

id sub_2414C0BA0(void *a1, void *a2, void *a3)
{
  uint64_t v7 = sub_24162B718();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_launchSource] = 2;
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController____lazy_storage___doneBarButtonItem] = 0;
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController____lazy_storage___cancelBarButtonItem] = 0;
  uint64_t v11 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_sections;
  uint64_t v12 = qword_268CF97A0;
  char v13 = v3;
  if (v12 != -1) {
    swift_once();
  }
  *(void *)&v13[v11] = qword_268D01318;
  *(void *)&v13[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_dateRows] = &unk_26F566838;
  *(void *)&v13[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_deleteRows] = &unk_26F566860;
  *(void *)&v13[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_factorSample] = a1;
  *(void *)&v13[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_providedHealthStore] = a2;
  *(void *)&v13[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_analysisProvider] = a3;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v14 = a1;
  id v15 = a2;
  id v16 = a3;
  id v17 = objc_msgSend(v14, sel_startDate);
  sub_24162B6A8();

  id v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(&v13[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_startDate], v10, v7);
  id v19 = objc_msgSend(v14, sel_endDate);
  sub_24162B6A8();

  v18(&v13[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_endDate], v10, v7);
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A558]), sel_initWithHealthStore_, v15);
  *(void *)&v13[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_nanoSyncControl] = v20;

  id v21 = (objc_class *)type metadata accessor for EditCycleFactorTableViewController();
  v24.receiver = v13;
  v24.super_class = v21;
  id v22 = objc_msgSendSuper2(&v24, sel_initWithStyle_, 2);
  sub_2414C0E6C();

  return v22;
}

void sub_2414C0E6C()
{
  id v1 = objc_msgSend(v0, sel_tableView);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v2 = v1;
  sub_2411B9D00(0, (unint64_t *)&unk_268D013D0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v4 = (void *)sub_241631CC8();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v4);

  id v5 = objc_msgSend(v0, sel_tableView);
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = v5;
  type metadata accessor for DatePickerTableViewCell();
  uint64_t v7 = swift_getObjCClassFromMetadata();
  uint64_t v8 = (void *)sub_241631CC8();
  objc_msgSend(v6, sel_registerClass_forCellReuseIdentifier_, v7, v8);

  id v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v10 = v9;
  id v11 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  sub_2413CCEF8((uint64_t)objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_factorSample], sel_hkmc_cycleFactor));
  uint64_t v12 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v12);

  id v13 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v13, sel_setLargeTitleDisplayMode_, 2);

  id v14 = objc_msgSend(v0, sel_navigationItem);
  id v15 = sub_2414C0AC4();
  objc_msgSend(v14, sel_setRightBarButtonItem_, v15);

  id v16 = objc_msgSend(v0, sel_navigationItem);
  id v17 = sub_2414C0AE0();
  objc_msgSend(v16, sel_setLeftBarButtonItem_, v17);
}

char *sub_2414C1190(char *a1)
{
  sub_2414C7A28(0, &qword_26B0130C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v88 - v4;
  uint64_t v6 = sub_24162BA08();
  uint64_t v95 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v96 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162B718();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)&v88 - v13;
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)&v88 - v16;
  uint64_t v97 = v1;
  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_sections);
  unint64_t v19 = sub_24162BB08();
  if ((v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_61;
  }
  if (v19 >= *(void *)(v18 + 16))
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  uint64_t v94 = v6;
  if ((*(unsigned char *)(v18 + v19 + 32) & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v20 = *(void *)(v97 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_deleteRows);
  unint64_t v21 = sub_24162BAC8();
  if ((v21 & 0x8000000000000000) != 0)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  unint64_t v22 = v21;
  if (v21 < *(void *)(v20 + 16))
  {
LABEL_9:
    switch(*(unsigned char *)(v20 + v22 + 32))
    {
      case 1:
        uint64_t v31 = (void *)sub_241631CC8();
        id v32 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_, v31);

        uint64_t v33 = v97;
        if (!v32) {
          goto LABEL_20;
        }
        type metadata accessor for EndDateTableViewCell();
        id v34 = (id)swift_dynamicCastClass();
        if (!v34)
        {

LABEL_20:
          id v34 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EndDateTableViewCell()), sel_init);
        }
        id v35 = v34;
        id v36 = objc_msgSend(v35, sel_textLabel);
        if (!v36) {
          goto LABEL_68;
        }
        uint64_t v37 = v36;

        sub_2414C1FA0(1);
        if (v38)
        {
          uint64_t v39 = (void *)sub_241631CC8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v39 = 0;
        }
        objc_msgSend(v37, sel_setText_, v39);

        id v63 = v35;
        id v64 = objc_msgSend(v63, sel_detailTextLabel);
        if (!v64) {
          goto LABEL_72;
        }
        uint64_t v65 = v64;

        uint64_t v66 = v33 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_endDate;
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, v66, v8);
        sub_2414B0D14();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
        int v67 = (void *)sub_241631CC8();
        swift_bridgeObjectRelease();
        objc_msgSend(v65, sel_setText_, v67);

        id v68 = (char *)v63;
        id v69 = objc_msgSend(v68, sel_detailTextLabel);
        if (!v69) {
          goto LABEL_73;
        }
        unint64_t v70 = v69;

        id v71 = objc_msgSend(self, sel_labelColor);
        objc_msgSend(v70, sel_setTextColor_, v71);

        *(void *)&v68[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20EndDateTableViewCell_delegate + 8] = &off_26F574500;
        swift_unknownObjectWeakAssign();
        uint64_t v72 = qword_26B00F370;
        a1 = v68;
        if (v72 != -1) {
          swift_once();
        }
        long long v98 = xmmword_26B017FC8;
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        sub_241631E08();
        goto LABEL_51;
      case 2:
        uint64_t v40 = (void *)sub_241631CC8();
        id v41 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_, v40);

        if (!v41) {
          return (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C80]), sel_init);
        }
        type metadata accessor for DatePickerTableViewCell();
        uint64_t v42 = swift_dynamicCastClass();
        if (v42)
        {
          a1 = (char *)v42;
          uint64_t v88 = v11;
          id v90 = v41;
          sub_24162B9A8();
          uint64_t v93 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_datePicker;
          uint64_t v43 = *(void **)&a1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_datePicker];
          uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
          uint64_t v92 = v9 + 16;
          v91(v14, v97 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_startDate, v8);
          id v44 = v43;
          sub_24162B828();
          uint64_t v45 = *(void (**)(char *, uint64_t))(v9 + 8);
          v45(v14, v8);
          uint64_t v46 = (void *)sub_24162B668();
          v45(v17, v8);
          objc_msgSend(v44, sel_setMinimumDate_, v46);

          id v89 = *(id *)&a1[v93];
          sub_24162B708();
          sub_24162B8C8();
          v45(v17, v8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
          {
            uint64_t v47 = 0;
          }
          else
          {
            uint64_t v47 = (void *)sub_24162B668();
            v45(v5, v8);
          }
          uint64_t v80 = (uint64_t)v88;
          id v79 = v89;
          objc_msgSend(v89, sel_setMaximumDate_, v47);

          uint64_t v81 = v97 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_endDate;
          swift_beginAccess();
          v91(v17, v81, v8);
          sub_24162B5E8();
          sub_2414C79E0((unint64_t *)&qword_268CFAD00, MEMORY[0x263F07490]);
          LOBYTE(v79) = sub_241631C28();
          v45(v14, v8);
          v45(v17, v8);
          if (v79)
          {
            sub_24162B708();
            sub_2414AFDC0(v80);
            v45(v17, v8);
          }
          else
          {
            v91((char *)v80, v81, v8);
          }
          uint64_t v82 = v95;
          id v83 = *(id *)&a1[v93];
          uint64_t v84 = (void *)sub_24162B668();
          objc_msgSend(v83, sel_setDate_, v84);

          v45((char *)v80, v8);
          *(void *)&a1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_delegate + 8] = &off_26F5744F0;
          swift_unknownObjectWeakAssign();
          uint64_t v85 = qword_26B00F370;
          id v86 = v90;
          if (v85 != -1) {
            swift_once();
          }
          long long v98 = xmmword_26B017FC8;
          _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
          sub_241631E08();
          long long v87 = (void *)sub_241631CC8();
          swift_bridgeObjectRelease();
          objc_msgSend(a1, sel_setAccessibilityIdentifier_, v87);

          (*(void (**)(char *, uint64_t))(v82 + 8))(v96, v94);
        }
        else
        {

          return (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C80]), sel_init);
        }
        return a1;
      case 3:
        int v48 = (void *)sub_241631CC8();
        uint64_t v49 = (void *)sub_24162BA88();
        id v50 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v48, v49);

        id v51 = objc_msgSend(v50, sel_textLabel);
        if (v51)
        {
          id v52 = v51;
          sub_2414C1FA0(3);
          if (v53)
          {
            uint64_t v54 = (void *)sub_241631CC8();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v54 = 0;
          }
          objc_msgSend(v52, sel_setText_, v54);
        }
        id v73 = objc_msgSend(v50, sel_textLabel);
        if (v73)
        {
          uint64_t v74 = v73;
          id v75 = objc_msgSend(self, sel_systemRedColor);
          objc_msgSend(v74, sel_setTextColor_, v75);
        }
        uint64_t v76 = qword_26B00F370;
        a1 = (char *)v50;
        if (v76 == -1) {
          goto LABEL_50;
        }
        goto LABEL_65;
      default:
        objc_super v24 = (void *)sub_241631CC8();
        id v25 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_, v24);

        if (!v25) {
          goto LABEL_13;
        }
        type metadata accessor for DateTableViewCell();
        id v26 = (id)swift_dynamicCastClass();
        if (!v26)
        {

LABEL_13:
          id v26 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DateTableViewCell()), sel_init);
        }
        id v27 = objc_msgSend(v26, sel_textLabel);
        if (v27)
        {
          uint64_t v28 = v27;
          sub_2414C1FA0(0);
          if (v29)
          {
            uint64_t v30 = (void *)sub_241631CC8();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v30 = 0;
          }
          objc_msgSend(v28, sel_setText_, v30);

          id v55 = objc_msgSend(v26, sel_detailTextLabel);
          if (v55)
          {
            uint64_t v56 = v55;
            (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, v97 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_startDate, v8);
            sub_2414B0D14();
            (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
            id v57 = (void *)sub_241631CC8();
            swift_bridgeObjectRelease();
            objc_msgSend(v56, sel_setText_, v57);

            objc_msgSend(v26, sel_setUserInteractionEnabled_, 0);
            id v58 = objc_msgSend(v26, sel_textLabel);
            if (v58)
            {
              uint64_t v59 = v58;
              objc_msgSend(v58, sel_setUserInteractionEnabled_, 0);

              id v60 = objc_msgSend(v26, sel_detailTextLabel);
              if (v60)
              {
                uint64_t v61 = v60;
                objc_msgSend(v60, sel_setUserInteractionEnabled_, 0);

                uint64_t v62 = qword_26B00F370;
                a1 = (char *)v26;
                if (v62 == -1) {
                  goto LABEL_50;
                }
                goto LABEL_65;
              }
LABEL_71:
              __break(1u);
LABEL_72:
              __break(1u);
LABEL_73:
              __break(1u);
              JUMPOUT(0x2414C1F90);
            }
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
        }
        else
        {
          __break(1u);
LABEL_68:
          __break(1u);
        }
        __break(1u);
        goto LABEL_70;
    }
  }
  __break(1u);
LABEL_7:
  unint64_t v22 = sub_24162BAC8();
  id v23 = (uint64_t *)(v97 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_dateRows);
  swift_beginAccess();
  if ((v22 & 0x8000000000000000) != 0)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  uint64_t v20 = *v23;
  if (v22 < *(void *)(v20 + 16)) {
    goto LABEL_9;
  }
LABEL_64:
  __break(1u);
LABEL_65:
  swift_once();
LABEL_50:
  long long v99 = xmmword_26B017FC8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
LABEL_51:
  long long v77 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAccessibilityIdentifier_, v77);

  return a1;
}

uint64_t sub_2414C1FA0(char a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v13[-v8];
  uint64_t v10 = 0;
  switch(a1)
  {
    case 2:
      return v10;
    default:
      sub_241631C38();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v11 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v10 = sub_241631D38();
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
      break;
  }
  return v10;
}

void sub_2414C230C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24162BB18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_sections);
  unint64_t v9 = sub_24162BB08();
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v9 >= *(void *)(v8 + 16))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if ((*(unsigned char *)(v8 + 32 + v9) & 1) == 0)
  {
    unint64_t v12 = sub_24162BB08();
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12 < *(void *)(v8 + 16))
      {
        if ((*(unsigned char *)(v8 + 32 + v12) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_deleteRows);
        unint64_t v14 = sub_24162BAC8();
        if ((v14 & 0x8000000000000000) == 0)
        {
          unint64_t v15 = v14;
          if (v14 < *(void *)(v13 + 16))
          {
LABEL_17:
            if (*(unsigned char *)(v13 + v15 + 32) != 1) {
              return;
            }
            id v17 = (void *)sub_24162BA88();
            id v18 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v17);

            if (v18)
            {
              type metadata accessor for EndDateTableViewCell();
              uint64_t v19 = swift_dynamicCastClass();
              if (v19)
              {
                uint64_t v20 = (void *)v19;
                id v21 = sub_241293228();
                objc_msgSend(v20, sel_setAccessoryView_, v21);

                id v18 = v21;
              }
            }
            unint64_t v22 = (uint64_t *)(v2
                            + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_dateRows);
            swift_beginAccess();
            if (sub_241497EF8(2, *v22))
            {
              sub_2414C3944(2u);
              id v23 = (void *)sub_24162BA88();
              id v24 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v23);

              if (!v24) {
                return;
              }
              type metadata accessor for DateTableViewCell();
              id v25 = (void *)swift_dynamicCastClass();
              if (v25)
              {
                id v26 = objc_msgSend(v25, sel_detailTextLabel);
                if (v26)
                {
                  id v27 = v26;
                  id v28 = objc_msgSend(self, sel_labelColor);
LABEL_32:
                  id v35 = v28;
                  objc_msgSend(v27, sel_setTextColor_, v35);

                  return;
                }
                goto LABEL_43;
              }
LABEL_33:

              return;
            }
            uint64_t v29 = sub_24162BAC8();
            uint64_t v30 = v29 + 1;
            if (!__OFADD__(v29, 1))
            {
              uint64_t v31 = sub_24162BB08();
              MEMORY[0x245618F80](v30, v31);
              sub_2414C3294(2u, (uint64_t)v7);
              (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
              id v32 = (void *)sub_24162BA88();
              id v24 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v32);

              if (!v24) {
                return;
              }
              type metadata accessor for DateTableViewCell();
              uint64_t v33 = (void *)swift_dynamicCastClass();
              if (v33)
              {
                id v34 = objc_msgSend(v33, sel_detailTextLabel);
                if (v34)
                {
                  id v27 = v34;
                  id v28 = objc_msgSend(self, sel_systemBlueColor);
                  goto LABEL_32;
                }
LABEL_44:
                __break(1u);
                return;
              }
              goto LABEL_33;
            }
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
            goto LABEL_44;
          }
          __break(1u);
LABEL_15:
          unint64_t v15 = sub_24162BAC8();
          uint64_t v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_dateRows);
          swift_beginAccess();
          if ((v15 & 0x8000000000000000) == 0)
          {
            uint64_t v13 = *v16;
            if (v15 < *(void *)(v13 + 16)) {
              goto LABEL_17;
            }
LABEL_41:
            __break(1u);
            goto LABEL_42;
          }
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v10 = (void *)sub_24162BA88();
  id v11 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v10);

  if (v11)
  {
    objc_msgSend(v11, sel_setSelected_, 0);
  }

  sub_2414C556C();
}

unint64_t sub_2414C2878(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v58 = a2;
  uint64_t v5 = sub_24162EFA8();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = (void (*)(char *, uint64_t, uint64_t))v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (unint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162B718();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v60 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414C7A28(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v55 - v15;
  uint64_t v17 = sub_24162BB18();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v59 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  unint64_t v22 = (char *)&v55 - v21;
  *(void *)&double v24 = MEMORY[0x270FA5388](v23).n128_u64[0];
  id v63 = (char *)&v55 - v25;
  id v64 = v3;
  unint64_t result = (unint64_t)objc_msgSend(v3, sel_tableView, v24);
  if (!result) {
    goto LABEL_34;
  }
  id v27 = (void *)result;
  id v28 = objc_msgSend((id)result, sel_indexPathForCell_, a1);

  if (!v28)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_11;
  }
  uint64_t v56 = v9;
  uint64_t v57 = v8;
  sub_24162BAA8();

  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v29(v16, v22, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v30(v16, 1, v17) != 1)
  {
    v29(v63, v16, v17);
    uint64_t v16 = v64;
    uint64_t v31 = *(void *)&v64[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_sections];
    unint64_t result = sub_24162BB08();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)(v31 + 16))
    {
      if ((*(unsigned char *)(v31 + result + 32) & 1) == 0)
      {
        unint64_t v7 = sub_24162BAC8();
        uint64_t v40 = &v16[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_dateRows];
        unint64_t result = swift_beginAccess();
        if ((v7 & 0x8000000000000000) == 0)
        {
          uint64_t v32 = *(void *)v40;
          if (v7 < *(void *)(v32 + 16)) {
            goto LABEL_18;
          }
          goto LABEL_33;
        }
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      uint64_t v32 = *(void *)&v16[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_deleteRows];
      unint64_t result = sub_24162BAC8();
      if ((result & 0x8000000000000000) == 0)
      {
        unint64_t v7 = result;
        if (result >= *(void *)(v32 + 16))
        {
          __break(1u);
          goto LABEL_10;
        }
LABEL_18:
        if (*(unsigned char *)(v32 + v7 + 32) != 2) {
          return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v63, v17);
        }
        uint64_t v41 = (uint64_t)v60;
        uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
        v62(v60, v58, v57);
        sub_2414C0894(v41);
        sub_2414C30F4(1u, (uint64_t)v13);
        if (v30(v13, 1, v17) == 1)
        {
          (*(void (**)(char *, uint64_t))(v18 + 8))(v63, v17);
          return sub_2414C7B58((uint64_t)v13, (uint64_t)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_2414C7A28);
        }
        v29(v59, v13, v17);
        unint64_t result = (unint64_t)objc_msgSend(v16, sel_tableView);
        if (result)
        {
          uint64_t v42 = (void *)result;
          uint64_t v43 = (void *)sub_24162BA88();
          id v44 = objc_msgSend(v42, sel_cellForRowAtIndexPath_, v43);

          uint64_t v46 = v56;
          uint64_t v45 = v57;
          if (!v44)
          {
LABEL_28:
            uint64_t v54 = *(void (**)(char *, uint64_t))(v18 + 8);
            v54(v59, v17);
            return ((uint64_t (*)(char *, uint64_t))v54)(v63, v17);
          }
          type metadata accessor for EndDateTableViewCell();
          uint64_t v47 = swift_dynamicCastClass();
          if (!v47)
          {

            goto LABEL_28;
          }
          int v48 = (void *)v47;
          id v49 = v44;
          unint64_t result = (unint64_t)objc_msgSend(v48, sel_detailTextLabel);
          if (result)
          {
            id v50 = (void *)result;

            id v51 = &v64[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_endDate];
            swift_beginAccess();
            id v52 = v60;
            v62(v60, (uint64_t)v51, v45);
            sub_2414B0D14();
            (*(void (**)(char *, uint64_t))(v46 + 8))(v52, v45);
            uint64_t v53 = (void *)sub_241631CC8();
            swift_bridgeObjectRelease();
            objc_msgSend(v50, sel_setText_, v53);

            goto LABEL_28;
          }
LABEL_36:
          __break(1u);
          return result;
        }
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    __break(1u);
    goto LABEL_31;
  }
LABEL_11:
  sub_2414C7B58((uint64_t)v16, (uint64_t)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_2414C7A28);
  sub_24162EF48();
  uint64_t v33 = v64;
  id v34 = sub_24162EF98();
  os_log_type_t v35 = sub_2416322C8();
  if (os_log_type_enabled(v34, v35))
  {
    id v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v66[0] = v37;
    *(_DWORD *)id v36 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    sub_2414C7A8C();
    uint64_t v38 = sub_241631D48();
    uint64_t ObjectType = sub_2411B6898(v38, v39, v66);
    sub_241632C28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v34, v35, "[%{public}s] DatePickerTableViewCell does not exist in tableView", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v37, -1, -1);
    MEMORY[0x245621640](v36, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(unint64_t, void (*)(char *, uint64_t, uint64_t)))(v61 + 8))(v7, v62);
}

uint64_t sub_2414C30F4@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_sections);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_17:
    uint64_t v24 = sub_24162BB18();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a2, 1, 1, v24);
  }
  int v6 = a1;
  uint64_t v7 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_deleteRows;
  uint64_t v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_dateRows);
  uint64_t v9 = v4 + 32;
  swift_beginAccess();
  uint64_t v10 = 0;
  while ((*(unsigned char *)(v9 + v10) & 1) != 0)
  {
    uint64_t v11 = *(void *)(v2 + v7);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      if (*(unsigned __int8 *)(v11 + 32) == v6) {
        goto LABEL_19;
      }
      uint64_t v13 = 0;
      uint64_t v14 = v11 + 33;
      uint64_t v15 = v12 - 1;
      while (v15 != v13)
      {
        int v16 = *(unsigned __int8 *)(v14 + v13++);
        if (v16 == v6) {
          goto LABEL_16;
        }
      }
    }
LABEL_3:
    if (++v10 == v5) {
      goto LABEL_17;
    }
  }
  uint64_t v17 = *v8;
  uint64_t v18 = *(void *)(*v8 + 16);
  if (!v18) {
    goto LABEL_3;
  }
  if (*(unsigned __int8 *)(v17 + 32) != v6)
  {
    uint64_t v13 = 0;
    uint64_t v19 = v17 + 33;
    uint64_t v20 = v18 - 1;
    while (v20 != v13)
    {
      int v21 = *(unsigned __int8 *)(v19 + v13++);
      if (v21 == v6) {
        goto LABEL_16;
      }
    }
    goto LABEL_3;
  }
LABEL_19:
  uint64_t v13 = 0;
LABEL_16:
  MEMORY[0x245618F80](v13);
  uint64_t v22 = sub_24162BB18();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 0, 1, v22);
}

void sub_2414C3294(unsigned __int8 a1, uint64_t a2)
{
  int v3 = a1;
  uint64_t v4 = sub_24162B718();
  uint64_t v58 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v57 = (char *)&v50 - v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v50 - v10;
  sub_2414C7A28(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v50 - v13;
  uint64_t v15 = sub_24162BB18();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3 == 2)
  {
    uint64_t v19 = &v59[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_dateRows];
    swift_beginAccess();
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(*(void *)v19 + 16);
    if (v21)
    {
      if (*(unsigned char *)(v20 + 32) == 1)
      {
        unint64_t v22 = 0;
LABEL_8:
        uint64_t v55 = v11;
        swift_beginAccess();
        if (*(void *)(*(void *)v19 + 16) <= v22)
        {
          __break(1u);
        }
        else
        {
          uint64_t v56 = v4;
          sub_2414AA598(v22 + 1, v22 + 1, 2);
          swift_endAccess();
          id v26 = v59;
          id v27 = objc_msgSend(v59, sel_tableView);
          if (v27)
          {
            id v28 = v27;
            sub_2414C7A28(0, &qword_268CFFE10, MEMORY[0x263F07A30], MEMORY[0x263F8E0F8]);
            unint64_t v29 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
            uint64_t v30 = swift_allocObject();
            *(_OWORD *)(v30 + 16) = xmmword_241637EE0;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 16))(v30 + v29, a2, v15);
            uint64_t v31 = (void *)sub_241631F18();
            swift_bridgeObjectRelease();
            objc_msgSend(v28, sel_insertRowsAtIndexPaths_withRowAnimation_, v31, 100);

            sub_2414C30F4(1u, (uint64_t)v14);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
            {
              sub_2414C7B58((uint64_t)v14, (uint64_t)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_2414C7A28);
              return;
            }
            (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
            id v32 = objc_msgSend(v26, sel_tableView);
            if (v32)
            {
              uint64_t v33 = v32;
              id v34 = (void *)sub_24162BA88();
              id v35 = objc_msgSend(v33, sel_cellForRowAtIndexPath_, v34);

              uint64_t v36 = v56;
              if (v35)
              {
                type metadata accessor for EndDateTableViewCell();
                uint64_t v37 = (void *)swift_dynamicCastClass();
                if (v37)
                {
                  id v53 = v37;
                  uint64_t v38 = &v59[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_endDate];
                  swift_beginAccess();
                  unint64_t v39 = v57;
                  uint64_t v40 = v58;
                  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
                  id v51 = v38;
                  uint64_t v54 = v41;
                  v41(v57, v38, v36);
                  sub_24162B5E8();
                  sub_2414C79E0((unint64_t *)&qword_268CFAD00, MEMORY[0x263F07490]);
                  int v52 = sub_241631C28();
                  uint64_t v42 = *(void (**)(char *, uint64_t))(v40 + 8);
                  v42(v6, v36);
                  uint64_t v58 = v40 + 8;
                  id v50 = v42;
                  v42(v39, v36);
                  uint64_t v43 = (uint64_t)v55;
                  if (v52)
                  {
                    sub_24162B708();
                    id v44 = v51;
                  }
                  else
                  {
                    id v44 = v51;
                    v54(v55, v51, v36);
                  }
                  sub_2414C0894(v43);
                  id v45 = v35;
                  id v46 = objc_msgSend(v53, sel_detailTextLabel);
                  if (v46)
                  {
                    uint64_t v47 = v46;

                    int v48 = v57;
                    v54(v57, v44, v36);
                    sub_2414B0D14();
                    v50(v48, v36);
                    id v49 = (void *)sub_241631CC8();
                    swift_bridgeObjectRelease();
                    objc_msgSend(v47, sel_setText_, v49);

                    goto LABEL_21;
                  }
LABEL_26:
                  __break(1u);
                  return;
                }
              }
LABEL_21:
              (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
              return;
            }
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        __break(1u);
        goto LABEL_25;
      }
      unint64_t v22 = 0;
      uint64_t v23 = v21 - 1;
      uint64_t v24 = v20 + 33;
      while (v23 != v22)
      {
        int v25 = *(unsigned __int8 *)(v24 + v22++);
        if (v25 == 1) {
          goto LABEL_8;
        }
      }
    }
  }
}

void sub_2414C3944(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  int v3 = a1;
  sub_2414C7A28(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  int v6 = (char *)&v41 - v5;
  uint64_t v7 = sub_24162BB18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v41 - v12;
  if (v3 == 2)
  {
    uint64_t v14 = &v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_dateRows];
    swift_beginAccess();
    uint64_t v15 = sub_2413A3D2C(2, *(void *)v14);
    if ((v16 & 1) == 0)
    {
      unint64_t v17 = v15;
      uint64_t v43 = v8;
      id v18 = objc_msgSend(v2, sel_tableView);
      if (!v18)
      {
        __break(1u);
        goto LABEL_19;
      }
      uint64_t v19 = v18;
      MEMORY[0x245618F80](v17, 0);
      uint64_t v20 = (void *)sub_24162BA88();
      uint64_t v21 = v43;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v7);
      id v22 = objc_msgSend(v19, sel_cellForRowAtIndexPath_, v20);

      uint64_t v8 = v21;
      if (v22)
      {
        type metadata accessor for DatePickerTableViewCell();
        uint64_t v23 = swift_dynamicCastClass();
        if (v23)
        {
          uint64_t v24 = v23;
          swift_beginAccess();
          sub_2413A43D8(v17);
          swift_endAccess();
          id v42 = self;
          int v25 = (void *)swift_allocObject();
          v25[2] = v24;
          v25[3] = v2;
          v25[4] = v17;
          int v48 = sub_2414C7C24;
          id v49 = v25;
          uint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v45 = 1107296256;
          id v46 = sub_2411987F4;
          uint64_t v47 = &unk_26F574768;
          id v26 = _Block_copy(&aBlock);
          id v27 = v22;
          id v28 = v2;
          swift_release();
          uint64_t v29 = swift_allocObject();
          *(void *)(v29 + 16) = v24;
          int v48 = sub_2414C7C30;
          id v49 = (void *)v29;
          uint64_t aBlock = MEMORY[0x263EF8330];
          uint64_t v45 = 1107296256;
          id v46 = sub_241563BBC;
          uint64_t v47 = &unk_26F5747B8;
          uint64_t v30 = _Block_copy(&aBlock);
          id v31 = v27;
          uint64_t v8 = v43;
          swift_release();
          objc_msgSend(v42, sel_animateWithDuration_animations_completion_, v26, v30, 0.25);
          _Block_release(v30);
          _Block_release(v26);
        }
      }
    }
    sub_2414C30F4(1u, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_2414C7B58((uint64_t)v6, (uint64_t)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_2414C7A28);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    id v32 = objc_msgSend(v2, sel_tableView);
    if (v32)
    {
      uint64_t v33 = v32;
      id v34 = (void *)sub_24162BA88();
      id v35 = objc_msgSend(v33, sel_cellForRowAtIndexPath_, v34);

      if (!v35)
      {
LABEL_16:
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        return;
      }
      type metadata accessor for EndDateTableViewCell();
      uint64_t v36 = swift_dynamicCastClass();
      if (!v36)
      {
LABEL_15:

        goto LABEL_16;
      }
      uint64_t v37 = (void *)v36;
      id v35 = v35;
      id v38 = objc_msgSend(v37, sel_detailTextLabel);
      if (v38)
      {
        unint64_t v39 = v38;

        id v40 = objc_msgSend(self, sel_labelColor);
        objc_msgSend(v39, sel_setTextColor_, v40);

        objc_msgSend(v37, sel_setAccessoryView_, 0);
        goto LABEL_15;
      }
LABEL_20:
      __break(1u);
      return;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

void sub_2414C3ED0(char *a1, void *a2, uint64_t a3)
{
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_datePicker], sel_setAlpha_, 0.0);
  id v6 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(a1, sel_setBackgroundColor_, v6);

  id v7 = objc_msgSend(a2, sel_tableView);
  if (v7)
  {
    uint64_t v8 = v7;
    sub_2414C7A28(0, &qword_268CFFE10, MEMORY[0x263F07A30], MEMORY[0x263F8E0F8]);
    sub_24162BB18();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241637EE0;
    MEMORY[0x245618F80](a3, 0);
    id v9 = (id)sub_241631F18();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_deleteRowsAtIndexPaths_withRowAnimation_, v9, 3);
  }
  else
  {
    __break(1u);
  }
}

id sub_2414C40A0(id result, char *a2)
{
  if (result)
  {
    objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23DatePickerTableViewCell_datePicker], sel_setAlpha_, 1.0);
    if (qword_268CF9798 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_268D01310;
    return objc_msgSend(a2, sel_setBackgroundColor_, v3);
  }
  return result;
}

void sub_2414C413C()
{
  uint64_t v1 = sub_24162B718();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v7 = (char *)&v37 - v6;
  *(void *)&double v9 = MEMORY[0x270FA5388](v8).n128_u64[0];
  uint64_t v11 = (char *)&v37 - v10;
  id v40 = *(id *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_factorSample];
  id v12 = objc_msgSend(v40, sel_endDate, v9);
  sub_24162B6A8();

  uint64_t v41 = v0;
  uint64_t v13 = &v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_endDate];
  swift_beginAccess();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v14(v7, v13, v1);
  sub_2414C79E0((unint64_t *)&qword_268CFAD00, MEMORY[0x263F07490]);
  char v15 = sub_241631C28();
  char v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v16(v7, v1);
  v16(v11, v1);
  if ((v15 & 1) == 0)
  {
    v14(v11, v13, v1);
    sub_24162B5E8();
    char v17 = sub_24162B698();
    v16(v7, v1);
    v16(v11, v1);
    unint64_t v39 = v4;
    if (v17)
    {
      v14(v4, v13, v1);
    }
    else
    {
      v14(v11, v13, v1);
      sub_2414AFDC0((uint64_t)v4);
      v16(v11, v1);
    }
    id v18 = self;
    id v19 = objc_msgSend(v40, sel_hkmc_cycleFactor);
    v14(v11, &v41[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_startDate], v1);
    sub_2414AFDC0((uint64_t)v7);
    v16(v11, v1);
    uint64_t v20 = (void *)sub_24162B668();
    v16(v7, v1);
    uint64_t v21 = (void *)sub_24162B668();
    id v22 = objc_msgSend(v18, sel_hkmc_categorySampleWithCycleFactor_startDate_endDate_, v19, v20, v21);

    uint64_t v23 = v41;
    id v38 = *(id *)&v41[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_providedHealthStore];
    sub_2412AD3EC(0, (unint64_t *)&qword_26B0121F0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v24 = swift_allocObject();
    long long v37 = xmmword_24163B390;
    *(_OWORD *)(v24 + 16) = xmmword_24163B390;
    *(void *)(v24 + 32) = v22;
    aBlock[0] = v24;
    sub_241631F48();
    sub_2411B9D00(0, &qword_268D041F0);
    id v25 = v22;
    id v26 = (void *)sub_241631F18();
    swift_bridgeObjectRelease();
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = v37;
    id v28 = v40;
    *(void *)(v27 + 32) = v40;
    aBlock[0] = v27;
    sub_241631F48();
    id v29 = v28;
    uint64_t v30 = (void *)sub_241631F18();
    swift_bridgeObjectRelease();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v23;
    *(void *)(v31 + 24) = v25;
    aBlock[4] = sub_2414C7B50;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241328D44;
    aBlock[3] = &unk_26F5746C8;
    id v32 = _Block_copy(aBlock);
    id v33 = v25;
    id v34 = v23;
    swift_release();
    objc_msgSend(v38, sel_saveObjects_deleteObjects_associations_completion_, v26, v30, 0, v32);
    _Block_release(v32);

    id v35 = objc_msgSend(v34, sel_presentingViewController);
    if (v35)
    {
      uint64_t v36 = v35;
      objc_msgSend(v35, sel_dismissViewControllerAnimated_completion_, 1, 0);

      v16(v39, v1);
    }
    else
    {
      v16(v39, v1);
    }
  }
}

void sub_2414C46DC(char a1, void *a2, void *a3, void *a4)
{
  uint64_t v78 = sub_24162B718();
  MEMORY[0x270FA5388](v78);
  uint64_t v8 = sub_24162EFA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v72[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v72[-v13];
  if (a1)
  {
    uint64_t v77 = v9;
    sub_24162EF48();
    id v15 = a3;
    id v16 = a4;
    id v17 = v15;
    id v18 = v16;
    id v19 = v17;
    id v20 = v18;
    uint64_t v21 = (char *)v19;
    id v22 = v20;
    uint64_t v23 = sub_24162EF98();
    os_log_type_t v24 = sub_2416322E8();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      aBlock[0] = v75;
      *(_DWORD *)uint64_t v26 = 136447234;
      os_log_t v74 = v23;
      uint64_t ObjectType = swift_getObjectType();
      sub_2414C7A8C();
      uint64_t v27 = sub_241631D48();
      int v73 = v25;
      uint64_t ObjectType = sub_2411B6898(v27, v28, aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      uint64_t ObjectType = *(void *)&v21[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_factorSample];
      id v29 = (void *)ObjectType;
      sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
      uint64_t v76 = v8;
      id v30 = v29;
      uint64_t v31 = sub_241631D78();
      uint64_t ObjectType = sub_2411B6898(v31, v32, aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 22) = 2082;
      id v33 = objc_msgSend(v30, sel_endDate);
      sub_24162B6A8();

      uint64_t v34 = sub_241631D78();
      uint64_t ObjectType = sub_2411B6898(v34, v35, aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 32) = 2082;
      uint64_t ObjectType = (uint64_t)v22;
      id v36 = v22;
      uint64_t v37 = sub_241631D78();
      uint64_t ObjectType = sub_2411B6898(v37, v38, aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 42) = 2082;
      id v39 = objc_msgSend(v36, sel_endDate);
      sub_24162B6A8();

      uint64_t v40 = sub_241631D78();
      uint64_t ObjectType = sub_2411B6898(v40, v41, aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      os_log_t v42 = v74;
      _os_log_impl(&dword_24118E000, v74, (os_log_type_t)v73, "[%{public}s]: Deleted old factor %{public}s with endDate %{public}s and saved new factor %{public}s with endDate %{public}s", (uint8_t *)v26, 0x34u);
      uint64_t v43 = v75;
      swift_arrayDestroy();
      MEMORY[0x245621640](v43, -1, -1);
      MEMORY[0x245621640](v26, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v77 + 8))(v11, v76);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v77 + 8))(v11, v8);
    }
    sub_2414C5028((uint64_t)aBlock);
    uint64_t v66 = (uint64_t)v80;
    if (v80)
    {
      uint64_t v67 = (uint64_t)v81;
      sub_2411B6854(aBlock, (uint64_t)v80);
      sub_2411D2294(v66, v67);
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)aBlock);
    }
    else
    {
      sub_2414C7B58((uint64_t)aBlock, (uint64_t)&unk_268D013C0, (uint64_t)&unk_268D013C8, (uint64_t)&protocol descriptor for AnalyticsMetric, (uint64_t (*)(void))sub_2411BF934);
    }
    id v68 = *(void **)&v21[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_nanoSyncControl];
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = v21;
    uint64_t v81 = sub_2414C7BB8;
    uint64_t v82 = v69;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_241328D44;
    uint64_t v80 = &unk_26F574718;
    unint64_t v70 = _Block_copy(aBlock);
    id v71 = v21;
    swift_release();
    objc_msgSend(v68, sel_forceNanoSyncWithOptions_completion_, 0, v70);
    _Block_release(v70);
  }
  else
  {
    sub_24162EF48();
    id v44 = a3;
    id v45 = a2;
    id v46 = (char *)v44;
    id v47 = a2;
    int v48 = sub_24162EF98();
    os_log_type_t v49 = sub_2416322C8();
    int v50 = v49;
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      aBlock[0] = v75;
      *(_DWORD *)uint64_t v51 = 136446978;
      os_log_t v74 = v48;
      uint64_t ObjectType = swift_getObjectType();
      sub_2414C7A8C();
      uint64_t v77 = v9;
      uint64_t v52 = sub_241631D48();
      uint64_t v76 = v8;
      uint64_t ObjectType = sub_2411B6898(v52, v53, aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2082;
      uint64_t ObjectType = *(void *)&v46[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_factorSample];
      uint64_t v54 = (void *)ObjectType;
      sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
      id v55 = v54;
      int v73 = v50;
      uint64_t v56 = sub_241631D78();
      uint64_t ObjectType = sub_2411B6898(v56, v57, aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 22) = 2082;
      id v58 = objc_msgSend(v55, sel_startDate);
      sub_24162B6A8();

      uint64_t v59 = sub_241631D78();
      uint64_t ObjectType = sub_2411B6898(v59, v60, aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 32) = 2082;
      uint64_t ObjectType = (uint64_t)a2;
      id v61 = a2;
      sub_2411BF934(0, (unint64_t *)&qword_26B010860, (unint64_t *)&qword_26B012410);
      uint64_t v62 = sub_241631D48();
      uint64_t ObjectType = sub_2411B6898(v62, v63, aBlock);
      sub_241632C28();
      swift_bridgeObjectRelease();

      os_log_t v64 = v74;
      _os_log_impl(&dword_24118E000, v74, (os_log_type_t)v73, "[%{public}s]: Failed to replace sample %{public}s with startDate %{public}s with error: %{public}s", (uint8_t *)v51, 0x2Au);
      uint64_t v65 = v75;
      swift_arrayDestroy();
      MEMORY[0x245621640](v65, -1, -1);
      MEMORY[0x245621640](v51, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v77 + 8))(v14, v76);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
}

unint64_t sub_2414C5028@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v46 = a1;
  uint64_t v3 = sub_24162B7F8();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v43 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162BA08();
  MEMORY[0x270FA5388](v5 - 8);
  os_log_t v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162B718();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v41 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v39 - v11;
  *(void *)&double v14 = MEMORY[0x270FA5388](v13).n128_u64[0];
  id v16 = (char *)&v39 - v15;
  id v17 = *(void **)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_factorSample);
  id v18 = objc_msgSend(v17, sel_startDate, v14);
  sub_24162B6A8();

  id v19 = *(void (**)(char *))(v8 + 16);
  uint64_t v40 = v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_startDate;
  v19(v12);
  char v20 = sub_24162B698();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v12, v7);
  v21(v16, v7);
  if ((v20 & 1) == 0) {
    goto LABEL_3;
  }
  id v22 = objc_msgSend(v17, sel_endDate);
  sub_24162B6A8();

  uint64_t v23 = v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_endDate;
  swift_beginAccess();
  ((void (*)(char *, uint64_t, uint64_t))v19)(v12, v23, v7);
  sub_2414C79E0((unint64_t *)&qword_268CFAD00, MEMORY[0x263F07490]);
  LOBYTE(v23) = sub_241631C28();
  v21(v12, v7);
  v21(v16, v7);
  if ((v23 & 1) == 0) {
    int v24 = 0;
  }
  else {
LABEL_3:
  }
    int v24 = 1;
  id v25 = objc_msgSend(v17, sel_hkmc_cycleFactor);
  uint64_t v26 = *(unsigned __int8 *)(v2
                           + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_launchSource);
  if (v24)
  {
    uint64_t v27 = v40;
    uint64_t v28 = (uint64_t)v41;
    id v29 = v41;
  }
  else
  {
    uint64_t v30 = v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_endDate;
    swift_beginAccess();
    uint64_t v28 = (uint64_t)v41;
    id v29 = v41;
    uint64_t v27 = v30;
  }
  ((void (*)(char *, uint64_t, uint64_t))v19)(v29, v27, v7);
  unint64_t v32 = v43;
  uint64_t v31 = v44;
  uint64_t v33 = v45;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, *MEMORY[0x263F07740], v45);
  uint64_t v34 = (uint64_t)v42;
  sub_24162B808();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  unint64_t result = sub_241413D20((uint64_t)v25, 0, v24, v26, v28, v34);
  if ((result & 0xFF00) == 0x200)
  {
    uint64_t v37 = (_OWORD *)v46;
    *(void *)(v46 + 32) = 0;
    *uint64_t v37 = 0u;
    v37[1] = 0u;
  }
  else
  {
    uint64_t v38 = v46;
    *(void *)(v46 + 24) = &type metadata for LoggedFactorDataMetric;
    *(void *)(v38 + 32) = &off_26F572250;
    *(unsigned char *)uint64_t v38 = result;
    *(unsigned char *)(v38 + 1) = BYTE1(result) & 1;
    *(unsigned char *)(v38 + 2) = BYTE2(result);
    *(void *)(v38 + 8) = v36;
  }
  return result;
}

void sub_2414C556C()
{
  uint64_t v1 = sub_24162B7E8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_241631CA8();
  uint64_t v3 = *(void (***)(char *, char *, uint64_t))(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v7 = MEMORY[0x270FA5388](v6).n128_u64[0];
  uint64_t v9 = (char *)v32 - v8;
  id v34 = v0;
  id v10 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_factorSample], sel_hkmc_cycleFactor, v7);
  unint64_t v11 = (unint64_t)(v3 + 2);
  uint64_t v12 = v3 + 2;
  v32[1] = v3;
  if (v10 != (id)2)
  {
    sub_241631C38();
    double v14 = *v12;
    unint64_t v35 = v11 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v36 = v14;
    v14(v5, v9, v2);
    if (qword_26B0131F0 == -1) {
      goto LABEL_5;
    }
    goto LABEL_8;
  }
  sub_241631C38();
  uint64_t v13 = *v12;
  unint64_t v35 = v11 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v36 = v13;
  v13(v5, v9, v2);
  if (qword_26B0131F0 != -1) {
LABEL_8:
  }
    swift_once();
LABEL_5:
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  id v16 = (void (*)(char *, uint64_t))v3[1];
  v16(v9, v2);
  sub_241631C38();
  v36(v5, v9, v2);
  id v17 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  uint64_t v33 = v16;
  v16(v9, v2);
  id v18 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v19 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  v32[0] = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v18, v19, 0);

  sub_241631C38();
  v36(v5, v9, v2);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v20 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  uint64_t v21 = v33;
  v33(v9, v2);
  uint64_t v22 = swift_allocObject();
  id v23 = v34;
  *(void *)(v22 + 16) = v34;
  id v34 = v23;
  int v24 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_2414C79D0;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2412A82A0;
  uint64_t aBlock[3] = &unk_26F574538;
  id v25 = _Block_copy(aBlock);
  swift_release();
  uint64_t v26 = self;
  id v27 = objc_msgSend(v26, sel_actionWithTitle_style_handler_, v24, 2, v25);
  _Block_release(v25);

  id v28 = v32[0];
  objc_msgSend(v32[0], sel_addAction_, v27);
  sub_241631C38();
  v36(v5, v9, v2);
  id v29 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  v21(v9, v2);
  uint64_t v30 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(v26, sel_actionWithTitle_style_handler_, v30, 1, 0);

  objc_msgSend(v28, sel_addAction_, v31);
  objc_msgSend(v34, sel_presentViewController_animated_completion_, v28, 1, 0);
}

void sub_2414C5C44(uint64_t a1, char *a2)
{
  uint64_t v3 = *(void **)&a2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_providedHealthStore];
  uint64_t v4 = *(void *)&a2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_factorSample];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  v8[4] = sub_2414C79D8;
  v8[5] = v5;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_241328D44;
  v8[3] = &unk_26F574588;
  uint64_t v6 = _Block_copy(v8);
  double v7 = a2;
  swift_release();
  objc_msgSend(v3, sel_deleteObject_withCompletion_, v4, v6);
  _Block_release(v6);
}

void sub_2414C5D40(char a1, void *a2, void *a3)
{
  uint64_t v6 = sub_241631488();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v82 = &v76[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_2416314A8();
  uint64_t v83 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v81 = &v76[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_24162B718();
  uint64_t v80 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v76[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_24162EFA8();
  MEMORY[0x270FA5388](v14);
  id v16 = &v76[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v17);
  id v19 = &v76[-v18];
  uint64_t v84 = v9;
  uint64_t v85 = v7;
  uint64_t v86 = v21;
  uint64_t v87 = v20;
  if (a1)
  {
    sub_24162EF48();
    uint64_t v22 = a3;
    id v23 = sub_24162EF98();
    os_log_type_t v24 = sub_2416322E8();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v79 = v6;
    if (v25)
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      uint64_t aBlock = v78;
      *(_DWORD *)uint64_t v26 = 136446722;
      uint64_t ObjectType = swift_getObjectType();
      sub_2414C7A8C();
      uint64_t v27 = sub_241631D48();
      uint64_t ObjectType = sub_2411B6898(v27, v28, &aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      uint64_t ObjectType = *(void *)&v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_factorSample];
      id v29 = (void *)ObjectType;
      sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
      id v30 = v29;
      uint64_t v31 = sub_241631D78();
      uint64_t ObjectType = sub_2411B6898(v31, v32, &aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 22) = 2082;
      (*(void (**)(unsigned char *, char *, uint64_t))(v80 + 16))(v13, &v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_startDate], v11);
      uint64_t v33 = sub_241631D78();
      uint64_t ObjectType = sub_2411B6898(v33, v34, &aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v23, v24, "[%{public}s]: Deleted factor %{public}s with startDate %{public}s", (uint8_t *)v26, 0x20u);
      uint64_t v35 = v78;
      swift_arrayDestroy();
      MEMORY[0x245621640](v35, -1, -1);
      MEMORY[0x245621640](v26, -1, -1);
    }
    else
    {
    }
    (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v16, v87);
    id v58 = v82;
    uint64_t v57 = v83;
    uint64_t v59 = v81;
    unint64_t v60 = *(void **)&v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_nanoSyncControl];
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = v22;
    uint64_t v93 = sub_2414C7AC8;
    uint64_t v94 = v61;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v90 = 1107296256;
    uint64_t v91 = sub_241328D44;
    uint64_t v92 = &unk_26F574628;
    uint64_t v62 = _Block_copy(&aBlock);
    unint64_t v63 = v22;
    swift_release();
    objc_msgSend(v60, sel_forceNanoSyncWithOptions_completion_, 0, v62);
    _Block_release(v62);
    sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
    os_log_t v64 = (void *)sub_2416325A8();
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = v63;
    uint64_t v93 = sub_2414C7AF4;
    uint64_t v94 = v65;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v90 = 1107296256;
    uint64_t v91 = sub_2411987F4;
    uint64_t v92 = &unk_26F574678;
    uint64_t v66 = _Block_copy(&aBlock);
    uint64_t v67 = v63;
    swift_release();
    sub_241631498();
    uint64_t aBlock = MEMORY[0x263F8EE78];
    sub_2414C79E0((unint64_t *)&qword_26B013080, MEMORY[0x263F8F030]);
    sub_2414C7A28(0, (unint64_t *)&qword_26B013090, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_2411ACDF0();
    uint64_t v68 = v79;
    sub_241632D08();
    MEMORY[0x24561FA80](0, v59, v58, v66);
    _Block_release(v66);

    (*(void (**)(unsigned char *, uint64_t))(v85 + 8))(v58, v68);
    (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v59, v84);
  }
  else
  {
    sub_24162EF48();
    id v36 = a3;
    id v37 = a2;
    uint64_t v38 = (char *)v36;
    id v39 = a2;
    uint64_t v40 = sub_24162EF98();
    os_log_type_t v41 = sub_2416322C8();
    int v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v43 = swift_slowAlloc();
      int v77 = v42;
      uint64_t v44 = v43;
      uint64_t v78 = swift_slowAlloc();
      uint64_t aBlock = v78;
      *(_DWORD *)uint64_t v44 = 136446978;
      uint64_t ObjectType = swift_getObjectType();
      sub_2414C7A8C();
      uint64_t v45 = sub_241631D48();
      uint64_t v79 = v6;
      uint64_t ObjectType = sub_2411B6898(v45, v46, &aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2082;
      uint64_t ObjectType = *(void *)&v38[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_factorSample];
      id v47 = (void *)ObjectType;
      sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
      id v48 = v47;
      uint64_t v49 = sub_241631D78();
      uint64_t ObjectType = sub_2411B6898(v49, v50, &aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 22) = 2082;
      (*(void (**)(unsigned char *, char *, uint64_t))(v80 + 16))(v13, &v38[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_startDate], v11);
      uint64_t v51 = sub_241631D78();
      uint64_t ObjectType = sub_2411B6898(v51, v52, &aBlock);
      sub_241632C28();

      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 32) = 2082;
      uint64_t ObjectType = (uint64_t)a2;
      id v53 = a2;
      sub_2411BF934(0, (unint64_t *)&qword_26B010860, (unint64_t *)&qword_26B012410);
      uint64_t v54 = sub_241631D48();
      uint64_t ObjectType = sub_2411B6898(v54, v55, &aBlock);
      uint64_t v6 = v79;
      sub_241632C28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24118E000, v40, (os_log_type_t)v77, "[%{public}s]: Failed to delete factor %{public}s with startDate %{public}s with error: %{public}s", (uint8_t *)v44, 0x2Au);
      uint64_t v56 = v78;
      swift_arrayDestroy();
      MEMORY[0x245621640](v56, -1, -1);
      MEMORY[0x245621640](v44, -1, -1);
    }
    else
    {
    }
    (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v19, v87);
    if (a2)
    {
      uint64_t v69 = (void *)sub_24162B338();
      if (objc_msgSend(v69, sel_hk_isHealthKitErrorWithCode_, 3))
      {
        sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
        unint64_t v70 = (void *)sub_2416325A8();
        uint64_t v71 = swift_allocObject();
        *(void *)(v71 + 16) = v38;
        uint64_t v93 = sub_2414C7C7C;
        uint64_t v94 = v71;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v90 = 1107296256;
        uint64_t v91 = sub_2411987F4;
        uint64_t v92 = &unk_26F5745D8;
        uint64_t v72 = _Block_copy(&aBlock);
        int v73 = v38;
        swift_release();
        os_log_t v74 = v81;
        sub_241631498();
        uint64_t aBlock = MEMORY[0x263F8EE78];
        sub_2414C79E0((unint64_t *)&qword_26B013080, MEMORY[0x263F8F030]);
        sub_2414C7A28(0, (unint64_t *)&qword_26B013090, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
        sub_2411ACDF0();
        uint64_t v75 = v82;
        sub_241632D08();
        MEMORY[0x24561FA80](0, v74, v75, v72);
        _Block_release(v72);

        (*(void (**)(unsigned char *, uint64_t))(v85 + 8))(v75, v6);
        (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v74, v84);
      }
      else
      {
      }
    }
  }
}

uint64_t sub_2414C6984(char a1, uint64_t a2, void *a3, const char *a4, const char *a5)
{
  uint64_t v9 = sub_24162EFA8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v35 - v14;
  if (a1)
  {
    sub_24162EF48();
    id v16 = a3;
    uint64_t v17 = sub_24162EF98();
    os_log_type_t v18 = sub_2416322E8();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v35 = a4;
      id v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v36 = v9;
      uint64_t v21 = v20;
      uint64_t v38 = v20;
      *(_DWORD *)id v19 = 136446210;
      uint64_t ObjectType = swift_getObjectType();
      sub_2414C7A8C();
      uint64_t v22 = sub_241631D48();
      uint64_t ObjectType = sub_2411B6898(v22, v23, &v38);
      sub_241632C28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v17, v18, v35, v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v21, -1, -1);
      MEMORY[0x245621640](v19, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v36);
    }

    uint64_t v33 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    unint64_t v34 = v15;
  }
  else
  {
    sub_24162EF48();
    id v25 = a3;
    uint64_t v26 = sub_24162EF98();
    os_log_type_t v27 = sub_2416322C8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v35 = a5;
      unint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v36 = v9;
      uint64_t v30 = v29;
      uint64_t v38 = v29;
      *(_DWORD *)unint64_t v28 = 136446210;
      uint64_t ObjectType = swift_getObjectType();
      sub_2414C7A8C();
      uint64_t v31 = sub_241631D48();
      uint64_t ObjectType = sub_2411B6898(v31, v32, &v38);
      sub_241632C28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v26, v27, v35, v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v30, -1, -1);
      MEMORY[0x245621640](v28, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v36);
    }

    uint64_t v33 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    unint64_t v34 = v12;
  }
  return v33(v34, v9);
}

void sub_2414C6D2C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_presentingViewController);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void sub_2414C6D98()
{
  qword_268D01318 = (uint64_t)&unk_26F566810;
}

void sub_2414C6DAC(void *a1@<X8>)
{
  *a1 = &unk_26F567728;
}

void sub_2414C6DBC(void *a1@<X8>)
{
  *a1 = &unk_26F567750;
}

id sub_2414C6E30()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EditCycleFactorTableViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2414C6F98()
{
  return type metadata accessor for EditCycleFactorTableViewController();
}

uint64_t type metadata accessor for EditCycleFactorTableViewController()
{
  uint64_t result = qword_268D01378;
  if (!qword_268D01378) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2414C6FEC()
{
  uint64_t result = sub_24162B718();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EditCycleFactorTableViewController.EditCycleFactorTableViewRow(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2414C7188);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditCycleFactorTableViewController.EditCycleFactorTableViewRow()
{
  return &type metadata for EditCycleFactorTableViewController.EditCycleFactorTableViewRow;
}

unsigned char *storeEnumTagSinglePayload for EditCycleFactorTableViewController.EditCycleFactorTableViewSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2414C728CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditCycleFactorTableViewController.EditCycleFactorTableViewSection()
{
  return &type metadata for EditCycleFactorTableViewController.EditCycleFactorTableViewSection;
}

uint64_t sub_2414C72C4()
{
  return sub_2414C737C(&qword_268D01388, &qword_268D01390, (uint64_t)&type metadata for EditCycleFactorTableViewController.EditCycleFactorTableViewSection);
}

unint64_t sub_2414C72F8()
{
  unint64_t result = qword_268D01398;
  if (!qword_268D01398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01398);
  }
  return result;
}

uint64_t sub_2414C734C()
{
  return sub_2414C737C(&qword_268D013A0, &qword_268D013A8, (uint64_t)&type metadata for EditCycleFactorTableViewController.EditCycleFactorTableViewRow);
}

uint64_t sub_2414C737C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2412AD3EC(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2414C73E4()
{
  unint64_t result = qword_268D013B0;
  if (!qword_268D013B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D013B0);
  }
  return result;
}

id sub_2414C7440()
{
  unint64_t v1 = v0;
  sub_2414C7A28(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  unsigned int v4 = (char *)&v26 - v3;
  uint64_t v5 = sub_24162BB18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162B718();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162B5E8();
  sub_2414C0894((uint64_t)v12);
  sub_2414C30F4(1u, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return (id)sub_2414C7B58((uint64_t)v4, (uint64_t)&qword_26B011D00, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_2414C7A28);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  id result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v14 = result;
  uint64_t v15 = (void *)sub_24162BA88();
  id v16 = objc_msgSend(v14, sel_cellForRowAtIndexPath_, v15);

  if (v16)
  {
    type metadata accessor for EndDateTableViewCell();
    uint64_t v17 = swift_dynamicCastClass();
    if (!v17)
    {

      return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    os_log_type_t v18 = (void *)v17;
    id v19 = v16;
    id result = objc_msgSend(v18, sel_detailTextLabel);
    if (result)
    {
      uint64_t v20 = result;

      id v26 = v19;
      uint64_t v21 = &v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_endDate];
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v21, v9);
      sub_2414B0D14();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v22 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_setText_, v22);

      objc_msgSend(v18, sel_setAccessoryView_, 0);
      id v23 = v26;
      id result = objc_msgSend(v18, sel_detailTextLabel);
      if (result)
      {
        os_log_type_t v24 = result;

        id v25 = objc_msgSend(self, sel_labelColor);
        objc_msgSend(v24, sel_setTextColor_, v25);

        sub_2414C3944(2u);
        return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
LABEL_14:
      __break(1u);
      return result;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_2414C78A0()
{
  v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_launchSource] = 2;
  *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController____lazy_storage___doneBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController____lazy_storage___cancelBarButtonItem] = 0;
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_sections;
  if (qword_268CF97A0 != -1) {
    swift_once();
  }
  *(void *)&v0[v1] = qword_268D01318;
  *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_dateRows] = &unk_26F5676D8;
  *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34EditCycleFactorTableViewController_deleteRows] = &unk_26F567700;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();

  sub_241633038();
  __break(1u);
}

uint64_t sub_2414C7998()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2414C79D0(uint64_t a1)
{
  sub_2414C5C44(a1, *(char **)(v1 + 16));
}

void sub_2414C79D8(char a1, void *a2)
{
  sub_2414C5D40(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_2414C79E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2414C7A28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2414C7A8C()
{
  unint64_t result = qword_268D013B8;
  if (!qword_268D013B8)
  {
    type metadata accessor for EditCycleFactorTableViewController();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D013B8);
  }
  return result;
}

uint64_t sub_2414C7AC8(char a1, uint64_t a2)
{
  return sub_2414C6984(a1, a2, *(void **)(v2 + 16), "[%{public}s] Forcing a nano sync after deleting a sample", "[%{public}s] Error forcing a nano sync after deleting a sample");
}

void sub_2414C7AF4()
{
  sub_2414C6D2C(*(void **)(v0 + 16));
}

uint64_t sub_2414C7B10()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2414C7B50(char a1, void *a2)
{
  sub_2414C46DC(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_2414C7B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_2414C7BB8(char a1, uint64_t a2)
{
  return sub_2414C6984(a1, a2, *(void **)(v2 + 16), "[%{public}s] Forcing a nano sync after saving a sample and deleting an old sample", "[%{public}s] Error forcing a nano sync after saving a new sample and deleting an old sample");
}

uint64_t sub_2414C7BE4()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2414C7C24()
{
  sub_2414C3ED0(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

id sub_2414C7C30(void *a1)
{
  return sub_2414C40A0(a1, *(char **)(v1 + 16));
}

uint64_t sub_2414C7C94(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = *a2;
  switch(v4)
  {
    case 0:
      return !v5;
    case 1:
      return v5 == 1;
    case 2:
      return v5 == 2;
  }
  if (v5 < 3) {
    return 0;
  }
  uint64_t v7 = a2[1];
  uint64_t v8 = a1[1];
  if ((sub_24149B574(v4, v5) & 1) == 0) {
    return 0;
  }

  return sub_24149B574(v8, v7);
}

id sub_2414C7D38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = sub_24162B7E8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_241631CA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&ObjectType - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&ObjectType - v12;
  uint64_t v14 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSource;
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSource] = 0;
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSourceAdaptor] = 0;
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_nextButton] = 0;
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_subscriptions] = MEMORY[0x263F8EE88];
  *(void *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_viewModel] = a1;
  *(void *)&v3[v14] = a2;
  uint64_t v15 = v3;
  swift_retain();
  swift_retain();
  swift_release();
  id v16 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v16, sel_bounds);
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;

  id v25 = **((id **)&unk_2650E7F98 + (char)sub_24140B200(v18, v20, v22, v24));
  id v26 = &v15[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_scaleFactorConfiguration];
  *((void *)v26 + 3) = &type metadata for ScaleFactorConfiguration;
  *((void *)v26 + 4) = &off_26F571FE0;
  *(void *)id v26 = v25;

  sub_241631C38();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v27 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  unint64_t v28 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  sub_2412F3990();
  uint64_t v29 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  v33.receiver = v15;
  v33.super_class = ObjectType;
  id v30 = objc_msgSendSuper2(&v33, sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v28, v29, 0, 1);

  swift_release();
  swift_release();
  return v30;
}

id sub_2414C80F0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v4 = result;
    id v5 = objc_msgSend(result, sel_window);

    if (v5)
    {
      if (*(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSourceAdaptor])
      {
        swift_retain();
        sub_24126EA14();
        swift_release();
      }
    }
    v6.receiver = v1;
    v6.super_class = ObjectType;
    return objc_msgSendSuper2(&v6, sel_viewWillLayoutSubviews);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2414C81F4()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_2414CAEFC(0, (unint64_t *)&unk_26B012FA0, MEMORY[0x263F8F110]);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v41 - v4;
  objc_super v6 = (uint64_t (*)(void, uint64_t))MEMORY[0x263EFDE48];
  sub_2414CB0C8(0, &qword_26B0116E8, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE48]);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v41 - v8;
  sub_2414CAF50();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414CB0C8(0, (unint64_t *)&unk_268D01450, (uint64_t)&type metadata for DeviationsFactorsConfirmationViewController.State, v6);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  *(void *)&double v16 = MEMORY[0x270FA5388](v13).n128_u64[0];
  CGFloat v18 = (char *)&v41 - v17;
  v47.receiver = v1;
  v47.super_class = ObjectType;
  objc_msgSendSuper2(&v47, sel_viewDidLoad, v16);
  sub_2414C88F0();
  id v19 = objc_msgSend(v1, sel_navigationItem);
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v1, sel_cancel);
  objc_msgSend(v19, sel_setRightBarButtonItem_, v20);

  swift_beginAccess();
  sub_2414CB0C8(0, &qword_268CFCD98, (uint64_t)&type metadata for DeviationsFactorsConfirmationViewController.State, MEMORY[0x263EFDE58]);
  sub_24162FC18();
  swift_endAccess();
  sub_2414CB064((unint64_t *)&unk_268D01460, (unint64_t *)&unk_268D01450, (uint64_t)&type metadata for DeviationsFactorsConfirmationViewController.State);
  uint64_t v21 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  sub_2414C8B34(v21);
  swift_release();
  if (!*(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSource])
  {
    __break(1u);
    goto LABEL_6;
  }
  swift_beginAccess();
  uint64_t v22 = MEMORY[0x263F8D4F8];
  sub_2414CB0C8(0, (unint64_t *)&qword_26B0116F0, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE58]);
  swift_retain();
  sub_24162FC18();
  swift_endAccess();
  swift_release();
  sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
  id v46 = (id)sub_2416325A8();
  uint64_t v23 = sub_241632598();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v5, 1, 1, v23);
  sub_2414CB064((unint64_t *)&qword_26B0116E0, &qword_26B0116E8, v22);
  sub_2411A01FC((unint64_t *)&qword_26B012FB0, (unint64_t *)&qword_26B0130B0);
  uint64_t v24 = v43;
  sub_24162FDA8();
  sub_2414CB3B0((uint64_t)v5, (unint64_t *)&unk_26B012FA0, MEMORY[0x263F8F110]);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v24);
  id v25 = *(void **)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_nextButton];
  *(void *)(swift_allocObject() + 16) = v25;
  sub_2414CB16C(&qword_268D01470, (void (*)(uint64_t))sub_2414CAF50);
  id v26 = v25;
  uint64_t v27 = v45;
  sub_24162FDD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v27);
  swift_beginAccess();
  sub_24162FA78();
  swift_endAccess();
  swift_release();
  id v28 = objc_msgSend(v1, sel_tableView);
  if (!v28)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v29 = v28;
  id v30 = objc_msgSend(v1, sel_view);
  if (v30)
  {
    uint64_t v31 = v30;
    objc_msgSend(v30, sel_frame);
    CGFloat v33 = v32;
    CGFloat v35 = v34;
    CGFloat v37 = v36;
    CGFloat v39 = v38;

    v48.origin.x = v33;
    v48.origin.y = v35;
    v48.size.width = v37;
    v48.size.height = v39;
    id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, CGRectGetWidth(v48), 27.0);
    objc_msgSend(v29, sel_setTableHeaderView_, v40);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_2414C88F0()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C78]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, sel_setTableView_, v2);

  id v3 = objc_msgSend(v1, sel_tableView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v4 = v3;
  id v5 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  id v6 = objc_msgSend(v1, sel_tableView);
  if (!v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v7 = v6;
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  uint64_t v8 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSource;
  if (!*(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSource])
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  swift_retain();
  id v9 = objc_msgSend(v1, sel_tableView);
  if (!v9)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v10 = v9;
  sub_2412CF704(v9);
  swift_release();

  id v11 = objc_msgSend(v1, sel_tableView);
  if (!v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v12 = v11;
  objc_msgSend(v11, sel_setDelegate_, v1);

  id v13 = objc_msgSend(v1, sel_tableView);
  if (!v13)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v14 = *(void *)&v1[v8];
  if (!v14)
  {
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v15 = v13;
  type metadata accessor for OnboardingOngoingCycleFactorsDiffableTableViewAdaptor();
  swift_allocObject();
  swift_retain();
  double v16 = sub_24126BBBC(0, 0, 0, 0, v15, v14);
  uint64_t v17 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSourceAdaptor;
  *(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSourceAdaptor] = v16;
  swift_release();
  uint64_t v18 = *(void *)&v1[v17];
  if (v18)
  {
    *(void *)(v18 + 72) = &off_26F574870;
    swift_unknownObjectWeakAssign();
  }

  sub_2414C9A14();
}

uint64_t sub_2414C8B34(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = (void (*)(uint64_t))MEMORY[0x263F07D50];
  sub_2414CAEFC(0, &qword_268D01478, MEMORY[0x263F07D50]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v20 - v3;
  sub_2414CB1B4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414CB31C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  uint64_t v23 = v11;
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  id v26 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v14 = sub_241632BB8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_2414CB2B4();
  sub_2411B9D00(0, &qword_268D01490);
  sub_2414CB16C(&qword_268D01498, (void (*)(uint64_t))sub_2414CB2B4);
  sub_2411A01FC(&qword_268D014A0, &qword_268D01490);
  sub_24162FDA8();
  sub_2414CB3B0((uint64_t)v4, &qword_268D01478, v21);

  sub_2414CB16C(&qword_268D014B0, (void (*)(uint64_t))sub_2414CB1B4);
  sub_2414CB40C();
  sub_24162FDC8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = ObjectType;
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v17;
  sub_2414CB16C((unint64_t *)&unk_268D014C0, (void (*)(uint64_t))sub_2414CB31C);
  uint64_t v18 = v22;
  sub_24162FDD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v18);
  swift_beginAccess();
  sub_24162FA78();
  swift_endAccess();
  return swift_release();
}

void sub_2414C9090(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_24162EFA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  uint64_t v10 = a2 + 16;
  sub_24162EF48();
  sub_2412F4D40(v8);
  sub_2412F4D40(v8);
  uint64_t v11 = sub_24162EF98();
  os_log_type_t v12 = sub_2416322E8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v26 = v5;
    uint64_t v14 = v13;
    uint64_t v24 = swift_slowAlloc();
    v29[0] = v24;
    *(_DWORD *)uint64_t v14 = 136446466;
    uint64_t v25 = v4;
    uint64_t v15 = sub_2416333E8();
    uint64_t v17 = sub_2411B6898(v15, v16, v29);
    uint64_t v27 = v10;
    uint64_t v28 = v17;
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    sub_2412F4D40(v8);
    uint64_t v18 = sub_2414CAA68(v8, v9);
    unint64_t v20 = v19;
    sub_2412F4CFC(v8);
    uint64_t v28 = sub_2411B6898(v18, v20, v29);
    uint64_t v10 = v27;
    sub_241632C28();
    swift_bridgeObjectRelease();
    sub_2412F4CFC(v8);
    sub_2412F4CFC(v8);
    _os_log_impl(&dword_24118E000, v11, v12, "[%{public}s] State updated to %s", (uint8_t *)v14, 0x16u);
    uint64_t v21 = v24;
    swift_arrayDestroy();
    MEMORY[0x245621640](v21, -1, -1);
    MEMORY[0x245621640](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v25);
  }
  else
  {
    sub_2412F4CFC(v8);
    sub_2412F4CFC(v8);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_beginAccess();
  uint64_t v22 = MEMORY[0x245621790](v10);
  if (v22)
  {
    uint64_t v23 = (void *)v22;
    if (v8 > 2
      && MEMORY[0x245621790](v22 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_delegate))
    {
      sub_241222634(v8, v9);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_2414C93C4()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_24162EFA8();
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v0
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSource);
  if (v7)
  {
    uint64_t v27 = ObjectType;
    uint64_t v28 = v4;
    uint64_t v30 = MEMORY[0x263F8EE78];
    swift_retain();
    uint64_t v8 = sub_24162DB58();
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      v24[0] = v7;
      v24[1] = v1;
      uint64_t v25 = v6;
      uint64_t v26 = v3;
      uint64_t v10 = 32;
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
      do
      {
        uint64_t v13 = *(void **)(v8 + v10);
        if (object_getClass(v13) == (Class)_TtC24MenstrualCyclesAppPlugin20ExpandableDataSource
          && v13 != 0)
        {
          type metadata accessor for CycleFactorSectionDataSource();
          if (swift_dynamicCastClass())
          {
            swift_retain_n();
            swift_unknownObjectRetain();
            unint64_t v12 = sub_241394D4C(v11);
            swift_release();
          }
          else
          {
            swift_unknownObjectRetain();
            unint64_t v12 = (unint64_t)v11;
          }
          sub_241496BDC(v12);
          swift_unknownObjectRelease();
          swift_release();
        }
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v15 = v30;
      uint64_t v6 = v25;
      uint64_t v3 = v26;
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v15 = MEMORY[0x263F8EE78];
    }
    sub_2412F2C4C(v15);
    sub_24162EF48();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t v16 = sub_24162EF98();
    os_log_type_t v17 = sub_2416322E8();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v30 = v19;
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v20 = sub_2416333E8();
      uint64_t v29 = sub_2411B6898(v20, v21, &v30);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v29 = v15;
      sub_2412229F4();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v22 = sub_241631D78();
      uint64_t v29 = sub_2411B6898(v22, v23, &v30);
      sub_241632C28();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v16, v17, "[%{public}s] Next button tapped, submitting cycle factors: %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245621640](v19, -1, -1);
      MEMORY[0x245621640](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
  }
  else
  {
    __break(1u);
  }
}

id sub_2414C97C8()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  uint64_t v6 = sub_24162EF98();
  os_log_type_t v7 = sub_2416322E8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    unint64_t v16 = v1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_2416333E8();
    uint64_t v17 = sub_2411B6898(v11, v12, &v18);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v6, v7, "[%{public}s] Exiting confirmation flow", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v10, -1, -1);
    uint64_t v13 = v9;
    uint64_t v1 = v16;
    MEMORY[0x245621640](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_2414C9A14()
{
  uint64_t v1 = sub_24162B7E8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_241631CA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v15[-v7];
  id v9 = objc_msgSend(self, sel_boldButton);
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v5, v8, v2);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v10 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
  uint64_t v11 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setTitle_forState_, v11, 0);

  objc_msgSend(v9, sel_addTarget_action_forControlEvents_, v0, sel_nextButtonTapped, 64);
  unint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_nextButton];
  *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_nextButton] = v9;
  id v13 = v9;

  id v14 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v14, sel_addButton_, v13);
}

uint64_t type metadata accessor for DeviationsFactorsConfirmationViewController()
{
  return self;
}

id sub_2414C9E58(uint64_t a1, uint64_t a2)
{
  return sub_2414CABC8(a2);
}

uint64_t sub_2414C9E60(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_2414CAEFC(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v38 - v7;
  sub_2414CAEFC(0, &qword_268CFC6B0, (void (*)(uint64_t))sub_2412CF890);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (void *)((char *)v38 - v10);
  uint64_t v12 = sub_24162BB18();
  uint64_t v43 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v42 = (uint64_t)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = (void *)sub_24162BA88();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v14, 0);

  uint64_t v15 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSource;
  if (!*(void *)(v3
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSource))
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    JUMPOUT(0x2414CA46CLL);
  }
  type metadata accessor for DeviationsFactorsCompoundDataSource();
  swift_retain();
  sub_24162D168();
  swift_release();
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  sub_2411BF880(0, (unint64_t *)&unk_268D01430);
  swift_dynamicCast();
  uint64_t v16 = v49;
  uint64_t v17 = v50;
  sub_2411B6854(v48, v49);
  switch((*(unsigned __int8 (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17))
  {
    case 1u:
      if (!*(void *)(v3 + v15)) {
        goto LABEL_34;
      }
      sub_2411A3DF4((uint64_t)v48, (uint64_t)v47);
      swift_retain();
      swift_dynamicCast();
      sub_2412CEAF8(v46, a2);
      swift_bridgeObjectRelease();
      break;
    case 2u:
    case 3u:
    case 5u:
      uint64_t v18 = *(void *)(v3 + v15);
      if (!v18) {
        goto LABEL_32;
      }
      swift_retain();
      sub_2412CDB70(a2, v11);
      sub_2412CF890();
      uint64_t v20 = v19;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v11, 1, v19) == 1)
      {
        sub_2414CB3B0((uint64_t)v11, &qword_268CFC6B0, (void (*)(uint64_t))sub_2412CF890);
      }
      else
      {
        uint64_t v41 = v8;
        uint64_t v45 = *v11;
        v38[1] = v11[1];
        unint64_t v21 = (char *)v11 + *(int *)(v20 + 64);
        uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 32);
        uint64_t v40 = v12;
        v22(v42, v21, v12);
        v38[2] = v18;
        uint64_t v39 = sub_24162DB58();
        uint64_t v23 = *(void *)(v39 + 16);
        if (v23)
        {
          uint64_t v44 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20ExpandableDataSource_wrappedSource;
          uint64_t v24 = (id *)(v39 + 32);
          v38[0] = v43 + 56;
          do
          {
            id v25 = *v24;
            if (object_getClass(*v24) == (Class)_TtC24MenstrualCyclesAppPlugin20ExpandableDataSource
              && v25 != 0)
            {
              swift_unknownObjectRetain();
              swift_retain();
              uint64_t v27 = sub_24162D6C8();
              uint64_t v29 = v28;
              swift_release();
              swift_retain();
              uint64_t v30 = sub_24162D6C8();
              uint64_t v32 = v31;
              swift_release();
              if (v27 == v30 && v29 == v32)
              {
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease_n();
              }
              else
              {
                char v34 = sub_241633218();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v34)
                {
                  swift_unknownObjectRelease();
                }
                else
                {
                  type metadata accessor for CycleFactorSectionDataSource();
                  if (swift_dynamicCastClass())
                  {
                    swift_retain();
                    swift_retain();
                    uint64_t v35 = (uint64_t)v41;
                    sub_2415E14A8((uint64_t)v41);
                    swift_unknownObjectRelease();
                    swift_release_n();
                  }
                  else
                  {
                    swift_unknownObjectRelease();
                    uint64_t v35 = (uint64_t)v41;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v38[0])(v41, 1, 1, v40);
                  }
                  sub_2414CB3B0(v35, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
                }
              }
            }
            v24 += 2;
            --v23;
          }
          while (v23);
        }
        swift_bridgeObjectRelease();
        uint64_t v36 = v42;
        sub_2415E1CE8(v42);
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v36, v40);
      }
      break;
    case 7u:
      if (!*(void *)(v3 + v15)) {
        goto LABEL_33;
      }
      swift_retain();
      sub_2412CE194(a2);
      break;
    default:
      return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v48);
  }
  swift_release();
  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v48);
}

uint64_t sub_2414CA690(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24162B7E8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_241631CA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v28 - v12;
  uint64_t v14 = 0;
  if (!a2)
  {
    uint64_t v16 = (void *)sub_241631CC8();
    id v17 = objc_msgSend(a1, sel_dequeueReusableHeaderFooterViewWithIdentifier_, v16);

    if (v17)
    {
      type metadata accessor for MenstrualCyclesHeaderFooterView();
      uint64_t v18 = swift_dynamicCastClass();
      uint64_t v14 = v18;
      if (v18)
      {
        id v19 = *(id *)(v18 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31MenstrualCyclesHeaderFooterView_label);
        sub_241631C38();
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
        if (qword_26B0131F0 != -1) {
          swift_once();
        }
        id v20 = (id)qword_26B0181A0;
        sub_24162B7D8();
        uint64_t v21 = sub_241631D38();
        uint64_t v23 = v22;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        v28[0] = v21;
        v28[1] = v23;
        sub_2411D662C();
        sub_241632C88();
        swift_bridgeObjectRelease();
        uint64_t v24 = (void *)sub_241631CC8();
        swift_bridgeObjectRelease();
        objc_msgSend(v19, sel_setText_, v24);

        sub_2411A3DF4(v3+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_scaleFactorConfiguration, (uint64_t)v28);
        uint64_t v25 = v29;
        uint64_t v26 = v30;
        uint64_t v27 = sub_2411B6854(v28, v29);
        sub_2413139DC((uint64_t)v27, v14, v25, v26);
        _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v28);
      }
      else
      {
      }
    }
    else
    {
      return 0;
    }
  }
  return v14;
}

ValueMetadata *type metadata accessor for DeviationsFactorsConfirmationViewController.State()
{
  return &type metadata for DeviationsFactorsConfirmationViewController.State;
}

uint64_t sub_2414CAA68(uint64_t a1, uint64_t a2)
{
  switch(a1)
  {
    case 0:
      return 0x6C616974696E69;
    case 1:
      return 0x7A796C616E616572;
    case 2:
      return 0x726F727265;
  }
  sub_241632E78();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
  MEMORY[0x24561F400](a1, v5);
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  MEMORY[0x24561F400](a2, v5);
  sub_241631E08();
  swift_bridgeObjectRelease();
  return 0xD000000000000017;
}

uint64_t sub_2414CABC0()
{
  return sub_2414CAA68(*v0, v0[1]);
}

id sub_2414CABC8(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_2414CAEFC(0, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t v7 = sub_24162BB18();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = MEMORY[0x270FA5388](v7).n128_u64[0];
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(v2, sel_tableView, v9);
  if (!result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v13 = result;
  objc_msgSend(result, sel_layoutIfNeeded);

  sub_24126FD4C(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return (id)sub_2414CB3B0((uint64_t)v6, (unint64_t *)&qword_26B011D00, MEMORY[0x263F07A30]);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  id result = objc_msgSend(v2, sel_tableView);
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v14 = result;
  uint64_t v15 = (void *)sub_24162BA88();
  id v16 = objc_msgSend(v14, sel_cellForRowAtIndexPath_, v15);

  if (v16)
  {
    id result = objc_msgSend(v2, sel_tableView);
    if (result)
    {
      id v17 = result;
      uint64_t v18 = (void *)sub_24162BA88();
      objc_msgSend(v17, sel_scrollToRowAtIndexPath_atScrollPosition_animated_, v18, 2, 1);

      return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
LABEL_12:
    __break(1u);
    return result;
  }
  return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

char *sub_2414CAE48(char *result)
{
  uint64_t v2 = v1;
  if (*(void *)(v1
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_dataSource))
  {
    uint64_t v3 = (uint64_t)result;
    swift_retain();
    uint64_t v4 = sub_2412CE434(v3);
    uint64_t v6 = v5;
    swift_release();
    if (!v6) {
      return 0;
    }
    sub_2411A3DF4(v2+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin43DeviationsFactorsConfirmationViewController_scaleFactorConfiguration, (uint64_t)v8);
    uint64_t v7 = sub_241313AC0(v4, v6, v8);
    swift_bridgeObjectRelease();
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v8);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2414CAEFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241632C18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2414CAF50()
{
  if (!qword_268D01440)
  {
    uint64_t v0 = MEMORY[0x263F8D4F8];
    sub_2414CB0C8(255, &qword_26B0116E8, MEMORY[0x263F8D4F8], MEMORY[0x263EFDE48]);
    sub_2411B9D00(255, (unint64_t *)&qword_26B0130B0);
    sub_2414CB064((unint64_t *)&qword_26B0116E0, &qword_26B0116E8, v0);
    sub_2411A01FC((unint64_t *)&qword_26B012FB0, (unint64_t *)&qword_26B0130B0);
    unint64_t v1 = sub_24162FA38();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D01440);
    }
  }
}

uint64_t sub_2414CB064(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2414CB0C8(255, a2, a3, MEMORY[0x263EFDE48]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2414CB0C8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2414CB114()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_2414CB14C(unsigned __int8 *a1)
{
  id result = *(id *)(v1 + 16);
  if (result) {
    return objc_msgSend(result, sel_setEnabled_, *a1);
  }
  return result;
}

uint64_t sub_2414CB16C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2414CB1B4()
{
  if (!qword_268D01480)
  {
    sub_2414CB2B4();
    sub_2411B9D00(255, &qword_268D01490);
    sub_2414CB16C(&qword_268D01498, (void (*)(uint64_t))sub_2414CB2B4);
    sub_2411A01FC(&qword_268D014A0, &qword_268D01490);
    unint64_t v0 = sub_24162FA38();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01480);
    }
  }
}

void sub_2414CB2B4()
{
  if (!qword_268D01488)
  {
    unint64_t v0 = sub_24162FA68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01488);
    }
  }
}

void sub_2414CB31C()
{
  if (!qword_268D014A8)
  {
    sub_2414CB1B4();
    sub_2414CB16C(&qword_268D014B0, (void (*)(uint64_t))sub_2414CB1B4);
    unint64_t v0 = sub_24162F938();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D014A8);
    }
  }
}

uint64_t sub_2414CB3B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2414CAEFC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_2414CB40C()
{
  unint64_t result = qword_268D014B8;
  if (!qword_268D014B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D014B8);
  }
  return result;
}

uint64_t sub_2414CB460()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2414CB498()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2414CB4D0(unint64_t *a1)
{
  sub_2414C9090(a1, *(void *)(v1 + 16));
}

uint64_t sub_2414CB4D8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_2414CC330(0, &qword_268D014E0, (uint64_t (*)(uint64_t))sub_2414CC288, MEMORY[0x263F09010]);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2414CB5C8, 0, 0);
}

uint64_t sub_2414CB5C8()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_2414CC330(0, (unint64_t *)&qword_268CFEB20, (uint64_t (*)(uint64_t))sub_2414CC2C8, MEMORY[0x263F8E0F8]);
  sub_2414CC2C8(0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241637EE0;
  sub_2414CC288();
  sub_241631848();
  sub_2414CC330(0, &qword_268D014E8, (uint64_t (*)(uint64_t))sub_2414CC2FC, v1);
  sub_2414CC2FC(0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241637EE0;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x245618650](KeyPath, 1);
  sub_2416318C8();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_2414CB834;
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  return MEMORY[0x270EF3200](v5, v4);
}

uint64_t sub_2414CB834(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_2414CBA68;
  }
  else {
    uint64_t v4 = sub_2414CB948;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

void sub_2414CB948()
{
  unint64_t v1 = v0[8];
  if (v1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v3 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    id v2 = 0;
    goto LABEL_9;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v2 = (id)MEMORY[0x245620370](0, v0[8]);
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v2 = *(id *)(v0[8] + 32);
  }
  swift_bridgeObjectRelease();
LABEL_9:
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  uint64_t v4 = (void (*)(id))v0[1];
  v4(v2);
}

uint64_t sub_2414CBA68()
{
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2414CBAE8()
{
  swift_getObjectType();
  uint64_t v1 = sub_24162EFA8();
  uint64_t v35 = *(void *)(v1 - 8);
  uint64_t v36 = v1;
  MEMORY[0x270FA5388](v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v35 - v3;
  sub_2414CC330(0, &qword_268D014D0, MEMORY[0x263F06A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = sub_24162B2A8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(self, sel_healthAppDefaultsDomainWithHealthStore_, v0);
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
  id v37 = v12;
  sub_2416323D8();
  swift_bridgeObjectRelease();
  if (*((void *)&v40 + 1))
  {
    sub_2414AF16C();
    if (swift_dynamicCast())
    {
      uint64_t v13 = v38;
      uint64_t v14 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
      if (*(void *)(v13 + 16))
      {
        unint64_t v16 = sub_2411B8E04(v14, v15);
        id v17 = v37;
        uint64_t v18 = v9;
        if (v19)
        {
          sub_2411B69BC(*(void *)(v13 + 56) + 32 * v16, (uint64_t)&v39);
        }
        else
        {
          long long v39 = 0u;
          long long v40 = 0u;
        }
      }
      else
      {
        long long v39 = 0u;
        long long v40 = 0u;
        id v17 = v37;
        uint64_t v18 = v9;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v40 + 1)) {
        swift_dynamicCast();
      }
      else {
        sub_2411E0320((uint64_t)&v39);
      }
      uint64_t v28 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
      if (*(void *)(v13 + 16) && (unint64_t v30 = sub_2411B8E04(v28, v29), (v31 & 1) != 0))
      {
        sub_2411B69BC(*(void *)(v13 + 56) + 32 * v30, (uint64_t)&v39);
      }
      else
      {
        long long v39 = 0u;
        long long v40 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v40 + 1)) {
        swift_dynamicCast();
      }
      else {
        sub_2411E0320((uint64_t)&v39);
      }
      uint64_t v32 = self;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v7, 1, 1, v8);
      sub_24162B288();
      CGFloat v33 = (void *)sub_24162B298();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v8);
      id v34 = objc_msgSend(v32, sel_localizedStringFromPersonNameComponents_style_options_, v33, 3, 0);

      _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
      uint64_t v26 = sub_241631DA8();

      swift_bridgeObjectRelease();
      return v26;
    }
  }
  else
  {
    sub_2411E0320((uint64_t)&v39);
  }
  sub_24162EF48();
  id v20 = sub_24162EF98();
  os_log_type_t v21 = sub_2416322E8();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(void *)&long long v39 = v23;
    *(_DWORD *)uint64_t v22 = 136446210;
    uint64_t v24 = sub_2416333E8();
    uint64_t v38 = sub_2411B6898(v24, v25, (uint64_t *)&v39);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v20, v21, "[%{public}s] Error grabbing name for Cycle Chart PDF: Could not get property list values", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v23, -1, -1);
    MEMORY[0x245621640](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v36);
  return 0;
}

unint64_t sub_2414CC288()
{
  unint64_t result = qword_26B0123B0;
  if (!qword_26B0123B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0123B0);
  }
  return result;
}

void sub_2414CC2C8(uint64_t a1)
{
}

void sub_2414CC2FC(uint64_t a1)
{
}

void sub_2414CC330(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2414CC398(unint64_t a1)
{
  return sub_2414CC3C4(a1, (uint64_t (*)(unint64_t))sub_24149D298, sub_2414AA8D8);
}

uint64_t sub_2414CC3C4(unint64_t a1, uint64_t (*a2)(unint64_t), uint64_t (*a3)(uint64_t))
{
  unint64_t v4 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v21 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v5 & 0x4000000000000000) == 0)
  {
    uint64_t v6 = *(void *)(v5 + 16);
    swift_bridgeObjectRelease();
    unint64_t v7 = (unint64_t)v6 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    uint64_t v6 = sub_241633068();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v20 = v6 >= 0 ? v6 : v6 + 1;
    if (v6 < -1) {
      __break(1u);
    }
    unint64_t v7 = v20 >> 1;
LABEL_6:
    if ((unint64_t)(v6 + 1) < 3) {
      return v5;
    }
    unint64_t v8 = 0;
    while (1)
    {
      unint64_t v10 = v8 + 1;
      unint64_t v4 = v6 - (v8 + 1);
      if (__OFSUB__(v6, v8 + 1)) {
        break;
      }
      if (v8 != v4)
      {
        uint64_t v11 = v21;
        if ((v21 & 0xC000000000000001) != 0)
        {
          uint64_t v14 = MEMORY[0x245620370](v8, v21);
          id v15 = (id)MEMORY[0x245620370](v6 - (v8 + 1), v21);
        }
        else
        {
          if ((v8 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v12 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v8 >= v12) {
            goto LABEL_34;
          }
          id v13 = *(id *)(v21 + 8 * v8 + 32);
          if ((v4 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v4 >= v12) {
            goto LABEL_37;
          }
          uint64_t v14 = (uint64_t)v13;
          id v15 = *(id *)(v21 + 32 + 8 * v4);
        }
        id v16 = v15;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          uint64_t v11 = a3(v21);
          uint64_t v21 = v11;
        }
        uint64_t v17 = (v11 & 0xFFFFFFFFFFFFFF8) + 8 * v8;

        *(void *)(v17 + 32) = v16;
        sub_241631F48();
        uint64_t v18 = v21;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          uint64_t v18 = a3(v21);
          uint64_t v21 = v18;
        }
        if ((v4 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v4 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v9 = (v18 & 0xFFFFFFFFFFFFFF8) + 8 * v4;

        *(void *)(v9 + 32) = v14;
        sub_241631F48();
      }
      unint64_t v8 = v10;
      if (v7 == v10) {
        return v21;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v5 = a2(v4);
    uint64_t v21 = v5;
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
}

char *sub_2414CC5F8(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  id v64 = a1;
  unint64_t v65 = a6;
  uint64_t v72 = a4;
  uint64_t v73 = a5;
  id v68 = a3;
  uint64_t v70 = a9;
  uint64_t v15 = sub_24162EFA8();
  uint64_t v66 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v71 = (char *)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CycleDay();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v61 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24162BA08();
  uint64_t v69 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  unint64_t v60 = (char *)v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_24162D2C8();
  uint64_t v22 = *(void *)(v62 - 8);
  __n128 v23 = MEMORY[0x270FA5388](v62);
  unint64_t v25 = (char *)v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_ongoingCycleFactors] = MEMORY[0x263F8EE78];
  *(void *)&v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_collectionViewSource] = 0;
  *(void *)&v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_viewModelProvider] = a3;
  *(void *)&v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_featureSettings] = a7;
  uint64_t v26 = a8;
  *(void *)&v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_deviationsFeatureStatus] = a8;
  uint64_t v63 = v20;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v58[1] = v20 + 16;
  uint64_t v59 = v27;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v27)(&v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_gregorianCalendar], a4, v19, v23);
  sub_24134B4CC(v73, (uint64_t)&v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_cycleDay]);
  type metadata accessor for CycleFactorsImpactNotificationFactory();
  uint64_t v28 = a2;
  swift_getObjectType();
  uint64_t v29 = a7;
  swift_retain_n();
  uint64_t v30 = v26;
  swift_retain_n();
  char v31 = v9;
  id v68 = v68;
  id v32 = v64;
  swift_unknownObjectRetain();
  unint64_t v33 = v65;
  id v64 = v29;
  unint64_t v65 = v30;
  *(void *)&v31[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_notificationImpactFactory] = sub_2413A6954(v33, (uint64_t)v32, (uint64_t)v29, v30, v28);

  sub_24162D288();
  id v34 = (char *)sub_24162D1D8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v62);
  uint64_t v35 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F82540]), sel_initWithSection_, v34);
  id v36 = objc_msgSend(v32, sel_healthStore);
  sub_2411A3DF4(v70, (uint64_t)v76);
  v31[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_launchSource] = 2;
  *(void *)&v31[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_providedHealthStore] = v36;
  *(void *)&v31[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_analysisProvider] = v32;
  sub_2411A3DF4((uint64_t)v76, (uint64_t)&v31[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_healthExperienceStore]);
  *(void *)&v31[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_pregnancyModelProvider] = v28;
  id v37 = (objc_class *)type metadata accessor for CycleFactorsCollectionViewController();
  v75.receiver = v31;
  v75.super_class = v37;
  id v38 = v32;
  uint64_t v62 = v28;
  swift_unknownObjectRetain();
  long long v39 = objc_msgSendSuper2(&v75, sel_initWithCollectionViewLayout_, v35);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v76);
  v39[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_launchSource] = 1;
  sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
  long long v40 = v39;
  uint64_t v41 = (void *)sub_2416325A8();
  objc_msgSend(v38, sel_addObserver_queue_, v40, v41);

  objc_msgSend(v68, sel_registerObserver_, v40);
  uint64_t v42 = *(void **)&v40[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_providedHealthStore];
  uint64_t v43 = (uint64_t)v60;
  v59(v60, v72, v69);
  uint64_t v44 = (uint64_t)v61;
  sub_24134B4CC(v73, (uint64_t)v61);
  uint64_t v45 = (char *)objc_allocWithZone((Class)type metadata accessor for CycleFactorsDaySummaryCollectionViewSource());
  unsigned __int8 v46 = v40;
  objc_super v47 = sub_2414CE130(v42, v46, v43, v44, v45);
  CGRect v48 = *(void **)&v46[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_collectionViewSource];
  *(void *)&v46[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_collectionViewSource] = v47;

  sub_24162EF48();
  uint64_t v49 = v46;
  uint64_t v50 = sub_24162EF98();
  os_log_type_t v51 = sub_2416322E8();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v61 = v34;
    id v53 = (uint8_t *)v52;
    uint64_t v54 = swift_slowAlloc();
    v76[0] = v54;
    *(_DWORD *)id v53 = 136446210;
    unint64_t v60 = v35;
    uint64_t ObjectType = swift_getObjectType();
    sub_2414CE5B0(0, &qword_268D01550, (void (*)(uint64_t))type metadata accessor for CycleFactorsDaySummaryCollectionViewController);
    uint64_t v55 = sub_241631D48();
    uint64_t ObjectType = sub_2411B6898(v55, v56, v76);
    sub_241632C28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v50, v51, "[%{public}s] Initializing", v53, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v54, -1, -1);
    MEMORY[0x245621640](v53, -1, -1);

    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {

    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v70);
  sub_241361C9C(v73);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v72, v69);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v71, v67);
  return v49;
}

void sub_2414CCE00()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v62 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241631CA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v63 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v8 = MEMORY[0x270FA5388](v7).n128_u64[0];
  unint64_t v10 = (char *)&v59 - v9;
  id v11 = objc_msgSend(v0, sel_collectionView, v8);
  if (!v11)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v12 = v11;
  uint64_t v61 = ObjectType;
  type metadata accessor for HistoricalSampleCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v14 = (void *)sub_241631CC8();
  objc_msgSend(v12, sel_registerClass_forCellWithReuseIdentifier_, ObjCClassFromMetadata, v14);

  id v15 = objc_msgSend(v0, sel_collectionView);
  if (!v15)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v16 = v15;
  type metadata accessor for CycleFactorsNoneCollectionViewCell();
  uint64_t v17 = swift_getObjCClassFromMetadata();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v18 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_registerClass_forCellWithReuseIdentifier_, v17, v18);

  id v19 = objc_msgSend(v0, sel_collectionView);
  if (!v19)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v20 = v19;
  type metadata accessor for CycleFactorsShowAllFactorsCollectionViewCell();
  uint64_t v21 = swift_getObjCClassFromMetadata();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v22 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_registerClass_forCellWithReuseIdentifier_, v21, v22);

  id v23 = objc_msgSend(v0, sel_collectionView);
  if (!v23)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v24 = v23;
  type metadata accessor for HistoryListHeaderView();
  uint64_t v25 = swift_getObjCClassFromMetadata();
  id v26 = (id)*MEMORY[0x263F833F0];
  uint64_t v27 = (void *)sub_241631CC8();
  objc_msgSend(v24, sel_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_, v25, v26, v27);

  id v28 = objc_msgSend(v0, sel_collectionView);
  if (!v28)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v29 = v28;
  objc_msgSend(v28, sel_setAllowsSelection_, 1);

  id v30 = objc_msgSend(v0, sel_collectionView);
  if (!v30)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char v31 = v30;
  id v32 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  objc_msgSend(v31, sel_setBackgroundColor_, v32);

  id v33 = objc_msgSend(v0, sel_collectionView);
  if (!v33)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v34 = v33;
  uint64_t v35 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_collectionViewSource;
  objc_msgSend(v33, sel_setDataSource_, *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_collectionViewSource]);

  id v36 = objc_msgSend(v0, sel_collectionView);
  id v37 = v63;
  if (!v36)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v38 = v36;
  objc_msgSend(v36, sel_setDelegate_, *(void *)&v0[v35]);

  id v39 = objc_msgSend(v0, sel_collectionView);
  if (!v39)
  {
LABEL_24:
    __break(1u);
    return;
  }
  long long v40 = v39;
  id v60 = v0;
  objc_msgSend(v39, sel_setPreservesSuperviewLayoutMargins_, 1);

  sub_241631C38();
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v41(v37, v10, v4);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v42 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  uint64_t v43 = v37;
  uint64_t v44 = *(void (**)(char *, uint64_t))(v5 + 8);
  v44(v10, v4);
  uint64_t v45 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v46 = v60;
  objc_msgSend(v60, sel_setTitle_, v45);

  sub_241631C38();
  v41(v43, v10, v4);
  id v47 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  v44(v10, v4);
  uint64_t v65 = v61;
  v64[0] = v46;
  id v48 = v46;
  uint64_t v49 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  uint64_t v50 = v65;
  if (v65)
  {
    os_log_type_t v51 = sub_2411B6854(v64, v65);
    uint64_t v52 = *(void *)(v50 - 8);
    __n128 v53 = MEMORY[0x270FA5388](v51);
    uint64_t v55 = (char *)&v59 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v52 + 16))(v55, v53);
    uint64_t v56 = sub_241633208();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v50);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v64);
  }
  else
  {
    uint64_t v56 = 0;
  }
  id v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithTitle_style_target_action_, v49, 0, v56, sel_pushAddFactorView);

  swift_unknownObjectRelease();
  id v58 = objc_msgSend(v48, sel_navigationItem);
  objc_msgSend(v58, sel_setRightBarButtonItem_, v57);
}

void sub_2414CD588()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    uint64_t v2 = v1;
    if (qword_26B00F370 != -1) {
      swift_once();
    }
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_241631E08();
    uint64_t v3 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3);

    id v4 = objc_msgSend(v0, sel_navigationItem);
    id v5 = objc_msgSend(v4, sel_rightBarButtonItem);

    if (v5)
    {
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_241631E08();
      id v6 = (id)sub_241631CC8();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2414CD7A0()
{
  id v1 = v0;
  sub_2411C85F4(0);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(id *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_providedHealthStore];
  sub_241631AB8();
  uint64_t v6 = sub_24162B718();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 0, 1, v6);
  id v7 = objc_allocWithZone((Class)type metadata accessor for AddCycleFactorTableViewController());
  double v8 = sub_241564420(v5, (uint64_t)v4);
  v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin33AddCycleFactorTableViewController_launchSource] = v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_launchSource];
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v8);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v9, 1, 0);
}

void sub_2414CD960(void *a1)
{
  uint64_t v3 = type metadata accessor for CycleDay();
  MEMORY[0x270FA5388](v3);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_collectionViewSource);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_cycleDay;
    uint64_t v8 = sub_241631AC8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v5, v7, v8);
    id v9 = v6;
    *(void *)&v5[*(int *)(v3 + 20)] = objc_msgSend(a1, sel_dayViewModelAtIndex_, sub_241631A88());
    uint64_t v10 = (uint64_t)v9 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleDay;
    swift_beginAccess();
    sub_2414CE85C((uint64_t)v5, v10);
    swift_endAccess();
    id v11 = objc_msgSend(*(id *)(v10 + *(int *)(v3 + 20)), sel_cycleFactors);
    if (v11)
    {
      unint64_t v12 = v11;
      sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
      uint64_t v13 = sub_241631F28();
    }
    else
    {
      uint64_t v13 = MEMORY[0x263F8EE78];
    }
    sub_241224614(v13);
    sub_241361C9C((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_2414CDB84()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_viewModelProvider));
  swift_release();
  swift_release();
  sub_241361C9C(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_cycleDay);
  uint64_t v1 = v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_gregorianCalendar;
  uint64_t v2 = sub_24162BA08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void **)(v0
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_collectionViewSource);
}

uint64_t sub_2414CDD40()
{
  return type metadata accessor for CycleFactorsDaySummaryCollectionViewController();
}

uint64_t type metadata accessor for CycleFactorsDaySummaryCollectionViewController()
{
  uint64_t result = qword_268D01528;
  if (!qword_268D01528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2414CDD94()
{
  uint64_t result = type metadata accessor for CycleDay();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24162BA08();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CycleFactorsRow(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2414CDFDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CycleFactorsRow()
{
  return &type metadata for CycleFactorsRow;
}

unint64_t sub_2414CE018()
{
  unint64_t result = qword_268D01538;
  if (!qword_268D01538)
  {
    sub_2414CE070();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01538);
  }
  return result;
}

void sub_2414CE070()
{
  if (!qword_268D01540)
  {
    unint64_t v0 = sub_241631FA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01540);
    }
  }
}

void sub_2414CE0C8(void *a1@<X8>)
{
  *a1 = &unk_26F5677F0;
}

unint64_t sub_2414CE0DC()
{
  unint64_t result = qword_268D01548;
  if (!qword_268D01548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01548);
  }
  return result;
}

char *sub_2414CE130(void *a1, void *a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v10 = sub_24162EFA8();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&a5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_delegate + 8] = 0;
  uint64_t v13 = swift_unknownObjectWeakInit();
  *(void *)&a5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource____lazy_storage___shortMonthDayYearDateFormatter] = 0;
  *(void *)&a5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource____lazy_storage___yearDateFormatter] = 0;
  uint64_t v14 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleFactors;
  uint64_t v15 = MEMORY[0x263F8EE78];
  *(void *)&a5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleFactors] = MEMORY[0x263F8EE78];
  *(void *)&a5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_rows] = v15;
  *(void *)&a5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_providedHealthStore] = a1;
  *(void *)(v13 + 8) = &off_26F574988;
  swift_unknownObjectWeakAssign();
  uint64_t v16 = &a5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_gregorianCalenadar];
  uint64_t v17 = sub_24162BA08();
  uint64_t v43 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v16, a3, v17);
  sub_24134B4CC(a4, (uint64_t)&a5[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_cycleDay]);
  uint64_t v18 = *(void **)(a4 + *(int *)(type metadata accessor for CycleDay() + 20));
  id v19 = a5;
  id v42 = a1;
  id v20 = objc_msgSend(v18, sel_cycleFactors);
  if (v20)
  {
    uint64_t v21 = v20;
    sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
    unint64_t v22 = sub_241631F28();

    *(void *)&a5[v14] = sub_2414CC3C4(v22, (uint64_t (*)(unint64_t))sub_24149D280, sub_2414AA8D8);
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  id v23 = (objc_class *)type metadata accessor for CycleFactorsDaySummaryCollectionViewSource();
  v48.receiver = v19;
  v48.super_class = v23;
  id v24 = objc_msgSendSuper2(&v48, sel_init);
  sub_24162EF48();
  uint64_t v25 = (char *)v24;
  id v26 = sub_24162EF98();
  os_log_type_t v27 = sub_2416322E8();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v41 = a4;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v47 = v30;
    uint64_t v39 = v17;
    long long v40 = a2;
    *(_DWORD *)uint64_t v29 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    sub_2414CE5B0(0, &qword_268D01558, (void (*)(uint64_t))type metadata accessor for CycleFactorsDaySummaryCollectionViewSource);
    uint64_t v31 = sub_241631D48();
    uint64_t ObjectType = sub_2411B6898(v31, v32, &v47);
    uint64_t v17 = v39;
    a2 = v40;
    sub_241632C28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v26, v27, "[%{public}s] Initializing", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v30, -1, -1);
    id v33 = v29;
    a4 = v41;
    MEMORY[0x245621640](v33, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v45);
  uint64_t v35 = v42;
  uint64_t v34 = v43;
  id v36 = sub_241224714();

  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(a3, v17);
  sub_241361C9C(a4);
  *(void *)&v25[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin42CycleFactorsDaySummaryCollectionViewSource_rows] = v36;
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_2414CE5B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_2414CE5F0()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_analysisProvider];
  unint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_ongoingCycleFactors];
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_featureSettings];
  uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_deviationsFeatureStatus];
  sub_2411A3DF4((uint64_t)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_healthExperienceStore], (uint64_t)v11);
  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_pregnancyModelProvider];
  objc_allocWithZone((Class)type metadata accessor for CycleFactorsHistoryCollectionViewController());
  id v7 = v2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v8 = sub_2415BEC04(v7, v3, v4, v5, (uint64_t)v11, v6);
  v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36CycleFactorsCollectionViewController_launchSource] = 1;
  id v9 = objc_msgSend(v1, sel_navigationController);
  if (v9)
  {
    uint64_t v10 = v9;
    objc_msgSend(v9, sel_pushViewController_animated_, v8, 1);
  }
}

uint64_t sub_2414CE738(void *a1)
{
  unint64_t v2 = v1;
  swift_retain();
  id v4 = objc_msgSend(a1, sel_ongoingCycleFactors);
  sub_2411B9D00(0, (unint64_t *)&qword_26B012390);
  unint64_t v5 = sub_241631F28();

  sub_2413A4178(v5);
  swift_release();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(a1, sel_ongoingCycleFactors);
  uint64_t v7 = sub_241631F28();

  *(void *)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin46CycleFactorsDaySummaryCollectionViewController_ongoingCycleFactors] = v7;
  swift_bridgeObjectRelease();
  swift_retain();
  sub_2413A46C0(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2414CE85C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CycleDay();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MenstrualCycles_SharingVersionMismatchTileView(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_26B00E6B0);
}

uint64_t sub_2414CE8E0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2414CE920(char a1)
{
  sub_24162BDB8();
  if (a1)
  {
    sub_241632E78();
    swift_bridgeObjectRelease();
  }
  sub_241631E08();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_241631E78();
  sub_241631DF8();
  swift_bridgeObjectRelease();
  return v3;
}

id sub_2414CEA5C(void *a1, double a2, double a3, double a4, double a5)
{
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for MenstrualCycles_SharingVersionMismatchTileView(0);
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_2414CEAD0(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MenstrualCycles_SharingVersionMismatchTileView(0);
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_2414CEB1C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MenstrualCycles_SharingVersionMismatchTileView(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2414CEB54()
{
  return type metadata accessor for MenstrualCycles_SharingVersionMismatchTileView(0);
}

uint64_t sub_2414CEB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  id v42 = a5;
  int v43 = a4;
  uint64_t v39 = a3;
  uint64_t v51 = a2;
  uint64_t v8 = sub_24162EFA8();
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  MEMORY[0x270FA5388](v8);
  id v37 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24162C1C8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  sub_24133834C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v40 = v13;
  uint64_t v41 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SharedProjectionHighlightFeedItemGenerator(0);
  uint64_t v18 = *(int *)(v17 + 24);
  uint64_t v38 = a6;
  id v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v19((char *)a6 + v18, a1, v10);
  id v20 = (char *)a6 + *(int *)(v17 + 20);
  uint64_t v21 = sub_24162C128();
  uint64_t v44 = *(void *)(v21 - 8);
  uint64_t v45 = v21;
  (*(void (**)(char *, uint64_t))(v44 + 16))(v20, v51);
  uint64_t v48 = a1;
  uint64_t v22 = a1;
  id v23 = v37;
  v19((char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v10);
  unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v39;
  uint64_t v46 = v11;
  uint64_t v47 = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v25 + v24, (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  unint64_t v26 = v25 + ((v12 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  os_log_type_t v27 = v42;
  *(void *)unint64_t v26 = v42;
  *(unsigned char *)(v26 + 8) = v43;
  sub_2413383E0(0);
  sub_2414D04B4(&qword_26B012EC8, sub_2413383E0);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v28 = v27;
  sub_24162FBE8();
  sub_2414D04B4(&qword_26B00EC08, (void (*)(uint64_t))sub_24133834C);
  uint64_t v29 = v40;
  uint64_t v30 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v29);
  swift_bridgeObjectRelease();
  *uint64_t v38 = v30;
  sub_24162EF48();
  uint64_t v31 = sub_24162EF98();
  os_log_type_t v32 = sub_2416322E8();
  if (os_log_type_enabled(v31, v32))
  {
    id v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v53 = v34;
    *(_DWORD *)id v33 = 136446210;
    uint64_t v52 = sub_2411B6898(0xD00000000000002ALL, 0x800000024164DEC0, &v53);
    sub_241632C28();
    _os_log_impl(&dword_24118E000, v31, v32, "[%{public}s] Initialized", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v34, -1, -1);
    MEMORY[0x245621640](v33, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v51, v45);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v23, v50);
}

uint64_t type metadata accessor for SharedProjectionHighlightFeedItemGenerator(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_26B00E648);
}

uint64_t sub_2414CF0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  int v121 = a4;
  uint64_t v126 = a3;
  uint64_t v131 = a2;
  uint64_t v129 = a5;
  sub_2412CB650(0);
  uint64_t v7 = v6;
  unint64_t v149 = (void (*)(char *, uint64_t, uint64_t))*(v6 - 1);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_24162EFA8();
  uint64_t v146 = *(void (***)(void, void))(v141 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v141);
  uint64_t v12 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v136 = (char *)&v102 - v13;
  uint64_t v14 = sub_24162C1C8();
  uint64_t v128 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v111 = v15;
  uint64_t v130 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414D4618(0, &qword_26B00EBE0, (uint64_t (*)(uint64_t))sub_2411BDE74, MEMORY[0x263EFDDF8]);
  uint64_t v107 = v16;
  uint64_t v106 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v105 = (char *)&v102 - v17;
  sub_2414D4768(0, &qword_26B0107B8, (uint64_t (*)(uint64_t))sub_2411BDE74, MEMORY[0x263EFDEA0]);
  uint64_t v110 = v18;
  uint64_t v109 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v108 = (char *)&v102 - v19;
  sub_2414D467C();
  uint64_t v115 = v20;
  uint64_t v114 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v112 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414D486C();
  uint64_t v117 = v22;
  uint64_t v116 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  long long v113 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414D4A98();
  uint64_t v120 = v24;
  uint64_t v119 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v118 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414D4B2C();
  uint64_t v125 = v26;
  uint64_t v124 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v122 = (char *)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414D4C18();
  uint64_t v29 = v28;
  uint64_t v127 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v123 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_24162C518();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](a1);
  uint64_t v135 = (char *)&v102 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v38 = (uint64_t *)((char *)&v102 - v37);
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  id v42 = (char *)&v102 - v41;
  uint64_t v43 = *(void *)(v39 + 16);
  if (v43)
  {
    char v144 = v40;
    uint64_t v103 = v29;
    uint64_t v104 = v14;
    uint64_t v152 = MEMORY[0x263F8EE78];
    uint64_t v46 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
    uint64_t v44 = v32 + 16;
    uint64_t v45 = v46;
    unint64_t v47 = v39 + ((*(unsigned __int8 *)(v44 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 64));
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 56);
    uint64_t v148 = (uint64_t (**)(uint64_t *, uint64_t))(v44 + 72);
    unint64_t v149 = v48;
    LODWORD(v147) = *MEMORY[0x263F458A8];
    LODWORD(v145) = *MEMORY[0x263F45880];
    uint64_t v49 = (void (**)(char *, uint64_t))(v44 - 8);
    uint64_t v138 = (void (**)(char *, uint64_t))(v146 + 1);
    uint64_t v146 = (void (**)(void, void))(v44 + 80);
    uint64_t v102 = v39;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    *(void *)&long long v50 = 136446466;
    long long v134 = v50;
    unint64_t v133 = 0x800000024164DEC0;
    uint64_t v132 = MEMORY[0x263F8EE58] + 8;
    uint64_t v51 = v136;
    uint64_t v139 = v46;
    uint64_t v140 = v44;
    do
    {
      v45(v42, v47, v31);
      v45((char *)v38, (unint64_t)v42, v31);
      int v52 = (*v148)(v38, v31);
      if (v52 == v147 || v52 == v145)
      {
        (*v146)(v38, v31);
        sub_24149782C(*v38);
        (*v49)(v42, v31);
      }
      else
      {
        sub_24162EF48();
        v45(v144, (unint64_t)v42, v31);
        uint64_t v53 = sub_24162EF98();
        os_log_type_t v54 = sub_2416322C8();
        int v143 = v54;
        if (os_log_type_enabled(v53, v54))
        {
          uint64_t v55 = swift_slowAlloc();
          uint64_t v137 = swift_slowAlloc();
          v151[0] = v137;
          *(_DWORD *)uint64_t v55 = v134;
          *(void *)(v55 + 4) = sub_2411B6898(0xD00000000000002ALL, v133, v151);
          *(_WORD *)(v55 + 12) = 2080;
          uint64_t v142 = v53;
          uint64_t v56 = v144;
          v45(v135, (unint64_t)v144, v31);
          uint64_t v57 = sub_241631D48();
          *(void *)(v55 + 14) = sub_2411B6898(v57, v58, v151);
          swift_bridgeObjectRelease();
          uint64_t v59 = *v49;
          (*v49)(v56, v31);
          _os_log_impl(&dword_24118E000, v142, (os_log_type_t)v143, "[%{public}s] Unexpected change: %s", (uint8_t *)v55, 0x16u);
          uint64_t v60 = v137;
          swift_arrayDestroy();
          MEMORY[0x245621640](v60, -1, -1);
          uint64_t v61 = v55;
          uint64_t v51 = v136;
          MEMORY[0x245621640](v61, -1, -1);
        }
        else
        {

          uint64_t v59 = *v49;
          (*v49)(v144, v31);
        }
        (*v138)(v51, v141);
        v59(v42, v31);
        v59((char *)v38, v31);
        uint64_t v45 = v139;
      }
      v47 += (unint64_t)v149;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease();
    v151[0] = v152;
    sub_2411BDE74(0);
    uint64_t v62 = v105;
    sub_24162FB98();
    sub_2411CE834();
    uint64_t v63 = v108;
    uint64_t v64 = v107;
    sub_24162FB88();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v62, v64);
    uint64_t v65 = v131;
    sub_24162C148();
    sub_2411B6854(v151, v151[3]);
    uint64_t v150 = sub_24162C058();
    sub_2414D4768(0, (unint64_t *)&qword_26B010440, MEMORY[0x263F45718], MEMORY[0x263EFDCF0]);
    sub_2414D47E4();
    sub_2411EB178();
    uint64_t v66 = v112;
    uint64_t v67 = v110;
    sub_24162FCD8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v63, v67);
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v151);
    uint64_t v68 = v128;
    unint64_t v149 = *(void (**)(char *, uint64_t, uint64_t))(v128 + 16);
    uint64_t v69 = v130;
    uint64_t v70 = v104;
    v149(v130, v65, v104);
    uint64_t v71 = *(unsigned __int8 *)(v68 + 80);
    uint64_t v147 = (v71 + 16) & ~v71;
    uint64_t v148 = (uint64_t (**)(uint64_t *, uint64_t))(v147 + v111);
    uint64_t v72 = v147;
    uint64_t v146 = (void (**)(void, void))(v71 | 7);
    unint64_t v73 = (v147 + v111 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v74 = swift_allocObject();
    uint64_t v145 = *(void (**)(uint64_t, char *, uint64_t))(v68 + 32);
    v145(v74 + v72, v69, v70);
    unint64_t v75 = v74 + v73;
    uint64_t v76 = v126;
    *(void *)unint64_t v75 = v126;
    *(unsigned char *)(v75 + 8) = v121 & 1;
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = sub_2414D4D8C;
    *(void *)(v77 + 24) = v74;
    id v78 = v76;
    sub_24162FA48();
    sub_2414D4A14(0);
    sub_2414D04B4(&qword_26B00FFF8, (void (*)(uint64_t))sub_2414D467C);
    sub_2414D04B4(&qword_26B010428, sub_2414D4A14);
    uint64_t v79 = v113;
    uint64_t v80 = v115;
    sub_24162FD68();
    swift_release();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v66, v80);
    sub_2414D04B4(&qword_26B0103D0, (void (*)(uint64_t))sub_2414D486C);
    uint64_t v81 = v118;
    uint64_t v82 = v117;
    sub_24162FD58();
    (*(void (**)(char *, uint64_t))(v116 + 8))(v79, v82);
    sub_2414D4618(0, (unint64_t *)&unk_26B012F00, (uint64_t (*)(uint64_t))sub_2411C0990, MEMORY[0x263EFDDF8]);
    sub_2414D04B4(&qword_26B010360, (void (*)(uint64_t))sub_2414D4A98);
    sub_2412DF320();
    uint64_t v83 = v122;
    uint64_t v84 = v120;
    sub_24162FD08();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v81, v84);
    uint64_t v85 = v130;
    v149(v130, v131, v70);
    uint64_t v86 = swift_allocObject();
    v145(v86 + v147, v85, v70);
    sub_2414D59C4(0, (unint64_t *)&qword_26B012F70, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_2414D04B4(&qword_26B010260, (void (*)(uint64_t))sub_2414D4B2C);
    uint64_t v87 = v123;
    uint64_t v88 = v125;
    sub_24162FCE8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v83, v88);
    sub_2414D04B4(&qword_26B010158, (void (*)(uint64_t))sub_2414D4C18);
    uint64_t v89 = v103;
    uint64_t v90 = sub_24162FCB8();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v127 + 8))(v87, v89);
    *uint64_t v129 = v90;
  }
  else
  {
    uint64_t v148 = v7;
    sub_24162EF48();
    uint64_t v92 = sub_24162EF98();
    uint64_t v93 = sub_2416322C8();
    BOOL v94 = os_log_type_enabled(v92, (os_log_type_t)v93);
    uint64_t v95 = v129;
    uint64_t v96 = v146;
    if (v94)
    {
      uint64_t v97 = (uint8_t *)swift_slowAlloc();
      uint64_t v98 = swift_slowAlloc();
      v151[0] = v98;
      *(_DWORD *)uint64_t v97 = 136446210;
      uint64_t v152 = sub_2411B6898(0xD00000000000002ALL, 0x800000024164DEC0, v151);
      sub_241632C28();
      _os_log_impl(&dword_24118E000, v92, (os_log_type_t)v93, "[%{public}s] Received no model changes", v97, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v98, -1, -1);
      MEMORY[0x245621640](v97, -1, -1);
    }

    ((void (**)(char *, uint64_t))v96)[1](v12, v141);
    long long v99 = v148;
    uint64_t v100 = v149;
    v151[0] = MEMORY[0x263F8EE78];
    sub_2414D59C4(0, (unint64_t *)&qword_26B012F70, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_24162FB98();
    sub_2414D04B4(&qword_26B00EBE8, sub_2412CB650);
    uint64_t v101 = sub_24162FCB8();
    uint64_t result = (*((uint64_t (**)(char *, void))v100 + 1))(v9, v99);
    *uint64_t v95 = v101;
  }
  return result;
}

uint64_t sub_2414D0324()
{
  uint64_t v1 = sub_24162C1C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 9, v5);
}

uint64_t sub_2414D040C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_24162C1C8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void **)(v1 + v5);
  int v8 = *(unsigned __int8 *)(v1 + v5 + 8);

  return sub_2414CF0A8(v6, v1 + v4, v7, v8, a1);
}

uint64_t sub_2414D04B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2414D04FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_2414D5054();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v17[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = a3;
  uint64_t v19 = a2;
  uint64_t v20 = a4;
  char v21 = a5;
  uint64_t v22 = sub_241394A34((void (*)(uint64_t *__return_ptr, uint64_t))sub_2414D50E8, (uint64_t)v17, a1);
  sub_2414D4A14(0);
  sub_2414D4618(0, &qword_26B010690, (uint64_t (*)(uint64_t))sub_2414D4A14, MEMORY[0x263F8D488]);
  sub_2414D04B4(&qword_26B010428, sub_2414D4A14);
  sub_2414D5110();
  sub_24162FA28();
  sub_2414D04B4(&qword_26B0103F0, (void (*)(uint64_t))sub_2414D5054);
  uint64_t v15 = sub_24162FCB8();
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  return v15;
}

uint64_t sub_2414D06FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  sub_2414D5198();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v19[3] = sub_2414D08E4(a2, a1, a3, a4, a5);
  sub_2414D4A34(0, &qword_26B010420, sub_2412E0444);
  sub_24162C018();
  sub_2414D5250(&qword_26B010418, &qword_26B010420, sub_2412E0444);
  sub_24162FCC8();
  sub_2414D04B4(&qword_26B010088, (void (*)(uint64_t))sub_2414D5198);
  uint64_t v17 = sub_24162FCB8();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  *a6 = v17;
  return result;
}

id sub_2414D08E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, int a5)
{
  sub_2414D4618(0, &qword_26B010560, (uint64_t (*)(uint64_t))sub_2412E0444, MEMORY[0x263EFDDF8]);
  uint64_t v124 = *(void *)(v10 - 8);
  uint64_t v125 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v123 = (uint64_t)&v93 - v11;
  uint64_t v12 = sub_24162EFA8();
  uint64_t v121 = *(void *)(v12 - 8);
  uint64_t v122 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v120 = (char *)&v93 - v16;
  uint64_t v116 = sub_24162C1C8();
  uint64_t v108 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v102 = v17;
  uint64_t v115 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24162C2F8();
  uint64_t v118 = *(void *)(v18 - 8);
  uint64_t v119 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  char v21 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v117 = (char *)&v93 - v22;
  sub_2414D52A0();
  uint64_t v107 = v23;
  uint64_t v106 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v114 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414D5454();
  uint64_t v110 = v25;
  uint64_t v109 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  unint64_t v105 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_24162BA08();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  BOOL v94 = (char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_24162BF28();
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v113 = (uint64_t)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412E0444(0);
  uint64_t v127 = v29;
  uint64_t v97 = *(void *)(v29 - 8);
  uint64_t v30 = *(void *)(v97 + 64);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v126 = (uint64_t)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v93 - v32;
  int v99 = a5;
  uint64_t v100 = a3;
  id v98 = a4;
  sub_2414D1BCC(a2, a1, a5, a3, a4, (char *)&v93 - v32);
  sub_24162C148();
  sub_2411B6854(v129, v129[3]);
  uint64_t v34 = sub_24162C048();
  sub_24162BD08();
  if (!swift_dynamicCastClass())
  {
    swift_unknownObjectRelease();
    _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v129);
    sub_24162EF88();
    uint64_t v56 = sub_24162EF98();
    os_log_type_t v57 = sub_2416322D8();
    if (os_log_type_enabled(v56, v57))
    {
      unint64_t v58 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v129[0] = v59;
      *(_DWORD *)unint64_t v58 = 136315138;
      uint64_t v128 = sub_2411B6898(0xD00000000000002ALL, 0x800000024164DEC0, v129);
      sub_241632C28();
      _os_log_impl(&dword_24118E000, v56, v57, "%s Provided notification manager does not conform to HealthAppPluginNotificationManager!", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v59, -1, -1);
      MEMORY[0x245621640](v58, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v121 + 8))(v15, v122);
    uint64_t v61 = v124;
    uint64_t v60 = v125;
    uint64_t v62 = v123;
    sub_2414D58FC((uint64_t)v33, v126, (uint64_t (*)(void))sub_2412E0444);
    sub_24162FB98();
    sub_2414D5500();
    uint64_t v63 = sub_24162FCB8();
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v60);
    goto LABEL_18;
  }
  uint64_t v111 = v33;
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v129);
  uint64_t v35 = sub_24162C2E8();
  unint64_t v37 = v36;
  id v38 = objc_allocWithZone(MEMORY[0x263F46500]);
  uint64_t v39 = (void *)sub_24162B478();
  sub_2411EDEA8(v35, v37);
  id v40 = objc_msgSend(v38, sel_initWithData_, v39);

  uint64_t v41 = v21;
  uint64_t v112 = v34;
  if (!v40) {
    goto LABEL_5;
  }
  id result = objc_msgSend(v40, sel_projectionKind);
  if (result)
  {
    char v43 = sub_2414DEBBC(result);

    if (v43 != 2)
    {
      uint64_t v66 = a1;
      uint64_t v67 = (void *)sub_24162C178();
      LODWORD(v124) = v43 & 1;
      uint64_t v123 = sub_2414CE920(v43 & 1);
      uint64_t v69 = v68;

      uint64_t v125 = v66;
      uint64_t v70 = (void *)sub_24162C168();
      uint64_t v71 = (char *)objc_msgSend(v70, sel_profileIdentifier);

      uint64_t v72 = sub_24162C2E8();
      unint64_t v74 = v73;
      id v75 = objc_allocWithZone(MEMORY[0x263F46500]);
      uint64_t v76 = (void *)sub_24162B478();
      sub_2411EDEA8(v72, v74);
      id v77 = objc_msgSend(v75, sel_initWithData_, v76);

      uint64_t v93 = a2;
      if (v77)
      {
        id v78 = objc_msgSend(v77, sel_projection);
        if (v78)
        {
          sub_2411B9D00(0, (unint64_t *)&qword_26B013120);
          id v78 = sub_2414DE3D0(v78);
        }
      }
      else
      {
        id v78 = 0;
      }
      id v79 = objc_msgSend(v98, sel_currentCalendar, v93);
      uint64_t v80 = (uint64_t)v94;
      sub_24162B928();

      sub_2413250C8(v123, v69, v71, v124, v78, v99 & 1, v100, v80, v113, (uint64_t)sub_2413250C4, 0);
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v80, v96);
      v129[0] = sub_24162BCF8();
      sub_2414D4768(0, &qword_26B010450, (uint64_t (*)(uint64_t))sub_2414D5398, MEMORY[0x263EFDCF0]);
      sub_2414D4A34(0, &qword_26B010460, sub_2414D5398);
      sub_2414D53CC();
      sub_2414D5250(&qword_26B010458, &qword_26B010460, sub_2414D5398);
      sub_24162FD08();
      swift_release();
      uint64_t v81 = v118;
      uint64_t v82 = v119;
      (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v117, v93, v119);
      uint64_t v83 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v115, v125, v116);
      uint64_t v33 = v111;
      uint64_t v84 = v126;
      sub_2414D58FC((uint64_t)v111, v126, (uint64_t (*)(void))sub_2412E0444);
      unint64_t v85 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
      unint64_t v86 = (v101 + *(unsigned __int8 *)(v83 + 80) + v85) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
      unint64_t v87 = (v102 + *(unsigned __int8 *)(v97 + 80) + v86) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
      uint64_t v88 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v81 + 32))(v88 + v85, v117, v82);
      (*(void (**)(unint64_t, char *, uint64_t))(v83 + 32))(v88 + v86, v115, v116);
      sub_2412E0478(v84, v88 + v87);
      sub_2414D04B4(&qword_26B010220, (void (*)(uint64_t))sub_2414D52A0);
      uint64_t v89 = v105;
      uint64_t v90 = v107;
      uint64_t v91 = v114;
      sub_24162FCE8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v106 + 8))(v91, v90);
      sub_2414D04B4(&qword_26B010148, (void (*)(uint64_t))sub_2414D5454);
      uint64_t v92 = v110;
      uint64_t v63 = sub_24162FCB8();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v89, v92);
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v113, v104);
      goto LABEL_18;
    }
LABEL_5:
    uint64_t v44 = v120;
    sub_24162EF88();
    uint64_t v46 = v118;
    uint64_t v45 = v119;
    unint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 16);
    v47(v21, a2, v119);
    uint64_t v48 = sub_24162EF98();
    os_log_type_t v49 = sub_2416322C8();
    int v50 = v49;
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v51 = swift_slowAlloc();
      LODWORD(v115) = v50;
      uint64_t v52 = v51;
      uint64_t v116 = swift_slowAlloc();
      v129[0] = v116;
      *(_DWORD *)uint64_t v52 = 136315394;
      uint64_t v128 = sub_2411B6898(0xD00000000000002ALL, 0x800000024164DEC0, v129);
      sub_241632C28();
      *(_WORD *)(v52 + 12) = 2080;
      v47(v117, (uint64_t)v41, v45);
      uint64_t v53 = sub_241631D78();
      uint64_t v128 = sub_2411B6898(v53, v54, v129);
      sub_241632C28();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v45);
      _os_log_impl(&dword_24118E000, v48, (os_log_type_t)v115, "%s No projection kind in %s", (uint8_t *)v52, 0x16u);
      uint64_t v55 = v116;
      swift_arrayDestroy();
      MEMORY[0x245621640](v55, -1, -1);
      MEMORY[0x245621640](v52, -1, -1);

      (*(void (**)(char *, uint64_t))(v121 + 8))(v120, v122);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v45);

      (*(void (**)(char *, uint64_t))(v121 + 8))(v44, v122);
    }
    uint64_t v33 = v111;
    sub_2414D58FC((uint64_t)v111, v126, (uint64_t (*)(void))sub_2412E0444);
    uint64_t v64 = v123;
    sub_24162FB98();
    sub_2414D5500();
    uint64_t v65 = v125;
    uint64_t v63 = sub_24162FCB8();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v64, v65);
LABEL_18:
    sub_2414D5964((uint64_t)v33, (uint64_t (*)(void))sub_2412E0444);
    return (id)v63;
  }
  __break(1u);
  return result;
}

uint64_t sub_2414D18AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2414D58FC(a1, a2, (uint64_t (*)(void))sub_2412E0444);
}

uint64_t sub_2414D18DC()
{
  return sub_24162FB98();
}

uint64_t sub_2414D1928@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_24162EFA8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  sub_24162EF48();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_24162EF98();
  os_log_type_t v12 = sub_2416322E8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = a3;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = a2;
    uint64_t v16 = v15;
    uint64_t v25 = v15;
    *(_DWORD *)uint64_t v14 = 136446466;
    uint64_t v24 = sub_2411B6898(0xD00000000000002ALL, 0x800000024164DEC0, &v25);
    sub_241632C28();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v24 = v10;
    sub_2411C0990(0);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v17 = sub_241631D78();
    uint64_t v24 = sub_2411B6898(v17, v18, &v25);
    sub_241632C28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v11, v12, "[%{public}s] Submitting feed items: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    uint64_t v19 = v16;
    a2 = v22;
    MEMORY[0x245621640](v19, -1, -1);
    uint64_t v20 = v14;
    a3 = v23;
    MEMORY[0x245621640](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = sub_241364BA4(v10, a2, 0xD000000000000025, 0x800000024166E9F0);
  *a3 = result;
  return result;
}

char *sub_2414D1BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, void *a5@<X4>, char *a6@<X8>)
{
  uint64_t v172 = a5;
  uint64_t v168 = a4;
  int v186 = a3;
  uint64_t v193 = a2;
  v201 = a6;
  uint64_t v176 = sub_24162C2A8();
  uint64_t v171 = *(void *)(v176 - 8);
  MEMORY[0x270FA5388](v176);
  uint64_t v169 = v7;
  uint64_t v175 = (char *)&v163 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_24162C1C8();
  uint64_t v170 = *(void *)(v174 - 8);
  MEMORY[0x270FA5388](v174);
  uint64_t v167 = v8;
  uint64_t v173 = (char *)&v163 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162C2F8();
  uint64_t v198 = *(void *)(v9 - 8);
  uint64_t v199 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  v197 = (char *)&v163 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v195 = (char *)&v163 - v13;
  uint64_t v166 = v14;
  MEMORY[0x270FA5388](v12);
  uint64_t v185 = (char *)&v163 - v15;
  uint64_t v165 = sub_24162E448();
  uint64_t v164 = *(void *)(v165 - 8);
  MEMORY[0x270FA5388](v165);
  unsigned __int8 v163 = (char *)&v163 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24162B718();
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v183 = (char *)&v163 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v182 = (char *)&v163 - v20;
  char v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2414D4618(0, &qword_26B00F200, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v181 = (char *)&v163 - v23;
  sub_2414D4618(0, (unint64_t *)&qword_26B012220, MEMORY[0x263F45770], v21);
  MEMORY[0x270FA5388](v24 - 8);
  v180 = (char *)&v163 - v25;
  uint64_t v178 = sub_24162BD98();
  uint64_t v177 = *(void *)(v178 - 8);
  MEMORY[0x270FA5388](v178);
  uint64_t v179 = (char *)&v163 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_24162EFA8();
  uint64_t v27 = *(void *)(v200 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v200);
  v196 = (char *)&v163 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v184 = (char *)&v163 - v31;
  MEMORY[0x270FA5388](v30);
  v188 = (char *)&v163 - v32;
  sub_2414D4618(0, (unint64_t *)&qword_26B00E630, MEMORY[0x263F45780], v21);
  uint64_t v34 = MEMORY[0x270FA5388](v33 - 8);
  unint64_t v36 = (char *)&v163 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  id v38 = (char *)&v163 - v37;
  sub_2412E0444(0);
  MEMORY[0x270FA5388](v39 - 8);
  *(void *)&long long v189 = (char *)&v163 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_24162C018();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v202 = v41;
  uint64_t v203 = v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  v191 = (char *)&v163 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  id v187 = (char *)&v163 - v45;
  uint64_t v46 = sub_24162C2E8();
  unint64_t v48 = v47;
  id v49 = objc_allocWithZone(MEMORY[0x263F46500]);
  int v50 = (void *)sub_24162B478();
  sub_2411EDEA8(v46, v48);
  id v51 = objc_msgSend(v49, sel_initWithData_, v50);

  if (!v51)
  {
LABEL_6:
    uint64_t v60 = v196;
    sub_24162EF48();
    uint64_t v61 = v197;
    uint64_t v62 = v198;
    uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v198 + 16);
    uint64_t v64 = v199;
    v63(v197, a1, v199);
    uint64_t v65 = sub_24162EF98();
    os_log_type_t v66 = sub_2416322C8();
    int v67 = v66;
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v68 = swift_slowAlloc();
      LODWORD(v193) = v67;
      uint64_t v69 = v68;
      id v194 = (id)swift_slowAlloc();
      uint64_t v205 = (uint64_t)v194;
      *(_DWORD *)uint64_t v69 = 136446466;
      uint64_t v207 = sub_2411B6898(0xD00000000000002ALL, 0x800000024164DEC0, &v205);
      uint64_t v190 = v27;
      sub_241632C28();
      *(_WORD *)(v69 + 12) = 2080;
      uint64_t v192 = v69 + 14;
      v63(v195, (uint64_t)v61, v64);
      uint64_t v70 = sub_241631D78();
      uint64_t v207 = sub_2411B6898(v70, v71, &v205);
      sub_241632C28();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v64);
      _os_log_impl(&dword_24118E000, v65, (os_log_type_t)v193, "[%{public}s] Unable to decode projectionKind from sharable model %s", (uint8_t *)v69, 0x16u);
      id v72 = v194;
      swift_arrayDestroy();
      MEMORY[0x245621640](v72, -1, -1);
      MEMORY[0x245621640](v69, -1, -1);

      (*(void (**)(char *, uint64_t))(v190 + 8))(v60, v200);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v64);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v60, v200);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v203 + 56))(v201, 1, 1, v202);
  }
  id v194 = v51;
  uint64_t v192 = a1;
  uint64_t v52 = sub_24162C2E8();
  unint64_t v54 = v53;
  id v55 = objc_allocWithZone(MEMORY[0x263F46500]);
  uint64_t v56 = (void *)sub_24162B478();
  sub_2411EDEA8(v52, v54);
  id v57 = objc_msgSend(v55, sel_initWithData_, v56);

  if (!v57)
  {
LABEL_5:

    a1 = v192;
    goto LABEL_6;
  }
  uint64_t result = (char *)objc_msgSend(v57, sel_projectionKind);
  if (!result)
  {
    __break(1u);
    goto LABEL_36;
  }
  char v59 = sub_2414DEBBC(result);

  if (v59 == 2) {
    goto LABEL_5;
  }
  uint64_t v190 = v27;
  sub_24162C148();
  sub_2411B6854(&v205, v206);
  unint64_t v73 = (void *)sub_24162C0B8();
  LODWORD(v197) = v59 & 1;
  uint64_t v74 = sub_2414CE920(v59 & 1);
  unint64_t v76 = v75;

  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v205);
  type metadata accessor for SharedProjectionHighlightFeedItemGenerator(0);
  sub_2411B9D00(0, &qword_26B00EC78);
  sub_2411BEE84();
  id v77 = v194;
  sub_24162DAC8();
  sub_24162C3E8();
  uint64_t v78 = sub_24162C3F8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v36, 0, 1, v78);
  type metadata accessor for MenstrualCycles_SharingVersionMismatchTileView(0);
  sub_2414D04B4(qword_26B00E7D8, (void (*)(uint64_t))type metadata accessor for SharedProjectionHighlightFeedItemGenerator);
  uint64_t v79 = v189;
  sub_24162E428();
  sub_2414D5A98((uint64_t)v36);
  sub_2414D5A98((uint64_t)v38);
  uint64_t v81 = v202;
  uint64_t v80 = v203;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v203 + 48))(v79, 1, v202) != 1)
  {
    uint64_t v199 = v74;
    uint64_t v112 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 32);
    uint64_t v113 = v187;
    v112(v187, v79, v81);
    uint64_t v114 = v188;
    sub_24162EF48();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v115 = sub_24162EF98();
    os_log_type_t v116 = sub_2416322E8();
    if (os_log_type_enabled(v115, v116))
    {
      uint64_t v117 = swift_slowAlloc();
      uint64_t v118 = swift_slowAlloc();
      uint64_t v205 = v118;
      *(_DWORD *)uint64_t v117 = 136446466;
      uint64_t v207 = sub_2411B6898(0xD00000000000002ALL, 0x800000024164DEC0, &v205);
      sub_241632C28();
      *(_WORD *)(v117 + 12) = 2080;
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v207 = sub_2411B6898(v199, v76, &v205);
      sub_241632C28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24118E000, v115, v116, "[%{public}s] Emitting version mismatch feed item for %s", (uint8_t *)v117, 0x16u);
      swift_arrayDestroy();
      uint64_t v119 = v118;
      uint64_t v113 = v187;
      MEMORY[0x245621640](v119, -1, -1);
      MEMORY[0x245621640](v117, -1, -1);

      (*(void (**)(char *, uint64_t))(v190 + 8))(v188, v200);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v190 + 8))(v114, v200);
    }
    uint64_t v120 = v201;
    v112(v201, (uint64_t)v113, v81);
    return (char *)(*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v203 + 56))(v120, 0, 1, v81);
  }
  sub_2414D5964(v79, (uint64_t (*)(void))sub_2412E0444);
  type metadata accessor for SharedSummaryTileViewController();
  sub_24162C2E8();
  (*(void (**)(char *, void, uint64_t))(v177 + 104))(v179, *MEMORY[0x263F454D0], v178);
  sub_24162C148();
  sub_2411B6854(&v205, v206);
  sub_24162C0B8();
  sub_24162BDF8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)&v205);
  sub_24162B708();
  sub_24162B708();
  uint64_t v82 = v181;
  sub_24162AEB8();
  uint64_t v83 = sub_24162AEE8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v82, 0, 1, v83);
  sub_24162C3A8();
  sub_24162BF48();
  sub_24125E028((char)v197);
  sub_24162BEA8();
  uint64_t result = (char *)objc_msgSend(self, sel_categoryWithID_, 8);
  if (!result)
  {
LABEL_36:
    __break(1u);
    return result;
  }
  uint64_t v84 = result;
  sub_24162BF88();
  v196 = v84;
  id v85 = objc_msgSend(v84, sel_displayName);
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();

  sub_24162BF78();
  sub_2414D59C4(0, (unint64_t *)&qword_26B013220, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  long long v189 = xmmword_241637EE0;
  *(_OWORD *)(inited + 16) = xmmword_241637EE0;
  *(void *)(inited + 32) = sub_24162C278();
  *(void *)(inited + 40) = v87;
  uint64_t v88 = sub_2411CB0F4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v207 = v88;
  uint64_t v89 = v192;
  uint64_t v90 = sub_24162C2E8();
  unint64_t v92 = v91;
  id v93 = objc_allocWithZone(MEMORY[0x263F46500]);
  BOOL v94 = (void *)sub_24162B478();
  sub_2411EDEA8(v90, v92);
  id v95 = objc_msgSend(v93, sel_initWithData_, v94);

  uint64_t v96 = v198;
  uint64_t v97 = v199;
  uint64_t v98 = v190;
  if (!v95) {
    goto LABEL_21;
  }
  id v99 = objc_msgSend(v95, sel_projection);
  if (!v99)
  {

    goto LABEL_21;
  }
  uint64_t v100 = v99;
  sub_2411B9D00(0, (unint64_t *)&qword_26B013120);
  id v101 = sub_2414DE3D0(v100);

  if (!v101)
  {
LABEL_21:
    uint64_t v121 = sub_24162C248();
    uint64_t v123 = v122;
    uint64_t v110 = v121;
    uint64_t v111 = v123;
    goto LABEL_22;
  }
  uint64_t v102 = sub_24162C258();
  sub_24119AF9C(&v205, v102, v103);
  swift_bridgeObjectRelease();
  uint64_t v104 = v164;
  unint64_t v105 = v163;
  uint64_t v106 = v165;
  (*(void (**)(char *, void, uint64_t))(v164 + 104))(v163, *MEMORY[0x263F44748], v165);
  uint64_t v107 = sub_24162E438();
  uint64_t v109 = v108;
  (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v106);
  uint64_t v110 = v107;
  uint64_t v111 = v109;
LABEL_22:
  sub_24119AF9C(&v205, v110, v111);
  swift_bridgeObjectRelease();
  if (v186)
  {
    sub_24119AF9C(&v205, 0xD00000000000001ALL, 0x800000024166EA90);
    swift_bridgeObjectRelease();
  }
  sub_24162BFF8();
  sub_2414D4618(0, (unint64_t *)&unk_26B010770, MEMORY[0x263F45618], MEMORY[0x263F8E0F8]);
  sub_24162BFA8();
  uint64_t v124 = swift_allocObject();
  *(_OWORD *)(v124 + 16) = v189;
  sub_24162C2C8();
  sub_24162BF98();
  sub_2414AD4E0(v124);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_24162BFD8();
  uint64_t v125 = v184;
  sub_24162EF48();
  uint64_t v126 = v96;
  uint64_t v127 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 16);
  uint64_t v128 = v185;
  v127(v185, v89, v97);
  uint64_t v129 = sub_24162EF98();
  os_log_type_t v130 = sub_2416322B8();
  if (os_log_type_enabled(v129, v130))
  {
    *(void *)&long long v189 = v127;
    uint64_t v131 = swift_slowAlloc();
    uint64_t v132 = swift_slowAlloc();
    uint64_t v205 = v132;
    *(_DWORD *)uint64_t v131 = 136446466;
    uint64_t v204 = sub_2411B6898(0xD00000000000002ALL, 0x800000024164DEC0, &v205);
    sub_241632C28();
    *(_WORD *)(v131 + 12) = 2080;
    uint64_t v133 = sub_24162C2E8();
    unint64_t v135 = v134;
    id v136 = objc_allocWithZone(MEMORY[0x263F46500]);
    uint64_t v137 = (void *)sub_24162B478();
    sub_2411EDEA8(v133, v135);
    id v138 = objc_msgSend(v136, sel_initWithData_, v137);

    if (v138)
    {
      id v139 = objc_msgSend(v138, sel_projection);
      if (v139)
      {
        sub_2411B9D00(0, (unint64_t *)&qword_26B013120);
        id v139 = sub_2414DE3D0(v139);
      }
      uint64_t v140 = v190;
    }
    else
    {
      id v139 = 0;
      uint64_t v140 = v190;
    }
    uint64_t v204 = (uint64_t)v139;
    sub_2414051F8();
    uint64_t v142 = sub_241631D48();
    uint64_t v204 = sub_2411B6898(v142, v143, &v205);
    sub_241632C28();
    swift_bridgeObjectRelease();
    uint64_t v97 = v199;
    (*(void (**)(char *, uint64_t))(v198 + 8))(v185, v199);
    _os_log_impl(&dword_24118E000, v129, v130, "[%{public}s] Appending summaryFeedItems with projection: %s", (uint8_t *)v131, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245621640](v132, -1, -1);
    MEMORY[0x245621640](v131, -1, -1);

    (*(void (**)(char *, uint64_t))(v140 + 8))(v184, v200);
    uint64_t v141 = v203;
    uint64_t v127 = (void (*)(char *, uint64_t, uint64_t))v189;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v126 + 8))(v128, v97);

    (*(void (**)(char *, uint64_t))(v98 + 8))(v125, v200);
    uint64_t v141 = v203;
  }
  uint64_t v144 = v193;
  uint64_t v145 = (void *)sub_24162C178();
  uint64_t v146 = (void *)sub_24162BDD8();
  char v147 = sub_24162BDC8();

  if ((v147 & 1) == 0)
  {
    uint64_t v148 = v89;
    uint64_t v149 = v170;
    (*(void (**)(char *, uint64_t, uint64_t))(v170 + 16))(v173, v144, v174);
    v127(v195, v148, v97);
    uint64_t v150 = v171;
    (*(void (**)(char *, uint64_t, uint64_t))(v171 + 16))(v175, v168, v176);
    unint64_t v151 = (*(unsigned __int8 *)(v149 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80);
    uint64_t v152 = v151 + v167;
    uint64_t v153 = v198;
    unint64_t v154 = (*(unsigned __int8 *)(v198 + 80) + v151 + v167 + 1) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80);
    uint64_t v155 = v154 + v166;
    unint64_t v156 = (*(unsigned __int8 *)(v150 + 80) + v154 + v166 + 1) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80);
    unint64_t v157 = (v169 + v156 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v158 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v149 + 32))(v158 + v151, v173, v174);
    *(unsigned char *)(v158 + v152) = (_BYTE)v197;
    (*(void (**)(unint64_t, char *, uint64_t))(v153 + 32))(v158 + v154, v195, v199);
    *(unsigned char *)(v158 + v155) = v186 & 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v150 + 32))(v158 + v156, v175, v176);
    uint64_t v159 = v172;
    *(void *)(v158 + v157) = v172;
    uint64_t v141 = v203;
    id v160 = v159;
    sub_24162BE48();
  }

  uint64_t v161 = v201;
  uint64_t v162 = v202;
  (*(void (**)(char *, char *, uint64_t))(v141 + 32))(v201, v191, v202);
  return (char *)(*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v141 + 56))(v161, 0, 1, v162);
}

uint64_t sub_2414D3478@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2414D5398(0);
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414D4618(0, &qword_268D01560, (uint64_t (*)(uint64_t))sub_2414D5398, MEMORY[0x263EFDDF8]);
  uint64_t v9 = v8;
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v36 = sub_24162EFA8();
  uint64_t v12 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  sub_24162EF88();
  id v16 = v15;
  id v17 = v15;
  uint64_t v18 = sub_24162EF98();
  os_log_type_t v19 = sub_2416322C8();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v32 = v7;
    uint64_t v21 = v20;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v39 = v31;
    *(_DWORD *)uint64_t v21 = 136315650;
    uint64_t v33 = v9;
    uint64_t v38 = sub_2411B6898(0xD00000000000002ALL, 0x800000024164DEC0, &v39);
    uint64_t v34 = v5;
    sub_241632C28();
    uint64_t v35 = a2;
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v38 = sub_2411B6898(0xD000000000000063, 0x800000024166EA20, &v39);
    sub_241632C28();
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v38 = (uint64_t)v15;
    id v22 = v15;
    sub_2411CE834();
    uint64_t v23 = sub_241631D58();
    uint64_t v38 = sub_2411B6898(v23, v24, &v39);
    a2 = v35;
    sub_241632C28();
    uint64_t v9 = v33;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24118E000, v18, v19, "%s %s Error: %s", (uint8_t *)v21, 0x20u);
    uint64_t v25 = v31;
    swift_arrayDestroy();
    MEMORY[0x245621640](v25, -1, -1);
    uint64_t v26 = v21;
    uint64_t v7 = v32;
    MEMORY[0x245621640](v26, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v36);
  uint64_t v27 = sub_24162C498();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v7, 1, 1, v27);
  sub_24162FB98();
  sub_2414D5A10();
  uint64_t v28 = sub_24162FCB8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v11, v9);
  *a2 = v28;
  return result;
}

id sub_2414D38C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v80 = a5;
  uint64_t v81 = a4;
  uint64_t v77 = a3;
  uint64_t v7 = sub_24162B788();
  uint64_t v75 = *(void *)(v7 - 8);
  uint64_t v76 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v74 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414D5398(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v78 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v72 - v12;
  uint64_t v14 = sub_24162EFA8();
  uint64_t v83 = *(void *)(v14 - 8);
  uint64_t v84 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v82 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v72 - v17;
  uint64_t v19 = sub_24162BF18();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v22 = (uint64_t *)((char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v79 = a2;
  uint64_t v23 = sub_24162C2E8();
  unint64_t v25 = v24;
  id v26 = objc_allocWithZone(MEMORY[0x263F46500]);
  uint64_t v27 = (void *)sub_24162B478();
  sub_2411EDEA8(v23, v25);
  id v28 = objc_msgSend(v26, sel_initWithData_, v27);

  if (v28)
  {
    id v29 = objc_msgSend(v28, sel_projection);
    if (v29)
    {
      sub_2411B9D00(0, (unint64_t *)&qword_26B013120);
      id v30 = sub_2414DE3D0(v29);

      if (v30)
      {
        sub_241325B50(v22);

        sub_24162BF08();
        (*(void (**)(uint64_t *, uint64_t))(v20 + 8))(v22, v19);
      }
    }
    else
    {
    }
  }
  char v31 = sub_241632BE8();
  swift_bridgeObjectRelease();
  sub_24162EF88();
  sub_2414D58FC(a1, (uint64_t)v13, (uint64_t (*)(void))sub_2414D5398);
  uint64_t v32 = sub_24162EF98();
  os_log_type_t v33 = sub_2416322A8();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    uint64_t v85 = v73;
    *(_DWORD *)uint64_t v34 = 136446722;
    v86[0] = sub_2411B6898(0xD00000000000002ALL, 0x800000024164DEC0, &v85);
    sub_241632C28();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v35 = v78;
    sub_2414D58FC((uint64_t)v13, v78, (uint64_t (*)(void))sub_2414D5398);
    uint64_t v36 = sub_24162C498();
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
    {
      sub_2414D5964(v35, (uint64_t (*)(void))sub_2414D5398);
      uint64_t v38 = 0;
      uint64_t v39 = 0;
    }
    else
    {
      id v72 = v32;
      os_log_type_t v40 = v33;
      uint64_t v41 = v18;
      uint64_t v42 = v13;
      char v43 = v31;
      uint64_t v44 = v35;
      uint64_t v38 = sub_24162C488();
      uint64_t v39 = v45;
      uint64_t v46 = v44;
      char v31 = v43;
      uint64_t v13 = v42;
      uint64_t v18 = v41;
      os_log_type_t v33 = v40;
      uint64_t v32 = v72;
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v46, v36);
    }
    v86[0] = v38;
    v86[1] = v39;
    sub_2414D59C4(0, (unint64_t *)&qword_26B010670, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    uint64_t v47 = sub_241631D48();
    v86[0] = sub_2411B6898(v47, v48, &v85);
    sub_241632C28();
    swift_bridgeObjectRelease();
    sub_2414D5964((uint64_t)v13, (uint64_t (*)(void))sub_2414D5398);
    *(_WORD *)(v34 + 22) = 1024;
    LODWORD(v86[0]) = v31 & 1;
    sub_241632C28();
    _os_log_impl(&dword_24118E000, v32, v33, "%{public}s Should remove notifications for %s: %{BOOL}d", (uint8_t *)v34, 0x1Cu);
    uint64_t v49 = v73;
    swift_arrayDestroy();
    MEMORY[0x245621640](v49, -1, -1);
    MEMORY[0x245621640](v34, -1, -1);
  }
  else
  {
    sub_2414D5964((uint64_t)v13, (uint64_t (*)(void))sub_2414D5398);
  }

  int v50 = *(void (**)(char *, uint64_t))(v83 + 8);
  v50(v18, v84);
  id v51 = v82;
  if ((v31 & 1) == 0) {
    return (id)sub_2414D58FC(v81, v80, (uint64_t (*)(void))sub_2412E0444);
  }
  uint64_t v52 = sub_24162C2E8();
  unint64_t v54 = v53;
  id v55 = objc_allocWithZone(MEMORY[0x263F46500]);
  uint64_t v56 = (void *)sub_24162B478();
  sub_2411EDEA8(v52, v54);
  id v57 = objc_msgSend(v55, sel_initWithData_, v56);

  if (!v57) {
    return (id)sub_2414D58FC(v81, v80, (uint64_t (*)(void))sub_2412E0444);
  }
  id result = objc_msgSend(v57, sel_projectionKind);
  if (result)
  {
    int v59 = sub_2414DEBBC(result);

    if (v59 != 2)
    {
      uint64_t v60 = (void *)sub_24162C168();
      id v61 = objc_msgSend(v60, sel_profileIdentifier);

      id v62 = objc_msgSend(v61, sel_identifier);
      uint64_t v63 = v74;
      sub_24162B768();

      unint64_t v64 = sub_2413258E8();
      unint64_t v66 = v65;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v63, v76);
      sub_24162EF88();
      swift_bridgeObjectRetain_n();
      int v67 = sub_24162EF98();
      os_log_type_t v68 = sub_2416322E8();
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v69 = swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        v86[0] = v70;
        *(_DWORD *)uint64_t v69 = 136446466;
        uint64_t v85 = sub_2411B6898(0xD00000000000002ALL, 0x800000024164DEC0, v86);
        sub_241632C28();
        *(_WORD *)(v69 + 12) = 2080;
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v85 = sub_2411B6898(v64, v66, v86);
        sub_241632C28();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24118E000, v67, v68, "%{public}s Removing any notifications that may have been delivered: %s", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x245621640](v70, -1, -1);
        MEMORY[0x245621640](v69, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v50(v51, v84);
      sub_24162C148();
      sub_2411B6854(v86, v86[3]);
      sub_24162C048();
      swift_getObjectType();
      sub_2414D59C4(0, (unint64_t *)&qword_26B013220, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      uint64_t v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_241637EE0;
      *(void *)(v71 + 32) = v64;
      *(void *)(v71 + 40) = v66;
      sub_24162C478();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v86);
    }
    return (id)sub_2414D58FC(v81, v80, (uint64_t (*)(void))sub_2412E0444);
  }
  __break(1u);
  return result;
}

uint64_t sub_2414D429C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, void *a7)
{
  id v31 = a7;
  uint64_t v35 = a6;
  int v34 = a5;
  int v30 = a3;
  uint64_t v36 = sub_24162BA08();
  uint64_t v8 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v32 = sub_24162BF28();
  uint64_t v11 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = sub_24162BEC8();
  uint64_t v15 = v14;
  uint64_t v37 = a2;
  uint64_t v16 = (void *)sub_24162C168();
  uint64_t v17 = (char *)objc_msgSend(v16, sel_profileIdentifier);

  uint64_t v18 = sub_24162C2E8();
  unint64_t v20 = v19;
  id v21 = objc_allocWithZone(MEMORY[0x263F46500]);
  id v22 = (void *)sub_24162B478();
  sub_2411EDEA8(v18, v20);
  id v23 = objc_msgSend(v21, sel_initWithData_, v22);

  if (v23)
  {
    id v24 = objc_msgSend(v23, sel_projection);
    if (v24)
    {
      sub_2411B9D00(0, (unint64_t *)&qword_26B013120);
      id v24 = sub_2414DE3D0(v24);
    }
  }
  else
  {
    id v24 = 0;
  }
  uint64_t v25 = v32;
  char v26 = v30 & 1;
  id v27 = objc_msgSend(v31, sel_currentCalendar);
  sub_24162B928();

  sub_2413250C8(v33, v15, v17, v26, v24, v34 & 1, v35, (uint64_t)v10, (uint64_t)v13, (uint64_t)sub_2413250C4, 0);
  swift_bridgeObjectRelease();

  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v36);
  sub_24162C148();
  sub_2411B6854(v38, v38[3]);
  sub_24162C048();
  swift_getObjectType();
  sub_24162C508();
  swift_unknownObjectRelease();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v38);
  sub_2411CE834();
  sub_24162FA58();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v25);
}

void sub_2414D4618(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2414D467C()
{
  if (!qword_26B010000)
  {
    sub_2414D4768(255, &qword_26B0107B8, (uint64_t (*)(uint64_t))sub_2411BDE74, MEMORY[0x263EFDEA0]);
    sub_2414D4768(255, (unint64_t *)&qword_26B010440, MEMORY[0x263F45718], MEMORY[0x263EFDCF0]);
    sub_2414D47E4();
    sub_2411EB178();
    unint64_t v0 = sub_24162F878();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010000);
    }
  }
}

void sub_2414D4768(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_2411CE834();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_2414D47E4()
{
  unint64_t result = qword_26B0107B0;
  if (!qword_26B0107B0)
  {
    sub_2414D4768(255, &qword_26B0107B8, (uint64_t (*)(uint64_t))sub_2411BDE74, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0107B0);
  }
  return result;
}

void sub_2414D486C()
{
  if (!qword_26B0103D8)
  {
    sub_2414D4958();
    sub_2414D467C();
    sub_2414D04B4(&qword_26B010118, (void (*)(uint64_t))sub_2414D4958);
    sub_2414D04B4(&qword_26B00FFF8, (void (*)(uint64_t))sub_2414D467C);
    unint64_t v0 = sub_24162F9D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0103D8);
    }
  }
}

void sub_2414D4958()
{
  if (!qword_26B010120)
  {
    sub_2414D4A14(255);
    sub_2411CE834();
    sub_2414D04B4(&qword_26B010428, sub_2414D4A14);
    unint64_t v0 = sub_24162F928();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010120);
    }
  }
}

void sub_2414D4A14(uint64_t a1)
{
}

void sub_2414D4A34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24162FA68();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2414D4A98()
{
  if (!qword_26B010368)
  {
    sub_2414D486C();
    sub_2414D04B4(&qword_26B0103D0, (void (*)(uint64_t))sub_2414D486C);
    unint64_t v0 = sub_24162F9C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010368);
    }
  }
}

void sub_2414D4B2C()
{
  if (!qword_26B010268)
  {
    sub_2414D4A98();
    sub_2414D4618(255, (unint64_t *)&unk_26B012F00, (uint64_t (*)(uint64_t))sub_2411C0990, MEMORY[0x263EFDDF8]);
    sub_2414D04B4(&qword_26B010360, (void (*)(uint64_t))sub_2414D4A98);
    sub_2412DF320();
    unint64_t v0 = sub_24162F978();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010268);
    }
  }
}

void sub_2414D4C18()
{
  if (!qword_26B010160)
  {
    sub_2414D4B2C();
    sub_2414D59C4(255, (unint64_t *)&qword_26B012F70, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_2414D04B4(&qword_26B010260, (void (*)(uint64_t))sub_2414D4B2C);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010160);
    }
  }
}

uint64_t sub_2414D4CE8()
{
  uint64_t v1 = sub_24162C1C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 9, v5);
}

uint64_t sub_2414D4D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_24162C1C8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);

  return sub_2414D04FC(a1, a2, v7, v9, v10);
}

uint64_t sub_2414D4E40()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2414D4E78@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, char *))(v2 + 16);
  uint64_t v6 = *(void *)a1;
  sub_2414D4FE4();
  uint64_t result = v5(v6, &a1[*(int *)(v7 + 48)]);
  *a2 = result;
  return result;
}

uint64_t sub_2414D4ED4()
{
  uint64_t v1 = sub_24162C1C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2414D4F64@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24162C1C8() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_2414D1928(a1, v6, a2);
}

void sub_2414D4FE4()
{
  if (!qword_26B010678)
  {
    sub_2411BDE74(255);
    sub_24162C2A8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B010678);
    }
  }
}

void sub_2414D5054()
{
  if (!qword_26B0103F8)
  {
    sub_2414D4A14(255);
    sub_2414D04B4(&qword_26B010428, sub_2414D4A14);
    unint64_t v0 = sub_24162FA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0103F8);
    }
  }
}

uint64_t sub_2414D50E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2414D06FC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(unsigned __int8 *)(v2 + 40), a2);
}

unint64_t sub_2414D5110()
{
  unint64_t result = qword_26B010698;
  if (!qword_26B010698)
  {
    sub_2414D4618(255, &qword_26B010690, (uint64_t (*)(uint64_t))sub_2414D4A14, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010698);
  }
  return result;
}

void sub_2414D5198()
{
  if (!qword_26B010090)
  {
    sub_2414D4A34(255, &qword_26B010420, sub_2412E0444);
    sub_24162C018();
    sub_2414D5250(&qword_26B010418, &qword_26B010420, sub_2412E0444);
    unint64_t v0 = sub_24162F908();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010090);
    }
  }
}

uint64_t sub_2414D5250(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2414D4A34(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2414D52A0()
{
  if (!qword_26B010228)
  {
    sub_2414D4768(255, &qword_26B010450, (uint64_t (*)(uint64_t))sub_2414D5398, MEMORY[0x263EFDCF0]);
    sub_2414D4A34(255, &qword_26B010460, sub_2414D5398);
    sub_2414D53CC();
    sub_2414D5250(&qword_26B010458, &qword_26B010460, sub_2414D5398);
    unint64_t v0 = sub_24162F978();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010228);
    }
  }
}

void sub_2414D5398(uint64_t a1)
{
}

unint64_t sub_2414D53CC()
{
  unint64_t result = qword_26B010448;
  if (!qword_26B010448)
  {
    sub_2414D4768(255, &qword_26B010450, (uint64_t (*)(uint64_t))sub_2414D5398, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010448);
  }
  return result;
}

void sub_2414D5454()
{
  if (!qword_26B010150)
  {
    sub_2414D52A0();
    sub_2412E0444(255);
    sub_2414D04B4(&qword_26B010220, (void (*)(uint64_t))sub_2414D52A0);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B010150);
    }
  }
}

unint64_t sub_2414D5500()
{
  unint64_t result = qword_26B010558;
  if (!qword_26B010558)
  {
    sub_2414D4618(255, &qword_26B010560, (uint64_t (*)(uint64_t))sub_2412E0444, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B010558);
  }
  return result;
}

uint64_t sub_2414D5588()
{
  uint64_t v1 = sub_24162C2F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v17 + 16) & ~v17;
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_24162C1C8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  sub_2412E0444(0);
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v16 = *(void *)(*(void *)(v10 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  uint64_t v13 = sub_24162C018();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v0 + v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0 + v12, v13);
  }

  return MEMORY[0x270FA0238](v0, v12 + v16, v17 | v7 | v11 | 7);
}

id sub_2414D57BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24162C2F8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_24162C1C8() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  sub_2412E0444(0);
  uint64_t v12 = v2
      + ((v9 + v10 + *(unsigned __int8 *)(*(void *)(v11 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80));

  return sub_2414D38C0(a1, v2 + v6, v2 + v9, v12, a2);
}

uint64_t sub_2414D58FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2414D5964(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2414D59C4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_2414D5A10()
{
  unint64_t result = qword_268D01568;
  if (!qword_268D01568)
  {
    sub_2414D4618(255, &qword_268D01560, (uint64_t (*)(uint64_t))sub_2414D5398, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01568);
  }
  return result;
}

uint64_t sub_2414D5A98(uint64_t a1)
{
  sub_2414D4618(0, (unint64_t *)&qword_26B00E630, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2414D5B24()
{
  uint64_t v17 = sub_24162C1C8();
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v16 = sub_24162C2F8();
  uint64_t v5 = *(void *)(v16 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + v6 + v3 + 1) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_24162C2A8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v8 + v11 + v7 + 1) & ~v11;
  uint64_t v15 = v2 | v6 | v11 | 7;
  unint64_t v13 = (*(void *)(v10 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);

  return MEMORY[0x270FA0238](v0, v13 + 8, v15);
}

uint64_t sub_2414D5D18(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24162C1C8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_24162C2F8() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = v7 + *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_24162C2A8() - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  int v11 = *(unsigned __int8 *)(v1 + v5);
  int v12 = *(unsigned __int8 *)(v1 + v8);
  unint64_t v13 = *(void **)(v1 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2414D429C(a1, v1 + v4, v11, v1 + v7, v12, v1 + v10, v13);
}

uint64_t sub_2414D5E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2414D5EA0);
}

uint64_t sub_2414D5EA0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24162C128();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      int v11 = (char *)a1 + *(int *)(a3 + 20);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24162C1C8();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_2414D5FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2414D5FE0);
}

void *sub_2414D5FE0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_24162C128();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      int v11 = (char *)v5 + *(int *)(a4 + 20);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24162C1C8();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_2414D610C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*(id *)(a1 + *(int *)(type metadata accessor for CycleDay() + 20)), sel_daySummary);
  id v4 = objc_msgSend(v3, sel_basalBodyTemperature);

  uint64_t v5 = 2;
  if (v4) {
    uint64_t v5 = (uint64_t)v4;
  }
  *a2 = v5;
}

uint64_t sub_2414D618C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2414173E8();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for CycleChartDay();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 16))(v8, a1 + *(int *)(v9 + 20), v5);
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 88))(v8, v5);
  if (result == *MEMORY[0x263F46258])
  {
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 96))(v8, v5);
    uint64_t v11 = *v8;
  }
  else
  {
    if (result != *MEMORY[0x263F46260]
      && result != *MEMORY[0x263F46268]
      && result != *MEMORY[0x263F46250])
    {
      uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v11 = 2;
  }
  *a2 = v11;
  return result;
}

void sub_2414D630C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a1[1];
  uint64_t v17 = *a1;
  char v3 = *((unsigned char *)a1 + 16);
  uint64_t v4 = a1[3];
  uint64_t v5 = (void *)a1[4];
  uint64_t v6 = sub_24162B7E8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_241631CA8();
  MEMORY[0x270FA5388](v7 - 8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  uint64_t v9 = (void *)sub_241631CC8();
  id v10 = objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v9, v8, 0);

  if (v10)
  {
    uint64_t KeyPath = swift_getKeyPath();
    id v12 = v5;
    sub_241631C38();
    id v13 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v14 = sub_241631D38();
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v17;
    *(void *)(a2 + 16) = v16;
    *(unsigned char *)(a2 + 24) = v3 & 1;
    *(void *)(a2 + 32) = v4;
    *(void *)(a2 + 40) = v12;
    *(void *)(a2 + 48) = KeyPath;
    *(void *)(a2 + 56) = v14;
    *(void *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 72) = xmmword_24163CA80;
    *(_OWORD *)(a2 + 88) = xmmword_24163CA80;
    *(void *)(a2 + 104) = 0;
    *(void *)(a2 + 112) = 0;
    *(void *)(a2 + 120) = 0x404F000000000000;
  }
  else
  {
    __break(1u);
  }
}

void sub_2414D6560(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v26 = a1[1];
  uint64_t v27 = v3;
  int v25 = *((unsigned __int8 *)a1 + 16);
  uint64_t v4 = a1[3];
  id v24 = (id)a1[4];
  uint64_t v5 = sub_24162B7E8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_241631CA8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)&v24 - v11;
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v13 = (id)qword_26B0181A0;
  uint64_t v14 = (void *)sub_241631CC8();
  id v15 = objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v14, v13, 0);

  if (v15)
  {
    uint64_t KeyPath = swift_getKeyPath();
    id v17 = v24;
    sub_241631C38();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    id v18 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v19 = sub_241631D38();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    char v22 = v25 & 1;
    char v29 = v25 & 1;
    uint64_t v23 = v27;
    *(void *)a2 = v15;
    *(void *)(a2 + 8) = v23;
    *(void *)(a2 + 16) = v26;
    *(unsigned char *)(a2 + 24) = v22;
    *(_DWORD *)(a2 + 25) = *(_DWORD *)v28;
    *(_DWORD *)(a2 + 28) = *(_DWORD *)&v28[3];
    *(void *)(a2 + 32) = v4;
    *(void *)(a2 + 40) = v17;
    *(void *)(a2 + 48) = KeyPath;
    *(void *)(a2 + 56) = v19;
    *(void *)(a2 + 64) = v21;
    *(_OWORD *)(a2 + 72) = xmmword_24163CA80;
    *(_OWORD *)(a2 + 88) = xmmword_24163CA80;
    *(void *)(a2 + 104) = 0;
    *(void *)(a2 + 112) = 0;
    *(void *)(a2 + 120) = 0x404F000000000000;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2414D6860(uint64_t a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v13[-v8];
  if (a1 == 1 || a1 == 3 || (uint64_t v10 = 0, a1 == 2))
  {
    sub_241631C38();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
    if (qword_26B0131F0 != -1) {
      swift_once();
    }
    id v11 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v10 = sub_241631D38();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return v10;
}

uint64_t sub_2414D6A9C(uint64_t a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v13[-v8];
  if (a1 == 1 || a1 == 3 || (uint64_t v10 = 0, a1 == 2))
  {
    sub_241631C38();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
    if (qword_26B0131F0 != -1) {
      swift_once();
    }
    id v11 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v10 = sub_241631D38();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return v10;
}

void sub_2414D6CD8()
{
  qword_268D241B8 = (uint64_t)&unk_26F566020;
}

uint64_t sub_2414D6CEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162C128();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2414D6DE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162C128();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t sub_2414D6EB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162C128();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_2414D6FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2414D6FB4);
}

uint64_t sub_2414D6FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162C128();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_24162C1C8();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_2414D70C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2414D70DC);
}

uint64_t sub_2414D70DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_24162C128();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_24162C1C8();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_2414D71EC()
{
  uint64_t result = sub_24162C128();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24162C1C8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2414D72C4()
{
  return sub_241196E8C(&qword_26B00FC98, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationFailureTileGenerator);
}

uint64_t sub_2414D730C()
{
  return sub_241196E3C(&qword_26B0104D8, &qword_26B0104E0, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationFailureTileGenerator.Change);
}

uint64_t sub_2414D7348()
{
  return sub_241196E8C((unint64_t *)&qword_26B010610, (void (*)(uint64_t))sub_24124D358);
}

uint64_t sub_2414D7390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2414D95E0();
  uint64_t v5 = a1 + *(int *)(v4 + 48);
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);
  sub_2414D941C(a1, a2, (uint64_t (*)(void))type metadata accessor for OvulationConfirmationState);
  uint64_t result = type metadata accessor for OvulationConfirmationFailureTileGenerator.Change(0);
  uint64_t v9 = a2 + *(int *)(result + 20);
  *(void *)uint64_t v9 = v6;
  *(unsigned char *)(v9 + 8) = v7;
  return result;
}

unint64_t sub_2414D740C(uint64_t a1)
{
  uint64_t v2 = sub_24162C018();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v25 - v7;
  sub_2412E0444(0);
  v25[1] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v15 = (char *)v25 - v14;
  sub_2411BAFC8(0, &qword_26B010780, (uint64_t (*)(uint64_t))sub_2412E0444, MEMORY[0x263F8E0F8]);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_241637EE0;
  id v18 = (char *)(v17 + v16);
  uint64_t v19 = v3;
  sub_2414D779C(a1, v18);
  sub_2414D941C((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))sub_2412E0444);
  sub_2414D94E4((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))sub_2412E0444);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
  {
    sub_2414D9484((uint64_t)v12, (uint64_t (*)(void))sub_2412E0444);
    unint64_t v20 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v21(v8, v12, v2);
    v21(v5, v8, v2);
    unint64_t v20 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v20 = sub_2411BB0F4(0, *(void *)(v20 + 16) + 1, 1, v20);
    }
    unint64_t v23 = *(void *)(v20 + 16);
    unint64_t v22 = *(void *)(v20 + 24);
    if (v23 >= v22 >> 1) {
      unint64_t v20 = sub_2411BB0F4(v22 > 1, v23 + 1, 1, v20);
    }
    *(void *)(v20 + 16) = v23 + 1;
    v21((char *)(v20+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v23), v5, v2);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v20;
}

void sub_2414D779C(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_24162EFA8();
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v58 = (char *)&v56 - v8;
  sub_24121530C();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411FEB18();
  uint64_t v13 = v12;
  uint64_t v60 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v59 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241631AC8();
  uint64_t v61 = *(void *)(v15 - 8);
  uint64_t v62 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)&v56 - v19;
  uint64_t v21 = type metadata accessor for OvulationConfirmationState();
  MEMORY[0x270FA5388](v21);
  unint64_t v23 = (id *)((char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2414D941C(a1, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for OvulationConfirmationState);
  if ((sub_2413D0E5C() & 1) == 0) {
    goto LABEL_21;
  }
  id v57 = a2;
  if (*v23)
  {
    id v24 = objc_msgSend(*v23, sel_cycles);
    if (v24)
    {
      int v25 = v24;
      sub_2413D2BF0();
      unint64_t v26 = sub_241631F28();

      if (v26 >> 62)
      {
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v50 = sub_241633068();
        swift_bridgeObjectRelease();
        if (v50 >= 2) {
          goto LABEL_6;
        }
      }
      else if (*(uint64_t *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2)
      {
LABEL_6:
        if ((v26 & 0xC000000000000001) != 0)
        {
          id v27 = (id)MEMORY[0x245620370](1, v26);
        }
        else
        {
          if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
          {
            __break(1u);
            return;
          }
          id v27 = *(id *)(v26 + 40);
        }
        id v28 = v27;
        swift_bridgeObjectRelease();
        id v29 = objc_msgSend(v28, sel_lastDayIndex);
        if (!v29)
        {

          goto LABEL_24;
        }
        int v30 = v29;
        id v56 = v28;
        objc_msgSend(v29, sel_integerValue);
        sub_241631A78();

        uint64_t v31 = v61;
        uint64_t v32 = v17;
        uint64_t v33 = v62;
        (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v20, v32, v62);
        sub_2413D24F4((uint64_t)v11);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v11, 1, v13) == 1)
        {
          (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v33);

          sub_2414D9484((uint64_t)v11, (uint64_t (*)(void))sub_24121530C);
          goto LABEL_24;
        }
        uint64_t v34 = v59;
        sub_2414D94E4((uint64_t)v11, v59, (uint64_t (*)(void))sub_2411FEB18);
        uint64_t v35 = a1 + *(int *)(type metadata accessor for OvulationConfirmationFailureTileGenerator.Change(0) + 20);
        uint64_t v36 = *(void *)v35;
        char v37 = *(unsigned char *)(v35 + 8);
        id v38 = v56;
        id v39 = objc_msgSend(v56, sel_dailyEligibleWristTemperatureCount);
        if ((v37 & 1) != 0 || (uint64_t v40 = (uint64_t)v39, v36 < sub_241631A88()) && v40 >= 1)
        {
          sub_2414D8054(v38, v34, (uint64_t)v23 + *(int *)(v21 + 20), v57);

          sub_2414D9484(v34, (uint64_t (*)(void))sub_2411FEB18);
          (*(void (**)(char *, uint64_t))(v61 + 8))(v20, v62);
          sub_2414D9484((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for OvulationConfirmationState);
          return;
        }
        uint64_t v41 = v58;
        sub_24162EF48();
        uint64_t v42 = sub_24162EF98();
        os_log_type_t v43 = sub_2416322E8();
        BOOL v44 = os_log_type_enabled(v42, v43);
        uint64_t v45 = v61;
        a2 = v57;
        if (v44)
        {
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          uint64_t v47 = swift_slowAlloc();
          uint64_t v66 = v47;
          *(_DWORD *)uint64_t v46 = 136446210;
          uint64_t v65 = sub_2411B6898(0xD000000000000029, 0x800000024164DFA0, &v66);
          a2 = v57;
          sub_241632C28();
          _os_log_impl(&dword_24118E000, v42, v43, "[%{public}s] Not submitting feed item due to dismissal date of tile or last-cycle's wrist measurement count.", v46, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x245621640](v47, -1, -1);
          MEMORY[0x245621640](v46, -1, -1);

          (*(void (**)(char *, uint64_t))(v63 + 8))(v41, v64);
          uint64_t v48 = v59;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v63 + 8))(v41, v64);
          uint64_t v48 = v34;
        }
        sub_2414D9484(v48, (uint64_t (*)(void))sub_2411FEB18);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v62);
LABEL_21:
        sub_2414D9484((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for OvulationConfirmationState);
        uint64_t v49 = sub_24162C018();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(a2, 1, 1, v49);
        return;
      }
      swift_bridgeObjectRelease();
    }
  }
LABEL_24:
  sub_24162EF48();
  id v51 = sub_24162EF98();
  os_log_type_t v52 = sub_2416322E8();
  if (os_log_type_enabled(v51, v52))
  {
    unint64_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v66 = v54;
    *(_DWORD *)unint64_t v53 = 136446210;
    uint64_t v65 = sub_2411B6898(0xD000000000000029, 0x800000024164DFA0, &v66);
    sub_241632C28();
    _os_log_impl(&dword_24118E000, v51, v52, "[%{public}s] Not submitting feed item due to no completed cycles", v53, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v54, -1, -1);
    MEMORY[0x245621640](v53, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v63 + 8))(v6, v64);
  sub_2414D9484((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for OvulationConfirmationState);
  uint64_t v55 = sub_24162C018();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v57, 1, 1, v55);
}

uint64_t sub_2414D8054@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v92 = a3;
  uint64_t v93 = a2;
  uint64_t v96 = a4;
  uint64_t v95 = sub_24162EFA8();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v111 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2411BAFC8(0, &qword_26B00F200, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v91 = (char *)&v79 - v8;
  sub_2411BAFC8(0, (unint64_t *)&qword_26B012220, MEMORY[0x263F45770], v6);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v90 = (char *)&v79 - v10;
  uint64_t v89 = sub_24162C288();
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v85 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_24162C328();
  uint64_t v86 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v84 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_24162CBF8();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v81 = (uint64_t)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24162BD98();
  uint64_t v109 = *(void *)(v14 - 8);
  uint64_t v110 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v108 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24162D368();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v104 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411BAFC8(0, &qword_26B00ED90, MEMORY[0x263F43658], v6);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v103 = (char *)&v79 - v19;
  uint64_t v102 = sub_241631AC8();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v100 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_24162DAF8();
  MEMORY[0x270FA5388](v99);
  sub_2411BAFC8(0, &qword_26B00F240, MEMORY[0x263F43640], v6);
  MEMORY[0x270FA5388](v21 - 8);
  unint64_t v23 = (char *)&v79 - v22;
  sub_2411BAFC8(0, &qword_26B00F260, MEMORY[0x263F43F20], v6);
  MEMORY[0x270FA5388](v24 - 8);
  unint64_t v26 = (char *)&v79 - v25;
  uint64_t v27 = sub_24162B7E8();
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v28 = sub_241631CA8();
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v29 = sub_24162D378();
  uint64_t v105 = *(void *)(v29 - 8);
  uint64_t v106 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v115 = (char *)&v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2412E0444(0);
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v107 = (char *)&v79 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_24162C018();
  uint64_t v112 = *(void *)(v33 - 8);
  uint64_t v113 = v33;
  MEMORY[0x270FA5388](v33);
  uint64_t v80 = (char *)&v79 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for OvulationConfirmationFailureUserData();
  MEMORY[0x270FA5388](v35 - 8);
  char v37 = (char *)&v79 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2413D2BF0();
  id v38 = a1;
  uint64_t v114 = v37;
  sub_2416317F8();
  sub_241631C38();
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v39 = (id)qword_26B0181A0;
  sub_24162B7D8();
  unint64_t v98 = 0x800000024165BFC0;
  sub_241631D38();
  uint64_t v40 = sub_24162D438();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v26, 1, 1, v40);
  uint64_t v41 = sub_24162C868();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v23, 1, 1, v41);
  uint64_t v117 = MEMORY[0x263F8EE78];
  sub_241196E8C((unint64_t *)&unk_268CFE2A0, MEMORY[0x263F44328]);
  sub_241251E00(0);
  sub_241196E8C((unint64_t *)&qword_268CFE2B0, sub_241251E00);
  sub_241632D08();
  sub_24162D9F8();
  swift_allocObject();
  uint64_t v99 = sub_24162D9E8();
  uint64_t v97 = sub_241458434((uint64_t)objc_msgSend(v38, sel_ovulationConfirmationFailure));
  id v42 = objc_msgSend(v38, sel_ovulationConfirmationFailure);
  id v43 = objc_msgSend(v38, sel_menstruationSegment);
  objc_msgSend(v43, sel_days);

  uint64_t v44 = (uint64_t)v100;
  sub_241631A78();
  sub_241458628(v44, (uint64_t)v42);
  (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v44, v102);
  sub_241631C38();
  id v45 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  id v46 = objc_msgSend(v38, sel_ovulationConfirmationFailure);
  uint64_t v47 = v103;
  sub_24145829C((uint64_t)v46);
  uint64_t v48 = sub_24162C888();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  sub_2411BAFC8(0, &qword_268CFD700, MEMORY[0x263F43C08], MEMORY[0x263F8E0F8]);
  uint64_t v49 = sub_24162CCF8();
  uint64_t v50 = *(void *)(v49 - 8);
  unint64_t v51 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_241637EE0;
  (*(void (**)(unint64_t, void, uint64_t))(v50 + 104))(v52 + v51, *MEMORY[0x263F43BD8], v49);
  sub_24162D358();
  sub_24162D338();
  uint64_t v53 = sub_241580674();
  unint64_t v55 = v54;
  uint64_t v56 = v110;
  uint64_t v57 = v109;
  sub_2414D954C();
  unint64_t v58 = v108;
  (*(void (**)(char *, void, uint64_t))(v57 + 104))(v108, *MEMORY[0x263F45548], v56);
  uint64_t v59 = (void *)sub_24162BDD8();
  sub_241196E8C(&qword_268D01580, (void (*)(uint64_t))sub_2414D954C);
  uint64_t v60 = v107;
  uint64_t v61 = v58;
  uint64_t v62 = v115;
  sub_24162BE38();

  sub_241251EC8(v53, v55);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v61, v56);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v62, v106);
  uint64_t v63 = v112;
  uint64_t v64 = v113;
  uint64_t v115 = *(char **)(v112 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v115)(v60, 0, 1, v113);
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
  uint64_t v66 = v80;
  v65(v80, v60, v64);
  uint64_t v67 = sub_24162C208();
  uint64_t v69 = v68;
  uint64_t v70 = (void (*)(uint64_t *, void))sub_24162BFE8();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_24119AF9C(&v116, v67, v69);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v70(&v117, 0);
  uint64_t v71 = v81;
  sub_2411B8B4C(v81);
  unint64_t v72 = sub_24162CBE8();
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v71, v83);
  sub_2414AD108(v72);
  swift_bridgeObjectRelease();
  sub_24162BEE8();
  (*(void (**)(char *, void, uint64_t))(v87 + 104))(v85, *MEMORY[0x263F456F8], v89);
  uint64_t v73 = v84;
  sub_24162C338();
  uint64_t v74 = v88;
  sub_24162BE68();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v73, v74);
  uint64_t v75 = v91;
  sub_241632168();
  uint64_t v76 = sub_24162AEE8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v75, 0, 1, v76);
  sub_24162C3A8();
  sub_24162BF48();
  sub_24162BE88();
  sub_2414D9484((uint64_t)v114, (uint64_t (*)(void))type metadata accessor for OvulationConfirmationFailureUserData);
  uint64_t v77 = v96;
  v65(v96, v66, v64);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v115)(v77, 0, 1, v64);
}

uint64_t sub_2414D9334()
{
  return MEMORY[0x270F366F8](0xD00000000000002BLL, 0x800000024165E2C0);
}

uint64_t sub_2414D9350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241196E8C(&qword_26B00FC90, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationFailureTileGenerator);

  return MEMORY[0x270F36D90](a1, a2, v4);
}

uint64_t sub_2414D93D4()
{
  return sub_241196E8C(&qword_26B00FC88, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationFailureTileGenerator);
}

uint64_t sub_2414D941C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2414D9484(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2414D94E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_2414D954C()
{
  if (!qword_268D01570)
  {
    type metadata accessor for OvulationConfirmationFailureTileActionHandler();
    sub_241196E8C(&qword_268D01578, (void (*)(uint64_t))type metadata accessor for OvulationConfirmationFailureTileActionHandler);
    unint64_t v0 = sub_24162D458();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01570);
    }
  }
}

void sub_2414D95E0()
{
  if (!qword_26B00F418)
  {
    type metadata accessor for OvulationConfirmationState();
    sub_2411ED5E8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B00F418);
    }
  }
}

void **sub_2414D9650(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = (int *)type metadata accessor for OvulationConfirmationState();
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)v7 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_24162BA08();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    uint64_t v14 = v4;
    v13(v10, v11, v12);
    *((unsigned char *)v7 + v8[6]) = *((unsigned char *)a2 + v8[6]);
    uint64_t v15 = v8[7];
    uint64_t v16 = (char *)v7 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_24162B718();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = v8[8];
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_24162E7D8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    uint64_t v23 = v8[9];
    uint64_t v24 = (char *)v7 + v23;
    uint64_t v25 = (char *)a2 + v23;
    *(_WORD *)uint64_t v24 = *(_WORD *)v25;
    void v24[2] = v25[2];
    uint64_t v26 = *(int *)(a3 + 20);
    uint64_t v27 = (char *)v7 + v26;
    uint64_t v28 = (char *)a2 + v26;
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
  }
  return v7;
}

uint64_t sub_2414D9820(id *a1)
{
  uint64_t v2 = (int *)type metadata accessor for OvulationConfirmationState();
  int v3 = (char *)a1 + v2[5];
  uint64_t v4 = sub_24162BA08();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = (char *)a1 + v2[7];
  uint64_t v6 = sub_24162B718();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (char *)a1 + v2[8];
  uint64_t v8 = sub_24162E7D8();
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

void **sub_2414D9928(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = (int *)type metadata accessor for OvulationConfirmationState();
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24162BA08();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v6;
  v12(v9, v10, v11);
  *((unsigned char *)a1 + v7[6]) = *((unsigned char *)a2 + v7[6]);
  uint64_t v14 = v7[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_24162B718();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = v7[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_24162E7D8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  uint64_t v22 = v7[9];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  *(_WORD *)uint64_t v23 = *(_WORD *)v24;
  void v23[2] = v24[2];
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  return a1;
}

void **sub_2414D9AAC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  *a1 = *a2;
  id v8 = v7;

  uint64_t v9 = (int *)type metadata accessor for OvulationConfirmationState();
  uint64_t v10 = v9[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_24162BA08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *((unsigned char *)a1 + v9[6]) = *((unsigned char *)a2 + v9[6]);
  uint64_t v14 = v9[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_24162B718();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = v9[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_24162E7D8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = v9[9];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  void v23[2] = v24[2];
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  char v28 = v27[8];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v28;
  return a1;
}

void *sub_2414D9C2C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for OvulationConfirmationState();
  uint64_t v7 = v6[5];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24162BA08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_24162B718();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_24162E7D8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = v6[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(_WORD *)uint64_t v20 = *(_WORD *)v21;
  void v20[2] = v21[2];
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  return a1;
}

void **sub_2414D9D98(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = (int *)type metadata accessor for OvulationConfirmationState();
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24162BA08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *((unsigned char *)a1 + v7[6]) = *((unsigned char *)a2 + v7[6]);
  uint64_t v12 = v7[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_24162B718();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v7[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_24162E7D8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = v7[9];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  void v21[2] = v22[2];
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  return a1;
}

uint64_t sub_2414D9F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2414D9F28);
}

uint64_t sub_2414D9F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OvulationConfirmationState();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_2414D9F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2414D9FA8);
}

uint64_t sub_2414D9FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OvulationConfirmationState();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_2414DA018()
{
  uint64_t result = type metadata accessor for OvulationConfirmationState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2414DA0B0()
{
  return swift_initClassMetadata2();
}

char *sub_2414DA0F4(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v11 = v4;
  id v12 = objc_msgSend(v10, sel_initWithFrame_, a1, a2, a3, a4);
  *(void *)&v11[qword_268D01588] = v12;

  v15.receiver = v11;
  v15.super_class = ObjectType;
  uint64_t v13 = (char *)objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v13, sel_addSubview_, *(void *)&v13[qword_268D01588]);
  return v13;
}

char *sub_2414DA1FC(double a1, double a2, double a3, double a4)
{
  return sub_2414DA0F4(a1, a2, a3, a4);
}

id sub_2414DA220()
{
  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  unint64_t v1 = *(void **)&v0[qword_268D01588];
  objc_msgSend(v0, sel_bounds);
  return objc_msgSend(v1, sel_setFrame_);
}

void sub_2414DA28C(void *a1)
{
  id v1 = a1;
  sub_2414DA220();
}

void sub_2414DA2D4()
{
}

uint64_t sub_2414DA310(uint64_t a1)
{
  id v3 = v1;
  return a1;
}

void sub_2414DA328(uint64_t a1)
{
}

uint64_t type metadata accessor for CycleChartReusableView()
{
  return sub_2411D9FC0();
}

void sub_2414DA350()
{
}

uint64_t sub_2414DA3AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162B788();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + 40))
  {
    uint64_t v6 = *(void *)(v1 + 32);
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    sub_24162B778();
    sub_24162B738();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_241631E08();
    swift_bridgeObjectRelease();
    sub_241631E08();
    v9[1] = v1;
    sub_241632F68();
    uint64_t v6 = v10;
    unint64_t v7 = v11;
    *(void *)(v1 + 32) = v10;
    *(void *)(v1 + 40) = v7;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_bridgeObjectRelease();
  }
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return v6;
}

uint64_t sub_2414DA51C(void *a1, char a2, uint64_t a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10)
{
  uint64_t v85 = a4;
  sub_2414DC184();
  uint64_t v82 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v74 = (char *)v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v68 = (char *)v64 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v66 = (char *)v64 - v24;
  MEMORY[0x270FA5388](v25);
  v64[2] = (char *)v64 - v26;
  sub_2414DC1DC();
  uint64_t v75 = v27;
  uint64_t v76 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v69 = (char *)v64 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414DC284();
  uint64_t v77 = v29;
  uint64_t v78 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v67 = (char *)v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414DC360();
  uint64_t v79 = v31;
  uint64_t v83 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v70 = (char *)v64 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = v10;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 40) = 0;
  uint64_t v84 = a8;
  sub_2411A3DF4(a8, (uint64_t)&v87);
  sub_2411A3DF4(a7, (uint64_t)v86);
  type metadata accessor for CycleLogNavigationHandler();
  swift_allocObject();
  uint64_t v33 = swift_retain();
  uint64_t v34 = sub_241610DF8(v33, a3, a5, a2, (uint64_t)&v87, (uint64_t)v86);
  swift_release();
  type metadata accessor for HistoricalAnalysisHeaderDataSource();
  swift_allocObject();
  uint64_t v81 = v34;
  uint64_t v35 = swift_retain();
  uint64_t v65 = sub_2415A2E7C(v35, 0);
  swift_release();
  uint64_t v36 = a7;
  uint64_t v71 = a7;
  sub_2411A3DF4(a7, (uint64_t)&v87);
  sub_2411A3DF4(a8, (uint64_t)v86);
  char v37 = *(void **)(a10 + 40);
  type metadata accessor for CycleHistoryDataSource();
  swift_allocObject();
  swift_retain();
  id v38 = (void *)a3;
  swift_retain();
  swift_retain();
  id v39 = a1;
  id v40 = a6;
  id v41 = v37;
  uint64_t v73 = a10;
  id v42 = v40;
  id v72 = v40;
  id v43 = sub_24160680C(v39, (uint64_t)v38, a5, a2, v40, (uint64_t)&v87, (uint64_t)v86, 1, a9, a10, v41);

  v64[1] = v38;
  swift_release();
  swift_release();

  swift_release();
  sub_2411A3DF4(v36, (uint64_t)&v87);
  type metadata accessor for CycleFactorsDataSource();
  swift_allocObject();
  swift_retain();
  swift_retain();
  id v44 = v39;
  id v45 = v85;
  swift_unknownObjectRetain();
  id v46 = sub_241316314(v44, (uint64_t)v38, a5, v45, a2, 1, (uint64_t)&v87);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  type metadata accessor for CycleStatisticsDataSource();
  swift_allocObject();
  id v47 = v44;
  id v48 = v41;
  uint64_t v49 = sub_24161A6A0(v47, a2, v48, 1);

  type metadata accessor for CycleDeviationsDataSource();
  swift_allocObject();
  swift_retain();
  v64[0] = v47;
  uint64_t v50 = sub_2412F5D20(v64[0], a2, a5, 1);
  swift_retain();
  sub_24162D048();
  swift_release();
  swift_retain();
  sub_24162D048();
  swift_release();
  swift_retain();
  sub_24162D048();
  swift_release();
  swift_retain();
  sub_24162D048();
  swift_release();
  sub_2414DC318(&qword_268D01638, (void (*)(uint64_t))sub_2414DC184);
  unint64_t v51 = v69;
  sub_24162F8E8();
  sub_24162C198();
  uint64_t v52 = v67;
  uint64_t v53 = v75;
  sub_24162F8C8();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v51, v53);
  sub_2414DC318(&qword_268D01658, (void (*)(uint64_t))sub_2414DC284);
  unint64_t v54 = v70;
  uint64_t v55 = v77;
  sub_24162FCE8();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v52, v55);
  sub_2414DC318(&qword_268D01660, (void (*)(uint64_t))sub_2414DC360);
  uint64_t v56 = v65;
  swift_retain();
  uint64_t v57 = v79;
  uint64_t v58 = sub_24162FDD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v54, v57);
  uint64_t v59 = v80;
  *(void *)(v80 + 24) = v58;
  sub_2411BFC90();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2416444E0;
  *(void *)(inited + 32) = v56;
  *(void *)(inited + 40) = v43;
  *(void *)(inited + 48) = v46;
  *(void *)(inited + 56) = v50;
  *(void *)(inited + 64) = v49;
  unint64_t v87 = inited;
  sub_241631F48();
  unint64_t v61 = v87;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2412922C4(v61);
  swift_bridgeObjectRelease();
  sub_24162DBD8();
  swift_allocObject();
  uint64_t v62 = sub_24162DBF8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v84);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v71);
  uint64_t result = v59;
  *(void *)(v59 + 16) = v62;
  return result;
}

uint64_t sub_2414DAE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v30 = a2;
  sub_2414AE6E4();
  uint64_t v5 = v4;
  uint64_t v6 = *(void **)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v33 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v27 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v27 - v12;
  __n128 v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v27 - v16;
  uint64_t v18 = (void (*)(void, __n128))v6[13];
  unsigned int v29 = *MEMORY[0x263F43E40];
  uint64_t v28 = (void (*)(char *, void, uint64_t))v18;
  v18((char *)v27 - v16, v15);
  v27[1] = sub_24162D808();
  char v19 = sub_24162D008();
  uint64_t v20 = (void (*)(char *, uint64_t))v6[1];
  v20(v17, v5);
  uint64_t v21 = (void (*)(char *, uint64_t, uint64_t))v6[2];
  v21(v13, v30, v5);
  if (v19)
  {
    v20(v13, v5);
    v21(v10, v31, v5);
LABEL_4:
    v20(v10, v5);
    uint64_t v23 = v33;
    v21(v33, v32, v5);
    goto LABEL_5;
  }
  v28(v17, v29, v5);
  char v22 = sub_24162D008();
  v20(v17, v5);
  v20(v13, v5);
  v21(v10, v31, v5);
  if (v22) {
    goto LABEL_4;
  }
  v28(v17, v29, v5);
  char v26 = sub_24162D008();
  v20(v17, v5);
  v20(v10, v5);
  uint64_t v23 = v33;
  v21(v33, v32, v5);
  if ((v26 & 1) == 0)
  {
    v28(v17, v29, v5);
    char v24 = sub_24162D008();
    v20(v17, v5);
    goto LABEL_6;
  }
LABEL_5:
  char v24 = 1;
LABEL_6:
  v20(v23, v5);
  return v24 & 1;
}

uint64_t sub_2414DB1EC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_2414DC40C();
  uint64_t result = sub_2414DAE6C(a1, a1 + v4[12], a1 + v4[16], a1 + v4[20]);
  *a2 = result & 1;
  return result;
}

uint64_t sub_2414DB240()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HistoricalAnalysisDataSource()
{
  return self;
}

char *sub_2414DB2AC(uint64_t a1)
{
  uint64_t v2 = sub_24162D2C8();
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  MEMORY[0x270FA5388](v2);
  id v41 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162DB48();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162BB18();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v34 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v17 = sub_24162DB38();
  MEMORY[0x245618F80](0, v17);
  uint64_t v18 = v49;
  uint64_t v19 = sub_24162DB88();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    char v37 = v6;
    uint64_t v38 = a1;
    uint64_t v49 = 0;
    uint64_t v21 = v19;
    char v22 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v23 = v10;
    uint64_t v24 = v20;
    v22(v23, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v13, v7);
    swift_getObjectType();
    sub_24162BB08();
    if (sub_24162D0D8() < 1)
    {
      uint64_t v28 = v41;
      sub_24162D298();
      uint64_t v10 = (char *)sub_24162D1D8();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v43);
      v22(v16, v7);
    }
    else
    {
      uint64_t v36 = v7;
      uint64_t v35 = v22;
      uint64_t v46 = v21;
      uint64_t v47 = v24;
      sub_2411C8460(0, (unint64_t *)&qword_268D00FB0);
      sub_2411C8460(0, &qword_268D01610);
      swift_unknownObjectRetain();
      if (swift_dynamicCast())
      {
        uint64_t v43 = v21;
        sub_2411B6CD4(v44, (uint64_t)v48);
        uint64_t v10 = (char *)sub_2411B6854(v48, v48[3]);
        sub_24162BB08();
        sub_24162DB08();
        sub_24162DB18();
        uint64_t v25 = v37;
        sub_24162DB28();
        uint64_t v26 = v49;
        uint64_t v27 = sub_24162E268();
        if (v26)
        {
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v40);
          v35(v16, v36);
          _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v48);
        }
        else
        {
          uint64_t v10 = (char *)v27;
          (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v40);
          uint64_t v31 = sub_24162DB38();
          uint64_t v32 = v35;
          if (v31)
          {
            objc_msgSend(v10, sel_contentInsets);
            objc_msgSend(v10, sel_setContentInsets_, v33 + -10.0);
            swift_unknownObjectRelease();
            v32(v16, v36);
          }
          else
          {
            v35(v16, v36);
            swift_unknownObjectRelease();
          }
          _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v48);
        }
      }
      else
      {
        uint64_t v45 = 0;
        memset(v44, 0, sizeof(v44));
        sub_2414DC0F0((uint64_t)v44, &qword_268D01618, &qword_268D01610);
        unsigned int v29 = v41;
        sub_24162D298();
        uint64_t v10 = (char *)sub_24162D1D8();
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
        v35(v16, v36);
      }
    }
  }
  return v10;
}

char *sub_2414DB824(uint64_t a1)
{
  return sub_2414DB2AC(a1);
}

uint64_t sub_2414DB848()
{
  uint64_t v0 = sub_24162DB58();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    sub_2411C8460(0, (unint64_t *)&qword_268D00FB0);
    sub_2411C8460(0, &qword_268CFF0B8);
    for (uint64_t i = 0; i != v1; ++i)
    {
      long long v6 = *(_OWORD *)(v0 + 16 * i + 32);
      swift_unknownObjectRetain_n();
      if (swift_dynamicCast())
      {
        sub_2411B6CD4(v4, (uint64_t)v7);
        sub_2411B6854(v7, v7[3]);
        sub_24162DEC8();
        swift_unknownObjectRelease();
        _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v7);
      }
      else
      {
        uint64_t v5 = 0;
        memset(v4, 0, sizeof(v4));
        swift_unknownObjectRelease();
        sub_2414DC0F0((uint64_t)v4, (unint64_t *)&unk_268CFF0C0, &qword_268CFF0B8);
      }
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2414DB9E4()
{
  return sub_2414DB848();
}

uint64_t sub_2414DBA0C()
{
  return sub_24162DBC8();
}

uint64_t sub_2414DBA30()
{
  return sub_24162DBB8();
}

uint64_t sub_2414DBA54()
{
  return sub_24162DB98();
}

uint64_t sub_2414DBA7C()
{
  return sub_24162DB68();
}

uint64_t sub_2414DBAA0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_2416314D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
  uint64_t *v7 = sub_2416325A8();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  char v8 = sub_241631508();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v16 = sub_24162DB58();
    uint64_t v10 = *(void *)(v16 + 16);
    if (v10)
    {
      uint64_t v11 = (long long *)(v16 + 32);
      sub_2411C8460(0, (unint64_t *)&qword_268D00FB0);
      sub_2411C8460(0, &qword_268CFF070);
      uint64_t v12 = a2 & 1;
      do
      {
        long long v19 = *v11;
        swift_unknownObjectRetain_n();
        if (swift_dynamicCast())
        {
          sub_2411B6CD4(v17, (uint64_t)v20);
          uint64_t v13 = v21;
          uint64_t v14 = v22;
          sub_2411B6854(v20, v21);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(a1, v12, v13, v14);
          swift_unknownObjectRelease();
          _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v20);
        }
        else
        {
          uint64_t v18 = 0;
          memset(v17, 0, sizeof(v17));
          swift_unknownObjectRelease();
          sub_2414DC0F0((uint64_t)v17, (unint64_t *)&qword_268CFF078, &qword_268CFF070);
        }
        ++v11;
        --v10;
      }
      while (v10);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2414DBD18(uint64_t a1, char a2)
{
  return sub_2414DBAA0(a1, a2);
}

uint64_t sub_2414DBD3C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24162EFA8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  swift_retain_n();
  id v10 = a2;
  uint64_t v11 = sub_24162EF98();
  os_log_type_t v12 = sub_2416322E8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v29 = v7;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = v15;
    *(_DWORD *)uint64_t v14 = 136446466;
    uint64_t v30 = *v3;
    v31[0] = v15;
    sub_2414DC14C();
    uint64_t v16 = sub_241631D48();
    uint64_t v28 = v6;
    uint64_t v30 = sub_2411B6898(v16, v17, v31);
    sub_241632C28();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    uint64_t v30 = (uint64_t)v10;
    sub_2411B9D00(0, (unint64_t *)&qword_26B012340);
    id v18 = v10;
    uint64_t v19 = sub_241631D78();
    uint64_t v30 = sub_2411B6898(v19, v20, v31);
    sub_241632C28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v11, v12, "[%{public}s] Received analysis: %{public}s, privacy: .public)", (uint8_t *)v14, 0x16u);
    uint64_t v21 = v27;
    swift_arrayDestroy();
    MEMORY[0x245621640](v21, -1, -1);
    MEMORY[0x245621640](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v22 = sub_24162DB58();
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v24 = v22 + 32;
    do
    {
      v31[1] = (uint64_t)&unk_26F5C2EB8;
      uint64_t v25 = (void *)swift_dynamicCastObjCProtocolConditional();
      if (v25) {
        objc_msgSend(v25, sel_analysisProvider_didUpdateAnalysis_, a1, v10);
      }
      v24 += 16;
      --v23;
    }
    while (v23);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2414DC0F0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_2413F05FC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_2414DC14C()
{
  unint64_t result = qword_268D01620;
  if (!qword_268D01620)
  {
    type metadata accessor for HistoricalAnalysisDataSource();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D01620);
  }
  return result;
}

void sub_2414DC184()
{
  if (!qword_268D01628)
  {
    sub_2414AE6E4();
    unint64_t v0 = sub_24162FC68();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01628);
    }
  }
}

void sub_2414DC1DC()
{
  if (!qword_268D01630)
  {
    sub_2414DC184();
    sub_2414DC318(&qword_268D01638, (void (*)(uint64_t))sub_2414DC184);
    unint64_t v0 = sub_24162F8D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01630);
    }
  }
}

void sub_2414DC284()
{
  if (!qword_268D01640)
  {
    sub_2414DC1DC();
    sub_2414DC318(&qword_268D01648, (void (*)(uint64_t))sub_2414DC1DC);
    unint64_t v0 = sub_24162F998();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01640);
    }
  }
}

uint64_t sub_2414DC318(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2414DC360()
{
  if (!qword_268D01650)
  {
    sub_2414DC284();
    sub_2414DC318(&qword_268D01658, (void (*)(uint64_t))sub_2414DC284);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01650);
    }
  }
}

uint64_t sub_2414DC3FC(unsigned char *a1)
{
  return sub_241342180((*a1 & 1) == 0);
}

void sub_2414DC40C()
{
  if (!qword_268D01668)
  {
    sub_2414AE6E4();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_268D01668);
    }
  }
}

uint64_t sub_2414DC480@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2412704EC();
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  if (v10) {
    goto LABEL_17;
  }
  uint64_t v11 = result;
  v27[0] = a1;
  swift_getKeyPath();
  sub_2412229F4();
  sub_2414DD27C(&qword_268CFCDF8, (void (*)(uint64_t))sub_2412229F4);
  sub_2414DD27C((unint64_t *)&unk_26B00E680, MEMORY[0x263F07490]);
  unint64_t v12 = sub_241631EB8();
  swift_release();
  uint64_t v5 = sub_2414DC724(v11);
  uint64_t v6 = v13;
  unint64_t v7 = sub_2414DC9DC(v11);
  uint64_t v8 = v14;
  if (v12 >> 62) {
    goto LABEL_15;
  }
  uint64_t v15 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v15)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
LABEL_17:
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v8;
    a2[4] = v9;
    return result;
  }
  while (1)
  {
    uint64_t v28 = MEMORY[0x263F8EE78];
    uint64_t result = sub_24149DD78(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0) {
      break;
    }
    uint64_t v20 = v8;
    unint64_t v21 = v7;
    uint64_t v22 = v6;
    uint64_t v23 = v5;
    uint64_t v8 = 0;
    uint64_t v9 = v28;
    uint64_t v24 = a2;
    unint64_t v25 = v12 & 0xC000000000000001;
    uint64_t v5 = v12;
    while (v15 != v8)
    {
      if (v25) {
        id v16 = (id)MEMORY[0x245620370](v8, v12);
      }
      else {
        id v16 = *(id *)(v12 + 8 * v8 + 32);
      }
      unint64_t v17 = v16;
      id v26 = v16;
      sub_2414DCC94(&v26, (uint64_t)v27);

      uint64_t v6 = v27[0];
      a2 = (uint64_t *)v27[1];
      uint64_t v28 = v9;
      unint64_t v7 = *(void *)(v9 + 16);
      unint64_t v18 = *(void *)(v9 + 24);
      if (v7 >= v18 >> 1)
      {
        sub_24149DD78(v18 > 1, v7 + 1, 1);
        uint64_t v9 = v28;
      }
      ++v8;
      *(void *)(v9 + 16) = v7 + 1;
      unint64_t v19 = v9 + 16 * v7;
      *(void *)(v19 + 32) = v6;
      *(void *)(v19 + 40) = a2;
      unint64_t v12 = v5;
      if (v15 == v8)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v5 = v23;
        a2 = v24;
        unint64_t v7 = v21;
        uint64_t v6 = v22;
        uint64_t v8 = v20;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v15 = sub_241633068();
    swift_bridgeObjectRelease();
    if (!v15) {
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2414DC724(uint64_t a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v13[-v8];
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      sub_241631C38();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v10 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v11 = sub_241631D38();
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
      return v11;
    default:
      sub_241633038();
      __break(1u);
      JUMPOUT(0x2414DC9CCLL);
  }
}

uint64_t sub_2414DC9DC(uint64_t a1)
{
  uint64_t v2 = sub_24162B7E8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241631CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v13[-v8];
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      sub_241631C38();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v9, v3);
      if (qword_26B0131F0 != -1) {
        swift_once();
      }
      id v10 = (id)qword_26B0181A0;
      sub_24162B7D8();
      uint64_t v11 = sub_241631D38();
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
      return v11;
    default:
      sub_241633038();
      __break(1u);
      JUMPOUT(0x2414DCC84);
  }
}

uint64_t sub_2414DCC94@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v3 = sub_24162B5A8();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v61 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162B658();
  uint64_t v65 = *(void *)(v5 - 8);
  uint64_t v66 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v59 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v60 = (char *)&v52 - v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v62 = (char *)&v52 - v10;
  sub_2411EB6E0();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v52 - v16;
  uint64_t v18 = sub_24162B718();
  unint64_t v19 = *(void **)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v52 - v23;
  sub_2411EB748();
  uint64_t v55 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v56 = (char *)&v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v28 = MEMORY[0x270FA5388](v27).n128_u64[0];
  uint64_t v58 = (uint64_t)&v52 - v29;
  id v30 = *a1;
  id v31 = objc_msgSend(*a1, sel_startDate, v28);
  sub_24162B6A8();

  id v32 = objc_msgSend(v30, sel_endDate);
  sub_24162B6A8();

  sub_2414DD27C((unint64_t *)&unk_26B00E680, MEMORY[0x263F07490]);
  uint64_t v54 = v18;
  uint64_t result = sub_241631BD8();
  if (result)
  {
    uint64_t v34 = v14;
    uint64_t v35 = *(int *)(v12 + 48);
    uint64_t v53 = v12;
    uint64_t v36 = v17;
    uint64_t v67 = v17;
    char v37 = &v17[v35];
    uint64_t v38 = (void (*)(char *, char *, uint64_t))v19[4];
    uint64_t v39 = v54;
    v38(v36, v24, v54);
    uint64_t v52 = v37;
    v38(v37, v21, v39);
    uint64_t v40 = &v14[*(int *)(v12 + 48)];
    id v41 = (void (*)(char *, char *, uint64_t))v19[2];
    v41(v34, v67, v39);
    v41(v40, v37, v39);
    uint64_t v42 = (uint64_t)v56;
    v38(v56, v34, v39);
    uint64_t v43 = (void (*)(char *, uint64_t))v19[1];
    v43(v40, v39);
    id v44 = &v34[*(int *)(v53 + 48)];
    v38(v34, v67, v39);
    v38(v44, v52, v39);
    v38((char *)(v42 + *(int *)(v55 + 36)), v44, v39);
    v43(v34, v39);
    uint64_t v45 = v58;
    sub_2411EB824(v42, v58);
    uint64_t v46 = v59;
    sub_24162AD98();
    uint64_t v47 = v61;
    sub_24162B578();
    id v48 = v60;
    sub_24162B648();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v47, v64);
    uint64_t v49 = v66;
    uint64_t v50 = *(void (**)(char *, uint64_t))(v65 + 8);
    v50(v46, v66);
    unint64_t v51 = v62;
    sub_24162B638();
    v50(v48, v49);
    sub_2414DD27C(&qword_268CFD1D8, MEMORY[0x263F07308]);
    sub_241632158();
    v50(v51, v49);
    return sub_241319B90(v45);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2414DD27C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_2414DD2C4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17RoundedShadowView_roundedView;
  id v10 = objc_allocWithZone(MEMORY[0x263F82E00]);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_init);

  v26.receiver = v11;
  v26.super_class = (Class)type metadata accessor for RoundedShadowView();
  uint64_t v12 = (char *)objc_msgSendSuper2(&v26, sel_initWithFrame_, a1, a2, a3, a4);
  id v13 = objc_msgSend(v12, sel_layer);
  objc_msgSend(v13, sel_setShadowRadius_, 20.0);

  id v14 = objc_msgSend(v12, sel_layer);
  uint64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_blackColor);
  id v17 = objc_msgSend(v16, sel_CGColor);

  objc_msgSend(v14, sel_setShadowColor_, v17);
  id v18 = objc_msgSend(v12, sel_layer);
  LODWORD(v19) = 1032805417;
  objc_msgSend(v18, sel_setShadowOpacity_, v19);

  id v20 = objc_msgSend(v12, sel_layer);
  objc_msgSend(v20, sel_setMasksToBounds_, 0);

  unint64_t v21 = *(void **)&v12[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17RoundedShadowView_roundedView];
  sub_24162BBE8();
  id v22 = (id)*MEMORY[0x263F15A20];
  sub_2416328C8();

  objc_msgSend(v21, sel_setClipsToBounds_, 0);
  id v23 = objc_msgSend(v21, sel_layer);
  objc_msgSend(v23, sel_setMasksToBounds_, 1);

  id v24 = objc_msgSend(v15, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v21, sel_setBackgroundColor_, v24);

  objc_msgSend(v12, sel_addSubview_, v21);
  MEMORY[0x24561FDC0](v12);

  return v12;
}

id sub_2414DD578(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17RoundedShadowView_roundedView;
  id v4 = objc_allocWithZone(MEMORY[0x263F82E00]);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);

  v22.receiver = v5;
  v22.super_class = (Class)type metadata accessor for RoundedShadowView();
  id v6 = objc_msgSendSuper2(&v22, sel_initWithCoder_, a1);
  id v7 = v6;
  if (v6)
  {
    uint64_t v8 = (char *)v6;
    id v9 = objc_msgSend(v8, sel_layer);
    objc_msgSend(v9, sel_setShadowRadius_, 20.0);

    id v10 = objc_msgSend(v8, sel_layer);
    uint64_t v11 = self;
    id v12 = objc_msgSend(v11, sel_blackColor);
    id v13 = objc_msgSend(v12, sel_CGColor);

    objc_msgSend(v10, sel_setShadowColor_, v13);
    id v14 = objc_msgSend(v8, sel_layer);
    LODWORD(v15) = 1032805417;
    objc_msgSend(v14, sel_setShadowOpacity_, v15);

    id v16 = objc_msgSend(v8, sel_layer);
    objc_msgSend(v16, sel_setMasksToBounds_, 0);

    id v17 = *(void **)&v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17RoundedShadowView_roundedView];
    sub_24162BBE8();
    id v18 = (id)*MEMORY[0x263F15A20];
    sub_2416328C8();

    objc_msgSend(v17, sel_setClipsToBounds_, 0);
    id v19 = objc_msgSend(v17, sel_layer);
    objc_msgSend(v19, sel_setMasksToBounds_, 1);

    id v20 = objc_msgSend(v11, sel_tertiarySystemBackgroundColor);
    objc_msgSend(v17, sel_setBackgroundColor_, v20);

    objc_msgSend(v8, sel_addSubview_, v17);
    MEMORY[0x24561FDC0](v8);
  }
  return v7;
}

id sub_2414DD920()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RoundedShadowView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RoundedShadowView()
{
  return self;
}

BOOL sub_2414DD988()
{
  return objc_msgSend(v0, sel_menstruationLevel) == (id)4;
}

BOOL sub_2414DD9B4()
{
  return objc_msgSend(v0, sel_bleedingInPregnancyLevel) == (id)1;
}

BOOL sub_2414DD9E0()
{
  return objc_msgSend(v0, sel_bleedingAfterPregnancyLevel) == (id)1;
}

id sub_2414DDA0C()
{
  id v1 = objc_msgSend(v0, sel_daySummary);
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  id v3 = objc_msgSend(v1, sel_intermenstrualBleeding);

  return v3;
}

unint64_t sub_2414DDA68(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6F4E646F69726570;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x7373696D736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2414DDB30(unsigned __int8 *a1, char *a2)
{
  return sub_241495370(*a1, *a2);
}

uint64_t sub_2414DDB3C()
{
  return sub_2412065B0();
}

uint64_t sub_2414DDB44()
{
  return sub_241256AF8();
}

uint64_t sub_2414DDB4C()
{
  return sub_24125727C();
}

uint64_t sub_2414DDB54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2414DDBB0();
  *a1 = result;
  return result;
}

unint64_t sub_2414DDB84@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2414DDA68(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2414DDBB0()
{
  unint64_t v0 = sub_241633108();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_2414DDBFC(uint64_t a1, uint64_t a2)
{
  if (_sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v6 = sub_241633218();
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (_sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() == a1 && v9 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 4;
  }
  char v11 = sub_241633218();
  swift_bridgeObjectRelease();
  if (v11)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  if (_sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v14 = sub_241633218();
  swift_bridgeObjectRelease();
  if (v14)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if (_sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() == a1 && v15 == a2)
  {
    uint64_t v7 = 2;
    swift_bridgeObjectRelease_n();
    return v7;
  }
  char v16 = sub_241633218();
  swift_bridgeObjectRelease();
  if (v16)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  if (_sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() == a1 && v17 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 3;
  }
  char v18 = sub_241633218();
  swift_bridgeObjectRelease();
  if (v18)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  if (_sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0() == a1 && v19 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 5;
  }
  char v20 = sub_241633218();
  swift_bridgeObjectRelease();
  if (v20)
  {
    swift_bridgeObjectRelease();
    return 5;
  }

  return sub_2414DDBB0();
}

unsigned char *_s16ActionIdentifierOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2414DDFA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16ActionIdentifierOMa()
{
  return &_s16ActionIdentifierON;
}

unint64_t sub_2414DDFE4()
{
  unint64_t result = qword_268D01678;
  if (!qword_268D01678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01678);
  }
  return result;
}

id sub_2414DE038@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24162EFA8();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = MEMORY[0x270FA5388](v4).n128_u64[0];
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, sel_hasProjectionKind, v6))
  {
LABEL_4:
    sub_24162EF48();
    char v11 = sub_24162EF98();
    os_log_type_t v12 = sub_2416322C8();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v25 = a2;
      uint64_t v15 = v14;
      uint64_t v27 = v14;
      *(_DWORD *)id v13 = 136446210;
      uint64_t v26 = sub_2411B6898(0xD000000000000031, 0x800000024166ED00, &v27);
      sub_241632C28();
      _os_log_impl(&dword_24118E000, v11, v12, "[%{public}s] Unable to get valid projectionKind from HKCodableMenstrualCyclesProjectionHighlightTileViewModel", v13, 0xCu);
      swift_arrayDestroy();
      uint64_t v16 = v15;
      a2 = v25;
      MEMORY[0x245621640](v16, -1, -1);
      MEMORY[0x245621640](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t v17 = type metadata accessor for SharedProjectionHighlightTileViewModelContextData();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  id result = objc_msgSend(a1, sel_projectionKind);
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  char v10 = sub_2414DEBBC(result);
  if (v10 == 2) {
    goto LABEL_4;
  }
  char v18 = v10;
  if (!objc_msgSend(a1, sel_hasProjection))
  {
    id v20 = 0;
    goto LABEL_11;
  }
  id result = objc_msgSend(a1, sel_projection);
  if (!result)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v19 = result;
  sub_2411B9D00(0, (unint64_t *)&qword_26B013120);
  id v20 = sub_2414DE3D0(v19);
LABEL_11:
  char v21 = v18 & 1;
  uint64_t v22 = type metadata accessor for SharedProjectionHighlightTileViewModelContextData();
  sub_2411B9D00(0, &qword_26B00EC78);
  sub_2411BEE84();
  sub_24162DAC8();

  *(void *)a2 = v20;
  *(unsigned char *)(a2 + 8) = v21;
  id v23 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);

  return (id)v23(a2, 0, 1, v22);
}

id sub_2414DE3D0(void *a1)
{
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, sel_hasStartMean)
    || !objc_msgSend(a1, sel_hasStartStandardDeviation)
    || !objc_msgSend(a1, sel_hasEndMean)
    || !objc_msgSend(a1, sel_hasEndStandardDeviation)
    || !objc_msgSend(a1, sel_hasAllDays)
    || !objc_msgSend(a1, sel_hasIsPartiallyLogged)
    || !objc_msgSend(a1, sel_hasDaysOffsetFromCalendarMethod))
  {
    goto LABEL_14;
  }
  id result = objc_msgSend(a1, sel_allDays);
  if (result)
  {
    uint64_t v7 = result;
    if (objc_msgSend(result, sel_hasDayIndex) && objc_msgSend(v7, sel_hasDuration))
    {
      id v8 = objc_msgSend(v7, sel_dayIndex);
      id v9 = objc_msgSend(v7, sel_duration);

      if (objc_msgSend(a1, sel_hasPredictionPrimarySource)) {
        uint64_t v10 = (uint64_t)objc_msgSend(a1, sel_predictionPrimarySource);
      }
      else {
        uint64_t v10 = 1;
      }
      id v19 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      objc_msgSend(a1, sel_startMean);
      double v21 = v20;
      objc_msgSend(a1, sel_startStandardDeviation);
      double v23 = v22;
      objc_msgSend(a1, sel_endMean);
      double v25 = v24;
      objc_msgSend(a1, sel_endStandardDeviation);
      id v18 = objc_msgSend(v19, sel_initWithStartMean_startStandardDeviation_endMean_endStandardDeviation_allDays_partiallyLogged_daysOffsetFromCalendarMethod_predictionPrimarySource_, v8, v9, objc_msgSend(a1, sel_isPartiallyLogged), objc_msgSend(a1, sel_daysOffsetFromCalendarMethod), v10, v21, v23, v25, v26);

      return v18;
    }

LABEL_14:
    sub_24162EF48();
    char v11 = sub_24162EF98();
    os_log_type_t v12 = sub_2416322C8();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      id v28 = a1;
      uint64_t v15 = v14;
      uint64_t v30 = v14;
      *(_DWORD *)id v13 = 136446210;
      uint64_t v16 = sub_2416333E8();
      uint64_t v29 = sub_2411B6898(v16, v17, &v30);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v11, v12, "[%{public}s] Unable to get valid HKMCProjection from HKCodableMenstrualCyclesProjection", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v15, -1, -1);
      MEMORY[0x245621640](v13, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  __break(1u);
  return result;
}

id sub_2414DE7D4(void *a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v3 = result;
    objc_msgSend(a1, sel_startMean);
    objc_msgSend(v3, sel_setStartMean_);
    objc_msgSend(a1, sel_startStandardDeviation);
    objc_msgSend(v3, sel_setStartStandardDeviation_);
    objc_msgSend(a1, sel_endMean);
    objc_msgSend(v3, sel_setEndMean_);
    objc_msgSend(a1, sel_endStandardDeviation);
    objc_msgSend(v3, sel_setEndStandardDeviation_);
    sub_2411B9D00(0, &qword_26B010748);
    id v4 = objc_msgSend(a1, sel_allDays);
    objc_msgSend(a1, sel_allDays);
    uint64_t v5 = (void *)MEMORY[0x24561FBC0](v4);
    objc_msgSend(v3, sel_setAllDays_, v5);

    objc_msgSend(v3, sel_setIsPartiallyLogged_, objc_msgSend(a1, sel_isPartiallyLogged));
    objc_msgSend(v3, sel_setDaysOffsetFromCalendarMethod_, objc_msgSend(a1, sel_daysOffsetFromCalendarMethod));
    objc_msgSend(v3, sel_setPredictionPrimarySource_, objc_msgSend(a1, sel_predictionPrimarySource));

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2414DE984()
{
  return objc_msgSend(v0, sel_hasLatestSupportedVersion);
}

id sub_2414DE9A8(char a1)
{
  return objc_msgSend(v1, sel_setHasLatestSupportedVersion_, a1 & 1);
}

id (*sub_2414DE9BC(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasLatestSupportedVersion);
  return sub_2414DEA10;
}

id sub_2414DEA10(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasLatestSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_2414DEA28()
{
  return objc_msgSend(v0, sel_latestSupportedVersion);
}

id (*sub_2414DEA38(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_latestSupportedVersion);
  return sub_2414DEA8C;
}

id sub_2414DEA8C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setLatestSupportedVersion_, *(void *)a1);
}

id sub_2414DEAA0()
{
  return objc_msgSend(v0, sel_hasMinimumSupportedVersion);
}

id sub_2414DEAC4(char a1)
{
  return objc_msgSend(v1, sel_setHasMinimumSupportedVersion_, a1 & 1);
}

id (*sub_2414DEAD8(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasMinimumSupportedVersion);
  return sub_2414DEB2C;
}

id sub_2414DEB2C(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasMinimumSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_2414DEB44()
{
  return objc_msgSend(v0, sel_minimumSupportedVersion);
}

id (*sub_2414DEB54(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_minimumSupportedVersion);
  return sub_2414DEBA8;
}

id sub_2414DEBA8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setMinimumSupportedVersion_, *(void *)a1);
}

uint64_t sub_2414DEBBC(void *a1)
{
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, sel_hasKind)) {
    goto LABEL_4;
  }
  uint64_t result = (uint64_t)objc_msgSend(a1, sel_kind);
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v7 = (void *)result;
  _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();

  unint64_t v8 = sub_241633108();
  swift_bridgeObjectRelease();
  if (v8 < 2)
  {
    uint64_t v13 = sub_241633108();

    swift_bridgeObjectRelease();
    if (v13 == 1) {
      unsigned int v14 = 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v13) {
      return v14;
    }
    else {
      return 0;
    }
  }
  else
  {
LABEL_4:
    sub_24162EF48();
    id v9 = sub_24162EF98();
    os_log_type_t v10 = sub_2416322C8();
    if (os_log_type_enabled(v9, v10))
    {
      char v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v16 = v12;
      *(_DWORD *)char v11 = 136446210;
      uint64_t v15 = sub_2411B6898(0x697463656A6F7250, 0xEE00646E694B6E6FLL, &v16);
      sub_241632C28();
      _os_log_impl(&dword_24118E000, v9, v10, "[%{public}s] Unable to get valid ProjectionKind from HKCodableMenstrualCyclesProjectionKind", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v12, -1, -1);
      MEMORY[0x245621640](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 2;
  }
}

uint64_t type metadata accessor for SleepingWristTemperatureDataTypeDetailDebugActionProvider()
{
  return self;
}

void **sub_2414DEEB4(void *a1)
{
  sub_2414E12F0((uint64_t *)v10);
  long long v6 = v10[0];
  long long v7 = v10[1];
  long long v8 = v10[2];
  long long v9 = v10[3];
  sub_2414E14C0();
  id v3 = objc_allocWithZone(v2);
  sub_2414E1570((uint64_t)v10);
  uint64_t v4 = (void *)sub_2416305F8();
  objc_msgSend(a1, sel_showViewController_sender_, v4, 0, v6, v7, v8, v9);

  return sub_2414E15D4((void **)v10);
}

uint64_t type metadata accessor for SleepingWristTemperatureDataTypeDetailConfigurationProvider()
{
  return self;
}

uint64_t sub_2414DEF60()
{
  return sub_241632438();
}

uint64_t sub_2414DEFD4()
{
  uint64_t v0 = sub_24162D8F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162D8A8();
  uint64_t v4 = sub_24162D8E8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t type metadata accessor for InternalKaliLiveOnSettingsComponent.Item()
{
  return self;
}

void sub_2414DF0CC(uint64_t a1, void *a2)
{
}

id sub_2414DF0D8()
{
  uint64_t v1 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
  sub_2414E36DC(0, &qword_268D01868, MEMORY[0x263F8D6C8], MEMORY[0x263F1B5D0]);
  sub_241631118();
  sub_241631118();
  long long v5 = *(_OWORD *)(v0 + 40);
  sub_2414E36DC(0, &qword_268D01870, MEMORY[0x263F8D538], v1);
  sub_241631118();
  id result = objc_msgSend(*(id *)v0, sel__rollingBaselineConfiguration, v5);
  if (result)
  {
    id v3 = result;
    id v4 = objc_msgSend(result, sel_options);

    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A6B0]), sel_initWithMinimumSampleCount_maximumSampleCount_maximumWindowDuration_options_, *(void *)&v6, *(void *)&v6, v4, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2414DF214(void *a1)
{
  objc_msgSend(a1, sel_minimumSampleCount);
  long long v5 = *(_OWORD *)(v1 + 8);
  id v3 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
  sub_2414E36DC(0, &qword_268D01868, MEMORY[0x263F8D6C8], MEMORY[0x263F1B5D0]);
  sub_241631128();
  objc_msgSend(a1, sel_maximumSampleCount);
  long long v5 = *(_OWORD *)(v1 + 24);
  sub_241631128();
  objc_msgSend(a1, sel_maximumWindowDuration);
  long long v5 = *(_OWORD *)(v1 + 40);
  sub_2414E35F8((uint64_t)&v5 + 8, (uint64_t)v6, (uint64_t (*)(void))sub_2414E3660);
  sub_2414876BC((uint64_t)v6);
  sub_2414E36DC(0, &qword_268D01870, MEMORY[0x263F8D538], v3);
  sub_241631128();

  return sub_2414E3728((uint64_t)&v5);
}

uint64_t sub_2414DF36C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v38 = a2;
  sub_2414E30F4();
  uint64_t v4 = v3;
  uint64_t v39 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  double v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  long long v9 = (char *)&v34 - v8;
  sub_2414E2214();
  uint64_t v11 = v10;
  uint64_t v37 = *(void *)(v10 - 8);
  uint64_t v12 = v37;
  MEMORY[0x270FA5388](v10);
  unsigned int v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v34 - v16;
  uint64_t v36 = (char *)&v34 - v16;
  sub_241630528();
  uint64_t v45 = sub_241630C08();
  uint64_t v46 = v18;
  char v47 = v19 & 1;
  uint64_t v48 = v20;
  sub_241630528();
  uint64_t v41 = sub_241630C08();
  uint64_t v42 = v21;
  char v43 = v22 & 1;
  uint64_t v44 = v23;
  uint64_t v40 = a1;
  sub_2414E1ED4(0, &qword_268D016F8, (uint64_t (*)(uint64_t))sub_2414E22A8, MEMORY[0x263F1BAC8]);
  sub_2414E33EC();
  sub_241631328();
  sub_2414E3158();
  sub_2414E1F38(&qword_268D01880, 255, (void (*)(uint64_t))sub_2414E3158);
  sub_241631338();
  double v24 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v35 = v14;
  v24(v14, v17, v11);
  double v25 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  double v26 = v6;
  uint64_t v27 = v6;
  uint64_t v28 = v4;
  v25(v27, v9, v4);
  uint64_t v29 = v38;
  v24(v38, v14, v11);
  sub_2414E21A4();
  v25(&v29[*(int *)(v30 + 48)], v26, v28);
  id v31 = *(void (**)(char *, uint64_t))(v39 + 8);
  v31(v9, v28);
  id v32 = *(void (**)(char *, uint64_t))(v37 + 8);
  v32(v36, v11);
  v31(v26, v28);
  return ((uint64_t (*)(char *, uint64_t))v32)(v35, v11);
}

uint64_t sub_2414DF788@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v69 = a2;
  sub_2414E30A4(0, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v64 = v3;
  uint64_t v63 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v60 = (char *)&v58 - v4;
  sub_241486FEC();
  uint64_t v62 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v76 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v61 = (char *)&v58 - v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v74 = (uint64_t)&v58 - v10;
  sub_2414E2884();
  uint64_t v68 = v11;
  uint64_t v67 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v75 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v70 = (char *)&v58 - v14;
  sub_2414E2330();
  uint64_t v66 = v15;
  uint64_t v65 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v77 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v73 = (char *)&v58 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v58 - v20;
  MEMORY[0x270FA5388](v22);
  double v24 = (char *)&v58 - v23;
  uint64_t v72 = sub_241630528();
  long long v81 = *(_OWORD *)(a1 + 8);
  uint64_t v59 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
  sub_2414E36DC(0, &qword_268D01868, MEMORY[0x263F8D6C8], MEMORY[0x263F1B5D0]);
  sub_241631138();
  uint64_t v80 = a1;
  sub_2414E23C4();
  sub_2414E2724();
  uint64_t v71 = v24;
  sub_2416311D8();
  sub_241630528();
  long long v81 = *(_OWORD *)(a1 + 24);
  sub_241631138();
  uint64_t v79 = a1;
  uint64_t v72 = (uint64_t)v21;
  sub_2416311D8();
  sub_241630528();
  long long v81 = *(_OWORD *)(a1 + 40);
  sub_2414E36DC(0, &qword_268D01870, MEMORY[0x263F8D538], v59);
  sub_241631138();
  uint64_t v78 = a1;
  sub_2414E2918();
  sub_2414E2E38();
  double v25 = v70;
  double v26 = v60;
  sub_2416311D8();
  sub_241630528();
  uint64_t v27 = (_OWORD *)swift_allocObject();
  long long v28 = *(_OWORD *)(a1 + 16);
  v27[1] = *(_OWORD *)a1;
  void v27[2] = v28;
  long long v29 = *(_OWORD *)(a1 + 48);
  v27[3] = *(_OWORD *)(a1 + 32);
  v27[4] = v29;
  sub_2414E1570(a1);
  sub_241631188();
  id v30 = sub_2414DF0D8();
  id v31 = objc_msgSend(*(id *)a1, sel__rollingBaselineConfiguration);
  if (v31)
  {
    id v32 = v31;
    sub_2411B9D00(0, &qword_268D01850);
    id v33 = v30;
    char v34 = sub_2416329B8();

    id v30 = v32;
  }
  else
  {
    char v34 = 0;
  }

  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = swift_allocObject();
  *(unsigned char *)(v36 + 16) = v34 & 1;
  uint64_t v37 = v63;
  uint64_t v38 = (uint64_t)v61;
  uint64_t v39 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v61, v26, v64);
  uint64_t v40 = (uint64_t *)(v38 + *(int *)(v62 + 36));
  uint64_t *v40 = KeyPath;
  v40[1] = (uint64_t)sub_241487264;
  v40[2] = v36;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v39);
  uint64_t v41 = v74;
  sub_2414E35F8(v38, v74, (uint64_t (*)(void))sub_241486FEC);
  uint64_t v42 = v65;
  char v43 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  uint64_t v44 = v73;
  uint64_t v45 = v66;
  v43(v73, v71, v66);
  v43(v77, (char *)v72, v45);
  uint64_t v46 = v67;
  char v47 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  uint64_t v48 = v25;
  uint64_t v49 = v68;
  v47(v75, v48, v68);
  sub_2414E3538(v41, v76);
  uint64_t v50 = v69;
  v43(v69, v44, v45);
  sub_2414E22A8();
  uint64_t v52 = v51;
  v43(&v50[*(int *)(v51 + 48)], v77, v45);
  uint64_t v53 = v75;
  v47(&v50[*(int *)(v52 + 64)], v75, v49);
  uint64_t v54 = v76;
  sub_2414E3538(v76, (uint64_t)&v50[*(int *)(v52 + 80)]);
  sub_2414E359C(v74);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v46 + 8);
  v55(v70, v49);
  uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v56(v72, v45);
  v56((uint64_t)v71, v45);
  sub_2414E359C(v54);
  v55(v53, v49);
  v56((uint64_t)v77, v45);
  return ((uint64_t (*)(char *, uint64_t))v56)(v73, v45);
}

uint64_t sub_2414E00D4(void **a1, uint64_t a2, void (*a3)(uint64_t, void **))
{
  return sub_2416312E8();
}

uint64_t sub_2414E0210@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_241630518();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = *a1;
  sub_241630508();
  sub_2416304F8();
  sub_2416304D8();
  sub_2416304F8();
  sub_241630538();
  uint64_t result = sub_241630C08();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v8 & 1;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v5;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v5;
  *(_WORD *)(a2 + 56) = 0;
  return result;
}

uint64_t sub_2414E032C(_OWORD *a1)
{
  sub_2414E3754();
  swift_getKeyPath();
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = a1[1];
  v2[1] = *a1;
  v2[2] = v3;
  long long v4 = a1[3];
  v2[3] = a1[2];
  v2[4] = v4;
  sub_2414E1570((uint64_t)a1);
  sub_2414E1ED4(0, &qword_268D01798, MEMORY[0x263F063B0], MEMORY[0x263F8D488]);
  sub_2414E2A20(0);
  sub_2414E2DB0();
  sub_2414E1F38(&qword_268CFC428, 255, MEMORY[0x263F063B0]);
  sub_2414E2EEC(&qword_268D01800, sub_2414E2A20, (void (*)(void))sub_2414E2F78, (void (*)(void))sub_2414E306C);
  return sub_2416312E8();
}

void sub_2414E04C8(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  long long v3 = *(void **)(a1 + 56);
  long long v4 = (void *)sub_24162B068();
  id v5 = objc_msgSend(v3, sel_stringFromDateComponents_, v4);

  if (v5)
  {
    uint64_t v6 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    uint64_t v8 = v7;

    uint64_t v18 = v6;
    uint64_t v19 = v8;
    sub_2411D662C();
    uint64_t v9 = sub_241630C28();
    uint64_t v11 = v10;
    LOBYTE(v8) = v12;
    uint64_t v14 = v13;
    uint64_t v15 = (void *)sub_24162B068();
    objc_msgSend(v15, sel_hk_approximateDuration, v18, v19);
    uint64_t v17 = v16;

    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 16) = v8 & 1;
    *(void *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v17;
    *(unsigned char *)(a2 + 40) = 0;
    *(void *)(a2 + 48) = v17;
    *(_WORD *)(a2 + 56) = 0;
  }
  else
  {
    __break(1u);
  }
}

id sub_2414E05C0(id *a1)
{
  id result = objc_msgSend(*a1, sel__rollingBaselineConfiguration);
  if (result) {
    return (id)sub_2414DF214(result);
  }
  __break(1u);
  return result;
}

uint64_t sub_2414E0604@<X0>(uint64_t a1@<X8>)
{
  uint64_t v15 = a1;
  sub_2414E1ED4(0, &qword_268D01830, MEMORY[0x263F445B0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1);
  long long v3 = (char *)v14 - v2;
  sub_2414E3158();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[1] = sub_241630528();
  uint64_t v9 = (void *)*MEMORY[0x263F097F8];
  id v10 = objc_allocWithZone(MEMORY[0x263F0A410]);
  id v11 = v9;
  objc_msgSend(v10, sel_init);
  sub_24162E0D8();
  uint64_t v12 = sub_24162E0E8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v3, 0, 1, v12);
  sub_2414E3208();
  sub_241630058();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15, v8, v5);
}

uint64_t sub_2414E087C()
{
  sub_2414E2110();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v6 = v0[1];
  long long v15 = *v0;
  long long v16 = v6;
  long long v7 = v0[3];
  long long v17 = v0[2];
  long long v18 = v7;
  uint64_t v13 = &v15;
  sub_2414E1ED4(0, &qword_268D016E0, (uint64_t (*)(uint64_t))sub_2414E21A4, MEMORY[0x263F1BAC8]);
  sub_2414E32DC();
  sub_241630B18();
  id v14 = sub_2414DF0D8();
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = v16;
  v8[1] = v15;
  _OWORD v8[2] = v9;
  long long v10 = v18;
  v8[3] = v17;
  v8[4] = v10;
  sub_2414E1570((uint64_t)&v15);
  sub_2411B9D00(0, &qword_268D01850);
  sub_2414E1F38(&qword_268D01858, 255, (void (*)(uint64_t))sub_2414E2110);
  sub_2414E337C();
  sub_241630EE8();
  swift_release();

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_2414E0AB0(uint64_t a1, id *a2)
{
  unint64_t v3 = 0;
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v18 = a1 + 32;
  uint64_t v17 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v3 <= v4) {
    unint64_t v5 = v4;
  }
  else {
    unint64_t v5 = v3;
  }
  while (v4 != v3)
  {
    if (v5 == v3)
    {
      __break(1u);
LABEL_16:
      __break(1u);
      return;
    }
    uint64_t v6 = *(void *)(v18 + 8 * v3);
    long long v7 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
    sub_2414E36DC(0, &qword_268D01868, MEMORY[0x263F8D6C8], MEMORY[0x263F1B5D0]);
    sub_241631118();
    sub_241631118();
    sub_2414E36DC(0, &qword_268D01870, MEMORY[0x263F8D538], v7);
    sub_241631118();
    id v8 = objc_msgSend(*a2, sel__rollingBaselineConfiguration);
    if (!v8) {
      goto LABEL_16;
    }
    long long v9 = v8;
    ++v3;
    id v10 = objc_msgSend(v8, sel_options);

    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A6B0]), sel_initWithMinimumSampleCount_maximumSampleCount_maximumWindowDuration_options_, *(void *)&v19, *(void *)&v19, v10, v19);
    id v12 = objc_msgSend(v11, sel_maximumSampleCount);

    if ((uint64_t)v12 >= v6)
    {
      uint64_t v13 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24149E56C(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v13 = v17;
      }
      uint64_t v14 = v13;
      unint64_t v16 = *(void *)(v13 + 16);
      unint64_t v15 = *(void *)(v13 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_24149E56C(v15 > 1, v16 + 1, 1);
        uint64_t v14 = v17;
      }
      *(void *)(v14 + 16) = v16 + 1;
      uint64_t v17 = v14;
      *(void *)(v14 + 8 * v16 + 32) = v6;
      goto LABEL_2;
    }
  }
}

void sub_2414E0CFC(uint64_t a1, id *a2)
{
  unint64_t v3 = 0;
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v18 = a1 + 32;
  uint64_t v17 = MEMORY[0x263F8EE78];
LABEL_2:
  if (v3 <= v4) {
    unint64_t v5 = v4;
  }
  else {
    unint64_t v5 = v3;
  }
  while (v4 != v3)
  {
    if (v5 == v3)
    {
      __break(1u);
LABEL_16:
      __break(1u);
      return;
    }
    uint64_t v6 = *(void *)(v18 + 8 * v3);
    long long v7 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
    sub_2414E36DC(0, &qword_268D01868, MEMORY[0x263F8D6C8], MEMORY[0x263F1B5D0]);
    sub_241631118();
    sub_241631118();
    sub_2414E36DC(0, &qword_268D01870, MEMORY[0x263F8D538], v7);
    sub_241631118();
    id v8 = objc_msgSend(*a2, sel__rollingBaselineConfiguration);
    if (!v8) {
      goto LABEL_16;
    }
    long long v9 = v8;
    ++v3;
    id v10 = objc_msgSend(v8, sel_options);

    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A6B0]), sel_initWithMinimumSampleCount_maximumSampleCount_maximumWindowDuration_options_, *(void *)&v19, *(void *)&v19, v10, v19);
    id v12 = objc_msgSend(v11, sel_minimumSampleCount);

    if (v6 >= (uint64_t)v12)
    {
      uint64_t v13 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24149E56C(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v13 = v17;
      }
      uint64_t v14 = v13;
      unint64_t v16 = *(void *)(v13 + 16);
      unint64_t v15 = *(void *)(v13 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_24149E56C(v15 > 1, v16 + 1, 1);
        uint64_t v14 = v17;
      }
      *(void *)(v14 + 16) = v16 + 1;
      uint64_t v17 = v14;
      *(void *)(v14 + 8 * v16 + 32) = v6;
      goto LABEL_2;
    }
  }
}

void sub_2414E0F48(void *a1)
{
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  id v6 = a1;
  long long v7 = sub_24162EF98();
  os_log_type_t v8 = sub_2416322E8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v22 = v2;
    id v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    v25[0] = v11;
    *(_DWORD *)id v10 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    sub_24144FD04();
    uint64_t v12 = sub_241631D48();
    uint64_t ObjectType = sub_2411B6898(v12, v13, v25);
    sub_241632C28();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v7, v8, "[%{public}s] Showing the LiveOn dashboard", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v11, -1, -1);
    MEMORY[0x245621640](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v22);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v14 = (objc_class *)type metadata accessor for InternalLiveOnSettingsViewController();
  id v15 = objc_allocWithZone(v14);
  id v16 = objc_allocWithZone((Class)type metadata accessor for InternalKaliLiveOnSettingsModel(0));
  uint64_t v17 = (char *)v15;
  objc_msgSend(v16, sel_init);
  sub_2414E1F38(&qword_268CFD890, 255, (void (*)(uint64_t))type metadata accessor for InternalKaliLiveOnSettingsModel);
  v25[0] = sub_2416300A8();
  v25[1] = v18;
  sub_241354554();
  sub_241631258();
  double v19 = (void *)sub_241630838();
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (v20)
  {
    *(void *)&v17[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36InternalLiveOnSettingsViewController_host] = v20;
    *(void *)&v17[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin36InternalLiveOnSettingsViewController_liveOnConfiguration] = 0;

    v24.receiver = v17;
    v24.super_class = v14;
    id v21 = objc_msgSendSuper2(&v24, sel_initWithNibName_bundle_, 0, 0);
    swift_release();
    objc_msgSend(v6, sel_showViewController_sender_, v21, 0);
  }
  else
  {

    sub_241633038();
    __break(1u);
  }
}

id sub_2414E12F0@<X0>(uint64_t *a1@<X8>)
{
  sub_2411B9D00(0, (unint64_t *)&qword_26B010718);
  id v2 = (id)*MEMORY[0x263F09BE0];
  uint64_t v3 = MEMORY[0x24561F7E0]();
  id v4 = v2;
  unint64_t v5 = (void *)MEMORY[0x24561F7E0]();
  id v6 = (id)HKRollingBaselineConfigurationForQuantityType();

  objc_msgSend(v6, sel_minimumSampleCount);
  sub_241631108();
  id v7 = v4;
  os_log_type_t v8 = (void *)MEMORY[0x24561F7E0]();
  id v9 = (id)HKRollingBaselineConfigurationForQuantityType();

  objc_msgSend(v9, sel_maximumSampleCount);
  sub_241631108();
  id v10 = (void *)MEMORY[0x24561F7E0](v7);
  id v11 = (id)HKRollingBaselineConfigurationForQuantityType();

  objc_msgSend(v11, sel_maximumWindowDuration);
  sub_241631108();
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08780]), sel_init);
  id result = objc_msgSend(v12, sel_setUnitsStyle_, 3);
  *a1 = v3;
  a1[1] = v14;
  a1[2] = v15;
  a1[3] = v14;
  a1[4] = v15;
  a1[5] = v14;
  a1[6] = v15;
  a1[7] = (uint64_t)v12;
  return result;
}

void sub_2414E14C0()
{
  if (!qword_268D01690)
  {
    sub_2414E151C();
    unint64_t v0 = sub_241630608();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01690);
    }
  }
}

unint64_t sub_2414E151C()
{
  unint64_t result = qword_268D01698;
  if (!qword_268D01698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01698);
  }
  return result;
}

uint64_t sub_2414E1570(uint64_t a1)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 56);
  swift_retain();
  id v4 = v3;
  id v5 = v2;
  swift_retain();
  swift_retain();
  return a1;
}

void **sub_2414E15D4(void **a1)
{
  id v2 = *a1;

  swift_release();
  swift_release();
  swift_release();
  return a1;
}

void destroy for SleepingWristTemperatureInternalSettingsView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  id v2 = *(void **)(a1 + 56);
}

void *initializeWithCopy for SleepingWristTemperatureInternalSettingsView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  id v7 = *(void **)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v7;
  id v8 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  id v9 = v7;
  return a1;
}

uint64_t assignWithCopy for SleepingWristTemperatureInternalSettingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  id v7 = *(void **)(a2 + 56);
  id v8 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for SleepingWristTemperatureInternalSettingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  id v7 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for SleepingWristTemperatureInternalSettingsView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingWristTemperatureInternalSettingsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingWristTemperatureInternalSettingsView()
{
  return &type metadata for SleepingWristTemperatureInternalSettingsView;
}

ValueMetadata *type metadata accessor for InternalKaliLiveOnSettingsComponent()
{
  return &type metadata for InternalKaliLiveOnSettingsComponent;
}

uint64_t sub_2414E18E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2414E1904()
{
  uint64_t v0 = sub_24162F338();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v18 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24162B788();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_2414E1ED4(0, (unint64_t *)&qword_268D00EC0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_24162D678();
  uint64_t v7 = swift_allocObject();
  long long v17 = xmmword_241637EE0;
  *(_OWORD *)(v7 + 16) = xmmword_241637EE0;
  sub_2414E1ED4(0, (unint64_t *)&qword_268CFC790, (uint64_t (*)(uint64_t))sub_2411E1530, v6);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v17;
  uint64_t v9 = type metadata accessor for InternalKaliLiveOnSettingsComponent.Item();
  id v10 = (void *)swift_allocObject();
  type metadata accessor for TextItemCell();
  sub_2414E1F38(&qword_268CFFDD0, 255, (void (*)(uint64_t))type metadata accessor for TextItemCell);
  v10[6] = sub_24162CD08();
  v10[7] = v11;
  v10[2] = 0x100000000000001ALL;
  v10[3] = 0x800000024166EE50;
  _OWORD v10[4] = 0;
  v10[5] = 0xE000000000000000;
  *(void *)(v8 + 56) = v9;
  *(void *)(v8 + 64) = sub_2414E1F38(&qword_268D016A0, v11, (void (*)(uint64_t))type metadata accessor for InternalKaliLiveOnSettingsComponent.Item);
  *(void *)(v8 + 32) = v10;
  sub_24162B778();
  sub_24162B738();
  id v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v5, v2);
  sub_24162D668();
  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  sub_241632E78();
  swift_bridgeObjectRelease();
  strcpy((char *)v19, "MutableArray<");
  HIWORD(v19[1]) = -4864;
  sub_24162B778();
  sub_24162B738();
  v12(v5, v2);
  sub_241631E08();
  swift_bridgeObjectRelease();
  sub_241631E08();
  sub_24162D808();
  swift_allocObject();
  sub_24162D718();
  sub_24162D128();
  swift_release();
  uint64_t v13 = sub_24162CAE8();
  sub_24162F2C8();
  uint64_t v14 = sub_24162CAD8();
  void v19[3] = v13;
  void v19[4] = sub_2414E1F38(&qword_268CFD2C0, 255, MEMORY[0x263F43AA8]);
  v19[0] = v14;
  sub_2414E1F80();
  sub_2414E1F38(&qword_268D016B0, 255, (void (*)(uint64_t))sub_2414E1F80);
  sub_24162D138();
  swift_release();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v19);
  sub_2414E1FE0();
  sub_2414E1F38(&qword_268D016C0, 255, (void (*)(uint64_t))sub_2414E1FE0);
  uint64_t v15 = sub_24162D158();
  swift_release();
  sub_2414E1F38(&qword_268D016C8, 255, (void (*)(uint64_t))sub_2414E2078);
  return v15;
}

void sub_2414E1ED4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2414E1F38(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2414E1F80()
{
  if (!qword_268D016A8)
  {
    sub_24162D808();
    unint64_t v0 = sub_24162CDD8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D016A8);
    }
  }
}

void sub_2414E1FE0()
{
  if (!qword_268D016B8)
  {
    sub_2414E1F80();
    sub_2414E1F38(&qword_268D016B0, 255, (void (*)(uint64_t))sub_2414E1F80);
    unint64_t v0 = sub_24162CD98();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D016B8);
    }
  }
}

void sub_2414E2078()
{
  if (!qword_268D016D0)
  {
    sub_2414E1FE0();
    sub_2414E1F38(&qword_268D016C0, 255, (void (*)(uint64_t))sub_2414E1FE0);
    unint64_t v0 = sub_24162D448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D016D0);
    }
  }
}

void sub_2414E2110()
{
  if (!qword_268D016D8)
  {
    sub_2414E1ED4(255, &qword_268D016E0, (uint64_t (*)(uint64_t))sub_2414E21A4, MEMORY[0x263F1BAC8]);
    sub_2414E32DC();
    unint64_t v0 = sub_241630B28();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D016D8);
    }
  }
}

void sub_2414E21A4()
{
  if (!qword_268D016E8)
  {
    sub_2414E2214();
    sub_2414E30F4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D016E8);
    }
  }
}

void sub_2414E2214()
{
  if (!qword_268D016F0)
  {
    sub_2414E1ED4(255, &qword_268D016F8, (uint64_t (*)(uint64_t))sub_2414E22A8, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241631358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D016F0);
    }
  }
}

void sub_2414E22A8()
{
  if (!qword_268D01700)
  {
    sub_2414E2330();
    sub_2414E2884();
    sub_241486FEC();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_268D01700);
    }
  }
}

void sub_2414E2330()
{
  if (!qword_268D01708)
  {
    sub_2414E23C4();
    sub_2414E2724();
    unint64_t v0 = sub_2416311F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01708);
    }
  }
}

void sub_2414E23C4()
{
  if (!qword_268D01710)
  {
    sub_2414E36DC(255, (unint64_t *)&qword_268D00710, MEMORY[0x263F8D6C8], MEMORY[0x263F8D488]);
    sub_2414E247C(255);
    sub_2412D9F38();
    unint64_t v0 = sub_241631308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01710);
    }
  }
}

void sub_2414E247C(uint64_t a1)
{
}

void sub_2414E24B8()
{
  if (!qword_268D01728)
  {
    uint64_t v0 = MEMORY[0x263F8D6C8];
    uint64_t v1 = MEMORY[0x263F8D6D8];
    sub_2414E30A4(255, &qword_268D01730, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6D8], MEMORY[0x263F19090]);
    sub_2414E2578(&qword_268D01738, &qword_268D01730, v0, v1);
    unint64_t v2 = sub_241630728();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_268D01728);
    }
  }
}

uint64_t sub_2414E2578(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2414E30A4(255, a2, a3, a4, MEMORY[0x263F19090]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2414E25DC()
{
  if (!qword_268D01740)
  {
    sub_2414E2674();
    sub_2414E1F38(&qword_268D01758, 255, (void (*)(uint64_t))sub_2414E2674);
    unint64_t v0 = sub_241630728();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01740);
    }
  }
}

void sub_2414E2674()
{
  if (!qword_268D01748)
  {
    uint64_t v0 = MEMORY[0x263F8D6C8];
    sub_2414E36DC(255, (unint64_t *)&qword_26B0106B0, MEMORY[0x263F8D6C8], MEMORY[0x263F8D8F0]);
    sub_2414E2D38((unint64_t *)&qword_268D01750, (unint64_t *)&qword_26B0106B0, v0);
    unint64_t v1 = sub_2416301C8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D01748);
    }
  }
}

unint64_t sub_2414E2724()
{
  unint64_t result = qword_268D01760;
  if (!qword_268D01760)
  {
    sub_2414E23C4();
    sub_2414E2EEC(&qword_268D01768, sub_2414E247C, (void (*)(void))sub_2414E27D8, (void (*)(void))sub_2414E284C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01760);
  }
  return result;
}

uint64_t sub_2414E27D8()
{
  return sub_2414E2FB4(&qword_268D01770, &qword_268D01720, (void (*)(uint64_t))sub_2414E24B8, (void (*)(void))sub_2414E2814);
}

uint64_t sub_2414E2814()
{
  return sub_2414E1F38(&qword_268D01778, 255, (void (*)(uint64_t))sub_2414E24B8);
}

uint64_t sub_2414E284C()
{
  return sub_2414E1F38(&qword_268D01780, 255, (void (*)(uint64_t))sub_2414E25DC);
}

void sub_2414E2884()
{
  if (!qword_268D01788)
  {
    sub_2414E2918();
    sub_2414E2E38();
    unint64_t v0 = sub_2416311F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01788);
    }
  }
}

void sub_2414E2918()
{
  if (!qword_268D01790)
  {
    sub_2414E1ED4(255, &qword_268D01798, MEMORY[0x263F063B0], MEMORY[0x263F8D488]);
    sub_24162B138();
    sub_2414E2A20(255);
    sub_2414E2DB0();
    sub_2414E1F38(&qword_268CFC428, 255, MEMORY[0x263F063B0]);
    unint64_t v0 = sub_241631308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01790);
    }
  }
}

void sub_2414E2A20(uint64_t a1)
{
}

void sub_2414E2A5C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  if (!*a2)
  {
    sub_2414E2AD4(255, a3, a4);
    a5(255);
    unint64_t v7 = sub_241630188();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_2414E2AD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241630188();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2414E2B30()
{
  if (!qword_268D017B0)
  {
    uint64_t v0 = MEMORY[0x263F8D538];
    uint64_t v1 = MEMORY[0x263F8D558];
    sub_2414E30A4(255, &qword_268D017B8, MEMORY[0x263F8D538], MEMORY[0x263F8D558], MEMORY[0x263F19090]);
    sub_2414E2578(&qword_268D017C0, &qword_268D017B8, v0, v1);
    unint64_t v2 = sub_241630728();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_268D017B0);
    }
  }
}

void sub_2414E2BF0()
{
  if (!qword_268D017C8)
  {
    sub_2414E2C88();
    sub_2414E1F38(&qword_268D017E8, 255, (void (*)(uint64_t))sub_2414E2C88);
    unint64_t v0 = sub_241630728();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D017C8);
    }
  }
}

void sub_2414E2C88()
{
  if (!qword_268D017D0)
  {
    uint64_t v0 = MEMORY[0x263F8D538];
    sub_2414E36DC(255, &qword_268D017D8, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
    sub_2414E2D38(&qword_268D017E0, &qword_268D017D8, v0);
    unint64_t v1 = sub_2416301C8();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D017D0);
    }
  }
}

uint64_t sub_2414E2D38(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2414E36DC(255, a2, a3, MEMORY[0x263F8D8F0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2414E2DB0()
{
  unint64_t result = qword_268D017F0;
  if (!qword_268D017F0)
  {
    sub_2414E1ED4(255, &qword_268D01798, MEMORY[0x263F063B0], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D017F0);
  }
  return result;
}

unint64_t sub_2414E2E38()
{
  unint64_t result = qword_268D017F8;
  if (!qword_268D017F8)
  {
    sub_2414E2918();
    sub_2414E2EEC(&qword_268D01800, sub_2414E2A20, (void (*)(void))sub_2414E2F78, (void (*)(void))sub_2414E306C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D017F8);
  }
  return result;
}

uint64_t sub_2414E2EEC(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2414E2F78()
{
  return sub_2414E2FB4(&qword_268D01808, &qword_268D017A8, (void (*)(uint64_t))sub_2414E2B30, (void (*)(void))sub_2414E3034);
}

uint64_t sub_2414E2FB4(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2414E2AD4(255, a2, a3);
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2414E3034()
{
  return sub_2414E1F38(&qword_268D01810, 255, (void (*)(uint64_t))sub_2414E2B30);
}

uint64_t sub_2414E306C()
{
  return sub_2414E1F38(&qword_268D01818, 255, (void (*)(uint64_t))sub_2414E2BF0);
}

void sub_2414E30A4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_2414E30F4()
{
  if (!qword_268D01820)
  {
    sub_2414E3158();
    unint64_t v0 = sub_241631358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01820);
    }
  }
}

void sub_2414E3158()
{
  if (!qword_268D01828)
  {
    sub_2414E1ED4(255, &qword_268D01830, MEMORY[0x263F445B0], MEMORY[0x263F8D8F0]);
    sub_2414E3208();
    unint64_t v0 = sub_241630068();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01828);
    }
  }
}

unint64_t sub_2414E3208()
{
  unint64_t result = qword_268D01838;
  if (!qword_268D01838)
  {
    sub_2414E1ED4(255, &qword_268D01830, MEMORY[0x263F445B0], MEMORY[0x263F8D8F0]);
    sub_2414E1F38(&qword_268D01840, 255, MEMORY[0x263F445B0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01838);
  }
  return result;
}

unint64_t sub_2414E32DC()
{
  unint64_t result = qword_268D01848;
  if (!qword_268D01848)
  {
    sub_2414E1ED4(255, &qword_268D016E0, (uint64_t (*)(uint64_t))sub_2414E21A4, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01848);
  }
  return result;
}

uint64_t sub_2414E3364@<X0>(char *a1@<X8>)
{
  return sub_2414DF36C(*(void *)(v1 + 16), a1);
}

uint64_t sub_2414E3370(uint64_t a1, void *a2)
{
  return MEMORY[0x270EF39A8](*a2, *(void *)(v2 + 16));
}

unint64_t sub_2414E337C()
{
  unint64_t result = qword_268D01860;
  if (!qword_268D01860)
  {
    sub_2411B9D00(255, &qword_268D01850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01860);
  }
  return result;
}

uint64_t sub_2414E33E4@<X0>(char *a1@<X8>)
{
  return sub_2414DF788(*(void *)(v1 + 16), a1);
}

unint64_t sub_2414E33EC()
{
  unint64_t result = qword_268D01878;
  if (!qword_268D01878)
  {
    sub_2414E1ED4(255, &qword_268D016F8, (uint64_t (*)(uint64_t))sub_2414E22A8, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01878);
  }
  return result;
}

uint64_t sub_2414E3474()
{
  return sub_2414E00D4(*(void ***)(v0 + 16), (uint64_t)&unk_26F567818, sub_2414E0AB0);
}

uint64_t sub_2414E34C0()
{
  return sub_2414E00D4(*(void ***)(v0 + 16), (uint64_t)&unk_26F567890, sub_2414E0CFC);
}

uint64_t sub_2414E350C()
{
  return sub_2414E032C(*(_OWORD **)(v0 + 16));
}

id sub_2414E3518()
{
  return sub_2414E05C0((id *)(v0 + 16));
}

uint64_t sub_2414E3528()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2414E3538(uint64_t a1, uint64_t a2)
{
  sub_241486FEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2414E359C(uint64_t a1)
{
  sub_241486FEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2414E35F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_2414E3660()
{
  if (!qword_268D01888)
  {
    sub_2414E36DC(255, &qword_268D01890, MEMORY[0x263F8D538], MEMORY[0x263F184E8]);
    unint64_t v0 = sub_241632C18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01888);
    }
  }
}

void sub_2414E36DC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2414E3728(uint64_t a1)
{
  return a1;
}

uint64_t sub_2414E3754()
{
  unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2414E1ED4(0, (unint64_t *)&unk_26B013110, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v33 - v2;
  sub_2414E1ED4(0, &qword_26B0130C8, MEMORY[0x263F07920], v0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v33 - v5;
  sub_2414E1ED4(0, (unint64_t *)&unk_268D01190, MEMORY[0x263F063B0], MEMORY[0x263F8E0F8]);
  uint64_t v7 = *(void *)(sub_24162B138() - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  uint64_t v36 = v10;
  *(_OWORD *)(v10 + 16) = xmmword_24163BB30;
  unint64_t v11 = v10 + v9;
  uint64_t v12 = sub_24162BA08();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v42 = v13 + 56;
  uint64_t v37 = v12;
  v41(v6, 1, 1, v12);
  uint64_t v14 = sub_24162BA68();
  uint64_t v15 = *(void *)(v14 - 8);
  id v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v17 = v15 + 56;
  v16(v3, 1, 1, v14);
  uint64_t v39 = v17;
  uint64_t v18 = v16;
  unint64_t v40 = v11;
  double v19 = v6;
  sub_24162B118();
  uint64_t v38 = v8;
  unint64_t v33 = v11 + v8;
  uint64_t v20 = v12;
  id v21 = v41;
  v41(v6, 1, 1, v20);
  uint64_t v22 = v3;
  uint64_t v35 = v14;
  v18(v3, 1, 1, v14);
  char v34 = v18;
  uint64_t v23 = v19;
  sub_24162B118();
  uint64_t v24 = 2 * v8;
  unint64_t v25 = v40;
  unint64_t v33 = v40 + 2 * v8;
  uint64_t v26 = v37;
  v21(v23, 1, 1, v37);
  v18(v22, 1, 1, v14);
  sub_24162B118();
  uint64_t v27 = v38;
  unint64_t v33 = v25 + v24 + v38;
  uint64_t v28 = v26;
  long long v29 = v41;
  v41(v23, 1, 1, v26);
  id v31 = v34;
  uint64_t v30 = v35;
  v34(v22, 1, 1, v35);
  sub_24162B118();
  unint64_t v33 = v40 + 4 * v27;
  v29(v23, 1, 1, v28);
  v31(v22, 1, 1, v30);
  sub_24162B118();
  v29(v23, 1, 1, v37);
  v31(v22, 1, 1, v30);
  sub_24162B118();
  return v36;
}

void sub_2414E3E90(uint64_t a1@<X8>)
{
  sub_2414E04C8(v1 + 16, a1);
}

uint64_t sub_2414E3E98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2414E3F58(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_24149E66C(0, v1, 0);
    uint64_t v4 = *(void *)(type metadata accessor for CycleChartCycle(0) - 8);
    uint64_t v5 = (void *)(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    uint64_t v16 = *(void *)(v4 + 72);
    sub_241226CF4();
    uint64_t v15 = sub_2411B9D00(0, (unint64_t *)&qword_26B00E610);
    uint64_t v6 = MEMORY[0x263F8D6C8];
    do
    {
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24163CA90;
      *(void *)(inited + 32) = 0x7865646E69;
      *(void *)(inited + 40) = 0xE500000000000000;
      *(void *)(inited + 48) = *v5;
      *(void *)(inited + 72) = v6;
      *(void *)(inited + 80) = 0x656C637963;
      *(void *)(inited + 88) = 0xE500000000000000;
      uint64_t v8 = (void *)v5[1];
      *(void *)(inited + 96) = v8;
      *(void *)(inited + 120) = v15;
      *(void *)(inited + 128) = 0x7961447473616CLL;
      *(void *)(inited + 136) = 0xE700000000000000;
      id v9 = v8;
      *(void *)(inited + 144) = sub_241631A88();
      *(void *)(inited + 168) = v6;
      *(void *)(inited + 176) = 0x7961646F74;
      *(void *)(inited + 184) = 0xE500000000000000;
      uint64_t v10 = sub_241631A88();
      *(void *)(inited + 216) = v6;
      *(void *)(inited + 192) = v10;
      unint64_t v11 = sub_2414E4810(inited);
      uint64_t v2 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24149E66C(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v2 = v17;
      }
      unint64_t v13 = *(void *)(v2 + 16);
      unint64_t v12 = *(void *)(v2 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_24149E66C(v12 > 1, v13 + 1, 1);
        uint64_t v2 = v17;
      }
      uint64_t v5 = (void *)((char *)v5 + v16);
      *(void *)(v2 + 16) = v13 + 1;
      *(void *)(v2 + 8 * v13 + 32) = v11;
      --v1;
    }
    while (v1);
  }
  return v2;
}

unint64_t sub_2414E41A8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24131F5A8();
  uint64_t v2 = (void *)sub_2416330C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t result = sub_2411B8E04(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2414E42B8(uint64_t a1)
{
  return sub_2414E46B8(a1, (void (*)(void))sub_241408A60, (uint64_t)&qword_268CFFFE0, (uint64_t)type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_241545650);
}

unint64_t sub_2414E4300(uint64_t a1)
{
  sub_2414E6F74(0, (unint64_t *)&qword_268D018B0, MEMORY[0x263F090E8], (void (*)(uint64_t))type metadata accessor for CycleDay);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v25 - v5;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2414E6EC8();
  uint64_t v7 = sub_2416330C8();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)&v6[*(int *)(v3 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_2414E6FF0(v13, (uint64_t)v6, (unint64_t *)&qword_268D018B0, MEMORY[0x263F090E8], (void (*)(uint64_t))type metadata accessor for CycleDay);
    unint64_t result = sub_241545654((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_241631AC8();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    uint64_t v20 = v8[7];
    uint64_t v21 = type metadata accessor for CycleDay();
    unint64_t result = sub_24134B530(v10, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v17);
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2414E4568(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2414E7100();
  uint64_t v2 = (void *)sub_2416330C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_241545650();
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2414E4670(uint64_t a1)
{
  return sub_2414E46B8(a1, (void (*)(void))sub_2414E7060, (uint64_t)&qword_268CFBE48, (uint64_t)type metadata accessor for AttributeName, (uint64_t (*)(uint64_t))sub_241545650);
}

unint64_t sub_2414E46B8(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v9 = sub_2416330C8();
  uint64_t v10 = (void *)v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  uint64_t v12 = v9 + 64;
  uint64_t v13 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2414E6CE8(v13, (uint64_t)&v20, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))sub_2414E7688);
    uint64_t v14 = v20;
    unint64_t result = a5(v20);
    if (v16) {
      break;
    }
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v10[6] + 8 * result) = v14;
    unint64_t result = (unint64_t)sub_241205EDC(&v21, (_OWORD *)(v10[7] + 32 * result));
    uint64_t v17 = v10[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v10[2] = v19;
    v13 += 40;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2414E4810(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2414E78A4(0, (unint64_t *)&qword_268CFAB18, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F8DFB0]);
  uint64_t v2 = sub_2416330C8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  uint64_t v7 = MEMORY[0x263F8D310];
  while (1)
  {
    sub_2414E6CE8(v6, (uint64_t)&v16, (uint64_t)&qword_268CFC440, v7, (uint64_t (*)(void, uint64_t, uint64_t))sub_2414E7844);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    unint64_t result = sub_2411B8E04(v16, v17);
    if (v11) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v9;
    unint64_t result = (unint64_t)sub_241205EDC(&v18, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2414E4998(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2414E6E2C();
  uint64_t v2 = (void *)sub_2416330C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    char v5 = *(unsigned char *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_241545650();
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(unsigned char *)(v2[7] + result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2414E4A94(uint64_t a1)
{
  sub_2414E71AC();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24134CA50();
  uint64_t v7 = sub_2416330C8();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_2414E722C(v13, (uint64_t)v6);
    unint64_t result = sub_2415457BC((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_24162BB18();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2414E4C78(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2414E78A4(0, (unint64_t *)&qword_268D018A8, MEMORY[0x263F8DB68], MEMORY[0x263F8DB70], MEMORY[0x263F8DFB0]);
  uint64_t v2 = sub_2416330C8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  uint64_t v7 = MEMORY[0x263F8DB68];
  while (1)
  {
    sub_2414E6CE8(v6, (uint64_t)v16, (uint64_t)&qword_268CFB818, v7, (uint64_t (*)(void, uint64_t, uint64_t))sub_2414E7844);
    unint64_t result = sub_24154560C((uint64_t)v16);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v10 = v3[6] + 40 * result;
    long long v11 = v16[0];
    long long v12 = v16[1];
    *(void *)(v10 + 32) = v17;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    unint64_t result = (unint64_t)sub_241205EDC(&v18, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2414E4E04(uint64_t a1)
{
  sub_2414E76F0(0, &qword_268D018F8, (unint64_t *)&qword_268CFB1B0, (unint64_t *)&qword_26B012390);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v23 - v5;
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2414E7780(0, &qword_268CFD838, (unint64_t *)&qword_268CFB1B0, (unint64_t *)&qword_26B012390);
  uint64_t v7 = sub_2416330C8();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_2414E734C(v13, (uint64_t)v6, &qword_268D018F8, (unint64_t *)&qword_268CFB1B0, (unint64_t *)&qword_26B012390);
    unint64_t result = sub_24154598C((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_24162B138();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2414E5048(uint64_t a1)
{
  return sub_2414E547C(a1, (void (*)(void))sub_24134CD3C, (uint64_t (*)(id))sub_2415458F8);
}

unint64_t sub_2414E5074(uint64_t a1)
{
  return sub_2414E46B8(a1, (void (*)(void))sub_2414E75E8, (uint64_t)&unk_268D018F0, (uint64_t)type metadata accessor for OpenURLOptionsKey, sub_241545650);
}

unint64_t sub_2414E50BC(uint64_t a1)
{
  return sub_2414E46B8(a1, (void (*)(void))sub_2414E6C00, (uint64_t)&unk_268D018A0, (uint64_t)type metadata accessor for OpenExternalURLOptionsKey, sub_241545650);
}

unint64_t sub_2414E5104(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2414E7290();
  uint64_t v2 = (void *)sub_2416330C8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_241545650(v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2414E520C(uint64_t a1)
{
  sub_2414E76F0(0, &qword_268D018E0, &qword_268D01070, (unint64_t *)&qword_26B00E610);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v6 = (char *)v23 - v5;
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_2414E7780(0, &qword_268CFD818, &qword_268D01070, (unint64_t *)&qword_26B00E610);
  uint64_t v7 = sub_2416330C8();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_2414E734C(v13, (uint64_t)v6, &qword_268D018E0, &qword_268D01070, (unint64_t *)&qword_26B00E610);
    unint64_t result = sub_24154598C((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_24162B138();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2414E5450(uint64_t a1)
{
  return sub_2414E547C(a1, (void (*)(void))sub_24134CB0C, (uint64_t (*)(id))sub_241545B6C);
}

unint64_t sub_2414E547C(uint64_t a1, void (*a2)(void), uint64_t (*a3)(id))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v5 = (void *)sub_2416330C8();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (void **)(a1 + 40);
  while (1)
  {
    char v8 = *v7;
    id v9 = *(v7 - 1);
    id v10 = v8;
    unint64_t result = a3(v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = 8 * result;
    *(void *)(v5[6] + v13) = v9;
    *(void *)(v5[7] + v13) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    uint64_t v5[2] = v16;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2414E5598(uint64_t a1)
{
  sub_2414E6F74(0, &qword_268D018B8, type metadata accessor for HKMCPregnancyAdjustedFeatureIdentifier, MEMORY[0x263F07490]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (void *)((char *)v24 - v5);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24134C0E0();
  uint64_t v7 = sub_2416330C8();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  id v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_2414E6FF0(v13, (uint64_t)v6, &qword_268D018B8, type metadata accessor for HKMCPregnancyAdjustedFeatureIdentifier, MEMORY[0x263F07490]);
    uint64_t v15 = *v6;
    unint64_t result = sub_241545650(*v6);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v15;
    uint64_t v19 = v8[7];
    uint64_t v20 = sub_24162B718();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, v10, v20);
    uint64_t v21 = v8[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t CycleChartsCollectionView.ax_cycles()()
{
  sub_2414E6AE0(0, (unint64_t *)&unk_268D04810, (void (*)(uint64_t))type metadata accessor for CycleChartsModel);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (uint64_t *)&v7[-v1];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  uint64_t v3 = type metadata accessor for CycleChartsModel();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *v2;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_2414E6BA0((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
    uint64_t v6 = sub_2414E3F58(v5);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

unint64_t sub_2414E594C()
{
  sub_241226CF4();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24163CA90;
  *(void *)(inited + 32) = 0x7865646E69;
  *(void *)(inited + 40) = 0xE500000000000000;
  uint64_t v2 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 48) = *v0;
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = 0x656C637963;
  *(void *)(inited + 88) = 0xE500000000000000;
  uint64_t v3 = (void *)v0[1];
  uint64_t v4 = sub_2411B9D00(0, (unint64_t *)&qword_26B00E610);
  *(void *)(inited + 96) = v3;
  *(void *)(inited + 120) = v4;
  *(void *)(inited + 128) = 0x7961447473616CLL;
  *(void *)(inited + 136) = 0xE700000000000000;
  type metadata accessor for CycleChartCycle(0);
  id v5 = v3;
  *(void *)(inited + 144) = sub_241631A88();
  *(void *)(inited + 168) = v2;
  *(void *)(inited + 176) = 0x7961646F74;
  *(void *)(inited + 184) = 0xE500000000000000;
  uint64_t v6 = sub_241631A88();
  *(void *)(inited + 216) = v2;
  *(void *)(inited + 192) = v6;
  return sub_2414E4810(inited);
}

unint64_t CycleChartsCollectionView.ax_predominantCycle()()
{
  sub_2414E6AE0(0, &qword_268CFAEC8, (void (*)(uint64_t))type metadata accessor for CycleChartCycle);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  uint64_t v3 = type metadata accessor for CycleChartCycle(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_2414E796C((uint64_t)v2, &qword_268CFAEC8, (void (*)(uint64_t))type metadata accessor for CycleChartCycle);
    return sub_2414E4810(MEMORY[0x263F8EE78]);
  }
  else
  {
    unint64_t v4 = sub_2414E594C();
    sub_2414E6BA0((uint64_t)v2, type metadata accessor for CycleChartCycle);
  }
  return v4;
}

id CycleChartsCollectionView.ax_cycleChartDay(forIndexPath:)()
{
  uint64_t v1 = type metadata accessor for CycleChartDay();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241631AC8();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = MEMORY[0x270FA5388](v4).n128_u64[0];
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(v0, sel_dataSource, v6);
  if (result)
  {
    type metadata accessor for CycleChartsCollectionViewDataSource();
    if (swift_dynamicCastClass())
    {
      sub_24143A7FC();
      swift_unknownObjectRelease();
      uint64_t v10 = *(void *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25CycleChartsCollectionView_modelProvider];
      uint64_t v11 = *(void **)(*(void *)(v10 + 24) + 16);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v8, v4);
      swift_retain();
      id v12 = objc_msgSend(v11, sel_dayViewModelAtIndex_, sub_241631A88());
      *(void *)&v3[*(int *)(type metadata accessor for CycleDay() + 20)] = v12;
      sub_2416315D8();
      swift_release();
      id v13 = *(id *)(v10 + 64);
      unint64_t v14 = sub_2414E61F8(v13);

      sub_2414E6BA0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for CycleChartDay);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return (id)v14;
    }
    id result = (id)swift_unknownObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_2414E61F8(void *a1)
{
  sub_2414173E8();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241226CF4();
  uint64_t inited = swift_initStackObject();
  long long v22 = xmmword_24163A4F0;
  *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
  *(void *)(inited + 32) = 0x796144656C637963;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = v22;
  *(void *)(v9 + 32) = 0x7865646E49796164;
  *(void *)(v9 + 40) = 0xE800000000000000;
  uint64_t v10 = sub_241631A88();
  uint64_t v11 = MEMORY[0x263F8D6C8];
  *(void *)(v9 + 48) = v10;
  *(void *)(v9 + 72) = v11;
  *(void *)(v9 + 80) = 0x65646F4D77656976;
  *(void *)(v9 + 88) = 0xE90000000000006CLL;
  id v12 = *(void **)(v1 + *(int *)(type metadata accessor for CycleDay() + 20));
  *(void *)(v9 + 120) = sub_2411B9D00(0, &qword_268CFF050);
  *(void *)(v9 + 96) = v12;
  id v13 = v12;
  unint64_t v14 = sub_2414E4810(v9);
  sub_2414E78A4(0, (unint64_t *)&qword_268D00FD0, MEMORY[0x263F8D310], MEMORY[0x263F8D320], MEMORY[0x263F8D060]);
  uint64_t v16 = v15;
  *(void *)(inited + 48) = v14;
  *(void *)(inited + 72) = v15;
  *(void *)(inited + 80) = 0xD00000000000001DLL;
  *(void *)(inited + 88) = 0x800000024166EF20;
  uint64_t v17 = type metadata accessor for CycleChartDay();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v7, v1 + *(int *)(v17 + 20), v4);
  int v18 = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 88))(v7, v4);
  if (v18 == *MEMORY[0x263F46258])
  {
    (*(void (**)(uint64_t *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v19 = *v7;
  }
  else
  {
    uint64_t v19 = 2;
    if (v18 != *MEMORY[0x263F46260] && v18 != *MEMORY[0x263F46268] && v18 != *MEMORY[0x263F46250])
    {
      (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v19 = 2;
    }
  }
  unint64_t v20 = sub_2414E6624(a1, (void *)v19);
  sub_2411FEB08((id)v19);
  *(void *)(inited + 120) = v16;
  *(void *)(inited + 96) = v20;
  return sub_2414E4810(inited);
}

unint64_t sub_2414E6624(void *a1, void *a2)
{
  if (!a2)
  {
    sub_241226CF4();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241637EE0;
    *(void *)(inited + 32) = 1702060387;
    *(void *)(inited + 40) = 0xE400000000000000;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    unint64_t v5 = 0xD000000000000014;
    uint64_t v6 = "establishingBaseline";
LABEL_7:
    unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
    goto LABEL_8;
  }
  if (a2 == (void *)1)
  {
    sub_241226CF4();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241637EE0;
    *(void *)(inited + 32) = 1702060387;
    *(void *)(inited + 40) = 0xE400000000000000;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    unint64_t v5 = 0xD000000000000018;
    uint64_t v6 = "indeterminateUnavailable";
    goto LABEL_7;
  }
  if (a2 != (void *)2)
  {
    sub_241226CF4();
    uint64_t v9 = swift_initStackObject();
    *(_OWORD *)(v9 + 16) = xmmword_24163AC10;
    *(void *)(v9 + 32) = 1702060387;
    *(void *)(v9 + 40) = 0xE400000000000000;
    uint64_t v10 = MEMORY[0x263F8D310];
    *(void *)(v9 + 48) = 0x6E696D7265746564;
    *(void *)(v9 + 56) = 0xEB00000000657461;
    *(void *)(v9 + 72) = v10;
    *(void *)(v9 + 80) = 0x6156656C62756F64;
    *(void *)(v9 + 88) = 0xEB0000000065756CLL;
    objc_msgSend(a2, sel_doubleValueForUnit_, a1);
    uint64_t v11 = MEMORY[0x263F8D538];
    *(void *)(v9 + 96) = v12;
    *(void *)(v9 + 120) = v11;
    *(void *)(v9 + 128) = 1953066613;
    *(void *)(v9 + 136) = 0xE400000000000000;
    *(void *)(v9 + 168) = sub_2411B9D00(0, &qword_268D01900);
    *(void *)(v9 + 144) = a1;
    id v13 = a1;
    unint64_t v7 = sub_2414E4810(v9);
    sub_2411FEB08(a2);
    return v7;
  }
  sub_241226CF4();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241637EE0;
  unint64_t v4 = 0xE400000000000000;
  *(void *)(inited + 32) = 1702060387;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  unint64_t v5 = 1701736302;
LABEL_8:
  *(void *)(inited + 48) = v5;
  *(void *)(inited + 56) = v4;
  return sub_2414E4810(inited);
}

uint64_t sub_2414E6848()
{
  return sub_2414E68A0();
}

uint64_t sub_2414E685C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2414E6970(a1, a2, a3, a4, &qword_268CFAEC8, (void (*)(uint64_t))type metadata accessor for CycleChartCycle);
}

uint64_t sub_2414E688C()
{
  return sub_2414E68A0();
}

uint64_t sub_2414E68A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();

  return swift_release();
}

uint64_t sub_2414E6918()
{
  return sub_2414E68A0();
}

uint64_t sub_2414E6940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2414E6970(a1, a2, a3, a4, (unint64_t *)&unk_268D04810, (void (*)(uint64_t))type metadata accessor for CycleChartsModel);
}

uint64_t sub_2414E6970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  sub_2414E6AE0(0, a5, a6);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)&v16 - v13;
  sub_2414E7900(a1, (uint64_t)&v16 - v13, a5, a6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2414E7900((uint64_t)v14, (uint64_t)v11, a5, a6);
  swift_retain();
  sub_24162FC58();
  return sub_2414E796C((uint64_t)v14, a5, a6);
}

uint64_t sub_2414E6A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2414E6970(a1, a2, a3, a4, (unint64_t *)&unk_268D04810, (void (*)(uint64_t))type metadata accessor for CycleChartsModel);
}

void sub_2414E6AE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241632C18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2414E6B34()
{
  return sub_2414E68A0();
}

uint64_t sub_2414E6B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2414E6970(a1, a2, a3, a4, &qword_268CFAEC8, (void (*)(uint64_t))type metadata accessor for CycleChartCycle);
}

uint64_t sub_2414E6BA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2414E6C00()
{
  if (!qword_268D01898)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    sub_2414E6CA0(&qword_268CFA118, type metadata accessor for OpenExternalURLOptionsKey);
    unint64_t v0 = sub_2416330D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01898);
    }
  }
}

uint64_t sub_2414E6CA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2414E6CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

unint64_t sub_2414E6D58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_24134CBC8();
    uint64_t v3 = (void *)sub_2416330C8();
    for (uint64_t i = (unsigned char *)(a1 + 40); ; i += 16)
    {
      uint64_t v5 = *((void *)i - 1);
      char v6 = *i;
      unint64_t result = sub_2415457B8(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      *(unsigned char *)(v3[7] + result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

void sub_2414E6E2C()
{
  if (!qword_268CFD7C8)
  {
    type metadata accessor for HKMCDisplayTypeIdentifier(255);
    sub_2414E6CA0(&qword_268CF9E10, type metadata accessor for HKMCDisplayTypeIdentifier);
    unint64_t v0 = sub_2416330D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFD7C8);
    }
  }
}

void sub_2414E6EC8()
{
  if (!qword_268CFD7E0)
  {
    sub_241631AC8();
    type metadata accessor for CycleDay();
    sub_2414E6CA0(&qword_268CFBDB8, MEMORY[0x263F090E8]);
    unint64_t v0 = sub_2416330D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFD7E0);
    }
  }
}

void sub_2414E6F74(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_2414E6FF0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  sub_2414E6F74(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_2414E7060()
{
  if (!qword_268D018C0)
  {
    type metadata accessor for AttributeName(255);
    sub_2414E6CA0(&qword_268CFA0F8, type metadata accessor for AttributeName);
    unint64_t v0 = sub_2416330D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D018C0);
    }
  }
}

void sub_2414E7100()
{
  if (!qword_268D018C8)
  {
    type metadata accessor for TraitKey(255);
    type metadata accessor for Weight(255);
    sub_2414E6CA0(&qword_268CFA0E8, type metadata accessor for TraitKey);
    unint64_t v0 = sub_2416330D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D018C8);
    }
  }
}

void sub_2414E71AC()
{
  if (!qword_268D018D0)
  {
    sub_24162BB18();
    sub_2411B9D00(255, (unint64_t *)&qword_268D01100);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D018D0);
    }
  }
}

uint64_t sub_2414E722C(uint64_t a1, uint64_t a2)
{
  sub_2414E71AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2414E7290()
{
  if (!qword_268D018D8)
  {
    type metadata accessor for Key(255);
    sub_2411B9D00(255, (unint64_t *)&qword_26B012200);
    sub_2414E6CA0(&qword_268CFFFF0, type metadata accessor for Key);
    unint64_t v0 = sub_2416330D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D018D8);
    }
  }
}

uint64_t sub_2414E734C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, unint64_t *a5)
{
  sub_2414E76F0(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

unint64_t sub_2414E73C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  sub_2414E79C8();
  uint64_t v3 = (void *)sub_2416330C8();
  uint64_t v4 = *(void *)(a1 + 32);
  long long v16 = *(_OWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  unint64_t result = sub_2415457B8(v4);
  long long v7 = v16;
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = (uint64_t *)(a1 + 64);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v10 = v3[7] + 24 * result;
    *(_OWORD *)uint64_t v10 = v7;
    *(void *)(v10 + 16) = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    unint64_t v14 = v9 + 4;
    uint64_t v4 = *v9;
    long long v17 = *(_OWORD *)(v9 + 1);
    uint64_t v5 = v9[3];
    swift_unknownObjectRetain();
    unint64_t result = sub_2415457B8(v4);
    uint64_t v9 = v14;
    long long v7 = v17;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_2414E74E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  sub_24134D18C();
  uint64_t v3 = (void *)sub_2416330C8();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_241545A60(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    return (unint64_t)v3;
  }
  char v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    unint64_t result = sub_241545A60(v4);
    char v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void sub_2414E75E8()
{
  if (!qword_268D018E8)
  {
    type metadata accessor for OpenURLOptionsKey(255);
    sub_2414E6CA0(&qword_268CFA0A0, type metadata accessor for OpenURLOptionsKey);
    unint64_t v0 = sub_2416330D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D018E8);
    }
  }
}

void sub_2414E7688(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_2414E76F0(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_24162B138();
    sub_24134CCE4(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v8) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_2414E7780(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_24162B138();
    sub_24134CCE4(255, a3, a4);
    sub_2414E6CA0(&qword_268CFC428, MEMORY[0x263F063B0]);
    unint64_t v7 = sub_2416330D8();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_2414E7844(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_2414E78A4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, MEMORY[0x263F8EE58] + 8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_2414E7900(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_2414E6AE0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2414E796C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2414E6AE0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_2414E79C8()
{
  if (!qword_268D01908)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_241238DEC();
    sub_2414E6CA0(&qword_268D01910, type metadata accessor for UIUserInterfaceSizeClass);
    unint64_t v0 = sub_2416330D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01908);
    }
  }
}

unint64_t sub_2414E7A74(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_2414E7B48();
    uint64_t v3 = (void *)sub_2416330C8();
    for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_2415457B8(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

void sub_2414E7B48()
{
  if (!qword_268D01918)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_2414E6CA0(&qword_268D01910, type metadata accessor for UIUserInterfaceSizeClass);
    unint64_t v0 = sub_2416330D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01918);
    }
  }
}

uint64_t sub_2414E7BE4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CycleLogSpacerDataSource()
{
  return self;
}

void *sub_2414E7C48()
{
  return sub_2414E7E2C();
}

uint64_t sub_2414E7C50()
{
  return sub_24162E588();
}

BOOL sub_2414E7CB4()
{
  return (*(unsigned char *)(*(void *)v0 + 40) & 1) == 0;
}

uint64_t sub_2414E7CC8(uint64_t a1, char a2)
{
  uint64_t v4 = sub_2416314D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *v2;
  sub_2411B9D00(0, (unint64_t *)&qword_26B0130B0);
  uint64_t *v7 = sub_2416325A8();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  char v9 = sub_241631508();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v9) {
    *(unsigned char *)(v8 + 40) = a2 & 1;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_2414E7DF8()
{
  return sub_2414E8034(&qword_268D01920);
}

void *sub_2414E7E2C()
{
  uint64_t v0 = sub_24162F538();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162F5A8();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v3, *MEMORY[0x263F81FC8], v0, v6);
  sub_24162F558();
  id v9 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  sub_24162F578();
  sub_2411B9D00(0, &qword_268CFC750);
  uint64_t v10 = (void *)sub_2416327F8();
  objc_msgSend(v10, sel_contentInsets);
  objc_msgSend(v10, sel_setContentInsets_, 0.0);
  objc_msgSend(v10, sel_contentInsets);
  objc_msgSend(v10, sel_setContentInsets_);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v10;
}

uint64_t sub_2414E8034(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CycleLogSpacerDataSource();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *static CycleTimelineStep.allCases.getter()
{
  return &unk_26F567138;
}

uint64_t CycleTimelineStep.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_2414E808C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s24MenstrualCyclesAppPlugin17CycleTimelineStepO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_2414E80B8(void *a1@<X8>)
{
  *a1 = &unk_26F567138;
}

id sub_2414E80C8()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController____lazy_storage___cycleTimelineViewController;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController____lazy_storage___cycleTimelineViewController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController____lazy_storage___cycleTimelineViewController);
  }
  else
  {
    id v4 = sub_2414E812C(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2414E812C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_cycleTimelineDataProvider);
  sub_2414EAF94(0, &qword_268D034C0, type metadata accessor for HKMCDisplayTypeIdentifier);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241637EE0;
  id v3 = (void *)*MEMORY[0x263F44F78];
  *(void *)(v2 + 32) = *MEMORY[0x263F44F78];
  id v4 = (char *)objc_allocWithZone((Class)type metadata accessor for InteractiveTimelineViewController());
  swift_retain();
  id v5 = v3;
  id v6 = sub_24129A14C(v1, v2, v4);
  uint64_t v7 = sub_2415749CC();
  v7[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin32InteractiveTimelineDateIndicator_alwaysFormatForCurrentYear] = 1;

  id result = objc_msgSend(v6, sel_view);
  if (result)
  {
    id v9 = result;
    objc_msgSend(result, sel_setUserInteractionEnabled_, 0);

    id result = objc_msgSend(v6, sel_view);
    if (result)
    {
      uint64_t v10 = result;
      objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_2414E8268()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_24162B7E8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_241631CA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v9 = MEMORY[0x270FA5388](v8).n128_u64[0];
  uint64_t v11 = (char *)&v60 - v10;
  v64.receiver = v1;
  v64.super_class = ObjectType;
  objc_msgSendSuper2(&v64, sel_viewDidLoad, v9);
  sub_241631C38();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, v4);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v12 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  uint64_t v13 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  if (qword_26B00F370 != -1) {
    swift_once();
  }
  long long v63 = xmmword_26B017FC8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  sub_241631E08();
  sub_241631E08();
  char v14 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v1, sel_hxui_addPrimaryFooterButtonWithTitle_accessibilityIdentifier_, v13, v14);

  id v16 = sub_2414E80C8();
  objc_msgSend(v1, sel_addChildViewController_, v16);

  id v17 = objc_msgSend(v1, sel_contentView);
  id v18 = sub_2414E80C8();
  id v19 = objc_msgSend(v18, sel_view);

  if (!v19)
  {
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v17, sel_addSubview_, v19);

  sub_2411D0524(0, (unint64_t *)&qword_26B0121F0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v20 = swift_allocObject();
  long long v62 = xmmword_24163ADC0;
  *(_OWORD *)(v20 + 16) = xmmword_24163ADC0;
  id v21 = sub_2414E80C8();
  id v22 = objc_msgSend(v21, sel_view);

  if (!v22)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v23 = objc_msgSend(v22, sel_topAnchor);

  id v24 = objc_msgSend(v1, sel_contentView);
  id v25 = objc_msgSend(v24, sel_topAnchor);

  id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);
  *(void *)(v20 + 32) = v26;
  id v27 = sub_2414E80C8();
  id v28 = objc_msgSend(v27, sel_view);

  if (!v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v61 = v15;
  id v29 = objc_msgSend(v28, sel_leadingAnchor);

  id v30 = objc_msgSend(v1, sel_view);
  if (!v30)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v31 = v30;
  id v32 = objc_msgSend(v30, sel_leadingAnchor);

  id v33 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v32);
  *(void *)(v20 + 40) = v33;
  id v34 = sub_2414E80C8();
  id v35 = objc_msgSend(v34, sel_view);

  if (!v35)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v36 = objc_msgSend(v35, sel_trailingAnchor);

  id v37 = objc_msgSend(v1, sel_view);
  if (!v37)
  {
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v38 = v37;
  uint64_t v39 = self;
  id v40 = objc_msgSend(v38, sel_trailingAnchor);

  id v41 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v40);
  *(void *)(v20 + 48) = v41;
  *(void *)&long long v63 = v20;
  sub_241631F48();
  sub_2411F1694();
  uint64_t v42 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  id v60 = v39;
  objc_msgSend(v39, sel_activateConstraints_, v42);

  sub_2414E8AF8();
  id v43 = sub_2414E80C8();
  objc_msgSend(v43, sel_didMoveToParentViewController_, v1);

  id v44 = objc_msgSend(v1, sel_buttonTray);
  uint64_t v45 = *(void **)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_stepLabel];
  objc_msgSend(v44, sel_addSubview_, v45);

  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v62;
  id v47 = objc_msgSend(v45, sel_leadingAnchor);
  id v48 = v61;
  id v49 = objc_msgSend(v61, sel_leadingAnchor);
  id v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v49);

  *(void *)(v46 + 32) = v50;
  id v51 = objc_msgSend(v45, sel_trailingAnchor);
  id v52 = objc_msgSend(v48, sel_trailingAnchor);
  id v53 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v52);

  *(void *)(v46 + 40) = v53;
  id v54 = objc_msgSend(v45, sel_topAnchor);
  id v55 = objc_msgSend(v48, sel_bottomAnchor);
  if (qword_268CF97B0 != -1) {
    swift_once();
  }
  id v56 = objc_msgSend(v54, sel_constraintEqualToAnchor_constant_, v55, *(double *)&qword_268D01930);

  *(void *)(v46 + 48) = v56;
  *(void *)&long long v63 = v46;
  sub_241631F48();
  uint64_t v57 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v60, sel_activateConstraints_, v57);

  uint64_t v58 = *(void **)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_footerButton];
  *(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_footerButton] = v48;
  id v59 = v48;

  sub_2414E8F7C();
}

void sub_2414E8AF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_infoViews];
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  if (!(*(void *)v2 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    if (v4) {
      goto LABEL_3;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v1;
    id v32 = objc_allocWithZone(MEMORY[0x263F82E30]);
    aBlock[4] = sub_2414EB008;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2411987F4;
    uint64_t aBlock[3] = &unk_26F574FA8;
    id v33 = _Block_copy(aBlock);
    id v34 = v1;
    swift_release();
    id v35 = objc_msgSend(v32, sel_initWithDuration_curve_animations_, 0, v33, 0.25);
    _Block_release(v33);
    objc_msgSend(v35, sel_startAnimation);

    return;
  }
LABEL_29:
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v4 = sub_241633068();
  if (!v4) {
    goto LABEL_30;
  }
LABEL_3:
  uint64_t v5 = &v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_infoViewBottomConstraints];
  uint64_t v6 = 4;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      uint64_t v7 = (char *)MEMORY[0x245620370](v6 - 4, v3);
    }
    else {
      uint64_t v7 = (char *)*(id *)(v3 + 8 * v6);
    }
    uint64_t v8 = v7;
    uint64_t v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v10 = (char *)*(id *)&v7[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31OnboardingCycleTimelineInfoView_pillView];
    id v11 = objc_msgSend(v1, sel_view);
    if (!v11) {
      break;
    }
    id v12 = v11;
    objc_msgSend(v11, sel_frame);
    double v14 = v13;

    double v15 = 78.0;
    if (v14 > 320.0) {
      double v16 = 56.0;
    }
    else {
      double v16 = 52.0;
    }
    if (v14 <= 320.0)
    {
      v17.f64[0] = 40.0;
    }
    else
    {
      double v15 = 84.0;
      v17.f64[0] = 42.0;
    }
    if (v14 > 320.0) {
      double v18 = 12.0;
    }
    else {
      double v18 = 10.0;
    }
    id v19 = (float64x2_t *)&v10[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_configuration];
    double v21 = *(double *)&v10[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_configuration];
    double v20 = *(double *)&v10[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14StaticPillView_configuration + 8];
    v19->f64[0] = v16;
    v19->f64[1] = v15;
    float64x2_t v23 = v19[1];
    float64x2_t v22 = v19[2];
    v19[1].f64[0] = v17.f64[0];
    v19[1].f64[1] = v18;
    void v19[2] = (float64x2_t)xmmword_24163A660;
    if (v16 != v21
      || ((v17.f64[1] = v18,
           (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v17, v23), (int32x4_t)vceqq_f64((float64x2_t)xmmword_24163A660, v22))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0)? (BOOL v24 = v15 == v20): (BOOL v24 = 0), !v24))
    {
      sub_2411D19AC();
    }

    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v25 = objc_msgSend(v1, sel_contentView);
    objc_msgSend(v25, sel_addSubview_, v8);

    sub_2414EA008(v8);
    objc_msgSend(v8, sel_setAlpha_, 0.0);
    id v26 = objc_msgSend(v1, sel_contentView);
    id v27 = objc_msgSend(v26, sel_bottomAnchor);

    id v28 = objc_msgSend(v8, sel_bottomAnchor);
    id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

    swift_beginAccess();
    id v30 = v29;
    MEMORY[0x24561F3D0]();
    if (*(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
      sub_241631F68();
    sub_241631F98();
    sub_241631F48();
    swift_endAccess();

    ++v6;
    if (v9 == v4) {
      goto LABEL_30;
    }
  }
  __break(1u);
}

void sub_2414E8F7C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_currentStepCount;
  uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_currentStepCount];
  uint64_t v8 = &v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_infoViews];
  swift_beginAccess();
  if (*(void *)v8 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v15 = sub_241633068();
    swift_bridgeObjectRelease();
    if (v15 < v7) {
      goto LABEL_3;
    }
LABEL_7:
    double v16 = *(void **)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_stepLabel];
    sub_2414E9C7C(*(void *)&v1[v6]);
    float64x2_t v17 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setText_, v17);

    id v18 = objc_msgSend(v1, sel_view);
    if (v18)
    {
      id v19 = v18;
      unint64_t v20 = *(void *)&v1[v6];
      swift_beginAccess();
      uint64_t v21 = *(void *)v8;
      if ((*(void *)v8 & 0xC000000000000001) != 0)
      {
        id v22 = (id)MEMORY[0x245620370](v20);
        goto LABEL_12;
      }
      if ((v20 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v20 < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v22 = *(id *)(v21 + 8 * v20 + 32);
LABEL_12:
        float64x2_t v23 = v22;
        swift_endAccess();
        id v24 = objc_msgSend(v23, sel_description);
        _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();

        id v25 = (void *)sub_241631CC8();
        swift_bridgeObjectRelease();
        objc_msgSend(v19, sel_setAccessibilityIdentifier_, v25);

        return;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  if (*(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v7) {
    goto LABEL_7;
  }
LABEL_3:
  sub_24162EF48();
  uint64_t v9 = sub_24162EF98();
  os_log_type_t v10 = sub_2416322C8();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    v27[0] = v12;
    *(_DWORD *)id v11 = 136446210;
    uint64_t v13 = sub_2416333E8();
    v26[1] = sub_2411B6898(v13, v14, v27);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v9, v10, "[%{public}s] Current step is larger than total number of steps possible in onboarding.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v12, -1, -1);
    MEMORY[0x245621640](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_2414E9354(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)swift_getObjectType();
  id result = objc_msgSendSuper2(&v6, sel_viewDidAppear_, a1 & 1);
  if (!*((unsigned char *)v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_currentStep))
  {
    *((unsigned char *)v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_animatingStep) = 1;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    id v5 = v1;
    sub_2415C43A8(4, (uint64_t)sub_2414EAFE8, v4);
    return (id)swift_release();
  }
  return result;
}

void sub_2414E9470()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_24162B7E8();
  MEMORY[0x270FA5388](v3 - 8);
  id v59 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241631CA8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v60 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v10 = (char *)&v51 - v9;
  uint64_t v11 = sub_24162EFA8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_animatingStep] & 1) == 0)
  {
    uint64_t v15 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_currentStepCount;
    if (*(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_currentStepCount] < *(void *)(*(void *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_timelineSteps] + 16))
    {
      uint64_t v58 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_timelineSteps;
      uint64_t v56 = v6;
      sub_24162EF48();
      double v16 = v1;
      float64x2_t v17 = sub_24162EF98();
      int v55 = sub_2416322E8();
      BOOL v18 = os_log_type_enabled(v17, (os_log_type_t)v55);
      uint64_t v57 = v10;
      if (v18)
      {
        os_log_t v53 = v17;
        uint64_t v54 = v5;
        os_log_type_t v10 = (char *)swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        uint64_t v61 = v52;
        *(_DWORD *)os_log_type_t v10 = 136315650;
        aBlock[0] = ObjectType;
        swift_getMetatypeMetadata();
        uint64_t v19 = sub_241631D78();
        aBlock[0] = sub_2411B6898(v19, v20, &v61);
        sub_241632C28();
        swift_bridgeObjectRelease();
        *((_WORD *)v10 + 6) = 2048;
        uint64_t v21 = *(void *)&v1[v15];

        if (__OFADD__(v21, 1)) {
          goto LABEL_25;
        }
        aBlock[0] = v21 + 1;
        sub_241632C28();

        *((_WORD *)v10 + 11) = 2048;
        uint64_t v22 = *(void *)(*(void *)&v1[v58] + 16);

        aBlock[0] = v22;
        sub_241632C28();

        os_log_t v23 = v53;
        _os_log_impl(&dword_24118E000, v53, (os_log_type_t)v55, "[%s] Attempting to advance from step %ld of %ld", (uint8_t *)v10, 0x20u);
        uint64_t v24 = v52;
        swift_arrayDestroy();
        MEMORY[0x245621640](v24, -1, -1);
        MEMORY[0x245621640](v10, -1, -1);

        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        id v25 = v16;
        uint64_t v5 = v54;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        id v25 = v16;
      }
      uint64_t v26 = *(void *)&v1[v15];
      BOOL v27 = __OFADD__(v26, 1);
      unint64_t v28 = v26 + 1;
      uint64_t v29 = v56;
      id v30 = v60;
      if (!v27)
      {
        *(void *)&v1[v15] = v28;
        uint64_t v31 = *(void *)&v1[v58];
        unint64_t v32 = *(void *)(v31 + 16);
        if (v28 == v32)
        {
          sub_2411A3DF4((uint64_t)&v25[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_tutorialProvider], (uint64_t)aBlock);
          id v33 = v63;
          id v34 = v64;
          sub_2411B6854(aBlock, (uint64_t)v63);
          (*((void (**)(void *, void (*)()))v34 + 1))(v33, v34);
          _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)aBlock);
          goto LABEL_18;
        }
        if (v28 < v32)
        {
          uint64_t v35 = v31 + 32;
          int v36 = *(unsigned __int8 *)(v31 + 32 + v28);
          v25[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_currentStep] = v36;
          uint64_t v37 = *(void *)(v31 + 16);
          if (v37)
          {
            if (v36 == *(unsigned __int8 *)(v37 + v35 - 1))
            {
              uint64_t v38 = *(void **)&v25[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_footerButton];
              if (v38)
              {
                id v39 = v38;
                id v40 = v57;
                sub_241631C38();
                (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v30, v40, v5);
                if (qword_26B0131F0 != -1) {
                  swift_once();
                }
                id v41 = (id)qword_26B0181A0;
                sub_24162B7D8();
                sub_241631D38();
                (*(void (**)(char *, uint64_t))(v29 + 8))(v40, v5);
                uint64_t v42 = (void *)sub_241631CC8();
                swift_bridgeObjectRelease();
                objc_msgSend(v39, sel_setTitle_forState_, v42, 0);
              }
            }
          }
          sub_2414EA2E4();
          sub_2414E8F7C();
          uint64_t v43 = swift_allocObject();
          *(void *)(v43 + 16) = v25;
          id v44 = objc_allocWithZone(MEMORY[0x263F82E30]);
          objc_super v64 = sub_2414EAF3C;
          uint64_t v65 = v43;
          aBlock[0] = MEMORY[0x263EF8330];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_2411987F4;
          long long v63 = &unk_26F574EB8;
          uint64_t v45 = _Block_copy(aBlock);
          uint64_t v46 = v25;
          swift_release();
          id v47 = objc_msgSend(v44, sel_initWithDuration_curve_animations_, 0, v45, 0.25);
          _Block_release(v45);
          objc_msgSend(v47, sel_startAnimation);

LABEL_18:
          unsigned int v48 = v25[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_currentStep]
              - 3;
          os_log_type_t v10 = (char *)objc_msgSend(v25, sel_buttonTray);
          if (v48 > 1)
          {
            id v50 = (void *)sub_241631CC8();
            goto LABEL_22;
          }
          sub_241631C38();
          if (qword_26B0131F0 == -1)
          {
LABEL_20:
            id v49 = (id)qword_26B0181A0;
            sub_24162B7D8();
            sub_241631D38();
            id v50 = (void *)sub_241631CC8();
            swift_bridgeObjectRelease();
LABEL_22:
            objc_msgSend(v10, sel_setCaptionText_, v50);

            return;
          }
LABEL_27:
          swift_once();
          goto LABEL_20;
        }
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
  }
}

void sub_2414E9C7C(uint64_t a1)
{
  uint64_t v5 = sub_24162B7E8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v31 - v14;
  BOOL v16 = __OFADD__(a1, 1);
  uint64_t v17 = a1 + 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v33 = v7;
  uint64_t v34 = v13;
  id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v17);
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  id v35 = v18;
  id v20 = objc_msgSend(v19, sel_stringFromNumber_, v18);

  if (v20)
  {
    uint64_t v21 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    uint64_t v31 = v22;
    uint64_t v32 = v21;

    id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(*(void *)(v1+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_timelineSteps)+ 16));
    id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
    id v24 = objc_msgSend(v23, sel_stringFromNumber_, v3);

    if (v24)
    {
      uint64_t v1 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
      uint64_t v2 = v25;

      sub_241631C38();
      uint64_t v17 = v34;
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v15, v34);
      if (qword_26B0131F0 == -1)
      {
LABEL_5:
        id v26 = (id)qword_26B0181A0;
        sub_24162B7D8();
        sub_241631D38();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v17);
        sub_2414EAF94(0, (unint64_t *)&qword_26B012400, (void (*)(uint64_t))sub_241223B64);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_24163A4F0;
        uint64_t v28 = MEMORY[0x263F8D310];
        *(void *)(v27 + 56) = MEMORY[0x263F8D310];
        unint64_t v29 = sub_2411C0A14();
        uint64_t v30 = v31;
        *(void *)(v27 + 32) = v32;
        *(void *)(v27 + 40) = v30;
        *(void *)(v27 + 96) = v28;
        *(void *)(v27 + 104) = v29;
        *(void *)(v27 + 64) = v29;
        *(void *)(v27 + 72) = v1;
        *(void *)(v27 + 80) = v2;
        sub_241631D28();

        swift_bridgeObjectRelease();
        return;
      }
LABEL_7:
      swift_once();
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_2414EA008(void *a1)
{
  sub_2411D0524(0, (unint64_t *)&qword_26B0121F0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24163ADC0;
  id v4 = objc_msgSend(a1, sel_topAnchor);
  id v5 = sub_2414E80C8();
  id v6 = objc_msgSend(v5, sel_view);

  if (!v6)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v7 = objc_msgSend(v6, sel_bottomAnchor);

  id v8 = objc_msgSend(v1, sel_view);
  if (!v8)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v9 = v8;
  objc_msgSend(v8, sel_frame);
  double v11 = v10;

  if (v11 > 320.0) {
    double v12 = 44.0;
  }
  else {
    double v12 = 24.0;
  }
  uint64_t v13 = self;
  id v14 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v7, v12);

  *(void *)(v3 + 32) = v14;
  id v15 = objc_msgSend(a1, sel_leadingAnchor);
  id v16 = objc_msgSend(v1, sel_contentView);
  id v17 = objc_msgSend(v16, sel_leadingAnchor);

  id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(void *)(v3 + 40) = v18;
  id v19 = objc_msgSend(a1, sel_trailingAnchor);
  id v20 = objc_msgSend(v1, sel_contentView);
  id v21 = objc_msgSend(v20, sel_trailingAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(void *)(v3 + 48) = v22;
  sub_241631F48();
  sub_2411F1694();
  id v23 = (id)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_activateConstraints_, v23);
}

void sub_2414EA2E4()
{
  switch(*(unsigned char *)(v0
                    + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_currentStep))
  {
    case 1:
      uint64_t v1 = *(void *)(v0
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_cycleTimelineDataProvider);
      *(unsigned char *)(v1
               + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34OnboardingCycleLoggingDataProvider_showSupplementaryData) = 1;
      uint64_t v2 = *(void **)(*(void *)(v1
                                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin34OnboardingCycleLoggingDataProvider_observers)
                    + 16);
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = sub_2414EAF44;
      *(void *)(v3 + 24) = v1;
      _OWORD v10[4] = sub_2414EAF84;
      v10[5] = v3;
      v10[0] = MEMORY[0x263EF8330];
      v10[1] = 1107296256;
      v10[2] = sub_241450904;
      v10[3] = &unk_26F574F08;
      id v4 = _Block_copy(v10);
      swift_retain_n();
      swift_release();
      objc_msgSend(v2, sel_notifyObservers_, v4);
      _Block_release(v4);
      swift_release();
      return;
    case 2:
      if (!__OFADD__(*(void *)(*(void *)(v0+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_cycleTimelineDataProvider)+ 32), *(void *)(*(void *)(v0+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_cycleTimelineDataProvider)+ 80)))goto LABEL_13; {
      __break(1u);
      }
      goto LABEL_6;
    case 3:
LABEL_6:
      if (!__OFADD__(*(void *)(*(void *)(v0+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_cycleTimelineDataProvider)+ 40), *(void *)(*(void *)(v0+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_cycleTimelineDataProvider)+ 80)))goto LABEL_13; {
      __break(1u);
      }
LABEL_9:
      uint64_t v5 = *(void *)(v0
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_cycleTimelineDataProvider);
      uint64_t v6 = *(void *)(v5 + 40);
      uint64_t v7 = *(void *)(v5 + 80);
      BOOL v8 = __OFADD__(v6, v7);
      uint64_t v9 = v6 + v7;
      if (v8)
      {
        __break(1u);
        JUMPOUT(0x2414EA4D8);
      }
      if (__OFADD__(v9, 5)) {
        __break(1u);
      }
LABEL_13:
      sub_2414EA4F8();
      return;
    case 4:
      goto LABEL_9;
    case 5:
    case 6:
    case 7:
      goto LABEL_13;
    default:
      return;
  }
}

uint64_t sub_2414EA4F8()
{
  uint64_t v18 = sub_24162BB18();
  uint64_t v1 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162B718();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_24162BA08();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_241631AC8();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = MEMORY[0x270FA5388](v6).n128_u64[0];
  double v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_calendarCache], sel_currentCalendar, v8);
  sub_24162B928();

  sub_24162B708();
  sub_2416319E8();
  v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_animatingStep] = 1;
  id v12 = sub_2414E80C8();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v0;
  id v14 = v0;
  id v15 = sub_241574ADC();
  char v16 = v15[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37CycleTimelineCollectionViewController_state];
  v15[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37CycleTimelineCollectionViewController_state] = 3;
  sub_2412BD780(v16);
  sub_24128B9FC();
  sub_241632C68();
  MEMORY[0x245618FA0](v19 & ~(v19 >> 63), 0);
  sub_2412BFB08((uint64_t)v3, 1, (uint64_t)sub_2414EAF8C, v13);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v18);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

void sub_2414EA804(uint64_t *a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_currentStepCount;
  uint64_t v3 = *(uint64_t *)((char *)a1
                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_currentStepCount);
  unint64_t v4 = v3 - 1;
  if (v3 < 1) {
    goto LABEL_9;
  }
  uint64_t v5 = (uint64_t *)((char *)a1
                 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_infoViews);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if ((*v5 & 0xC000000000000001) != 0) {
    goto LABEL_24;
  }
  if (v4 >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_26;
  }
  for (id i = *(id *)(v6 + 8 * v4 + 32); ; id i = (id)MEMORY[0x245620370](v4))
  {
    double v8 = i;
    swift_endAccess();
    objc_msgSend(v8, sel_setAlpha_, 0.0);

    uint64_t v9 = (uint64_t *)((char *)v1
                   + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_infoViewBottomConstraints);
    swift_beginAccess();
    uint64_t v10 = *v9;
    if ((*v9 & 0xC000000000000001) != 0)
    {
LABEL_26:
      id v11 = (id)MEMORY[0x245620370](v4);
      goto LABEL_8;
    }
    if (v4 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    id v11 = *(id *)(v10 + 8 * v4 + 32);
LABEL_8:
    id v12 = v11;
    swift_endAccess();
    objc_msgSend(v12, sel_setActive_, 0);

    uint64_t v3 = *(uint64_t *)((char *)v1 + v2);
LABEL_9:
    uint64_t v13 = (uint64_t *)((char *)v1
                    + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_infoViews);
    swift_beginAccess();
    uint64_t v14 = *v13;
    if ((*v13 & 0xC000000000000001) != 0)
    {
      id v15 = (id)MEMORY[0x245620370](v3);
    }
    else
    {
      if (v3 < 0)
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        id v17 = (id)MEMORY[0x245620370](v3);
LABEL_17:
        uint64_t v18 = v17;
        swift_endAccess();
        objc_msgSend(v18, sel_setActive_, 1);

        return;
      }
      if ((unint64_t)v3 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_20;
      }
      id v15 = *(id *)(v14 + 8 * v3 + 32);
    }
    unint64_t v4 = (unint64_t)v15;
    swift_endAccess();
    objc_msgSend((id)v4, sel_setAlpha_, 1.0);

    uint64_t v1 = (uint64_t *)((char *)v1
                   + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_infoViewBottomConstraints);
    swift_beginAccess();
    uint64_t v16 = *v1;
    if ((*v1 & 0xC000000000000001) != 0) {
      goto LABEL_21;
    }
    if (v3 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v3 < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v17 = *(id *)(v16 + 8 * v3 + 32);
      goto LABEL_17;
    }
    __break(1u);
LABEL_24:
    ;
  }
  __break(1u);
}

void sub_2414EAA4C(char a1, uint64_t a2)
{
  if (a1)
  {
    *(unsigned char *)(a2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_animatingStep) = 0;
    UIAccessibilityNotifications v2 = *MEMORY[0x263F83200];
    id v3 = sub_2414E80C8();
    UIAccessibilityPostNotification(v2, v3);
  }
}

void sub_2414EABDC()
{
  qword_268D01930 = 0x4034000000000000;
}

id sub_2414EABEC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  id v1 = objc_msgSend(self, sel__preferredFontForTextStyle_maximumContentSizeCategory_, *MEMORY[0x263F83570], *MEMORY[0x263F83418]);
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setTextAlignment_, 1);
  id v2 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

unint64_t _s24MenstrualCyclesAppPlugin17CycleTimelineStepO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 8) {
    return 8;
  }
  return result;
}

unint64_t sub_2414EAD08()
{
  unint64_t result = qword_268D01938;
  if (!qword_268D01938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01938);
  }
  return result;
}

unint64_t sub_2414EAD60()
{
  unint64_t result = qword_268D01940;
  if (!qword_268D01940)
  {
    sub_2411D0524(255, &qword_268D01948, (uint64_t)&type metadata for CycleTimelineStep, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01940);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CycleTimelineStep(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2414EAEA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CycleTimelineStep()
{
  return &type metadata for CycleTimelineStep;
}

uint64_t type metadata accessor for OnboardingTimelineTutorialViewController()
{
  return self;
}

uint64_t sub_2414EAF04()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2414EAF3C()
{
  sub_2414EA804(*(uint64_t **)(v0 + 16));
}

uint64_t sub_2414EAF44(uint64_t a1)
{
  return sub_2415C517C(a1, v1);
}

uint64_t sub_2414EAF4C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2414EAF84(uint64_t a1)
{
  return sub_2415C9F1C(a1, *(void (**)(void *))(v1 + 16));
}

void sub_2414EAF8C(char a1)
{
  sub_2414EAA4C(a1, *(void *)(v1 + 16));
}

void sub_2414EAF94(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_2416331E8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2414EAFE8()
{
  *(unsigned char *)(*(void *)(v0 + 16)
           + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin40OnboardingTimelineTutorialViewController_animatingStep) = 0;
}

uint64_t sub_2414EB00C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_2411FEC8C();
  uint64_t v59 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v56 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = (char *)&v49 - v7;
  sub_2411FEB18();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  int v55 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v49 - v12;
  uint64_t v14 = sub_241631AC8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v57 = (char *)&v49 - v18;
  MEMORY[0x270FA5388](v19);
  id v21 = (char *)&v49 - v20;
  sub_2414F0B9C((unint64_t *)&qword_26B0121C0, MEMORY[0x263F090E8]);
  char v22 = sub_241631BD8();
  uint64_t v61 = v15;
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v58(v21, a1, v14);
  uint64_t v60 = v2;
  sub_2414F0BE4(v2, (uint64_t)v13, (uint64_t (*)(void))sub_2411FEB18);
  if (v22) {
    char v23 = sub_241631BB8();
  }
  else {
    char v23 = 0;
  }
  sub_2414F0C4C((uint64_t)v13, (uint64_t (*)(void))sub_2411FEB18);
  os_log_t v53 = *(uint64_t (**)(char *, uint64_t))(v61 + 8);
  uint64_t result = v53(v21, v14);
  if ((v23 & 1) == 0)
  {
    uint64_t v25 = v60;
    char v26 = sub_241631BA8();
    uint64_t v51 = v9;
    if (v26)
    {
      uint64_t v28 = v57;
      uint64_t v27 = v58;
      v58(v57, v25 + *(int *)(v9 + 36), v14);
      sub_2414F0C4C(v25, (uint64_t (*)(void))sub_2411FEB18);
      uint64_t result = sub_241631BD8();
      if (result)
      {
        uint64_t v29 = v59;
        uint64_t v30 = v54;
        uint64_t v31 = &v54[*(int *)(v59 + 48)];
        v27(v54, a1, v14);
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
        uint64_t v52 = v31;
        v32(v31, v28, v14);
        id v33 = v56;
        uint64_t v34 = &v56[*(int *)(v29 + 48)];
        v27(v56, (uint64_t)v30, v14);
        v27(v34, (uint64_t)v31, v14);
        uint64_t v35 = (uint64_t)v55;
        v32(v55, v33, v14);
        int v36 = (void (*)(char *, uint64_t))v53;
        v53(v34, v14);
        uint64_t v37 = &v33[*(int *)(v59 + 48)];
        v32(v33, v30, v14);
        uint64_t v38 = v37;
        id v39 = v52;
LABEL_10:
        v32(v38, v39, v14);
        v32((char *)(v35 + *(int *)(v51 + 36)), v37, v14);
        v36(v33, v14);
        return sub_2411FED54(v35, v60);
      }
      __break(1u);
    }
    else
    {
      id v40 = v57;
      v58(v57, v25, v14);
      sub_2414F0C4C(v25, (uint64_t (*)(void))sub_2411FEB18);
      uint64_t v62 = 1;
      sub_2414F0B9C((unint64_t *)&unk_268CFC5C0, MEMORY[0x263F090E8]);
      id v41 = v40;
      uint64_t v42 = v52;
      sub_241632C58();
      uint64_t result = sub_241631BD8();
      if (result)
      {
        uint64_t v43 = v59;
        id v44 = v54;
        uint64_t v45 = &v54[*(int *)(v59 + 48)];
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
        v32(v54, v41, v14);
        id v50 = v45;
        v32(v45, v42, v14);
        id v33 = v56;
        uint64_t v46 = &v56[*(int *)(v43 + 48)];
        id v47 = (void (*)(char *, char *, uint64_t))v58;
        v58(v56, (uint64_t)v44, v14);
        v47(v46, v45, v14);
        uint64_t v35 = (uint64_t)v55;
        v32(v55, v33, v14);
        unsigned int v48 = v46;
        int v36 = (void (*)(char *, uint64_t))v53;
        v53(v48, v14);
        uint64_t v37 = &v33[*(int *)(v59 + 48)];
        v32(v33, v44, v14);
        uint64_t v38 = v37;
        id v39 = v50;
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  return result;
}

id sub_2414EB674(void *a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = v3;
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_241633068()) {
    unint64_t v8 = sub_2411CA178(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v8 = MEMORY[0x263F8EE88];
  }
  *(void *)&v7[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25CycleChartsCollectionView_subscriptions] = v8;
  *(void *)&v7[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25CycleChartsCollectionView_modelProvider] = a2;
  swift_retain();

  v17.receiver = v7;
  v17.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v17, sel_initWithFrame_collectionViewLayout_, a1, 0.0, 0.0, 0.0, 0.0);
  double v10 = *MEMORY[0x263F83970];
  id v11 = v9;
  objc_msgSend(v11, sel_setDecelerationRate_, v10);
  objc_msgSend(v11, sel_setAlwaysBounceHorizontal_, 1);
  objc_msgSend(v11, sel_setAlwaysBounceVertical_, 1);
  objc_msgSend(v11, sel_setDirectionalLockEnabled_, 1);
  uint64_t v12 = self;
  id v13 = v11;
  id v14 = objc_msgSend(v12, sel_systemBackgroundColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  objc_msgSend(v13, sel_setAllowsSelection_, 0);
  objc_msgSend(v13, sel_setShowsHorizontalScrollIndicator_, 0);
  id v15 = v13;
  objc_msgSend(v15, sel_setShowsVerticalScrollIndicator_, 0);

  swift_release();
  return v15;
}

void sub_2414EB904()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  uint64_t v6 = sub_24162EF98();
  os_log_type_t v7 = sub_2416322B8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v1;
    id v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = v10;
    *(_DWORD *)id v9 = 136446210;
    uint64_t v11 = sub_2416333E8();
    uint64_t v17 = sub_2411B6898(v11, v12, &v18);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v6, v7, "[%{public}s] Reconfiguring all visible items", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v10, -1, -1);
    id v13 = v9;
    uint64_t v1 = v16;
    MEMORY[0x245621640](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v14 = objc_msgSend(v1, sel_indexPathsForVisibleItems);
  if (!v14)
  {
    sub_24162BB18();
    sub_241631F28();
    id v14 = (id)sub_241631F18();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v1, sel_reconfigureItemsAtIndexPaths_, v14);
}

id CycleChartsCollectionView.__allocating_init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  id v7 = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_collectionViewLayout_, a1, a2, a3, a4, a5);

  return v7;
}

void CycleChartsCollectionView.init(frame:collectionViewLayout:)()
{
}

id CycleChartsCollectionView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CycleChartsCollectionView()
{
  return self;
}

uint64_t sub_2414EBCD4@<X0>(uint64_t a1@<X8>)
{
  sub_2411FEC8C();
  uint64_t v97 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v109 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v98 = (char *)&v84 - v6;
  sub_2411FEB18();
  uint64_t v102 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v94 = (char *)&v84 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v96 = (uint64_t)&v84 - v14;
  uint64_t v15 = sub_241631AC8();
  uint64_t v107 = *(void **)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v88 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v100 = (char *)&v84 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v95 = (char *)&v84 - v20;
  MEMORY[0x270FA5388](v21);
  char v23 = (char *)&v84 - v22;
  *(void *)&double v25 = MEMORY[0x270FA5388](v24).n128_u64[0];
  uint64_t v27 = (char *)&v84 - v26;
  id v28 = objc_msgSend(v1, sel_indexPathsForVisibleItems, v25);
  sub_24162BB18();
  uint64_t v29 = sub_241631F28();

  id v30 = v1;
  uint64_t v31 = sub_2414F0724(v29, v30);
  swift_bridgeObjectRelease();

  uint64_t v101 = v31[2];
  if (!v101)
  {
    swift_bridgeObjectRelease();
    uint64_t v83 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v83, 1, v102);
  }
  uint64_t v86 = a1;
  uint64_t v32 = v8;
  id v33 = v107;
  uint64_t v35 = v107 + 2;
  uint64_t v34 = (void (*)(void))v107[2];
  uint64_t v108 = (char *)v31 + ((*((unsigned __int8 *)v107 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v107 + 80));
  ((void (*)(char *))v34)(v27);
  sub_241631A98();
  uint64_t v106 = sub_2414F0B9C((unint64_t *)&qword_26B0121C0, MEMORY[0x263F090E8]);
  uint64_t result = sub_241631BD8();
  if ((result & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v37 = v33;
  uint64_t v85 = v32;
  uint64_t v38 = v97;
  id v39 = &v98[*(int *)(v97 + 48)];
  uint64_t v84 = v27;
  v34();
  unint64_t v87 = v31;
  id v40 = (void (*)(void))v37[4];
  uint64_t v99 = v39;
  uint64_t v93 = v23;
  ((void (*)(char *, char *, uint64_t))v40)(v39, v23, v15);
  uint64_t v41 = *(int *)(v38 + 48);
  uint64_t v42 = v35;
  uint64_t v43 = v109;
  id v44 = &v109[v41];
  ((void (*)(char *, char *, uint64_t))v34)(v109, v98, v15);
  uint64_t v104 = v34;
  uint64_t v105 = v42;
  ((void (*)(char *, char *, uint64_t))v34)(v44, v39, v15);
  uint64_t v45 = v94;
  ((void (*)(char *, char *, uint64_t))v40)(v94, v43, v15);
  uint64_t v46 = (void (*)(char *, uint64_t))v37[1];
  v46(v44, v15);
  id v47 = &v43[*(int *)(v97 + 48)];
  ((void (*)(char *, char *, uint64_t))v40)(v43, v98, v15);
  ((void (*)(char *, char *, uint64_t))v40)(v47, v99, v15);
  unsigned int v48 = &v45[*(int *)(v102 + 36)];
  unint64_t v91 = v37 + 4;
  uint64_t v90 = v40;
  ((void (*)(char *, char *, uint64_t))v40)(v48, v47, v15);
  v46(v43, v15);
  uint64_t v49 = (uint64_t)v45;
  uint64_t v50 = v96;
  sub_2411FED54(v49, v96);
  uint64_t v107 = v37 + 1;
  uint64_t v99 = (char *)v37[9];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v92 = v10;
  uint64_t v51 = v95;
  uint64_t v52 = v101;
  os_log_t v53 = v108;
  uint64_t v103 = v46;
  while (1)
  {
    uint64_t v108 = v53;
    int v55 = v104;
    ((void (*)(char *))v104)(v51);
    char v56 = sub_241631BD8();
    uint64_t v57 = v100;
    ((void (*)(char *, char *, uint64_t))v55)(v100, v51, v15);
    sub_2414F0BE4(v50, (uint64_t)v10, (uint64_t (*)(void))sub_2411FEB18);
    if (v56)
    {
      char v58 = sub_241631BB8();
      sub_2414F0C4C((uint64_t)v10, (uint64_t (*)(void))sub_2411FEB18);
      uint64_t v59 = v103;
      v103(v57, v15);
      if (v58) {
        goto LABEL_5;
      }
    }
    else
    {
      sub_2414F0C4C((uint64_t)v10, (uint64_t (*)(void))sub_2411FEB18);
      v103(v57, v15);
    }
    uint64_t v101 = v52;
    uint64_t v60 = v51;
    if ((sub_241631BA8() & 1) == 0)
    {
      uint64_t v73 = v93;
      uint64_t v74 = v104;
      ((void (*)(char *, uint64_t, uint64_t))v104)(v93, v50, v15);
      sub_2414F0C4C(v50, (uint64_t (*)(void))sub_2411FEB18);
      uint64_t v110 = 1;
      sub_2414F0B9C((unint64_t *)&unk_268CFC5C0, MEMORY[0x263F090E8]);
      uint64_t v75 = v88;
      sub_241632C58();
      uint64_t result = sub_241631BD8();
      if ((result & 1) == 0) {
        goto LABEL_19;
      }
      long long v63 = v94;
      uint64_t v76 = v97;
      uint64_t v77 = v74;
      uint64_t v78 = v98;
      uint64_t v79 = &v98[*(int *)(v97 + 48)];
      uint64_t v68 = v90;
      ((void (*)(char *, char *, uint64_t))v90)(v98, v73, v15);
      uint64_t v89 = v79;
      ((void (*)(char *, char *, uint64_t))v68)(v79, v75, v15);
      uint64_t v80 = &v109[*(int *)(v76 + 48)];
      ((void (*)(char *, char *, uint64_t))v77)(v109, v78, v15);
      ((void (*)(char *, char *, uint64_t))v77)(v80, v79, v15);
      ((void (*)(char *, char *, uint64_t))v68)(v63, v109, v15);
      uint64_t v59 = v103;
      v103(v80, v15);
      uint64_t v81 = *(int *)(v76 + 48);
      uint64_t v71 = v109;
      uint64_t v72 = &v109[v81];
      ((void (*)(char *, char *, uint64_t))v68)(v109, v78, v15);
      goto LABEL_4;
    }
    uint64_t v61 = v93;
    uint64_t v62 = v104;
    ((void (*)(char *, uint64_t, uint64_t))v104)(v93, v50 + *(int *)(v102 + 36), v15);
    sub_2414F0C4C(v50, (uint64_t (*)(void))sub_2411FEB18);
    uint64_t result = sub_241631BD8();
    if ((result & 1) == 0) {
      break;
    }
    long long v63 = v94;
    uint64_t v64 = v97;
    uint64_t v65 = v62;
    uint64_t v66 = v98;
    uint64_t v67 = &v98[*(int *)(v97 + 48)];
    ((void (*)(char *, char *, uint64_t))v65)(v98, v60, v15);
    uint64_t v68 = v90;
    ((void (*)(char *, char *, uint64_t))v90)(v67, v61, v15);
    uint64_t v69 = &v109[*(int *)(v64 + 48)];
    ((void (*)(char *, char *, uint64_t))v65)(v109, v66, v15);
    ((void (*)(char *, char *, uint64_t))v65)(v69, v67, v15);
    ((void (*)(char *, char *, uint64_t))v68)(v63, v109, v15);
    uint64_t v59 = v103;
    v103(v69, v15);
    uint64_t v70 = *(int *)(v64 + 48);
    uint64_t v71 = v109;
    uint64_t v72 = &v109[v70];
    ((void (*)(char *, char *, uint64_t))v68)(v109, v66, v15);
LABEL_4:
    v68();
    ((void (*)(char *, char *, uint64_t))v68)(&v63[*(int *)(v102 + 36)], v72, v15);
    v59(v71, v15);
    uint64_t v54 = (uint64_t)v63;
    uint64_t v50 = v96;
    sub_2411FED54(v54, v96);
    uint64_t v10 = v92;
    uint64_t v51 = v95;
    uint64_t v52 = v101;
LABEL_5:
    v59(v51, v15);
    os_log_t v53 = &v99[(void)v108];
    if (!--v52)
    {
      swift_bridgeObjectRelease();
      uint64_t v82 = v50;
      a1 = v86;
      sub_2411FED54(v82, v86);
      v59(v84, v15);
      swift_bridgeObjectRelease();
      uint64_t v83 = 0;
      uint64_t v8 = v85;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v83, 1, v102);
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

id sub_2414EC76C(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v152 = type metadata accessor for CycleChartCycle(0);
  uint64_t v151 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  uint64_t v131 = (uint64_t *)((char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24124418C(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v141 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414F0CAC(0);
  uint64_t v144 = v7;
  uint64_t v145 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v142 = (char *)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414F0D44();
  uint64_t v146 = v9;
  uint64_t v147 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v143 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F82068];
  sub_2414F0CE0(0, &qword_268D019D0, (uint64_t (*)(uint64_t))sub_2414F0DF0, MEMORY[0x263F82068]);
  uint64_t v158 = v12;
  uint64_t v182 = *(void **)(v12 - 8);
  unint64_t v137 = v182[8];
  MEMORY[0x270FA5388](v12);
  uint64_t v164 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unsigned __int8 v163 = (char *)&v131 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v162 = (char *)&v131 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v161 = (char *)&v131 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v171 = (char *)&v131 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v170 = (char *)&v131 - v23;
  MEMORY[0x270FA5388](v24);
  v180 = (char *)&v131 - v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v179 = (char *)&v131 - v27;
  sub_2414F0CE0(0, &qword_268D019E0, (uint64_t (*)(uint64_t))sub_2414F0E24, v11);
  uint64_t v181 = v28;
  uint64_t v169 = *(void **)(v28 - 8);
  unint64_t v136 = v169[8];
  MEMORY[0x270FA5388](v28);
  id v160 = (char *)&v131 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v159 = (char *)&v131 - v31;
  MEMORY[0x270FA5388](v32);
  unint64_t v157 = (char *)&v131 - v33;
  MEMORY[0x270FA5388](v34);
  uint64_t v168 = (char *)&v131 - v35;
  MEMORY[0x270FA5388](v36);
  uint64_t v178 = (char *)&v131 - v37;
  MEMORY[0x270FA5388](v38);
  uint64_t v177 = (char *)&v131 - v39;
  sub_2414F0CE0(0, &qword_268D019F0, (uint64_t (*)(uint64_t))sub_2414F0E58, v11);
  uint64_t v175 = *(void *)(v40 - 8);
  uint64_t v176 = v40;
  unint64_t v134 = *(void *)(v175 + 64);
  MEMORY[0x270FA5388](v40);
  unint64_t v154 = (char *)&v131 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v167 = (char *)&v131 - v43;
  sub_2414F0E8C();
  uint64_t v173 = *(void **)(v44 - 8);
  uint64_t v174 = v44;
  uint64_t v133 = v173[8];
  MEMORY[0x270FA5388](v44);
  unint64_t v156 = (char *)&v131 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v46);
  uint64_t v155 = (char *)&v131 - v47;
  MEMORY[0x270FA5388](v48);
  uint64_t v172 = (char *)&v131 - v49;
  MEMORY[0x270FA5388](v50);
  uint64_t v166 = (char *)&v131 - v51;
  sub_2414F0F08();
  uint64_t v53 = v52;
  uint64_t v54 = *(void *)(v52 - 8);
  uint64_t v55 = *(void *)(v54 + 64);
  MEMORY[0x270FA5388](v52);
  char v56 = (char *)&v131 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v57);
  uint64_t v59 = (char *)&v131 - v58;
  id v60 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CycleChartsCollectionViewLayout()), sel_init);
  id v61 = objc_allocWithZone(v2);
  id v62 = v60;
  id v138 = v62;
  uint64_t v63 = a1;
  swift_retain();
  id v135 = sub_2414EB674(v62, a1);
  objc_msgSend(v135, sel_setSemanticContentAttribute_, 3);
  sub_2414F0F94(0, &qword_268D01A18, (void (*)(uint64_t))type metadata accessor for CycleChartDayView);
  sub_241631AC8();
  swift_retain();
  sub_241632448();
  uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  uint64_t v148 = v59;
  v64(v56, v59, v53);
  unint64_t v65 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  uint64_t v165 = swift_allocObject();
  uint64_t v149 = v54;
  uint64_t v66 = *(void (**)(unint64_t, char *, uint64_t))(v54 + 32);
  uint64_t v150 = v53;
  v66(v165 + v65, v56, v53);
  sub_2414F0F94(0, &qword_268D01A08, (void (*)(uint64_t))type metadata accessor for CycleChartDayBackgroundView);
  swift_retain();
  sub_241632468();
  swift_retain();
  sub_241632468();
  sub_2414F0E58(0);
  swift_retain();
  uint64_t v67 = v167;
  sub_241632468();
  uint64_t v68 = swift_allocObject();
  uint64_t v69 = v153;
  *(void *)(v68 + 16) = v63;
  *(void *)(v68 + 24) = v69;
  sub_2414F0E24(0);
  swift_retain();
  swift_retain();
  sub_241632468();
  swift_retain();
  sub_241632468();
  swift_retain();
  uint64_t v70 = v168;
  uint64_t v140 = v68;
  sub_241632468();
  uint64_t v71 = swift_allocObject();
  uint64_t v132 = v63;
  *(void *)(v71 + 16) = v63;
  *(void *)(v71 + 24) = v69;
  sub_2414F0DF0(0);
  swift_retain();
  swift_retain();
  sub_241632468();
  swift_retain();
  sub_241632468();
  swift_retain();
  uint64_t v72 = v170;
  sub_241632468();
  swift_retain();
  uint64_t v73 = v171;
  uint64_t v139 = v71;
  sub_241632468();
  uint64_t v74 = v175;
  (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v154, v67, v176);
  uint64_t v75 = v169;
  uint64_t v76 = (void (*)(char *, char *, uint64_t))v169[2];
  uint64_t v77 = v181;
  v76(v157, v177, v181);
  v76(v159, v178, v77);
  v76(v160, v70, v77);
  uint64_t v78 = v182;
  uint64_t v79 = (void (*)(char *, char *, uint64_t))v182[2];
  uint64_t v80 = v158;
  v79(v161, v179, v158);
  v79(v162, v72, v80);
  v79(v163, v73, v80);
  uint64_t v81 = v173;
  uint64_t v82 = v174;
  uint64_t v83 = (void (*)(char *, char *, uint64_t))v173[2];
  v83(v155, v166, v174);
  v83(v156, v172, v82);
  v79(v164, v180, v80);
  unint64_t v84 = (*(unsigned __int8 *)(v74 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  uint64_t v85 = *((unsigned __int8 *)v75 + 80);
  uint64_t v86 = v75;
  unint64_t v87 = (v134 + v85 + v84) & ~v85;
  unint64_t v88 = (v136 + v85 + v87) & ~v85;
  unint64_t v89 = (v136 + v85 + v88) & ~v85;
  uint64_t v90 = *((unsigned __int8 *)v78 + 80);
  uint64_t v91 = (v136 + v90 + v89) & ~v90;
  unint64_t v92 = (v137 + v90 + v91) & ~v90;
  unint64_t v93 = (v137 + v90 + v92) & ~v90;
  uint64_t v94 = *((unsigned __int8 *)v81 + 80);
  unint64_t v95 = (v137 + v94 + v93) & ~v94;
  unint64_t v134 = (v133 + v94 + v95) & ~v94;
  unint64_t v136 = (v133 + v90 + v134) & ~v90;
  unint64_t v137 = (v137 + v136 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v96 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v175 + 32))(v96 + v84, v154, v176);
  unint64_t v97 = v96 + v87;
  unint64_t v98 = (void (*)(unint64_t, char *, uint64_t))v86[4];
  uint64_t v99 = v181;
  v98(v97, v157, v181);
  unint64_t v100 = v96 + v88;
  uint64_t v101 = v158;
  v98(v100, v159, v99);
  v98(v96 + v89, v160, v99);
  uint64_t v102 = (void (*)(uint64_t, char *, uint64_t))v182[4];
  v102(v96 + v91, v161, v101);
  v102(v96 + v92, v162, v101);
  v102(v96 + v93, v163, v101);
  unint64_t v103 = v96 + v95;
  uint64_t v104 = v174;
  uint64_t v105 = (void (*)(unint64_t, char *, uint64_t))v173[4];
  v105(v103, v155, v174);
  v105(v96 + v134, v156, v104);
  v102(v96 + v136, v164, v101);
  *(void *)(v96 + v137) = v153;
  id v106 = objc_allocWithZone((Class)type metadata accessor for CycleChartsCollectionViewDataSource());
  id v107 = v135;
  uint64_t v108 = v165;
  swift_retain();
  swift_retain();
  id v109 = sub_24143A70C(v107, (uint64_t)sub_2414F1090, v108, (uint64_t)sub_2414F1558, v96);
  uint64_t v110 = v132;
  swift_beginAccess();
  sub_2414F0CE0(0, &qword_268CFB6E0, (uint64_t (*)(uint64_t))sub_241244224, MEMORY[0x263EFDE58]);
  uint64_t v111 = v142;
  sub_24162FC18();
  swift_endAccess();
  type metadata accessor for CycleChartsModel();
  sub_2414F0B9C(&qword_268D04820, sub_2414F0CAC);
  uint64_t v112 = v143;
  uint64_t v113 = v144;
  sub_24162FCC8();
  (*(void (**)(char *, uint64_t))(v145 + 8))(v111, v113);
  uint64_t v114 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v115 = (void *)swift_allocObject();
  uint64_t v116 = v138;
  v115[2] = v114;
  v115[3] = v116;
  v115[4] = v109;
  sub_2414F0B9C(&qword_268D04840, (void (*)(uint64_t))sub_2414F0D44);
  uint64_t v117 = v116;
  uint64_t v164 = (char *)v109;
  uint64_t v118 = v146;
  sub_24162FDD8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v147 + 8))(v112, v118);
  swift_beginAccess();
  sub_24162FA78();
  swift_endAccess();
  swift_release();
  uint64_t v183 = *(void *)(*(void *)(v110 + 24) + 32);
  uint64_t v119 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v120 = swift_allocObject();
  *(void *)(v120 + 16) = sub_2414F1894;
  *(void *)(v120 + 24) = v119;
  sub_2412170FC();
  sub_2414F0B9C(&qword_268CFAEE0, (void (*)(uint64_t))sub_2412170FC);
  swift_retain();
  sub_24162FDD8();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_24162FA78();
  swift_endAccess();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v121 = (uint64_t)v141;
  sub_24162FC48();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48))(v121, 1, v152))
  {
    sub_2414F0C4C(v121, (uint64_t (*)(void))sub_24124418C);
    uint64_t v122 = 0;
  }
  else
  {
    uint64_t v123 = v131;
    sub_2414F0BE4(v121, (uint64_t)v131, type metadata accessor for CycleChartCycle);
    sub_2414F0C4C(v121, (uint64_t (*)(void))sub_24124418C);
    uint64_t v122 = *v123;
    sub_2414F0C4C((uint64_t)v123, type metadata accessor for CycleChartCycle);
  }
  uint64_t v124 = &v117[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin31CycleChartsCollectionViewLayout_pendingScrollToSectionIndex];
  *(void *)uint64_t v124 = v122;
  v124[8] = 0;
  objc_msgSend(v117, sel_invalidateLayout);

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v125 = (void (*)(char *, uint64_t))v182[1];
  v125(v171, v101);
  v125(v170, v101);
  v125(v180, v101);
  v125(v179, v101);
  uint64_t v126 = (void (*)(char *, uint64_t))v169[1];
  uint64_t v127 = v181;
  v126(v168, v181);
  v126(v178, v127);
  v126(v177, v127);
  (*(void (**)(char *, uint64_t))(v175 + 8))(v167, v176);
  uint64_t v128 = (void (*)(char *, uint64_t))v173[1];
  uint64_t v129 = v174;
  v128(v172, v174);
  v128(v166, v129);
  (*(void (**)(char *, uint64_t))(v149 + 8))(v148, v150);
  return v107;
}

unint64_t sub_2414EDD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[0] = a3;
  v21[1] = a1;
  uint64_t v5 = type metadata accessor for CycleChartCycle(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241244224(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v21 - v13;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  uint64_t v15 = type metadata accessor for CycleChartsModel();
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  unint64_t result = v16(v14, 1, v15);
  if (result == 1) {
    goto LABEL_8;
  }
  uint64_t v18 = *(void *)v14;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2414F0C4C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
  unint64_t result = sub_24162BB08();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result >= *(void *)(v18 + 16))
  {
LABEL_7:
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_2414F0BE4(v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * result, (uint64_t)v8, type metadata accessor for CycleChartCycle);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a4 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  unint64_t result = v16(v11, 1, v15);
  if (result != 1)
  {
    uint64_t v20 = *(void **)&v11[*(int *)(v15 + 32)];
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_2414F0C4C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
    sub_2414EE090((uint64_t)v8, v21[0], v19, v20);
    swift_bridgeObjectRelease();
    return sub_2414F0C4C((uint64_t)v8, type metadata accessor for CycleChartCycle);
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_2414EE090(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v32 = a1;
  uint64_t v9 = sub_241631AC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CycleChartCycle(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (void *)((char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v28 - v17;
  uint64_t v19 = *(char **)(v5 + qword_268D04600);
  if (v19)
  {
    v28[1] = v5;
    uint64_t v30 = v9;
    uint64_t v31 = a2;
    uint64_t v20 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin10CycleChart_rows;
    uint64_t v21 = *(void *)&v19[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin10CycleChart_rows];
    uint64_t v29 = v19;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    char v22 = sub_2413F12C8((uint64_t)a4, v21);
    swift_bridgeObjectRelease();
    if (v22)
    {
      uint64_t v23 = *(void *)&v19[v20];
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      BOOL v24 = sub_2413F1540(a4, v23);
      swift_bridgeObjectRelease();
      if (v24)
      {
        sub_2414F0BE4(v32, (uint64_t)v18, type metadata accessor for CycleChartCycle);
        uint64_t v25 = v29;
        uint64_t v26 = &v29[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CycleChartDayView_cycle];
        swift_beginAccess();
        sub_2414F0BE4((uint64_t)v26, (uint64_t)v15, type metadata accessor for CycleChartCycle);
        swift_beginAccess();
        sub_2414F18E4((uint64_t)v18, (uint64_t)v26, type metadata accessor for CycleChartCycle);
        swift_endAccess();
        sub_2416250DC(v15);
        sub_2414F0C4C((uint64_t)v18, type metadata accessor for CycleChartCycle);
        sub_2414F0C4C((uint64_t)v15, type metadata accessor for CycleChartCycle);
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v31, v30);
        sub_24162558C((uint64_t)v12);

        return;
      }
    }

    uint64_t v9 = v30;
    a2 = v31;
  }
  sub_2414F0BE4(v32, (uint64_t)v18, type metadata accessor for CycleChartCycle);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  objc_allocWithZone((Class)type metadata accessor for CycleChartDayView());
  swift_retain();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v27 = sub_241626570((uint64_t)v18, (uint64_t)v12, a3, (uint64_t)a4);
  swift_release();
  sub_2414F05E8(v27);
}

void sub_2414EE3D4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v36 = a1;
  uint64_t v9 = sub_241631AC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CycleChartCycle(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = *(char **)(v5 + qword_268D04600);
  if (v19)
  {
    uint64_t v32 = a3;
    uint64_t v33 = v5;
    uint64_t v34 = a2;
    uint64_t v35 = v9;
    uint64_t v20 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin10CycleChart_rows;
    uint64_t v21 = *(void *)&v19[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin10CycleChart_rows];
    char v22 = v19;
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    char v23 = sub_2413F12C8((uint64_t)a4, v21);
    swift_bridgeObjectRelease();
    if (v23)
    {
      uint64_t v24 = *(void *)&v19[v20];
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      BOOL v25 = sub_2413F1540(a4, v24);
      swift_bridgeObjectRelease();
      if (v25)
      {
        sub_2414F0BE4(v36, (uint64_t)v18, type metadata accessor for CycleChartCycle);
        uint64_t v26 = (uint64_t)&v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27CycleChartDayBackgroundView_cycle];
        swift_beginAccess();
        sub_2414F0BE4(v26, (uint64_t)v15, type metadata accessor for CycleChartCycle);
        swift_beginAccess();
        sub_2414F18E4((uint64_t)v18, v26, type metadata accessor for CycleChartCycle);
        swift_endAccess();
        sub_2415F3E74(v15);
        sub_2414F0C4C((uint64_t)v18, type metadata accessor for CycleChartCycle);
        sub_2414F0C4C((uint64_t)v15, type metadata accessor for CycleChartCycle);
        uint64_t v27 = v35;
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v34, v35);
        uint64_t v28 = &v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27CycleChartDayBackgroundView_dayIndex];
        swift_beginAccess();
        (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v28, v12, v27);
        swift_endAccess();
        objc_msgSend(v22, sel_setNeedsDisplay);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);

        return;
      }
    }

    a2 = v34;
    uint64_t v9 = v35;
    a3 = v32;
  }
  sub_2414F0BE4(v36, (uint64_t)v18, type metadata accessor for CycleChartCycle);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  id v29 = objc_allocWithZone((Class)type metadata accessor for CycleChartDayBackgroundView());
  swift_retain();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v30 = sub_2415F4130((uint64_t)v18, (uint64_t)v12, a3, (uint64_t)a4);
  sub_2414F05E8(v30);
}

uint64_t sub_2414EE774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2412C6084(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241631AC8();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a3, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  sub_2414F0F94(0, &qword_268D01A18, (void (*)(uint64_t))type metadata accessor for CycleChartDayView);
  uint64_t v9 = sub_241632488();
  sub_2414F0C4C((uint64_t)v6, (uint64_t (*)(void))sub_2412C6084);
  return v9;
}

unint64_t sub_2414EE8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v37[1] = a1;
  sub_2412216AC();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241631AC8();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v39 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v41 = (char *)v37 - v12;
  sub_241244224(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v40 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (uint64_t *)((char *)v37 - v16);
  uint64_t v18 = type metadata accessor for CycleChartCycle(0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v22 = a5;
  sub_24162FC48();
  swift_release();
  swift_release();
  uint64_t v23 = type metadata accessor for CycleChartsModel();
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  uint64_t v38 = v23;
  unint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v24)(v17, 1);
  if (result == 1) {
    goto LABEL_8;
  }
  uint64_t v26 = *v17;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2414F0C4C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
  unint64_t result = sub_24162BB08();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result >= *(void *)(v26 + 16))
  {
LABEL_7:
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_2414F0BE4(v26+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * result, (uint64_t)v21, type metadata accessor for CycleChartCycle);
  swift_bridgeObjectRelease();
  sub_24162BAF8();
  sub_24136561C(&v21[*(int *)(v18 + 24)], (uint64_t)v8);
  uint64_t v27 = v42;
  uint64_t v28 = v43;
  id v29 = v39;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v8, v43);
  sub_2414F0C4C((uint64_t)v8, (uint64_t (*)(void))sub_2412216AC);
  v37[0] = (uint64_t)v21;
  id v30 = v24;
  uint64_t v31 = (uint64_t)v41;
  sub_241631A28();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v27 + 8);
  v32(v29, v28);
  uint64_t v42 = *(void *)(v22 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v33 = (uint64_t)v40;
  sub_24162FC48();
  swift_release();
  swift_release();
  uint64_t v34 = v38;
  unint64_t result = v30(v33, 1, v38);
  if (result != 1)
  {
    uint64_t v35 = *(void **)(v33 + *(int *)(v34 + 32));
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_2414F0C4C(v33, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
    uint64_t v36 = v37[0];
    sub_2414EE3D4(v37[0], v31, v42, v35);
    swift_bridgeObjectRelease();
    v32((char *)v31, v28);
    return sub_2414F0C4C(v36, type metadata accessor for CycleChartCycle);
  }
LABEL_9:
  __break(1u);
  return result;
}

unint64_t sub_2414EED90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v39 = a4;
  v35[1] = a1;
  sub_2412216AC();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_241631AC8();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v37 = (char *)v35 - v12;
  sub_241244224(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v36 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (void *)((char *)v35 - v16);
  uint64_t v18 = type metadata accessor for CycleChartCycle(0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v22 = a5;
  sub_24162FC48();
  swift_release();
  swift_release();
  uint64_t v23 = type metadata accessor for CycleChartsModel();
  uint64_t v24 = *(void *)(v23 - 8);
  BOOL v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  v35[2] = v24 + 48;
  unint64_t result = v25((uint64_t)v17, 1, v23);
  if (result == 1) {
    goto LABEL_8;
  }
  uint64_t v27 = *v17;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2414F0C4C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
  unint64_t result = sub_24162BB08();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result >= *(void *)(v27 + 16))
  {
LABEL_7:
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_2414F0BE4(v27+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * result, (uint64_t)v21, type metadata accessor for CycleChartCycle);
  swift_bridgeObjectRelease();
  sub_24136561C(&v21[*(int *)(v18 + 24)], (uint64_t)v8);
  uint64_t v28 = v38;
  uint64_t v29 = v40;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v10, v8, v40);
  sub_2414F0C4C((uint64_t)v8, (uint64_t (*)(void))sub_2412216AC);
  id v30 = v25;
  uint64_t v31 = (uint64_t)v37;
  sub_241631A28();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v28 + 8);
  v32(v10, v29);
  uint64_t v39 = *(void *)(v22 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v33 = (uint64_t)v36;
  sub_24162FC48();
  swift_release();
  swift_release();
  unint64_t result = v30(v33, 1, v23);
  if (result != 1)
  {
    uint64_t v34 = *(void **)(v33 + *(int *)(v23 + 32));
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_2414F0C4C(v33, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
    sub_2414EE3D4((uint64_t)v21, v31, v39, v34);
    swift_bridgeObjectRelease();
    v32((char *)v31, v40);
    return sub_2414F0C4C((uint64_t)v21, type metadata accessor for CycleChartCycle);
  }
LABEL_9:
  __break(1u);
  return result;
}

id sub_2414EF23C(uint64_t a1)
{
  sub_241244224(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = *(char **)(a1 + qword_268D01588);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  uint64_t v9 = type metadata accessor for CycleChartsModel();
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  id result = (id)v10(v7, 1, v9);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = &v7[*(int *)(v9 + 24)];
    long long v20 = *(_OWORD *)v12;
    uint64_t v13 = *((void *)v12 + 2);
    uint64_t v14 = *((void *)v12 + 3);
    sub_2414F0C4C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
    uint64_t v15 = &v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37CycleChartLeadingAxisHeaderFooterView_header];
    *(_OWORD *)uint64_t v15 = v20;
    *((void *)v15 + 2) = v13;
    *((void *)v15 + 3) = v14;
    v15[32] = 0;
    objc_msgSend(v8, sel_setNeedsDisplay);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24162FC48();
    swift_release();
    swift_release();
    id result = (id)v10(v4, 1, v9);
    if (result != 1)
    {
      uint64_t v16 = &v4[*(int *)(v9 + 28)];
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *((void *)v16 + 1);
      sub_2414F0C4C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
      uint64_t v19 = &v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37CycleChartLeadingAxisHeaderFooterView_footer];
      *(void *)uint64_t v19 = v17;
      *((void *)v19 + 1) = v18;
      unsigned char v19[16] = 0;
      return objc_msgSend(v8, sel_setNeedsDisplay);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2414EF4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241244224(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(char **)(a1 + qword_268D01588);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  uint64_t v10 = type metadata accessor for CycleChartsModel();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v12 = *(void *)&v8[*(int *)(v10 + 32)];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2414F0C4C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
  uint64_t v13 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin10CycleChart_rows;
  *(void *)&v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin10CycleChart_rows] = v12;
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setNeedsDisplay);
  uint64_t v14 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25CycleChartLeadingAxisView_overhang;
  uint64_t v15 = *(char **)&v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25CycleChartLeadingAxisView_overhang];
  *(void *)&v15[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin10CycleChart_rows] = *(void *)&v9[v13];
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setNeedsDisplay);
  if (a2 == 0x41676E696461656CLL && a3 == 0xEB00000000736978)
  {
    char v16 = 0;
LABEL_10:
    v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25CycleChartLeadingAxisView_role] = v16;
    uint64_t v18 = *(unsigned char **)&v9[v14];
    v18[OBJC_IVAR____TtC24MenstrualCyclesAppPluginP33_F8F01C631BBF3C2F43B88E7CE0C17F3933CycleChartLeadingAxisOverhangView_role] = v16;
    objc_msgSend(v18, sel_setNeedsDisplay);
    return (uint64_t)objc_msgSend(v9, sel_setNeedsDisplay);
  }
  char v17 = sub_241633218();
  char v16 = 0;
  if (v17) {
    goto LABEL_10;
  }
  if (a2 == 0xD000000000000015 && a3 == 0x800000024165EED0 || (sub_241633218() & 1) != 0)
  {
    char v16 = 1;
    goto LABEL_10;
  }
  if (a2 == 0xD000000000000015 && a3 == 0x800000024165EEF0 || (uint64_t result = sub_241633218(), (result & 1) != 0))
  {
    char v16 = 2;
    goto LABEL_10;
  }
  return result;
}

unint64_t sub_2414EF794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v47 = a2;
  sub_24124418C(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v45 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v50 = (char *)&v45 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v46 = (uint64_t)&v45 - v12;
  sub_241244224(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v45 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v45 - v20;
  uint64_t v22 = *(char **)(a1 + qword_268D01588);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  uint64_t v23 = type metadata accessor for CycleChartsModel();
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  unint64_t result = v24(v21, 1, v23);
  if (result == 1) {
    goto LABEL_26;
  }
  uint64_t v26 = &v21[*(int *)(v23 + 24)];
  long long v51 = *(_OWORD *)v26;
  uint64_t v27 = *((void *)v26 + 2);
  uint64_t v28 = *((void *)v26 + 3);
  sub_2414F0C4C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
  uint64_t v29 = &v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_header];
  *(_OWORD *)uint64_t v29 = v51;
  *((void *)v29 + 2) = v27;
  *((void *)v29 + 3) = v28;
  v29[32] = 0;
  objc_msgSend(v22, sel_setNeedsDisplay);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24162FC48();
  swift_release();
  swift_release();
  unint64_t result = v24(v18, 1, v23);
  if (result == 1)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v30 = &v18[*(int *)(v23 + 28)];
  uint64_t v31 = *(void *)v30;
  uint64_t v32 = *((void *)v30 + 1);
  sub_2414F0C4C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
  uint64_t v33 = &v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_footer];
  swift_beginAccess();
  *(void *)uint64_t v33 = v31;
  *((void *)v33 + 1) = v32;
  v33[16] = 0;
  objc_msgSend(v22, sel_setNeedsDisplay);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v51 = a5;
  sub_24162FC48();
  swift_release();
  swift_release();
  unint64_t result = v24((char *)v15, 1, v23);
  uint64_t v34 = (uint64_t)v50;
  if (result == 1)
  {
LABEL_28:
    __break(1u);
    return result;
  }
  uint64_t v35 = *v15;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2414F0C4C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CycleChartsModel);
  unint64_t result = sub_24162BB08();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v36 = result;
  if (result >= *(void *)(v35 + 16))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v37 = type metadata accessor for CycleChartCycle(0);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = v46;
  sub_2414F0BE4(v35+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v36, v46, type metadata accessor for CycleChartCycle);
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
  v40(v39, 0, 1, v37);
  uint64_t v41 = (uint64_t)&v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_cycle];
  swift_beginAccess();
  sub_2414F0BE4(v41, v34, (uint64_t (*)(void))sub_24124418C);
  swift_beginAccess();
  sub_2414F18E4(v39, v41, (uint64_t (*)(void))sub_24124418C);
  swift_endAccess();
  sub_241230E94(v34);
  sub_2414F0C4C(v39, (uint64_t (*)(void))sub_24124418C);
  sub_2414F0C4C(v34, (uint64_t (*)(void))sub_24124418C);
  uint64_t v43 = v47;
  uint64_t v42 = v48;
  if (v47 == 0xD000000000000013 && v48 == 0x800000024165EF10 || (sub_241633218() & 1) != 0)
  {
    v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_role] = 0;
    return (unint64_t)objc_msgSend(v22, sel_setNeedsDisplay);
  }
  if (v43 == 0xD000000000000024 && v42 == 0x800000024165EF70 || (sub_241633218() & 1) != 0)
  {
    v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_role] = 0;
    objc_msgSend(v22, sel_setNeedsDisplay);
    v40(v34, 1, 1, v37);
    uint64_t v44 = v45;
    sub_2414F0BE4(v41, v45, (uint64_t (*)(void))sub_24124418C);
    swift_beginAccess();
    sub_2414F18E4(v34, v41, (uint64_t (*)(void))sub_24124418C);
    swift_endAccess();
    sub_241230E94(v44);
    sub_2414F0C4C(v34, (uint64_t (*)(void))sub_24124418C);
    return sub_2414F0C4C(v44, (uint64_t (*)(void))sub_24124418C);
  }
  if (v43 == 0xD000000000000011 && v42 == 0x800000024165EF30 || (sub_241633218() & 1) != 0)
  {
    v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_role] = 2;
    return (unint64_t)objc_msgSend(v22, sel_setNeedsDisplay);
  }
  if (v43 == 0x4F6E6F6974636573 && v42 == 0xEE0079616C726576 || (unint64_t result = sub_241633218(), (result & 1) != 0))
  {
    v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_role] = 1;
    objc_msgSend(v22, sel_setNeedsDisplay);
    *(void *)&v22[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin21CycleChartSectionView_dayProvider] = *(void *)(v51 + 24);
    swift_retain();
    return swift_release();
  }
  return result;
}

id sub_2414EFF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0xD000000000000017 && a3 == 0x800000024165EEB0 || (sub_241633218() & 1) != 0)
  {
    sub_2414F0E58(0);
    return (id)sub_241632498();
  }
  if (a2 == 0x41676E696461656CLL && a3 == 0xEB00000000736978
    || (sub_241633218() & 1) != 0
    || a2 == 0xD000000000000015 && a3 == 0x800000024165EED0
    || (sub_241633218() & 1) != 0
    || a2 == 0xD000000000000015 && a3 == 0x800000024165EEF0
    || (sub_241633218() & 1) != 0)
  {
    sub_2414F0E24(0);
    return (id)sub_241632498();
  }
  if (a2 == 0xD000000000000013 && a3 == 0x800000024165EF10
    || (sub_241633218() & 1) != 0
    || a2 == 0x4F6E6F6974636573 && a3 == 0xEE0079616C726576
    || (sub_241633218() & 1) != 0
    || a2 == 0xD000000000000011 && a3 == 0x800000024165EF30
    || (sub_241633218() & 1) != 0)
  {
    goto LABEL_41;
  }
  if (a2 == 0x6B6361426D657469 && a3 == 0xEE00646E756F7267
    || (sub_241633218() & 1) != 0
    || a2 == 0xD00000000000001FLL && a3 == 0x800000024165EF50
    || (sub_241633218() & 1) != 0)
  {
    sub_2414F0F94(0, &qword_268D01A08, (void (*)(uint64_t))type metadata accessor for CycleChartDayBackgroundView);
    return (id)sub_241632498();
  }
  if (a2 == 0xD000000000000024 && a3 == 0x800000024165EF70 || (sub_241633218() & 1) != 0)
  {
LABEL_41:
    sub_2414F0DF0(0);
    return (id)sub_241632498();
  }
  id v6 = objc_allocWithZone(MEMORY[0x263F82518]);

  return objc_msgSend(v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
}

uint64_t sub_2414F0468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2414F0BE4(a1, a2, (uint64_t (*)(void))sub_241244224);
}

void sub_2414F0498(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a2 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x245621790](v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    sub_2413F376C();
    objc_msgSend(v8, sel_setContentInset_);
    objc_msgSend(v8, sel_setScrollIndicatorInsets_, sub_2413F3C70());
  }
  sub_2412B00F0((uint64_t)a1);
  *(void *)(a4 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35CycleChartsCollectionViewDataSource_cycles) = *a1;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = (void *)MEMORY[0x245621790](v6);
  if (v9)
  {
    uint64_t v10 = v9;
    objc_msgSend(v9, sel_reloadData);
  }
}

void sub_2414F0594(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x245621790](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_2414EB904();
  }
}

void sub_2414F05E8(void *a1)
{
  uint64_t v2 = qword_268D04600;
  uint64_t v3 = *(void **)&v1[qword_268D04600];
  *(void *)&v1[qword_268D04600] = a1;
  id v16 = a1;
  if (v3) {
    objc_msgSend(v3, sel_removeFromSuperview);
  }
  uint64_t v4 = *(void **)&v1[v2];
  if (v4)
  {
    id v5 = v4;
    id v6 = objc_msgSend(v1, sel_contentView);
    objc_msgSend(v6, sel_bounds);
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;
    double v14 = v13;

    objc_msgSend(v5, sel_setFrame_, v8, v10, v12, v14);
    id v15 = objc_msgSend(v1, sel_contentView);
    objc_msgSend(v15, sel_addSubview_, v5);

    uint64_t v3 = v5;
    id v16 = v15;
  }
}

id sub_2414F0724(uint64_t a1, void *a2)
{
  id v42 = a2;
  sub_2412216AC();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v41 = (uint64_t)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CycleChartCycle(0);
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_241631AC8();
  uint64_t v8 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v38 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  double v12 = (char *)v31 - v11;
  int64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (!v13) {
    return (id)v14;
  }
  v31[1] = v2;
  uint64_t v44 = MEMORY[0x263F8EE78];
  sub_24149E68C(0, v13, 0);
  uint64_t v15 = *(void *)(sub_24162BB18() - 8);
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v36 = *(void *)(v15 + 72);
  uint64_t v34 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v35 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v32 = v8;
  uint64_t v33 = v8 + 32;
  uint64_t v17 = (uint64_t)v37;
  uint64_t v18 = v38;
  while (1)
  {
    id result = objc_msgSend(v42, sel_dataSource);
    if (!result) {
      break;
    }
    type metadata accessor for CycleChartsCollectionViewDataSource();
    uint64_t v20 = swift_dynamicCastClass();
    if (!v20) {
      goto LABEL_15;
    }
    uint64_t v21 = v20;
    unint64_t v22 = sub_24162BB08();
    if ((v22 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      id result = (id)swift_unknownObjectRelease();
      break;
    }
    uint64_t v23 = *(void *)(v21 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin35CycleChartsCollectionViewDataSource_cycles);
    if (v22 >= *(void *)(v23 + 16)) {
      goto LABEL_14;
    }
    sub_2414F0BE4(v23+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v22, v17, type metadata accessor for CycleChartCycle);
    sub_24162BAF8();
    uint64_t v24 = v12;
    uint64_t v25 = v41;
    sub_24136561C((char *)(v17 + *(int *)(v40 + 24)), v41);
    uint64_t v26 = v43;
    (*v35)(v18, v25, v43);
    uint64_t v27 = v25;
    double v12 = v24;
    sub_2414F0C4C(v27, (uint64_t (*)(void))sub_2412216AC);
    sub_241631A28();
    (*v34)(v18, v26);
    sub_2414F0C4C(v17, type metadata accessor for CycleChartCycle);
    swift_unknownObjectRelease();
    uint64_t v14 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24149E68C(0, *(void *)(v14 + 16) + 1, 1);
      uint64_t v14 = v44;
    }
    uint64_t v28 = v32;
    unint64_t v30 = *(void *)(v14 + 16);
    unint64_t v29 = *(void *)(v14 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_24149E68C(v29 > 1, v30 + 1, 1);
      uint64_t v14 = v44;
    }
    *(void *)(v14 + 16) = v30 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v14+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v30, v12, v43);
    uint64_t v44 = v14;
    v16 += v36;
    if (!--v13) {
      return (id)v14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2414F0B9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2414F0BE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2414F0C4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2414F0CAC(uint64_t a1)
{
}

void sub_2414F0CE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2414F0D44()
{
  if (!qword_268D019C8)
  {
    sub_2414F0CAC(255);
    type metadata accessor for CycleChartsModel();
    sub_2414F0B9C(&qword_268D04820, sub_2414F0CAC);
    unint64_t v0 = sub_24162F908();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D019C8);
    }
  }
}

void sub_2414F0DF0(uint64_t a1)
{
}

void sub_2414F0E24(uint64_t a1)
{
}

void sub_2414F0E58(uint64_t a1)
{
}

void sub_2414F0E8C()
{
  if (!qword_268D01A00)
  {
    sub_2414F0F94(255, &qword_268D01A08, (void (*)(uint64_t))type metadata accessor for CycleChartDayBackgroundView);
    unint64_t v0 = sub_241632478();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01A00);
    }
  }
}

void sub_2414F0F08()
{
  if (!qword_268D01A10)
  {
    sub_2414F0F94(255, &qword_268D01A18, (void (*)(uint64_t))type metadata accessor for CycleChartDayView);
    sub_241631AC8();
    unint64_t v0 = sub_241632458();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01A10);
    }
  }
}

void sub_2414F0F94(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for CycleChartDayCell();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_2414F0FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2414EDD8C(a1, a2, a3, v3);
}

uint64_t sub_2414F1000()
{
  sub_2414F0F08();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2414F1090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2414F0F08();

  return sub_2414EE774(a1, a2, a3);
}

unint64_t sub_2414F1118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2414EE8E0(a1, a2, a3, a4, v4);
}

unint64_t sub_2414F1120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2414EED90(a1, a2, a3, a4, v4);
}

id sub_2414F1128(uint64_t a1)
{
  return sub_2414EF23C(a1);
}

uint64_t sub_2414F1130()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2414F1168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2414EF4A0(a1, a2, a3);
}

unint64_t sub_2414F1170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2414EF794(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_2414F1178()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F82068];
  sub_2414F0CE0(0, &qword_268D019F0, (uint64_t (*)(uint64_t))sub_2414F0E58, MEMORY[0x263F82068]);
  uint64_t v36 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v34 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v28 = (v34 + 16) & ~v34;
  uint64_t v4 = *(void *)(v3 + 64);
  sub_2414F0CE0(0, &qword_268D019E0, (uint64_t (*)(uint64_t))sub_2414F0E24, v1);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v30 = (v28 + v4 + v7) & ~v7;
  uint64_t v31 = v5;
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v32 = (v8 + v7 + v30) & ~v7;
  uint64_t v25 = (v8 + v7 + v32) & ~v7;
  sub_2414F0CE0(0, &qword_268D019D0, (uint64_t (*)(uint64_t))sub_2414F0DF0, v1);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v26 = (v8 + v12 + v25) & ~v12;
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v29 = (v13 + v12 + v26) & ~v12;
  uint64_t v24 = (v13 + v12 + v29) & ~v12;
  sub_2414F0E8C();
  uint64_t v33 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v23 = (v13 + v16 + v24) & ~v16;
  uint64_t v17 = *(void *)(v15 + 64);
  uint64_t v35 = v34 | v7 | v12 | v16 | 7;
  uint64_t v18 = (v17 + v16 + v23) & ~v16;
  uint64_t v27 = (v17 + v12 + v18) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v28, v36);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v19(v0 + v30, v31);
  v19(v0 + v32, v31);
  v19(v0 + v25, v31);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v20(v0 + v26, v10);
  v20(v0 + v29, v10);
  v20(v0 + v24, v10);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v21(v0 + v23, v33);
  v21(v0 + v18, v33);
  v20(v0 + v27, v10);

  return MEMORY[0x270FA0238](v0, ((v13 + v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v35);
}

id sub_2414F1558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F82068];
  sub_2414F0CE0(0, &qword_268D019F0, (uint64_t (*)(uint64_t))sub_2414F0E58, MEMORY[0x263F82068]);
  sub_2414F0CE0(0, &qword_268D019E0, (uint64_t (*)(uint64_t))sub_2414F0E24, v3);
  sub_2414F0CE0(0, &qword_268D019D0, (uint64_t (*)(uint64_t))sub_2414F0DF0, v3);
  sub_2414F0E8C();
  return sub_2414EFF7C(a1, a2, a3);
}

uint64_t sub_2414F1808()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2414F1840()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2414F1888(void *a1)
{
  sub_2414F0498(a1, v1[2], v1[3], v1[4]);
}

void sub_2414F1894()
{
  sub_2414F0594(v0);
}

uint64_t sub_2414F189C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2414F18E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

void sub_2414F1950()
{
  qword_268D241C0 = 0x4014000000000000;
}

void sub_2414F1960()
{
  qword_268D241C8 = 0x4030000000000000;
}

void sub_2414F1970()
{
  qword_268D241D0 = 0x4000000000000000;
}

void sub_2414F1980()
{
  uint64_t v1 = (uint64_t)v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell_item;
  swift_beginAccess();
  sub_2411FA270(v1, (uint64_t)v6);
  if (v7)
  {
    sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
    type metadata accessor for CycleStatisticsItem();
    if (swift_dynamicCast())
    {
      uint64_t v2 = MEMORY[0x245621790](v5 + 48);
      if (v2)
      {
        uint64_t v3 = (void *)v2;
        swift_unknownObjectRelease();
        if (v3 == v0)
        {
          *(void *)(v5 + 56) = 0;
          swift_unknownObjectWeakAssign();
        }
      }
      id v4 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
      objc_msgSend(v0, sel_setBackgroundColor_, v4);
      swift_release();
    }
  }
  else
  {
    sub_241299DB8((uint64_t)v6);
  }
}

void sub_2414F1AA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell_item;
  swift_beginAccess();
  sub_2411FA270(v2, (uint64_t)&v19);
  if (!v20)
  {
    sub_241299DB8((uint64_t)&v19);
    goto LABEL_6;
  }
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  type metadata accessor for CycleStatisticsItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    id v8 = sub_2414F1F7C();
    objc_msgSend(v8, sel_setText_, 0);

    id v9 = sub_2414F1F90();
    objc_msgSend(v9, sel_setText_, 0);

    uint64_t v10 = sub_2414F1FA4();
    objc_msgSend(v10, sel_setText_, 0);
    goto LABEL_14;
  }
  uint64_t v3 = v16;
  id v4 = sub_2414F1F7C();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v5 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setText_, v5);

  id v6 = sub_2414F1F90();
  if (v16[11])
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v7 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  objc_msgSend(v6, sel_setText_, v7);

  id v11 = sub_2414F1FA4();
  if (v16[13])
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v12 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  objc_msgSend(v11, sel_setText_, v12);

  v16[7] = &off_26F5750E8;
  swift_unknownObjectWeakAssign();
  if (qword_26B00F370 != -1) {
    swift_once();
  }
  long long v19 = xmmword_26B017FC8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  long long v13 = v19;
  *(void *)&long long v19 = 46;
  *((void *)&v19 + 1) = 0xE100000000000000;
  uint64_t v17 = v16[8];
  uint64_t v18 = v3[9];
  unint64_t v15 = sub_2411D662C();
  uint64_t v14 = MEMORY[0x263F8D310];
  sub_241632C98();
  sub_241631E08();
  swift_bridgeObjectRelease();
  long long v19 = v13;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v10, v14, v15, v15, v15, 0, 0xE000000000000000, 32, 0xE100000000000000, v17, v18);
  swift_release();
LABEL_14:
}

void (*sub_2414F1E10(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x90uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell_item;
  v3[16] = v1;
  v3[17] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  sub_2411FA270(v5, (uint64_t)v3);
  return sub_2414F1E94;
}

void sub_2414F1E94(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  if (a2)
  {
    uint64_t v4 = v2[16] + v2[17];
    sub_2411FA270(*a1, v3);
    sub_2414F1980();
    swift_beginAccess();
    sub_2411FA3DC(v3, v4);
    swift_endAccess();
    sub_2414F1AA4();
    sub_241299DB8(v3);
  }
  else
  {
    uint64_t v5 = v2[16] + v2[17];
    sub_2414F1980();
    swift_beginAccess();
    sub_2411FA3DC((uint64_t)v2, v5);
    swift_endAccess();
    sub_2414F1AA4();
  }
  sub_241299DB8((uint64_t)v2);

  free(v2);
}

id sub_2414F1F7C()
{
  return sub_2414F1FB8(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell____lazy_storage___titleLabel, (SEL *)&selRef_labelColor);
}

id sub_2414F1F90()
{
  return sub_2414F1FB8(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell____lazy_storage___valueLabel, (SEL *)&selRef_labelColor);
}

id sub_2414F1FA4()
{
  return sub_2414F1FB8(&OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell____lazy_storage___captionLabel, (SEL *)&selRef_secondaryLabelColor);
}

id sub_2414F1FB8(uint64_t *a1, SEL *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    id v8 = [self *a2];
    objc_msgSend(v7, sel_setTextColor_, v8);

    objc_msgSend(v7, sel_setNumberOfLines_, 0);
    id v9 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v7;
    id v5 = v7;

    uint64_t v4 = 0;
  }
  id v10 = v4;
  return v5;
}

id sub_2414F2084(double a1, double a2, double a3, double a4)
{
  swift_getObjectType();
  id v9 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell_item];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell____lazy_storage___valueLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell____lazy_storage___captionLabel] = 0;
  v31.receiver = v4;
  v31.super_class = (Class)type metadata accessor for CycleStatisticsCell();
  id v10 = objc_msgSendSuper2(&v31, sel_initWithFrame_, a1, a2, a3, a4);
  id v11 = objc_msgSend(v10, sel_contentView);
  id v12 = sub_2414F1F7C();
  objc_msgSend(v11, sel_addSubview_, v12);

  id v13 = objc_msgSend(v10, sel_contentView);
  id v14 = sub_2414F1F90();
  objc_msgSend(v13, sel_addSubview_, v14);

  id v15 = objc_msgSend(v10, sel_contentView);
  id v16 = sub_2414F1FA4();
  objc_msgSend(v15, sel_addSubview_, v16);

  id v17 = sub_2414F1F7C();
  sub_2411B9D00(0, &qword_26B012140);
  uint64_t v18 = (void *)sub_241632898();
  objc_msgSend(v17, sel_setFont_, v18);

  id v19 = sub_2414F1F90();
  uint64_t v20 = (void *)sub_241632898();
  objc_msgSend(v19, sel_setFont_, v20);

  id v21 = sub_2414F1FA4();
  unint64_t v22 = (void *)sub_241632898();
  objc_msgSend(v21, sel_setFont_, v22);

  uint64_t v23 = self;
  id v24 = v10;
  id v25 = objc_msgSend(v23, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v24, sel_setBackgroundColor_, v25);

  sub_2411E58B4();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_241637EE0;
  uint64_t v27 = sub_24162F5B8();
  uint64_t v28 = MEMORY[0x263F82018];
  *(void *)(v26 + 32) = v27;
  *(void *)(v26 + 40) = v28;
  id v29 = v24;
  sub_241632918();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v29;
}

void sub_2414F24C8()
{
  id v1 = objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection);
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v71);
  id v3 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v3, sel_layoutMargins);
  double v5 = v4;

  double v6 = Width - v5;
  id v7 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v7, sel_layoutMargins);
  double v9 = v8;

  double v10 = v6 - v9;
  objc_msgSend(v0, sel_bounds);
  double Height = CGRectGetHeight(v72);
  id v12 = sub_2414F1F7C();
  objc_msgSend(v12, sel_sizeThatFits_, v10, Height);
  double v14 = v13;
  double v16 = v15;

  id v17 = sub_2414F1F7C();
  if (v1 == (id)1)
  {
    objc_msgSend(v0, sel_bounds);
    double v18 = CGRectGetWidth(v73);
    objc_msgSend(v0, sel_layoutMargins);
    double v20 = v18 - v19 - v14;
  }
  else
  {
    objc_msgSend(v0, sel_layoutMargins);
    double v20 = v21;
  }
  uint64_t v22 = (uint64_t)v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell_item;
  swift_beginAccess();
  sub_2411FA270(v22, (uint64_t)v69);
  if (v70)
  {
    sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
    type metadata accessor for CycleStatisticsItem();
    if (swift_dynamicCast())
    {
      uint64_t v23 = *(void *)(v68 + 104);
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      swift_release();
      if (v23)
      {
        swift_bridgeObjectRelease();
        if (qword_268CF97B8 != -1) {
          swift_once();
        }
        id v24 = &qword_268D241C0;
        goto LABEL_14;
      }
    }
  }
  else
  {
    sub_241299DB8((uint64_t)v69);
  }
  if (qword_268CF97C0 != -1) {
    swift_once();
  }
  id v24 = &qword_268D241C8;
LABEL_14:
  objc_msgSend(v17, sel_setFrame_, v20, *(double *)v24, v14, v16);

  id v25 = sub_2414F1F90();
  objc_msgSend(v25, sel_sizeThatFits_, v10, Height);
  double v27 = v26;
  double v29 = v28;

  id v30 = sub_2414F1F90();
  double v66 = v10;
  if (v1 == (id)1)
  {
    objc_msgSend(v0, sel_bounds);
    double v31 = CGRectGetWidth(v74);
    objc_msgSend(v0, sel_layoutMargins);
    double v33 = v31 - v32 - v27;
  }
  else
  {
    objc_msgSend(v0, sel_layoutMargins);
    double v33 = v34;
  }
  id v35 = sub_2414F1F7C();
  objc_msgSend(v35, sel_frame);
  CGFloat v37 = v36;
  CGFloat v39 = v38;
  CGFloat v41 = v40;
  CGFloat v43 = v42;

  v75.origin.x = v37;
  v75.origin.y = v39;
  v75.size.width = v41;
  v75.size.height = v43;
  double MaxY = CGRectGetMaxY(v75);
  if (qword_268CF97C8 != -1) {
    swift_once();
  }
  objc_msgSend(v30, sel_setFrame_, v33, MaxY + *(double *)&qword_268D241D0, v27, v29, *(void *)&v66);

  sub_2411FA270(v22, (uint64_t)v69);
  if (!v70)
  {
    sub_241299DB8((uint64_t)v69);
LABEL_25:
    id v52 = sub_2414F1FA4();
    objc_msgSend(v52, sel_setHidden_, 1);
    goto LABEL_26;
  }
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  type metadata accessor for CycleStatisticsItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v45 = *(void *)(v68 + 104);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_release();
  if (!v45) {
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  id v46 = sub_2414F1FA4();
  objc_msgSend(v46, sel_setHidden_, 0);

  id v47 = sub_2414F1FA4();
  objc_msgSend(v47, sel_sizeThatFits_, v67, Height);
  double v49 = v48;
  double v51 = v50;

  id v52 = sub_2414F1FA4();
  if (v1 == (id)1)
  {
    objc_msgSend(v0, sel_bounds);
    double v53 = CGRectGetWidth(v76);
    objc_msgSend(v0, sel_layoutMargins);
    double v55 = v53 - v54 - v49;
  }
  else
  {
    objc_msgSend(v0, sel_layoutMargins);
    double v55 = v56;
  }
  id v57 = sub_2414F1F90();
  objc_msgSend(v57, sel_frame);
  CGFloat v59 = v58;
  CGFloat v61 = v60;
  CGFloat v63 = v62;
  CGFloat v65 = v64;

  v77.origin.x = v59;
  v77.origin.y = v61;
  v77.size.width = v63;
  v77.size.height = v65;
  objc_msgSend(v52, sel_setFrame_, v55, CGRectGetMaxY(v77) + *(double *)&qword_268D241D0, v49, v51);
LABEL_26:
}

double sub_2414F2A50(double a1, double a2)
{
  id v3 = v2;
  id v6 = objc_msgSend(v2, sel_contentView);
  objc_msgSend(v6, sel_layoutMargins);
  double v8 = v7;

  id v9 = objc_msgSend(v3, sel_contentView);
  objc_msgSend(v9, sel_layoutMargins);
  double v11 = v10;

  sub_2411BFC90();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24163A670;
  *(void *)(v12 + 32) = sub_2414F1F7C();
  *(void *)(v12 + 40) = sub_2414F1F90();
  v32[0] = v12;
  sub_241631F48();
  unint64_t v33 = v12;
  uint64_t v13 = (uint64_t)v3 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell_item;
  swift_beginAccess();
  sub_2411FA270(v13, (uint64_t)v32);
  if (!v32[3])
  {
    sub_241299DB8((uint64_t)v32);
LABEL_13:
    if (qword_268CF97C0 != -1) {
      swift_once();
    }
    double v16 = *(double *)&qword_268D241C8 + *(double *)&qword_268D241C8;
    if (qword_268CF97C8 != -1) {
      swift_once();
    }
    double v17 = *(double *)&qword_268D241D0;
    goto LABEL_18;
  }
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  type metadata accessor for CycleStatisticsItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v14 = *(void *)(v31 + 104);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_release();
  if (!v14) {
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  sub_2414F1FA4();
  MEMORY[0x24561F3D0]();
  if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_32;
  }
  while (1)
  {
    sub_241631F98();
    sub_241631F48();
    if (qword_268CF97C0 != -1) {
      swift_once();
    }
    double v15 = *(double *)&qword_268D241C8;
    if (qword_268CF97B8 != -1) {
      swift_once();
    }
    double v16 = v15 + *(double *)&qword_268D241C0;
    if (qword_268CF97C8 != -1) {
      swift_once();
    }
    double v17 = *(double *)&qword_268D241D0 + *(double *)&qword_268D241D0;
LABEL_18:
    double v18 = v16 + v17;
    unint64_t v19 = v33;
    if (v33 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v20 = sub_241633068();
      if (!v20)
      {
LABEL_29:
        double v23 = 0.0;
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v20) {
        goto LABEL_29;
      }
    }
    if (v20 >= 1) {
      break;
    }
    __break(1u);
LABEL_32:
    sub_241631F68();
  }
  uint64_t v21 = 0;
  double v22 = a1 - v8 - v11;
  double v23 = 0.0;
  do
  {
    if ((v19 & 0xC000000000000001) != 0) {
      id v24 = (id)MEMORY[0x245620370](v21, v19);
    }
    else {
      id v24 = *(id *)(v19 + 8 * v21 + 32);
    }
    id v25 = v24;
    objc_msgSend(v24, sel_sizeThatFits_, v22, a2);
    double v27 = v26;
    double v29 = v28;

    if (v23 <= v27) {
      double v23 = v27;
    }
    ++v21;
    double v18 = v18 + v29;
  }
  while (v20 != v21);
LABEL_30:
  swift_bridgeObjectRelease_n();
  return v23;
}

uint64_t sub_2414F2F50()
{
  uint64_t v1 = (uint64_t)v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell_item;
  swift_beginAccess();
  sub_2411FA270(v1, (uint64_t)v9);
  if (!v10) {
    return sub_241299DB8((uint64_t)v9);
  }
  sub_2411BF880(0, (unint64_t *)&qword_268CFF090);
  uint64_t v2 = type metadata accessor for CycleStatisticsItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if (MEMORY[0x245621790](v8 + 32))
    {
      uint64_t v4 = *(void *)(v8 + 40);
      uint64_t ObjectType = swift_getObjectType();
      id v6 = objc_msgSend(v0, sel_isHighlighted);
      uint64_t v10 = v2;
      unint64_t v11 = sub_2414F328C();
      v9[0] = v8;
      double v7 = *(void (**)(id, void *, uint64_t, uint64_t))(v4 + 8);
      swift_retain();
      v7(v6, v9, ObjectType, v4);
      swift_release();
      swift_unknownObjectRelease();
      return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v9);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

id sub_2414F30A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CycleStatisticsCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CycleStatisticsCell()
{
  return self;
}

uint64_t sub_2414F316C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell_item;
  swift_beginAccess();
  return sub_2411FA270(v3, a1);
}

uint64_t sub_2414F31C0(uint64_t a1)
{
  sub_2414F1980();
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19CycleStatisticsCell_item;
  swift_beginAccess();
  sub_2411FA3DC(a1, v3);
  swift_endAccess();
  sub_2414F1AA4();
  return sub_241299DB8(a1);
}

void (*sub_2414F3234(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2414F1E10(v2);
  return sub_241299D70;
}

unint64_t sub_2414F328C()
{
  unint64_t result = qword_268D01A40;
  if (!qword_268D01A40)
  {
    type metadata accessor for CycleStatisticsItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01A40);
  }
  return result;
}

void sub_2414F32E8()
{
  id v0 = sub_2414F1F7C();
  sub_2411B9D00(0, &qword_26B012140);
  uint64_t v1 = (void *)sub_241632898();
  objc_msgSend(v0, sel_setFont_, v1);

  id v2 = sub_2414F1F90();
  uint64_t v3 = (void *)sub_241632898();
  objc_msgSend(v2, sel_setFont_, v3);

  id v4 = sub_2414F1FA4();
  id v5 = (id)sub_241632898();
  objc_msgSend(v4, sel_setFont_, v5);
}

uint64_t sub_2414F3450@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v40[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_24162B718();
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24162DA68();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24162D9A8();
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v39 = v11;
  MEMORY[0x270FA5388](v11);
  CGFloat v37 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414F41A4(0, &qword_268CFB348, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  double v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v17 = MEMORY[0x270FA5388](v16).n128_u64[0];
  unint64_t v19 = (char *)v36 - v18;
  v40[0] = 0;
  id v20 = objc_msgSend(a1, sel_dateOfBirthComponentsWithError_, v40, v17);
  id v21 = v40[0];
  if (v20)
  {
    double v22 = v20;
    sub_24162B088();
    id v23 = v21;

    uint64_t v24 = sub_24162B138();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v19, 0, 1, v24);
  }
  else
  {
    id v25 = v40[0];
    uint64_t v26 = sub_24162B348();
    v36[1] = v6;
    uint64_t v27 = v8;
    uint64_t v28 = v7;
    double v29 = a1;
    uint64_t v30 = a2;
    uint64_t v31 = (void *)v26;

    swift_willThrow();
    double v32 = v31;
    a2 = v30;
    a1 = v29;
    uint64_t v7 = v28;
    uint64_t v8 = v27;

    uint64_t v33 = sub_24162B138();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v19, 1, 1, v33);
  }
  sub_2414CBAE8();
  sub_2414F3818((uint64_t)v19, (uint64_t)v15);
  sub_24162B6B8();
  sub_24162DA58();
  double v34 = v37;
  sub_24162D9B8();

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_2414F38AC((uint64_t)v19);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 32))(a2, v34, v39);
}

uint64_t sub_2414F3818(uint64_t a1, uint64_t a2)
{
  sub_2414F41A4(0, &qword_268CFB348, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2414F38AC(uint64_t a1)
{
  sub_2414F41A4(0, &qword_268CFB348, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2414F3938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162D9A8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_2414F39A4(uint64_t a1)
{
  uint64_t v2 = sub_24162D9A8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_2414F3A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162D9A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_2414F3A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162D9A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_2414F3AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162D9A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_2414F3B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162D9A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_2414F3B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2414F3BAC);
}

uint64_t sub_2414F3BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162D9A8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_2414F3C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2414F3C2C);
}

uint64_t sub_2414F3C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162D9A8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PDFCoverPageHeaderProvider()
{
  uint64_t result = qword_268D01A48;
  if (!qword_268D01A48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2414F3CE8()
{
  uint64_t result = sub_24162D9A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2414F3D74()
{
  uint64_t v0 = sub_24162CEB8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v24[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24162D988();
  uint64_t v6 = v5;
  uint64_t v7 = MEMORY[0x24561A150]();
  uint64_t v8 = *MEMORY[0x263F43D88];
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v9(v3, v8, v0);
  uint64_t v10 = sub_24162E5B8();
  uint64_t v25 = v10;
  uint64_t v26 = MEMORY[0x263F44850];
  sub_2411B6C70(v24);
  MEMORY[0x24561BA90](v4, v6, v3, v7);
  uint64_t v11 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v24);
  uint64_t v12 = sub_24162D998();
  uint64_t v14 = v13;
  uint64_t v15 = MEMORY[0x24561A140]();
  v9(v3, v8, v0);
  uint64_t v25 = v10;
  uint64_t v26 = MEMORY[0x263F44850];
  sub_2411B6C70(v24);
  MEMORY[0x24561BA90](v12, v14, v3, v15);
  uint64_t v16 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v24);
  sub_24162CC38();
  sub_24162CC28();
  double v17 = (void *)sub_24162CC18();
  id v18 = objc_msgSend(v17, sel_CGColor);

  uint64_t v25 = sub_24162D888();
  uint64_t v26 = MEMORY[0x263F440B0];
  sub_2411B6C70(v24);
  sub_24162D878();
  uint64_t v19 = sub_24162D4D8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v24);
  sub_2414F41A4(0, (unint64_t *)&qword_268D036C0, (uint64_t (*)(uint64_t))sub_2412426CC, MEMORY[0x263F8E0F8]);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_24163AC10;
  *(void *)(v20 + 32) = v11;
  *(void *)(v20 + 40) = v16;
  *(void *)(v20 + 48) = v19;
  uint64_t v21 = MEMORY[0x24561A980]();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_2414F4020()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_2414F4040, 0, 0);
}

uint64_t sub_2414F4040()
{
  sub_2414F41A4(0, (unint64_t *)&qword_268CFF250, (uint64_t (*)(uint64_t))sub_241242764, MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_241637EE0;
  if (qword_268CF9330 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  *(void *)(swift_task_alloc() + 16) = v2;
  uint64_t v3 = sub_24162E758();
  uint64_t v4 = MEMORY[0x263F448B8];
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = v4;
  sub_2411B6C70((uint64_t *)(v1 + 32));
  sub_24162E748();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v1);
}

uint64_t sub_2414F419C()
{
  return sub_2414F3D74();
}

void sub_2414F41A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2414F4208@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v12 = (int *)type metadata accessor for OvulationConfirmationState();
  uint64_t v13 = (char *)a6 + v12[5];
  uint64_t v14 = sub_24162BA08();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, a5, v14);
  id v15 = a1;
  sub_24162B6B8();
  uint64_t v16 = (char *)a6 + v12[8];
  uint64_t v17 = sub_24162E7D8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, a3, v17);
  *a6 = a1;
  *((unsigned char *)a6 + v12[6]) = a2;
  uint64_t v19 = (char *)a6 + v12[9];
  unsigned char *v19 = a4 & 1;
  v19[1] = BYTE1(a4) & 1;
  void v19[2] = BYTE2(a4) & 1;
  return result;
}

uint64_t sub_2414F4328()
{
  swift_release();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v0 + 40);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MenstrualCyclesAllHighlightsViewController()
{
  uint64_t result = qword_268D01A60;
  if (!qword_268D01A60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2414F43CC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2414F440C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43BF8];
  uint64_t v3 = sub_24162CCF8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_2414F4480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_allocWithZone(v4);
  sub_2411A3DF4(a4, (uint64_t)v9);
  uint64_t v7 = sub_24162C9F8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(a4);
  return v7;
}

id sub_2414F4518()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MenstrualCyclesAllHighlightsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2414F4550()
{
  return type metadata accessor for MenstrualCyclesAllHighlightsViewController();
}

void *sub_2414F4558(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_24146994C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_24162FEE8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

void sub_2414F46F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2414F4754(uint64_t a1, uint64_t a2)
{
  sub_24146994C();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_24162FEE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

void *sub_2414F4854(void *a1, void *a2, uint64_t a3)
{
  sub_24146994C();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24162FEE8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_2414F499C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2414FA9E4((uint64_t)a1, (uint64_t (*)(void))sub_24146994C);
    sub_24146994C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_24162FEE8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_2414F4B08(char *a1, char *a2, uint64_t a3)
{
  sub_24146994C();
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_24162FEE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2414F4C58(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2414FA9E4((uint64_t)a1, (uint64_t (*)(void))sub_24146994C);
    sub_24146994C();
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_24162FEE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_2414F4DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2414F4DE0);
}

uint64_t sub_2414F4DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2414F46F0(0, &qword_268CFAFC8, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 4) {
        return v14 - 3;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_2414F4F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2414F4F64);
}

void sub_2414F4F64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2414F46F0(0, &qword_268CFAFC8, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 3;
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for PregnancyStartDateInputView(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D01AE0);
}

void sub_2414F50F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_2414F5114()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2414F5130()
{
  qword_268D241E8 = 0x4024000000000000;
}

void sub_2414F5140()
{
  qword_268D241F0 = 0x4046000000000000;
}

void sub_2414F5150()
{
  qword_268D241F8 = 0x4010000000000000;
}

uint64_t sub_2414F5160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  sub_2414F86F8(0);
  uint64_t v4 = v3;
  uint64_t v27 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2414F86C4(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v27 - v11;
  sub_2414F801C(0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v27 - v18;
  MEMORY[0x270FA5388](v20);
  double v22 = (char *)&v27 - v21;
  *uint64_t v16 = swift_getKeyPath();
  sub_24146994C();
  swift_storeEnumTagMultiPayload();
  sub_2414F5B1C(a1, (uint64_t)v16 + *(int *)(v14 + 60));
  *((unsigned char *)v16 + *(int *)(v14 + 64)) = 0;
  sub_2414FA914((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(void))sub_2414F801C);
  sub_2414FA914((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(void))sub_2414F801C);
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for PregnancyStartDateInputView(0) + 24)) == 1)
  {
    uint64_t v23 = 1;
  }
  else
  {
    *uint64_t v6 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    sub_2414F54F4((uint64_t)v6 + *(int *)(v4 + 52));
    *((unsigned char *)v6 + *(int *)(v4 + 56)) = 0;
    sub_2414FA914((uint64_t)v6, (uint64_t)v12, (uint64_t (*)(void))sub_2414F86F8);
    uint64_t v23 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v12, v23, 1, v4);
  sub_2414FA97C((uint64_t)v22, (uint64_t)v16, (uint64_t (*)(void))sub_2414F801C);
  sub_2414FA97C((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))sub_2414F86C4);
  uint64_t v24 = v28;
  sub_2414FA97C((uint64_t)v16, v28, (uint64_t (*)(void))sub_2414F801C);
  sub_2414F7FAC();
  sub_2414FA97C((uint64_t)v9, v24 + *(int *)(v25 + 48), (uint64_t (*)(void))sub_2414F86C4);
  sub_2414FA9E4((uint64_t)v12, (uint64_t (*)(void))sub_2414F86C4);
  sub_2414FA9E4((uint64_t)v22, (uint64_t (*)(void))sub_2414F801C);
  sub_2414FA9E4((uint64_t)v9, (uint64_t (*)(void))sub_2414F86C4);
  return sub_2414FA9E4((uint64_t)v16, (uint64_t (*)(void))sub_2414F801C);
}

uint64_t sub_2414F54F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v1 = type metadata accessor for EstimatedDueDateView();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v40 - v5);
  sub_2414F8830(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414F8808(0);
  uint64_t v41 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414F87E0(0);
  uint64_t v42 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414F87B8(0);
  uint64_t v43 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_241630498();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  sub_2414FAA44(0, &qword_268D01BD0, sub_2414F8878);
  uint64_t v20 = (uint64_t)&v9[*(int *)(v19 + 44)];
  type metadata accessor for PregnancyStartDateInputView(0);
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  sub_241631368();
  *uint64_t v6 = swift_getKeyPath();
  sub_2414FAAB8(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for PregnancyDatesInputViewModel();
  sub_2414FC218((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_241631388();
  sub_2414FA97C((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for EstimatedDueDateView);
  sub_2414FA97C((uint64_t)v3, v20, (uint64_t (*)(void))type metadata accessor for EstimatedDueDateView);
  sub_2414FBA2C(0, &qword_268D01BA0, (void (*)(uint64_t))type metadata accessor for EstimatedDueDateView);
  uint64_t v22 = v20 + *(int *)(v21 + 48);
  *(void *)uint64_t v22 = 0;
  *(unsigned char *)(v22 + 8) = 0;
  sub_2414FA9E4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for EstimatedDueDateView);
  sub_2414FA9E4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for EstimatedDueDateView);
  char v23 = sub_2416309B8();
  if (qword_268CF97E0 != -1) {
    swift_once();
  }
  sub_24162FE78();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  sub_2414FA97C((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))sub_2414F8830);
  double v32 = &v12[*(int *)(v41 + 36)];
  char *v32 = v23;
  *((void *)v32 + 1) = v25;
  *((void *)v32 + 2) = v27;
  *((void *)v32 + 3) = v29;
  *((void *)v32 + 4) = v31;
  unsigned char v32[40] = 0;
  sub_2414FA9E4((uint64_t)v9, (uint64_t (*)(void))sub_2414F8830);
  if (qword_268CF97D8 != -1) {
    swift_once();
  }
  sub_2416313F8();
  sub_2416301F8();
  sub_2414FA97C((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))sub_2414F8808);
  uint64_t v33 = &v15[*(int *)(v42 + 36)];
  long long v34 = v50;
  *((_OWORD *)v33 + 4) = v49;
  *((_OWORD *)v33 + 5) = v34;
  *((_OWORD *)v33 + 6) = v51;
  long long v35 = v46;
  *(_OWORD *)uint64_t v33 = v45;
  *((_OWORD *)v33 + 1) = v35;
  long long v36 = v48;
  *((_OWORD *)v33 + 2) = v47;
  *((_OWORD *)v33 + 3) = v36;
  sub_2414FA9E4((uint64_t)v12, (uint64_t (*)(void))sub_2414F8808);
  char v37 = sub_2416309A8();
  sub_2414FA97C((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(void))sub_2414F87E0);
  uint64_t v38 = &v18[*(int *)(v43 + 36)];
  *uint64_t v38 = v37;
  *(_OWORD *)(v38 + 8) = 0u;
  *(_OWORD *)(v38 + 24) = 0u;
  v38[40] = 1;
  sub_2414FA9E4((uint64_t)v15, (uint64_t (*)(void))sub_2414F87E0);
  return sub_2414FA914((uint64_t)v18, v44, (uint64_t (*)(void))sub_2414F87B8);
}

uint64_t sub_2414F5B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v300 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F19B20];
  sub_2414F81E8(0, &qword_268D01BD8, (uint64_t (*)(uint64_t))sub_2414F8284, MEMORY[0x263F19B20]);
  uint64_t v287 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v290 = (uint64_t)&v264 - v5;
  sub_2414F8284(0);
  uint64_t v288 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v289 = (uint64_t)&v264 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414F8250(0);
  uint64_t v299 = v8;
  MEMORY[0x270FA5388](v8);
  v291 = (char *)&v264 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v293 = sub_2416312C8();
  uint64_t v292 = *(void *)(v293 - 8);
  MEMORY[0x270FA5388](v293);
  v283 = (char *)&v264 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v286 = (char *)&v264 - v12;
  MEMORY[0x270FA5388](v13);
  v282 = (char *)&v264 - v14;
  sub_2414F8164(0, &qword_268D01BE0, (uint64_t (*)(uint64_t))sub_2414F80CC, (uint64_t (*)(uint64_t))sub_2414F8250, MEMORY[0x263F19B20]);
  uint64_t v296 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v298 = (uint64_t)&v264 - v16;
  sub_2414F81E8(0, &qword_268D01BE8, (uint64_t (*)(uint64_t))sub_24121B9D8, v3);
  uint64_t v279 = v17;
  MEMORY[0x270FA5388](v17);
  v280 = (uint64_t *)((char *)&v264 - v18);
  sub_2414F80CC(0);
  uint64_t v297 = v19;
  MEMORY[0x270FA5388](v19);
  v281 = (char *)&v264 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v303 = sub_24162DA38();
  uint64_t v306 = *(void *)(v303 - 8);
  MEMORY[0x270FA5388](v303);
  v302 = (char *)&v264 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24121BAB4(0);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v305 = (uint64_t)&v264 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24121BA8C(0);
  uint64_t v304 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v275 = (uint64_t)&v264 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v269 = (uint64_t)&v264 - v27;
  MEMORY[0x270FA5388](v28);
  uint64_t v274 = (uint64_t)&v264 - v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v268 = (uint64_t)&v264 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v267 = (uint64_t)&v264 - v33;
  MEMORY[0x270FA5388](v34);
  uint64_t v265 = (uint64_t)&v264 - v35;
  sub_24121BA00(0);
  uint64_t v301 = v36;
  MEMORY[0x270FA5388](v36);
  uint64_t v273 = (uint64_t)&v264 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v266 = (uint64_t)&v264 - v39;
  MEMORY[0x270FA5388](v40);
  uint64_t v272 = (uint64_t)&v264 - v41;
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)&v264 - v43;
  MEMORY[0x270FA5388](v45);
  long long v47 = (char *)&v264 - v46;
  MEMORY[0x270FA5388](v48);
  long long v50 = (char *)&v264 - v49;
  sub_24121B9D8(0);
  uint64_t v295 = v51;
  MEMORY[0x270FA5388](v51);
  uint64_t v271 = (uint64_t)&v264 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v53);
  uint64_t v278 = (uint64_t)&v264 - v54;
  MEMORY[0x270FA5388](v55);
  id v57 = (char *)&v264 - v56;
  MEMORY[0x270FA5388](v58);
  v277 = (char *)&v264 - v59;
  MEMORY[0x270FA5388](v60);
  uint64_t v284 = (uint64_t)&v264 - v61;
  MEMORY[0x270FA5388](v62);
  uint64_t v285 = (uint64_t)&v264 - v63;
  MEMORY[0x270FA5388](v64);
  uint64_t v270 = (uint64_t)&v264 - v65;
  MEMORY[0x270FA5388](v66);
  uint64_t v276 = (uint64_t)&v264 - v67;
  MEMORY[0x270FA5388](v68);
  uint64_t v70 = (char *)&v264 - v69;
  MEMORY[0x270FA5388](v71);
  uint64_t v294 = (uint64_t)&v264 - v72;
  MEMORY[0x270FA5388](v73);
  CGRect v75 = (char *)&v264 - v74;
  MEMORY[0x270FA5388](v76);
  uint64_t v78 = (char *)&v264 - v77;
  MEMORY[0x270FA5388](v79);
  uint64_t v81 = (char *)&v264 - v80;
  MEMORY[0x270FA5388](v82);
  unint64_t v84 = (char *)&v264 - v83;
  switch(*(unsigned char *)(a1 + *(int *)(type metadata accessor for PregnancyStartDateInputView(0) + 24)))
  {
    case 1:
      sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
      sub_241631368();
      uint64_t v239 = v314;
      uint64_t v240 = v306;
      uint64_t v241 = (uint64_t)v302;
      uint64_t v242 = v303;
      (*(void (**)(char *, void, uint64_t))(v306 + 104))(v302, *MEMORY[0x263F44280], v303);
      uint64_t v243 = v305;
      sub_24138F638(v239, 2, v241, 0, v305);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v241, v242);
      char v244 = sub_2416309B8();
      if (qword_268CF97E0 != -1) {
        swift_once();
      }
      sub_24162FE78();
      uint64_t v246 = v245;
      uint64_t v248 = v247;
      uint64_t v250 = v249;
      uint64_t v252 = v251;
      uint64_t v253 = v267;
      sub_2414FA97C(v243, v267, (uint64_t (*)(void))sub_24121BAB4);
      uint64_t v254 = v253 + *(int *)(v304 + 36);
      *(unsigned char *)uint64_t v254 = v244;
      *(void *)(v254 + 8) = v246;
      *(void *)(v254 + 16) = v248;
      *(void *)(v254 + 24) = v250;
      *(void *)(v254 + 32) = v252;
      *(unsigned char *)(v254 + 40) = 0;
      sub_2414FA9E4(v243, (uint64_t (*)(void))sub_24121BAB4);
      uint64_t v255 = v295;
      if (qword_268CF97D8 != -1) {
        swift_once();
      }
      sub_2416313F8();
      sub_2416301F8();
      sub_2414FA97C(v253, (uint64_t)v47, (uint64_t (*)(void))sub_24121BA8C);
      v256 = &v47[*(int *)(v301 + 36)];
      long long v257 = v319;
      *((_OWORD *)v256 + 4) = v318;
      *((_OWORD *)v256 + 5) = v257;
      *((_OWORD *)v256 + 6) = v320;
      long long v258 = v315;
      *(_OWORD *)v256 = v314;
      *((_OWORD *)v256 + 1) = v258;
      long long v259 = v317;
      *((_OWORD *)v256 + 2) = v316;
      *((_OWORD *)v256 + 3) = v259;
      sub_2414FA9E4(v253, (uint64_t (*)(void))sub_24121BA8C);
      char v260 = sub_2416309A8();
      sub_2414FA97C((uint64_t)v47, (uint64_t)v75, (uint64_t (*)(void))sub_24121BA00);
      v261 = &v75[*(int *)(v255 + 36)];
      char *v261 = v260;
      *(_OWORD *)(v261 + 8) = 0u;
      *(_OWORD *)(v261 + 24) = 0u;
      v261[40] = 1;
      sub_2414FA9E4((uint64_t)v47, (uint64_t (*)(void))sub_24121BA00);
      sub_2414FA914((uint64_t)v75, (uint64_t)v78, (uint64_t (*)(void))sub_24121B9D8);
      sub_2414FA97C((uint64_t)v78, (uint64_t)v280, (uint64_t (*)(void))sub_24121B9D8);
      swift_storeEnumTagMultiPayload();
      sub_2414F83A0();
      uint64_t v262 = (uint64_t)v281;
      sub_241630638();
      sub_2414FA97C(v262, v298, (uint64_t (*)(void))sub_2414F80CC);
      swift_storeEnumTagMultiPayload();
      sub_2414F836C();
      sub_2414F8690();
      sub_241630638();
      sub_2414FA9E4(v262, (uint64_t (*)(void))sub_2414F80CC);
      unint64_t v84 = v78;
      break;
    case 2:
      sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
      v283 = v110;
      sub_241631368();
      uint64_t v111 = v314;
      uint64_t v112 = v306;
      uint64_t v113 = *(void (**)(void))(v306 + 104);
      uint64_t v114 = (uint64_t)v302;
      LODWORD(v281) = *MEMORY[0x263F44280];
      uint64_t v115 = v303;
      v280 = v113;
      v113(v302);
      uint64_t v116 = v305;
      sub_24138F638(v111, 3, v114, 0, v305);
      swift_release();
      uint64_t v117 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
      uint64_t v306 = v112 + 8;
      v117(v114, v115);
      char v118 = sub_2416309B8();
      if (qword_268CF97E0 != -1) {
        swift_once();
      }
      sub_24162FE78();
      uint64_t v120 = v119;
      uint64_t v122 = v121;
      uint64_t v124 = v123;
      uint64_t v126 = v125;
      uint64_t v127 = v268;
      sub_2414FA97C(v116, v268, (uint64_t (*)(void))sub_24121BAB4);
      uint64_t v128 = v127 + *(int *)(v304 + 36);
      *(unsigned char *)uint64_t v128 = v118;
      *(void *)(v128 + 8) = v120;
      *(void *)(v128 + 16) = v122;
      *(void *)(v128 + 24) = v124;
      *(void *)(v128 + 32) = v126;
      *(unsigned char *)(v128 + 40) = 0;
      sub_2414FA9E4(v116, (uint64_t (*)(void))sub_24121BAB4);
      uint64_t v129 = v294;
      if (qword_268CF97D8 != -1) {
        swift_once();
      }
      sub_2416313F8();
      sub_2416301F8();
      sub_2414FA97C(v127, (uint64_t)v44, (uint64_t (*)(void))sub_24121BA8C);
      uint64_t v130 = v301;
      uint64_t v131 = &v44[*(int *)(v301 + 36)];
      long long v132 = v312;
      *((_OWORD *)v131 + 4) = v311;
      *((_OWORD *)v131 + 5) = v132;
      *((_OWORD *)v131 + 6) = v313;
      long long v133 = v308;
      *(_OWORD *)uint64_t v131 = v307;
      *((_OWORD *)v131 + 1) = v133;
      long long v134 = v310;
      *((_OWORD *)v131 + 2) = v309;
      *((_OWORD *)v131 + 3) = v134;
      sub_2414FA9E4(v127, (uint64_t (*)(void))sub_24121BA8C);
      char v135 = sub_2416309A8();
      sub_2414FA97C((uint64_t)v44, (uint64_t)v70, (uint64_t (*)(void))sub_24121BA00);
      uint64_t v136 = v295;
      unint64_t v137 = &v70[*(int *)(v295 + 36)];
      *unint64_t v137 = v135;
      *(_OWORD *)(v137 + 8) = 0u;
      *(_OWORD *)(v137 + 24) = 0u;
      v137[40] = 1;
      sub_2414FA9E4((uint64_t)v44, (uint64_t (*)(void))sub_24121BA00);
      sub_2414FA914((uint64_t)v70, v129, (uint64_t (*)(void))sub_24121B9D8);
      id v138 = v282;
      sub_2416312B8();
      sub_241631368();
      uint64_t v139 = v314;
      uint64_t v140 = (uint64_t)v302;
      uint64_t v141 = v303;
      ((void (*)(char *, void, uint64_t))v280)(v302, v281, v303);
      uint64_t v142 = v305;
      sub_24138F638(v139, 4, v140, 0, v305);
      swift_release();
      v117(v140, v141);
      LOBYTE(v139) = sub_2416309B8();
      sub_24162FE78();
      uint64_t v144 = v143;
      uint64_t v146 = v145;
      uint64_t v148 = v147;
      uint64_t v150 = v149;
      uint64_t v151 = v274;
      sub_2414FA97C(v142, v274, (uint64_t (*)(void))sub_24121BAB4);
      uint64_t v152 = v151 + *(int *)(v304 + 36);
      *(unsigned char *)uint64_t v152 = v139;
      *(void *)(v152 + 8) = v144;
      *(void *)(v152 + 16) = v146;
      *(void *)(v152 + 24) = v148;
      *(void *)(v152 + 32) = v150;
      *(unsigned char *)(v152 + 40) = 0;
      sub_2414FA9E4(v142, (uint64_t (*)(void))sub_24121BAB4);
      sub_2416313F8();
      sub_2416301F8();
      uint64_t v153 = v272;
      sub_2414FA97C(v151, v272, (uint64_t (*)(void))sub_24121BA8C);
      unint64_t v154 = (_OWORD *)(v153 + *(int *)(v130 + 36));
      long long v155 = v319;
      v154[4] = v318;
      v154[5] = v155;
      v154[6] = v320;
      long long v156 = v315;
      *unint64_t v154 = v314;
      v154[1] = v156;
      long long v157 = v317;
      v154[2] = v316;
      v154[3] = v157;
      sub_2414FA9E4(v151, (uint64_t (*)(void))sub_24121BA8C);
      LOBYTE(v139) = sub_2416309A8();
      uint64_t v158 = v270;
      sub_2414FA97C(v153, v270, (uint64_t (*)(void))sub_24121BA00);
      uint64_t v159 = v158 + *(int *)(v136 + 36);
      *(unsigned char *)uint64_t v159 = v139;
      *(_OWORD *)(v159 + 8) = 0u;
      *(_OWORD *)(v159 + 24) = 0u;
      *(unsigned char *)(v159 + 40) = 1;
      sub_2414FA9E4(v153, (uint64_t (*)(void))sub_24121BA00);
      uint64_t v160 = v276;
      sub_2414FA914(v158, v276, (uint64_t (*)(void))sub_24121B9D8);
      uint64_t v161 = v285;
      sub_2414FA97C(v294, v285, (uint64_t (*)(void))sub_24121B9D8);
      uint64_t v162 = v292;
      unsigned __int8 v163 = *(void (**)(char *, char *, uint64_t))(v292 + 16);
      uint64_t v164 = v286;
      uint64_t v165 = v293;
      v163(v286, v138, v293);
      uint64_t v166 = v284;
      sub_2414FA97C(v160, v284, (uint64_t (*)(void))sub_24121B9D8);
      uint64_t v167 = v289;
      sub_2414FA97C(v161, v289, (uint64_t (*)(void))sub_24121B9D8);
      sub_24121B964();
      uint64_t v169 = v168;
      v163((char *)(v167 + *(int *)(v168 + 48)), v164, v165);
      sub_2414FA97C(v166, v167 + *(int *)(v169 + 64), (uint64_t (*)(void))sub_24121B9D8);
      sub_2414FA9E4(v166, (uint64_t (*)(void))sub_24121B9D8);
      uint64_t v170 = *(void (**)(char *, uint64_t))(v162 + 8);
      v170(v164, v165);
      sub_2414FA9E4(v161, (uint64_t (*)(void))sub_24121B9D8);
      sub_2414FA97C(v167, v290, (uint64_t (*)(void))sub_2414F8284);
      swift_storeEnumTagMultiPayload();
      sub_24121BD08();
      uint64_t v171 = (uint64_t)v291;
      sub_241630638();
      sub_2414FA9E4(v167, (uint64_t (*)(void))sub_2414F8284);
      sub_2414FA97C(v171, v298, (uint64_t (*)(void))sub_2414F8250);
      swift_storeEnumTagMultiPayload();
      sub_2414F836C();
      sub_2414F8690();
      sub_241630638();
      sub_2414FA9E4(v171, (uint64_t (*)(void))sub_2414F8250);
      sub_2414FA9E4(v276, (uint64_t (*)(void))sub_24121B9D8);
      v170(v282, v165);
      uint64_t v172 = (char *)&v316 + 8;
      goto LABEL_17;
    case 3:
      sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
      uint64_t v294 = v173;
      sub_241631368();
      uint64_t v174 = v314;
      uint64_t v175 = v306;
      uint64_t v176 = *(char **)(v306 + 104);
      uint64_t v177 = (uint64_t)v302;
      LODWORD(v282) = *MEMORY[0x263F44280];
      uint64_t v178 = v303;
      v281 = v176;
      ((void (*)(char *))v176)(v302);
      uint64_t v179 = v305;
      sub_24138F638(v174, 5, v177, 0, v305);
      swift_release();
      v180 = *(void (**)(uint64_t, uint64_t))(v175 + 8);
      uint64_t v306 = v175 + 8;
      v180(v177, v178);
      char v181 = sub_2416309B8();
      if (qword_268CF97E0 != -1) {
        swift_once();
      }
      sub_24162FE78();
      uint64_t v183 = v182;
      uint64_t v185 = v184;
      uint64_t v187 = v186;
      uint64_t v189 = v188;
      uint64_t v190 = v269;
      sub_2414FA97C(v179, v269, (uint64_t (*)(void))sub_24121BAB4);
      uint64_t v191 = v190 + *(int *)(v304 + 36);
      *(unsigned char *)uint64_t v191 = v181;
      *(void *)(v191 + 8) = v183;
      *(void *)(v191 + 16) = v185;
      *(void *)(v191 + 24) = v187;
      *(void *)(v191 + 32) = v189;
      *(unsigned char *)(v191 + 40) = 0;
      sub_2414FA9E4(v179, (uint64_t (*)(void))sub_24121BAB4);
      uint64_t v192 = v301;
      uint64_t v193 = (uint64_t)v277;
      if (qword_268CF97D8 != -1) {
        swift_once();
      }
      sub_2416313F8();
      sub_2416301F8();
      uint64_t v194 = v266;
      sub_2414FA97C(v190, v266, (uint64_t (*)(void))sub_24121BA8C);
      v195 = (_OWORD *)(v194 + *(int *)(v192 + 36));
      long long v196 = v312;
      v195[4] = v311;
      v195[5] = v196;
      v195[6] = v313;
      long long v197 = v308;
      _OWORD *v195 = v307;
      v195[1] = v197;
      long long v198 = v310;
      v195[2] = v309;
      v195[3] = v198;
      sub_2414FA9E4(v190, (uint64_t (*)(void))sub_24121BA8C);
      char v199 = sub_2416309A8();
      sub_2414FA97C(v194, (uint64_t)v57, (uint64_t (*)(void))sub_24121BA00);
      uint64_t v200 = v295;
      v201 = &v57[*(int *)(v295 + 36)];
      char *v201 = v199;
      *(_OWORD *)(v201 + 8) = 0u;
      *(_OWORD *)(v201 + 24) = 0u;
      v201[40] = 1;
      sub_2414FA9E4(v194, (uint64_t (*)(void))sub_24121BA00);
      uint64_t v202 = v193;
      sub_2414FA914((uint64_t)v57, v193, (uint64_t (*)(void))sub_24121B9D8);
      uint64_t v203 = v283;
      sub_2416312B8();
      sub_241631368();
      uint64_t v204 = v314;
      uint64_t v205 = (uint64_t)v302;
      uint64_t v206 = v303;
      ((void (*)(char *, void, uint64_t))v281)(v302, v282, v303);
      uint64_t v207 = v305;
      sub_24138F638(v204, 6, v205, 0, v305);
      swift_release();
      v180(v205, v206);
      LOBYTE(v204) = sub_2416309B8();
      sub_24162FE78();
      uint64_t v209 = v208;
      uint64_t v211 = v210;
      uint64_t v213 = v212;
      uint64_t v215 = v214;
      uint64_t v216 = v275;
      sub_2414FA97C(v207, v275, (uint64_t (*)(void))sub_24121BAB4);
      uint64_t v217 = v216 + *(int *)(v304 + 36);
      *(unsigned char *)uint64_t v217 = v204;
      *(void *)(v217 + 8) = v209;
      *(void *)(v217 + 16) = v211;
      *(void *)(v217 + 24) = v213;
      *(void *)(v217 + 32) = v215;
      *(unsigned char *)(v217 + 40) = 0;
      sub_2414FA9E4(v207, (uint64_t (*)(void))sub_24121BAB4);
      sub_2416313F8();
      sub_2416301F8();
      uint64_t v218 = v273;
      sub_2414FA97C(v216, v273, (uint64_t (*)(void))sub_24121BA8C);
      v219 = (_OWORD *)(v218 + *(int *)(v301 + 36));
      long long v220 = v319;
      v219[4] = v318;
      v219[5] = v220;
      v219[6] = v320;
      long long v221 = v315;
      _OWORD *v219 = v314;
      v219[1] = v221;
      long long v222 = v317;
      v219[2] = v316;
      v219[3] = v222;
      sub_2414FA9E4(v216, (uint64_t (*)(void))sub_24121BA8C);
      LOBYTE(v204) = sub_2416309A8();
      uint64_t v223 = v271;
      sub_2414FA97C(v218, v271, (uint64_t (*)(void))sub_24121BA00);
      uint64_t v224 = v223 + *(int *)(v200 + 36);
      *(unsigned char *)uint64_t v224 = v204;
      *(_OWORD *)(v224 + 8) = 0u;
      *(_OWORD *)(v224 + 24) = 0u;
      *(unsigned char *)(v224 + 40) = 1;
      sub_2414FA9E4(v218, (uint64_t (*)(void))sub_24121BA00);
      uint64_t v225 = v278;
      sub_2414FA914(v223, v278, (uint64_t (*)(void))sub_24121B9D8);
      uint64_t v226 = v202;
      uint64_t v227 = v285;
      sub_2414FA97C(v226, v285, (uint64_t (*)(void))sub_24121B9D8);
      uint64_t v228 = v292;
      v229 = *(void (**)(char *, char *, uint64_t))(v292 + 16);
      v230 = v286;
      v231 = v203;
      uint64_t v232 = v293;
      v229(v286, v231, v293);
      uint64_t v233 = v284;
      sub_2414FA97C(v225, v284, (uint64_t (*)(void))sub_24121B9D8);
      uint64_t v234 = v289;
      sub_2414FA97C(v227, v289, (uint64_t (*)(void))sub_24121B9D8);
      sub_24121B964();
      uint64_t v236 = v235;
      v229((char *)(v234 + *(int *)(v235 + 48)), v230, v232);
      sub_2414FA97C(v233, v234 + *(int *)(v236 + 64), (uint64_t (*)(void))sub_24121B9D8);
      sub_2414FA9E4(v233, (uint64_t (*)(void))sub_24121B9D8);
      v237 = *(void (**)(char *, uint64_t))(v228 + 8);
      v237(v230, v232);
      sub_2414FA9E4(v227, (uint64_t (*)(void))sub_24121B9D8);
      sub_2414FA97C(v234, v290, (uint64_t (*)(void))sub_2414F8284);
      swift_storeEnumTagMultiPayload();
      sub_24121BD08();
      uint64_t v238 = (uint64_t)v291;
      sub_241630638();
      sub_2414FA9E4(v234, (uint64_t (*)(void))sub_2414F8284);
      sub_2414FA97C(v238, v298, (uint64_t (*)(void))sub_2414F8250);
      swift_storeEnumTagMultiPayload();
      sub_2414F836C();
      sub_2414F8690();
      sub_241630638();
      sub_2414FA9E4(v238, (uint64_t (*)(void))sub_2414F8250);
      sub_2414FA9E4(v278, (uint64_t (*)(void))sub_24121B9D8);
      v237(v283, v232);
      uint64_t v172 = (char *)&v308;
LABEL_17:
      unint64_t v84 = (char *)*((void *)v172 - 32);
      break;
    default:
      sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
      sub_241631368();
      uint64_t v85 = v314;
      uint64_t v86 = v306;
      uint64_t v87 = (uint64_t)v302;
      uint64_t v88 = v303;
      (*(void (**)(char *, void, uint64_t))(v306 + 104))(v302, *MEMORY[0x263F44280], v303);
      uint64_t v89 = v305;
      sub_24138F638(v85, 0, v87, 0, v305);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v87, v88);
      char v90 = sub_2416309B8();
      if (qword_268CF97E0 != -1) {
        swift_once();
      }
      sub_24162FE78();
      uint64_t v92 = v91;
      uint64_t v94 = v93;
      uint64_t v96 = v95;
      uint64_t v98 = v97;
      uint64_t v99 = v265;
      sub_2414FA97C(v89, v265, (uint64_t (*)(void))sub_24121BAB4);
      uint64_t v100 = v99 + *(int *)(v304 + 36);
      *(unsigned char *)uint64_t v100 = v90;
      *(void *)(v100 + 8) = v92;
      *(void *)(v100 + 16) = v94;
      *(void *)(v100 + 24) = v96;
      *(void *)(v100 + 32) = v98;
      *(unsigned char *)(v100 + 40) = 0;
      sub_2414FA9E4(v89, (uint64_t (*)(void))sub_24121BAB4);
      uint64_t v101 = v295;
      uint64_t v102 = v301;
      if (qword_268CF97D8 != -1) {
        swift_once();
      }
      sub_2416313F8();
      sub_2416301F8();
      sub_2414FA97C(v99, (uint64_t)v50, (uint64_t (*)(void))sub_24121BA8C);
      unint64_t v103 = &v50[*(int *)(v102 + 36)];
      long long v104 = v319;
      *((_OWORD *)v103 + 4) = v318;
      *((_OWORD *)v103 + 5) = v104;
      *((_OWORD *)v103 + 6) = v320;
      long long v105 = v315;
      *(_OWORD *)unint64_t v103 = v314;
      *((_OWORD *)v103 + 1) = v105;
      long long v106 = v317;
      *((_OWORD *)v103 + 2) = v316;
      *((_OWORD *)v103 + 3) = v106;
      sub_2414FA9E4(v99, (uint64_t (*)(void))sub_24121BA8C);
      char v107 = sub_2416309A8();
      sub_2414FA97C((uint64_t)v50, (uint64_t)v81, (uint64_t (*)(void))sub_24121BA00);
      uint64_t v108 = &v81[*(int *)(v101 + 36)];
      *uint64_t v108 = v107;
      *(_OWORD *)(v108 + 8) = 0u;
      *(_OWORD *)(v108 + 24) = 0u;
      v108[40] = 1;
      sub_2414FA9E4((uint64_t)v50, (uint64_t (*)(void))sub_24121BA00);
      sub_2414FA914((uint64_t)v81, (uint64_t)v84, (uint64_t (*)(void))sub_24121B9D8);
      sub_2414FA97C((uint64_t)v84, (uint64_t)v280, (uint64_t (*)(void))sub_24121B9D8);
      swift_storeEnumTagMultiPayload();
      sub_2414F83A0();
      uint64_t v109 = (uint64_t)v281;
      sub_241630638();
      sub_2414FA97C(v109, v298, (uint64_t (*)(void))sub_2414F80CC);
      swift_storeEnumTagMultiPayload();
      sub_2414F836C();
      sub_2414F8690();
      sub_241630638();
      sub_2414FA9E4(v109, (uint64_t (*)(void))sub_2414F80CC);
      break;
  }
  return sub_2414FA9E4((uint64_t)v84, (uint64_t (*)(void))sub_24121B9D8);
}

uint64_t sub_2414F7EC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2416305A8();
  if (qword_268CF97D0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_268D241E8;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = 0;
  sub_2414FAA44(0, &qword_268D01AF0, sub_2414F7F78);
  return sub_2414F5160(v1, a1 + *(int *)(v5 + 44));
}

void sub_2414F7F78(uint64_t a1)
{
}

void sub_2414F7FAC()
{
  if (!qword_268D01B00)
  {
    sub_2414F801C(255);
    sub_2414F86C4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01B00);
    }
  }
}

void sub_2414F801C(uint64_t a1)
{
}

void sub_2414F8050(uint64_t a1)
{
}

void sub_2414F8084(uint64_t a1)
{
}

void sub_2414F80CC(uint64_t a1)
{
}

void sub_2414F8100(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241630188();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2414F8164(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_2414F81E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2414F8250(uint64_t a1)
{
}

void sub_2414F8284(uint64_t a1)
{
}

unint64_t sub_2414F82B8()
{
  unint64_t result = qword_268D01B30;
  if (!qword_268D01B30)
  {
    sub_2414F8050(255);
    sub_2414F8554(&qword_268D01B38, sub_2414F8084, (void (*)(void))sub_2414F836C, (void (*)(void))sub_2414F8690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01B30);
  }
  return result;
}

uint64_t sub_2414F836C()
{
  return sub_2414F85E0(&qword_268D01B40, sub_2414F80CC, (void (*)(void))sub_2414F83A0);
}

uint64_t sub_2414F83A0()
{
  return sub_2414F8418(&qword_268D01B48, sub_24121B9D8, (void (*)(void))sub_2414F83DC);
}

uint64_t sub_2414F83DC()
{
  return sub_2414F8418(&qword_268D01B50, sub_24121BA00, (void (*)(void))sub_2414F8498);
}

uint64_t sub_2414F8418(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2414F8498()
{
  unint64_t result = qword_268D01B58;
  if (!qword_268D01B58)
  {
    sub_24121BA8C(255);
    sub_2414F8554((unint64_t *)&qword_268CFE570, sub_24121BAB4, (void (*)(void))sub_2414885BC, (void (*)(void))sub_2414F865C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01B58);
  }
  return result;
}

uint64_t sub_2414F8554(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2414F85E0(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2414F865C()
{
  return sub_2414FC218(&qword_268CFB0D8, (void (*)(uint64_t))type metadata accessor for EndDatePickerRow);
}

uint64_t sub_2414F8690()
{
  return sub_2414F85E0(&qword_268D01B60, sub_2414F8250, (void (*)(void))sub_24121BD08);
}

void sub_2414F86C4(uint64_t a1)
{
}

void sub_2414F86F8(uint64_t a1)
{
}

void sub_2414F872C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = type metadata accessor for StyledVStackListSection();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_2414F87B8(uint64_t a1)
{
}

void sub_2414F87E0(uint64_t a1)
{
}

void sub_2414F8808(uint64_t a1)
{
}

void sub_2414F8830(uint64_t a1)
{
}

void sub_2414F8878(uint64_t a1)
{
}

void sub_2414F88A0(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_2414FBA2C(255, a3, a4);
    unint64_t v5 = sub_241631458();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2414F88F8()
{
  return sub_2414FC218(&qword_268D01BA8, sub_2414F8878);
}

uint64_t sub_2414F892C()
{
  return sub_2414F8418(&qword_268D01BB0, sub_2414F87B8, (void (*)(void))sub_2414F8968);
}

uint64_t sub_2414F8968()
{
  return sub_2414F8418(&qword_268D01BB8, sub_2414F87E0, (void (*)(void))sub_2414F89A4);
}

unint64_t sub_2414F89A4()
{
  unint64_t result = qword_268D01BC0;
  if (!qword_268D01BC0)
  {
    sub_2414F8808(255);
    sub_2414FC218(&qword_268D01BC8, sub_2414F8830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01BC0);
  }
  return result;
}

uint64_t sub_2414F8A4C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for PregnancyStartDateMethodInputRow(0);
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  sub_241631368();
  swift_getKeyPath();
  sub_2414FC218((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_24162BB48();
  swift_release();
  uint64_t v2 = *(unsigned __int8 *)(v7
                          + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__selectedInputMethod);
  swift_release();
  switch(v2)
  {
    case 1:
      if (qword_268CF94D0 != -1) {
        goto LABEL_14;
      }
      goto LABEL_9;
    case 2:
      if (qword_268CF94E0 == -1) {
        goto LABEL_9;
      }
      goto LABEL_14;
    case 3:
      if (qword_268CF94F0 == -1) {
        goto LABEL_9;
      }
      goto LABEL_14;
    case 4:
      if (qword_268CF9808 != -1) {
        swift_once();
      }
      sub_2411D662C();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      goto LABEL_13;
    default:
      if (qword_268CF94C0 == -1) {
        goto LABEL_9;
      }
LABEL_14:
      swift_once();
LABEL_9:
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      sub_2411D662C();
LABEL_13:
      uint64_t result = sub_241630C28();
      *(void *)a1 = result;
      *(void *)(a1 + 8) = v4;
      *(unsigned char *)(a1 + 16) = v5 & 1;
      *(void *)(a1 + 24) = v6;
      return result;
  }
}

uint64_t sub_2414F8D0C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for PregnancyStartDateMethodInputRow(0);
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  sub_241631368();
  swift_getKeyPath();
  sub_2414FC218((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_24162BB48();
  swift_release();
  int v2 = *(unsigned __int8 *)(v21
                          + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin28PregnancyDatesInputViewModel__selectedInputMethod);
  swift_release();
  if (v2 == 4)
  {
    if (qword_268CF9810 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_268CF9818 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_2411D662C();
  uint64_t v3 = sub_241630C28();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  sub_241630FB8();
  uint64_t v8 = sub_241630BB8();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_24120EFBC(v3, v5, v7);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241630A28();
  uint64_t v13 = sub_241630B98();
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v19 = v18;
  sub_24120EFBC(v8, v10, v12);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v13;
  *(void *)(a1 + 8) = v15;
  *(unsigned char *)(a1 + 16) = v17 & 1;
  *(void *)(a1 + 24) = v19;
  return result;
}

uint64_t sub_2414F8F98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v2 = sub_2416307C8();
  uint64_t v45 = *(void *)(v2 - 8);
  uint64_t v46 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v43 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = type metadata accessor for PregnancyStartDateMethodInputRow(0);
  uint64_t v41 = *(void *)(started - 8);
  MEMORY[0x270FA5388](started);
  uint64_t v42 = v4;
  uint64_t v47 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = (uint64_t (*)(void))sub_241630898();
  uint64_t v5 = *((void *)v39 - 1);
  MEMORY[0x270FA5388](v39);
  char v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414FB940(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414FBDEC(0);
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414FBE14();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414FBFEC(0);
  uint64_t v50 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v49 = (char *)&v38 - v24;
  uint64_t v40 = v1;
  sub_2414F9688(v1, (uint64_t)v10);
  sub_2414FA97C((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))sub_2414FB940);
  uint64_t v25 = (uint64_t (**)())&v14[*(int *)(v12 + 36)];
  *uint64_t v25 = sub_2414FA1F4;
  v25[1] = 0;
  sub_2414FA9E4((uint64_t)v10, (uint64_t (*)(void))sub_2414FB940);
  sub_241630878();
  uint64_t v26 = sub_2414F8418(&qword_268D01C98, sub_2414FBDEC, (void (*)(void))sub_2414FBED0);
  sub_241630E18();
  (*(void (**)(char *, uint64_t (*)(void)))(v5 + 8))(v7, v39);
  sub_2414FA9E4((uint64_t)v14, (uint64_t (*)(void))sub_2414FBDEC);
  if (qword_268CF9810 != -1) {
    swift_once();
  }
  uint64_t v51 = qword_268D01AC0;
  uint64_t v52 = *(void *)algn_268D01AC8;
  uint64_t v53 = v12;
  uint64_t v54 = v26;
  swift_getOpaqueTypeConformance2();
  sub_2411D662C();
  sub_241630DA8();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v39 = type metadata accessor for PregnancyStartDateMethodInputRow;
  uint64_t v27 = v40;
  uint64_t v28 = v47;
  sub_2414FA97C(v40, v47, type metadata accessor for PregnancyStartDateMethodInputRow);
  unint64_t v29 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v30 = swift_allocObject();
  sub_2414FA914(v28, v30 + v29, type metadata accessor for PregnancyStartDateMethodInputRow);
  uint64_t v31 = v43;
  sub_2416307B8();
  sub_241630168();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v46);
  sub_2414FA9E4((uint64_t)v22, (uint64_t (*)(void))sub_2414FBFEC);
  uint64_t v32 = v27 + *(int *)(started + 24);
  char v33 = *(unsigned char *)v32;
  uint64_t v34 = *(void *)(v32 + 8);
  LOBYTE(v53) = v33;
  uint64_t v54 = v34;
  sub_2414FC03C();
  sub_241631138();
  sub_2414FA97C(v27, v28, v39);
  uint64_t v35 = swift_allocObject();
  sub_2414FA914(v28, v35 + v29, type metadata accessor for PregnancyStartDateMethodInputRow);
  type metadata accessor for PregnancyStartDateMethodInputPickerSheet();
  sub_2414FC108();
  sub_2414FC218(&qword_268D01CD0, (void (*)(uint64_t))type metadata accessor for PregnancyStartDateMethodInputPickerSheet);
  uint64_t v36 = (uint64_t)v49;
  sub_241630EA8();
  swift_release();
  swift_release();
  swift_release();
  return sub_2414FA9E4(v36, (uint64_t (*)(void))sub_2414FBFEC);
}

uint64_t sub_2414F9688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v33[2] = a2;
  sub_2414FBC7C(0);
  void v33[3] = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414F8164(0, &qword_268D01CD8, (uint64_t (*)(uint64_t))sub_2414FB9BC, (uint64_t (*)(uint64_t))sub_2414FBC7C, MEMORY[0x263F19B20]);
  v33[1] = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v33 - v7;
  sub_2414FBA90(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v33 - v13;
  sub_2414FB9BC(0);
  v33[0] = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241630128();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241428880((uint64_t)v21);
  char v22 = sub_241630108();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v23 = sub_241630498();
  if (v22)
  {
    *(void *)uint64_t v17 = v23;
    *((void *)v17 + 1) = 0;
    unsigned char v17[16] = 1;
    sub_2414FAA44(0, &qword_268D01CE8, sub_2414FBA04);
    uint64_t v25 = (uint64_t)&v17[*(int *)(v24 + 44)];
    *(void *)uint64_t v14 = sub_2416305A8();
    *((void *)v14 + 1) = 0;
    v14[16] = 1;
    sub_2414FAA44(0, &qword_268D01CF0, sub_2414FBAD8);
    sub_2414F9B68(a1, (uint64_t)&v14[*(int *)(v26 + 44)]);
    sub_2414FA97C((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))sub_2414FBA90);
    sub_2414FA97C((uint64_t)v11, v25, (uint64_t (*)(void))sub_2414FBA90);
    sub_2414FBA2C(0, &qword_268D01C38, sub_2414FBA90);
    uint64_t v28 = v25 + *(int *)(v27 + 48);
    *(void *)uint64_t v28 = 0;
    *(unsigned char *)(v28 + 8) = 0;
    sub_2414FA9E4((uint64_t)v14, (uint64_t (*)(void))sub_2414FBA90);
    sub_2414FA9E4((uint64_t)v11, (uint64_t (*)(void))sub_2414FBA90);
    sub_2414FA97C((uint64_t)v17, (uint64_t)v8, (uint64_t (*)(void))sub_2414FB9BC);
    swift_storeEnumTagMultiPayload();
    sub_2414FBF84();
    sub_2414FBFB8();
    sub_241630638();
    unint64_t v29 = sub_2414FB9BC;
    uint64_t v30 = (uint64_t)v17;
  }
  else
  {
    *(void *)uint64_t v5 = v23;
    *((void *)v5 + 1) = 0;
    v5[16] = 1;
    sub_2414FAA44(0, &qword_268D01CE0, sub_2414FBCC4);
    sub_2414F9EA4(a1, (uint64_t)&v5[*(int *)(v31 + 44)]);
    sub_2414FA97C((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))sub_2414FBC7C);
    swift_storeEnumTagMultiPayload();
    sub_2414FBF84();
    sub_2414FBFB8();
    sub_241630638();
    unint64_t v29 = sub_2414FBC7C;
    uint64_t v30 = (uint64_t)v5;
  }
  return sub_2414FA9E4(v30, (uint64_t (*)(void))v29);
}

uint64_t sub_2414F9B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t started = type metadata accessor for PregnancyStartDateMethodInputRow(0);
  uint64_t v28 = *(void *)(started - 8);
  uint64_t v5 = *(void *)(v28 + 64);
  MEMORY[0x270FA5388](started - 8);
  sub_2414FBBC4(0, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v30 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v25 - v11;
  sub_2414F8A4C((uint64_t)v34);
  uint64_t v14 = v34[0];
  uint64_t v13 = v34[1];
  int v27 = v35;
  uint64_t v29 = v36;
  sub_2414FA97C(a1, (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PregnancyStartDateMethodInputRow);
  unint64_t v15 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v16 = swift_allocObject();
  sub_2414FA914((uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for PregnancyStartDateMethodInputRow);
  uint64_t v31 = a1;
  uint64_t v17 = v12;
  uint64_t v26 = v12;
  sub_241631168();
  LOBYTE(v34[0]) = v27;
  char v33 = 0;
  char v32 = 1;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v19 = v30;
  v18(v30, v17, v7);
  LOBYTE(v17) = v34[0];
  char v20 = v33;
  char v21 = v32;
  *(void *)a2 = v14;
  *(void *)(a2 + 8) = v13;
  *(unsigned char *)(a2 + 16) = (_BYTE)v17;
  *(void *)(a2 + 24) = v29;
  *(unsigned char *)(a2 + 32) = v20;
  *(unsigned char *)(a2 + 33) = v21;
  sub_2414FBB0C();
  v18((char *)(a2 + *(int *)(v22 + 48)), v19, v7);
  sub_24120F7E4(v14, v13, (char)v17);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v23(v26, v7);
  v23(v19, v7);
  sub_24120EFBC(v14, v13, v34[0]);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2414F9EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t started = type metadata accessor for PregnancyStartDateMethodInputRow(0);
  uint64_t v29 = *(void *)(started - 8);
  uint64_t v5 = *(void *)(v29 + 64);
  MEMORY[0x270FA5388](started - 8);
  sub_2414FBBC4(0, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v31 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v26 - v11;
  sub_2414F8A4C((uint64_t)v36);
  uint64_t v14 = v36[0];
  uint64_t v13 = v36[1];
  int v28 = v37;
  uint64_t v30 = v38;
  sub_2414FA97C(a1, (uint64_t)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PregnancyStartDateMethodInputRow);
  unint64_t v15 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v16 = swift_allocObject();
  sub_2414FA914((uint64_t)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for PregnancyStartDateMethodInputRow);
  uint64_t v32 = a1;
  uint64_t v17 = v12;
  int v27 = v12;
  sub_241631168();
  LOBYTE(v36[0]) = v28;
  char v35 = 0;
  char v34 = 1;
  char v33 = 0;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v19 = v31;
  v18(v31, v17, v7);
  LOBYTE(v17) = v36[0];
  char v20 = v35;
  char v21 = v34;
  *(void *)a2 = v14;
  *(void *)(a2 + 8) = v13;
  *(unsigned char *)(a2 + 16) = (_BYTE)v17;
  *(void *)(a2 + 24) = v30;
  *(unsigned char *)(a2 + 32) = v20;
  *(unsigned char *)(a2 + 33) = v21;
  char v22 = v33;
  *(void *)(a2 + 40) = 0x4024000000000000;
  *(unsigned char *)(a2 + 48) = v22;
  sub_2414FBCF8();
  v18((char *)(a2 + *(int *)(v23 + 64)), v19, v7);
  sub_24120F7E4(v14, v13, (char)v17);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v24(v27, v7);
  v24(v19, v7);
  sub_24120EFBC(v14, v13, v36[0]);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2414FA1F4()
{
  return sub_24162FF58();
}

uint64_t sub_2414FA21C()
{
  return swift_release();
}

uint64_t sub_2414FA2C0@<X0>(uint64_t a1@<X8>)
{
  return sub_24155F2F4(a1);
}

uint64_t sub_2414FA3F8(uint64_t a1)
{
  return sub_2414FA70C(a1, 0xD00000000000001BLL, 0x800000024166F4C0, &qword_268D01A70, algn_268D01A78);
}

uint64_t sub_2414FA420(uint64_t a1)
{
  return sub_2414FA70C(a1, 0xD00000000000001ALL, 0x800000024166F4A0, &qword_268D01A80, algn_268D01A88);
}

uint64_t sub_2414FA448(uint64_t a1)
{
  return sub_2414FA498(a1, 0xD000000000000014, 0x800000024166F500, &qword_268D01A90, algn_268D01A98);
}

uint64_t sub_2414FA470(uint64_t a1)
{
  return sub_2414FA498(a1, 0xD000000000000013, 0x800000024166F4E0, &qword_268D01AA0, algn_268D01AA8);
}

uint64_t sub_2414FA498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v20[-v13];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v11, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v16 = sub_241631D38();
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
  *a4 = v16;
  *a5 = v18;
  return result;
}

uint64_t sub_2414FA688(uint64_t a1)
{
  return sub_2414FA70C(a1, 0xD000000000000017, 0x800000024166F520, &qword_268D01AB0, algn_268D01AB8);
}

uint64_t sub_2414FA6B0(uint64_t a1)
{
  return sub_2414FA70C(a1, 0x5F534E4F4954504FLL, 0xED0000454C544954, &qword_268D01AC0, algn_268D01AC8);
}

uint64_t sub_2414FA6E0(uint64_t a1)
{
  return sub_2414FA70C(a1, 0x545F45474E414843, 0xEC000000454C5449, &qword_268D01AD0, algn_268D01AD8);
}

uint64_t sub_2414FA70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v20[-v13];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v11, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v16 = sub_241631D38();
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
  *a4 = v16;
  *a5 = v18;
  return result;
}

uint64_t sub_2414FA914(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2414FA97C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2414FA9E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2414FAA44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241630028();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2414FAAB8(uint64_t a1)
{
}

unint64_t sub_2414FAAF0()
{
  unint64_t result = qword_268D01BF0;
  if (!qword_268D01BF0)
  {
    sub_2414FAB8C(255, &qword_268D01BF8, (uint64_t (*)(uint64_t))sub_2414F7F78, sub_2414FAC0C, MEMORY[0x263F1B6D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01BF0);
  }
  return result;
}

void sub_2414FAB8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_2414FAC0C()
{
  return sub_2414FC218(&qword_268D01C00, sub_2414F7F78);
}

uint64_t *sub_2414FAC40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_2414FAAB8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_241630128();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    unint64_t v11 = (char *)a2 + v9;
    sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)a1 + v13;
    id v15 = (char *)a2 + v13;
    *uint64_t v14 = *v15;
    *((void *)v14 + 1) = *((void *)v15 + 1);
  }
  swift_retain();
  return a1;
}

uint64_t sub_2414FADE8(uint64_t a1, uint64_t a2)
{
  sub_2414FAAB8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_241630128();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_release();
}

void *sub_2414FAF00(void *a1, void *a2, uint64_t a3)
{
  sub_2414FAAB8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_241630128();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *uint64_t v12 = *v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_retain();
  return a1;
}

void *sub_2414FB05C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2414FA9E4((uint64_t)a1, (uint64_t (*)(void))sub_2414FAAB8);
    sub_2414FAAB8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_241630128();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *uint64_t v12 = *v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_2414FB1E8(char *a1, char *a2, uint64_t a3)
{
  sub_2414FAAB8(0);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_241630128();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2414FB338(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2414FA9E4((uint64_t)a1, (uint64_t (*)(void))sub_2414FAAB8);
    sub_2414FAAB8(0);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_241630128();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  id v15 = &a2[v13];
  *uint64_t v14 = *v15;
  *((void *)v14 + 1) = *((void *)v15 + 1);
  swift_release();
  return a1;
}

uint64_t sub_2414FB4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2414FB4D8);
}

uint64_t sub_2414FB4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2414F46F0(0, &qword_268CFBF20, MEMORY[0x263F18D80], MEMORY[0x263F185D0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_2414FB65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2414FB670);
}

void sub_2414FB670(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2414F46F0(0, &qword_268CFBF20, MEMORY[0x263F18D80], MEMORY[0x263F185D0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_2414F46F0(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for PregnancyStartDateMethodInputRow(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D01C08);
}

void sub_2414FB804(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_2414FB824(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  a4(319);
  if (v4 <= 0x3F)
  {
    sub_2414F46F0(319, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    if (v5 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_2414FB924()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2414FB940(uint64_t a1)
{
}

void sub_2414FB974(uint64_t a1)
{
}

void sub_2414FB9BC(uint64_t a1)
{
}

void sub_2414FBA04(uint64_t a1)
{
}

void sub_2414FBA2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_2414FBA90(uint64_t a1)
{
}

void sub_2414FBAD8(uint64_t a1)
{
}

void sub_2414FBB0C()
{
  if (!qword_268D01C50)
  {
    sub_2414FBBC4(255, (unint64_t *)&qword_268CFE7E0, MEMORY[0x263F190F0], MEMORY[0x263F18E28]);
    sub_2414FBBC4(255, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01C50);
    }
  }
}

void sub_2414FBBC4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x263F1A830]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2414FBC14()
{
  return sub_2414FC218(&qword_268D01C58, sub_2414FBAD8);
}

uint64_t sub_2414FBC48()
{
  return sub_2414FC218(&qword_268D01C60, sub_2414FBA04);
}

void sub_2414FBC7C(uint64_t a1)
{
}

void sub_2414FBCC4(uint64_t a1)
{
}

void sub_2414FBCF8()
{
  if (!qword_268D01C78)
  {
    sub_2414FBBC4(255, (unint64_t *)&qword_268CFE7E0, MEMORY[0x263F190F0], MEMORY[0x263F18E28]);
    sub_2414FBBC4(255, (unint64_t *)&qword_268CFABF8, MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D01C78);
    }
  }
}

uint64_t sub_2414FBDB8()
{
  return sub_2414FC218(&qword_268D01C80, sub_2414FBCC4);
}

void sub_2414FBDEC(uint64_t a1)
{
}

void sub_2414FBE14()
{
  if (!qword_268D01C90)
  {
    sub_2414FBDEC(255);
    sub_2414F8418(&qword_268D01C98, sub_2414FBDEC, (void (*)(void))sub_2414FBED0);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D01C90);
    }
  }
}

unint64_t sub_2414FBED0()
{
  unint64_t result = qword_268D01CA0;
  if (!qword_268D01CA0)
  {
    sub_2414FB940(255);
    sub_2414F8554(&qword_268D01CA8, sub_2414FB974, (void (*)(void))sub_2414FBF84, (void (*)(void))sub_2414FBFB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01CA0);
  }
  return result;
}

uint64_t sub_2414FBF84()
{
  return sub_2414FC218(&qword_268D01CB0, sub_2414FB9BC);
}

uint64_t sub_2414FBFB8()
{
  return sub_2414FC218(&qword_268D01CB8, sub_2414FBC7C);
}

void sub_2414FBFEC(uint64_t a1)
{
}

void sub_2414FC03C()
{
  if (!qword_268CFCB20)
  {
    unint64_t v0 = sub_241631148();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CFCB20);
    }
  }
}

uint64_t sub_2414FC098@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for PregnancyStartDateMethodInputRow(0);

  return sub_2414FA2C0(a1);
}

unint64_t sub_2414FC108()
{
  unint64_t result = qword_268D01CC8;
  if (!qword_268D01CC8)
  {
    sub_2414FBFEC(255);
    sub_2414FBDEC(255);
    sub_2414F8418(&qword_268D01C98, sub_2414FBDEC, (void (*)(void))sub_2414FBED0);
    swift_getOpaqueTypeConformance2();
    sub_2414FC218((unint64_t *)&qword_268CFBC98, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01CC8);
  }
  return result;
}

uint64_t sub_2414FC218(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2414FC26C@<X0>(uint64_t a1@<X8>)
{
  return sub_2414F8D0C(a1);
}

uint64_t sub_2414FC278()
{
  return sub_2414FA21C();
}

unsigned char *storeEnumTagSinglePayload for PregnancyTimeUnit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2414FC398);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PregnancyTimeUnit()
{
  return &type metadata for PregnancyTimeUnit;
}

uint64_t sub_2414FC3D0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2414FC47C()
{
  unint64_t result = qword_268D01CF8;
  if (!qword_268D01CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01CF8);
  }
  return result;
}

uint64_t sub_2414FC4D4(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24162EFA8();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a4 + 32))(a3, a4, v10);
  if (result != 10)
  {
    if (result >= a1)
    {
      sub_24162EF48();
      int v15 = sub_24162EF98();
      os_log_type_t v16 = sub_2416322B8();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        uint64_t v24 = v18;
        *(_DWORD *)uint64_t v17 = 136446466;
        uint64_t v19 = sub_2416333E8();
        uint64_t v23 = sub_2411B6898(v19, v20, &v24);
        sub_241632C28();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2082;
        LOBYTE(v23) = a1;
        uint64_t v21 = sub_241631D78();
        uint64_t v23 = sub_2411B6898(v21, v22, &v24);
        sub_241632C28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v15, v16, "[%{public}s] Skipping metrics for already completed step: %{public}s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x245621640](v18, -1, -1);
        MEMORY[0x245621640](v17, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 40))(a1, a3, a4);
      id v14 = sub_2414FC79C();
      return sub_2413E6B7C(a2 | (a1 << 8), (uint64_t)v14);
    }
  }
  return result;
}

id sub_2414FC79C()
{
  v7[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v0 = (void *)sub_24162CA58();
  v7[0] = 0;
  id v1 = objc_msgSend(v0, sel_biologicalSexWithError_, v7);

  if (v1)
  {
    id v2 = v7[0];
    id v3 = objc_msgSend(v1, sel_biologicalSex);
  }
  else
  {
    id v4 = v7[0];
    uint64_t v5 = (void *)sub_24162B348();

    swift_willThrow();
    return 0;
  }
  return v3;
}

uint64_t ReviewPregnancyInMedicalIDUserData.init(sampleUUID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24162B788();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t ReviewPregnancyInMedicalIDUserData.encode()()
{
  sub_24162AE28();
  swift_allocObject();
  sub_24162AE18();
  type metadata accessor for ReviewPregnancyInMedicalIDUserData();
  sub_2414FD0FC(&qword_268CFF670, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDUserData);
  uint64_t v0 = sub_24162AE08();
  swift_release();
  return v0;
}

uint64_t type metadata accessor for ReviewPregnancyInMedicalIDUserData()
{
  uint64_t result = qword_26B011C08;
  if (!qword_26B011C08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ReviewPregnancyInMedicalIDUserData.init(data:)(uint64_t a1, unint64_t a2)
{
  return swift_release();
}

uint64_t sub_2414FCAD8()
{
  return 0x5555656C706D6173;
}

uint64_t sub_2414FCAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5555656C706D6173 && a2 == 0xEA00000000004449)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_241633218();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2414FCB98(uint64_t a1)
{
  unint64_t v2 = sub_2414FCD98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2414FCBD4(uint64_t a1)
{
  unint64_t v2 = sub_2414FCD98();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ReviewPregnancyInMedicalIDUserData.encode(to:)(void *a1)
{
  sub_2414FD098(0, &qword_268D01D08, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - v5;
  sub_2411B6854(a1, a1[3]);
  sub_2414FCD98();
  sub_2416333A8();
  sub_24162B788();
  sub_2414FD0FC(&qword_268D01D18, MEMORY[0x263F07508]);
  sub_2416331A8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2414FCD98()
{
  unint64_t result = qword_268D01D10;
  if (!qword_268D01D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01D10);
  }
  return result;
}

uint64_t ReviewPregnancyInMedicalIDUserData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_24162B788();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414FD098(0, &qword_268D01D20, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for ReviewPregnancyInMedicalIDUserData();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B6854(a1, a1[3]);
  sub_2414FCD98();
  sub_241633398();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_2414FD0FC(&qword_268D01D28, MEMORY[0x263F07508]);
    sub_241633158();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_2414FD144((uint64_t)v12, v17);
  }
  return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)a1);
}

void sub_2414FD098(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2414FCD98();
    unint64_t v7 = a3(a1, &type metadata for ReviewPregnancyInMedicalIDUserData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_2414FD0FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2414FD144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReviewPregnancyInMedicalIDUserData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2414FD1A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReviewPregnancyInMedicalIDUserData.init(from:)(a1, a2);
}

uint64_t sub_2414FD1C0(void *a1)
{
  sub_2414FD098(0, &qword_268D01D08, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  sub_2411B6854(a1, a1[3]);
  sub_2414FCD98();
  sub_2416333A8();
  sub_24162B788();
  sub_2414FD0FC(&qword_268D01D18, MEMORY[0x263F07508]);
  sub_2416331A8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for ReviewPregnancyInMedicalIDUserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162B788();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for ReviewPregnancyInMedicalIDUserData(uint64_t a1)
{
  uint64_t v2 = sub_24162B788();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for ReviewPregnancyInMedicalIDUserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162B788();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for ReviewPregnancyInMedicalIDUserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162B788();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for ReviewPregnancyInMedicalIDUserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162B788();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for ReviewPregnancyInMedicalIDUserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162B788();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReviewPregnancyInMedicalIDUserData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2414FD5C0);
}

uint64_t sub_2414FD5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162B788();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ReviewPregnancyInMedicalIDUserData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2414FD640);
}

uint64_t sub_2414FD640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162B788();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_2414FD6B0()
{
  uint64_t result = sub_24162B788();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReviewPregnancyInMedicalIDUserData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2414FD7D8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReviewPregnancyInMedicalIDUserData.CodingKeys()
{
  return &type metadata for ReviewPregnancyInMedicalIDUserData.CodingKeys;
}

unint64_t sub_2414FD814()
{
  unint64_t result = qword_268D01D30;
  if (!qword_268D01D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01D30);
  }
  return result;
}

unint64_t sub_2414FD86C()
{
  unint64_t result = qword_268D01D38;
  if (!qword_268D01D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01D38);
  }
  return result;
}

unint64_t sub_2414FD8C4()
{
  unint64_t result = qword_268D01D40;
  if (!qword_268D01D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01D40);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PDFWidthLimitingVStack(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

void *assignWithCopy for PDFWidthLimitingVStack(void *a1, void *a2)
{
  *a1 = *a2;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for PDFWidthLimitingVStack(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for PDFWidthLimitingVStack()
{
  return &type metadata for PDFWidthLimitingVStack;
}

uint64_t sub_2414FDA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_24162E758();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_24162CB68();
  if (*(void *)(a3 + 16) <= a4)
  {
    sub_24162CB18();
    goto LABEL_5;
  }
  if ((a4 & 0x8000000000000000) == 0)
  {
    v16[1] = result;
    sub_2411B6854((void *)(a3 + 40 * a4 + 32), *(void *)(a3 + 40 * a4 + 56));
    sub_24162CD78();
LABEL_5:
    CGRectGetWidth(*(CGRect *)&v12);
    sub_24162CB48();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_24162E738();
    sub_24162E718();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_2414FDBE8(a2, a3, a4, MEMORY[0x263F448A8]);
    CGRectGetHeight(v17);
    sub_24162CB58();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_2414FDBE8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = sub_24162E758();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_24162CB68();
  uint64_t v12 = result;
  if (*(void *)(a2 + 16) <= a3)
  {
    sub_24162CB18();
    goto LABEL_5;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_2411B6854((void *)(a2 + 40 * a3 + 32), *(void *)(a2 + 40 * a3 + 56));
    sub_24162CD78();
LABEL_5:
    CGRectGetWidth(*(CGRect *)&v13);
    sub_24162CB48();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    sub_24162E738();
    a4(v12);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_2414FDD98(uint64_t a1, uint64_t a2)
{
  return sub_2414FDA00(a1, a2, *v2, v2[2]);
}

uint64_t sub_2414FDDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2414FDDD8(a1, a2, a3, MEMORY[0x263F448A8]);
}

uint64_t sub_2414FDDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2414FDDD8(a1, a2, a3, MEMORY[0x263F448B0]);
}

uint64_t sub_2414FDDD8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  return sub_2414FDBE8(a1, *v4, v4[2], a4);
}

uint64_t sub_2414FDDFC(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  unint64_t v4 = sub_2414FDF00();
  *int v3 = v1;
  v3[1] = sub_2411D899C;
  return MEMORY[0x270F33478](a1, v4);
}

unint64_t sub_2414FDEAC()
{
  unint64_t result = qword_268D01D50;
  if (!qword_268D01D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01D50);
  }
  return result;
}

unint64_t sub_2414FDF00()
{
  unint64_t result = qword_268D01D58;
  if (!qword_268D01D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D01D58);
  }
  return result;
}

ValueMetadata *type metadata accessor for CycleDayHeaderRow()
{
  return &type metadata for CycleDayHeaderRow;
}

double sub_2414FDF68(uint64_t a1, uint64_t a2)
{
  sub_2411DFE0C();
  sub_241632CD8();
  int v3 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  sub_2414FF41C(0, (unint64_t *)&qword_268CFA900, (uint64_t (*)(uint64_t))sub_2411E0CA8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  uint64_t v5 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
  uint64_t v6 = *v5;
  *(void *)(inited + 32) = v6;
  uint64_t v7 = *MEMORY[0x263F835B8];
  uint64_t v8 = *MEMORY[0x263F81788];
  uint64_t v9 = *MEMORY[0x263F81840];
  id v10 = v6;
  id v11 = sub_2415D17B8(v7, 0, v8, v9, 0);
  uint64_t v12 = sub_2411B9D00(0, &qword_26B012140);
  *(void *)(inited + 40) = v11;
  uint64_t v13 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v12;
  *(void *)(inited + 72) = v13;
  uint64_t v14 = self;
  id v15 = v13;
  id v16 = objc_msgSend(v14, sel_secondaryLabelColor);
  *(void *)(inited + 104) = sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
  *(void *)(inited + 80) = v16;
  sub_2414E42B8(inited);
  type metadata accessor for Key(0);
  sub_2414FF3D4(&qword_268CFFFF0, type metadata accessor for Key);
  uint64_t v17 = (void *)sub_241631B18();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_sizeWithAttributes_, v17);
  double v19 = v18;

  double v20 = 1.0;
  if (a2 == 2) {
    double v20 = 7.0;
  }
  double v21 = 2.0;
  if (a2 == 2) {
    double v21 = 8.0;
  }
  return ceil(v21 + v20 + v19);
}

double sub_2414FE1B4(uint64_t a1, uint64_t a2)
{
  if (a2 == 2) {
    double v2 = 5.5;
  }
  else {
    double v2 = 2.0;
  }
  sub_2411DFE0C();
  sub_241632CD8();
  int v3 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  sub_2414FF41C(0, (unint64_t *)&qword_268CFA900, (uint64_t (*)(uint64_t))sub_2411E0CA8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  uint64_t v5 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
  uint64_t v6 = *v5;
  *(void *)(inited + 32) = v6;
  uint64_t v7 = *MEMORY[0x263F835B8];
  uint64_t v8 = *MEMORY[0x263F81788];
  uint64_t v9 = *MEMORY[0x263F81840];
  id v10 = v6;
  id v11 = sub_2415D17B8(v7, 0, v8, v9, 0);
  uint64_t v12 = sub_2411B9D00(0, &qword_26B012140);
  *(void *)(inited + 40) = v11;
  uint64_t v13 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v12;
  *(void *)(inited + 72) = v13;
  uint64_t v14 = self;
  id v15 = v13;
  id v16 = objc_msgSend(v14, sel_secondaryLabelColor);
  *(void *)(inited + 104) = sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
  *(void *)(inited + 80) = v16;
  sub_2414E42B8(inited);
  type metadata accessor for Key(0);
  sub_2414FF3D4(&qword_268CFFFF0, type metadata accessor for Key);
  uint64_t v17 = (void *)sub_241631B18();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_sizeWithAttributes_, v17);
  double v19 = v18;

  return v2 + v2 + fmax(v19, 17.0);
}

id sub_2414FE3F4(void *a1)
{
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
  {
    id v2 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    sub_24162F178();
    sub_2414FF3D4(&qword_268D01D60, type metadata accessor for UIUserInterfaceLevel);
    int v3 = (void *)sub_2416325E8();
    id v4 = objc_msgSend(v2, sel_resolvedColorWithTraitCollection_, v3);

    return v4;
  }
  else
  {
    id v1 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    return v1;
  }
}

void sub_2414FE54C(CGContext *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, double a10)
{
  double v104 = a10;
  double v103 = *(double *)&a5;
  uint64_t v101 = a4;
  uint64_t v118 = a2;
  uint64_t v119 = (int *)type metadata accessor for CycleChartCycle.RelativeDayIndex(0);
  uint64_t v98 = *((void *)v119 - 1);
  MEMORY[0x270FA5388](v119);
  uint64_t v17 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v102 = (uint64_t)&v97 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v114 = (uint64_t)&v97 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v117 = (uint64_t)&v97 - v23;
  sub_2412216AC();
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v97 = (uint64_t)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2414FF41C(0, &qword_268CFAEC8, type metadata accessor for CycleChartCycle, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v112 = (char *)&v97 - v27;
  id v28 = objc_allocWithZone(MEMORY[0x263F825C8]);
  aBlock[4] = sub_2414FE3F4;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2414FF014;
  void aBlock[3] = &unk_26F575490;
  uint64_t v29 = _Block_copy(aBlock);
  id v30 = objc_msgSend(v28, sel_initWithDynamicProvider_, v29);
  _Block_release(v29);
  swift_release();
  uint64_t v100 = a3;
  id v31 = objc_msgSend(v30, sel_resolvedColorWithTraitCollection_, a3);

  CGContextSaveGState(a1);
  uint64_t v32 = (CGColor *)objc_msgSend(v31, sel_CGColor);
  CGContextSetFillColorWithColor(a1, v32);

  CGFloat v105 = a6;
  CGFloat v106 = a7;
  v121.origin.x = a6;
  v121.origin.y = a7;
  CGFloat v107 = a8;
  CGFloat v108 = a9;
  v121.size.width = a8;
  v121.size.height = a9;
  CGContextFillRect(a1, v121);
  uint64_t v99 = a1;
  CGContextRestoreGState(a1);

  sub_2414FF41C(0, (unint64_t *)&qword_268CFA900, (uint64_t (*)(uint64_t))sub_2411E0CA8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  long long v115 = xmmword_24163A4F0;
  char v34 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_24163A4F0;
  char v35 = *v34;
  *(void *)(inited + 32) = v35;
  uint64_t v109 = *MEMORY[0x263F835B8];
  uint64_t v36 = v109;
  uint64_t v37 = *MEMORY[0x263F81788];
  uint64_t v111 = *MEMORY[0x263F81840];
  uint64_t v38 = v111;
  uint64_t v110 = v35;
  id v39 = sub_2415D17B8(v36, 0, v37, v38, 0);
  uint64_t v40 = sub_2411B9D00(0, &qword_26B012140);
  *(void *)(inited + 40) = v39;
  uint64_t v41 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v40;
  *(void *)(inited + 72) = v41;
  uint64_t v42 = self;
  id v43 = v41;
  id v44 = objc_msgSend(v42, sel_secondaryLabelColor);
  uint64_t v45 = sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
  *(void *)(inited + 104) = v45;
  *(void *)(inited + 80) = v44;
  unint64_t v116 = sub_2414E42B8(inited);
  uint64_t v46 = swift_initStackObject();
  *(_OWORD *)(v46 + 16) = v115;
  uint64_t v47 = v110;
  *(void *)(v46 + 32) = v110;
  uint64_t v48 = v47;
  *(void *)(v46 + 40) = sub_2415D17B8(v109, 0, v37, v111, 0);
  *(void *)(v46 + 64) = v40;
  *(void *)(v46 + 72) = v43;
  id v49 = v43;
  uint64_t v50 = v42;
  uint64_t v51 = (uint64_t)v112;
  id v52 = objc_msgSend(v50, sel_tertiaryLabelColor);
  *(void *)(v46 + 104) = v45;
  *(void *)(v46 + 80) = v52;
  *(void *)&long long v115 = sub_2414E42B8(v46);
  sub_241232830(v118, v51);
  uint64_t v53 = type metadata accessor for CycleChartCycle(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v51, 1, v53) == 1)
  {
    sub_241216F7C(v51);
    uint64_t v54 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v55 = v97;
    uint64_t v56 = sub_24136561C((char *)(v51 + *(int *)(v53 + 24)), v97);
    MEMORY[0x270FA5388](v56);
    *(&v97 - 2) = v51;
    uint64_t v54 = sub_241393B60((void (*)(char *))sub_2414FF5A8, (uint64_t)(&v97 - 4));
    sub_2414FF548(v55, (uint64_t (*)(void))sub_2412216AC);
    sub_2414FF548(v51, type metadata accessor for CycleChartCycle);
  }
  uint64_t v57 = v117;
  uint64_t v58 = *(void *)(v54 + 16);
  if (!v58)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v92 = v99;
    uint64_t v91 = v100;
    CGFloat v94 = v105;
    CGFloat v93 = v106;
    CGFloat v96 = v107;
    CGFloat v95 = v108;
    sub_2414FF5CC(v99, v100, v105, v106, v107, v108);
    sub_2414FF07C(v92, v91, v94, v93, v96, v95);
    return;
  }
  uint64_t v59 = 0;
  LODWORD(v118) = 0;
  uint64_t v60 = v54 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80));
  uint64_t v61 = *(void *)(v98 + 72);
  double v62 = v103;
  double v63 = 2.0;
  if (*(void *)&v103 == 2) {
    double v63 = 5.5;
  }
  double v103 = v63;
  if (*(void *)&v62 == 2) {
    double v64 = 7.0;
  }
  else {
    double v64 = 1.0;
  }
  uint64_t v109 = v61;
  uint64_t v110 = (char *)(v58 - 1);
  uint64_t v112 = (char *)(MEMORY[0x263F8EE58] + 8);
  uint64_t v113 = v17;
  uint64_t v111 = v54;
  uint64_t v65 = v119;
  CGFloat v67 = v105;
  CGFloat v66 = v106;
  CGFloat v69 = v107;
  CGFloat v68 = v108;
  double v70 = v104;
  do
  {
    sub_2414FF480(v60, v57);
    aBlock[0] = *(void *)(v57 + v65[6]);
    sub_2411DFE0C();
    sub_241632CD8();
    uint64_t v80 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    type metadata accessor for Key(0);
    sub_2414FF3D4(&qword_268CFFFF0, type metadata accessor for Key);
    uint64_t v81 = (void *)sub_241631B18();
    objc_msgSend(v80, sel_sizeWithAttributes_, v81);
    double v83 = v82;

    uint64_t v84 = v114;
    sub_2414FF480(v57, v114);
    if (v118)
    {
      sub_2414FF548(v84, type metadata accessor for CycleChartCycle.RelativeDayIndex);
      uint64_t v85 = (uint64_t)v113;
      sub_2414FF480(v57, (uint64_t)v113);
    }
    else
    {
      int v87 = *(unsigned __int8 *)(v84 + v65[7]);
      uint64_t v88 = v84;
      uint64_t v89 = v102;
      sub_2414FF4E4(v88, v102);
      if (v87 != 1)
      {
        sub_2414FF548(v89, type metadata accessor for CycleChartCycle.RelativeDayIndex);
        uint64_t v85 = (uint64_t)v113;
        sub_2414FF480(v117, (uint64_t)v113);
LABEL_25:
        sub_2414FF548(v85, type metadata accessor for CycleChartCycle.RelativeDayIndex);
        int v71 = 0;
        goto LABEL_12;
      }
      uint64_t v90 = *(void *)(v89 + v119[6]);
      sub_2414FF548(v89, type metadata accessor for CycleChartCycle.RelativeDayIndex);
      uint64_t v85 = (uint64_t)v113;
      sub_2414FF480(v117, (uint64_t)v113);
      if (v90 < v101) {
        goto LABEL_25;
      }
    }
    int v86 = *(unsigned __int8 *)(v85 + v119[7]);
    sub_2414FF548(v85, type metadata accessor for CycleChartCycle.RelativeDayIndex);
    if (v86 != 1)
    {
      uint64_t v57 = v117;
      sub_2414FF548(v117, type metadata accessor for CycleChartCycle.RelativeDayIndex);
      swift_bridgeObjectRelease();

      uint64_t v79 = v111;
      if (v110 == v59) {
        goto LABEL_26;
      }
      LODWORD(v118) = 1;
      goto LABEL_15;
    }
    int v71 = 1;
LABEL_12:
    v122.origin.x = v67;
    v122.origin.y = v66;
    v122.size.width = v69;
    v122.size.height = v68;
    CGFloat MinX = CGRectGetMinX(v122);
    uint64_t v57 = v117;
    double v73 = MinX + (double)*(uint64_t *)(v117 + v119[5]) * v70;
    v123.origin.x = v67;
    v123.origin.y = v66;
    v123.size.width = v69;
    v123.size.height = v68;
    double MinY = CGRectGetMinY(v123);
    double v75 = (v70 - v83) * 0.5;
    LODWORD(v118) = v71;
    if (v71) {
      double v75 = v103;
    }
    double v76 = v75 + v73;
    double v77 = v64 + MinY;
    uint64_t v78 = (void *)sub_241631B18();
    swift_bridgeObjectRelease();
    objc_msgSend(v80, sel_drawAtPoint_withAttributes_, v78, v76, v77);

    sub_2414FF548(v57, type metadata accessor for CycleChartCycle.RelativeDayIndex);
    uint64_t v79 = v111;
    if (v110 == v59) {
      goto LABEL_26;
    }
LABEL_15:
    ++v59;
    v60 += v109;
  }
  while ((unint64_t)v59 < *(void *)(v79 + 16));
  __break(1u);
}

unint64_t sub_2414FEF9C()
{
  return 0xD000000000000011;
}

double sub_2414FEFB8()
{
  double result = 35.0;
  if (*(void *)(v0 + 8) == 2) {
    return 110.0;
  }
  return result;
}

double sub_2414FEFE0()
{
  return sub_2414FE1B4(*v0, v0[1]);
}

double sub_2414FEFE8()
{
  return *(double *)(v0 + 16);
}

void sub_2414FEFF0(double a1)
{
  *(double *)(v1 + 16) = a1;
}

double sub_2414FEFF8()
{
  return *(double *)(v0 + 24);
}

void sub_2414FF000(double a1)
{
  *(double *)(v1 + 24) = a1;
}

double sub_2414FF008()
{
  return sub_2414FDF68(*v0, v0[1]);
}

id sub_2414FF014(uint64_t a1, void *a2)
{
  int v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_2414FF07C(CGContext *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v12 = objc_msgSend(self, sel_systemGrayColor);
  objc_msgSend(a2, sel_displayScale);
  CGFloat v14 = 1.0 / v13;
  double v15 = 1.0 / v13 * 0.5;
  sub_2414FF41C(0, (unint64_t *)&qword_268D04800, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24163A4F0;
  v24.origin.x = a3;
  v24.origin.y = a4;
  v24.size.width = a5;
  v24.size.height = a6;
  CGFloat MinX = CGRectGetMinX(v24);
  v25.origin.x = a3;
  v25.origin.y = a4;
  v25.size.width = a5;
  v25.size.height = a6;
  CGFloat MaxY = CGRectGetMaxY(v25);
  *(CGFloat *)(v16 + 32) = MinX;
  *(CGFloat *)(v16 + 40) = MaxY - v15;
  v26.origin.x = a3;
  v26.origin.y = a4;
  v26.size.width = a5;
  v26.size.height = a6;
  CGFloat MaxX = CGRectGetMaxX(v26);
  v27.origin.x = a3;
  v27.origin.y = a4;
  v27.size.width = a5;
  v27.size.height = a6;
  CGFloat v20 = CGRectGetMaxY(v27);
  *(CGFloat *)(v16 + 48) = MaxX;
  *(CGFloat *)(v16 + 56) = v20 - v15;
  uint64_t v21 = (CGColor *)objc_msgSend(v12, sel_CGColor);
  CGContextSetStrokeColorWithColor(a1, v21);

  CGContextSetLineWidth(a1, v14);
  sub_2416321A8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2414FF230(CGContext *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v12 = objc_allocWithZone(MEMORY[0x263F825C8]);
  v18[4] = sub_2414FE3F4;
  v18[5] = 0;
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 1107296256;
  v18[2] = sub_2414FF014;
  void v18[3] = &unk_26F575468;
  double v13 = _Block_copy(v18);
  id v14 = objc_msgSend(v12, sel_initWithDynamicProvider_, v13);
  _Block_release(v13);
  swift_release();
  id v15 = objc_msgSend(v14, sel_resolvedColorWithTraitCollection_, a2);

  CGContextSaveGState(a1);
  uint64_t v16 = (CGColor *)objc_msgSend(v15, sel_CGColor);
  CGContextSetFillColorWithColor(a1, v16);

  v19.origin.x = a3;
  v19.origin.y = a4;
  v19.size.width = a5;
  v19.size.height = a6;
  CGContextFillRect(a1, v19);
  CGContextRestoreGState(a1);

  sub_24128E99C(a1, a2, a3, a4, a5, a6);
  return sub_2414FF07C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_2414FF3D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2414FF41C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2414FF480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CycleChartCycle.RelativeDayIndex(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2414FF4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CycleChartCycle.RelativeDayIndex(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2414FF548(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

int *sub_2414FF5A8@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241534490(a1, a2);
}

void sub_2414FF5CC(CGContext *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v22 = objc_msgSend(self, sel_systemGrayColor);
  CGContextSaveGState(a1);
  id v12 = objc_msgSend(v22, sel_resolvedColorWithTraitCollection_, a2);
  objc_msgSend(a2, sel_displayScale);
  CGFloat v14 = 1.0 / v13;
  double v15 = 1.0 / v13 * 0.5;
  sub_2414FF41C(0, (unint64_t *)&qword_268D04800, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24163A4F0;
  v24.origin.x = a3;
  v24.origin.y = a4;
  v24.size.width = a5;
  v24.size.height = a6;
  CGFloat v17 = CGRectGetMaxX(v24) - v15;
  v25.origin.x = a3;
  v25.origin.y = a4;
  v25.size.width = a5;
  v25.size.height = a6;
  CGFloat MinY = CGRectGetMinY(v25);
  *(CGFloat *)(v16 + 32) = v17;
  *(CGFloat *)(v16 + 40) = MinY;
  v26.origin.x = a3;
  v26.origin.y = a4;
  v26.size.width = a5;
  v26.size.height = a6;
  CGFloat v19 = CGRectGetMaxX(v26) - v15;
  v27.origin.x = a3;
  v27.origin.y = a4;
  v27.size.width = a5;
  v27.size.height = a6;
  CGFloat MaxY = CGRectGetMaxY(v27);
  *(CGFloat *)(v16 + 48) = v19;
  *(CGFloat *)(v16 + 56) = MaxY;
  uint64_t v21 = (CGColor *)objc_msgSend(v12, sel_CGColor);
  CGContextSetStrokeColorWithColor(a1, v21);

  CGContextSetLineWidth(a1, v14);
  sub_2416321A8();

  swift_bridgeObjectRelease();
  CGContextRestoreGState(a1);
}

uint64_t sub_2414FF7C0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_24162C128();
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24162C1C8();
  MEMORY[0x270FA5388](v13);
  double v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v16 + 16))(v15, a3);
  CGFloat v17 = (void *)sub_24162C178();
  sub_2411B8FB8(v17);

  a5[3] = type metadata accessor for SharedProjectionHighlightFeedItemGenerator(0);
  a5[4] = sub_2411A6300(&qword_26B00E7D0, (void (*)(uint64_t))type metadata accessor for SharedProjectionHighlightFeedItemGenerator);
  uint64_t v18 = sub_2411B6C70(a5);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return sub_2414CEB5C((uint64_t)v15, (uint64_t)v12, a1, a2, a4, v18);
}

uint64_t sub_2414FF96C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  uint64_t v6 = sub_24162EF98();
  os_log_type_t v7 = sub_2416322E8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v19 = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v21 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_2416333E8();
    uint64_t v20 = sub_2411B6898(v11, v12, &v21);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v6, v7, "[%{public}s] Deallocating", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v10, -1, -1);
    MEMORY[0x245621640](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_release();
  uint64_t v13 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin50SharedProjectionHighlightFeedItemGeneratorPipeline_domain;
  uint64_t v14 = sub_24162C128();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin50SharedProjectionHighlightFeedItemGeneratorPipeline_context;
  uint64_t v16 = sub_24162C1C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  objc_release(*(id *)(v1
                     + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin50SharedProjectionHighlightFeedItemGeneratorPipeline_notificationSettingsManager));
  return v1;
}

uint64_t sub_2414FFC28()
{
  sub_2414FF96C();

  return swift_deallocClassInstance();
}

uint64_t sub_2414FFC80()
{
  return type metadata accessor for SharedProjectionHighlightFeedItemGeneratorPipeline();
}

uint64_t sub_2414FFC88()
{
  uint64_t result = sub_24162C128();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24162C1C8();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_2414FFD70()
{
  uint64_t v1 = sub_24162C1C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_2414FFE14@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(sub_24162C1C8() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void **)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2414FF7C0(a1, a2, v3 + v8, v9, a3);
}

uint64_t sub_2414FFEC8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2414FFF00(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *sub_2414FFF34(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24162ED68();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((void *)v10 + 2) = *((void *)v11 + 2);
    unint64_t v12 = (uint64_t *)((char *)a1 + v9);
    uint64_t v13 = (uint64_t *)((char *)a2 + v9);
    sub_24150E940(0, &qword_268CFDD58, (uint64_t (*)(uint64_t))sub_241371C8C, MEMORY[0x263F185C8]);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_2416307A8();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        sub_241371C8C(0);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
    }
    else
    {
      *unint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    sub_24150E940(0, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_241630128();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      void *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24150024C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162ED68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  sub_24150E940(0, &qword_268CFDD58, (uint64_t (*)(uint64_t))sub_241371C8C, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_2416307A8();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  sub_24150E940(0, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_241630128();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_241500470(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162ED68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  uint64_t v11 = (void *)(a1 + v8);
  unint64_t v12 = (void *)(a2 + v8);
  sub_24150E940(0, &qword_268CFDD58, (uint64_t (*)(uint64_t))sub_241371C8C, MEMORY[0x263F185C8]);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_2416307A8();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_241371C8C(0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  else
  {
    void *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  sub_24150E940(0, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_241630128();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_241500738(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162ED68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  _OWORD v8[2] = v9[2];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)(a1 + v10);
    unint64_t v12 = (void *)(a2 + v10);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_241500A5C(a1 + v10, &qword_268CFDD58, (uint64_t (*)(uint64_t))sub_241371C8C, MEMORY[0x263F185C8]);
    sub_24150E940(0, &qword_268CFDD58, (uint64_t (*)(uint64_t))sub_241371C8C, v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_2416307A8();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        sub_241371C8C(0);
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v11, v12, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (void *)(a2 + v17);
    uint64_t v20 = (uint64_t (*)(uint64_t))MEMORY[0x263F18D80];
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_241500A5C(a1 + v17, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
    sub_24150E940(0, &qword_268CFBA10, v20, v21);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_241630128();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
    }
    else
    {
      void *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241500A5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_24150E940(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_241500AB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162ED68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  uint64_t v11 = (void *)(a1 + v8);
  unint64_t v12 = (const void *)(a2 + v8);
  sub_24150E940(0, &qword_268CFDD58, (uint64_t (*)(uint64_t))sub_241371C8C, MEMORY[0x263F185C8]);
  uint64_t v14 = v13;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_2416307A8();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15))
    {
      sub_241371C8C(0);
      memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v11, v12, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  sub_24150E940(0, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  uint64_t v22 = v21;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_241630128();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v19, v20, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t sub_241500D88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162ED68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)(a1 + v10);
    unint64_t v12 = (const void *)(a2 + v10);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_241500A5C(a1 + v10, &qword_268CFDD58, (uint64_t (*)(uint64_t))sub_241371C8C, MEMORY[0x263F185C8]);
    sub_24150E940(0, &qword_268CFDD58, (uint64_t (*)(uint64_t))sub_241371C8C, v13);
    uint64_t v15 = v14;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_2416307A8();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16))
      {
        sub_241371C8C(0);
        memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v11, v12, v16);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (const void *)(a2 + v19);
    uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F18D80];
    uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_241500A5C(a1 + v19, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
    sub_24150E940(0, &qword_268CFBA10, v22, v23);
    uint64_t v25 = v24;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_241630128();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v20, v21, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2415010AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2415010C0);
}

uint64_t sub_2415010C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24162ED68();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_11:
    return v9(v10, a2, v8);
  }
  if (a2 == 2147483646)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 16);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    int v12 = v11 - 1;
    if (v12 < 0) {
      int v12 = -1;
    }
    return (v12 + 1);
  }
  else
  {
    sub_24150E940(0, &qword_268CFDD68, (uint64_t (*)(uint64_t))sub_241371C8C, MEMORY[0x263F185D0]);
    uint64_t v15 = *(void *)(v14 - 8);
    if (*(_DWORD *)(v15 + 84) == a2)
    {
      uint64_t v8 = v14;
      uint64_t v10 = a1 + a3[6];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
      goto LABEL_11;
    }
    sub_24150E940(0, &qword_268CFBF20, MEMORY[0x263F18D80], MEMORY[0x263F185D0]);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[7];
    return v17(v19, a2, v18);
  }
}

uint64_t sub_2415012B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2415012C4);
}

uint64_t sub_2415012C4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_24162ED68();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[5] + 16) = a2;
    return result;
  }
  sub_24150E940(0, &qword_268CFDD68, (uint64_t (*)(uint64_t))sub_241371C8C, MEMORY[0x263F185D0]);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  sub_24150E940(0, &qword_268CFBF20, MEMORY[0x263F18D80], MEMORY[0x263F185D0]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[7];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for PregnancyModeTimelineView(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D01D68);
}

void sub_2415014C8()
{
  sub_24162ED68();
  if (v0 <= 0x3F)
  {
    sub_24150E940(319, &qword_268CFDD58, (uint64_t (*)(uint64_t))sub_241371C8C, MEMORY[0x263F185C8]);
    if (v1 <= 0x3F)
    {
      sub_24150E940(319, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_241501634()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241501650@<X0>(uint64_t a1@<X8>)
{
  uint64_t v161 = a1;
  sub_241509CF4();
  uint64_t v143 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v140 = (uint64_t *)((char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24150AAC4();
  uint64_t v146 = v4;
  uint64_t v145 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v142 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F18E28];
  sub_24150EC70(0, &qword_268D01ED8, (uint64_t (*)(uint64_t))sub_24150AAC4, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v144 = (char *)&v125 - v8;
  sub_24150AB78();
  uint64_t v141 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v148 = (uint64_t)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150AC1C(0);
  uint64_t v160 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v147 = (uint64_t)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v149 = (uint64_t)&v125 - v14;
  sub_24150EC70(0, &qword_268D01EF0, (uint64_t (*)(uint64_t))sub_24150AC44, (uint64_t (*)(uint64_t))sub_24150AC1C, MEMORY[0x263F19B20]);
  uint64_t v158 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v159 = (uint64_t)&v125 - v16;
  uint64_t v17 = sub_241630588();
  uint64_t v155 = *(void *)(v17 - 8);
  uint64_t v156 = v17;
  MEMORY[0x270FA5388](v17);
  unint64_t v154 = (char *)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_241630898();
  uint64_t v151 = *(void *)(v19 - 8);
  uint64_t v152 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v150 = (char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for PregnancyModeTimelineView(0);
  uint64_t v132 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v133 = v22;
  uint64_t v136 = (uint64_t)&v125 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150AE18();
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v128 = (char *)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150ADF0(0);
  uint64_t v126 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v127 = (uint64_t)&v125 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150AD54();
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v129 = (uint64_t *)((char *)&v125 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24150EC70(0, &qword_268D01F08, (uint64_t (*)(uint64_t))sub_24150AD54, (uint64_t (*)(uint64_t))sub_24150BED8, v6);
  uint64_t v135 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v130 = (uint64_t)&v125 - v30;
  sub_24150AC8C();
  uint64_t v138 = v31;
  uint64_t v137 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  long long v134 = (char *)&v125 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150AC44(0);
  uint64_t v157 = v33;
  MEMORY[0x270FA5388](v33);
  uint64_t v131 = (char *)&v125 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v139 = (uint64_t)&v125 - v36;
  uint64_t v37 = sub_2416307A8();
  uint64_t v38 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v125 = (char *)&v125 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150B1F8(0, (unint64_t *)&qword_268CFDDA0, sub_241371C8C);
  uint64_t v41 = v40 - 8;
  MEMORY[0x270FA5388](v40);
  id v43 = (char *)&v125 - v42;
  sub_241371C8C(0);
  MEMORY[0x270FA5388](v44 - 8);
  uint64_t v46 = (char *)&v125 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  id v49 = (char *)&v125 - v48;
  MEMORY[0x270FA5388](v50);
  id v52 = (char *)&v125 - v51;
  uint64_t v153 = v1;
  sub_241428B78((uint64_t)&v125 - v51);
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v49, *MEMORY[0x263F19F08], v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v49, 0, 1, v37);
  uint64_t v53 = (uint64_t)&v43[*(int *)(v41 + 56)];
  sub_24150C9D0((uint64_t)v52, (uint64_t)v43, (uint64_t (*)(void))sub_241371C8C);
  sub_24150C9D0((uint64_t)v49, v53, (uint64_t (*)(void))sub_241371C8C);
  uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  if (v54((uint64_t)v43, 1, v37) != 1)
  {
    sub_24150C9D0((uint64_t)v43, (uint64_t)v46, (uint64_t (*)(void))sub_241371C8C);
    if (v54(v53, 1, v37) != 1)
    {
      uint64_t v55 = v125;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v125, v53, v37);
      sub_24150DC50(&qword_268CFDDD0, MEMORY[0x263F19F18]);
      char v56 = sub_241631C28();
      uint64_t v57 = *(void (**)(char *, uint64_t))(v38 + 8);
      v57(v55, v37);
      sub_24150C758((uint64_t)v49, (uint64_t (*)(void))sub_241371C8C);
      sub_24150C758((uint64_t)v52, (uint64_t (*)(void))sub_241371C8C);
      v57(v46, v37);
      sub_24150C758((uint64_t)v43, (uint64_t (*)(void))sub_241371C8C);
      if (v56) {
        goto LABEL_8;
      }
LABEL_9:
      uint64_t v93 = sub_2416305A8();
      uint64_t v94 = (uint64_t)v140;
      *uint64_t v140 = v93;
      *(void *)(v94 + 8) = 0x4024000000000000;
      *(unsigned char *)(v94 + 16) = 0;
      sub_24150C830();
      sub_2415029AC(v153, v94 + *(int *)(v95 + 44));
      CGFloat v96 = v150;
      sub_241630878();
      uint64_t v97 = sub_24150DC50(&qword_268D01ED0, (void (*)(uint64_t))sub_241509CF4);
      uint64_t v98 = v142;
      uint64_t v99 = v143;
      sub_241630E18();
      (*(void (**)(char *, uint64_t))(v151 + 8))(v96, v152);
      sub_24150C758(v94, (uint64_t (*)(void))sub_241509CF4);
      uint64_t v100 = v154;
      sub_241630578();
      uint64_t v162 = v99;
      unint64_t v163 = v97;
      swift_getOpaqueTypeConformance2();
      uint64_t v101 = (uint64_t)v144;
      uint64_t v102 = v146;
      sub_241630E28();
      (*(void (**)(char *, uint64_t))(v155 + 8))(v100, v156);
      (*(void (**)(char *, uint64_t))(v145 + 8))(v98, v102);
      LOBYTE(v102) = sub_241630968();
      sub_24162FE78();
      uint64_t v104 = v103;
      uint64_t v106 = v105;
      uint64_t v108 = v107;
      uint64_t v110 = v109;
      uint64_t v111 = v148;
      sub_24150C8C8(v101, v148, &qword_268D01ED8, (uint64_t (*)(uint64_t))sub_24150AAC4);
      uint64_t v112 = v111 + *(int *)(v141 + 36);
      *(unsigned char *)uint64_t v112 = v102;
      *(void *)(v112 + 8) = v104;
      *(void *)(v112 + 16) = v106;
      *(void *)(v112 + 24) = v108;
      *(void *)(v112 + 32) = v110;
      *(unsigned char *)(v112 + 40) = 0;
      sub_24150C960(v101, &qword_268D01ED8, (uint64_t (*)(uint64_t))sub_24150AAC4, MEMORY[0x263F1A470]);
      LOBYTE(v102) = sub_241630978();
      sub_24162FE78();
      uint64_t v114 = v113;
      uint64_t v116 = v115;
      uint64_t v118 = v117;
      uint64_t v120 = v119;
      uint64_t v121 = v147;
      sub_24150C9D0(v111, v147, (uint64_t (*)(void))sub_24150AB78);
      uint64_t v122 = v121 + *(int *)(v160 + 36);
      *(unsigned char *)uint64_t v122 = v102;
      *(void *)(v122 + 8) = v114;
      *(void *)(v122 + 16) = v116;
      *(void *)(v122 + 24) = v118;
      *(void *)(v122 + 32) = v120;
      *(unsigned char *)(v122 + 40) = 0;
      sub_24150C758(v111, (uint64_t (*)(void))sub_24150AB78);
      uint64_t v123 = v149;
      sub_24150CD98(v121, v149, (uint64_t (*)(void))sub_24150AC1C);
      sub_24150C9D0(v123, v159, (uint64_t (*)(void))sub_24150AC1C);
      swift_storeEnumTagMultiPayload();
      sub_24150CA38();
      sub_24150EDD8(&qword_268D02148, sub_24150AC1C, (void (*)(void))sub_24150CB54);
      sub_241630638();
      uint64_t v91 = sub_24150AC1C;
      uint64_t v92 = v123;
      return sub_24150C758(v92, (uint64_t (*)(void))v91);
    }
    sub_24150C758((uint64_t)v49, (uint64_t (*)(void))sub_241371C8C);
    sub_24150C758((uint64_t)v52, (uint64_t (*)(void))sub_241371C8C);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v46, v37);
LABEL_6:
    sub_24150C7B8((uint64_t)v43);
    goto LABEL_9;
  }
  sub_24150C758((uint64_t)v49, (uint64_t (*)(void))sub_241371C8C);
  sub_24150C758((uint64_t)v52, (uint64_t (*)(void))sub_241371C8C);
  if (v54(v53, 1, v37) != 1) {
    goto LABEL_6;
  }
  sub_24150C758((uint64_t)v43, (uint64_t (*)(void))sub_241371C8C);
LABEL_8:
  uint64_t v58 = sub_241630598();
  uint64_t v59 = (uint64_t)v129;
  *uint64_t v129 = v58;
  *(void *)(v59 + 8) = 0;
  *(unsigned char *)(v59 + 16) = 0;
  sub_24150CCDC();
  uint64_t v61 = v59 + *(int *)(v60 + 44);
  char v62 = sub_241630918();
  uint64_t v63 = (uint64_t)v128;
  *uint64_t v128 = v62;
  sub_24150D874(0, &qword_268D02168, &qword_268D01F28, (uint64_t (*)(uint64_t))sub_24150AECC);
  uint64_t v65 = v153;
  sub_241502BCC(v153, v63 + *(int *)(v64 + 44));
  char v66 = sub_241630968();
  sub_24162FE78();
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  uint64_t v75 = v127;
  sub_24150C9D0(v63, v127, (uint64_t (*)(void))sub_24150AE18);
  uint64_t v76 = v75 + *(int *)(v126 + 36);
  *(unsigned char *)uint64_t v76 = v66;
  *(void *)(v76 + 8) = v68;
  *(void *)(v76 + 16) = v70;
  *(void *)(v76 + 24) = v72;
  *(void *)(v76 + 32) = v74;
  *(unsigned char *)(v76 + 40) = 0;
  sub_24150C758(v63, (uint64_t (*)(void))sub_24150AE18);
  sub_24150CD98(v75, v61, (uint64_t (*)(void))sub_24150ADF0);
  uint64_t v77 = v65;
  uint64_t v78 = v136;
  sub_24150C9D0(v77, v136, type metadata accessor for PregnancyModeTimelineView);
  unint64_t v79 = (*(unsigned __int8 *)(v132 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
  uint64_t v80 = swift_allocObject();
  sub_24150CD98(v78, v80 + v79, type metadata accessor for PregnancyModeTimelineView);
  uint64_t v81 = v130;
  sub_24150C9D0(v59, v130, (uint64_t (*)(void))sub_24150AD54);
  uint64_t v82 = v135;
  double v83 = (void *)(v81 + *(int *)(v135 + 36));
  *double v83 = sub_2415028A0;
  v83[1] = 0;
  void v83[2] = sub_24150D080;
  v83[3] = v80;
  sub_24150C758(v59, (uint64_t (*)(void))sub_24150AD54);
  uint64_t v84 = v150;
  sub_241630878();
  unint64_t v85 = sub_24150BF88();
  int v86 = v134;
  sub_241630E18();
  (*(void (**)(char *, uint64_t))(v151 + 8))(v84, v152);
  sub_24150C960(v81, &qword_268D01F08, (uint64_t (*)(uint64_t))sub_24150AD54, (uint64_t (*)(uint64_t))sub_24150BED8);
  int v87 = v154;
  sub_241630578();
  uint64_t v162 = v82;
  unint64_t v163 = v85;
  swift_getOpaqueTypeConformance2();
  uint64_t v88 = (uint64_t)v131;
  uint64_t v89 = v138;
  sub_241630E28();
  (*(void (**)(char *, uint64_t))(v155 + 8))(v87, v156);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v86, v89);
  uint64_t v90 = v139;
  sub_24150CD98(v88, v139, (uint64_t (*)(void))sub_24150AC44);
  sub_24150C9D0(v90, v159, (uint64_t (*)(void))sub_24150AC44);
  swift_storeEnumTagMultiPayload();
  sub_24150CA38();
  sub_24150EDD8(&qword_268D02148, sub_24150AC1C, (void (*)(void))sub_24150CB54);
  sub_241630638();
  uint64_t v91 = sub_24150AC44;
  uint64_t v92 = v90;
  return sub_24150C758(v92, (uint64_t (*)(void))v91);
}

uint64_t sub_2415028A0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_24162FFE8();
  *a1 = v3;
  return result;
}

uint64_t sub_2415028CC()
{
  return swift_release();
}

uint64_t sub_2415029AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24150A43C();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  sub_241509DDC();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v20 - v14;
  *(void *)uint64_t v15 = sub_2416305A8();
  *((void *)v15 + 1) = 0;
  unsigned char v15[16] = 0;
  sub_24150DCA0();
  sub_241506828(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  *(void *)uint64_t v9 = sub_241630598();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  sub_24150D7D4();
  sub_241507CA8(a1, (uint64_t)&v9[*(int *)(v17 + 44)]);
  sub_24150C9D0((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))sub_241509DDC);
  sub_24150C9D0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))sub_24150A43C);
  sub_24150C9D0((uint64_t)v12, a2, (uint64_t (*)(void))sub_241509DDC);
  sub_241509DA8(0);
  sub_24150C9D0((uint64_t)v6, a2 + *(int *)(v18 + 48), (uint64_t (*)(void))sub_24150A43C);
  sub_24150C758((uint64_t)v9, (uint64_t (*)(void))sub_24150A43C);
  sub_24150C758((uint64_t)v15, (uint64_t (*)(void))sub_241509DDC);
  sub_24150C758((uint64_t)v6, (uint64_t (*)(void))sub_24150A43C);
  return sub_24150C758((uint64_t)v12, (uint64_t (*)(void))sub_241509DDC);
}

uint64_t sub_241502BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v109 = a2;
  sub_24150BB38();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v102 = (uint64_t *)((char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v107 = sub_24150BB38;
  sub_24150BC80(0, &qword_268D020A0, (void (*)(uint64_t))sub_24150BB38);
  uint64_t v104 = v5 - 8;
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v106 = (uint64_t)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v105 = (uint64_t)&v95 - v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v101 = (uint64_t)&v95 - v10;
  sub_24150B9F0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v111 = (uint64_t *)((char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v108 = (uint64_t)&v95 - v14;
  sub_24150B7B8();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v98 = (uint64_t)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v97 = (uint64_t)&v95 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v95 - v20;
  sub_24150B4C8();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (uint64_t *)((char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24150B4A0(0);
  uint64_t v100 = v25 - 8;
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v110 = (uint64_t)&v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v113 = (uint64_t)&v95 - v28;
  sub_24150AF3C();
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v31 = (char *)&v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150AF14(0);
  uint64_t v33 = v32 - 8;
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v95 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = v35;
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)&v95 - v37;
  uint64_t v112 = (uint64_t)&v95 - v37;
  *(void *)uint64_t v31 = sub_241630478();
  *((void *)v31 + 1) = 0;
  v31[16] = 0;
  sub_24150D0F0();
  uint64_t v40 = (uint64_t)&v31[*(int *)(v39 + 44)];
  uint64_t v99 = a1;
  sub_2415037D4(a1, v40);
  sub_24150C9D0((uint64_t)v31, (uint64_t)v35, (uint64_t (*)(void))sub_24150AF3C);
  *(_OWORD *)&v35[*(int *)(v33 + 44)] = xmmword_24164F120;
  sub_24150C758((uint64_t)v31, (uint64_t (*)(void))sub_24150AF3C);
  sub_24150CD98((uint64_t)v35, (uint64_t)v38, (uint64_t (*)(void))sub_24150AF14);
  *(void *)uint64_t v21 = sub_241630478();
  *((void *)v21 + 1) = 0;
  v21[16] = 0;
  sub_24150D188();
  sub_2415049A8(a1, (uint64_t)&v21[*(int *)(v41 + 44)]);
  *uint64_t v24 = sub_2416313E8();
  v24[1] = v42;
  CGFloat v96 = v24;
  sub_24150D220();
  uint64_t v44 = (_OWORD *)((char *)v24 + *(int *)(v43 + 44));
  uint64_t v45 = sub_241630488();
  sub_24150C0A4((uint64_t)v114);
  *(_OWORD *)&v116[119] = v114[7];
  *(_OWORD *)&v116[135] = v114[8];
  *(_OWORD *)&v116[151] = v114[9];
  *(_OWORD *)&v116[55] = v114[3];
  *(_OWORD *)&v116[71] = v114[4];
  *(_OWORD *)&v116[87] = v114[5];
  *(_OWORD *)&v116[103] = v114[6];
  *(_OWORD *)&v116[7] = v114[0];
  *(_OWORD *)&v116[23] = v114[1];
  char v117 = 1;
  v116[167] = v115;
  *(_OWORD *)&v116[39] = v114[2];
  uint64_t v46 = v97;
  sub_24150C9D0((uint64_t)v21, v97, (uint64_t (*)(void))sub_24150B7B8);
  uint64_t v47 = v98;
  sub_24150C9D0(v46, v98, (uint64_t (*)(void))sub_24150B7B8);
  *(_OWORD *)((char *)&v119[7] + 1) = *(_OWORD *)&v116[112];
  *(_OWORD *)((char *)&v119[8] + 1) = *(_OWORD *)&v116[128];
  *(_OWORD *)((char *)&v119[9] + 1) = *(_OWORD *)&v116[144];
  *(_OWORD *)((char *)&v119[3] + 1) = *(_OWORD *)&v116[48];
  *(_OWORD *)((char *)&v119[4] + 1) = *(_OWORD *)&v116[64];
  *(_OWORD *)((char *)&v119[5] + 1) = *(_OWORD *)&v116[80];
  *(_OWORD *)((char *)&v119[6] + 1) = *(_OWORD *)&v116[96];
  *(_OWORD *)((char *)v119 + 1) = *(_OWORD *)v116;
  long long v118 = (unint64_t)v45;
  LOBYTE(v119[0]) = 1;
  *(void *)((char *)&v119[10] + 1) = *(void *)&v116[160];
  *(_OWORD *)((char *)&v119[1] + 1) = *(_OWORD *)&v116[16];
  *(_OWORD *)((char *)&v119[2] + 1) = *(_OWORD *)&v116[32];
  long long v48 = v119[8];
  v44[8] = v119[7];
  v44[9] = v48;
  v44[10] = v119[9];
  *(_OWORD *)((char *)v44 + 169) = *(_OWORD *)((char *)&v119[9] + 9);
  long long v49 = v119[4];
  v44[4] = v119[3];
  v44[5] = v49;
  long long v50 = v119[6];
  v44[6] = v119[5];
  v44[7] = v50;
  long long v51 = v119[0];
  _OWORD *v44 = v118;
  v44[1] = v51;
  long long v52 = v119[2];
  long long v44[2] = v119[1];
  v44[3] = v52;
  sub_24150B57C(0);
  sub_24150C9D0(v47, (uint64_t)v44 + *(int *)(v53 + 48), (uint64_t (*)(void))sub_24150B7B8);
  sub_24150D2B8((uint64_t)&v118);
  sub_24150C758(v46, (uint64_t (*)(void))sub_24150B7B8);
  sub_24150C758(v47, (uint64_t (*)(void))sub_24150B7B8);
  long long v129 = *(_OWORD *)&v116[112];
  long long v130 = *(_OWORD *)&v116[128];
  long long v131 = *(_OWORD *)&v116[144];
  long long v125 = *(_OWORD *)&v116[48];
  long long v126 = *(_OWORD *)&v116[64];
  long long v127 = *(_OWORD *)&v116[80];
  long long v128 = *(_OWORD *)&v116[96];
  long long v122 = *(_OWORD *)v116;
  long long v123 = *(_OWORD *)&v116[16];
  v120[0] = v45;
  v120[1] = 0;
  char v121 = 1;
  uint64_t v132 = *(void *)&v116[160];
  long long v124 = *(_OWORD *)&v116[32];
  sub_24150D338((uint64_t)v120);
  sub_24150C758((uint64_t)v21, (uint64_t (*)(void))sub_24150B7B8);
  LOBYTE(v38) = sub_241630978();
  sub_24162FE78();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v62 = (uint64_t)v96;
  uint64_t v63 = v110;
  sub_24150C9D0((uint64_t)v96, v110, (uint64_t (*)(void))sub_24150B4C8);
  uint64_t v64 = v63 + *(int *)(v100 + 44);
  *(unsigned char *)uint64_t v64 = (_BYTE)v38;
  *(void *)(v64 + 8) = v55;
  *(void *)(v64 + 16) = v57;
  *(void *)(v64 + 24) = v59;
  *(void *)(v64 + 32) = v61;
  *(unsigned char *)(v64 + 40) = 0;
  sub_24150C758(v62, (uint64_t (*)(void))sub_24150B4C8);
  sub_24150CD98(v63, v113, (uint64_t (*)(void))sub_24150B4A0);
  uint64_t v65 = sub_2416305A8();
  uint64_t v66 = (uint64_t)v102;
  *uint64_t v102 = v65;
  *(void *)(v66 + 8) = 0x4039000000000000;
  *(unsigned char *)(v66 + 16) = 0;
  sub_24150D3B8();
  sub_241504F80(v99, v66 + *(int *)(v67 + 44));
  uint64_t v68 = v101;
  sub_24150C9D0(v66, v101, (uint64_t (*)(void))sub_24150BB38);
  *(_OWORD *)(v68 + *(int *)(v104 + 44)) = xmmword_24164F130;
  sub_24150C758(v66, (uint64_t (*)(void))sub_24150BB38);
  uint64_t v69 = sub_2416313E8();
  uint64_t v70 = v111;
  uint64_t *v111 = v69;
  v70[1] = v71;
  sub_24150D450();
  uint64_t v73 = (_OWORD *)((char *)v70 + *(int *)(v72 + 44));
  uint64_t v74 = sub_241630488();
  sub_24150C0A4((uint64_t)v133);
  *(_OWORD *)&v135[119] = v133[7];
  *(_OWORD *)&v135[135] = v133[8];
  *(_OWORD *)&v135[151] = v133[9];
  *(_OWORD *)&v135[55] = v133[3];
  *(_OWORD *)&v135[71] = v133[4];
  *(_OWORD *)&v135[87] = v133[5];
  *(_OWORD *)&v135[103] = v133[6];
  *(_OWORD *)&v135[7] = v133[0];
  *(_OWORD *)&v135[23] = v133[1];
  char v136 = 1;
  v135[167] = v134;
  *(_OWORD *)&v135[39] = v133[2];
  uint64_t v75 = v68;
  uint64_t v76 = v68;
  uint64_t v77 = v105;
  uint64_t v78 = (void (*)(uint64_t))v107;
  sub_24150D4E8(v75, v105, &qword_268D020A0, (void (*)(uint64_t))v107);
  uint64_t v79 = v106;
  sub_24150D4E8(v77, v106, &qword_268D020A0, v78);
  *(_OWORD *)((char *)&v138[7] + 1) = *(_OWORD *)&v135[112];
  *(_OWORD *)((char *)&v138[8] + 1) = *(_OWORD *)&v135[128];
  *(_OWORD *)((char *)&v138[9] + 1) = *(_OWORD *)&v135[144];
  *(_OWORD *)((char *)&v138[3] + 1) = *(_OWORD *)&v135[48];
  *(_OWORD *)((char *)&v138[4] + 1) = *(_OWORD *)&v135[64];
  *(_OWORD *)((char *)&v138[5] + 1) = *(_OWORD *)&v135[80];
  *(_OWORD *)((char *)&v138[6] + 1) = *(_OWORD *)&v135[96];
  *(_OWORD *)((char *)v138 + 1) = *(_OWORD *)v135;
  long long v137 = (unint64_t)v74;
  LOBYTE(v138[0]) = 1;
  *(void *)((char *)&v138[10] + 1) = *(void *)&v135[160];
  *(_OWORD *)((char *)&v138[1] + 1) = *(_OWORD *)&v135[16];
  *(_OWORD *)((char *)&v138[2] + 1) = *(_OWORD *)&v135[32];
  long long v80 = v138[8];
  v73[8] = v138[7];
  v73[9] = v80;
  v73[10] = v138[9];
  *(_OWORD *)((char *)v73 + 169) = *(_OWORD *)((char *)&v138[9] + 9);
  long long v81 = v138[4];
  v73[4] = v138[3];
  v73[5] = v81;
  long long v82 = v138[6];
  v73[6] = v138[5];
  v73[7] = v82;
  long long v83 = v138[0];
  *uint64_t v73 = v137;
  v73[1] = v83;
  long long v84 = v138[2];
  v73[2] = v138[1];
  v73[3] = v84;
  sub_24150BAA4();
  sub_24150D4E8(v79, (uint64_t)v73 + *(int *)(v85 + 48), &qword_268D020A0, v78);
  sub_24150D2B8((uint64_t)&v137);
  sub_24150D558(v77, &qword_268D020A0, v78);
  sub_24150D558(v79, &qword_268D020A0, v78);
  long long v148 = *(_OWORD *)&v135[112];
  long long v149 = *(_OWORD *)&v135[128];
  long long v150 = *(_OWORD *)&v135[144];
  long long v144 = *(_OWORD *)&v135[48];
  long long v145 = *(_OWORD *)&v135[64];
  long long v146 = *(_OWORD *)&v135[80];
  long long v147 = *(_OWORD *)&v135[96];
  long long v141 = *(_OWORD *)v135;
  long long v142 = *(_OWORD *)&v135[16];
  v139[0] = v74;
  v139[1] = 0;
  char v140 = 1;
  uint64_t v151 = *(void *)&v135[160];
  long long v143 = *(_OWORD *)&v135[32];
  sub_24150D338((uint64_t)v139);
  sub_24150D558(v76, &qword_268D020A0, v78);
  int v86 = v111;
  uint64_t v87 = v108;
  sub_24150CD98((uint64_t)v111, v108, (uint64_t (*)(void))sub_24150B9F0);
  uint64_t v88 = (uint64_t)v103;
  sub_24150C9D0(v112, (uint64_t)v103, (uint64_t (*)(void))sub_24150AF14);
  uint64_t v89 = v113;
  uint64_t v90 = v110;
  sub_24150C9D0(v113, v110, (uint64_t (*)(void))sub_24150B4A0);
  sub_24150C9D0(v87, (uint64_t)v86, (uint64_t (*)(void))sub_24150B9F0);
  uint64_t v91 = v109;
  sub_24150C9D0(v88, v109, (uint64_t (*)(void))sub_24150AF14);
  sub_24150AECC(0);
  uint64_t v93 = v92;
  sub_24150C9D0(v90, v91 + *(int *)(v92 + 48), (uint64_t (*)(void))sub_24150B4A0);
  sub_24150C9D0((uint64_t)v86, v91 + *(int *)(v93 + 64), (uint64_t (*)(void))sub_24150B9F0);
  sub_24150C758(v87, (uint64_t (*)(void))sub_24150B9F0);
  sub_24150C758(v89, (uint64_t (*)(void))sub_24150B4A0);
  sub_24150C758(v112, (uint64_t (*)(void))sub_24150AF14);
  sub_24150C758((uint64_t)v86, (uint64_t (*)(void))sub_24150B9F0);
  sub_24150C758(v90, (uint64_t (*)(void))sub_24150B4A0);
  return sub_24150C758(v88, (uint64_t (*)(void))sub_24150AF14);
}

uint64_t sub_2415037D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v92 = a2;
  sub_24150B258();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v89 = (void *)((char *)v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v91 = sub_24150B258;
  sub_24150BC80(0, &qword_268D01F90, (void (*)(uint64_t))sub_24150B258);
  uint64_t v90 = v5 - 8;
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v99 = (uint64_t)v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v100 = (uint64_t)v85 - v8;
  sub_24150B124();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150B0FC(0);
  uint64_t v88 = v12 - 8;
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v97 = (uint64_t)v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v101 = (uint64_t)v85 - v15;
  uint64_t v87 = sub_2416312C8();
  uint64_t v16 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v18 = (char *)v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = (void (*)(uint64_t))MEMORY[0x263F1B7B8];
  sub_24150BC80(0, &qword_268D01F60, MEMORY[0x263F1B7B8]);
  uint64_t v20 = v19 - 8;
  MEMORY[0x270FA5388](v19);
  uint64_t v95 = (uint64_t)v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v94 = (uint64_t)v85 - v23;
  sub_241509DDC();
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150B0D4(0);
  uint64_t v28 = v27 - 8;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)v85 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v93 = (uint64_t)v85 - v32;
  *(void *)uint64_t v26 = sub_2416305A8();
  *((void *)v26 + 1) = 0;
  v26[16] = 0;
  sub_24150DCA0();
  uint64_t v34 = (uint64_t)&v26[*(int *)(v33 + 44)];
  uint64_t v86 = a1;
  sub_241506828(a1, v34);
  char v35 = sub_2416309A8();
  uint64_t v36 = a1 + *(int *)(type metadata accessor for PregnancyModeTimelineView(0) + 20);
  uint64_t v37 = *(void *)(v36 + 16);
  long long v102 = *(_OWORD *)v36;
  *(void *)&long long v103 = v37;
  sub_24150E940(0, &qword_268D02178, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x263F1B5D0]);
  v85[1] = v38;
  sub_241631118();
  sub_24162FE78();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  sub_24150C9D0((uint64_t)v26, (uint64_t)v30, (uint64_t (*)(void))sub_241509DDC);
  uint64_t v47 = &v30[*(int *)(v28 + 44)];
  CGFloat v96 = v30;
  *uint64_t v47 = v35;
  *((void *)v47 + 1) = v40;
  *((void *)v47 + 2) = v42;
  *((void *)v47 + 3) = v44;
  *((void *)v47 + 4) = v46;
  char v47[40] = 0;
  sub_24150C758((uint64_t)v26, (uint64_t (*)(void))sub_241509DDC);
  uint64_t v48 = v93;
  sub_24150CD98((uint64_t)v30, v93, (uint64_t (*)(void))sub_24150B0D4);
  sub_2416312B8();
  uint64_t v49 = v95;
  uint64_t v50 = v87;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v95, v18, v87);
  *(_OWORD *)(v49 + *(int *)(v20 + 44)) = xmmword_24164A4F0;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v50);
  uint64_t v51 = v94;
  sub_24150D764(v49, v94, &qword_268D01F60, v98);
  *(void *)uint64_t v11 = sub_2416305A8();
  *((void *)v11 + 1) = 0;
  unsigned char v11[16] = 0;
  sub_24150DD38();
  uint64_t v53 = v86;
  sub_24150592C((uint64_t)&v11[*(int *)(v52 + 44)]);
  LOBYTE(v18) = sub_241630988();
  uint64_t v54 = *(void *)(v36 + 16);
  long long v102 = *(_OWORD *)v36;
  *(void *)&long long v103 = v54;
  sub_241631118();
  sub_24162FE78();
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v63 = v97;
  sub_24150C9D0((uint64_t)v11, v97, (uint64_t (*)(void))sub_24150B124);
  uint64_t v64 = v63 + *(int *)(v88 + 44);
  *(unsigned char *)uint64_t v64 = (_BYTE)v18;
  *(void *)(v64 + 8) = v56;
  *(void *)(v64 + 16) = v58;
  *(void *)(v64 + 24) = v60;
  *(void *)(v64 + 32) = v62;
  *(unsigned char *)(v64 + 40) = 0;
  sub_24150C758((uint64_t)v11, (uint64_t (*)(void))sub_24150B124);
  sub_24150CD98(v63, v101, (uint64_t (*)(void))sub_24150B0FC);
  uint64_t v65 = sub_241630598();
  uint64_t v66 = (uint64_t)v89;
  *uint64_t v89 = v65;
  *(void *)(v66 + 8) = 0;
  *(unsigned char *)(v66 + 16) = 1;
  sub_24150E148();
  sub_24150418C(v53, v66 + *(int *)(v67 + 44));
  uint64_t v68 = *(void *)(v36 + 16);
  long long v102 = *(_OWORD *)v36;
  *(void *)&long long v103 = v68;
  sub_241631118();
  sub_2416313F8();
  sub_24162FFB8();
  uint64_t v69 = v99;
  sub_24150C9D0(v66, v99, (uint64_t (*)(void))sub_24150B258);
  uint64_t v70 = (_OWORD *)(v69 + *(int *)(v90 + 44));
  long long v71 = v103;
  *uint64_t v70 = v102;
  v70[1] = v71;
  v70[2] = v104;
  sub_24150C758(v66, (uint64_t (*)(void))sub_24150B258);
  uint64_t v72 = v100;
  uint64_t v73 = (void (*)(uint64_t))v91;
  sub_24150D764(v69, v100, &qword_268D01F90, (void (*)(uint64_t))v91);
  uint64_t v74 = (uint64_t)v96;
  sub_24150C9D0(v48, (uint64_t)v96, (uint64_t (*)(void))sub_24150B0D4);
  uint64_t v75 = v95;
  uint64_t v76 = v98;
  sub_24150D4E8(v51, v95, &qword_268D01F60, v98);
  uint64_t v77 = v97;
  sub_24150C9D0(v101, v97, (uint64_t (*)(void))sub_24150B0FC);
  uint64_t v78 = v72;
  uint64_t v79 = v99;
  sub_24150D4E8(v78, v99, &qword_268D01F90, v73);
  uint64_t v80 = v92;
  sub_24150C9D0(v74, v92, (uint64_t (*)(void))sub_24150B0D4);
  sub_24150AFF0();
  long long v82 = v81;
  sub_24150D4E8(v75, v80 + v81[12], &qword_268D01F60, v76);
  sub_24150C9D0(v77, v80 + v82[16], (uint64_t (*)(void))sub_24150B0FC);
  uint64_t v83 = v80 + v82[20];
  *(void *)uint64_t v83 = 0x4049000000000000;
  *(unsigned char *)(v83 + 8) = 0;
  sub_24150D4E8(v79, v80 + v82[24], &qword_268D01F90, v73);
  sub_24150D558(v100, &qword_268D01F90, v73);
  sub_24150C758(v101, (uint64_t (*)(void))sub_24150B0FC);
  sub_24150D558(v94, &qword_268D01F60, v76);
  sub_24150C758(v93, (uint64_t (*)(void))sub_24150B0D4);
  sub_24150D558(v79, &qword_268D01F90, v73);
  sub_24150C758(v77, (uint64_t (*)(void))sub_24150B0FC);
  sub_24150D558(v75, &qword_268D01F60, v76);
  return sub_24150C758((uint64_t)v96, (uint64_t (*)(void))sub_24150B0D4);
}

uint64_t sub_24150418C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24150A584();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  sub_24150B340();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v20 - v14;
  *(void *)uint64_t v15 = sub_241630498();
  *((void *)v15 + 1) = 0x4014000000000000;
  unsigned char v15[16] = 0;
  sub_24150E1E0();
  sub_2415043CC(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  *uint64_t v9 = sub_241630918();
  sub_24150D874(0, &qword_268D021B8, &qword_268D01E40, (uint64_t (*)(uint64_t))sub_24150A638);
  sub_241508144((uint64_t)&v9[*(int *)(v17 + 44)]);
  sub_24150C9D0((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))sub_24150B340);
  sub_24150C9D0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))sub_24150A584);
  sub_24150C9D0((uint64_t)v12, a2, (uint64_t (*)(void))sub_24150B340);
  sub_24150B30C(0);
  sub_24150C9D0((uint64_t)v6, a2 + *(int *)(v18 + 48), (uint64_t (*)(void))sub_24150A584);
  sub_24150C758((uint64_t)v9, (uint64_t (*)(void))sub_24150A584);
  sub_24150C758((uint64_t)v15, (uint64_t (*)(void))sub_24150B340);
  sub_24150C758((uint64_t)v6, (uint64_t (*)(void))sub_24150A584);
  return sub_24150C758((uint64_t)v12, (uint64_t (*)(void))sub_24150B340);
}

uint64_t sub_2415043CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v59 = a2;
  uint64_t v58 = sub_241630A98();
  uint64_t v2 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162ED68();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PregnancyModeTimelineGauge();
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v56 = type metadata accessor for PregnancyModeTimelineGauge;
  sub_24150BC80(0, &qword_268D01E30, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineGauge);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v21 = MEMORY[0x270FA5388](v20);
  uint64_t v60 = (uint64_t)&v55 - v22;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, v57, v5, v21);
  *uint64_t v12 = swift_getKeyPath();
  sub_24150E940(0, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))((char *)v12 + *(int *)(v10 + 28), v8, v5);
  sub_24150CD98((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PregnancyModeTimelineGauge);
  LOBYTE(v8) = sub_241630978();
  sub_24162FE78();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_24150C9D0((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for PregnancyModeTimelineGauge);
  uint64_t v31 = &v19[*(int *)(v17 + 44)];
  char *v31 = (char)v8;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_24150C758((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PregnancyModeTimelineGauge);
  uint64_t v32 = v60;
  uint64_t v33 = (void (*)(uint64_t))v56;
  sub_24150D764((uint64_t)v19, v60, &qword_268D01E30, (void (*)(uint64_t))v56);
  uint64_t v57 = sub_241631058();
  sub_241630AD8();
  uint64_t v34 = v58;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F1A680], v58);
  sub_241630AB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v34);
  sub_241630A48();
  uint64_t v58 = sub_241630A88();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
  uint64_t v36 = sub_241632958();
  uint64_t v37 = MEMORY[0x24561E4E0](v36);
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = sub_241630F68();
  uint64_t v40 = swift_getKeyPath();
  LOBYTE(v2) = sub_241630968();
  sub_24162FE78();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v55 = v19;
  sub_24150D4E8(v32, (uint64_t)v19, &qword_268D01E30, v33);
  uint64_t v49 = (uint64_t)v19;
  uint64_t v50 = v59;
  sub_24150D4E8(v49, v59, &qword_268D01E30, v33);
  sub_24150B3F4();
  uint64_t v52 = v50 + *(int *)(v51 + 48);
  uint64_t v53 = v58;
  *(void *)uint64_t v52 = v57;
  *(void *)(v52 + 8) = KeyPath;
  *(void *)(v52 + 16) = v53;
  *(void *)(v52 + 24) = v38;
  *(void *)(v52 + 32) = v37;
  *(void *)(v52 + 40) = v40;
  *(void *)(v52 + 48) = v39;
  *(unsigned char *)(v52 + 56) = v2;
  *(void *)(v52 + 64) = v42;
  *(void *)(v52 + 72) = v44;
  *(void *)(v52 + 80) = v46;
  *(void *)(v52 + 88) = v48;
  *(unsigned char *)(v52 + 96) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24150D558(v60, &qword_268D01E30, v33);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_24150D558((uint64_t)v55, &qword_268D01E30, v33);
}

uint64_t sub_2415049A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24150A43C();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150BC80(0, &qword_268D02070, (void (*)(uint64_t))sub_24150A43C);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v29 - v12;
  sub_24150B908();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v29 - v18;
  *(void *)uint64_t v19 = sub_2416305A8();
  *((void *)v19 + 1) = 0x4024000000000000;
  unsigned char v19[16] = 0;
  sub_24150E0B0();
  sub_241504D64(a1, (uint64_t)&v19[*(int *)(v20 + 44)]);
  *(void *)uint64_t v6 = sub_241630598();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  sub_24150D7D4();
  sub_241507CA8(a1, (uint64_t)&v6[*(int *)(v21 + 44)]);
  uint64_t v22 = a1 + *(int *)(type metadata accessor for PregnancyModeTimelineView(0) + 20);
  uint64_t v23 = *(void *)(v22 + 16);
  long long v30 = *(_OWORD *)v22;
  *(void *)&long long v31 = v23;
  sub_24150E940(0, &qword_268D02178, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x263F1B5D0]);
  sub_241631118();
  sub_2416313F8();
  sub_24162FFB8();
  sub_24150C9D0((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))sub_24150A43C);
  uint64_t v24 = &v10[*(int *)(v8 + 44)];
  long long v25 = v31;
  *(_OWORD *)uint64_t v24 = v30;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v32;
  sub_24150C758((uint64_t)v6, (uint64_t (*)(void))sub_24150A43C);
  sub_24150D764((uint64_t)v10, (uint64_t)v13, &qword_268D02070, (void (*)(uint64_t))sub_24150A43C);
  sub_24150C9D0((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))sub_24150B908);
  sub_24150D4E8((uint64_t)v13, (uint64_t)v10, &qword_268D02070, (void (*)(uint64_t))sub_24150A43C);
  sub_24150C9D0((uint64_t)v16, a2, (uint64_t (*)(void))sub_24150B908);
  sub_24150B86C();
  uint64_t v27 = a2 + *(int *)(v26 + 48);
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 1;
  sub_24150D4E8((uint64_t)v10, a2 + *(int *)(v26 + 64), &qword_268D02070, (void (*)(uint64_t))sub_24150A43C);
  sub_24150D558((uint64_t)v13, &qword_268D02070, (void (*)(uint64_t))sub_24150A43C);
  sub_24150C758((uint64_t)v19, (uint64_t (*)(void))sub_24150B908);
  sub_24150D558((uint64_t)v10, &qword_268D02070, (void (*)(uint64_t))sub_24150A43C);
  return sub_24150C758((uint64_t)v16, (uint64_t (*)(void))sub_24150B908);
}

uint64_t sub_241504D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24150B124();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  sub_241509DDC();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v20 - v14;
  *(void *)uint64_t v15 = sub_2416305A8();
  *((void *)v15 + 1) = 0;
  unsigned char v15[16] = 0;
  sub_24150DCA0();
  sub_241506828(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  *(void *)uint64_t v9 = sub_2416305A8();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  sub_24150DD38();
  sub_24150592C((uint64_t)&v9[*(int *)(v17 + 44)]);
  sub_24150C9D0((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))sub_241509DDC);
  sub_24150C9D0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))sub_24150B124);
  sub_24150C9D0((uint64_t)v12, a2, (uint64_t (*)(void))sub_241509DDC);
  sub_24150B9BC(0);
  sub_24150C9D0((uint64_t)v6, a2 + *(int *)(v18 + 48), (uint64_t (*)(void))sub_24150B124);
  sub_24150C758((uint64_t)v9, (uint64_t (*)(void))sub_24150B124);
  sub_24150C758((uint64_t)v15, (uint64_t (*)(void))sub_241509DDC);
  sub_24150C758((uint64_t)v6, (uint64_t (*)(void))sub_24150B124);
  return sub_24150C758((uint64_t)v12, (uint64_t (*)(void))sub_241509DDC);
}

uint64_t sub_241504F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  sub_24150A43C();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v24 - v7;
  sub_24150BCE4();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150BC80(0, &qword_268D020C0, (void (*)(uint64_t))sub_24150BCE4);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v24 - v17;
  *(void *)uint64_t v11 = sub_241630498();
  *((void *)v11 + 1) = 0;
  unsigned char v11[16] = 0;
  sub_24150D6CC();
  sub_241505284(a1, (uint64_t)&v11[*(int *)(v19 + 44)]);
  sub_24150C9D0((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))sub_24150BCE4);
  *(_OWORD *)&v15[*(int *)(v13 + 44)] = xmmword_24164F140;
  sub_24150C758((uint64_t)v11, (uint64_t (*)(void))sub_24150BCE4);
  sub_24150D764((uint64_t)v15, (uint64_t)v18, &qword_268D020C0, (void (*)(uint64_t))sub_24150BCE4);
  *(void *)uint64_t v8 = sub_241630598();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  sub_24150D7D4();
  sub_241507CA8(a1, (uint64_t)&v8[*(int *)(v20 + 44)]);
  sub_24150D4E8((uint64_t)v18, (uint64_t)v15, &qword_268D020C0, (void (*)(uint64_t))sub_24150BCE4);
  sub_24150C9D0((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))sub_24150A43C);
  uint64_t v21 = v25;
  sub_24150D4E8((uint64_t)v15, v25, &qword_268D020C0, (void (*)(uint64_t))sub_24150BCE4);
  sub_24150BBEC();
  sub_24150C9D0((uint64_t)v5, v21 + *(int *)(v22 + 48), (uint64_t (*)(void))sub_24150A43C);
  sub_24150C758((uint64_t)v8, (uint64_t (*)(void))sub_24150A43C);
  sub_24150D558((uint64_t)v18, &qword_268D020C0, (void (*)(uint64_t))sub_24150BCE4);
  sub_24150C758((uint64_t)v5, (uint64_t (*)(void))sub_24150A43C);
  return sub_24150D558((uint64_t)v15, &qword_268D020C0, (void (*)(uint64_t))sub_24150BCE4);
}

uint64_t sub_241505284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  sub_24150B124();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150B0FC(0);
  uint64_t v77 = v6 - 8;
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v76 = (uint64_t)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v78 = (uint64_t)v72 - v9;
  uint64_t v75 = sub_2416312C8();
  uint64_t v10 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v12 = (char *)v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150BE7C(0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v73 = (char *)v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v74 = (uint64_t)v72 - v17;
  sub_241509DDC();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150B0D4(0);
  uint64_t v22 = v21 - 8;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v80 = (uint64_t)v72 - v26;
  *(void *)uint64_t v20 = sub_2416305A8();
  *((void *)v20 + 1) = 0;
  unsigned char v20[16] = 0;
  sub_24150DCA0();
  uint64_t v28 = (uint64_t)&v20[*(int *)(v27 + 44)];
  v72[1] = a1;
  sub_241506828(a1, v28);
  char v29 = sub_2416309A8();
  uint64_t v30 = a1 + *(int *)(type metadata accessor for PregnancyModeTimelineView(0) + 20);
  uint64_t v31 = *(void *)(v30 + 16);
  long long v81 = *(_OWORD *)v30;
  uint64_t v82 = v31;
  sub_24150E940(0, &qword_268D02178, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x263F1B5D0]);
  v72[0] = v32;
  sub_241631118();
  sub_24162FE78();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_24150C9D0((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(void))sub_241509DDC);
  uint64_t v41 = &v24[*(int *)(v22 + 44)];
  *uint64_t v41 = v29;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  v41[40] = 0;
  sub_24150C758((uint64_t)v20, (uint64_t (*)(void))sub_241509DDC);
  uint64_t v42 = v80;
  sub_24150CD98((uint64_t)v24, v80, (uint64_t (*)(void))sub_24150B0D4);
  sub_2416312B8();
  LOBYTE(v20) = sub_2416309B8();
  sub_24162FE78();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = (uint64_t)v73;
  uint64_t v52 = v75;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v73, v12, v75);
  uint64_t v53 = v51 + *(int *)(v14 + 44);
  *(unsigned char *)uint64_t v53 = (_BYTE)v20;
  *(void *)(v53 + 8) = v44;
  *(void *)(v53 + 16) = v46;
  *(void *)(v53 + 24) = v48;
  *(void *)(v53 + 32) = v50;
  *(unsigned char *)(v53 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v52);
  uint64_t v54 = v74;
  sub_24150CD98(v51, v74, (uint64_t (*)(void))sub_24150BE7C);
  *(void *)uint64_t v5 = sub_2416305A8();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  sub_24150DD38();
  sub_24150592C((uint64_t)&v5[*(int *)(v55 + 44)]);
  LOBYTE(v20) = sub_241630988();
  uint64_t v56 = *(void *)(v30 + 16);
  long long v81 = *(_OWORD *)v30;
  uint64_t v82 = v56;
  sub_241631118();
  sub_24162FE78();
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v65 = v76;
  sub_24150C9D0((uint64_t)v5, v76, (uint64_t (*)(void))sub_24150B124);
  uint64_t v66 = v65 + *(int *)(v77 + 44);
  *(unsigned char *)uint64_t v66 = (_BYTE)v20;
  *(void *)(v66 + 8) = v58;
  *(void *)(v66 + 16) = v60;
  *(void *)(v66 + 24) = v62;
  *(void *)(v66 + 32) = v64;
  *(unsigned char *)(v66 + 40) = 0;
  sub_24150C758((uint64_t)v5, (uint64_t (*)(void))sub_24150B124);
  uint64_t v67 = v78;
  sub_24150CD98(v65, v78, (uint64_t (*)(void))sub_24150B0FC);
  sub_24150C9D0(v42, (uint64_t)v24, (uint64_t (*)(void))sub_24150B0D4);
  sub_24150C9D0(v54, v51, (uint64_t (*)(void))sub_24150BE7C);
  sub_24150C9D0(v67, v65, (uint64_t (*)(void))sub_24150B0FC);
  uint64_t v68 = v79;
  sub_24150C9D0((uint64_t)v24, v79, (uint64_t (*)(void))sub_24150B0D4);
  sub_24150BD98(0);
  uint64_t v70 = v69;
  sub_24150C9D0(v51, v68 + *(int *)(v69 + 48), (uint64_t (*)(void))sub_24150BE7C);
  sub_24150C9D0(v65, v68 + *(int *)(v70 + 64), (uint64_t (*)(void))sub_24150B0FC);
  sub_24150C758(v67, (uint64_t (*)(void))sub_24150B0FC);
  sub_24150C758(v54, (uint64_t (*)(void))sub_24150BE7C);
  sub_24150C758(v80, (uint64_t (*)(void))sub_24150B0D4);
  sub_24150C758(v65, (uint64_t (*)(void))sub_24150B0FC);
  sub_24150C758(v51, (uint64_t (*)(void))sub_24150BE7C);
  return sub_24150C758((uint64_t)v24, (uint64_t (*)(void))sub_24150B0D4);
}

uint64_t sub_24150592C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v82 = a1;
  uint64_t v1 = sub_24162B7E8();
  MEMORY[0x270FA5388](v1 - 8);
  long long v81 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_241631CA8();
  uint64_t v77 = *(void *)(v3 - 8);
  uint64_t v78 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v76 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v73 = (char *)&v66 - v6;
  uint64_t v7 = sub_24162B538();
  uint64_t v74 = *(void *)(v7 - 8);
  uint64_t v75 = v7;
  MEMORY[0x270FA5388](v7);
  long long v71 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_24162B5A8();
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24162B5B8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v66 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v66 - v19;
  uint64_t v70 = sub_24162B718();
  uint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode;
  sub_24150A35C(0, &qword_268D01E08, (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v66 - v24;
  sub_24150A2E0();
  uint64_t v83 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v80 = (uint64_t)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v79 = (uint64_t)&v66 - v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v66 - v31;
  MEMORY[0x270FA5388](v33);
  uint64_t v84 = (uint64_t)&v66 - v34;
  uint64_t v35 = sub_24162ED48();
  MEMORY[0x245618740](v35);
  sub_24162B578();
  sub_24162B518();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v10, v69);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v12 + 8);
  v36(v14, v11);
  uint64_t v37 = v71;
  sub_24162B528();
  sub_24162B4F8();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v37, v75);
  v36(v17, v11);
  sub_24150DC50((unint64_t *)&qword_268CFA550, MEMORY[0x263F07258]);
  sub_24162B6F8();
  uint64_t v38 = v20;
  uint64_t v39 = v77;
  v36(v38, v11);
  uint64_t v40 = v76;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v22, v70);
  uint64_t v85 = v87;
  uint64_t v86 = v88;
  sub_2411D662C();
  uint64_t v41 = sub_241630C28();
  uint64_t v43 = v42;
  LOBYTE(v36) = v44 & 1;
  sub_241506210(0, v42, v45, (uint64_t)v25);
  sub_24120EFBC(v41, v43, (char)v36);
  uint64_t v46 = v78;
  swift_bridgeObjectRelease();
  uint64_t v47 = v72;
  sub_24150DAC4((uint64_t)v25, (uint64_t)v32, &qword_268D01E08, v72);
  *(_WORD *)&v32[*(int *)(v83 + 36)] = 257;
  uint64_t v48 = (uint64_t)v25;
  sub_24150DB30((uint64_t)v25, &qword_268D01E08, v47);
  sub_24150CD98((uint64_t)v32, v84, (uint64_t (*)(void))sub_24150A2E0);
  uint64_t v49 = v73;
  sub_241631C38();
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v40, v49, v46);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v50 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v51 = sub_241631D38();
  uint64_t v53 = v52;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v49, v46);
  uint64_t v87 = v51;
  uint64_t v88 = v53;
  uint64_t v54 = sub_241630C28();
  uint64_t v56 = v55;
  char v58 = v57 & 1;
  sub_241506210(1, v55, v59, v48);
  sub_24120EFBC(v54, v56, v58);
  swift_bridgeObjectRelease();
  uint64_t v60 = v79;
  sub_24150DAC4(v48, v79, &qword_268D01E08, (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode);
  *(_WORD *)(v60 + *(int *)(v83 + 36)) = 257;
  sub_24150DB30(v48, &qword_268D01E08, (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode);
  sub_24150CD98(v60, (uint64_t)v32, (uint64_t (*)(void))sub_24150A2E0);
  uint64_t v61 = v84;
  sub_24150C9D0(v84, v60, (uint64_t (*)(void))sub_24150A2E0);
  uint64_t v62 = v80;
  sub_24150C9D0((uint64_t)v32, v80, (uint64_t (*)(void))sub_24150A2E0);
  uint64_t v63 = v82;
  sub_24150C9D0(v60, v82, (uint64_t (*)(void))sub_24150A2E0);
  sub_24150B1D8(0);
  sub_24150C9D0(v62, v63 + *(int *)(v64 + 48), (uint64_t (*)(void))sub_24150A2E0);
  sub_24150C758((uint64_t)v32, (uint64_t (*)(void))sub_24150A2E0);
  sub_24150C758(v61, (uint64_t (*)(void))sub_24150A2E0);
  sub_24150C758(v62, (uint64_t (*)(void))sub_24150A2E0);
  return sub_24150C758(v60, (uint64_t (*)(void))sub_24150A2E0);
}

uint64_t sub_241506210@<X0>(char a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for AdaptableBlendMode(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v67 = (void *)((char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v68 = (uint64_t)v66 - v11;
  sub_24150E940(0, &qword_268CFD160, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v66 - v13;
  uint64_t v15 = sub_241630AF8();
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 1)
    {
      sub_2416309D8();
      sub_241630A48();
      sub_241630A88();
      swift_release();
      uint64_t v20 = sub_241630BE8();
      uint64_t v22 = v21;
      char v24 = v23;
      swift_release();
      char v25 = v24 & 1;
      id v26 = objc_msgSend(self, sel_secondaryLabelColor);
      uint64_t v69 = MEMORY[0x24561E4E0](v26);
      uint64_t v27 = sub_241630BB8();
      uint64_t v29 = v28;
      char v31 = v30;
      uint64_t v33 = v32;
      uint64_t v34 = v20;
      uint64_t v35 = v22;
      char v36 = v25;
    }
    else
    {
      sub_241630AD8();
      uint64_t v50 = sub_241630BE8();
      uint64_t v52 = v51;
      char v54 = v53;
      swift_release();
      char v55 = v54 & 1;
      id v56 = objc_msgSend(self, sel_secondaryLabelColor);
      uint64_t v69 = MEMORY[0x24561E4E0](v56);
      uint64_t v27 = sub_241630BB8();
      uint64_t v29 = v57;
      char v31 = v58;
      uint64_t v33 = v59;
      uint64_t v34 = v50;
      uint64_t v35 = v52;
      char v36 = v55;
    }
    sub_24120EFBC(v34, v35, v36);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v16 + 104))(v19, *MEMORY[0x263F1A6D8], v15, v17);
    uint64_t v37 = *MEMORY[0x263F1A610];
    uint64_t v38 = sub_241630A08();
    v66[1] = a2;
    v66[2] = a3;
    uint64_t v39 = v38;
    uint64_t v40 = *(void *)(v38 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 104))(v14, v37, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v14, 0, 1, v39);
    sub_241630A68();
    sub_241500A5C((uint64_t)v14, &qword_268CFD160, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    sub_241630A48();
    sub_241630A88();
    swift_release();
    uint64_t v41 = sub_241630BE8();
    uint64_t v43 = v42;
    LOBYTE(v39) = v44;
    swift_release();
    char v45 = v39 & 1;
    id v46 = objc_msgSend(self, sel_labelColor);
    uint64_t v69 = MEMORY[0x24561E4E0](v46);
    uint64_t v27 = sub_241630BB8();
    uint64_t v29 = v47;
    char v31 = v48;
    uint64_t v33 = v49;
    sub_24120EFBC(v41, v43, v45);
  }
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v61 = v67;
  *uint64_t v67 = KeyPath;
  sub_24150E940(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v62 = (uint64_t)v61;
  uint64_t v63 = v68;
  sub_24150CD98(v62, v68, type metadata accessor for AdaptableBlendMode);
  sub_24150A35C(0, &qword_268D01E08, (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode);
  sub_24150C9D0(v63, a4 + *(int *)(v64 + 36), type metadata accessor for AdaptableBlendMode);
  *(void *)a4 = v27;
  *(void *)(a4 + 8) = v29;
  *(unsigned char *)(a4 + 16) = v31 & 1;
  *(void *)(a4 + 24) = v33;
  return sub_24150C758(v63, type metadata accessor for AdaptableBlendMode);
}

uint64_t sub_241506828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode;
  uint64_t v38 = a2;
  sub_24150A35C(0, &qword_268D01E08, (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v36 - v4;
  sub_24150A2E0();
  uint64_t v36 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150EC70(0, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v36 - v13;
  sub_241509F44();
  MEMORY[0x270FA5388](v15 - 8);
  __n128 v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v36 - v19;
  *(void *)uint64_t v20 = sub_241630498();
  *((void *)v20 + 1) = 0;
  unsigned char v20[16] = 1;
  sub_24150DDD0();
  sub_241506CD4(a1, (uint64_t)&v20[*(int *)(v21 + 44)]);
  *(void *)&long long v39 = sub_241507958();
  *((void *)&v39 + 1) = v22;
  sub_2411D662C();
  uint64_t v23 = sub_241630C28();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  sub_241506210(1, v24, v28, (uint64_t)v5);
  uint64_t v29 = v25;
  uint64_t v30 = v36;
  sub_24120EFBC(v23, v29, v27);
  swift_bridgeObjectRelease();
  char v31 = v37;
  sub_24150DAC4((uint64_t)v5, (uint64_t)v8, &qword_268D01E08, v37);
  *(_WORD *)&v8[*(int *)(v30 + 36)] = 256;
  sub_24150DB30((uint64_t)v5, &qword_268D01E08, v31);
  if (qword_26B00F370 != -1) {
    swift_once();
  }
  long long v39 = xmmword_26B017FC8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  sub_24150EDD8(&qword_268D021E0, (void (*)(uint64_t))sub_24150A2E0, (void (*)(void))sub_24150DB8C);
  sub_241630D28();
  swift_bridgeObjectRelease();
  sub_24150C758((uint64_t)v8, (uint64_t (*)(void))sub_24150A2E0);
  sub_24150DE68((uint64_t)v11, (uint64_t)v14);
  sub_24150C9D0((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))sub_241509F44);
  sub_24150C8C8((uint64_t)v14, (uint64_t)v11, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0);
  uint64_t v32 = v38;
  sub_24150C9D0((uint64_t)v17, v38, (uint64_t (*)(void))sub_241509F44);
  sub_241509E90();
  sub_24150C8C8((uint64_t)v11, v32 + *(int *)(v33 + 48), &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0);
  uint64_t v34 = (uint64_t (*)(uint64_t))MEMORY[0x263F1A470];
  sub_24150C960((uint64_t)v14, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, MEMORY[0x263F1A470]);
  sub_24150C758((uint64_t)v20, (uint64_t (*)(void))sub_241509F44);
  sub_24150C960((uint64_t)v11, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, v34);
  return sub_24150C758((uint64_t)v17, (uint64_t (*)(void))sub_241509F44);
}

uint64_t sub_241506CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v106 = a2;
  uint64_t v89 = sub_241630A98();
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v87 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_2416307A8();
  uint64_t v102 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v86 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150B1F8(0, (unint64_t *)&qword_268CFDDA0, sub_241371C8C);
  uint64_t v99 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v103 = (uint64_t)&v86 - v6;
  sub_241371C8C(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v90 = (uint64_t)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v86 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v101 = (uint64_t)&v86 - v13;
  uint64_t v14 = sub_24162BA68();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  __n128 v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_24162B718();
  uint64_t v18 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v20 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v86 - v22;
  MEMORY[0x270FA5388](v24);
  char v26 = (char *)&v86 - v25;
  uint64_t v27 = sub_24162B218();
  MEMORY[0x270FA5388](v27 - 8);
  CGFloat v96 = (char *)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150A35C(0, (unint64_t *)&qword_268CFBC88, MEMORY[0x263F1A470]);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v105 = (uint64_t)&v86 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v98 = (char *)&v86 - v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v108 = (uint64_t)&v86 - v34;
  uint64_t v97 = v26;
  sub_24162ED58();
  uint64_t v35 = (void *)sub_24162ED38();
  id v36 = objc_msgSend(v35, sel__timeZoneName);

  uint64_t v100 = v11;
  if (v36)
  {
    uint64_t v93 = _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
    uint64_t v94 = v37;
  }
  else
  {
    sub_24162BA58();
    uint64_t v93 = sub_24162BA38();
    uint64_t v94 = v38;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  uint64_t v91 = sub_2411B9D00(0, (unint64_t *)&qword_268CFA790);
  sub_24162ED08();
  sub_2414AFDC0((uint64_t)v20);
  uint64_t v92 = *(void (**)(char *, uint64_t))(v18 + 8);
  v92(v23, v107);
  uint64_t v39 = *MEMORY[0x263F835F0];
  uint64_t v40 = *MEMORY[0x263F81840];
  id v41 = (id)*MEMORY[0x263F81778];
  uint64_t v95 = a1;
  id v42 = v41;
  id v43 = sub_2415D17B8(v39, 0, (uint64_t)v41, v40, 0);

  char v44 = self;
  id v45 = objc_msgSend(v44, sel_secondaryLabelColor);
  id v46 = sub_2415D17B8(*MEMORY[0x263F83610], 0, *MEMORY[0x263F81788], v40, 0);
  id v47 = objc_msgSend(v44, sel_labelColor);
  char v48 = v97;
  sub_241632738();
  swift_bridgeObjectRelease();

  uint64_t v49 = v107;
  uint64_t v50 = v92;
  v92(v20, v107);
  v50(v48, v49);
  uint64_t v51 = sub_241630C18();
  uint64_t v53 = v52;
  uint64_t v110 = v51;
  uint64_t v111 = v52;
  char v55 = v54 & 1;
  char v112 = v54 & 1;
  uint64_t v113 = v56;
  if (qword_26B00F370 != -1) {
    swift_once();
  }
  long long v109 = xmmword_26B017FC8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  uint64_t v57 = (uint64_t)v98;
  sub_241630D28();
  swift_bridgeObjectRelease();
  sub_24120EFBC(v51, v53, v55);
  swift_bridgeObjectRelease();
  sub_24150DF10(v57, v108);
  type metadata accessor for PregnancyModeTimelineView(0);
  uint64_t v58 = v101;
  sub_241428B78(v101);
  uint64_t v59 = v102;
  uint64_t v60 = (uint64_t)v100;
  uint64_t v61 = v104;
  (*(void (**)(char *, void, uint64_t))(v102 + 104))(v100, *MEMORY[0x263F19F00], v104);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v60, 0, 1, v61);
  uint64_t v62 = v103;
  uint64_t v63 = v103 + *(int *)(v99 + 48);
  sub_24150C9D0(v58, v103, (uint64_t (*)(void))sub_241371C8C);
  sub_24150C9D0(v60, v63, (uint64_t (*)(void))sub_241371C8C);
  uint64_t v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  if (v64(v62, 1, v61) != 1)
  {
    uint64_t v65 = v90;
    sub_24150C9D0(v62, v90, (uint64_t (*)(void))sub_241371C8C);
    if (v64(v63, 1, v61) != 1)
    {
      uint64_t v66 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v86, v63, v61);
      sub_24150DC50(&qword_268CFDDD0, MEMORY[0x263F19F18]);
      char v67 = sub_241631C28();
      uint64_t v68 = *(void (**)(char *, uint64_t))(v59 + 8);
      v68(v66, v61);
      sub_24150C758(v60, (uint64_t (*)(void))sub_241371C8C);
      sub_24150C758(v58, (uint64_t (*)(void))sub_241371C8C);
      v68((char *)v65, v61);
      sub_24150C758(v62, (uint64_t (*)(void))sub_241371C8C);
      if (v67) {
        goto LABEL_13;
      }
LABEL_14:
      uint64_t v75 = 0;
      uint64_t v107 = 0;
      uint64_t KeyPath = 0;
      uint64_t v103 = 0;
      uint64_t v104 = 0;
      uint64_t v74 = 0;
      uint64_t v101 = 0;
      uint64_t v102 = 0;
      goto LABEL_15;
    }
    sub_24150C758(v60, (uint64_t (*)(void))sub_241371C8C);
    sub_24150C758(v58, (uint64_t (*)(void))sub_241371C8C);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v65, v61);
LABEL_11:
    sub_24150C7B8(v62);
    goto LABEL_14;
  }
  sub_24150C758(v60, (uint64_t (*)(void))sub_241371C8C);
  sub_24150C758(v58, (uint64_t (*)(void))sub_241371C8C);
  if (v64(v63, 1, v61) != 1) {
    goto LABEL_11;
  }
  sub_24150C758(v62, (uint64_t (*)(void))sub_241371C8C);
LABEL_13:
  uint64_t v107 = sub_241631058();
  sub_241630AD8();
  uint64_t v69 = v88;
  uint64_t v70 = v87;
  uint64_t v71 = v89;
  (*(void (**)(char *, void, uint64_t))(v88 + 104))(v87, *MEMORY[0x263F1A680], v89);
  sub_241630AB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
  sub_241630A48();
  uint64_t v104 = sub_241630A88();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
  uint64_t v73 = sub_241632958();
  uint64_t v103 = MEMORY[0x24561E4E0](v73);
  uint64_t v74 = swift_getKeyPath();
  uint64_t v101 = sub_241630F68();
  uint64_t v102 = swift_getKeyPath();
  uint64_t v75 = 0x403E000000000000;
LABEL_15:
  uint64_t v76 = (void (*)(uint64_t))MEMORY[0x263F1A470];
  uint64_t v77 = v105;
  sub_24150DAC4(v108, v105, (unint64_t *)&qword_268CFBC88, MEMORY[0x263F1A470]);
  uint64_t v78 = v106;
  sub_24150DAC4(v77, v106, (unint64_t *)&qword_268CFBC88, v76);
  sub_241509FF8();
  uint64_t v80 = (uint64_t *)(v78 + *(int *)(v79 + 48));
  *uint64_t v80 = v75;
  v80[1] = 0;
  uint64_t v81 = v107;
  v80[2] = v107;
  v80[3] = KeyPath;
  uint64_t v82 = v103;
  v80[4] = v104;
  v80[5] = v74;
  uint64_t v83 = v101;
  uint64_t v84 = v102;
  v80[6] = v82;
  v80[7] = v84;
  v80[8] = v83;
  sub_24150DF90(v75, 0, v81);
  sub_24150DB30(v108, (unint64_t *)&qword_268CFBC88, v76);
  sub_24150E020(v75, 0, v81);
  return sub_24150DB30(v77, (unint64_t *)&qword_268CFBC88, v76);
}

uint64_t sub_241507958()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v15 - v6;
  v15[0] = sub_24162B718();
  uint64_t v8 = *(void *)(v15[0] - 8);
  MEMORY[0x270FA5388](v15[0]);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162ED08();
  sub_2411B9D00(0, (unint64_t *)&qword_268CFA790);
  uint64_t v11 = (void *)sub_24162ED38();
  sub_241632748();

  sub_241631C38();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v12 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v13 = sub_241631D38();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  (*(void (**)(char *, void))(v8 + 8))(v10, v15[0]);
  return v13;
}

uint64_t sub_241507CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v44 = a1;
  sub_24150A584();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v42 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v41 = (char *)&v41 - v5;
  uint64_t v6 = sub_24162ED68();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PregnancyModeTimelineGauge();
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v41 - v15;
  sub_24150BC80(0, &qword_268D01E30, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineGauge);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v41 - v23;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v44, v6, v22);
  uint64_t *v13 = swift_getKeyPath();
  sub_24150E940(0, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v13 + *(int *)(v11 + 28), v9, v6);
  sub_24150CD98((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PregnancyModeTimelineGauge);
  LOBYTE(v11) = sub_241630978();
  sub_24162FE78();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_24150C9D0((uint64_t)v16, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for PregnancyModeTimelineGauge);
  uint64_t v33 = &v20[*(int *)(v18 + 44)];
  *uint64_t v33 = v11;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_24150C758((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PregnancyModeTimelineGauge);
  sub_24150D764((uint64_t)v20, (uint64_t)v24, &qword_268D01E30, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineGauge);
  char v34 = sub_241630918();
  uint64_t v35 = (uint64_t)v41;
  *id v41 = v34;
  sub_24150D874(0, &qword_268D021B8, &qword_268D01E40, (uint64_t (*)(uint64_t))sub_24150A638);
  sub_241508144(v35 + *(int *)(v36 + 44));
  sub_24150D4E8((uint64_t)v24, (uint64_t)v20, &qword_268D01E30, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineGauge);
  uint64_t v37 = v42;
  sub_24150C9D0(v35, v42, (uint64_t (*)(void))sub_24150A584);
  uint64_t v38 = v43;
  sub_24150D4E8((uint64_t)v20, v43, &qword_268D01E30, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineGauge);
  sub_24150A4F0();
  sub_24150C9D0(v37, v38 + *(int *)(v39 + 48), (uint64_t (*)(void))sub_24150A584);
  sub_24150C758(v35, (uint64_t (*)(void))sub_24150A584);
  sub_24150D558((uint64_t)v24, &qword_268D01E30, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineGauge);
  sub_24150C758(v37, (uint64_t (*)(void))sub_24150A584);
  return sub_24150D558((uint64_t)v20, &qword_268D01E30, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineGauge);
}

uint64_t sub_241508144@<X0>(uint64_t a1@<X8>)
{
  sub_24150A968();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v28 - v6;
  sub_24150A84C();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v28 - v12;
  sub_24150A6E8();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v28 - v18;
  *(void *)uint64_t v19 = sub_241630498();
  *((void *)v19 + 1) = 0;
  unsigned char v19[16] = 1;
  sub_24150D8FC();
  sub_241508464((uint64_t)&v19[*(int *)(v20 + 44)]);
  *(void *)uint64_t v13 = sub_241630498();
  *((void *)v13 + 1) = 0;
  unsigned char v13[16] = 1;
  sub_24150D994();
  uint64_t v22 = (uint64_t)&v13[*(int *)(v21 + 44)];
  *(void *)uint64_t v7 = sub_2416305A8();
  *((void *)v7 + 1) = 0;
  unsigned char v7[16] = 0;
  sub_24150DA2C();
  sub_241509A74((uint64_t)&v7[*(int *)(v23 + 44)]);
  sub_24150C9D0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))sub_24150A968);
  sub_24150C9D0((uint64_t)v4, v22, (uint64_t (*)(void))sub_24150A968);
  sub_24150A900();
  uint64_t v25 = v22 + *(int *)(v24 + 48);
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  sub_24150C758((uint64_t)v7, (uint64_t (*)(void))sub_24150A968);
  sub_24150C758((uint64_t)v4, (uint64_t (*)(void))sub_24150A968);
  sub_24150C9D0((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))sub_24150A6E8);
  sub_24150C9D0((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))sub_24150A84C);
  sub_24150C9D0((uint64_t)v16, a1, (uint64_t (*)(void))sub_24150A6E8);
  sub_24150A638(0);
  sub_24150C9D0((uint64_t)v10, a1 + *(int *)(v26 + 48), (uint64_t (*)(void))sub_24150A84C);
  sub_24150C758((uint64_t)v13, (uint64_t (*)(void))sub_24150A84C);
  sub_24150C758((uint64_t)v19, (uint64_t (*)(void))sub_24150A6E8);
  sub_24150C758((uint64_t)v10, (uint64_t (*)(void))sub_24150A84C);
  return sub_24150C758((uint64_t)v16, (uint64_t (*)(void))sub_24150A6E8);
}

uint64_t sub_241508464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x263F1A470];
  sub_24150EC70(0, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v18 - v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v18 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v18 - v13;
  sub_2415086F4(MEMORY[0x263F45220], 0xD00000000000001DLL, 0x800000024166F610, 0xD00000000000002CLL, 0x800000024166C600, (uint64_t)&v18 - v13);
  sub_2415086F4(MEMORY[0x263F45218], 0xD00000000000001BLL, 0x800000024166F5F0, 0xD00000000000002ALL, 0x800000024166C5D0, (uint64_t)v11);
  sub_24150C8C8((uint64_t)v14, (uint64_t)v8, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0);
  sub_24150C8C8((uint64_t)v11, (uint64_t)v5, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0);
  sub_24150C8C8((uint64_t)v8, a1, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0);
  sub_24150A79C();
  uint64_t v16 = a1 + *(int *)(v15 + 48);
  *(void *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 8) = 1;
  sub_24150C8C8((uint64_t)v5, a1 + *(int *)(v15 + 64), &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0);
  sub_24150C960((uint64_t)v11, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, v2);
  sub_24150C960((uint64_t)v14, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, v2);
  sub_24150C960((uint64_t)v5, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, v2);
  return sub_24150C960((uint64_t)v8, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, v2);
}

uint64_t sub_2415086F4@<X0>(uint64_t (*a1)(__n128)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v127 = a5;
  uint64_t v142 = a4;
  uint64_t v122 = a3;
  uint64_t v121 = a2;
  long long v137 = a1;
  uint64_t v143 = a6;
  sub_24150A35C(0, &qword_268D01E08, (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v140 = (uint64_t)&v113 - v7;
  sub_24150A2E0();
  uint64_t v141 = v8;
  MEMORY[0x270FA5388](v8);
  long long v126 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24162B7E8();
  MEMORY[0x270FA5388](v10 - 8);
  long long v118 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_241631CA8();
  uint64_t v119 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  long long v123 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v117 = (char *)&v113 - v14;
  uint64_t v15 = sub_2416307A8();
  uint64_t v138 = *(void *)(v15 - 8);
  uint64_t v139 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v114 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150B1F8(0, (unint64_t *)&qword_268CFDDA0, sub_241371C8C);
  uint64_t v147 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v148 = (uint64_t)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v115 = (uint64_t)&v113 - v20;
  sub_241371C8C(0);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v116 = (uint64_t)&v113 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v145 = (uint64_t)&v113 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v146 = (uint64_t)&v113 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v113 = (uint64_t)&v113 - v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v124 = (uint64_t)&v113 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v125 = (uint64_t)&v113 - v32;
  uint64_t v149 = type metadata accessor for PregnancyModeTimelineView(0);
  MEMORY[0x270FA5388](v149);
  uint64_t v144 = (uint64_t)&v113 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_241630128();
  uint64_t v135 = *(void *)(v34 - 8);
  uint64_t v136 = v34;
  MEMORY[0x270FA5388](v34);
  char v134 = (char *)&v113 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v133 = (uint64_t)&v113 - v37;
  uint64_t v132 = sub_24162B538();
  uint64_t v131 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v39 = (char *)&v113 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_24162B5A8();
  uint64_t v40 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v42 = (char *)&v113 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_24162B5B8();
  uint64_t v44 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  id v46 = (char *)&v113 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (char *)&v113 - v48;
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = (char *)&v113 - v51;
  uint64_t v130 = sub_24162B718();
  uint64_t v128 = *(void *)(v130 - 8);
  __n128 v53 = MEMORY[0x270FA5388](v130);
  char v55 = (char *)&v113 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v137(v53);
  MEMORY[0x245618740](v56);
  sub_24162B578();
  sub_24162B518();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v129);
  uint64_t v57 = *(void (**)(char *, uint64_t))(v44 + 8);
  v57(v46, v43);
  sub_24162B528();
  sub_24162B4F8();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v39, v132);
  v57(v49, v43);
  sub_24150DC50((unint64_t *)&qword_268CFA550, MEMORY[0x263F07258]);
  sub_24162B6F8();
  v57(v52, v43);
  uint64_t v58 = v150;
  (*(void (**)(char *, uint64_t))(v128 + 8))(v55, v130);
  uint64_t v132 = *((void *)&v151 + 1);
  long long v137 = (uint64_t (*)(__n128))v151;
  uint64_t v59 = v133;
  sub_241428880(v133);
  uint64_t v61 = v134;
  uint64_t v60 = v135;
  uint64_t v62 = v136;
  (*(void (**)(char *, void, uint64_t))(v135 + 104))(v134, *MEMORY[0x263F18CF0], v136);
  sub_24150DC50(&qword_268D021D8, MEMORY[0x263F18D80]);
  uint64_t v63 = v62;
  LOBYTE(v62) = sub_241631BB8();
  uint64_t v64 = *(void (**)(char *, uint64_t))(v60 + 8);
  v64(v61, v63);
  v64((char *)v59, v63);
  uint64_t v65 = v144;
  sub_24150C9D0(v58, v144, type metadata accessor for PregnancyModeTimelineView);
  uint64_t v66 = (unsigned int *)MEMORY[0x263F19F08];
  if ((v62 & 1) == 0)
  {
    uint64_t v71 = v125;
    sub_241428B78(v125);
    uint64_t v72 = *v66;
    uint64_t v68 = v138;
    uint64_t v67 = v139;
    uint64_t v73 = v124;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v138 + 104))(v124, v72, v139);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v73, 0, 1, v67);
    uint64_t v74 = v115;
    uint64_t v75 = v115 + *(int *)(v147 + 48);
    sub_24150C9D0(v71, v115, (uint64_t (*)(void))sub_241371C8C);
    sub_24150C9D0(v73, v75, (uint64_t (*)(void))sub_241371C8C);
    uint64_t v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
    if (v76(v74, 1, v67) == 1)
    {
      sub_24150C758(v124, (uint64_t (*)(void))sub_241371C8C);
      sub_24150C758(v125, (uint64_t (*)(void))sub_241371C8C);
      sub_24150C758(v65, type metadata accessor for PregnancyModeTimelineView);
      int v77 = v76(v75, 1, v67);
      uint64_t v70 = v132;
      if (v77 == 1)
      {
        sub_24150C758(v74, (uint64_t (*)(void))sub_241371C8C);
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v78 = v113;
      sub_24150C9D0(v74, v113, (uint64_t (*)(void))sub_241371C8C);
      if (v76(v75, 1, v67) != 1)
      {
        uint64_t v108 = v114;
        (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v114, v75, v67);
        sub_24150DC50(&qword_268CFDDD0, MEMORY[0x263F19F18]);
        LODWORD(v136) = sub_241631C28();
        long long v109 = *(void (**)(char *, uint64_t))(v68 + 8);
        v109(v108, v67);
        sub_24150C758(v124, (uint64_t (*)(void))sub_241371C8C);
        sub_24150C758(v125, (uint64_t (*)(void))sub_241371C8C);
        sub_24150C758(v144, type metadata accessor for PregnancyModeTimelineView);
        v109((char *)v78, v67);
        sub_24150C758(v74, (uint64_t (*)(void))sub_241371C8C);
        uint64_t v69 = v123;
        uint64_t v70 = v132;
        if ((v136 & 1) == 0) {
          goto LABEL_9;
        }
LABEL_25:
        *(void *)&long long v151 = v137;
        *((void *)&v151 + 1) = v70;
        sub_2411D662C();
        uint64_t v150 = sub_241630C28();
        long long v137 = v110;
        LODWORD(v136) = v111;
        uint64_t v144 = v112;
        goto LABEL_12;
      }
      sub_24150C758(v124, (uint64_t (*)(void))sub_241371C8C);
      sub_24150C758(v125, (uint64_t (*)(void))sub_241371C8C);
      sub_24150C758(v144, type metadata accessor for PregnancyModeTimelineView);
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v78, v67);
      uint64_t v70 = v132;
    }
    sub_24150C7B8(v74);
    uint64_t v69 = v123;
    goto LABEL_9;
  }
  sub_24150C758(v65, type metadata accessor for PregnancyModeTimelineView);
  uint64_t v68 = v138;
  uint64_t v67 = v139;
  uint64_t v69 = v123;
  uint64_t v70 = v132;
LABEL_9:
  uint64_t v79 = v117;
  sub_241631C38();
  uint64_t v80 = v119;
  uint64_t v81 = v120;
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v69, v79, v120);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v82 = (id)qword_26B0181A0;
  sub_24162B7D8();
  sub_241631D38();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
  sub_24150E940(0, (unint64_t *)&qword_26B012400, (uint64_t (*)(uint64_t))sub_241223B64, MEMORY[0x263F8E0F8]);
  uint64_t v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = xmmword_241637EE0;
  *(void *)(v83 + 56) = MEMORY[0x263F8D310];
  *(void *)(v83 + 64) = sub_2411C0A14();
  *(void *)(v83 + 32) = v137;
  *(void *)(v83 + 40) = v70;
  uint64_t v84 = sub_241631D28();
  uint64_t v86 = v85;
  swift_bridgeObjectRelease();
  *(void *)&long long v151 = v84;
  *((void *)&v151 + 1) = v86;
  sub_2411D662C();
  uint64_t v150 = sub_241630C28();
  long long v137 = v87;
  LODWORD(v136) = v88;
  uint64_t v144 = v89;
  uint64_t v72 = *MEMORY[0x263F19F08];
LABEL_12:
  uint64_t v90 = v146;
  sub_241428B78(v146);
  uint64_t v91 = v145;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 104))(v145, v72, v67);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v91, 0, 1, v67);
  uint64_t v92 = v148;
  uint64_t v93 = v148 + *(int *)(v147 + 48);
  sub_24150C9D0(v90, v148, (uint64_t (*)(void))sub_241371C8C);
  uint64_t v94 = v92;
  sub_24150C9D0(v91, v93, (uint64_t (*)(void))sub_241371C8C);
  uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  if (v95(v92, 1, v67) == 1)
  {
    sub_24150C758(v91, (uint64_t (*)(void))sub_241371C8C);
    uint64_t v94 = v148;
    sub_24150C758(v90, (uint64_t (*)(void))sub_241371C8C);
    int v96 = v95(v93, 1, v67);
    uint64_t v97 = (uint64_t)v126;
    if (v96 == 1)
    {
      sub_24150C758(v94, (uint64_t (*)(void))sub_241371C8C);
      char v98 = 1;
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  uint64_t v99 = v116;
  sub_24150C9D0(v92, v116, (uint64_t (*)(void))sub_241371C8C);
  if (v95(v93, 1, v67) == 1)
  {
    sub_24150C758(v145, (uint64_t (*)(void))sub_241371C8C);
    sub_24150C758(v146, (uint64_t (*)(void))sub_241371C8C);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v99, v67);
    uint64_t v97 = (uint64_t)v126;
LABEL_17:
    sub_24150C7B8(v94);
LABEL_18:
    char v98 = 2;
    goto LABEL_19;
  }
  uint64_t v105 = v114;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v114, v93, v67);
  sub_24150DC50(&qword_268CFDDD0, MEMORY[0x263F19F18]);
  char v106 = sub_241631C28();
  uint64_t v107 = *(void (**)(char *, uint64_t))(v68 + 8);
  v107(v105, v67);
  sub_24150C758(v145, (uint64_t (*)(void))sub_241371C8C);
  sub_24150C758(v146, (uint64_t (*)(void))sub_241371C8C);
  v107((char *)v99, v67);
  sub_24150C758(v92, (uint64_t (*)(void))sub_241371C8C);
  uint64_t v97 = (uint64_t)v126;
  if ((v106 & 1) == 0) {
    goto LABEL_18;
  }
  char v98 = 1;
LABEL_19:
  uint64_t v100 = v150;
  uint64_t v101 = v137;
  char v102 = v136 & 1;
  uint64_t v103 = v140;
  sub_241506210(v98, (uint64_t)v137, v144, v140);
  sub_24150DAC4(v103, v97, &qword_268D01E08, (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode);
  *(_WORD *)(v97 + *(int *)(v141 + 36)) = 257;
  sub_24150DB30(v103, &qword_268D01E08, (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode);
  if (qword_26B00F370 != -1) {
    swift_once();
  }
  long long v151 = xmmword_26B017FC8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  sub_24150EDD8(&qword_268D021E0, (void (*)(uint64_t))sub_24150A2E0, (void (*)(void))sub_24150DB8C);
  sub_241630D28();
  swift_bridgeObjectRelease();
  sub_24120EFBC(v100, (uint64_t)v101, v102);
  swift_bridgeObjectRelease();
  return sub_24150C758(v97, (uint64_t (*)(void))sub_24150A2E0);
}

uint64_t sub_241509A74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x263F1A470];
  sub_24150EC70(0, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v17 - v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v17 - v13;
  sub_2415086F4(MEMORY[0x263F45220], 0xD00000000000001DLL, 0x800000024166F610, 0xD00000000000002CLL, 0x800000024166C600, (uint64_t)&v17 - v13);
  sub_2415086F4(MEMORY[0x263F45218], 0xD00000000000001BLL, 0x800000024166F5F0, 0xD00000000000002ALL, 0x800000024166C5D0, (uint64_t)v11);
  sub_24150C8C8((uint64_t)v14, (uint64_t)v8, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0);
  sub_24150C8C8((uint64_t)v11, (uint64_t)v5, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0);
  sub_24150C8C8((uint64_t)v8, a1, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0);
  sub_24150AA1C();
  sub_24150C8C8((uint64_t)v5, a1 + *(int *)(v15 + 48), &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0);
  sub_24150C960((uint64_t)v11, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, v2);
  sub_24150C960((uint64_t)v14, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, v2);
  sub_24150C960((uint64_t)v5, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, v2);
  return sub_24150C960((uint64_t)v8, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, v2);
}

void sub_241509CF4()
{
  if (!qword_268D01D78)
  {
    sub_24150E940(255, &qword_268D01D80, (uint64_t (*)(uint64_t))sub_241509DA8, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D01EC0, &qword_268D01D80, (uint64_t (*)(uint64_t))sub_241509DA8);
    unint64_t v0 = sub_241631238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01D78);
    }
  }
}

void sub_241509DA8(uint64_t a1)
{
}

void sub_241509DDC()
{
  if (!qword_268D01D90)
  {
    sub_24150E940(255, &qword_268D01D98, (uint64_t (*)(uint64_t))sub_241509E90, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D01E10, &qword_268D01D98, (uint64_t (*)(uint64_t))sub_241509E90);
    unint64_t v0 = sub_241631238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01D90);
    }
  }
}

void sub_241509E90()
{
  if (!qword_268D01DA0)
  {
    sub_241509F44();
    sub_24150EC70(255, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01DA0);
    }
  }
}

void sub_241509F44()
{
  if (!qword_268D01DA8)
  {
    sub_24150E940(255, &qword_268D01DB0, (uint64_t (*)(uint64_t))sub_241509FF8, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D01DF0, &qword_268D01DB0, (uint64_t (*)(uint64_t))sub_241509FF8);
    unint64_t v0 = sub_2416311C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01DA8);
    }
  }
}

void sub_241509FF8()
{
  if (!qword_268D01DB8)
  {
    sub_24150A35C(255, (unint64_t *)&qword_268CFBC88, MEMORY[0x263F1A470]);
    sub_24150E940(255, &qword_268D01DC0, (uint64_t (*)(uint64_t))sub_24150A0B4, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01DB8);
    }
  }
}

void sub_24150A0B4(uint64_t a1)
{
}

void sub_24150A0E8()
{
  if (!qword_268D01DD0)
  {
    sub_24150A18C(255, &qword_268D01DD8, sub_24150A16C);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01DD0);
    }
  }
}

void sub_24150A16C(uint64_t a1)
{
}

void sub_24150A18C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_24150A288(255, (unint64_t *)&qword_268CFAE40, (unint64_t *)&qword_268CFAE48);
    unint64_t v4 = sub_241630188();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24150A210()
{
  if (!qword_268D01DE8)
  {
    sub_24150A288(255, (unint64_t *)&qword_268CFF9A0, &qword_268CFF9A8);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01DE8);
    }
  }
}

void sub_24150A288(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_2411E0390(255, a3);
    unint64_t v4 = sub_2416308C8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24150A2E0()
{
  if (!qword_268D01E00)
  {
    sub_24150A35C(255, &qword_268D01E08, (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01E00);
    }
  }
}

void sub_24150A35C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241630188();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for AdaptableBlendMode(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D02228);
}

uint64_t sub_24150A3D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24150E940(255, a2, a3, MEMORY[0x263F1BAC8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24150A43C()
{
  if (!qword_268D01E18)
  {
    sub_24150E940(255, &qword_268D01E20, (uint64_t (*)(uint64_t))sub_24150A4F0, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D01EB8, &qword_268D01E20, (uint64_t (*)(uint64_t))sub_24150A4F0);
    unint64_t v0 = sub_241631238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01E18);
    }
  }
}

void sub_24150A4F0()
{
  if (!qword_268D01E28)
  {
    sub_24150BC80(255, &qword_268D01E30, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineGauge);
    sub_24150A584();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01E28);
    }
  }
}

void sub_24150A584()
{
  if (!qword_268D01E38)
  {
    sub_24150E940(255, &qword_268D01E40, (uint64_t (*)(uint64_t))sub_24150A638, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D01EB0, &qword_268D01E40, (uint64_t (*)(uint64_t))sub_24150A638);
    unint64_t v0 = sub_24162FFA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01E38);
    }
  }
}

void sub_24150A638(uint64_t a1)
{
}

void sub_24150A66C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_24150A6E8()
{
  if (!qword_268D01E50)
  {
    sub_24150E940(255, &qword_268D01E58, (uint64_t (*)(uint64_t))sub_24150A79C, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D01E68, &qword_268D01E58, (uint64_t (*)(uint64_t))sub_24150A79C);
    unint64_t v0 = sub_2416311C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01E50);
    }
  }
}

void sub_24150A79C()
{
  if (!qword_268D01E60)
  {
    sub_24150EC70(255, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D01E60);
    }
  }
}

void sub_24150A84C()
{
  if (!qword_268D01E70)
  {
    sub_24150E940(255, &qword_268D01E78, (uint64_t (*)(uint64_t))sub_24150A900, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D01EA8, &qword_268D01E78, (uint64_t (*)(uint64_t))sub_24150A900);
    unint64_t v0 = sub_2416311C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01E70);
    }
  }
}

void sub_24150A900()
{
  if (!qword_268D01E80)
  {
    sub_24150A968();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01E80);
    }
  }
}

void sub_24150A968()
{
  if (!qword_268D01E88)
  {
    sub_24150E940(255, &qword_268D01E90, (uint64_t (*)(uint64_t))sub_24150AA1C, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D01EA0, &qword_268D01E90, (uint64_t (*)(uint64_t))sub_24150AA1C);
    unint64_t v0 = sub_241631238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01E88);
    }
  }
}

void sub_24150AA1C()
{
  if (!qword_268D01E98)
  {
    sub_24150EC70(255, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01E98);
    }
  }
}

void sub_24150AAC4()
{
  if (!qword_268D01EC8)
  {
    sub_241509CF4();
    sub_24150DC50(&qword_268D01ED0, (void (*)(uint64_t))sub_241509CF4);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D01EC8);
    }
  }
}

void sub_24150AB78()
{
  if (!qword_268D01EE0)
  {
    sub_24150EC70(255, &qword_268D01ED8, (uint64_t (*)(uint64_t))sub_24150AAC4, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01EE0);
    }
  }
}

void sub_24150AC1C(uint64_t a1)
{
}

void sub_24150AC44(uint64_t a1)
{
}

void sub_24150AC8C()
{
  if (!qword_268D01F00)
  {
    sub_24150EC70(255, &qword_268D01F08, (uint64_t (*)(uint64_t))sub_24150AD54, (uint64_t (*)(uint64_t))sub_24150BED8, MEMORY[0x263F18E28]);
    sub_24150BF88();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D01F00);
    }
  }
}

void sub_24150AD54()
{
  if (!qword_268D01F10)
  {
    sub_24150ADF0(255);
    sub_24150EDD8(&qword_268D02100, sub_24150ADF0, (void (*)(void))sub_24150BEA4);
    unint64_t v0 = sub_241631238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01F10);
    }
  }
}

void sub_24150ADF0(uint64_t a1)
{
}

void sub_24150AE18()
{
  if (!qword_268D01F20)
  {
    sub_24150E940(255, &qword_268D01F28, (uint64_t (*)(uint64_t))sub_24150AECC, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D020F8, &qword_268D01F28, (uint64_t (*)(uint64_t))sub_24150AECC);
    unint64_t v0 = sub_24162FFA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01F20);
    }
  }
}

void sub_24150AECC(uint64_t a1)
{
}

void sub_24150AF14(uint64_t a1)
{
}

void sub_24150AF3C()
{
  if (!qword_268D01F40)
  {
    sub_24150E940(255, &qword_268D01F48, (uint64_t (*)(uint64_t))sub_24150AFF0, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D01FE0, &qword_268D01F48, (uint64_t (*)(uint64_t))sub_24150AFF0);
    unint64_t v0 = sub_2416311C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01F40);
    }
  }
}

void sub_24150AFF0()
{
  if (!qword_268D01F50)
  {
    sub_24150B0D4(255);
    sub_24150BC80(255, &qword_268D01F60, MEMORY[0x263F1B7B8]);
    sub_24150B0FC(255);
    sub_24150BC80(255, &qword_268D01F90, (void (*)(uint64_t))sub_24150B258);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_268D01F50);
    }
  }
}

void sub_24150B0D4(uint64_t a1)
{
}

void sub_24150B0FC(uint64_t a1)
{
}

void sub_24150B124()
{
  if (!qword_268D01F70)
  {
    sub_24150E940(255, &qword_268D01F78, (uint64_t (*)(uint64_t))sub_24150B1D8, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D01F88, &qword_268D01F78, (uint64_t (*)(uint64_t))sub_24150B1D8);
    unint64_t v0 = sub_241631238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01F70);
    }
  }
}

void sub_24150B1D8(uint64_t a1)
{
}

void sub_24150B1F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_24150B258()
{
  if (!qword_268D01F98)
  {
    sub_24150E940(255, &qword_268D01FA0, (uint64_t (*)(uint64_t))sub_24150B30C, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D01FD8, &qword_268D01FA0, (uint64_t (*)(uint64_t))sub_24150B30C);
    unint64_t v0 = sub_241631238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01F98);
    }
  }
}

void sub_24150B30C(uint64_t a1)
{
}

void sub_24150B340()
{
  if (!qword_268D01FB0)
  {
    sub_24150E940(255, &qword_268D01FB8, (uint64_t (*)(uint64_t))sub_24150B3F4, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D01FD0, &qword_268D01FB8, (uint64_t (*)(uint64_t))sub_24150B3F4);
    unint64_t v0 = sub_2416311C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01FB0);
    }
  }
}

void sub_24150B3F4()
{
  if (!qword_268D01FC0)
  {
    sub_24150BC80(255, &qword_268D01E30, (void (*)(uint64_t))type metadata accessor for PregnancyModeTimelineGauge);
    sub_24150B73C(255, &qword_268D01FC8);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D01FC0);
    }
  }
}

void sub_24150B4A0(uint64_t a1)
{
}

void sub_24150B4C8()
{
  if (!qword_268D01FF0)
  {
    sub_24150E940(255, &qword_268D01FF8, (uint64_t (*)(uint64_t))sub_24150B57C, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D02080, &qword_268D01FF8, (uint64_t (*)(uint64_t))sub_24150B57C);
    unint64_t v0 = sub_241631248();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D01FF0);
    }
  }
}

void sub_24150B57C(uint64_t a1)
{
}

void sub_24150B5B0()
{
  if (!qword_268D02008)
  {
    sub_24150E940(255, &qword_268D02010, (uint64_t (*)(uint64_t))sub_24150B664, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D02030, &qword_268D02010, (uint64_t (*)(uint64_t))sub_24150B664);
    unint64_t v0 = sub_2416311C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02008);
    }
  }
}

void sub_24150B664()
{
  if (!qword_268D02018)
  {
    sub_24150B6CC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D02018);
    }
  }
}

void sub_24150B6CC()
{
  if (!qword_268D02020)
  {
    sub_24150B73C(255, &qword_268D02028);
    unint64_t v0 = sub_241630188();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02020);
    }
  }
}

void sub_24150B73C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_24150A18C(255, &qword_268D01DD8, sub_24150A16C);
    unint64_t v3 = sub_241630188();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_24150B7B8()
{
  if (!qword_268D02038)
  {
    sub_24150E940(255, &qword_268D02040, (uint64_t (*)(uint64_t))sub_24150B86C, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D02078, &qword_268D02040, (uint64_t (*)(uint64_t))sub_24150B86C);
    unint64_t v0 = sub_2416311C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02038);
    }
  }
}

void sub_24150B86C()
{
  if (!qword_268D02048)
  {
    sub_24150B908();
    sub_24150BC80(255, &qword_268D02070, (void (*)(uint64_t))sub_24150A43C);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D02048);
    }
  }
}

void sub_24150B908()
{
  if (!qword_268D02050)
  {
    sub_24150E940(255, &qword_268D02058, (uint64_t (*)(uint64_t))sub_24150B9BC, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D02068, &qword_268D02058, (uint64_t (*)(uint64_t))sub_24150B9BC);
    unint64_t v0 = sub_241631238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02050);
    }
  }
}

void sub_24150B9BC(uint64_t a1)
{
}

void sub_24150B9F0()
{
  if (!qword_268D02088)
  {
    sub_24150E940(255, &qword_268D02090, (uint64_t (*)(uint64_t))sub_24150BAA4, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D020F0, &qword_268D02090, (uint64_t (*)(uint64_t))sub_24150BAA4);
    unint64_t v0 = sub_241631248();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02088);
    }
  }
}

void sub_24150BAA4()
{
  if (!qword_268D02098)
  {
    sub_24150B5B0();
    sub_24150BC80(255, &qword_268D020A0, (void (*)(uint64_t))sub_24150BB38);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D02098);
    }
  }
}

void sub_24150BB38()
{
  if (!qword_268D020A8)
  {
    sub_24150E940(255, &qword_268D020B0, (uint64_t (*)(uint64_t))sub_24150BBEC, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D020E8, &qword_268D020B0, (uint64_t (*)(uint64_t))sub_24150BBEC);
    unint64_t v0 = sub_241631238();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D020A8);
    }
  }
}

void sub_24150BBEC()
{
  if (!qword_268D020B8)
  {
    sub_24150BC80(255, &qword_268D020C0, (void (*)(uint64_t))sub_24150BCE4);
    sub_24150A43C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D020B8);
    }
  }
}

void sub_24150BC80(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241630188();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24150BCE4()
{
  if (!qword_268D020C8)
  {
    sub_24150E940(255, &qword_268D020D0, (uint64_t (*)(uint64_t))sub_24150BD98, MEMORY[0x263F1BAC8]);
    sub_24150A3D8(&qword_268D020E0, &qword_268D020D0, (uint64_t (*)(uint64_t))sub_24150BD98);
    unint64_t v0 = sub_2416311C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D020C8);
    }
  }
}

void sub_24150BD98(uint64_t a1)
{
}

void sub_24150BDE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v9) {
      atomic_store(TupleTypeMetadata3, a2);
    }
  }
}

void sub_24150BE7C(uint64_t a1)
{
}

uint64_t sub_24150BEA4()
{
  return sub_24150DC50(&qword_268D02108, (void (*)(uint64_t))sub_24150AE18);
}

void sub_24150BED8()
{
  if (!qword_268D02110)
  {
    sub_24150BF34();
    unint64_t v0 = sub_241630818();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02110);
    }
  }
}

unint64_t sub_24150BF34()
{
  unint64_t result = qword_268D02118;
  if (!qword_268D02118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D02118);
  }
  return result;
}

unint64_t sub_24150BF88()
{
  unint64_t result = qword_268D02120;
  if (!qword_268D02120)
  {
    sub_24150EC70(255, &qword_268D01F08, (uint64_t (*)(uint64_t))sub_24150AD54, (uint64_t (*)(uint64_t))sub_24150BED8, MEMORY[0x263F18E28]);
    sub_24150DC50(&qword_268D02128, (void (*)(uint64_t))sub_24150AD54);
    sub_24150DC50(&qword_268D02130, (void (*)(uint64_t))sub_24150BED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D02120);
  }
  return result;
}

uint64_t sub_24150C0A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_241630A98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_241631058();
  sub_241630AD8();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1A680], v2);
  sub_241630AB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_241630A48();
  uint64_t v35 = sub_241630A88();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_2411B9D00(0, (unint64_t *)&qword_268CFA910);
  uint64_t v6 = sub_241632958();
  uint64_t v33 = MEMORY[0x24561E4E0](v6);
  uint64_t v32 = swift_getKeyPath();
  uint64_t v31 = sub_241630F68();
  uint64_t v30 = swift_getKeyPath();
  sub_2416313F8();
  sub_24162FFB8();
  uint64_t v7 = v37;
  char v8 = v38;
  uint64_t v9 = v39;
  char v10 = v40;
  uint64_t v11 = v41;
  uint64_t v12 = v42;
  char v13 = sub_241630968();
  sub_24162FE78();
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v47;
  *(_DWORD *)&v63[3] = *(_DWORD *)&v47[3];
  *(_DWORD *)uint64_t v66 = *(_DWORD *)v45;
  *(_DWORD *)&void v66[3] = *(_DWORD *)&v45[3];
  *(_DWORD *)&v70[3] = *(_DWORD *)&v44[3];
  *(_DWORD *)uint64_t v70 = *(_DWORD *)v44;
  DWORD1(v53) = *(_DWORD *)&v47[3];
  char v48 = v8;
  char v46 = v10;
  char v43 = 0;
  *(_DWORD *)((char *)&v53 + 1) = *(_DWORD *)v47;
  DWORD1(v54) = *(_DWORD *)&v45[3];
  uint64_t v15 = v35;
  uint64_t v14 = v36;
  uint64_t v17 = v33;
  uint64_t v16 = KeyPath;
  *(void *)&long long v49 = v36;
  *((void *)&v49 + 1) = KeyPath;
  uint64_t v18 = v31;
  uint64_t v19 = v32;
  *(void *)&long long v50 = v35;
  *((void *)&v50 + 1) = v32;
  uint64_t v20 = v30;
  *(void *)&long long v51 = v33;
  *((void *)&v51 + 1) = v30;
  *(void *)&long long v52 = v31;
  *((void *)&v52 + 1) = v7;
  LOBYTE(v53) = v8;
  *((void *)&v53 + 1) = v9;
  LOBYTE(v54) = v10;
  *(_DWORD *)((char *)&v54 + 1) = *(_DWORD *)v45;
  *((void *)&v54 + 1) = v11;
  *(void *)&long long v55 = v12;
  BYTE8(v55) = v13;
  HIDWORD(v55) = *(_DWORD *)&v44[3];
  *(_DWORD *)((char *)&v55 + 9) = *(_DWORD *)v44;
  *(void *)&long long v56 = v21;
  *((void *)&v56 + 1) = v22;
  *(void *)&long long v57 = v23;
  *((void *)&v57 + 1) = v24;
  char v58 = 0;
  char v60 = 1;
  v59[151] = 0;
  *(_OWORD *)&v59[135] = v57;
  *(_OWORD *)&v59[119] = v56;
  *(_OWORD *)&v59[103] = v55;
  *(_OWORD *)&v59[23] = v50;
  *(_OWORD *)&v59[7] = v49;
  *(_OWORD *)&v59[87] = v54;
  *(_OWORD *)&v59[71] = v53;
  *(_OWORD *)&v59[55] = v52;
  *(_OWORD *)&v59[39] = v51;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  long long v25 = *(_OWORD *)&v59[112];
  *(_OWORD *)(a1 + 105) = *(_OWORD *)&v59[96];
  *(_OWORD *)(a1 + 121) = v25;
  *(_OWORD *)(a1 + 137) = *(_OWORD *)&v59[128];
  *(void *)(a1 + 153) = *(void *)&v59[144];
  long long v26 = *(_OWORD *)&v59[48];
  *(_OWORD *)(a1 + 41) = *(_OWORD *)&v59[32];
  *(_OWORD *)(a1 + 57) = v26;
  long long v27 = *(_OWORD *)&v59[80];
  *(_OWORD *)(a1 + 73) = *(_OWORD *)&v59[64];
  *(_OWORD *)(a1 + 89) = v27;
  long long v28 = *(_OWORD *)&v59[16];
  *(_OWORD *)(a1 + 9) = *(_OWORD *)v59;
  *(_OWORD *)(a1 + 25) = v28;
  v61[0] = v14;
  v61[1] = v16;
  v61[2] = v15;
  v61[3] = v19;
  v61[4] = v17;
  v61[5] = v20;
  v61[6] = v18;
  v61[7] = v7;
  char v62 = v8;
  uint64_t v64 = v9;
  char v65 = v10;
  uint64_t v67 = v11;
  uint64_t v68 = v12;
  char v69 = v13;
  uint64_t v71 = v21;
  uint64_t v72 = v22;
  uint64_t v73 = v23;
  uint64_t v74 = v24;
  char v75 = 0;
  sub_24150D5CC((uint64_t)&v49);
  return sub_24150D64C((uint64_t)v61);
}

uint64_t sub_24150C450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v2 = sub_24162FEE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v22 - v7;
  uint64_t v23 = sub_241631428();
  uint64_t v9 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24150EC28(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24142913C((uint64_t)v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F184F8], v2);
  char v16 = sub_24162FED8();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v5, v2);
  v17(v8, v2);
  uint64_t v18 = (unsigned int *)MEMORY[0x263F1B968];
  if ((v16 & 1) == 0) {
    uint64_t v18 = (unsigned int *)MEMORY[0x263F1B950];
  }
  uint64_t v19 = v23;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *v18, v23);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v15[*(int *)(v13 + 44)], v11, v19);
  sub_24150ECF4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v24, v20);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  return sub_24150CD98((uint64_t)v15, v25, (uint64_t (*)(void))sub_24150EC28);
}

uint64_t sub_24150C738()
{
  return sub_24162FF98();
}

uint64_t sub_24150C758(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24150C7B8(uint64_t a1)
{
  sub_24150B1F8(0, (unint64_t *)&qword_268CFDDA0, sub_241371C8C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24150C830()
{
  if (!qword_268D02138)
  {
    sub_24150E940(255, &qword_268D01D80, (uint64_t (*)(uint64_t))sub_241509DA8, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02138);
    }
  }
}

uint64_t sub_24150C8C8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_24150EC70(0, a3, a4, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24150C960(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t))
{
  sub_24150EC70(0, a2, a3, a4, MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_24150C9D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_24150CA38()
{
  unint64_t result = qword_268D02140;
  if (!qword_268D02140)
  {
    sub_24150AC44(255);
    sub_24150EC70(255, &qword_268D01F08, (uint64_t (*)(uint64_t))sub_24150AD54, (uint64_t (*)(uint64_t))sub_24150BED8, MEMORY[0x263F18E28]);
    sub_24150BF88();
    swift_getOpaqueTypeConformance2();
    sub_24150DC50((unint64_t *)&qword_268CFBC98, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D02140);
  }
  return result;
}

uint64_t sub_24150CB54()
{
  return sub_24150EDD8(&qword_268D02150, (void (*)(uint64_t))sub_24150AB78, (void (*)(void))sub_24150CB90);
}

unint64_t sub_24150CB90()
{
  unint64_t result = qword_268D02158;
  if (!qword_268D02158)
  {
    sub_24150EC70(255, &qword_268D01ED8, (uint64_t (*)(uint64_t))sub_24150AAC4, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
    sub_241509CF4();
    sub_24150DC50(&qword_268D01ED0, (void (*)(uint64_t))sub_241509CF4);
    swift_getOpaqueTypeConformance2();
    sub_24150DC50((unint64_t *)&qword_268CFBC98, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D02158);
  }
  return result;
}

void sub_24150CCDC()
{
  if (!qword_268D02160)
  {
    sub_24150ADF0(255);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02160);
    }
  }
}

unint64_t sub_24150CD44()
{
  unint64_t result = qword_268D02170;
  if (!qword_268D02170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D02170);
  }
  return result;
}

uint64_t sub_24150CD98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24150CE00()
{
  uint64_t v1 = type metadata accessor for PregnancyModeTimelineView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = sub_24162ED68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 24);
  sub_24150E940(0, &qword_268CFDD58, (uint64_t (*)(uint64_t))sub_241371C8C, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_2416307A8();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v0 + v3 + *(int *)(v1 + 28);
  sub_24150E940(0, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_241630128();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_24150D080()
{
  type metadata accessor for PregnancyModeTimelineView(0);

  return sub_2415028CC();
}

void sub_24150D0F0()
{
  if (!qword_268D02180)
  {
    sub_24150E940(255, &qword_268D01F48, (uint64_t (*)(uint64_t))sub_24150AFF0, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02180);
    }
  }
}

void sub_24150D188()
{
  if (!qword_268D02188)
  {
    sub_24150E940(255, &qword_268D02040, (uint64_t (*)(uint64_t))sub_24150B86C, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02188);
    }
  }
}

void sub_24150D220()
{
  if (!qword_268D02190)
  {
    sub_24150E940(255, &qword_268D01FF8, (uint64_t (*)(uint64_t))sub_24150B57C, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02190);
    }
  }
}

uint64_t sub_24150D2B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_24150D338(uint64_t a1)
{
  return a1;
}

void sub_24150D3B8()
{
  if (!qword_268D02198)
  {
    sub_24150E940(255, &qword_268D020B0, (uint64_t (*)(uint64_t))sub_24150BBEC, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02198);
    }
  }
}

void sub_24150D450()
{
  if (!qword_268D021A0)
  {
    sub_24150E940(255, &qword_268D02090, (uint64_t (*)(uint64_t))sub_24150BAA4, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D021A0);
    }
  }
}

uint64_t sub_24150D4E8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_24150BC80(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24150D558(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_24150BC80(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24150D5CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_24150D64C(uint64_t a1)
{
  return a1;
}

void sub_24150D6CC()
{
  if (!qword_268D021A8)
  {
    sub_24150E940(255, &qword_268D020D0, (uint64_t (*)(uint64_t))sub_24150BD98, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D021A8);
    }
  }
}

uint64_t sub_24150D764(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_24150BC80(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_24150D7D4()
{
  if (!qword_268D021B0)
  {
    sub_24150E940(255, &qword_268D01E20, (uint64_t (*)(uint64_t))sub_24150A4F0, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D021B0);
    }
  }
}

void sub_24150D874(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_24150E940(255, a3, a4, MEMORY[0x263F1BAC8]);
    sub_24150CD44();
    unint64_t v5 = sub_241630028();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_24150D8FC()
{
  if (!qword_268D021C0)
  {
    sub_24150E940(255, &qword_268D01E58, (uint64_t (*)(uint64_t))sub_24150A79C, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D021C0);
    }
  }
}

void sub_24150D994()
{
  if (!qword_268D021C8)
  {
    sub_24150E940(255, &qword_268D01E78, (uint64_t (*)(uint64_t))sub_24150A900, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D021C8);
    }
  }
}

void sub_24150DA2C()
{
  if (!qword_268D021D0)
  {
    sub_24150E940(255, &qword_268D01E90, (uint64_t (*)(uint64_t))sub_24150AA1C, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D021D0);
    }
  }
}

uint64_t sub_24150DAC4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_24150A35C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24150DB30(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_24150A35C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_24150DB8C()
{
  unint64_t result = qword_268D021E8;
  if (!qword_268D021E8)
  {
    sub_24150A35C(255, &qword_268D01E08, (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode);
    sub_24150DC50(&qword_268D021F0, (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D021E8);
  }
  return result;
}

uint64_t sub_24150DC50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24150DCA0()
{
  if (!qword_268D021F8)
  {
    sub_24150E940(255, &qword_268D01D98, (uint64_t (*)(uint64_t))sub_241509E90, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D021F8);
    }
  }
}

void sub_24150DD38()
{
  if (!qword_268D02200)
  {
    sub_24150E940(255, &qword_268D01F78, (uint64_t (*)(uint64_t))sub_24150B1D8, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02200);
    }
  }
}

void sub_24150DDD0()
{
  if (!qword_268D02208)
  {
    sub_24150E940(255, &qword_268D01DB0, (uint64_t (*)(uint64_t))sub_241509FF8, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02208);
    }
  }
}

uint64_t sub_24150DE68(uint64_t a1, uint64_t a2)
{
  sub_24150EC70(0, &qword_268D01DF8, (uint64_t (*)(uint64_t))sub_24150A2E0, MEMORY[0x263F1A470], MEMORY[0x263F18E28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24150DF10(uint64_t a1, uint64_t a2)
{
  sub_24150A35C(0, (unint64_t *)&qword_268CFBC88, MEMORY[0x263F1A470]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24150DF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24150E020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_24150E0B0()
{
  if (!qword_268D02210)
  {
    sub_24150E940(255, &qword_268D02058, (uint64_t (*)(uint64_t))sub_24150B9BC, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02210);
    }
  }
}

void sub_24150E148()
{
  if (!qword_268D02218)
  {
    sub_24150E940(255, &qword_268D01FA0, (uint64_t (*)(uint64_t))sub_24150B30C, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02218);
    }
  }
}

void sub_24150E1E0()
{
  if (!qword_268D02220)
  {
    sub_24150E940(255, &qword_268D01FB8, (uint64_t (*)(uint64_t))sub_24150B3F4, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02220);
    }
  }
}

uint64_t *sub_24150E278(uint64_t *a1, uint64_t *a2)
{
  sub_24150E940(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_24162FEE8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24150E3B0(uint64_t a1)
{
  sub_24150E940(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_24162FEE8();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_24150E480(void *a1, void *a2)
{
  sub_24150E940(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_24162FEE8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_24150E568(void *a1, void *a2)
{
  if (a1 != a2)
  {
    uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    int v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_241500A5C((uint64_t)a1, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_24150E940(0, (unint64_t *)&qword_268CFA8A8, v4, v5);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_24162FEE8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_24150E680(void *a1, const void *a2)
{
  sub_24150E940(0, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  uint64_t v5 = v4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24162FEE8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  return a1;
}

void *sub_24150E770(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F18520];
    uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_241500A5C((uint64_t)a1, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
    sub_24150E940(0, (unint64_t *)&qword_268CFA8A8, v4, v5);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_24162FEE8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24150E890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24150E8A4);
}

uint64_t sub_24150E8A4(uint64_t a1, uint64_t a2)
{
  sub_24150E940(0, &qword_268CFAFC8, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

void sub_24150E940(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24150E9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24150E9B8);
}

uint64_t sub_24150E9B8(uint64_t a1, uint64_t a2)
{
  sub_24150E940(0, &qword_268CFAFC8, MEMORY[0x263F18520], MEMORY[0x263F185D0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_24150EA58()
{
  sub_24150E940(319, (unint64_t *)&qword_268CFA8A8, MEMORY[0x263F18520], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_24150EB18()
{
  unint64_t result = qword_268D02238;
  if (!qword_268D02238)
  {
    sub_24150EC70(255, &qword_268D02240, (uint64_t (*)(uint64_t))sub_24150AC44, (uint64_t (*)(uint64_t))sub_24150AC1C, MEMORY[0x263F19B28]);
    sub_24150CA38();
    sub_24150EDD8(&qword_268D02148, sub_24150AC1C, (void (*)(void))sub_24150CB54);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D02238);
  }
  return result;
}

uint64_t sub_24150EC0C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_24150EC28(uint64_t a1)
{
}

void sub_24150EC70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_24150ECF4()
{
  if (!qword_268D02250)
  {
    type metadata accessor for AdaptableBlendMode(255);
    sub_24150DC50(&qword_268D021F0, (void (*)(uint64_t))type metadata accessor for AdaptableBlendMode);
    unint64_t v0 = sub_241630738();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02250);
    }
  }
}

uint64_t sub_24150ED88()
{
  return sub_24150EDD8(&qword_268D02258, sub_24150EC28, (void (*)(void))sub_24150EE58);
}

uint64_t sub_24150EDD8(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24150EE58()
{
  return sub_24150DC50(&qword_268D02260, (void (*)(uint64_t))sub_24150ECF4);
}

uint64_t getEnumTagSinglePayload for CycleTimelineConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[152]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CycleTimelineConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 152) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CycleTimelineConfiguration()
{
  return &type metadata for CycleTimelineConfiguration;
}

double sub_24150EF58(double a1)
{
  if (*(unsigned char *)v1)
  {
    unsigned int v3 = (id *)MEMORY[0x263F835B8];
  }
  else
  {
    if (qword_268CF9A08 != -1) {
      swift_once();
    }
    unsigned int v3 = (id *)&qword_268D24470;
  }
  id v4 = *v3;
  double v5 = *(double *)(v1 + 112);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, v4);

  objc_msgSend(v6, sel_scaledValueForValue_, *(double *)(v1 + 120));
  double v8 = v7;

  return v5
       + v8
       + *(double *)(v1 + 16)
       + *(double *)(v1 + 96)
       + *(double *)(v1 + 48)
       - *(double *)(v1 + 48) * 0.5
       - *(double *)(v1 + 80) * a1 * 0.5;
}

double sub_24150F064(double a1)
{
  if (*(unsigned char *)v1)
  {
    unsigned int v3 = (id *)MEMORY[0x263F835B8];
  }
  else
  {
    if (qword_268CF9A08 != -1) {
      swift_once();
    }
    unsigned int v3 = (id *)&qword_268D24470;
  }
  id v4 = *v3;
  double v5 = *(double *)(v1 + 112);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, v4);

  objc_msgSend(v6, sel_scaledValueForValue_, *(double *)(v1 + 120));
  double v8 = v7;

  return v5
       + v8
       + *(double *)(v1 + 16)
       + *(double *)(v1 + 40)
       - *(double *)(v1 + 104)
       - *(double *)(v1 + 56)
       + *(double *)(v1 + 56) * 0.5
       + *(double *)(v1 + 88) * a1 * 0.5;
}

BOOL sub_24150F178(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 112);
  v11[6] = *(_OWORD *)(a1 + 96);
  v11[7] = v2;
  v11[8] = *(_OWORD *)(a1 + 128);
  uint64_t v12 = *(void *)(a1 + 144);
  long long v3 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  void v11[3] = v3;
  long long v4 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  v13[6] = *(_OWORD *)(a2 + 96);
  v13[7] = v6;
  v13[8] = *(_OWORD *)(a2 + 128);
  uint64_t v14 = *(void *)(a2 + 144);
  long long v7 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  void v13[3] = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  v13[4] = *(_OWORD *)(a2 + 64);
  v13[5] = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v9;
  return sub_24150F31C((double *)v11, (double *)v13);
}

double sub_24150F20C(double a1)
{
  if (*(unsigned char *)v1)
  {
    long long v3 = (id *)MEMORY[0x263F835B8];
  }
  else
  {
    if (qword_268CF9A08 != -1) {
      swift_once();
    }
    long long v3 = (id *)&qword_268D24470;
  }
  id v4 = *v3;
  double v5 = *(double *)(v1 + 112);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, v4);

  objc_msgSend(v6, sel_scaledValueForValue_, *(double *)(v1 + 120));
  double v8 = v7;

  return v5
       + v8
       + *(double *)(v1 + 16)
       + *(double *)(v1 + 96)
       + *(double *)(v1 + 48)
       - *(double *)(v1 + 48)
       - *(double *)(v1 + 80) * a1
       - *(double *)(v1 + 96)
       - *(double *)(v1 + 128) * a1;
}

BOOL sub_24150F31C(double *a1, double *a2)
{
  return ((*(unsigned __int8 *)a1 ^ *(unsigned __int8 *)a2) & 1) == 0
      && a1[1] == a2[1]
      && a1[2] == a2[2]
      && a1[3] == a2[3]
      && a1[4] == a2[4]
      && a1[5] == a2[5]
      && a1[6] == a2[6]
      && a1[7] == a2[7]
      && a1[8] == a2[8]
      && a1[9] == a2[9]
      && a1[10] == a2[10]
      && a1[11] == a2[11]
      && a1[12] == a2[12]
      && a1[13] == a2[13]
      && a1[14] == a2[14]
      && a1[15] == a2[15]
      && a1[16] == a2[16]
      && a1[17] == a2[17]
      && a1[18] == a2[18];
}

double sub_24150F458@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  if (a1 == 2)
  {
    _Q0 = xmmword_24164F350;
    _Q1 = xmmword_24164F360;
    double v5 = 11.0;
    double v6 = 7.0;
    double v7 = 15.0;
    double v8 = 12.0;
    double v9 = 16.0;
    double v10 = 24.0;
    char v11 = 1;
    double v12 = 5.0;
    double v13 = 99.0;
    double v14 = 63.36;
  }
  else
  {
    char v11 = 0;
    if (a3 <= 320.0)
    {
      _Q0 = xmmword_24164F370;
      _Q1 = xmmword_24164F380;
      double v13 = 62.0;
      double v14 = 40.0;
      double v5 = 7.0;
      double v6 = 6.0;
      double v7 = 12.0;
      double v8 = 10.0;
      double v9 = 13.0;
      double v10 = 17.0;
      double v12 = 3.0;
    }
    else
    {
      double v15 = 34.0;
      if (a3 >= 414.0) {
        double v12 = 5.0;
      }
      else {
        double v12 = 4.0;
      }
      if (a3 >= 414.0) {
        double v10 = 19.0;
      }
      else {
        double v10 = 14.0;
      }
      if (a3 >= 414.0) {
        double v9 = 14.0;
      }
      else {
        double v9 = 10.0;
      }
      if (a3 >= 414.0) {
        double v14 = 48.0;
      }
      else {
        double v14 = 44.0;
      }
      if (a3 >= 414.0) {
        double v13 = 75.0;
      }
      else {
        double v13 = 68.0;
      }
      if (a3 >= 414.0)
      {
        double v8 = 12.0;
      }
      else
      {
        double v15 = 32.0;
        double v8 = 11.0;
      }
      if (a3 >= 414.0) {
        double v7 = 15.0;
      }
      else {
        double v7 = 14.0;
      }
      if (a3 >= 414.0) {
        double v16 = 10.0;
      }
      else {
        double v16 = 9.0;
      }
      if (a3 >= 414.0) {
        double v6 = 7.0;
      }
      else {
        double v6 = 6.0;
      }
      if (a3 >= 414.0) {
        double v5 = 11.0;
      }
      else {
        double v5 = 10.0;
      }
      __asm { FMOV            V1.2D, #10.0 }
      *(double *)&_Q1 = v15;
      __asm { FMOV            V0.2D, #3.0 }
      *(double *)&_Q0 = v16;
    }
  }
  *(unsigned char *)a2 = v11;
  *(double *)(a2 + 8) = v12;
  *(double *)(a2 + 16) = v10;
  *(double *)(a2 + 24) = v9;
  *(double *)(a2 + 32) = v14;
  *(double *)(a2 + 40) = v13;
  *(_OWORD *)(a2 + 48) = _Q1;
  *(double *)(a2 + 64) = v8;
  *(double *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 80) = _Q0;
  *(double *)(a2 + 96) = v6;
  *(double *)(a2 + 104) = v5;
  double result = 16.5;
  __asm { FMOV            V1.2D, #1.0 }
  *(_OWORD *)(a2 + 112) = xmmword_24164F390;
  *(_OWORD *)(a2 + 128) = _Q1;
  *(void *)(a2 + 144) = 0x3FF0000000000000;
  return result;
}

uint64_t sub_24150F5E4()
{
  uint64_t v1 = sub_24162B468();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x270FA5388](v1).n128_u64[0];
  double v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_bundleURL, v3);
  sub_24162B438();

  uint64_t v7 = sub_24162B418();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v18[0] = v7;
  v18[1] = v9;
  unint64_t v10 = sub_2411D662C();
  char v11 = (void *)MEMORY[0x245620190](46, 0xE100000000000000, 1, 1, MEMORY[0x263F8D310], v10);
  swift_bridgeObjectRelease();
  if (v11[2])
  {
    uint64_t v12 = v11[4];
    uint64_t v13 = v11[5];
    uint64_t v14 = v11[6];
    uint64_t v15 = v11[7];
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x24561F260](v12, v13, v14, v15);
    swift_bridgeObjectRelease();
    return v16;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

id sub_24150F770()
{
  type metadata accessor for MenstrualCyclesAppDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_26B0181A0 = (uint64_t)result;
  return result;
}

uint64_t sub_24150F7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24150F7F4);
}

uint64_t sub_24150F7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24150F80C);
}

uint64_t type metadata accessor for EmbryoTransferDatePickerRow(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D02288);
}

uint64_t sub_24150F834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24150F848);
}

uint64_t sub_24150F84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_24162DA38();
    char v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_24150F974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24150F988);
}

uint64_t sub_24150F98C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_24162DA38();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for EmbryoAgeAtTransferPickerRow(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D02298);
}

uint64_t sub_24150FAE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24150FAFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EmbryoAgeAtTransferPickerRow(0);
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = v4;
  uint64_t v31 = (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_24162DA38();
  uint64_t v28 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v26 - v10;
  if (qword_268CF9828 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_268D02270;
  uint64_t v27 = qword_268D02268;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631378();
  swift_getKeyPath();
  sub_241631398();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v13 = v33;
  uint64_t v26 = v34;
  char v14 = v35;
  uint64_t v15 = v28;
  uint64_t v16 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v6, v1 + *(int *)(v3 + 20), v32);
  uint64_t v17 = v31;
  sub_241510D3C(v1, v31, type metadata accessor for EmbryoAgeAtTransferPickerRow);
  unint64_t v18 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v19 = swift_allocObject();
  sub_241510B94(v17, v19 + v18, type metadata accessor for EmbryoAgeAtTransferPickerRow);
  *(void *)a1 = v27;
  *(void *)(a1 + 8) = v12;
  uint64_t v20 = v26;
  *(void *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v20;
  *(unsigned char *)(a1 + 32) = v14;
  sub_241510CB4(0, &qword_268D022A8, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyTimePeriodInputCell, sub_2415108D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for PregnancyInteractivePickerRow);
  uint64_t v22 = v21;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1 + *(int *)(v21 + 44), v6, v16);
  uint64_t v24 = (void *)(a1 + *(int *)(v22 + 48));
  *uint64_t v24 = 0xD000000000000018;
  v24[1] = 0x800000024166F6D0;
  uint64_t v25 = (uint64_t (**)())(a1 + *(int *)(v22 + 52));
  *uint64_t v25 = sub_2415108A4;
  v25[1] = (uint64_t (*)())v19;
  return result;
}

uint64_t sub_24150FEEC@<X0>(uint64_t a1@<X8>)
{
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  sub_241631368();
  type metadata accessor for PregnancyDatesInputViewModel();
  sub_241510904((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_241631388();
  uint64_t result = type metadata accessor for PregnancyTimePeriodInputCell();
  *(unsigned char *)(a1 + *(int *)(result + 20)) = 0;
  return result;
}

uint64_t sub_24150FFCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EmbryoTransferDatePickerRow(0);
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = v4;
  uint64_t v31 = (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_24162DA38();
  uint64_t v28 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v26 - v10;
  if (qword_268CF9830 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_268D02280;
  uint64_t v27 = qword_268D02278;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631378();
  swift_getKeyPath();
  sub_241631398();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v13 = v33;
  uint64_t v26 = v34;
  char v14 = v35;
  uint64_t v15 = v28;
  uint64_t v16 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v6, v1 + *(int *)(v3 + 20), v32);
  uint64_t v17 = v31;
  sub_241510D3C(v1, v31, type metadata accessor for EmbryoTransferDatePickerRow);
  unint64_t v18 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v19 = swift_allocObject();
  sub_241510B94(v17, v19 + v18, type metadata accessor for EmbryoTransferDatePickerRow);
  *(void *)a1 = v27;
  *(void *)(a1 + 8) = v12;
  uint64_t v20 = v26;
  *(void *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v20;
  *(unsigned char *)(a1 + 32) = v14;
  sub_241510CB4(0, &qword_268CFA5F8, (uint64_t (*)(uint64_t))sub_2411E2B10, sub_2411E2B70, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for PregnancyInteractivePickerRow);
  uint64_t v22 = v21;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1 + *(int *)(v21 + 44), v6, v16);
  uint64_t v24 = (void *)(a1 + *(int *)(v22 + 48));
  *uint64_t v24 = 0xD000000000000021;
  v24[1] = 0x800000024166F720;
  uint64_t v25 = (uint64_t (**)())(a1 + *(int *)(v22 + 52));
  *uint64_t v25 = sub_241510BFC;
  v25[1] = (uint64_t (*)())v19;
  return result;
}

uint64_t sub_2415103BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_241630668();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v27 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24162B718();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411E2BA4(0);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v26 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411E2CE8(0, &qword_268CFA618, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  MEMORY[0x270FA5388](v8 - 8);
  sub_2411E2CE8(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v22 - v12;
  sub_2411E2B10();
  uint64_t v25 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268CF9830 != -1) {
    swift_once();
  }
  uint64_t v30 = qword_268D02278;
  uint64_t v31 = qword_268D02280;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631378();
  swift_getKeyPath();
  sub_241631398();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_241631368();
  int v18 = *(unsigned __int8 *)(v29 + 16);
  swift_release();
  if (v18 == 1)
  {
    sub_24162B708();
    sub_2413F6204((uint64_t)v5, v26);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
  }
  else
  {
    uint64_t v19 = v26;
    if (qword_268CF9598 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_2411BF848(v22, (uint64_t)qword_268D23FE8);
    sub_241510D3C(v20, (uint64_t)v19, (uint64_t (*)(void))sub_2411E2BA4);
  }
  sub_241630658();
  sub_2411D662C();
  sub_24162FE58();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v28, v17, v25);
}

uint64_t sub_241510840()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24151085C(uint64_t a1)
{
  return sub_241510974(a1, 0xD000000000000028, 0x800000024166F6F0, &qword_268D02268, &qword_268D02270);
}

uint64_t sub_24151088C()
{
  return sub_241199770(type metadata accessor for EmbryoAgeAtTransferPickerRow);
}

uint64_t sub_2415108A4()
{
  return sub_241510C28(type metadata accessor for EmbryoAgeAtTransferPickerRow, (uint64_t (*)(uint64_t))sub_24150FEEC);
}

uint64_t sub_2415108D0()
{
  return sub_241510904(&qword_268D022B0, (void (*)(uint64_t))type metadata accessor for PregnancyTimePeriodInputCell);
}

uint64_t sub_241510904(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24151094C(uint64_t a1)
{
  return sub_241510974(a1, 0xD000000000000026, 0x800000024166F750, &qword_268D02278, &qword_268D02280);
}

uint64_t sub_241510974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v20[-v13];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v11, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v16 = sub_241631D38();
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
  *a4 = v16;
  *a5 = v18;
  return result;
}

uint64_t sub_241510B7C()
{
  return sub_241199770(type metadata accessor for EmbryoTransferDatePickerRow);
}

uint64_t sub_241510B94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241510BFC()
{
  return sub_241510C28(type metadata accessor for EmbryoTransferDatePickerRow, (uint64_t (*)(uint64_t))sub_2415103BC);
}

uint64_t sub_241510C28(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

void sub_241510CB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_241510D3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241510DA4()
{
  return sub_241510DF4(&qword_268D022B8, &qword_268D022A8, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyTimePeriodInputCell, sub_2415108D0);
}

uint64_t sub_241510DF4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241510CB4(255, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for PregnancyInteractivePickerRow);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241510E58()
{
  return sub_241510DF4((unint64_t *)&qword_268CFA620, &qword_268CFA5F8, (uint64_t (*)(uint64_t))sub_2411E2B10, sub_2411E2B70);
}

char *sub_241510EA8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_24162D2C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14ListFooterCell_label;
  id v14 = objc_allocWithZone(MEMORY[0x263F828E0]);
  id v15 = v4;
  id v16 = objc_msgSend(v14, sel_init);
  id v17 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F835B8]);
  objc_msgSend(v16, sel_setFont_, v17);

  objc_msgSend(v16, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v18 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v16, sel_setTextColor_, v18);

  objc_msgSend(v16, sel_setNumberOfLines_, 0);
  *(void *)&v4[v13] = v16;

  uint64_t v19 = (objc_class *)type metadata accessor for ListFooterCell();
  v28.receiver = v15;
  v28.super_class = v19;
  uint64_t v20 = (char *)objc_msgSendSuper2(&v28, sel_initWithFrame_, a1, a2, a3, a4);
  sub_24162D2B8();
  sub_24162D1C8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  objc_msgSend(v20, sel_directionalLayoutMargins);
  objc_msgSend(v20, sel_setDirectionalLayoutMargins_);
  id v21 = objc_msgSend(v20, sel_contentView);
  objc_msgSend(v21, sel_setPreservesSuperviewLayoutMargins_, 1);

  id v22 = objc_msgSend(v20, sel_contentView);
  uint64_t v23 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14ListFooterCell_label;
  objc_msgSend(v22, sel_addSubview_, *(void *)&v20[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14ListFooterCell_label]);

  id v24 = *(id *)&v20[v23];
  id v25 = objc_msgSend(v20, sel_contentView);
  id v26 = objc_msgSend(v25, sel_layoutMarginsGuide);

  sub_2412762B4(v26);
  return v20;
}

id sub_2415111F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ListFooterCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ListFooterCell()
{
  return self;
}

void sub_241511260()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin14ListFooterCell_label;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  id v3 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F835B8]);
  objc_msgSend(v2, sel_setFont_, v3);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v4 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  *(void *)&v0[v1] = v2;

  sub_241633038();
  __break(1u);
}

ValueMetadata *type metadata accessor for PregnancyExerciseArticleDataProvider()
{
  return &type metadata for PregnancyExerciseArticleDataProvider;
}

unint64_t sub_2415113B0()
{
  return 0xD00000000000003BLL;
}

uint64_t sub_2415113CC()
{
  return sub_241512604();
}

uint64_t sub_2415113FC()
{
  return sub_241512604();
}

uint64_t sub_241511434()
{
  return sub_241512604();
}

void sub_241511464()
{
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26B0181A0;
  uint64_t v1 = (void *)sub_241631CC8();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v1, v0, 0);

  if (!v2) {
    __break(1u);
  }
}

void sub_24151152C()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v152 = (char *)v137 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_241631CA8();
  uint64_t v154 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v4 = (char *)v137 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v137 - v6;
  sub_24123506C();
  uint64_t v8 = sub_24162C778();
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 72);
  uint64_t v153 = *(void *)(v8 - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
  uint64_t v144 = v9;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_241640D60;
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v12 = (id)qword_26B0181A0;
  uint64_t v13 = (void *)sub_241631CC8();
  id v14 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v13, v12, 0);

  if (v14)
  {
    v137[1] = v11;
    unint64_t v15 = v11 + v10;
    unint64_t v148 = v11 + v10;
    *(void *)unint64_t v15 = v14;
    *(unsigned char *)(v15 + 8) = 0;
    uint64_t v16 = *MEMORY[0x263F42AB8];
    id v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v153 + 104);
    v153 += 104;
    uint64_t v147 = v17;
    v17((uint64_t *)(v11 + v10), v16, v8);
    id v18 = (uint64_t *)(v11 + v10 + v144);
    uint64_t v19 = v144;
    sub_241631C38();
    uint64_t v20 = v154;
    uint64_t v149 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
    uint64_t v146 = v154 + 16;
    v149(v4, v7, v2);
    id v21 = (id)qword_26B0181A0;
    sub_24162B7D8();
    unint64_t v150 = 0x800000024166F800;
    uint64_t v22 = sub_241631D38();
    uint64_t v24 = v23;
    long long v151 = *(void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v154 = v20 + 8;
    v151(v7, v2);
    uint64_t *v18 = v22;
    v18[1] = v24;
    uint64_t v25 = *MEMORY[0x263F42AC0];
    uint64_t v145 = v8;
    v147(v18, v25, v8);
    uint64_t v139 = 2 * v19;
    unint64_t v26 = v148 + 2 * v19;
    unint64_t v142 = 0xD000000000000013;
    sub_241631C38();
    uint64_t v140 = v2;
    uint64_t v27 = v149;
    v149(v4, v7, v2);
    id v28 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v29 = sub_241631D38();
    uint64_t v31 = v30;
    uint64_t v32 = v2;
    uint64_t v33 = v151;
    v151(v7, v32);
    *(void *)unint64_t v26 = v29;
    *(void *)(v26 + 8) = v31;
    *(unsigned char *)(v26 + 16) = 0;
    unsigned int v141 = *MEMORY[0x263F42AE0];
    uint64_t v34 = (void (*)(uint64_t *))v147;
    ((void (*)(unint64_t))v147)(v26);
    char v35 = (uint64_t *)(v148 + v139 + v144);
    sub_241631C38();
    uint64_t v36 = v140;
    v27(v4, v7, v140);
    id v37 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v38 = sub_241631D38();
    uint64_t v40 = v39;
    v33(v7, v36);
    *char v35 = v38;
    v35[1] = v40;
    v35[2] = 0;
    LODWORD(v139) = *MEMORY[0x263F42A80];
    v34(v35);
    uint64_t v41 = v144;
    uint64_t v138 = 4 * v144;
    unint64_t v42 = v148;
    unint64_t v43 = v148 + 4 * v144;
    sub_241631C38();
    uint64_t v143 = v4;
    uint64_t v44 = v149;
    v149(v4, v7, v36);
    id v45 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v46 = sub_241631D38();
    uint64_t v48 = v47;
    uint64_t v49 = v36;
    long long v50 = v151;
    v151(v7, v49);
    *(void *)unint64_t v43 = v46;
    *(void *)(v43 + 8) = v48;
    *(unsigned char *)(v43 + 16) = 0;
    uint64_t v51 = v145;
    v147((uint64_t *)(v42 + 4 * v41), v141, v145);
    long long v52 = (uint64_t *)(v42 + v138 + v41);
    sub_241631C38();
    uint64_t v53 = v140;
    v44(v143, v7, v140);
    id v54 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v55 = sub_241631D38();
    uint64_t v57 = v56;
    v50(v7, v53);
    uint64_t *v52 = v55;
    v52[1] = v57;
    v52[2] = 0;
    char v58 = v147;
    v147(v52, v139, v51);
    unint64_t v59 = v148 + 6 * v41;
    sub_241631C38();
    char v60 = v149;
    v149(v143, v7, v53);
    id v61 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v62 = sub_241631D38();
    uint64_t v64 = v63;
    v151(v7, v53);
    *(void *)unint64_t v59 = v62;
    *(void *)(v59 + 8) = v64;
    *(unsigned char *)(v59 + 16) = 0;
    v58((uint64_t *)v59, v141, v145);
    uint64_t v138 = 8 * v144;
    unint64_t v65 = v148 + 7 * v144;
    sub_241631C38();
    v60(v143, v7, v53);
    id v66 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v67 = sub_241631D38();
    uint64_t v69 = v68;
    v151(v7, v53);
    *(void *)unint64_t v65 = v67;
    *(void *)(v65 + 8) = v69;
    *(unsigned char *)(v65 + 16) = 0;
    uint64_t v70 = v141;
    v147((uint64_t *)v65, v141, v145);
    unint64_t v71 = v148;
    unint64_t v72 = v148 + v138;
    sub_241631C38();
    v149(v143, v7, v53);
    id v73 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v74 = sub_241631D38();
    uint64_t v76 = v75;
    uint64_t v77 = v140;
    v151(v7, v140);
    *(void *)unint64_t v72 = v74;
    *(void *)(v72 + 8) = v76;
    *(unsigned char *)(v72 + 16) = 0;
    v147((uint64_t *)v72, v70, v145);
    unint64_t v78 = v71 + v138 + v144;
    sub_241631C38();
    v149(v143, v7, v77);
    id v79 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v80 = sub_241631D38();
    uint64_t v82 = v81;
    uint64_t v83 = v151;
    v151(v7, v77);
    *(void *)unint64_t v78 = v80;
    *(void *)(v78 + 8) = v82;
    *(unsigned char *)(v78 + 16) = 0;
    uint64_t v84 = v145;
    v147((uint64_t *)v78, v141, v145);
    unint64_t v85 = v148;
    uint64_t v86 = (uint64_t *)(v148 + 10 * v144);
    sub_241631C38();
    v149(v143, v7, v77);
    id v87 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v88 = sub_241631D38();
    uint64_t v90 = v89;
    v83(v7, v77);
    uint64_t *v86 = v88;
    v86[1] = v90;
    v86[2] = 0;
    v147(v86, v139, v84);
    uint64_t v91 = v144;
    unint64_t v92 = v85 + 11 * v144;
    sub_241631C38();
    v149(v143, v7, v77);
    id v93 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v94 = sub_241631D38();
    uint64_t v96 = v95;
    uint64_t v97 = v77;
    v151(v7, v77);
    *(void *)unint64_t v92 = v94;
    *(void *)(v92 + 8) = v96;
    *(unsigned char *)(v92 + 16) = 0;
    uint64_t v98 = v141;
    v147((uint64_t *)v92, v141, v145);
    unint64_t v99 = v148 + 12 * v91;
    sub_241631C38();
    uint64_t v100 = v143;
    v149(v143, v7, v97);
    id v101 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v102 = sub_241631D38();
    uint64_t v104 = v103;
    v151(v7, v97);
    *(void *)unint64_t v99 = v102;
    *(void *)(v99 + 8) = v104;
    *(unsigned char *)(v99 + 16) = 0;
    uint64_t v105 = v145;
    v147((uint64_t *)v99, v98, v145);
    unint64_t v106 = v148;
    uint64_t v107 = v144;
    uint64_t v108 = (uint64_t *)(v148 + 13 * v144);
    sub_241631C38();
    v149(v100, v7, v97);
    id v109 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v110 = sub_241631D38();
    uint64_t v112 = v111;
    uint64_t v113 = v140;
    v151(v7, v140);
    *uint64_t v108 = v110;
    v108[1] = v112;
    v108[2] = 0;
    uint64_t v114 = v105;
    uint64_t v115 = v147;
    v147((uint64_t *)(v106 + 13 * v107), v139, v114);
    unint64_t v116 = v106 + 14 * v107;
    uint64_t v117 = v113;
    sub_241631C38();
    long long v118 = v143;
    uint64_t v119 = v149;
    v149(v143, v7, v113);
    id v120 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v121 = v118;
    uint64_t v122 = sub_241631D38();
    uint64_t v124 = v123;
    v151(v7, v113);
    *(void *)unint64_t v116 = v122;
    *(void *)(v116 + 8) = v124;
    *(unsigned char *)(v116 + 16) = 0;
    uint64_t v125 = v141;
    v115((uint64_t *)v116, v141, v145);
    uint64_t v139 = 16 * v144;
    unint64_t v126 = v148 + 15 * v144;
    sub_241631C38();
    v119(v121, v7, v113);
    id v127 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v128 = sub_241631D38();
    uint64_t v130 = v129;
    v151(v7, v113);
    *(void *)unint64_t v126 = v128;
    *(void *)(v126 + 8) = v130;
    *(unsigned char *)(v126 + 16) = 0;
    uint64_t v131 = v145;
    v115((uint64_t *)v126, v125, v145);
    unint64_t v132 = v148 + v139;
    sub_241631C38();
    v149(v121, v7, v113);
    id v133 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v134 = sub_241631D38();
    uint64_t v136 = v135;
    v151(v7, v117);
    *(void *)unint64_t v132 = v134;
    *(void *)(v132 + 8) = v136;
    *(unsigned char *)(v132 + 16) = 0;
    v115((uint64_t *)v132, v141, v131);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_241512604()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241631CA8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v11[-v6];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v9 = sub_241631D38();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

id sub_2415127F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27StatisticsViewAllHeaderView_headerLabel;
  id v5 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v6 = v2;
  *(void *)&v2[v4] = objc_msgSend(v5, sel_init);
  uint64_t v7 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27StatisticsViewAllHeaderView_headerSeparator;
  *(void *)&v6[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46968]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v8 = &v6[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27StatisticsViewAllHeaderView_headerLabelText];
  *(void *)id v8 = 0;
  *((void *)v8 + 1) = 0;

  if (a2)
  {
    uint64_t v9 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  v13.receiver = v6;
  v13.super_class = (Class)type metadata accessor for StatisticsViewAllHeaderView();
  id v10 = objc_msgSendSuper2(&v13, sel_initWithReuseIdentifier_, v9);

  id v11 = v10;
  sub_24151296C();

  return v11;
}

uint64_t sub_24151296C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_24162D2C8();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x270FA5388](v2).n128_u64[0];
  uint64_t v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(v0, sel_contentView, v4);
  id v8 = self;
  id v9 = objc_msgSend(v8, sel_systemBackgroundColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v9);

  uint64_t v10 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27StatisticsViewAllHeaderView_headerSeparator;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27StatisticsViewAllHeaderView_headerSeparator], sel_setSeparatorThickness_, 0.5);
  id v11 = *(id *)&v1[v10];
  id v12 = objc_msgSend(v8, sel_opaqueSeparatorColor);
  objc_msgSend(v11, sel_setColor_, v12);

  objc_super v13 = *(void **)&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27StatisticsViewAllHeaderView_headerLabel];
  sub_2411B9D00(0, &qword_26B012140);
  id v14 = (void *)sub_241632898();
  objc_msgSend(v13, sel_setFont_, v14);

  id v15 = objc_msgSend(v8, sel_secondaryLabelColor);
  objc_msgSend(v13, sel_setTextColor_, v15);

  objc_msgSend(v13, sel_setNumberOfLines_, 0);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(*(id *)&v1[v10], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v16 = objc_msgSend(v1, sel_contentView);
  uint64_t v68 = v10;
  objc_msgSend(v16, sel_addSubview_, *(void *)&v1[v10]);

  id v17 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v17, sel_addSubview_, v13);

  id v18 = objc_msgSend(v1, sel_contentView);
  sub_24162D2B8();
  sub_24162D1C8();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  v19(v6, v2);
  objc_msgSend(v18, sel_directionalLayoutMargins);
  objc_msgSend(v18, sel_setDirectionalLayoutMargins_);

  id v20 = objc_msgSend(v1, sel_contentView);
  sub_24162D2B8();
  sub_24162D1C8();
  v19(v6, v2);
  objc_msgSend(v20, sel_directionalLayoutMargins);
  objc_msgSend(v20, sel_setDirectionalLayoutMargins_);

  sub_2411BFC90();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24163ADC0;
  id v22 = objc_msgSend(v13, sel_leadingAnchor);
  id v23 = objc_msgSend(v1, sel_contentView);
  id v24 = objc_msgSend(v23, sel_leadingAnchor);

  id v25 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v25, (SEL)&selRef_traitCollectionDidChange_);
  double v27 = v26;

  id v28 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, v27);
  *(void *)(v21 + 32) = v28;
  id v29 = objc_msgSend(v13, sel_topAnchor);
  id v30 = objc_msgSend(v1, (SEL)&selRef_traitCollection);
  id v31 = objc_msgSend(v30, sel_layoutMarginsGuide);

  id v32 = objc_msgSend(v31, sel_topAnchor);
  if (qword_268CF9838 != -1) {
    swift_once();
  }
  id v33 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v32, *(double *)&qword_268D022C8);

  *(void *)(v21 + 40) = v33;
  id v34 = objc_msgSend(v1, (SEL)&selRef_traitCollection);
  id v35 = objc_msgSend(v34, sel_trailingAnchor);

  id v36 = objc_msgSend(v13, sel_trailingAnchor);
  id v37 = objc_msgSend(v1, (SEL)&selRef_traitCollection);
  objc_msgSend(v37, sel_directionalLayoutMargins);
  double v39 = v38;

  id v40 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v36, v39);
  *(void *)(v21 + 48) = v40;
  uint64_t v72 = v21;
  sub_241631F48();
  uint64_t v41 = self;
  uint64_t v69 = sub_2411B9D00(0, (unint64_t *)&qword_26B012130);
  unint64_t v42 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  id v70 = v41;
  objc_msgSend(v41, sel_activateConstraints_, v42);

  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_2416444E0;
  uint64_t v44 = v68;
  id v45 = objc_msgSend(*(id *)&v1[v68], sel_leadingAnchor);
  id v46 = objc_msgSend(v1, (SEL)&selRef_traitCollection);
  id v47 = objc_msgSend(v46, sel_leadingAnchor);

  id v48 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v47);
  *(void *)(v43 + 32) = v48;
  id v49 = objc_msgSend(*(id *)&v1[v44], sel_topAnchor);
  id v50 = objc_msgSend(v13, sel_bottomAnchor);
  if (qword_268CF9840 != -1) {
    swift_once();
  }
  id v51 = objc_msgSend(v49, (SEL)&selRef_hkmc_highContrastRegularDayColor + 7, v50, *(double *)&qword_268D022D0);

  *(void *)(v43 + 40) = v51;
  id v52 = objc_msgSend(v1, (SEL)&selRef_traitCollection);
  id v53 = objc_msgSend(v52, sel_trailingAnchor);

  id v54 = objc_msgSend(*(id *)&v1[v44], sel_trailingAnchor);
  id v55 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v54);

  *(void *)(v43 + 48) = v55;
  id v56 = objc_msgSend(v1, (SEL)&selRef_traitCollection);
  id v57 = objc_msgSend(v56, sel_bottomAnchor);

  id v58 = objc_msgSend(*(id *)&v1[v44], sel_bottomAnchor);
  id v59 = objc_msgSend(v57, sel_constraintEqualToAnchor_, v58);

  *(void *)(v43 + 56) = v59;
  id v60 = objc_msgSend(*(id *)&v1[v44], sel_heightAnchor);
  id v61 = objc_msgSend(v60, sel_constraintEqualToConstant_, 0.5);

  *(void *)(v43 + 64) = v61;
  uint64_t v72 = v43;
  sub_241631F48();
  uint64_t v62 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v70, sel_activateConstraints_, v62);

  sub_2411E58B4();
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_241637EE0;
  uint64_t v64 = sub_24162F5B8();
  uint64_t v65 = MEMORY[0x263F82018];
  *(void *)(v63 + 32) = v64;
  *(void *)(v63 + 40) = v65;
  sub_241632918();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_2415132C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StatisticsViewAllHeaderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StatisticsViewAllHeaderView()
{
  return self;
}

void sub_24151337C()
{
  qword_268D022C8 = 0x4036000000000000;
}

void sub_24151338C()
{
  qword_268D022D0 = 0x4018000000000000;
}

void sub_24151339C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27StatisticsViewAllHeaderView_headerLabel);
  sub_2411B9D00(0, &qword_26B012140);
  id v2 = (id)sub_241632898();
  objc_msgSend(v1, sel_setFont_, v2);
}

void sub_241513444()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27StatisticsViewAllHeaderView_headerLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v2 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27StatisticsViewAllHeaderView_headerSeparator;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46968]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = &v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin27StatisticsViewAllHeaderView_headerLabelText];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;

  sub_241633038();
  __break(1u);
}

uint64_t sub_241513510()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void **)(result + 24);
    aBlock[4] = sub_2415137AC;
    aBlock[5] = result;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241450904;
    void aBlock[3] = &unk_26F575740;
    uint64_t v2 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v1, sel_notifyObservers_, v2);
    _Block_release(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_241513604(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRetain();
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4) {
    sub_241357554(a2);
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_241513678()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2415136C0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2415136DC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserCharacteristics.Age()
{
  return &type metadata for UserCharacteristics.Age;
}

uint64_t sub_24151370C(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = *(unsigned __int8 *)(a2 + 8);
  if ((v3 & 1) == 0) {
    return (*(void *)a1 == *(void *)a2) & ~result;
  }
  return result;
}

unint64_t sub_241513734()
{
  unint64_t result = qword_26B010848;
  if (!qword_26B010848)
  {
    type metadata accessor for UserCharacteristics();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B010848);
  }
  return result;
}

uint64_t sub_24151376C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2415137A4()
{
  return sub_241513510();
}

uint64_t sub_2415137AC(uint64_t a1)
{
  return sub_241513604(a1, v1);
}

uint64_t sub_2415137B4()
{
  uint64_t v0 = sub_24162EFA8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  char v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  uint64_t v4 = sub_24162EF98();
  os_log_type_t v5 = sub_2416322B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136446210;
    uint64_t v8 = sub_2416333E8();
    uint64_t v11 = sub_2411B6898(v8, v9, &v12);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v4, v5, "[%{public}s] Notifying of days updated", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v7, -1, -1);
    MEMORY[0x245621640](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_24151398C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CycleChartDayProvider()
{
  return self;
}

void sub_241513A00(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_24162EFA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v37 - v9;
  uint64_t v11 = sub_2416314D8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (void *)((char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2411B7D14();
  *id v14 = sub_2416325A8();
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  char v15 = sub_241631508();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    id v39 = a1;
    sub_24162EF48();
    id v16 = sub_24162EF98();
    os_log_type_t v17 = sub_2416322B8();
    BOOL v18 = os_log_type_enabled(v16, v17);
    v37[1] = v3;
    if (v18)
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v38 = v4;
      id v20 = (uint8_t *)v19;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v41 = v21;
      *(_DWORD *)id v20 = 136446210;
      uint64_t v22 = sub_2416333E8();
      uint64_t v40 = sub_2411B6898(v22, v23, &v41);
      sub_241632C28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24118E000, v16, v17, "[%{public}s] Received updated view models", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245621640](v21, -1, -1);
      id v24 = v20;
      uint64_t v4 = v38;
      MEMORY[0x245621640](v24, -1, -1);
    }

    id v25 = *(void (**)(char *, uint64_t))(v5 + 8);
    v25(v10, v4);
    id v26 = objc_msgSend(v39, sel_dayViewModelAtIndex_, objc_msgSend(v39, sel_activeDayRange));
    if (objc_msgSend(v26, sel_isFetched)
      && (id v27 = objc_msgSend(v26, sel_daySummary), v27, v27))
    {
      sub_241247C18();
      sub_241514738((unint64_t *)&qword_268CFD3A8, (void (*)(uint64_t))sub_241247C18);
      sub_24162FBD8();
    }
    else
    {
      sub_24162EF48();
      id v28 = sub_24162EF98();
      os_log_type_t v29 = sub_2416322E8();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v38 = v4;
        uint64_t v30 = swift_slowAlloc();
        id v39 = v7;
        id v31 = (uint8_t *)v30;
        uint64_t v32 = swift_slowAlloc();
        uint64_t v41 = v32;
        *(_DWORD *)id v31 = 136446210;
        uint64_t v33 = sub_2416333E8();
        uint64_t v40 = sub_2411B6898(v33, v34, &v41);
        sub_241632C28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v28, v29, "[%{public}s] Ignoring VMP update as we haven't completed fetched", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245621640](v32, -1, -1);
        MEMORY[0x245621640](v31, -1, -1);

        uint64_t v36 = v38;
        id v35 = (char *)v39;
      }
      else
      {

        id v35 = v7;
        uint64_t v36 = v4;
      }
      v25(v35, v36);
    }
  }
  else
  {
    __break(1u);
  }
}

void *sub_241513F80(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v28 = a2;
  uint64_t v29 = a3;
  uint64_t v31 = *v3;
  sub_24151449C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2415145EC();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v34 = v11;
  uint64_t v35 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v30 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24121530C();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = sub_24162BA08();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  BOOL v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241247C18();
  swift_allocObject();
  v3[5] = sub_24162FAE8();
  v3[2] = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a3, v15);
  type metadata accessor for SleepingWristTemperatureBaselineRelativeDataSource();
  swift_allocObject();
  id v19 = a1;
  id v20 = v28;
  uint64_t v21 = sub_24126765C(v20, (uint64_t)v18);

  objc_msgSend(v19, sel_minimumBufferDuration);
  uint64_t v37 = (uint64_t)v21;
  sub_24151468C();
  swift_allocObject();
  v4[3] = sub_241631598();
  swift_retain();
  objc_msgSend(v19, sel_activeDayRange);
  sub_241632368();
  sub_2416315A8();
  swift_release();
  uint64_t v22 = sub_2416315B8();
  uint64_t v36 = v4[5];
  uint64_t v37 = v22;
  sub_241514584();
  sub_241514738(&qword_268D02300, (void (*)(uint64_t))sub_241514584);
  sub_241514738(&qword_268CFB700, (void (*)(uint64_t))sub_241247C18);
  sub_24162FCD8();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v31;
  sub_241514738(&qword_268D02310, (void (*)(uint64_t))sub_24151449C);
  unint64_t v23 = v30;
  uint64_t v24 = v32;
  sub_24162FCE8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v24);
  sub_241514738(&qword_268D02320, (void (*)(uint64_t))sub_2415145EC);
  uint64_t v25 = v34;
  uint64_t v26 = sub_24162FCB8();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v25);
  v4[4] = v26;
  objc_msgSend(v19, sel_registerObserver_, v4);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v29, v15);
  return v4;
}

void sub_24151449C()
{
  if (!qword_268D022F0)
  {
    sub_241514584();
    sub_241247C18();
    sub_241514738(&qword_268D02300, (void (*)(uint64_t))sub_241514584);
    sub_241514738(&qword_268CFB700, (void (*)(uint64_t))sub_241247C18);
    unint64_t v0 = sub_24162F878();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D022F0);
    }
  }
}

void sub_241514584()
{
  if (!qword_268D022F8)
  {
    sub_2411FEB18();
    unint64_t v0 = sub_24162FAF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D022F8);
    }
  }
}

void sub_2415145EC()
{
  if (!qword_268D02308)
  {
    sub_24151449C();
    sub_241514738(&qword_268D02310, (void (*)(uint64_t))sub_24151449C);
    unint64_t v0 = sub_24162F958();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02308);
    }
  }
}

void sub_24151468C()
{
  if (!qword_268D02318)
  {
    type metadata accessor for SleepingWristTemperatureBaselineRelativeDataSource();
    sub_241514738(&qword_268CFF600, (void (*)(uint64_t))type metadata accessor for SleepingWristTemperatureBaselineRelativeDataSource);
    unint64_t v0 = sub_2416315C8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02318);
    }
  }
}

uint64_t sub_241514720()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241514730()
{
  return sub_2415137B4();
}

uint64_t sub_241514738(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241514780()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2415147E4()
{
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v0 + qword_26B0108A0);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v0 + qword_26B010AB8);
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t sub_241514844()
{
  objc_msgSend(*(id *)(v0 + qword_26B010AE0), sel_unregisterObserver_, v0);
  uint64_t v1 = sub_24162EDB8();
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v1 + qword_26B0108A0);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0(v1 + qword_26B010AB8);
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2415148E4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(result + 8);
  uint64_t v3 = *(void *)(result + 16);
  char v4 = *(unsigned char *)(result + 24);
  uint64_t v5 = *(void *)(result + 32);
  char v6 = *(unsigned char *)(result + 40);
  *(void *)a2 = *(void *)result;
  *(unsigned char *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(unsigned char *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(unsigned char *)(a2 + 40) = v6;
  return result;
}

id sub_241514918@<X0>(long long *a1@<X0>, void *a2@<X8>)
{
  long long v3 = a1[1];
  long long v5 = *a1;
  v6[0] = v3;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  id result = sub_241515224((uint64_t)&v5);
  *a2 = result;
  return result;
}

uint64_t sub_24151495C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162C1C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  v12[1] = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(void *)(v10 + ((v8 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  sub_241514F10(0);
  sub_2411C8510();
  sub_241514F30();
  sub_24162FCE8();
  return swift_release();
}

uint64_t sub_241514AE8@<X0>(uint64_t **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v37 = a2;
  uint64_t v6 = sub_24162C128();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24162C1C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24162EFA8();
  uint64_t v36 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  if (HKShowSensitiveLogItems())
  {
    sub_24162EF48();
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_24162EF98();
    os_log_type_t v18 = sub_2416322E8();
    int v34 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      os_log_t v31 = v17;
      uint64_t v20 = v19;
      uint64_t v32 = swift_slowAlloc();
      uint64_t v39 = v32;
      *(_DWORD *)uint64_t v20 = 136446466;
      uint64_t v33 = v13;
      uint64_t v21 = sub_2416333E8();
      uint64_t v38 = sub_2411B6898(v21, v22, &v39);
      sub_241632C28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v38 = (uint64_t)v16;
      sub_2411C060C();
      _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
      uint64_t v23 = sub_241631D78();
      uint64_t v38 = sub_2411B6898(v23, v24, &v39);
      sub_241632C28();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v25 = v31;
      _os_log_impl(&dword_24118E000, v31, (os_log_type_t)v34, "[%{public}s] Received new filter for Menstrual Cycle Discover feed: %s", (uint8_t *)v20, 0x16u);
      uint64_t v26 = v32;
      swift_arrayDestroy();
      MEMORY[0x245621640](v26, -1, -1);
      MEMORY[0x245621640](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v33);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v13);
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v37, v9);
  sub_24162C0D8();
  uint64_t v27 = type metadata accessor for MenstrualCyclesArticlesGenerator();
  swift_allocObject();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  id v28 = sub_241570560((uint64_t)v12, (uint64_t)v8, v16);
  a4[3] = v27;
  uint64_t result = sub_2411A0240(&qword_26B0127F0, (void (*)(uint64_t))type metadata accessor for MenstrualCyclesArticlesGenerator);
  a4[4] = result;
  *a4 = v28;
  return result;
}

void sub_241514ED8()
{
}

uint64_t sub_241514F08()
{
  return type metadata accessor for MenstrualCyclesArticlesGeneratorPipeline();
}

void sub_241514F10(uint64_t a1)
{
}

uint64_t sub_241514F30()
{
  return sub_2411A0240((unint64_t *)&unk_26B011210, sub_241514F10);
}

uint64_t sub_241514F64()
{
  uint64_t v1 = sub_24162C1C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24151503C()
{
  uint64_t v1 = *(void *)(sub_24162C1C8() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24151495C(v3, v0 + v2, v4);
}

uint64_t sub_2415150DC()
{
  uint64_t v1 = sub_24162C1C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241515178@<X0>(uint64_t **a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24162C1C8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241514AE8(a1, v2 + v6, v7, a2);
}

id sub_241515224(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    goto LABEL_6;
  }
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 != 2)
  {
    if (v2 == 1)
    {
      sub_2411A02EC(0, (unint64_t *)&qword_26B0121F0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      unint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24163B390;
      sub_24122BFD4();
      id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_pregnancyType);
      if (result)
      {
        *(void *)(inited + 32) = result;
        goto LABEL_14;
      }
      goto LABEL_26;
    }
LABEL_6:
    sub_241515514(a1 + 24, (uint64_t)&v13);
    sub_241515514((uint64_t)&v13, (uint64_t)&v14);
    if ((v14 & 1) == 0)
    {
      if (*(void *)(a1 + 16) == 2
        || (sub_24151559C(a1, (uint64_t)v12), sub_24151559C((uint64_t)v12, (uint64_t)&v15), (v16 & 1) == 0)
        && v15 - 56 < 0xFFFFFFFFFFFFFFD4)
      {
        if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_241633068())
        {
          sub_2411CB294(MEMORY[0x263F8EE78]);
          return (id)v5;
        }
        return (id)MEMORY[0x263F8EE88];
      }
    }
    sub_2411A02EC(0, (unint64_t *)&qword_26B0121F0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    unint64_t v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_24163B390;
    sub_24122BFD4();
    id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_menstrualFlowType);
    if (result)
    {
      *(void *)(v10 + 32) = result;
      sub_241631F48();
      unint64_t v8 = v10;
      if (v10 >> 62)
      {
LABEL_15:
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        uint64_t v9 = sub_241633068();
        swift_bridgeObjectRelease();
        if (!v9)
        {
LABEL_16:
          swift_bridgeObjectRelease();
          return (id)MEMORY[0x263F8EE88];
        }
LABEL_23:
        sub_2411CB294(v8);
        uint64_t v6 = v11;
        swift_bridgeObjectRelease();
        return (id)v6;
      }
LABEL_22:
      if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_16;
      }
      goto LABEL_23;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  sub_2411A02EC(0, (unint64_t *)&qword_26B0121F0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24163A670;
  sub_24122BFD4();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id result = objc_msgSend(ObjCClassFromMetadata, sel_menstrualFlowType);
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  *(void *)(inited + 32) = result;
  id result = objc_msgSend(ObjCClassFromMetadata, sel_pregnancyType);
  if (result)
  {
    *(void *)(inited + 40) = result;
LABEL_14:
    unint64_t v15 = inited;
    sub_241631F48();
    unint64_t v8 = inited;
    if (inited >> 62) {
      goto LABEL_15;
    }
    goto LABEL_22;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_241515514(uint64_t a1, uint64_t a2)
{
  sub_2411A02EC(0, (unint64_t *)&qword_26B0106A0, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24151559C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t getEnumTagSinglePayload for MenstrualCyclesArticlesGeneratorPipeline.UserData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MenstrualCyclesArticlesGeneratorPipeline.UserData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)id result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MenstrualCyclesArticlesGeneratorPipeline.UserData()
{
  return &type metadata for MenstrualCyclesArticlesGeneratorPipeline.UserData;
}

uint64_t type metadata accessor for ReviewPregnancyInMedicalIDActionHandler(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D02328);
}

uint64_t sub_2415156D8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241515718(void *a1)
{
  sub_241517BF4(0, &qword_268D02360, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  sub_2411B6854(a1, a1[3]);
  sub_241517B1C();
  sub_2416333A8();
  v9[15] = 0;
  sub_24162B788();
  sub_241517A8C(&qword_268D01D18, MEMORY[0x263F07508]);
  sub_2416331A8();
  if (!v1)
  {
    type metadata accessor for ReviewPregnancyInMedicalIDTileDismissalData(0);
    v9[14] = 1;
    sub_24162B718();
    sub_241517A8C(&qword_268CFA7D8, MEMORY[0x263F07490]);
    sub_2416331A8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24151592C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v25 = sub_24162B718();
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_24162B788();
  uint64_t v24 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v26 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241517BF4(0, &qword_268D02350, MEMORY[0x263F8E040]);
  uint64_t v29 = v7;
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = type metadata accessor for ReviewPregnancyInMedicalIDTileDismissalData(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411B6854(a1, a1[3]);
  sub_241517B1C();
  sub_241633398();
  if (v2) {
    return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)a1);
  }
  uint64_t v21 = v10;
  char v13 = v12;
  uint64_t v15 = v24;
  uint64_t v14 = v25;
  char v31 = 0;
  sub_241517A8C(&qword_268D01D28, MEMORY[0x263F07508]);
  char v16 = v26;
  sub_241633158();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v20 = (uint64_t)v13;
  v17(v13, v16, v28);
  char v30 = 1;
  sub_241517A8C(&qword_268CFA7F8, MEMORY[0x263F07490]);
  sub_241633158();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v29);
  uint64_t v18 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v20 + *(int *)(v21 + 20), v5, v14);
  sub_241517B90(v18, v23);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)a1);
  return sub_241517D34(v18, type metadata accessor for ReviewPregnancyInMedicalIDTileDismissalData);
}

uint64_t sub_241515D70()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x5555656C706D6173;
  }
}

uint64_t sub_241515DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_241518774(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241515DDC(uint64_t a1)
{
  unint64_t v2 = sub_241517B1C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241515E18(uint64_t a1)
{
  unint64_t v2 = sub_241517B1C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241515E54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24151592C(a1, a2);
}

uint64_t sub_241515E6C(void *a1)
{
  return sub_241515718(a1);
}

uint64_t sub_241515E84()
{
  if ((_s24MenstrualCyclesAppPlugin34ReviewPregnancyInMedicalIDUserDataV23__derived_struct_equalsySbAC_ACtFZ_0() & 1) == 0) {
    return 0;
  }

  return sub_24162B698();
}

uint64_t sub_241515EEC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_24162E178();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241517DAC(0, &qword_268D02368, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDUserData);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v33 = (uint64_t)&v29 - v6;
  uint64_t v7 = (void *)sub_24162EFA8();
  uint64_t v8 = *(v7 - 1);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  uint64_t v11 = sub_24162EF98();
  os_log_type_t v12 = sub_2416322E8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v36 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    id v30 = v7;
    uint64_t v34 = v1;
    swift_getMetatypeMetadata();
    uint64_t v15 = sub_241631D78();
    uint64_t v34 = sub_2411B6898(v15, v16, &v36);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v34 = 0xD00000000000001CLL;
    unint64_t v35 = 0x800000024166FB70;
    uint64_t v17 = sub_241631D78();
    uint64_t v34 = sub_2411B6898(v17, v18, &v36);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v11, v12, "[%s] %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245621640](v14, -1, -1);
    MEMORY[0x245621640](v13, -1, -1);

    (*(void (**)(char *, id))(v8 + 8))(v10, v30);
  }
  else
  {

    (*(void (**)(char *, void *))(v8 + 8))(v10, v7);
  }
  uint64_t v19 = v33;
  sub_241516420(v33);
  sub_24162DE98();
  sub_24162E148();
  uint64_t v20 = v32;
  uint64_t v31 = *(void *)(v31 + 8);
  ((void (*)(char *, uint64_t))v31)(v4, v32);
  uint64_t v21 = (void *)sub_24162D3A8();
  swift_release();
  sub_24162C828();
  id v30 = (id)MEMORY[0x245619CE0](v21);
  id v22 = objc_msgSend(self, sel_standardConfiguration);
  objc_msgSend(v22, sel_setEntryPoint_, 3);
  objc_msgSend(v22, sel_setShouldShowDonateLifeRegistrationIfAvailable_, 1);
  objc_msgSend(v22, sel_setAccessPoint_, 2);
  objc_msgSend(v22, sel_setShouldShowDoneButton_, 1);
  id v23 = v21;
  uint64_t v24 = (void *)sub_24162C808();
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F54F70]), sel_initWithHealthStore_medicalIDData_displayConfiguration_, v23, v24, v22);

  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v25);
  sub_24162DE98();
  uint64_t v27 = (void *)sub_24162E168();
  ((void (*)(char *, uint64_t))v31)(v4, v20);
  objc_msgSend(v27, sel_presentViewController_animated_completion_, v26, 1, 0);

  sub_241516B6C(v19);
  return sub_241517C58(v19, &qword_268D02368, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDUserData);
}

uint64_t sub_241516420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  v33[2] = *v1;
  uint64_t v2 = sub_24162EFA8();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v34 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v35 = (char *)v33 - v5;
  uint64_t v6 = type metadata accessor for ReviewPregnancyInMedicalIDUserData();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v33 - v10;
  uint64_t v12 = sub_24162E178();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v33[1] = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v33 - v16;
  sub_24162DE98();
  uint64_t v18 = sub_24162E158();
  unint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  if (v20 >> 60 == 15)
  {
    uint64_t v34 = (char *)v6;
    if (HKShowSensitiveLogItems())
    {
      uint64_t v21 = v35;
      sub_24162EF48();
      swift_retain_n();
      id v22 = sub_24162EF98();
      os_log_type_t v23 = sub_2416322C8();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        v33[0] = swift_slowAlloc();
        uint64_t v41 = v33[0];
        *(_DWORD *)uint64_t v24 = 136315394;
        uint64_t v25 = sub_2416333E8();
        uint64_t v40 = sub_2411B6898(v25, v26, &v41);
        sub_241632C28();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 12) = 2080;
        sub_24162DE98();
        uint64_t v27 = sub_241631D48();
        uint64_t v40 = sub_2411B6898(v27, v28, &v41);
        sub_241632C28();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24118E000, v22, v23, "[%s] Context contains nil user data: %s", (uint8_t *)v24, 0x16u);
        uint64_t v29 = v33[0];
        swift_arrayDestroy();
        MEMORY[0x245621640](v29, -1, -1);
        MEMORY[0x245621640](v24, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v37);
    }
    uint64_t v31 = 1;
    uint64_t v30 = v39;
    uint64_t v6 = (uint64_t)v34;
  }
  else
  {
    sub_24162ADF8();
    swift_allocObject();
    sub_241251FD0(v18, v20);
    sub_24162ADE8();
    sub_241517A8C(&qword_268D01D00, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDUserData);
    sub_24162ADD8();
    sub_241251EC8(v18, v20);
    swift_release();
    sub_2414FD144((uint64_t)v8, (uint64_t)v11);
    sub_241251EC8(v18, v20);
    uint64_t v30 = v39;
    sub_2414FD144((uint64_t)v11, v39);
    uint64_t v31 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v30, v31, 1, v6);
}

uint64_t sub_241516B6C(uint64_t a1)
{
  uint64_t v51 = *v1;
  uint64_t v3 = sub_24162EFA8();
  uint64_t v52 = *(void *)(v3 - 8);
  unint64_t v53 = v3;
  MEMORY[0x270FA5388](v3);
  id v50 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v46 - v6;
  uint64_t v8 = sub_24162E178();
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  MEMORY[0x270FA5388](v8);
  id v47 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ReviewPregnancyInMedicalIDTileDismissalData(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241517DAC(0, &qword_268D02368, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDUserData);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v46 - v14;
  sub_241517DAC(0, &qword_26B0118A0, MEMORY[0x263F07508]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v46 - v17;
  uint64_t v19 = sub_24162B788();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241517CB4(a1, (uint64_t)v15);
  uint64_t v23 = type metadata accessor for ReviewPregnancyInMedicalIDUserData();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v15, 1, v23) == 1)
  {
    sub_241517C58((uint64_t)v15, &qword_268D02368, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDUserData);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
  }
  else
  {
    id v46 = v22;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    v24(v18, v15, v19);
    sub_241517D34((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ReviewPregnancyInMedicalIDUserData);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) != 1)
    {
      uint64_t v32 = v46;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v46, v18, v19);
      v24(v12, v32, v19);
      sub_24162B708();
      sub_24162AE28();
      swift_allocObject();
      sub_24162AE18();
      sub_241517A8C(&qword_26B011C40, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDTileDismissalData);
      uint64_t v33 = sub_24162AE08();
      unint64_t v53 = v34;
      swift_release();
      sub_241517D34((uint64_t)v12, type metadata accessor for ReviewPregnancyInMedicalIDTileDismissalData);
      _sSo25HKMCDisplayTypeIdentifiera24MenstrualCyclesAppPluginE2idSSvg_0();
      unint64_t v35 = v47;
      sub_24162DE98();
      sub_24162E148();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
      uint64_t v36 = (void *)sub_24162D3A8();
      swift_release();
      id v37 = objc_allocWithZone(MEMORY[0x263F0A470]);
      uint64_t v38 = (void *)sub_241631CC8();
      swift_bridgeObjectRelease();
      id v39 = objc_msgSend(v37, sel_initWithCategory_domainName_healthStore_, 4, v38, v36);

      unint64_t v40 = v53;
      uint64_t v41 = (void *)sub_24162B478();
      unint64_t v42 = (void *)*MEMORY[0x263F450E8];
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = v51;
      aBlock[4] = sub_241517DA4;
      aBlock[5] = v43;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_241328D44;
      void aBlock[3] = &unk_26F5758B8;
      uint64_t v44 = _Block_copy(aBlock);
      id v45 = v42;
      swift_release();
      objc_msgSend(v39, sel_setData_forKey_completion_, v41, v45, v44);
      sub_2411EDEA8(v33, v40);
      _Block_release(v44);

      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v32, v19);
    }
  }
  sub_241517C58((uint64_t)v18, &qword_26B0118A0, MEMORY[0x263F07508]);
  sub_24162EF48();
  uint64_t v25 = sub_24162EF98();
  os_log_type_t v26 = sub_2416322C8();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v55 = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    aBlock[0] = v51;
    swift_getMetatypeMetadata();
    uint64_t v29 = sub_241631D48();
    aBlock[0] = sub_2411B6898(v29, v30, &v55);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v25, v26, "[%s] Sample UUID from user data was nil", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v28, -1, -1);
    MEMORY[0x245621640](v27, -1, -1);
  }

  return (*(uint64_t (**)(char *, unint64_t))(v52 + 8))(v7, v53);
}

uint64_t sub_241517574(char a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_24162EFA8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162EF48();
  id v10 = a2;
  id v11 = a2;
  uint64_t v12 = sub_24162EF98();
  os_log_type_t v13 = sub_2416322E8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = v6;
    uint64_t v15 = v14;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v25 = v23;
    uint64_t v26 = a3;
    *(_DWORD *)uint64_t v15 = 136315650;
    swift_getMetatypeMetadata();
    uint64_t v16 = sub_241631D48();
    uint64_t v26 = sub_2411B6898(v16, v17, &v25);
    sub_241632C28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 1024;
    LODWORD(v26) = a1 & 1;
    sub_241632C28();
    *(_WORD *)(v15 + 18) = 2082;
    uint64_t v26 = (uint64_t)a2;
    id v18 = a2;
    sub_241517DAC(0, (unint64_t *)&qword_26B010860, (void (*)(uint64_t))sub_2411CE834);
    uint64_t v19 = sub_241631D48();
    uint64_t v26 = sub_2411B6898(v19, v20, &v25);
    sub_241632C28();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24118E000, v12, v13, "[%s] Set dismissal date success %{BOOL}d, error %{public}s", (uint8_t *)v15, 0x1Cu);
    uint64_t v21 = v23;
    swift_arrayDestroy();
    MEMORY[0x245621640](v21, -1, -1);
    MEMORY[0x245621640](v15, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_24151783C(uint64_t a1)
{
  uint64_t v2 = sub_24162E178();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_24162DEA8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t sub_241517944()
{
  return type metadata accessor for ReviewPregnancyInMedicalIDActionHandler(0);
}

uint64_t sub_24151794C()
{
  return sub_241517A8C(&qword_268D02338, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDActionHandler);
}

uint64_t sub_241517998()
{
  sub_241517DAC(0, &qword_268D02368, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDUserData);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v4 - v1;
  sub_241516420((uint64_t)&v4 - v1);
  sub_241516B6C((uint64_t)v2);
  return sub_241517C58((uint64_t)v2, &qword_268D02368, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDUserData);
}

uint64_t sub_241517A44()
{
  return sub_241517A8C(&qword_268D02340, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDActionHandler);
}

uint64_t sub_241517A8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241517AD4()
{
  return sub_241517A8C(&qword_268D02348, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDActionHandler);
}

unint64_t sub_241517B1C()
{
  unint64_t result = qword_268D02358;
  if (!qword_268D02358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D02358);
  }
  return result;
}

uint64_t type metadata accessor for ReviewPregnancyInMedicalIDTileDismissalData(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_26B0118E0);
}

uint64_t sub_241517B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReviewPregnancyInMedicalIDTileDismissalData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_241517BF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_241517B1C();
    unint64_t v7 = a3(a1, &type metadata for ReviewPregnancyInMedicalIDTileDismissalData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241517C58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241517DAC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241517CB4(uint64_t a1, uint64_t a2)
{
  sub_241517DAC(0, &qword_268D02368, (void (*)(uint64_t))type metadata accessor for ReviewPregnancyInMedicalIDUserData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241517D34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241517D94()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241517DA4(char a1, void *a2)
{
  return sub_241517574(a1, a2, *(void *)(v2 + 16));
}

void sub_241517DAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241632C18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ReviewPregnancyInMedicalIDTileDismissalData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241517ECCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReviewPregnancyInMedicalIDTileDismissalData.CodingKeys()
{
  return &type metadata for ReviewPregnancyInMedicalIDTileDismissalData.CodingKeys;
}

uint64_t *sub_241517F04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24162B788();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24162B718();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_24151800C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24162B788();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_24162B718();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_2415180B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B788();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_24151816C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B788();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_241518224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B788();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_2415182DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B788();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_241518394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B788();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_24162B718();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_24151848C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2415184A0);
}

uint64_t sub_2415184A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_24162B788();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_24162B718();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_2415185A4()
{
  uint64_t result = sub_24162B788();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24162B718();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_241518670()
{
  unint64_t result = qword_268D02370;
  if (!qword_268D02370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D02370);
  }
  return result;
}

unint64_t sub_2415186C8()
{
  unint64_t result = qword_268D02378;
  if (!qword_268D02378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D02378);
  }
  return result;
}

unint64_t sub_241518720()
{
  unint64_t result = qword_268D02380;
  if (!qword_268D02380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D02380);
  }
  return result;
}

uint64_t sub_241518774(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5555656C706D6173 && a2 == 0xEA00000000004449;
  if (v2 || (sub_241633218() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024166FB90)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_241633218();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_241518874()
{
  uint64_t v1 = sub_24162B7E8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_241631CA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = sub_241632B78();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24TwelveMonthPDFHeaderView____lazy_storage___button;
  id v18 = *(void **)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24TwelveMonthPDFHeaderView____lazy_storage___button);
  if (v18)
  {
    id v19 = *(id *)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24TwelveMonthPDFHeaderView____lazy_storage___button);
  }
  else
  {
    uint64_t v35 = v14;
    uint64_t v36 = v13;
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v0;
    uint64_t v22 = v20;
    uint64_t v34 = v21;
    swift_unknownObjectWeakInit();
    uint64_t v33 = v22;
    swift_retain();
    sub_241632B28();
    sub_241631C38();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    if (qword_26B0131F0 != -1) {
      swift_once();
    }
    id v23 = (id)qword_26B0181A0;
    sub_24162B7D8();
    sub_241631D38();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    sub_241632B58();
    sub_2411B9D00(0, &qword_268CFC2B0);
    uint64_t v25 = v35;
    uint64_t v24 = v36;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v11, v16, v36);
    sub_2411B9D00(0, &qword_268CFD3C0);
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v33;
    *(void *)(v26 + 16) = sub_2415193A8;
    *(void *)(v26 + 24) = v27;
    swift_retain();
    sub_2416329F8();
    uint64_t v28 = (void *)sub_241632B88();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v24);
    swift_release_n();
    uint64_t v29 = *(void **)(v34 + v17);
    *(void *)(v34 + v17) = v28;
    id v19 = v28;

    id v18 = 0;
  }
  id v30 = v18;
  return v19;
}

void sub_241518CA4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x245621790](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = *(void (**)(void))(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24TwelveMonthPDFHeaderView_showPDF);
    sub_2411F4080((uint64_t)v4);

    if (v4)
    {
      v4();
      sub_2411F4090((uint64_t)v4);
    }
  }
}

id sub_241518D30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = &v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24TwelveMonthPDFHeaderView_showPDF];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  *(void *)&v2[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin24TwelveMonthPDFHeaderView____lazy_storage___button] = 0;
  if (a2)
  {
    uint64_t v4 = (void *)sub_241631CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  v42.receiver = v2;
  v42.super_class = (Class)type metadata accessor for TwelveMonthPDFHeaderView();
  id v5 = objc_msgSendSuper2(&v42, sel_initWithReuseIdentifier_, v4);

  id v6 = v5;
  id v7 = sub_241518874();
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v8 = sub_241518874();
  if (qword_26B00F370 != -1) {
    swift_once();
  }
  long long v41 = xmmword_26B017FC8;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631E08();
  uint64_t v9 = (void *)sub_241631CC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v41);

  id v10 = objc_msgSend(v6, sel_contentView);
  id v11 = sub_241518874();
  objc_msgSend(v10, sel_addSubview_, v11);

  uint64_t v12 = self;
  sub_2411BFC90();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2416444E0;
  id v14 = sub_241518874();
  id v15 = objc_msgSend(v14, sel_centerXAnchor);

  id v16 = objc_msgSend(v6, sel_contentView);
  id v17 = objc_msgSend(v16, sel_centerXAnchor);

  id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(void *)(v13 + 32) = v18;
  id v19 = sub_241518874();
  id v20 = objc_msgSend(v19, sel_centerYAnchor);

  id v21 = objc_msgSend(v6, sel_contentView);
  id v22 = objc_msgSend(v21, sel_centerYAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(void *)(v13 + 40) = v23;
  id v24 = sub_241518874();
  id v25 = objc_msgSend(v24, sel_leadingAnchor);

  id v26 = objc_msgSend(v6, sel_contentView);
  id v27 = objc_msgSend(v26, sel_leadingAnchor);

  id v28 = objc_msgSend(v25, sel_constraintGreaterThanOrEqualToAnchor_, v27);
  *(void *)(v13 + 48) = v28;
  id v29 = sub_241518874();
  id v30 = objc_msgSend(v29, sel_leadingAnchor);

  id v31 = objc_msgSend(v6, sel_contentView);
  id v32 = objc_msgSend(v31, sel_trailingAnchor);

  id v33 = objc_msgSend(v30, sel_constraintLessThanOrEqualToAnchor_, v32);
  *(void *)(v13 + 56) = v33;
  id v34 = objc_msgSend(v6, sel_contentView);
  id v35 = objc_msgSend(v34, sel_heightAnchor);

  id v36 = sub_241518874();
  id v37 = objc_msgSend(v36, sel_heightAnchor);

  id v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v37);
  *(void *)(v13 + 64) = v38;
  sub_241631F48();
  sub_2411B9D00(0, (unint64_t *)&qword_26B012130);
  id v39 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_activateConstraints_, v39, v13);

  return v6;
}

id sub_2415192C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TwelveMonthPDFHeaderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TwelveMonthPDFHeaderView()
{
  return self;
}

uint64_t sub_241519370()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2415193A8()
{
  sub_241518CA4(v0);
}

uint64_t sub_2415193B0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_2415193E8()
{
  uint64_t v1 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController____lazy_storage___cell;
  objc_super v2 = *(void **)(v0
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController____lazy_storage___cell);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController____lazy_storage___cell);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PickerSelectLoggingCell()), sel_initWithStyle_reuseIdentifier_, 1, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_241519464()
{
  uint64_t v1 = v0;
  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, sel_viewDidLoad);
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_tableView];
  objc_msgSend(v2, sel_setDataSource_, v0);
  objc_msgSend(v2, sel_setDelegate_, v0);
  id v3 = (char *)sub_2415193E8();
  id v4 = *(id *)&v3[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23PickerSelectLoggingCell_picker];

  objc_msgSend(v4, sel_setDelegate_, v1);
  uint64_t v5 = MEMORY[0x245621790](&v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_dataSource]);
  if (v5)
  {
    uint64_t v6 = sub_241573A10();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = &v1[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_pickedIndex];
  *(void *)id v7 = v6;
  v7[8] = v5 == 0;
  id v8 = (char *)sub_2415193E8();
  id v9 = *(id *)&v8[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23PickerSelectLoggingCell_picker];

  if (v7[8])
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v9, sel_selectRow_inComponent_animated_, *(void *)v7, 0, 0);

    type metadata accessor for DataTypeLoggingCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v11 = (void *)sub_241631CC8();
    objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v11);

    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 2.22507386e-308);
    objc_msgSend(v2, sel_setTableHeaderView_, v12);
  }
}

void sub_2415196A0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24162BAC8();
  if (!v4)
  {
    uint64_t v5 = (void *)sub_241631CC8();
    id v6 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_, v5);

    if (v6)
    {
      type metadata accessor for DataTypeLoggingCell();
      id v7 = (void *)swift_dynamicCastClassUnconditional();
      *((unsigned char *)v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_editableDaySummarySection) = *(unsigned char *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_editableDaySummarySection);
      id v8 = objc_msgSend(v7, sel_textLabel);
      if (v8)
      {
        id v9 = v8;
        id v10 = (void *)MEMORY[0x245621790](v2+ OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_dataSource);
        if (v10)
        {
          if ((*(unsigned char *)(v2
                         + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_pickedIndex
                         + 8) & 1) != 0)
          {
LABEL_21:
            __break(1u);
            return;
          }
          sub_241573D48(*(void *)(v2
                                  + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_pickedIndex));
          uint64_t v12 = v11;
          swift_unknownObjectRelease();
          if (v12)
          {
            id v10 = (void *)sub_241631CC8();
            swift_bridgeObjectRelease();
          }
          else
          {
            id v10 = 0;
          }
        }
        objc_msgSend(v9, sel_setText_, v10);
      }
      uint64_t v28 = MEMORY[0x245621790](v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_dataSource);
      if (v28)
      {
        uint64_t v29 = *(void *)(v28 + 32);
        swift_unknownObjectRelease();
        *((unsigned char *)v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_isChecked) = v29 != 0;
        sub_2413668EC();
        uint64_t v30 = v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration;
        long long v44 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 16);
        long long v45 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration);
        long long v43 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 32);
        uint64_t v31 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 48);
        uint64_t v32 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 56);
        id v34 = *(void **)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 64);
        uint64_t v33 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 72);
        char v35 = *(unsigned char *)(v30 + 80);
        uint64_t v36 = *(void *)(v30 + 88);
        uint64_t v37 = *(void *)(v30 + 96);
        char v38 = *(unsigned char *)(v30 + 104);
        void v47[3] = &type metadata for LoggingCardCarouselConfiguration;
        v47[4] = &off_26F571FA8;
        uint64_t v39 = swift_allocObject();
        v47[0] = v39;
        *(_OWORD *)(v39 + 16) = v45;
        *(_OWORD *)(v39 + 32) = v44;
        *(_OWORD *)(v39 + 48) = v43;
        *(void *)(v39 + 64) = v31;
        *(void *)(v39 + 72) = v32;
        *(void *)(v39 + 80) = v34;
        *(void *)(v39 + 88) = v33;
        *(unsigned char *)(v39 + 96) = v35;
        *(void *)(v39 + 104) = v36;
        *(void *)(v39 + 112) = v37;
        *(unsigned char *)(v39 + 120) = v38;
        sub_2411A3DF4((uint64_t)v47, (uint64_t)v46);
        uint64_t v40 = (uint64_t)v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_configuration;
        swift_beginAccess();
        id v41 = v34;
        sub_2411D6518((uint64_t)v46, v40);
        uint64_t v42 = swift_endAccess();
        (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v7) + 0x118))(v42);
        _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v47);

        return;
      }
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v4 != 1)
  {
    __break(1u);
    goto LABEL_19;
  }
  objc_super v13 = (char *)sub_2415193E8();
  id v14 = *(void **)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 64);
  double v15 = *(double *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 72);
  uint64_t v16 = *(unsigned __int8 *)(v2
                           + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration
                           + 80);
  char v17 = *(unsigned char *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 104);
  id v18 = &v13[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23PickerSelectLoggingCell_configuration];
  id v19 = *(void **)&v13[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23PickerSelectLoggingCell_configuration + 64];
  long long v20 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 16);
  long long v21 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 32);
  long long v22 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 48);
  long long v23 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 88);
  *(_OWORD *)id v18 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration);
  *((_OWORD *)v18 + 1) = v20;
  *((_OWORD *)v18 + 2) = v21;
  *((_OWORD *)v18 + 3) = v22;
  *((void *)v18 + 8) = v14;
  *((double *)v18 + 9) = v15;
  *((void *)v18 + 10) = v16;
  *(_OWORD *)(v18 + 88) = v23;
  v18[104] = v17;
  id v24 = v14;

  if ((v16 & 1) == 0)
  {
    double v25 = v15;
    id v26 = objc_msgSend(*(id *)&v13[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23PickerSelectLoggingCell_picker], sel_heightAnchor);
    id v27 = (char *)objc_msgSend(v26, sel_constraintEqualToConstant_, v25);

    objc_msgSend(v27, sel_setActive_, 1);
    objc_super v13 = v24;
    id v24 = v27;
  }

  sub_2415193E8();
}

void sub_241519BF0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24162BAC8();
  if (v4)
  {
    if (v4 == 1) {
      return;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v5 = (void *)sub_24162BA88();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v5, 0);

  id v6 = (void *)sub_24162BA88();
  id v10 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v6);

  if (!v10)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  type metadata accessor for DataTypeLoggingCell();
  uint64_t v7 = swift_dynamicCastClassUnconditional();
  uint64_t v8 = OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_isChecked;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_isChecked) = (*(unsigned char *)(v7 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_isChecked) & 1) == 0;
  sub_2413668EC();
  LODWORD(v8) = *(unsigned __int8 *)(v7 + v8);
  uint64_t v9 = MEMORY[0x245621790](v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_dataSource);
  if (v8 != 1)
  {
    if (v9)
    {
      sub_2415740B8();
      goto LABEL_11;
    }
LABEL_18:
    __break(1u);
    return;
  }
  if (!v9) {
    goto LABEL_16;
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_pickedIndex + 8))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_241573F90(*(void *)(v2
                          + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_pickedIndex));
LABEL_11:
  swift_unknownObjectRelease();
}

void sub_241519FE4()
{
  sub_2411CD138(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_dataSource);
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController____lazy_storage___cell);
}

uint64_t type metadata accessor for PickerSelectLoggingCardViewController()
{
  return self;
}

void sub_24151A264(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24162BB18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_pickedIndex;
  *(void *)uint64_t v8 = a1;
  *(unsigned char *)(v8 + 8) = 0;
  uint64_t v9 = (char *)sub_2415193E8();
  id v10 = *(id *)&v9[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin23PickerSelectLoggingCell_picker];

  if (*(unsigned char *)(v8 + 8))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v10, sel_selectRow_inComponent_animated_, *(void *)v8, 0, 0);

  uint64_t v11 = *(void **)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_tableView);
  MEMORY[0x245618F80](0, 0);
  uint64_t v12 = (void *)sub_24162BA88();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v13 = objc_msgSend(v11, sel_cellForRowAtIndexPath_, v12);

  if (!v13) {
    return;
  }
  type metadata accessor for DataTypeLoggingCell();
  id v14 = (void *)swift_dynamicCastClass();
  if (!v14)
  {

    return;
  }
  double v15 = v14;
  id v16 = objc_msgSend(v14, sel_textLabel);
  if (v16)
  {
    char v17 = v16;
    id v18 = (void *)MEMORY[0x245621790](v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_dataSource);
    if (v18)
    {
      if (*(unsigned char *)(v8 + 8))
      {
LABEL_19:
        __break(1u);
        return;
      }
      sub_241573D48(*(void *)v8);
      uint64_t v20 = v19;
      swift_unknownObjectRelease();
      if (v20)
      {
        id v18 = (void *)sub_241631CC8();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v18 = 0;
      }
    }
    objc_msgSend(v17, sel_setText_, v18);
  }
  long long v21 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration);
  long long v36 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 16);
  long long v37 = v21;
  long long v35 = *(_OWORD *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 32);
  uint64_t v22 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 48);
  uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 56);
  double v25 = *(void **)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 64);
  uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 72);
  char v26 = *(unsigned char *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 80);
  uint64_t v27 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 88);
  uint64_t v28 = *(void *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 96);
  char v29 = *(unsigned char *)(v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin25LoggingCardViewController_configuration + 104);
  v39[3] = &type metadata for LoggingCardCarouselConfiguration;
  v39[4] = &off_26F571FA8;
  uint64_t v30 = swift_allocObject();
  v39[0] = v30;
  long long v31 = v36;
  *(_OWORD *)(v30 + 16) = v37;
  *(_OWORD *)(v30 + 32) = v31;
  *(_OWORD *)(v30 + 48) = v35;
  *(void *)(v30 + 64) = v22;
  *(void *)(v30 + 72) = v23;
  *(void *)(v30 + 80) = v25;
  *(void *)(v30 + 88) = v24;
  *(unsigned char *)(v30 + 96) = v26;
  *(void *)(v30 + 104) = v27;
  *(void *)(v30 + 112) = v28;
  *(unsigned char *)(v30 + 120) = v29;
  sub_2411A3DF4((uint64_t)v39, (uint64_t)v38);
  uint64_t v32 = (uint64_t)v15 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_configuration;
  swift_beginAccess();
  id v33 = v25;
  sub_2411D6518((uint64_t)v38, v32);
  uint64_t v34 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v15) + 0x118))(v34);
  _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v39);

  *((unsigned char *)v15 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin19DataTypeLoggingCell_isChecked) = 1;
  sub_2413668EC();
  if (!MEMORY[0x245621790](v2 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin37PickerSelectLoggingCardViewController_dataSource)) {
    goto LABEL_17;
  }
  if (*(unsigned char *)(v8 + 8))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_241573F90(*(void *)v8);

  swift_unknownObjectRelease();
}

uint64_t sub_24151A65C()
{
  return MEMORY[0x270FA0238](v0, 121, 7);
}

id sub_24151A694()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_24162EFA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20AddPregnancyTileCell_item;
  swift_beginAccess();
  sub_2411FA270(v6, (uint64_t)&v18);
  if (*((void *)&v19 + 1))
  {
    sub_2411E1530();
    type metadata accessor for AddPregnancyItem();
    if (swift_dynamicCast())
    {
      swift_release();
      return objc_msgSend(v1, sel_setNeedsUpdateConfiguration);
    }
  }
  else
  {
    sub_241299DB8((uint64_t)&v18);
  }
  sub_24162EF48();
  uint64_t v8 = sub_24162EF98();
  os_log_type_t v9 = sub_2416322C8();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = v2;
    uint64_t v12 = v11;
    *(void *)&long long v18 = v11;
    *(_DWORD *)id v10 = 136315138;
    uint64_t v13 = sub_2416333E8();
    uint64_t v17 = sub_2411B6898(v13, v14, (uint64_t *)&v18);
    sub_241632C28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24118E000, v8, v9, "[%s] Received unexpected item", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245621640](v12, -1, -1);
    MEMORY[0x245621640](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v20 = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  swift_beginAccess();
  sub_2412309A4((uint64_t)&v18, v6);
  return (id)swift_endAccess();
}

uint64_t sub_24151A948(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20AddPregnancyTileCell_item;
  swift_beginAccess();
  sub_2411FA270(v3, (uint64_t)v5);
  if (v6)
  {
    sub_2411E1530();
    type metadata accessor for AddPregnancyItem();
    if (swift_dynamicCast()) {
      swift_release();
    }
  }
  else
  {
    sub_241299DB8((uint64_t)v5);
  }
  swift_beginAccess();
  sub_2411FA3DC(a1, v3);
  swift_endAccess();
  sub_24151A694();
  return sub_241299DB8(a1);
}

id sub_24151AA20(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20AddPregnancyTileCell_parentViewController] = 0;
  id v10 = &v4[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20AddPregnancyTileCell_item];
  *(_OWORD *)id v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  v14.receiver = v4;
  v14.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v11, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 1);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = v11;
  swift_retain();
  sub_2416326A8();
  swift_release();

  return v12;
}

void sub_24151AB38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v60 = a2;
  sub_2413716C8();
  uint64_t v5 = v4;
  uint64_t v64 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v63 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_24162F0E8();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  id v59 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24162CCF8();
  uint64_t v55 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v56 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24162D368();
  MEMORY[0x270FA5388](v10 - 8);
  id v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2413717E4(0, &qword_26B00ED90, MEMORY[0x263F43658], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  objc_super v14 = (char *)v50 - v13;
  uint64_t v15 = sub_24162DAF8();
  MEMORY[0x270FA5388](v15);
  sub_2413717E4(0, &qword_26B00F240, MEMORY[0x263F43640], v11);
  MEMORY[0x270FA5388](v16 - 8);
  long long v18 = (char *)v50 - v17;
  sub_2413717E4(0, &qword_26B00F260, MEMORY[0x263F43F20], v11);
  MEMORY[0x270FA5388](v19 - 8);
  long long v21 = (char *)v50 - v20;
  uint64_t v62 = sub_24162D378();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v65 = (char *)v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v23 = MEMORY[0x245621790](a3 + 16);
  if (v23)
  {
    uint64_t v24 = (void *)v23;
    uint64_t v54 = v5;
    uint64_t v25 = v23 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20AddPregnancyTileCell_item;
    swift_beginAccess();
    sub_2411FA270(v25, (uint64_t)v67);
    if (v68)
    {
      sub_2411E1530();
      type metadata accessor for AddPregnancyItem();
      if (swift_dynamicCast())
      {
        uint64_t v52 = v8;
        uint64_t v53 = v66[0];
        uint64_t v26 = sub_24162D438();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v21, 1, 1, v26);
        uint64_t v27 = sub_24162C868();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v18, 1, 1, v27);
        sub_2413717E4(0, &qword_268CFDD30, MEMORY[0x263F44328], MEMORY[0x263F8E0F8]);
        uint64_t v28 = swift_allocObject();
        long long v51 = xmmword_241637EE0;
        *(_OWORD *)(v28 + 16) = xmmword_241637EE0;
        sub_24162DAE8();
        v67[0] = v28;
        sub_24151C354((unint64_t *)&unk_268CFE2A0, 255, MEMORY[0x263F44328]);
        sub_241251E00(0);
        sub_24151C354((unint64_t *)&qword_268CFE2B0, 255, sub_241251E00);
        sub_241632D08();
        sub_24162D9F8();
        swift_allocObject();
        v50[5] = sub_24162D9E8();
        if (qword_268CF9850 != -1) {
          swift_once();
        }
        v50[4] = qword_268D24220;
        uint64_t v29 = qword_268CF9858;
        void v50[3] = *(void *)algn_268D24228;
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        if (v29 != -1) {
          swift_once();
        }
        v50[2] = qword_268D24230;
        uint64_t v30 = qword_268CF9860;
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        if (v30 != -1) {
          swift_once();
        }
        v50[1] = qword_268D24240;
        uint64_t v31 = qword_26B0131F0;
        _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
        if (v31 != -1) {
          swift_once();
        }
        id v32 = (id)qword_26B0181A0;
        sub_24162C878();
        uint64_t v33 = sub_24162C888();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v14, 0, 1, v33);
        sub_24162D348();
        sub_2413717E4(0, &qword_268CFD700, MEMORY[0x263F43C08], MEMORY[0x263F8E0F8]);
        uint64_t v34 = v55;
        unint64_t v35 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = v51;
        unint64_t v37 = v36 + v35;
        uint64_t v38 = *MEMORY[0x263F43BD8];
        uint64_t v39 = *(void (**)(unint64_t, uint64_t, uint64_t))(v34 + 104);
        uint64_t v40 = v52;
        v39(v37, v38, v52);
        sub_24162D338();
        uint64_t v41 = v53;
        uint64_t v42 = *(void **)(v53 + 16);
        sub_2411A3DF4(v53 + 24, (uint64_t)v67);
        v39((unint64_t)v56, v38, v40);
        sub_2411A3DF4(v41 + 64, (uint64_t)v66);
        sub_24162D3D8();
        swift_allocObject();
        id v43 = v42;
        sub_24162D398();
        (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v59, v60, v58);
        objc_msgSend(v24, sel_bounds);
        CGRectGetWidth(v70);
        sub_24162D2F8();
        swift_allocObject();
        uint64_t v44 = sub_24162D2E8();
        MEMORY[0x270FA5388](v44);
        sub_241371748();
        sub_24137187C();
        id v45 = v24;
        id v46 = v63;
        uint64_t v47 = sub_241630788();
        MEMORY[0x270FA5388](v47);
        sub_24151C440();
        uint64_t v68 = v48;
        uint64_t v69 = sub_24151C354(&qword_268D02510, 255, (void (*)(uint64_t))sub_24151C440);
        sub_2411B6C70(v67);
        sub_24162DA98();
        sub_24151C354(&qword_268CFE350, 255, MEMORY[0x263F442C0]);
        uint64_t v49 = v54;
        sub_241630768();
        (*(void (**)(char *, uint64_t))(v64 + 8))(v46, v49);
        MEMORY[0x24561FB40](v67);
        swift_release();

        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v61 + 8))(v65, v62);
      }
      else
      {
      }
    }
    else
    {

      sub_241299DB8((uint64_t)v67);
    }
  }
}

uint64_t sub_24151B788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v7 = sub_24162D378();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24162CDA8();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, a1, v7, v13);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = a2;
  swift_retain();
  sub_24162CDB8();
  sub_24162D3D8();
  sub_24151C354(&qword_268CFDD50, 255, MEMORY[0x263F43F10]);
  uint64_t v18 = sub_24162FAB8();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(a4, v15, v11);
  sub_241371748();
  uint64_t v20 = (uint64_t *)(a4 + *(int *)(v19 + 36));
  uint64_t v21 = v25;
  uint64_t *v20 = v18;
  v20[1] = v21;
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  swift_retain();
  return v22(v15, v11);
}

void sub_24151BA18(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a1 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x245621790](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = (void **)(v5 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20AddPregnancyTileCell_parentViewController);
    swift_beginAccess();
    uint64_t v8 = *v7;
    if (*v7 && MEMORY[0x245621790](a2 + 13))
    {
      uint64_t v9 = a2[14];
      uint64_t ObjectType = swift_getObjectType();
      v14[3] = v3;
      v14[4] = sub_24151C354(&qword_268D02500, v11, (void (*)(uint64_t))type metadata accessor for AddPregnancyItem);
      v14[0] = a2;
      uint64_t v12 = *(void (**)(void *, id, uint64_t, uint64_t))(v9 + 8);
      id v13 = v8;
      swift_retain();
      v12(v14, v13, ObjectType, v9);
      swift_unknownObjectRelease();
      _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v14);
    }
    else
    {
    }
  }
}

uint64_t sub_24151BC40(uint64_t a1)
{
  return sub_24151BCE0(a1, 0xD000000000000024, 0x800000024166FE20, &qword_268D24210, algn_268D24218);
}

uint64_t sub_24151BC68(uint64_t a1)
{
  return sub_24151BCE0(a1, 0xD000000000000022, 0x800000024166FDF0, &qword_268D24220, algn_268D24228);
}

uint64_t sub_24151BC90(uint64_t a1)
{
  return sub_24151BCE0(a1, 0xD000000000000027, 0x800000024166FDC0, &qword_268D24230, algn_268D24238);
}

uint64_t sub_24151BCB8(uint64_t a1)
{
  return sub_24151BCE0(a1, 0xD000000000000027, 0x800000024166FD90, &qword_268D24240, algn_268D24248);
}

uint64_t sub_24151BCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v20[-v13];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v11, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v16 = sub_241631D38();
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
  *a4 = v16;
  *a5 = v18;
  return result;
}

uint64_t type metadata accessor for AddPregnancyTileCell()
{
  return self;
}

uint64_t sub_24151BF50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20AddPregnancyTileCell_item;
  swift_beginAccess();
  return sub_2411FA270(v3, a1);
}

void (*sub_24151BFA8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20AddPregnancyTileCell_item;
  swift_beginAccess();
  sub_2411FA270(v4, (uint64_t)v3);
  return sub_24151C02C;
}

void sub_24151C02C(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    sub_2411FA270(*a1, (uint64_t)v2 + 40);
    sub_24151A948((uint64_t)v2 + 40);
    sub_241299DB8((uint64_t)v2);
  }
  else
  {
    sub_24151A948(*a1);
  }

  free(v2);
}

void *sub_24151C0A0()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20AddPregnancyTileCell_parentViewController);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_24151C0F0(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin20AddPregnancyTileCell_parentViewController);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_24151C144())()
{
  return j__swift_endAccess;
}

uint64_t type metadata accessor for AddPregnancyItem()
{
  return self;
}

uint64_t sub_24151C1C4()
{
  type metadata accessor for AddPregnancyTileCell();
  sub_24151C354(&qword_268D024F8, v0, (void (*)(uint64_t))type metadata accessor for AddPregnancyTileCell);
  return sub_24162CD08();
}

uint64_t sub_24151C228(uint64_t a1, uint64_t a2)
{
  return sub_24151C250(a2);
}

uint64_t sub_24151C250(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = MEMORY[0x245621790](v1 + 13);
  if (result)
  {
    uint64_t v5 = v1[14];
    uint64_t ObjectType = swift_getObjectType();
    void v9[3] = v3;
    v9[4] = sub_24151C354(&qword_268D02500, v7, (void (*)(uint64_t))type metadata accessor for AddPregnancyItem);
    v9[0] = v1;
    uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v5 + 8);
    swift_retain();
    v8(v9, a1, ObjectType, v5);
    swift_unknownObjectRelease();
    return _s24MenstrualCyclesAppPlugin32NotificationAuthorizationManagerVwxx_0((uint64_t)v9);
  }
  return result;
}

uint64_t sub_24151C354(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24151C39C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24151C3D4(uint64_t a1, uint64_t a2)
{
  sub_24151AB38(a1, a2, v2);
}

uint64_t sub_24151C3DC@<X0>(uint64_t a1@<X8>)
{
  return sub_24151B788(v1[2], v1[4], v1[5], a1);
}

uint64_t sub_24151C3E8()
{
  swift_retain();
  swift_retain();

  return sub_24162DA88();
}

void sub_24151C440()
{
  if (!qword_268D02508)
  {
    sub_241371748();
    sub_24162DA98();
    sub_24137187C();
    sub_24151C354(&qword_268CFE350, 255, MEMORY[0x263F442C0]);
    unint64_t v0 = sub_241630798();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02508);
    }
  }
}

uint64_t sub_24151C500()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24151C540()
{
  sub_24151BA18(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_24151C548()
{
  return sub_24151C924((void (*)(uint64_t))sub_24151C574, MEMORY[0x263F07158]);
}

uint64_t sub_24151C574@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v28 = sub_24162B568();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24162B5A8();
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162B538();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24162B5B8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v23 - v15;
  __n128 v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v23 - v19;
  MEMORY[0x245618740](v18);
  sub_24162B528();
  sub_24162B4F8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v13, v10);
  sub_24162B578();
  sub_24162B518();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v25);
  v21(v16, v10);
  sub_24162B548();
  sub_24162B508();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v2, v28);
  return ((uint64_t (*)(char *, uint64_t))v21)(v20, v10);
}

uint64_t sub_24151C8B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24151C8F8()
{
  return sub_24151C924((void (*)(uint64_t))sub_24151D1EC, MEMORY[0x263F07160]);
}

uint64_t sub_24151C924(void (*a1)(uint64_t), void (*a2)(uint64_t))
{
  uint64_t v76 = a2;
  uint64_t v83 = a1;
  uint64_t v77 = sub_24162B5A8();
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  id v73 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24162B658();
  uint64_t v78 = *(void *)(v3 - 8);
  uint64_t v79 = v3;
  MEMORY[0x270FA5388](v3);
  CGRect v70 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v71 = (char *)&v65 - v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v72 = (char *)&v65 - v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v74 = (char *)&v65 - v10;
  sub_2411EB6E0();
  uint64_t v82 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v68 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v67 = (char *)&v65 - v14;
  uint64_t v15 = sub_24162B718();
  uint64_t v81 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v80 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v65 - v18;
  sub_2411EB748();
  uint64_t v85 = v20;
  MEMORY[0x270FA5388](v20);
  id v66 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v69 = (uint64_t)&v65 - v23;
  uint64_t v24 = sub_24162B5B8();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_24162B7E8();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v65 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24162B7D8();
  uint64_t v32 = sub_24162B798();
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  if (v32 == 0x53555F6E65 && v34 == 0xE500000000000000)
  {
    uint64_t v35 = swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v88 = 0;
    unint64_t v89 = 0xE000000000000000;
    unint64_t v37 = v83;
    v83(v35);
    sub_24151C8B0((unint64_t *)&qword_268CFA550, MEMORY[0x263F07258]);
    sub_24162B6F8();
    uint64_t v38 = *(void (**)(char *, uint64_t))(v25 + 8);
    v38(v27, v24);
    uint64_t v39 = v86;
    unint64_t v40 = v87;
    swift_bridgeObjectRelease();
    uint64_t v88 = v39;
    unint64_t v89 = v40;
    uint64_t v41 = sub_241631E08();
    v37(v41);
    sub_24162B6F8();
    v38(v27, v24);
    sub_241631E08();
    swift_bridgeObjectRelease();
    return v88;
  }
  char v36 = sub_241633218();
  uint64_t v35 = swift_bridgeObjectRelease();
  if (v36) {
    goto LABEL_5;
  }
  uint64_t v42 = v81;
  id v43 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
  uint64_t v44 = v84;
  v43(v19, v84, v15);
  id v45 = v80;
  v43(v80, &v44[*(int *)(v85 + 36)], v15);
  sub_24151C8B0((unint64_t *)&unk_26B00E680, MEMORY[0x263F07490]);
  uint64_t result = sub_241631BD8();
  if (result)
  {
    uint64_t v47 = v82;
    uint64_t v48 = v67;
    uint64_t v49 = &v67[*(int *)(v82 + 48)];
    id v50 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
    v50(v67, v19, v15);
    uint64_t v84 = v49;
    v50(v49, v45, v15);
    long long v51 = v68;
    uint64_t v52 = &v68[*(int *)(v47 + 48)];
    v43(v68, v48, v15);
    v43(v52, v49, v15);
    uint64_t v53 = (uint64_t)v66;
    v50(v66, v51, v15);
    uint64_t v54 = *(void (**)(char *, uint64_t))(v42 + 8);
    v54(v52, v15);
    uint64_t v55 = &v51[*(int *)(v82 + 48)];
    v50(v51, v48, v15);
    v50(v55, v84, v15);
    v50((char *)(v53 + *(int *)(v85 + 36)), v55, v15);
    v54(v51, v15);
    uint64_t v56 = v69;
    sub_2411EB824(v53, v69);
    uint64_t v57 = v70;
    uint64_t v58 = sub_24162AD98();
    id v59 = v73;
    v76(v58);
    uint64_t v60 = v71;
    sub_24162B648();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v59, v77);
    uint64_t v61 = v79;
    uint64_t v62 = *(void (**)(char *, uint64_t))(v78 + 8);
    v62(v57, v79);
    uint64_t v63 = v72;
    sub_24162B628();
    v62(v60, v61);
    uint64_t v64 = v74;
    sub_24162B638();
    v62(v63, v61);
    sub_24151C8B0(&qword_268CFD1D8, MEMORY[0x263F07308]);
    sub_241632158();
    v62(v64, v61);
    sub_241319B90(v56);
    return v88;
  }
  __break(1u);
  return result;
}

uint64_t sub_24151D1EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v28 = sub_24162B568();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24162B538();
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24162B5A8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24162B5B8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v23 - v15;
  __n128 v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v23 - v19;
  MEMORY[0x245618740](v18);
  sub_24162B598();
  sub_24162B518();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v13, v10);
  sub_24162B528();
  sub_24162B4F8();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v25);
  v21(v16, v10);
  sub_24162B548();
  sub_24162B508();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v2, v28);
  return ((uint64_t (*)(char *, uint64_t))v21)(v20, v10);
}

unint64_t sub_24151D52C()
{
  return 0xD000000000000033;
}

uint64_t sub_24151D548()
{
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  return sub_24162B238();
}

uint64_t sub_24151D5E4()
{
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  return sub_24162B238();
}

uint64_t sub_24151D688()
{
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  return sub_24162B238();
}

void sub_24151D728()
{
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26B0181A0;
  uint64_t v1 = (void *)sub_241631CC8();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v1, v0, 0);

  if (!v2) {
    __break(1u);
  }
}

void sub_24151D7F4()
{
  uint64_t v0 = sub_24162B7E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v166 = (char *)&v152 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_241631CA8();
  uint64_t v171 = *(void *)(v158 - 8);
  MEMORY[0x270FA5388](v158);
  uint64_t v3 = (char *)&v152 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v152 - v5;
  sub_24123506C();
  uint64_t v163 = sub_24162C778();
  uint64_t v7 = *(void *)(v163 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v167 = *(void *)(v7 + 72);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24164FD80;
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v10 = (id)qword_26B0181A0;
  uint64_t v11 = (void *)sub_241631CC8();
  id v12 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v11, v10, 0);

  if (v12)
  {
    uint64_t v154 = v9;
    unint64_t v13 = v9 + v8;
    *(void *)unint64_t v13 = v12;
    *(unsigned char *)(v13 + 8) = 0;
    uint64_t v14 = *(void (**)(void))(v7 + 104);
    uint64_t v15 = v163;
    ((void (*)(unint64_t, void, uint64_t))v14)(v9 + v8, *MEMORY[0x263F42AB8], v163);
    uint64_t v159 = (void (*)(uint64_t *))v14;
    uint64_t v165 = v7 + 104;
    uint64_t v16 = (uint64_t *)(v9 + v8 + v167);
    uint64_t v17 = v167;
    *uint64_t v16 = sub_24162B238();
    v16[1] = v18;
    ((void (*)(uint64_t *, void, uint64_t))v14)(v16, *MEMORY[0x263F42AC0], v15);
    uint64_t v156 = 2 * v17;
    unint64_t v19 = v13 + 2 * v17;
    unint64_t v162 = 0xD000000000000013;
    sub_241631C38();
    uint64_t v20 = v171;
    uint64_t v168 = *(void (**)(char *, char *, uint64_t))(v171 + 16);
    uint64_t v169 = v171 + 16;
    uint64_t v21 = v3;
    uint64_t v22 = v3;
    uint64_t v23 = v158;
    v168(v22, v6, v158);
    id v24 = (id)qword_26B0181A0;
    sub_24162B7D8();
    unint64_t v164 = 0x800000024166FE70;
    uint64_t v25 = sub_241631D38();
    uint64_t v27 = v26;
    uint64_t v170 = *(void (**)(char *, uint64_t))(v20 + 8);
    v170(v6, v23);
    uint64_t v171 = v20 + 8;
    *(void *)unint64_t v19 = v25;
    *(void *)(v19 + 8) = v27;
    *(unsigned char *)(v19 + 16) = 0;
    unsigned int v157 = *MEMORY[0x263F42AE0];
    uint64_t v28 = v159;
    v159((uint64_t *)v19);
    unint64_t v160 = v13;
    uint64_t v29 = (uint64_t *)(v13 + v156 + v167);
    sub_241631C38();
    uint64_t v161 = v21;
    uint64_t v30 = v21;
    uint64_t v31 = v168;
    v168(v30, v6, v23);
    id v32 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v33 = sub_241631D38();
    uint64_t v35 = v34;
    v170(v6, v23);
    *uint64_t v29 = v33;
    v29[1] = v35;
    void v29[2] = 0;
    LODWORD(v156) = *MEMORY[0x263F42A80];
    v28(v29);
    uint64_t v36 = v167;
    uint64_t v155 = 4 * v167;
    unint64_t v37 = v13 + 4 * v167;
    sub_241631C38();
    v31(v161, v6, v23);
    id v38 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v39 = sub_241631D38();
    uint64_t v41 = v40;
    uint64_t v42 = v170;
    v170(v6, v23);
    *(void *)unint64_t v37 = v39;
    *(void *)(v37 + 8) = v41;
    *(unsigned char *)(v37 + 16) = 0;
    uint64_t v43 = v157;
    uint64_t v44 = v163;
    ((void (*)(unint64_t, void, uint64_t))v159)(v37, v157, v163);
    unint64_t v45 = v160 + v155 + v36;
    sub_241631C38();
    uint64_t v46 = v158;
    v168(v161, v6, v158);
    id v47 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v48 = sub_241631D38();
    uint64_t v50 = v49;
    v42(v6, v46);
    *(void *)unint64_t v45 = v48;
    *(void *)(v45 + 8) = v50;
    *(unsigned char *)(v45 + 16) = 0;
    uint64_t v51 = v44;
    uint64_t v52 = v159;
    ((void (*)(unint64_t, uint64_t, uint64_t))v159)(v45, v43, v51);
    uint64_t v53 = (uint64_t *)(v160 + 6 * v167);
    sub_241631C38();
    v168(v161, v6, v46);
    id v54 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v55 = sub_241631D38();
    uint64_t v57 = v56;
    uint64_t v58 = v46;
    v170(v6, v46);
    *uint64_t v53 = v55;
    v53[1] = v57;
    v53[2] = 0;
    ((void (*)(uint64_t *, void, uint64_t))v52)(v53, v156, v163);
    uint64_t v155 = 8 * v167;
    unint64_t v59 = v160;
    unint64_t v60 = v160 + 7 * v167;
    sub_241631C38();
    uint64_t v61 = v161;
    v168(v161, v6, v58);
    id v62 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v63 = sub_241631D38();
    uint64_t v65 = v64;
    uint64_t v66 = v58;
    uint64_t v67 = v170;
    v170(v6, v66);
    *(void *)unint64_t v60 = v63;
    *(void *)(v60 + 8) = v65;
    *(unsigned char *)(v60 + 16) = 0;
    uint64_t v68 = v157;
    uint64_t v69 = v163;
    CGRect v70 = (void (*)(unint64_t, uint64_t, uint64_t))v159;
    ((void (*)(unint64_t, void, uint64_t))v159)(v60, v157, v163);
    unint64_t v71 = v59 + v155;
    sub_241631C38();
    uint64_t v72 = v158;
    v168(v61, v6, v158);
    id v73 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v74 = sub_241631D38();
    uint64_t v76 = v75;
    v67(v6, v72);
    *(void *)unint64_t v71 = v74;
    *(void *)(v71 + 8) = v76;
    *(unsigned char *)(v71 + 16) = 0;
    v70(v71, v68, v69);
    unint64_t v77 = v160 + v155 + v167;
    sub_241631C38();
    uint64_t v78 = v158;
    uint64_t v79 = v168;
    v168(v61, v6, v158);
    id v80 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v81 = sub_241631D38();
    uint64_t v83 = v82;
    v170(v6, v78);
    *(void *)unint64_t v77 = v81;
    *(void *)(v77 + 8) = v83;
    *(unsigned char *)(v77 + 16) = 0;
    uint64_t v84 = v159;
    ((void (*)(unint64_t, void, uint64_t))v159)(v77, v157, v163);
    unint64_t v85 = v160;
    uint64_t v86 = (uint64_t *)(v160 + 10 * v167);
    sub_241631C38();
    v79(v161, v6, v78);
    id v87 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v88 = sub_241631D38();
    uint64_t v90 = v89;
    uint64_t v91 = v78;
    v170(v6, v78);
    uint64_t *v86 = v88;
    v86[1] = v90;
    v86[2] = 0;
    ((void (*)(uint64_t *, void, uint64_t))v84)(v86, v156, v163);
    uint64_t v153 = (uint64_t *)(v85 + 11 * v167);
    sub_2411BFDA0(0, (unint64_t *)&qword_26B013220);
    uint64_t v155 = swift_allocObject();
    *(_OWORD *)(v155 + 16) = xmmword_241640D70;
    sub_241631C38();
    unint64_t v92 = v161;
    id v93 = v168;
    v168(v161, v6, v91);
    id v94 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v95 = sub_241631D38();
    uint64_t v97 = v96;
    v170(v6, v91);
    uint64_t v98 = (void *)v155;
    *(void *)(v155 + 32) = v95;
    v98[5] = v97;
    sub_241631C38();
    v93(v92, v6, v91);
    id v99 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v100 = sub_241631D38();
    uint64_t v102 = v101;
    v170(v6, v91);
    v98[6] = v100;
    v98[7] = v102;
    sub_241631C38();
    v168(v92, v6, v91);
    id v103 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v104 = sub_241631D38();
    uint64_t v106 = v105;
    v170(v6, v91);
    v98[8] = v104;
    v98[9] = v106;
    sub_241631C38();
    uint64_t v107 = v168;
    v168(v92, v6, v91);
    id v108 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v109 = sub_241631D38();
    uint64_t v111 = v110;
    v170(v6, v91);
    v98[10] = v109;
    v98[11] = v111;
    sub_241631C38();
    v107(v161, v6, v91);
    id v112 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v113 = sub_241631D38();
    uint64_t v115 = v114;
    unint64_t v116 = v170;
    v170(v6, v91);
    v98[12] = v113;
    v98[13] = v115;
    sub_241631C38();
    uint64_t v117 = v168;
    v168(v161, v6, v91);
    id v118 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v119 = sub_241631D38();
    uint64_t v121 = v120;
    uint64_t v122 = v91;
    v116(v6, v91);
    uint64_t v123 = v155;
    *(void *)(v155 + 112) = v119;
    *(void *)(v123 + 120) = v121;
    sub_241631C38();
    uint64_t v124 = v161;
    v117(v161, v6, v91);
    id v125 = (id)qword_26B0181A0;
    sub_24162B7D8();
    unint64_t v126 = v124;
    uint64_t v127 = sub_241631D38();
    uint64_t v129 = v128;
    v116(v6, v91);
    uint64_t v130 = v155;
    *(void *)(v155 + 128) = v127;
    *(void *)(v130 + 136) = v129;
    *uint64_t v153 = v130;
    uint64_t v131 = v163;
    unint64_t v132 = v159;
    ((void (*)(void))v159)();
    uint64_t v133 = v167;
    uint64_t v134 = (uint64_t *)(v160 + 12 * v167);
    sub_241631C38();
    v168(v124, v6, v122);
    id v135 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v136 = sub_241631D38();
    uint64_t v138 = v137;
    uint64_t v139 = v158;
    v170(v6, v158);
    *uint64_t v134 = v136;
    v134[1] = v138;
    v134[2] = 0;
    ((void (*)(uint64_t *, void, uint64_t))v132)(v134, v156, v131);
    unint64_t v140 = v160 + 13 * v133;
    sub_241631C38();
    v168(v126, v6, v139);
    id v141 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v142 = sub_241631D38();
    uint64_t v144 = v143;
    v170(v6, v139);
    *(void *)unint64_t v140 = v142;
    *(void *)(v140 + 8) = v144;
    *(unsigned char *)(v140 + 16) = 0;
    uint64_t v145 = v157;
    uint64_t v146 = v163;
    ((void (*)(unint64_t, void, uint64_t))v159)(v140, v157, v163);
    unint64_t v147 = v160 + 14 * v167;
    sub_241631C38();
    v168(v126, v6, v139);
    id v148 = (id)qword_26B0181A0;
    sub_24162B7D8();
    uint64_t v149 = sub_241631D38();
    uint64_t v151 = v150;
    v170(v6, v139);
    *(void *)unint64_t v147 = v149;
    *(void *)(v147 + 8) = v151;
    *(unsigned char *)(v147 + 16) = 0;
    ((void (*)(unint64_t, uint64_t, uint64_t))v159)(v147, v145, v146);
  }
  else
  {
    __break(1u);
  }
}

ValueMetadata *type metadata accessor for Period101ArticleDataProvider()
{
  return &type metadata for Period101ArticleDataProvider;
}

uint64_t sub_24151EAA0()
{
  sub_2411BFDA0(0, (unint64_t *)&qword_26B0121F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24163B390;
  sub_24122BFD4();
  *(void *)(v0 + 32) = MEMORY[0x24561F7D0]((id)*MEMORY[0x263F09380]);
  unint64_t v13 = v0;
  sub_241631F48();
  unint64_t v1 = v0;
  id v2 = (id)MEMORY[0x24561F7D0]((id)*MEMORY[0x263F093D8]);
  uint64_t v3 = (void *)MEMORY[0x24561F7D0]((id)*MEMORY[0x263F09340]);
  uint64_t v4 = (void *)MEMORY[0x24561F7D0]((id)*MEMORY[0x263F09328]);
  uint64_t v5 = (void *)MEMORY[0x24561F7D0]((id)*MEMORY[0x263F093B8]);
  if (v1 >> 62)
  {
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    uint64_t v12 = sub_241633068();
    swift_bridgeObjectRelease();
    if (!__OFADD__(v12, 4))
    {
LABEL_3:
      sub_2412BBAFC();
      sub_241631F48();
      id v2 = v2;
      MEMORY[0x24561F3D0]();
      if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if (!__OFADD__(*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10), 4))
  {
    goto LABEL_3;
  }
  __break(1u);
LABEL_14:
  sub_241631F68();
LABEL_4:
  sub_241631F98();
  sub_241631F48();
  id v6 = v3;
  MEMORY[0x24561F3D0]();
  if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_241631F68();
  }
  sub_241631F98();
  sub_241631F48();
  id v7 = v4;
  MEMORY[0x24561F3D0]();
  if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_241631F68();
  }
  sub_241631F98();
  sub_241631F48();
  id v8 = v5;
  MEMORY[0x24561F3D0]();
  if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_241631F68();
  }
  sub_241631F98();
  sub_241631F48();

  uint64_t v9 = sub_2414AD728(v13);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_241570544(v9);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24151EDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24151EDD8);
}

uint64_t sub_24151EDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24151EDF0);
}

uint64_t type metadata accessor for GestationalAgeOnDatePickerRow(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D02538);
}

uint64_t *sub_24151EE18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24162DA38();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_24151EF50(uint64_t a1, uint64_t a2)
{
  sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_24162DA38();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_24151F028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162DA38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_24151F110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162DA38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_24151F1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162DA38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_24151F2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24162DA38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_24151F3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24151F3DC);
}

uint64_t sub_24151F3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_24162DA38();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_24151F508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24151F51C);
}

uint64_t sub_24151F520(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_24162DA38();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for GestationalAgeInWeeksAndDaysPickerRow(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D02548);
}

void sub_24151F674()
{
  sub_241521400(319, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  if (v0 <= 0x3F)
  {
    sub_24162DA38();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_24151F76C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24151F788@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for GestationalAgeInWeeksAndDaysPickerRow(0);
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = v4;
  uint64_t v31 = (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_24162DA38();
  uint64_t v28 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v26 - v10;
  if (qword_268CF9868 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_268D02520;
  uint64_t v27 = qword_268D02518;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631378();
  swift_getKeyPath();
  sub_241631398();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v13 = v33;
  uint64_t v26 = v34;
  char v14 = v35;
  uint64_t v15 = v28;
  uint64_t v16 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v6, v1 + *(int *)(v3 + 20), v32);
  uint64_t v17 = v31;
  sub_24152146C(v1, v31, type metadata accessor for GestationalAgeInWeeksAndDaysPickerRow);
  unint64_t v18 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v19 = swift_allocObject();
  sub_241520E5C(v17, v19 + v18, type metadata accessor for GestationalAgeInWeeksAndDaysPickerRow);
  *(void *)a1 = v27;
  *(void *)(a1 + 8) = v12;
  uint64_t v20 = v26;
  *(void *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v20;
  *(unsigned char *)(a1 + 32) = v14;
  sub_241521380(0, &qword_268D02558, (uint64_t (*)(uint64_t))sub_241520A64, sub_241520D44, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for PregnancyInteractivePickerRow);
  uint64_t v22 = v21;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1 + *(int *)(v21 + 44), v6, v16);
  id v24 = (void *)(a1 + *(int *)(v22 + 48));
  *id v24 = 0xD00000000000001DLL;
  v24[1] = 0x800000024166FF00;
  uint64_t v25 = (uint64_t (**)())(a1 + *(int *)(v22 + 52));
  *uint64_t v25 = sub_241520A38;
  v25[1] = (uint64_t (*)())v19;
  return result;
}

uint64_t sub_24151FB78@<X0>(uint64_t a1@<X8>)
{
  sub_241520A64();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v5 = sub_241630918();
  unsigned __int8 v6 = sub_241630938();
  char v7 = sub_241630928();
  sub_241630928();
  if (sub_241630928() != v5) {
    char v7 = sub_241630928();
  }
  sub_241630928();
  if (sub_241630928() != v6) {
    char v7 = sub_241630928();
  }
  unsigned char *v4 = v7;
  sub_241520DC0();
  sub_24151FC98((uint64_t)&v4[*(int *)(v8 + 44)]);
  return sub_241520E5C((uint64_t)v4, a1, (uint64_t (*)(void))sub_241520A64);
}

uint64_t sub_24151FC98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F1B6D0];
  sub_241520BC0(0, &qword_268D02598, MEMORY[0x263F1B6D0]);
  MEMORY[0x270FA5388](v3 - 8);
  unsigned __int8 v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F1B640];
  sub_241520BC0(0, &qword_268D02578, MEMORY[0x263F1B640]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v20 - v14;
  *(void *)uint64_t v15 = sub_241630498();
  *((void *)v15 + 1) = 0;
  unsigned char v15[16] = 1;
  sub_241520EC4(0, &qword_268D025B8);
  sub_24151FF0C((uint64_t)&v15[*(int *)(v16 + 44)]);
  *(void *)uint64_t v8 = sub_2416305A8();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  sub_241520EC4(0, &qword_268D025C0);
  sub_24151FF0C((uint64_t)&v8[*(int *)(v17 + 44)]);
  sub_241520F5C((uint64_t)v15, (uint64_t)v12, &qword_268D02578, v9);
  sub_241520F5C((uint64_t)v8, (uint64_t)v5, &qword_268D02598, v2);
  sub_241520F5C((uint64_t)v12, a1, &qword_268D02578, v9);
  sub_241520B18();
  sub_241520F5C((uint64_t)v5, a1 + *(int *)(v18 + 48), &qword_268D02598, v2);
  sub_241520FC8((uint64_t)v8, &qword_268D02598, v2);
  sub_241520FC8((uint64_t)v15, &qword_268D02578, v9);
  sub_241520FC8((uint64_t)v5, &qword_268D02598, v2);
  return sub_241520FC8((uint64_t)v12, &qword_268D02578, v9);
}

uint64_t sub_24151FF0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v1 = type metadata accessor for PregnancyTimePeriodInputCell();
  uint64_t v2 = v1 - 8;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v17 - v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v17 - v12;
  sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  sub_241631368();
  type metadata accessor for PregnancyDatesInputViewModel();
  sub_241520D78((unint64_t *)&qword_268CFA8A0, (void (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel);
  sub_241631388();
  v13[*(int *)(v2 + 28)] = 2;
  sub_241631368();
  sub_241631388();
  v10[*(int *)(v2 + 28)] = 1;
  sub_24152146C((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PregnancyTimePeriodInputCell);
  sub_24152146C((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PregnancyTimePeriodInputCell);
  uint64_t v14 = v17;
  sub_24152146C((uint64_t)v7, v17, (uint64_t (*)(void))type metadata accessor for PregnancyTimePeriodInputCell);
  sub_241520C7C();
  sub_24152146C((uint64_t)v4, v14 + *(int *)(v15 + 48), (uint64_t (*)(void))type metadata accessor for PregnancyTimePeriodInputCell);
  sub_241521024((uint64_t)v10);
  sub_241521024((uint64_t)v13);
  sub_241521024((uint64_t)v4);
  return sub_241521024((uint64_t)v7);
}

uint64_t sub_241520160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for GestationalAgeOnDatePickerRow(0);
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = v4;
  uint64_t v31 = (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_24162DA38();
  uint64_t v28 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v26 - v10;
  if (qword_268CF9870 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_268D02530;
  uint64_t v27 = qword_268D02528;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631378();
  swift_getKeyPath();
  sub_241631398();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v13 = v33;
  uint64_t v26 = v34;
  char v14 = v35;
  uint64_t v15 = v28;
  uint64_t v16 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v6, v1 + *(int *)(v3 + 20), v32);
  uint64_t v17 = v31;
  sub_24152146C(v1, v31, type metadata accessor for GestationalAgeOnDatePickerRow);
  unint64_t v18 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v19 = swift_allocObject();
  sub_241520E5C(v17, v19 + v18, type metadata accessor for GestationalAgeOnDatePickerRow);
  *(void *)a1 = v27;
  *(void *)(a1 + 8) = v12;
  uint64_t v20 = v26;
  *(void *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v20;
  *(unsigned char *)(a1 + 32) = v14;
  sub_241521380(0, &qword_268CFA5F8, (uint64_t (*)(uint64_t))sub_2411E2B10, sub_2411E2B70, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for PregnancyInteractivePickerRow);
  uint64_t v22 = v21;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1 + *(int *)(v21 + 44), v6, v16);
  id v24 = (void *)(a1 + *(int *)(v22 + 48));
  *id v24 = 0xD000000000000023;
  v24[1] = 0x800000024166FF40;
  uint64_t v25 = (uint64_t (**)())(a1 + *(int *)(v22 + 52));
  *uint64_t v25 = sub_2415212C8;
  v25[1] = (uint64_t (*)())v19;
  return result;
}

uint64_t sub_241520550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_241630668();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v27 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24162B718();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411E2BA4(0);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v26 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241521400(0, &qword_268CFA618, MEMORY[0x263F07490], MEMORY[0x263F1B750]);
  MEMORY[0x270FA5388](v8 - 8);
  sub_241521400(0, &qword_268CFA5E0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyDatesInputViewModel, MEMORY[0x263F1B870]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v22 - v12;
  sub_2411E2B10();
  uint64_t v25 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268CF9870 != -1) {
    swift_once();
  }
  uint64_t v30 = qword_268D02528;
  uint64_t v31 = qword_268D02530;
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631378();
  swift_getKeyPath();
  sub_241631398();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_241631368();
  int v18 = *(unsigned __int8 *)(v29 + 16);
  swift_release();
  if (v18 == 1)
  {
    sub_24162B708();
    sub_2413F6204((uint64_t)v5, v26);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
  }
  else
  {
    uint64_t v19 = v26;
    if (qword_268CF9598 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_2411BF848(v22, (uint64_t)qword_268D23FE8);
    sub_24152146C(v20, (uint64_t)v19, (uint64_t (*)(void))sub_2411E2BA4);
  }
  sub_241630658();
  sub_2411D662C();
  sub_24162FE58();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v28, v17, v25);
}

uint64_t sub_2415209D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2415209F0(uint64_t a1)
{
  return sub_2415210A8(a1, 0xD00000000000001ELL, 0x800000024166FF20, &qword_268D02518, &qword_268D02520);
}

uint64_t sub_241520A20()
{
  return sub_2411998CC(type metadata accessor for GestationalAgeInWeeksAndDaysPickerRow);
}

uint64_t sub_241520A38()
{
  return sub_2415212F4(type metadata accessor for GestationalAgeInWeeksAndDaysPickerRow, (uint64_t (*)(uint64_t))sub_24151FB78);
}

void sub_241520A64()
{
  if (!qword_268D02560)
  {
    sub_241521400(255, &qword_268D02568, (uint64_t (*)(uint64_t))sub_241520B18, MEMORY[0x263F1BAC8]);
    sub_241520CE0(&qword_268D025A0, &qword_268D02568, (uint64_t (*)(uint64_t))sub_241520B18);
    unint64_t v0 = sub_24162FFA8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02560);
    }
  }
}

void sub_241520B18()
{
  if (!qword_268D02570)
  {
    sub_241520BC0(255, &qword_268D02578, MEMORY[0x263F1B640]);
    sub_241520BC0(255, &qword_268D02598, MEMORY[0x263F1B6D0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D02570);
    }
  }
}

void sub_241520BC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_241521400(255, &qword_268D02580, (uint64_t (*)(uint64_t))sub_241520C7C, MEMORY[0x263F1BAC8]);
    uint64_t v7 = v6;
    uint64_t v8 = sub_241520CE0(&qword_268D02590, &qword_268D02580, (uint64_t (*)(uint64_t))sub_241520C7C);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241520C7C()
{
  if (!qword_268D02588)
  {
    type metadata accessor for PregnancyTimePeriodInputCell();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D02588);
    }
  }
}

uint64_t sub_241520CE0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241521400(255, a2, a3, MEMORY[0x263F1BAC8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241520D44()
{
  return sub_241520D78(&qword_268D025A8, (void (*)(uint64_t))sub_241520A64);
}

uint64_t sub_241520D78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241520DC0()
{
  if (!qword_268D025B0)
  {
    sub_241521400(255, &qword_268D02568, (uint64_t (*)(uint64_t))sub_241520B18, MEMORY[0x263F1BAC8]);
    sub_24150CD44();
    unint64_t v0 = sub_241630028();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D025B0);
    }
  }
}

uint64_t sub_241520E5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_241520EC4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_241521400(255, &qword_268D02580, (uint64_t (*)(uint64_t))sub_241520C7C, MEMORY[0x263F1BAC8]);
    unint64_t v3 = sub_241630028();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_241520F5C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_241520BC0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241520FC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  sub_241520BC0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241521024(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PregnancyTimePeriodInputCell();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241521080(uint64_t a1)
{
  return sub_2415210A8(a1, 0xD000000000000020, 0x800000024166FF70, &qword_268D02528, &qword_268D02530);
}

uint64_t sub_2415210A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v7 = sub_24162B7E8();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_241631CA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v20[-v13];
  sub_241631C38();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v11, v14, v8);
  if (qword_26B0131F0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B0181A0;
  sub_24162B7D8();
  uint64_t v16 = sub_241631D38();
  uint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
  *a4 = v16;
  *a5 = v18;
  return result;
}

uint64_t sub_2415212B0()
{
  return sub_2411998CC(type metadata accessor for GestationalAgeOnDatePickerRow);
}

uint64_t sub_2415212C8()
{
  return sub_2415212F4(type metadata accessor for GestationalAgeOnDatePickerRow, (uint64_t (*)(uint64_t))sub_241520550);
}

uint64_t sub_2415212F4(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

void sub_241521380(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_241521400(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24152146C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2415214D4()
{
  return sub_241521524(&qword_268D025C8, &qword_268D02558, (uint64_t (*)(uint64_t))sub_241520A64, sub_241520D44);
}

uint64_t sub_241521524(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241521380(255, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for PregnancyInteractivePickerRow);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241521588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_24162B698() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a2 + v6);

  return sub_24149BF74(v7, v8);
}

uint64_t sub_2415215F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241631AC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F090E8];
  sub_241524A6C(0, (unint64_t *)&unk_26B00F1B0, MEMORY[0x263F090E8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v11 - v8;
  sub_241525680(v1, (uint64_t)&v11 - v8, (unint64_t *)&unk_26B00F1B0, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    sub_241633328();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    sub_241633328();
    sub_24152876C(&qword_268CFBDB8, MEMORY[0x263F090E8]);
    sub_241631B78();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for CompactCalendarDayViewModel(0);
  sub_24162E788();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  sub_241631DC8();
  swift_bridgeObjectRelease();
  sub_241633328();
  return sub_241633328();
}

uint64_t sub_241521860()
{
  return sub_241633358();
}

uint64_t sub_2415218A4()
{
  return sub_241633358();
}

uint64_t sub_2415218E0(uint64_t a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241524A6C(0, &qword_268CFFB38, type metadata accessor for CompactCalendarMonthViewModel, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v12[-v5];
  uint64_t v7 = v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CalendarMonthCell_viewModel;
  swift_beginAccess();
  sub_241525680(v7, (uint64_t)v6, &qword_268CFFB38, type metadata accessor for CompactCalendarMonthViewModel);
  uint64_t v8 = type metadata accessor for CompactCalendarMonthViewModel(0);
  int v9 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8);
  sub_241527C30((uint64_t)v6, &qword_268CFFB38, type metadata accessor for CompactCalendarMonthViewModel, v3);
  if (v9 != 1)
  {
    uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CalendarMonthCell_calendarView);
    if (v10) {
      objc_msgSend(v10, sel_removeFromSuperview);
    }
  }
  swift_beginAccess();
  sub_241525700(a1, v7);
  return swift_endAccess();
}

id sub_241521CA8()
{
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v0 = (void *)sub_241631F18();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_241521D0C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  *(void *)(a1 + *a4) = sub_241631F28();

  return swift_bridgeObjectRelease();
}

void sub_241521F60(uint64_t a1)
{
  uint64_t v2 = sub_2416313B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_2416313C8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CompactCalendar(0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241528808(a1, (uint64_t)v13, type metadata accessor for CompactCalendarMonthViewModel);
  uint64_t v26 = *(int *)(v11 + 28);
  if (qword_268CF9880 != -1) {
    swift_once();
  }
  *uint64_t v5 = qword_268D025D8;
  v5[1] = 0x7FF0000000000000;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B8C0], v2);
  if (qword_268CF9878 != -1) {
    swift_once();
  }
  sub_2416313D8();
  uint64_t v14 = sub_241631F88();
  *(void *)(v14 + 16) = 7;
  unint64_t v15 = v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v16 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 16);
  v16(v15, v9, v6);
  uint64_t v17 = *(void *)(v7 + 72);
  v16(v15 + v17, v9, v6);
  v16(v15 + 2 * v17, v9, v6);
  v16(v15 + 3 * v17, v9, v6);
  v16(v15 + 4 * v17, v9, v6);
  v16(v15 + 5 * v17, v9, v6);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + 6 * v17, v9, v6);
  *(void *)&v13[v26] = v14;
  sub_2415255EC();
  id v19 = objc_allocWithZone(v18);
  uint64_t v20 = (void *)sub_2416300E8();
  uint64_t v21 = v27;
  uint64_t v22 = *(void **)&v27[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CalendarMonthCell_calendarView];
  *(void *)&v27[OBJC_IVAR____TtC24MenstrualCyclesAppPlugin17CalendarMonthCell_calendarView] = v20;
  id v23 = v20;

  id v24 = objc_msgSend(v21, sel_contentView);
  objc_msgSend(v24, sel_addSubview_, v23);

  id v25 = objc_msgSend(v21, sel_contentView);
  MEMORY[0x24561FDC0]();
}

uint64_t sub_2415223EC()
{
  return type metadata accessor for CalendarMonthCell(0);
}

uint64_t type metadata accessor for CalendarMonthCell(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D02620);
}

void sub_241522414()
{
  sub_241524A6C(319, &qword_268CFFB38, type metadata accessor for CompactCalendarMonthViewModel, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for CompactCalendarMonthViewModel(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D02640);
}

uint64_t *sub_241522510(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24162B718();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for CompactCalendarMonthViewModel(0);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return a1;
}

uint64_t sub_2415225FC(uint64_t a1)
{
  uint64_t v2 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for CompactCalendarMonthViewModel(0);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241522684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CompactCalendarMonthViewModel(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t sub_241522720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CompactCalendarMonthViewModel(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2415227D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CompactCalendarMonthViewModel(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_241522860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CompactCalendarMonthViewModel(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241522900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241522914);
}

uint64_t sub_241522914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241522D0C(a1, a2, a3, type metadata accessor for CompactCalendarMonthViewModel);
}

uint64_t sub_24152292C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241522940);
}

uint64_t sub_241522940(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_241522DFC(a1, a2, a3, a4, type metadata accessor for CompactCalendarMonthViewModel);
}

uint64_t type metadata accessor for CompactCalendar(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D02630);
}

uint64_t sub_241522978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241522ED4(a1, a2, a3, type metadata accessor for CompactCalendarMonthViewModel);
}

uint64_t *sub_241522990(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24162B718();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  }
  return a1;
}

uint64_t sub_241522A60(uint64_t a1)
{
  uint64_t v2 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241522AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  return a1;
}

uint64_t sub_241522B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241522BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_241522C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24162B718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241522CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241522CF4);
}

uint64_t sub_241522CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241522D0C(a1, a2, a3, MEMORY[0x263F07490]);
}

uint64_t sub_241522D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_241522DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241522DE4);
}

uint64_t sub_241522DE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_241522DFC(a1, a2, a3, a4, MEMORY[0x263F07490]);
}

uint64_t sub_241522DFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5(0);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_241522EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241522ED4(a1, a2, a3, MEMORY[0x263F07490]);
}

uint64_t sub_241522ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241522F70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241522F8C@<X0>(char *a1@<X8>)
{
  id v19 = a1;
  uint64_t v1 = sub_2416306F8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_241524B38();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v18 - v8;
  type metadata accessor for CompactCalendar(0);
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  v18[1] = sub_2416305A8();
  if (qword_268CF9888 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_2416306E8();
  MEMORY[0x270FA5388](v10);
  sub_241524B9C();
  sub_241524DD0();
  sub_241631438();
  unint64_t v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v11(v6, v9, v3);
  char v20 = 1;
  uint64_t v12 = v19;
  v11(v19, v6, v3);
  sub_241524AD0();
  uint64_t v14 = &v12[*(int *)(v13 + 48)];
  char v15 = v20;
  *(void *)uint64_t v14 = 0;
  v14[8] = v15;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v9, v3);
  return ((uint64_t (*)(char *, uint64_t))v16)(v6, v3);
}

uint64_t sub_24152321C()
{
  sub_2415232B8((uint64_t *)&v1);
  sub_241524C04();
  sub_241524E54();
  return sub_241631318();
}

uint64_t sub_2415232B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v32 = sub_24162B5A8();
  uint64_t v2 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24162B5B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = sub_24162B718();
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, v1, v12, v14);
  MEMORY[0x245618270](v17);
  sub_24162B578();
  sub_24162B518();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v32);
  Class v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v8, v5);
  sub_24152876C((unint64_t *)&qword_268CFA550, MEMORY[0x263F07258]);
  sub_24162B6F8();
  v18(v11, v5);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  sub_2411D662C();
  uint64_t v19 = sub_241630C28();
  uint64_t v21 = v20;
  LOBYTE(v12) = v22 & 1;
  sub_241630A78();
  sub_2416309F8();
  swift_release();
  uint64_t v23 = sub_241630BE8();
  uint64_t v25 = v24;
  LOBYTE(v8) = v26;
  uint64_t v28 = v27;
  swift_release();
  sub_24120EFBC(v19, v21, v12);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v30 = v33;
  *uint64_t v33 = v23;
  v30[1] = v25;
  *((unsigned char *)v30 + 16) = v8 & 1;
  v30[3] = v28;
  return result;
}

uint64_t sub_241523614()
{
  return sub_2416312E8();
}

uint64_t sub_241523780@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CompactCalendarDayViewModel(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241528808(a1, (uint64_t)v6, type metadata accessor for CompactCalendarDayViewModel);
  *a2 = swift_getKeyPath();
  sub_241524A6C(0, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = type metadata accessor for Day(0);
  return sub_241527C8C((uint64_t)v6, (uint64_t)a2 + *(int *)(v7 + 20), type metadata accessor for CompactCalendarDayViewModel);
}

uint64_t sub_241523898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_2416305A8();
  if (qword_268CF9890 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_268D025E8;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 0;
  sub_2415277E4(0, &qword_268D02650, &qword_268D02658, (uint64_t (*)(uint64_t))sub_241524AD0);
  return sub_241522F8C((char *)(a1 + *(int *)(v4 + 44)));
}

uint64_t sub_241523944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  sub_241527938();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2415278D0();
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v34 = &v30[-v11];
  uint64_t v32 = a1;
  sub_241523BD4((uint64_t)v5);
  sub_241523F9C((uint64_t)&v35);
  uint64_t v12 = v35;
  uint64_t v13 = v36;
  char v14 = v37;
  uint64_t v15 = v38;
  LOBYTE(a1) = v39;
  int v31 = BYTE1(v39);
  uint64_t v16 = sub_2416313F8();
  uint64_t v18 = v17;
  sub_241528808((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))sub_241527938);
  uint64_t v19 = &v9[*(int *)(v7 + 44)];
  *(void *)uint64_t v19 = v12;
  *((void *)v19 + 1) = v13;
  unsigned char v19[16] = v14;
  *((void *)v19 + 3) = v15;
  v19[32] = a1;
  v19[33] = v31;
  *((void *)v19 + 5) = v16;
  *((void *)v19 + 6) = v18;
  sub_241528870((uint64_t)v5, (uint64_t (*)(void))sub_241527938);
  uint64_t v20 = v34;
  sub_241527C8C((uint64_t)v9, (uint64_t)v34, (uint64_t (*)(void))sub_2415278D0);
  sub_241524364((uint64_t)&v35);
  uint64_t v32 = v35;
  LOBYTE(v15) = v36;
  uint64_t v21 = v37;
  LOBYTE(v18) = v38;
  uint64_t v22 = v39;
  uint64_t v23 = v40;
  uint64_t v24 = v41;
  uint64_t v25 = v42;
  sub_241528808((uint64_t)v20, (uint64_t)v9, (uint64_t (*)(void))sub_2415278D0);
  uint64_t v26 = v33;
  sub_241528808((uint64_t)v9, v33, (uint64_t (*)(void))sub_2415278D0);
  sub_241527860();
  uint64_t v28 = v26 + *(int *)(v27 + 48);
  *(void *)uint64_t v28 = v32;
  *(unsigned char *)(v28 + 8) = v15;
  *(void *)(v28 + 16) = v21;
  *(unsigned char *)(v28 + 24) = v18;
  *(void *)(v28 + 32) = v22;
  *(void *)(v28 + 40) = v23;
  *(void *)(v28 + 48) = v24;
  *(void *)(v28 + 56) = v25;
  swift_retain();
  swift_retain();
  sub_241528870((uint64_t)v34, (uint64_t (*)(void))sub_2415278D0);
  swift_release();
  swift_release();
  return sub_241528870((uint64_t)v9, (uint64_t (*)(void))sub_2415278D0);
}

uint64_t sub_241523BD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v1 = type metadata accessor for SelectedDayIndicator(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v29 - v5;
  sub_241528700(0, &qword_268D02728, type metadata accessor for SelectedDayIndicator, MEMORY[0x263F18868], MEMORY[0x263F18E28]);
  uint64_t v30 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - v8;
  *uint64_t v3 = swift_getKeyPath();
  sub_241524A6C(0, &qword_268CFBA10, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  sub_241527C8C((uint64_t)v3, (uint64_t)v6, type metadata accessor for SelectedDayIndicator);
  if (qword_268CF9880 != -1) {
    swift_once();
  }
  double v10 = *(double *)&qword_268D025D8;
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_defaultMetrics);
  uint64_t v13 = self;
  id v14 = objc_msgSend(v13, sel_currentTraitCollection);
  objc_msgSend(v12, sel_scaledValueForValue_compatibleWithTraitCollection_, v14, v10);

  double v15 = *(double *)&qword_268D025D8;
  id v16 = objc_msgSend(v11, sel_defaultMetrics);
  id v17 = objc_msgSend(v13, sel_currentTraitCollection);
  objc_msgSend(v16, sel_scaledValueForValue_compatibleWithTraitCollection_, v17, v15);

  sub_2416313F8();
  sub_24162FFB8();
  sub_241528808((uint64_t)v6, (uint64_t)v9, type metadata accessor for SelectedDayIndicator);
  uint64_t v18 = &v9[*(int *)(v30 + 36)];
  long long v19 = v34;
  *(_OWORD *)uint64_t v18 = v33;
  *((_OWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 2) = v35;
  sub_241528870((uint64_t)v6, type metadata accessor for SelectedDayIndicator);
  uint64_t v20 = v31 + *(int *)(type metadata accessor for Day(0) + 20);
  if (*(unsigned char *)(v20 + *(int *)(type metadata accessor for CompactCalendarDayViewModel(0) + 28)) == 1)
  {
    id v21 = objc_msgSend(self, sel_hkmc_menstruationColor);
    uint64_t v22 = MEMORY[0x24561E4E0](v21);
  }
  else
  {
    uint64_t v22 = sub_241630FD8();
  }
  uint64_t v23 = v22;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = v32;
  sub_241527CF4((uint64_t)v9, v32);
  sub_241527938();
  uint64_t v27 = (uint64_t *)(v25 + *(int *)(v26 + 36));
  *uint64_t v27 = KeyPath;
  v27[1] = v23;
  return sub_241527D90((uint64_t)v9);
}

uint64_t sub_241523F9C@<X0>(uint64_t a1@<X8>)
{
  v40[0] = a1;
  sub_241524A6C(0, &qword_268CFD160, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v40 - v3;
  uint64_t v5 = v1 + *(int *)(type metadata accessor for Day(0) + 20);
  uint64_t v6 = type metadata accessor for CompactCalendarDayViewModel(0);
  uint64_t v7 = (void *)(v5 + *(int *)(v6 + 24));
  uint64_t v8 = v7[1];
  v40[4] = *v7;
  v40[5] = v8;
  sub_2411D662C();
  _s24MenstrualCyclesAppPlugin30PDFHorizontallySequentialItemsV7contentSay18HealthExperienceUI13PDFRenderable_pGvg_0();
  uint64_t v9 = sub_241630C28();
  uint64_t v11 = v10;
  char v13 = v12;
  if (*(unsigned char *)(v5 + *(int *)(v6 + 28)) == 1)
  {
    id v14 = self;
    double v15 = &selRef_whiteColor;
  }
  else
  {
    char v16 = sub_24162E768();
    id v14 = self;
    double v15 = &selRef_labelColor;
    if (v16) {
      double v15 = &selRef_secondaryLabelColor;
    }
  }
  MEMORY[0x24561E4E0](objc_msgSend(v14, *v15, v40[0]));
  uint64_t v17 = sub_241630BA8();
  uint64_t v19 = v18;
  char v21 = v20;
  swift_release();
  sub_24120EFBC(v9, v11, v13 & 1);
  swift_bridgeObjectRelease();
  if (qword_268CF98A8 != -1) {
    swift_once();
  }
  double v22 = *(double *)&qword_268D02600;
  id v23 = objc_msgSend(self, sel_defaultMetrics);
  id v24 = objc_msgSend(self, sel_currentTraitCollection);
  objc_msgSend(v23, sel_scaledValueForValue_compatibleWithTraitCollection_, v24, v22);

  uint64_t v25 = sub_241630A08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v4, 1, 1, v25);
  sub_241630A58();
  sub_241527C30((uint64_t)v4, &qword_268CFD160, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
  uint64_t v26 = sub_241630BE8();
  uint64_t v28 = v27;
  char v30 = v29;
  swift_release();
  sub_24120EFBC(v17, v19, v21 & 1);
  swift_bridgeObjectRelease();
  sub_241630A48();
  uint64_t v31 = sub_241630B98();
  uint64_t v33 = v32;
  char v35 = v34;
  uint64_t v37 = v36;
  sub_24120EFBC(v26, v28, v30 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v39 = v40[0];
  *(void *)v40[0] = v31;
  *(void *)(v39 + 8) = v33;
  *(unsigned char *)(v39 + 16) = v35 & 1;
  *(void *)(v39 + 24) = v37;
  *(_WORD *)(v39 + 32) = 257;
  return result;
}

uint64_t sub_241524364@<X0>(uint64_t a1@<X8>)
{
  if (qword_268CF9898 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_268D025F0;
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_defaultMetrics);
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_currentTraitCollection);
  objc_msgSend(v5, sel_scaledValueForValue_compatibleWithTraitCollection_, v7, v3);

  double v8 = *(double *)&qword_268D025F0;
  id v9 = objc_msgSend(v4, sel_defaultMetrics);
  id v10 = objc_msgSend(v6, sel_currentTraitCollection);
  objc_msgSend(v9, sel_scaledValueForValue_compatibleWithTraitCollection_, v10, v8);

  sub_2416313F8();
  sub_24162FFB8();
  uint64_t v11 = v1 + *(int *)(type metadata accessor for Day(0) + 20);
  if (*(unsigned char *)(v11 + *(int *)(type metadata accessor for CompactCalendarDayViewModel(0) + 32)) == 1)
  {
    id v12 = objc_msgSend(self, sel_hkmc_supplementaryDataColor);
    uint64_t v13 = MEMORY[0x24561E4E0](v12);
  }
  else
  {
    uint64_t v13 = sub_241630FD8();
  }
  uint64_t v14 = v13;
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v16;
  *(unsigned char *)(a1 + 8) = v17;
  *(void *)(a1 + 16) = v18;
  *(unsigned char *)(a1 + 24) = v19;
  *(void *)(a1 + 32) = v20;
  *(void *)(a1 + 40) = v21;
  *(void *)(a1 + 48) = result;
  *(void *)(a1 + 56) = v14;
  return result;
}

uint64_t sub_241524570@<X0>(uint64_t a1@<X8>)
{
  if (qword_268CF98A0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_268D025F8;
  *(void *)a1 = sub_241630598();
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 0;
  sub_2415277E4(0, &qword_268D02700, &qword_268D02708, (uint64_t (*)(uint64_t))sub_241527860);
  return sub_241523944(v1, a1 + *(int *)(v4 + 44));
}

uint64_t sub_241524618@<X0>(uint64_t a1@<X8>)
{
  v21[1] = a1;
  sub_241528700(0, &qword_268D02778, MEMORY[0x263F19048], MEMORY[0x263F1B638], MEMORY[0x263F19B20]);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v21 - v2;
  uint64_t v4 = sub_2416301B8();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (long long *)((char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_241630128();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v21 - v12;
  sub_241428880((uint64_t)v21 - v12);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F18D10], v7);
  sub_24152876C(&qword_268D021D8, MEMORY[0x263F18D80]);
  char v14 = sub_241631BB8();
  double v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v10, v7);
  v15(v13, v7);
  if (v14)
  {
    if (qword_268CF98B0 != -1) {
      swift_once();
    }
    long long v16 = xmmword_268D02608;
    char v17 = (char *)v6 + *(int *)(v4 + 20);
    uint64_t v18 = *MEMORY[0x263F19860];
    uint64_t v19 = sub_241630558();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v17, v18, v19);
    *uint64_t v6 = v16;
    sub_241528808((uint64_t)v6, (uint64_t)v3, MEMORY[0x263F19048]);
    swift_storeEnumTagMultiPayload();
    sub_24152876C(&qword_268D02780, MEMORY[0x263F19048]);
    sub_2415287B4();
    sub_241630638();
    return sub_241528870((uint64_t)v6, MEMORY[0x263F19048]);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_24152876C(&qword_268D02780, MEMORY[0x263F19048]);
    sub_2415287B4();
    return sub_241630638();
  }
}

void sub_241524A2C()
{
  qword_268D025D0 = 0x4000000000000000;
}

void sub_241524A3C()
{
  qword_268D025D8 = 0x402A000000000000;
}

void sub_241524A4C()
{
  qword_268D025E0 = 0x3FF0000000000000;
}

void sub_241524A5C()
{
  qword_268D025E8 = 0x3FF0000000000000;
}

void sub_241524A6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241524AD0()
{
  if (!qword_268D02660)
  {
    sub_241524B38();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D02660);
    }
  }
}

void sub_241524B38()
{
  if (!qword_268D02668)
  {
    sub_241524B9C();
    sub_241524DD0();
    unint64_t v0 = sub_241631448();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02668);
    }
  }
}

void sub_241524B9C()
{
  if (!qword_268D02670)
  {
    sub_241524C04();
    unint64_t v0 = sub_241631358();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02670);
    }
  }
}

void sub_241524C04()
{
  if (!qword_268D02678)
  {
    sub_241524A6C(255, &qword_268D02680, type metadata accessor for CompactCalendarDayViewModel, MEMORY[0x263F8D488]);
    type metadata accessor for CompactCalendarDayViewModel(255);
    type metadata accessor for Day(255);
    sub_241524D48();
    sub_24152876C(&qword_268D02690, (void (*)(uint64_t))type metadata accessor for CompactCalendarDayViewModel);
    unint64_t v0 = sub_241631308();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D02678);
    }
  }
}

uint64_t type metadata accessor for CompactCalendarDayViewModel(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D026D0);
}

uint64_t type metadata accessor for Day(uint64_t a1)
{
  return sub_2411B6BD4(a1, (uint64_t *)&unk_268D026C0);
}

unint64_t sub_241524D48()
{
  unint64_t result = qword_268D02688;
  if (!qword_268D02688)
  {
    sub_241524A6C(255, &qword_268D02680, type metadata accessor for CompactCalendarDayViewModel, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D02688);
  }
  return result;
}