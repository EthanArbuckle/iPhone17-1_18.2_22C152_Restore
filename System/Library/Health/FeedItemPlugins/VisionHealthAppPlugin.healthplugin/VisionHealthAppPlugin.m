uint64_t sub_241D1F3D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for VisionHealthPluginDelegate();
  result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for VisionHealthPluginDelegate()
{
  return self;
}

uint64_t sub_241D1F430()
{
  return MEMORY[0x263F8EE78];
}

id sub_241D1F440(char a1)
{
  id v2 = 0;
  switch(a1)
  {
    case 2:
    case 6:
      id v3 = objc_msgSend(self, sel_degreeAngleUnit);
      goto LABEL_6;
    case 4:
    case 11:
    case 12:
    case 13:
    case 14:
      id v3 = objc_msgSend(self, sel_meterUnitWithMetricPrefix_, 4);
      goto LABEL_6;
    case 5:
    case 7:
    case 9:
      id v3 = objc_msgSend(self, sel_prismDiopterUnit);
      goto LABEL_6;
    case 8:
    case 10:
      return v2;
    default:
      id v3 = objc_msgSend(self, sel_diopterUnit);
LABEL_6:
      id v4 = v3;
      id v2 = v4;
      if (v4)
      {
        switch(a1)
        {
          case 0:
            v7 = self;
            v8 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v8, sel_quantityWithUnit_doubleValue_, v9, -40.0);
            id v11 = objc_msgSend(v8, sel_quantityWithUnit_doubleValue_, v9, 20.0);

            id v12 = objc_msgSend(v7, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 1:
            v13 = self;
            v14 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v9, -8.0);
            id v11 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v9, 8.0);

            id v12 = objc_msgSend(v13, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 2:
            v15 = self;
            v16 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v9, 1.0);
            id v11 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v9, 180.0);

            id v12 = objc_msgSend(v15, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 3:
            v17 = self;
            v18 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v9, 0.0);
            id v11 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v9, 4.0);

            id v12 = objc_msgSend(v17, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 4:
            v19 = self;
            v20 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v20, sel_quantityWithUnit_doubleValue_, v9, 12.0);
            id v11 = objc_msgSend(v20, sel_quantityWithUnit_doubleValue_, v9, 14.0);

            id v12 = objc_msgSend(v19, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 5:
          case 7:
          case 9:
            id v5 = sub_241D20CD8();

            return v5;
          case 6:
            v21 = self;
            v22 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v22, sel_quantityWithUnit_doubleValue_, v9, 0.0);
            id v11 = objc_msgSend(v22, sel_quantityWithUnit_doubleValue_, v9, 360.0);

            id v12 = objc_msgSend(v21, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 8:
          case 10:

            return 0;
          case 11:
          case 12:
            v23 = self;
            v24 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v24, sel_quantityWithUnit_doubleValue_, v9, 25.0);
            id v11 = objc_msgSend(v24, sel_quantityWithUnit_doubleValue_, v9, 40.0);

            id v12 = objc_msgSend(v23, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 13:
            v25 = self;
            v26 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v26, sel_quantityWithUnit_doubleValue_, v9, 7.0);
            id v11 = objc_msgSend(v26, sel_quantityWithUnit_doubleValue_, v9, 10.0);

            id v12 = objc_msgSend(v25, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 14:
            v27 = self;
            v28 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v28, sel_quantityWithUnit_doubleValue_, v9, 8.0);
            id v11 = objc_msgSend(v28, sel_quantityWithUnit_doubleValue_, v9, 19.0);

            id v12 = objc_msgSend(v27, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
LABEL_19:
            id v2 = v12;

            break;
          default:
            JUMPOUT(0);
        }
      }
      return v2;
  }
}

id sub_241D1FBA0(char a1)
{
  id v2 = 0;
  switch(a1)
  {
    case 2:
    case 6:
      id v3 = objc_msgSend(self, sel_degreeAngleUnit);
      goto LABEL_6;
    case 4:
    case 11:
    case 12:
    case 13:
    case 14:
      id v3 = objc_msgSend(self, sel_meterUnitWithMetricPrefix_, 4);
      goto LABEL_6;
    case 5:
    case 7:
    case 9:
      id v3 = objc_msgSend(self, sel_prismDiopterUnit);
      goto LABEL_6;
    case 8:
    case 10:
      return v2;
    default:
      id v3 = objc_msgSend(self, sel_diopterUnit);
LABEL_6:
      id v4 = v3;
      id v2 = v4;
      if (v4)
      {
        switch(a1)
        {
          case 0:
            v7 = self;
            v8 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v8, sel_quantityWithUnit_doubleValue_, v9, -10.5);
            id v11 = objc_msgSend(v8, sel_quantityWithUnit_doubleValue_, v9, 6.5);

            id v12 = objc_msgSend(v7, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 1:
            v13 = self;
            v14 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v9, -3.0);
            id v11 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v9, 3.0);

            id v12 = objc_msgSend(v13, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 2:
            v15 = self;
            v16 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v9, 1.0);
            id v11 = objc_msgSend(v16, sel_quantityWithUnit_doubleValue_, v9, 180.0);

            id v12 = objc_msgSend(v15, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 3:
            v17 = self;
            v18 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v9, 0.25);
            id v11 = objc_msgSend(v18, sel_quantityWithUnit_doubleValue_, v9, 2.5);

            id v12 = objc_msgSend(v17, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 4:
            v19 = self;
            v20 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v20, sel_quantityWithUnit_doubleValue_, v9, 12.0);
            id v11 = objc_msgSend(v20, sel_quantityWithUnit_doubleValue_, v9, 14.0);

            id v12 = objc_msgSend(v19, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 5:
          case 7:
          case 9:
            id v5 = sub_241D20DDC();

            return v5;
          case 6:
            v21 = self;
            v22 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v22, sel_quantityWithUnit_doubleValue_, v9, 0.0);
            id v11 = objc_msgSend(v22, sel_quantityWithUnit_doubleValue_, v9, 360.0);

            id v12 = objc_msgSend(v21, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 8:
          case 10:

            return 0;
          case 11:
          case 12:
            v23 = self;
            v24 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v24, sel_quantityWithUnit_doubleValue_, v9, 28.0);
            id v11 = objc_msgSend(v24, sel_quantityWithUnit_doubleValue_, v9, 36.0);

            id v12 = objc_msgSend(v23, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 13:
            v25 = self;
            v26 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v26, sel_quantityWithUnit_doubleValue_, v9, 7.8);
            id v11 = objc_msgSend(v26, sel_quantityWithUnit_doubleValue_, v9, 9.2);

            id v12 = objc_msgSend(v25, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
            goto LABEL_19;
          case 14:
            v27 = self;
            v28 = self;
            id v9 = v2;
            id v10 = objc_msgSend(v28, sel_quantityWithUnit_doubleValue_, v9, 9.0);
            id v11 = objc_msgSend(v28, sel_quantityWithUnit_doubleValue_, v9, 15.0);

            id v12 = objc_msgSend(v27, sel_inclusiveRangeWithMinimum_maximum_, v10, v11);
LABEL_19:
            id v2 = v12;

            break;
          default:
            JUMPOUT(0);
        }
      }
      return v2;
  }
}

id sub_241D2030C()
{
  id v1 = objc_msgSend(v0, sel_minimum);
  objc_msgSend(v1, sel__value);
  double v3 = v2;

  id v4 = objc_msgSend(v0, sel_maximum);
  objc_msgSend(v4, sel__value);
  double v6 = v5;

  id v7 = objc_msgSend(v0, sel_minimum);
  id v8 = objc_msgSend(v7, sel__unit);

  id v9 = self;
  id v10 = self;
  id v11 = v8;
  id v12 = objc_msgSend(v10, sel_quantityWithUnit_doubleValue_, v11, v3 + v3);
  id v13 = objc_msgSend(v10, sel_quantityWithUnit_doubleValue_, v11, v6 + v6);

  id v14 = objc_msgSend(v9, sel_inclusiveRangeWithMinimum_maximum_, v12, v13);
  return v14;
}

uint64_t variable initialization expression of RangeView.minimumFractionDigits()
{
  return 0;
}

uint64_t variable initialization expression of RangeView.maximumFractionDigits()
{
  return 2;
}

uint64_t variable initialization expression of RangeView.showsPositivePrefix()
{
  return 0;
}

uint64_t variable initialization expression of VisionPrescriptionAddRecordConfirmationViewController.addToHealthButton()
{
  return 0;
}

uint64_t variable initialization expression of VisionPrescriptionAddRecordConfirmationViewController.healthStore()
{
  return 0;
}

uint64_t variable initialization expression of VisionPrescriptionAddRecordConfirmationViewController.profileStore()
{
  return 0;
}

uint64_t variable initialization expression of VisionPrescriptionAddRecordConfirmationViewController.samplePredicate()
{
  return 0;
}

void type metadata accessor for HKVisionEye(uint64_t a1)
{
}

void type metadata accessor for HKPrismBase(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for HKVisionPrescriptionType(uint64_t a1)
{
}

BOOL sub_241D20504(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_241D20518(uint64_t a1, uint64_t a2)
{
  return sub_241D20624(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_241D20544(uint64_t a1, uint64_t a2)
{
  return sub_241D20624(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_241D2055C()
{
  sub_241DAA990();
  sub_241DAAA10();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241D205B0()
{
  sub_241DAA990();
  sub_241DAB1B0();
  sub_241DAAA10();
  uint64_t v0 = sub_241DAB1D0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_241D20624(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_241DAA990();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_241D20668(uint64_t a1, id *a2)
{
  uint64_t result = sub_241DAA970();
  *a2 = 0;
  return result;
}

uint64_t sub_241D206E0(uint64_t a1, id *a2)
{
  char v3 = sub_241DAA980();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_241D20760@<X0>(uint64_t *a1@<X8>)
{
  sub_241DAA990();
  uint64_t v2 = sub_241DAA950();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void *sub_241D207A4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_241D207B4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_241D207C4()
{
  uint64_t v0 = sub_241DAA990();
  uint64_t v2 = v1;
  if (v0 == sub_241DAA990() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_241DAB160();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_241D20854(uint64_t a1)
{
  uint64_t v2 = sub_241D20A5C((unint64_t *)&qword_268D4B568, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v3 = sub_241D20A5C(&qword_268D4B570, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_241D20910(uint64_t a1)
{
  uint64_t v2 = sub_241D20A5C((unint64_t *)&qword_268D4B4F0, type metadata accessor for Key);
  uint64_t v3 = sub_241D20A5C(&qword_268D4B4F8, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_241D209CC()
{
  return sub_241D20A5C(&qword_268D4B4D8, type metadata accessor for Key);
}

uint64_t sub_241D20A14()
{
  return sub_241D20A5C(&qword_268D4B4E0, type metadata accessor for Key);
}

uint64_t sub_241D20A5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241D20AA4()
{
  return sub_241D20A5C(&qword_268D4B4E8, type metadata accessor for Key);
}

uint64_t sub_241D20AEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_241DAA990();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_241D20B18(uint64_t a1)
{
  uint64_t v2 = sub_241D20A5C(&qword_268D4B580, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_241D20A5C(&qword_268D4B588, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_241D20BD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_241DAA950();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_241D20C1C(uint64_t a1)
{
  uint64_t v2 = sub_241D20A5C((unint64_t *)&unk_268D4CC10, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_241D20A5C(&qword_268D4B578, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

id sub_241D20CD8()
{
  id v0 = objc_msgSend(self, sel_prismDiopterUnit);
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  uint64_t v2 = self;
  uint64_t v3 = self;
  id v4 = v1;
  id v5 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 0.0);
  id v6 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 40.0);

  id v7 = objc_msgSend(v2, sel_inclusiveRangeWithMinimum_maximum_, v5, v6);
  return v7;
}

id sub_241D20DDC()
{
  id v0 = objc_msgSend(self, sel_prismDiopterUnit);
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  uint64_t v2 = self;
  uint64_t v3 = self;
  id v4 = v1;
  id v5 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 0.0);
  id v6 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 10.0);

  id v7 = objc_msgSend(v2, sel_inclusiveRangeWithMinimum_maximum_, v5, v6);
  return v7;
}

void type metadata accessor for CFError(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void sub_241D20F2C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_241D20F74()
{
  return sub_241D20A5C(&qword_268D4B520, type metadata accessor for URLResourceKey);
}

uint64_t sub_241D20FBC()
{
  return sub_241D20A5C(&qword_268D4B528, type metadata accessor for URLResourceKey);
}

uint64_t sub_241D21004()
{
  return sub_241D20A5C(&qword_268D4B530, type metadata accessor for FileAttributeKey);
}

uint64_t sub_241D2104C()
{
  return sub_241D20A5C(&qword_268D4B538, type metadata accessor for FileAttributeKey);
}

uint64_t sub_241D21094()
{
  return sub_241D20A5C(&qword_268D4B540, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_241D210DC()
{
  return sub_241D20A5C(&qword_268D4B548, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_241D21124()
{
  return sub_241D20A5C(&qword_268D4B550, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_241D2116C()
{
  return sub_241D20A5C(&qword_268D4B558, type metadata accessor for FileAttributeKey);
}

uint64_t sub_241D211B4()
{
  return sub_241D20A5C(&qword_268D4B560, type metadata accessor for URLResourceKey);
}

uint64_t sub_241D21210(void *a1)
{
  uint64_t v58 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_241DAA2E0();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  v49 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  v50 = (char *)&v47 - v5;
  sub_241D219B0();
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241DA96C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v15 = (char *)&v47 - v14;
  id v16 = objc_msgSend(a1, sel_hk_hexString);
  sub_241DAA990();

  unint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  sub_241DAAFD0();
  swift_bridgeObjectRelease();
  unint64_t v56 = 0xD00000000000001FLL;
  unint64_t v57 = 0x8000000241DABEA0;
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  sub_241DA96B0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_241D21A08((uint64_t)v8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  char v54 = *MEMORY[0x263F20740];
  v17 = v15;
  if (objc_msgSend(a1, sel_length) == (id)16) {
    char v54 = *MEMORY[0x263F20738];
  }
  unint64_t v56 = 0;
  v18 = (void *)sub_241DA9660();
  v19 = (void *)ACCBakerCreate();

  if (!v19)
  {
    v22 = v50;
    sub_241DAA2A0();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    v23 = sub_241DAA2D0();
    os_log_type_t v24 = sub_241DAAC10();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v55 = v47;
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v26 = sub_241DAB1F0();
      uint64_t v53 = sub_241D48854(v26, v27, &v55);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      sub_241D21A64();
      uint64_t v28 = sub_241DAB120();
      uint64_t v53 = sub_241D48854(v28, v29, &v55);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      v30 = *(void (**)(char *, uint64_t))(v10 + 8);
      v30(v13, v9);
      _os_log_impl(&dword_241D1C000, v23, v24, "[%s] failed to create SVG Data from URL \"%s\".", (uint8_t *)v25, 0x16u);
      uint64_t v31 = v47;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v31, -1, -1);
      MEMORY[0x24563A5D0](v25, -1, -1);

      v32 = *(void (**)(char *, uint64_t))(v51 + 8);
      v32(v50, v52);
    }
    else
    {
      v30 = *(void (**)(char *, uint64_t))(v10 + 8);
      v30(v13, v9);

      v32 = *(void (**)(char *, uint64_t))(v51 + 8);
      v32(v22, v52);
    }
    v33 = (void *)v56;
    v34 = v49;
    if (v56)
    {
      sub_241DAA2A0();
      id v35 = v33;
      v36 = sub_241DAA2D0();
      os_log_type_t v37 = sub_241DAAC10();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        v50 = (char *)v30;
        uint64_t v40 = v39;
        uint64_t v55 = v39;
        *(_DWORD *)uint64_t v38 = 136315394;
        uint64_t v41 = sub_241DAB1F0();
        v48 = v17;
        uint64_t v53 = sub_241D48854(v41, v42, &v55);
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 2080;
        uint64_t v53 = (uint64_t)v35;
        type metadata accessor for CFError(0);
        id v43 = v35;
        uint64_t v44 = sub_241DAA9B0();
        uint64_t v53 = sub_241D48854(v44, v45, &v55);
        sub_241DAAF10();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241D1C000, v36, v37, "[%s] %s.", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24563A5D0](v40, -1, -1);
        MEMORY[0x24563A5D0](v38, -1, -1);

        v32(v49, v52);
        ((void (*)(char *, uint64_t))v50)(v48, v9);
        return 0;
      }

      v32(v34, v52);
    }
    v30(v17, v9);
    return 0;
  }
  id v20 = v19;
  uint64_t v21 = sub_241DA96F0();

  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v21;
}

uint64_t sub_241D2197C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppClipCodeGenerator()
{
  return self;
}

void sub_241D219B0()
{
  if (!qword_268D4CBE0)
  {
    sub_241DA96C0();
    unint64_t v0 = sub_241DAAEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CBE0);
    }
  }
}

uint64_t sub_241D21A08(uint64_t a1)
{
  sub_241D219B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_241D21A64()
{
  unint64_t result = qword_268D4CBF0;
  if (!qword_268D4CBF0)
  {
    sub_241DA96C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CBF0);
  }
  return result;
}

void sub_241D21ABC()
{
  id v0 = objc_msgSend(self, sel_diopterUnit);
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = self;
    uint64_t v3 = self;
    id v4 = v1;
    id v5 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, -40.0);
    id v6 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 20.0);

    id v7 = objc_msgSend(v2, sel_inclusiveRangeWithMinimum_maximum_, v5, v6);
    qword_268D4B590 = (uint64_t)v7;
  }
  else
  {
    __break(1u);
  }
}

void sub_241D21BC0()
{
  id v0 = objc_msgSend(self, sel_diopterUnit);
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = self;
    uint64_t v3 = self;
    id v4 = v1;
    id v5 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, -8.0);
    id v6 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 8.0);

    id v7 = objc_msgSend(v2, sel_inclusiveRangeWithMinimum_maximum_, v5, v6);
    qword_268D4B598 = (uint64_t)v7;
  }
  else
  {
    __break(1u);
  }
}

void sub_241D21CC0()
{
  id v0 = objc_msgSend(self, sel_degreeAngleUnit);
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = self;
    uint64_t v3 = self;
    id v4 = v1;
    id v5 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 1.0);
    id v6 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 180.0);

    id v7 = objc_msgSend(v2, sel_inclusiveRangeWithMinimum_maximum_, v5, v6);
    qword_268D4B5A0 = (uint64_t)v7;
  }
  else
  {
    __break(1u);
  }
}

void sub_241D21DC8()
{
  id v0 = objc_msgSend(self, sel_prismDiopterUnit);
  if (v0 && (v1 = v0, id v2 = sub_241D20CD8(), v1, v2)) {
    qword_268D4B5A8 = (uint64_t)v2;
  }
  else {
    __break(1u);
  }
}

id sub_241D21E28(uint64_t a1)
{
  uint64_t v451 = *MEMORY[0x263EF8340];
  id v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241D28370(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  v420 = (char *)&v355 - v4;
  uint64_t v5 = sub_241DA9770();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  v423 = (char *)&v355 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v433 = sub_241DA9540();
  v439 = *(void **)(v433 - 8);
  MEMORY[0x270FA5388](v433);
  v434 = (char *)&v355 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D28370(0, &qword_268D4B5B8, MEMORY[0x263F06370], v2);
  MEMORY[0x270FA5388](v9 - 8);
  v437 = (char *)&v355 - v10;
  uint64_t v429 = sub_241DA9570();
  uint64_t v11 = *(void *)(v429 - 8);
  MEMORY[0x270FA5388](v429);
  v427 = (char *)&v355 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241DA96C0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v355 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v430 = sub_241DAA2E0();
  uint64_t v432 = *(void *)(v430 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v430);
  v438 = ((char *)&v355 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v425 = (char *)&v355 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v435 = (uint64_t *)((char *)&v355 - v22);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v424 = (char *)&v355 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v355 - v25;
  sub_241DAA2A0();
  unint64_t v27 = *(void (**)(void, void, void))(v14 + 16);
  uint64_t v428 = a1;
  v27(v16, a1, v13);
  uint64_t v28 = sub_241DAA2D0();
  os_log_type_t v29 = sub_241DAAC00();
  int v30 = v29;
  BOOL v31 = os_log_type_enabled(v28, v29);
  uint64_t v422 = v5;
  uint64_t v421 = v6;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v436 = swift_slowAlloc();
    *(void *)&long long v442 = v436;
    *(_DWORD *)uint64_t v32 = 136315394;
    LODWORD(v419) = v30;
    uint64_t v33 = sub_241DAB1F0();
    *(void *)&v441[0] = sub_241D48854(v33, v34, (uint64_t *)&v442);
    uint64_t v426 = v11;
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    sub_241D21A64();
    uint64_t v35 = sub_241DAB120();
    *(void *)&v441[0] = sub_241D48854(v35, v36, (uint64_t *)&v442);
    uint64_t v11 = v426;
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    _os_log_impl(&dword_241D1C000, v28, (os_log_type_t)v419, "[%s] url: %s", (uint8_t *)v32, 0x16u);
    uint64_t v37 = v436;
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v37, -1, -1);
    MEMORY[0x24563A5D0](v32, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

  uint64_t v38 = *(void (**)(void, void))(v432 + 8);
  uint64_t v39 = v430;
  v38(v26, v430);
  id v40 = v437;
  sub_241DA9560();
  uint64_t v41 = v429;
  int v42 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v11 + 48))(v40, 1, v429);
  id v43 = v435;
  if (v42 == 1)
  {
    sub_241D283D4((uint64_t)v40);
LABEL_231:
    v124 = v438;
    sub_241DAA2A0();
    v125 = sub_241DAA2D0();
    os_log_type_t v126 = sub_241DAAC00();
    if (os_log_type_enabled(v125, v126))
    {
      v127 = (uint8_t *)swift_slowAlloc();
      uint64_t v128 = v39;
      uint64_t v129 = swift_slowAlloc();
      *(void *)&long long v442 = v129;
      *(_DWORD *)v127 = 136315138;
      uint64_t v130 = sub_241DAB1F0();
      *(void *)&v441[0] = sub_241D48854(v130, v131, (uint64_t *)&v442);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v125, v126, "[%s] can't get query items", v127, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v129, -1, -1);
      MEMORY[0x24563A5D0](v127, -1, -1);

      v132 = v438;
      uint64_t v133 = v128;
    }
    else
    {

      v132 = v124;
      uint64_t v133 = v39;
    }
    v38(v132, v133);
    return 0;
  }
  uint64_t v44 = v427;
  (*(void (**)(char *, id, uint64_t))(v11 + 32))(v427, v40, v41);
  uint64_t v45 = sub_241DA9550();
  if (!v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v44, v41);
    goto LABEL_231;
  }
  uint64_t v46 = v45;
  id v449 = 0;
  id v450 = 0;
  v447 = 0;
  id v448 = 0;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 0;
  v445 = 0;
  id v446 = 0;
  v48 = *(NSObject **)(v46 + 16);
  uint64_t v419 = v47;
  if (!v48)
  {
    swift_bridgeObjectRelease();
    id v123 = 0;
    v122 = 0;
    id v416 = 0;
    id v417 = 0;
    id v418 = 0;
LABEL_238:
    sub_241DAA2A0();
    v136 = sub_241DAA2D0();
    os_log_type_t v137 = sub_241DAAC00();
    if (!os_log_type_enabled(v136, v137))
    {

      (*(void (**)(void *, uint64_t))(v432 + 8))(v43, v430);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v427, v41);
      swift_release();
      return 0;
    }
    id v414 = v123;
    v415 = v122;
    uint64_t v138 = v11;
    v139 = (uint8_t *)swift_slowAlloc();
    uint64_t v140 = swift_slowAlloc();
    *(void *)&long long v442 = v140;
    *(_DWORD *)v139 = 136315138;
    uint64_t v141 = sub_241DAB1F0();
    *(void *)&v441[0] = sub_241D48854(v141, v142, (uint64_t *)&v442);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v136, v137, "[%s] checksum missing", v139, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v140, -1, -1);
    MEMORY[0x24563A5D0](v139, -1, -1);

    (*(void (**)(void *, uint64_t))(v432 + 8))(v435, v430);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v427, v429);
LABEL_250:
    swift_release();
    return 0;
  }
  v405 = (void **)(v47 + 16);
  uint64_t v426 = v11;
  v437 = (char *)v439[2];
  v49 = (char *)(v46 + ((*((unsigned __int8 *)v439 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v439 + 80)));
  uint64_t v436 = v439[9];
  v439 += 2;
  v438 = (v439 - 1);
  uint64_t v411 = v46;
  swift_bridgeObjectRetain();
  v50 = 0;
  LODWORD(v409) = 0;
  unint64_t v397 = 0;
  uint64_t v398 = 0;
  unint64_t v412 = 0;
  v413 = 0;
  uint64_t v393 = 0;
  uint64_t v394 = 0;
  uint64_t v396 = 0;
  id v414 = 0;
  v415 = 0;
  id v416 = 0;
  id v417 = 0;
  id v418 = 0;
  id v51 = 0;
  uint64_t v404 = 4;
  uint64_t v410 = 1;
  uint64_t v401 = 1;
  uint64_t v402 = 0;
  LODWORD(v407) = 1;
  int v406 = 1;
  LODWORD(v408) = 1;
  int v395 = 1;
  int v399 = 1;
  int v400 = 1;
  int v403 = 1;
  id v52 = (id)v433;
  uint64_t v53 = v434;
  do
  {
    ((void (*)(char *, char *, id))v437)(v53, v49, v52);
    uint64_t v54 = sub_241DA9530();
    if (!v55)
    {
      ((void (*)(char *, id))v438->isa)(v53, v52);
      goto LABEL_10;
    }
    uint64_t v56 = v54;
    unint64_t v57 = v55;
    uint64_t v59 = sub_241DA9520();
    unint64_t v60 = v58;
    if (v59 == 29548 && v58 == 0xE200000000000000 || (sub_241DAB160() & 1) != 0)
    {
      uint64_t v61 = swift_bridgeObjectRelease();
      *(void *)&v441[0] = 0;
      uint64_t v62 = MEMORY[0x270FA5388](v61);
      v353 = v441;
      if ((v57 & 0x1000000000000000) != 0 || !(v57 & 0x2000000000000000 | v56 & 0x1000000000000000))
      {
        sub_241DAAFC0();
        swift_bridgeObjectRelease();
      }
      else
      {
        MEMORY[0x270FA5388](v62);
        unint64_t v60 = (unint64_t)(&v355 - 4);
        v353 = (long long *)sub_241D28C30;
        uint64_t v354 = v63;
        if ((v57 & 0x2000000000000000) != 0)
        {
          *(void *)&long long v442 = v56;
          *((void *)&v442 + 1) = v57 & 0xFFFFFFFFFFFFFFLL;
          BOOL v67 = (v56 >= 0x21u || ((0x100003E01uLL >> v56) & 1) == 0)
             && (v66 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
             && *v66 == 0;
          uint64_t v53 = v434;
          char v444 = v67;
          swift_bridgeObjectRelease();
          id v52 = (id)v433;
          goto LABEL_31;
        }
        if ((v56 & 0x1000000000000000) != 0)
        {
          uint64_t v64 = (v57 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v65 = v56 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v64 = sub_241DAB010();
        }
        char v444 = sub_241D28310(v64, v65, (void (*)(uint64_t *__return_ptr))sub_241D28C48) & 1;
        swift_bridgeObjectRelease();
        id v52 = (id)v433;
      }
      uint64_t v53 = v434;
LABEL_31:
      if ((v444 & 1) == 0) {
        goto LABEL_58;
      }
      double v68 = *(double *)v441;
      id v69 = objc_msgSend(self, sel_diopterUnit);
      unint64_t v60 = (unint64_t)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v69, v68);

      id v43 = v435;
      if (qword_268D4B2D0 != -1) {
        swift_once();
      }
      unint64_t v57 = (unint64_t)objc_msgSend((id)qword_268D4B590, sel_containsQuantity_, v60);
      ((void (*)(char *, id))v438->isa)(v53, v52);
      if (v57)
      {

        id v450 = (id)v60;
        goto LABEL_61;
      }
      goto LABEL_60;
    }
    if (v59 == 25452 && v60 == 0xE200000000000000 || (sub_241DAB160() & 1) != 0)
    {
      uint64_t v70 = swift_bridgeObjectRelease();
      *(void *)&v441[0] = 0;
      uint64_t v71 = MEMORY[0x270FA5388](v70);
      v353 = v441;
      if ((v57 & 0x1000000000000000) != 0 || !(v57 & 0x2000000000000000 | v56 & 0x1000000000000000))
      {
        sub_241DAAFC0();
      }
      else
      {
        MEMORY[0x270FA5388](v71);
        unint64_t v60 = (unint64_t)(&v355 - 4);
        v353 = (long long *)sub_241D28C30;
        uint64_t v354 = v72;
        if ((v57 & 0x2000000000000000) != 0)
        {
          *(void *)&long long v442 = v56;
          *((void *)&v442 + 1) = v57 & 0xFFFFFFFFFFFFFFLL;
          BOOL v76 = (v56 >= 0x21u || ((0x100003E01uLL >> v56) & 1) == 0)
             && (v75 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
             && *v75 == 0;
          uint64_t v53 = v434;
          char v444 = v76;
          swift_bridgeObjectRelease();
          goto LABEL_53;
        }
        if ((v56 & 0x1000000000000000) != 0)
        {
          uint64_t v73 = (v57 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v74 = v56 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v73 = sub_241DAB010();
        }
        char v444 = sub_241D28310(v73, v74, (void (*)(uint64_t *__return_ptr))sub_241D28C48) & 1;
      }
      swift_bridgeObjectRelease();
      uint64_t v53 = v434;
LABEL_53:
      id v52 = (id)v433;
      if (v444)
      {
        double v77 = *(double *)v441;
        id v78 = objc_msgSend(self, sel_diopterUnit);
        unint64_t v60 = (unint64_t)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v78, v77);

        id v43 = v435;
        if (qword_268D4B2D8 != -1) {
          swift_once();
        }
        unint64_t v57 = (unint64_t)objc_msgSend((id)qword_268D4B598, sel_containsQuantity_, v60);
        ((void (*)(char *, id))v438->isa)(v53, v52);
        if (v57)
        {

          id v449 = (id)v60;
          goto LABEL_61;
        }
LABEL_60:

        goto LABEL_61;
      }
LABEL_58:
      ((void (*)(char *, id))v438->isa)(v53, v52);
LABEL_59:
      id v43 = v435;
      goto LABEL_61;
    }
    if (v59 == 24940 && v60 == 0xE200000000000000 || (sub_241DAB160() & 1) != 0)
    {
      uint64_t v80 = swift_bridgeObjectRelease();
      *(void *)&long long v442 = 0;
      MEMORY[0x270FA5388](v80);
      v353 = &v442;
      unint64_t v60 = sub_241D281F8((uint64_t)sub_241D28C30, (uint64_t)(&v355 - 4), v56, v57);
      swift_bridgeObjectRelease();
      id v43 = v435;
      if ((v60 & 1) == 0) {
        goto LABEL_99;
      }
      double v81 = *(double *)&v442;
      id v52 = (id)v433;
      uint64_t v53 = v434;
      if (*(double *)&v442 == 0.0)
      {
        ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
      }
      else
      {
        id v82 = objc_msgSend(self, sel_degreeAngleUnit);
        unint64_t v60 = (unint64_t)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v82, v81);

        if (qword_268D4B2E0 != -1) {
          swift_once();
        }
        unint64_t v57 = (unint64_t)objc_msgSend((id)qword_268D4B5A0, sel_containsQuantity_, v60);
        ((void (*)(char *, id))v438->isa)(v53, v52);
        if (v57)
        {

          id v448 = (id)v60;
        }
        else
        {

          LODWORD(v408) = 0;
        }
      }
    }
    else
    {
      if (v59 == 7366764 && v60 == 0xE300000000000000 || (sub_241DAB160() & 1) != 0)
      {
        uint64_t v83 = swift_bridgeObjectRelease();
        *(void *)&long long v442 = 0;
        MEMORY[0x270FA5388](v83);
        v353 = &v442;
        unint64_t v60 = sub_241D281F8((uint64_t)sub_241D28C30, (uint64_t)(&v355 - 4), v56, v57);
        swift_bridgeObjectRelease();
        id v43 = v435;
        if ((v60 & 1) == 0) {
          goto LABEL_99;
        }
        double v84 = *(double *)&v442;
        id v85 = objc_msgSend(self, sel_prismDiopterUnit);
        unint64_t v60 = (unint64_t)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v85, v84);

        id v52 = (id)v433;
        uint64_t v53 = v434;
        if (qword_268D4B2E8 != -1) {
          swift_once();
        }
        unint64_t v57 = (unint64_t)objc_msgSend((id)qword_268D4B5A8, sel_containsQuantity_, v60);
        ((void (*)(char *, id))v438->isa)(v53, v52);
        if (v57)
        {

          id v418 = (id)v60;
          goto LABEL_61;
        }
LABEL_100:

        LODWORD(v407) = 0;
        goto LABEL_61;
      }
      if (v59 == 1685088364 && v60 == 0xE400000000000000 || (sub_241DAB160() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v60 = sub_241D26888(v56, v57);
        unint64_t v57 = v86;
        uint64_t v53 = v434;
        ((void (*)(char *, id))v438->isa)(v434, v52);
        id v43 = v435;
        if (v57) {
          goto LABEL_61;
        }
        if (!v60)
        {
          int v403 = 0;
          uint64_t v402 = 4;
          goto LABEL_61;
        }
        if (v60 == 1)
        {
          int v403 = 0;
          uint64_t v402 = 3;
          goto LABEL_61;
        }
LABEL_112:
        LODWORD(v407) = 0;
        goto LABEL_61;
      }
      if (v59 == 7370348 && v60 == 0xE300000000000000 || (sub_241DAB160() & 1) != 0)
      {
        uint64_t v87 = swift_bridgeObjectRelease();
        *(void *)&long long v442 = 0;
        MEMORY[0x270FA5388](v87);
        v353 = &v442;
        unint64_t v60 = sub_241D281F8((uint64_t)sub_241D28C30, (uint64_t)(&v355 - 4), v56, v57);
        swift_bridgeObjectRelease();
        id v43 = v435;
        if ((v60 & 1) == 0)
        {
LABEL_99:
          uint64_t v53 = v434;
          id v52 = (id)v433;
          ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
          goto LABEL_61;
        }
        double v88 = *(double *)&v442;
        id v89 = objc_msgSend(self, sel_prismDiopterUnit);
        unint64_t v60 = (unint64_t)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v89, v88);

        id v52 = (id)v433;
        uint64_t v53 = v434;
        if (qword_268D4B2E8 != -1) {
          swift_once();
        }
        unint64_t v57 = (unint64_t)objc_msgSend((id)qword_268D4B5A8, sel_containsQuantity_, v60);
        ((void (*)(char *, id))v438->isa)(v53, v52);
        if (v57)
        {

          id v417 = (id)v60;
          goto LABEL_61;
        }
        goto LABEL_100;
      }
      if ((v59 != 1685091948 || v60 != 0xE400000000000000) && (sub_241DAB160() & 1) == 0)
      {
        if (v59 == 29554 && v60 == 0xE200000000000000 || (sub_241DAB160() & 1) != 0)
        {
          uint64_t v91 = swift_bridgeObjectRelease();
          *(void *)&long long v442 = 0;
          MEMORY[0x270FA5388](v91);
          v353 = &v442;
          unint64_t v60 = sub_241D281F8((uint64_t)sub_241D28C30, (uint64_t)(&v355 - 4), v56, v57);
          swift_bridgeObjectRelease();
          if (v60)
          {
            double v92 = *(double *)&v442;
            id v93 = objc_msgSend(self, sel_diopterUnit);
            unint64_t v60 = (unint64_t)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v93, v92);

            if (qword_268D4B2D0 != -1) {
              swift_once();
            }
            unint64_t v57 = (unint64_t)objc_msgSend((id)qword_268D4B590, sel_containsQuantity_, v60);
            uint64_t v53 = v434;
            id v52 = (id)v433;
            ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
            if (v57)
            {

              v447 = v60;
            }
            else
            {
            }
            goto LABEL_59;
          }
          goto LABEL_216;
        }
        if (v59 == 25458 && v60 == 0xE200000000000000 || (sub_241DAB160() & 1) != 0)
        {
          uint64_t v94 = swift_bridgeObjectRelease();
          *(void *)&long long v442 = 0;
          MEMORY[0x270FA5388](v94);
          v353 = &v442;
          unint64_t v60 = sub_241D281F8((uint64_t)sub_241D28C30, (uint64_t)(&v355 - 4), v56, v57);
          swift_bridgeObjectRelease();
          if ((v60 & 1) == 0) {
            goto LABEL_216;
          }
          double v95 = *(double *)&v442;
          id v96 = objc_msgSend(self, sel_diopterUnit);
          unint64_t v60 = (unint64_t)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v96, v95);

          if (qword_268D4B2D8 != -1) {
            swift_once();
          }
          unint64_t v57 = (unint64_t)objc_msgSend((id)qword_268D4B598, sel_containsQuantity_, v60);
          ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
          if (v57)
          {
            v97 = *v405;
            *v405 = (void *)v60;

LABEL_197:
            id v43 = v435;
            id v52 = (id)v433;
            uint64_t v53 = v434;
            goto LABEL_61;
          }
LABEL_196:

          goto LABEL_197;
        }
        if (v59 == 24946 && v60 == 0xE200000000000000 || (sub_241DAB160() & 1) != 0)
        {
          uint64_t v98 = swift_bridgeObjectRelease();
          *(void *)&long long v442 = 0;
          MEMORY[0x270FA5388](v98);
          v353 = &v442;
          unint64_t v60 = sub_241D281F8((uint64_t)sub_241D28C30, (uint64_t)(&v355 - 4), v56, v57);
          swift_bridgeObjectRelease();
          if ((v60 & 1) == 0) {
            goto LABEL_216;
          }
          double v99 = *(double *)&v442;
          if (*(double *)&v442 == 0.0) {
            goto LABEL_216;
          }
          id v100 = objc_msgSend(self, sel_degreeAngleUnit);
          unint64_t v60 = (unint64_t)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v100, v99);

          if (qword_268D4B2E0 != -1) {
            swift_once();
          }
          unint64_t v57 = (unint64_t)objc_msgSend((id)qword_268D4B5A0, sel_containsQuantity_, v60);
          ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
          if (v57)
          {

            id v446 = (id)v60;
          }
          else
          {

            int v406 = 0;
          }
          goto LABEL_197;
        }
        if (v59 == 7366770 && v60 == 0xE300000000000000 || (sub_241DAB160() & 1) != 0)
        {
          uint64_t v101 = swift_bridgeObjectRelease();
          *(void *)&long long v442 = 0;
          MEMORY[0x270FA5388](v101);
          v353 = &v442;
          unint64_t v60 = sub_241D281F8((uint64_t)sub_241D28C30, (uint64_t)(&v355 - 4), v56, v57);
          swift_bridgeObjectRelease();
          if ((v60 & 1) == 0) {
            goto LABEL_216;
          }
          double v102 = *(double *)&v442;
          id v103 = objc_msgSend(self, sel_prismDiopterUnit);
          unint64_t v60 = (unint64_t)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v103, v102);

          if (qword_268D4B2E8 != -1) {
            swift_once();
          }
          unint64_t v57 = (unint64_t)objc_msgSend((id)qword_268D4B5A8, sel_containsQuantity_, v60);
          ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
          if (v57)
          {

            id v416 = (id)v60;
            goto LABEL_197;
          }
LABEL_169:

LABEL_170:
          LODWORD(v407) = 0;
          goto LABEL_197;
        }
        if (v59 == 1685088370 && v60 == 0xE400000000000000 || (sub_241DAB160() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          unint64_t v60 = sub_241D26888(v56, v57);
          unint64_t v57 = v104;
          ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
          if (v57) {
            goto LABEL_197;
          }
          if (!v60)
          {
            int v399 = 0;
            uint64_t v394 = 4;
            goto LABEL_197;
          }
          if (v60 == 1)
          {
            int v399 = 0;
            uint64_t v394 = 3;
            goto LABEL_197;
          }
          goto LABEL_170;
        }
        if (v59 == 7370354 && v60 == 0xE300000000000000 || (sub_241DAB160() & 1) != 0)
        {
          uint64_t v105 = swift_bridgeObjectRelease();
          *(void *)&long long v442 = 0;
          MEMORY[0x270FA5388](v105);
          v353 = &v442;
          unint64_t v60 = sub_241D281F8((uint64_t)sub_241D28C30, (uint64_t)(&v355 - 4), v56, v57);
          swift_bridgeObjectRelease();
          if ((v60 & 1) == 0) {
            goto LABEL_216;
          }
          double v106 = *(double *)&v442;
          id v107 = objc_msgSend(self, sel_prismDiopterUnit);
          unint64_t v60 = (unint64_t)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v107, v106);

          if (qword_268D4B2E8 != -1) {
            swift_once();
          }
          unint64_t v57 = (unint64_t)objc_msgSend((id)qword_268D4B5A8, sel_containsQuantity_, v60);
          ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
          if (v57)
          {

            v413 = v60;
            goto LABEL_197;
          }
          goto LABEL_169;
        }
        if (v59 == 1685091954 && v60 == 0xE400000000000000 || (sub_241DAB160() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          unint64_t v60 = sub_241D26888(v56, v57);
          unint64_t v57 = v108;
          ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
          if (v57) {
            goto LABEL_197;
          }
          if (!v60)
          {
            int v395 = 0;
            uint64_t v393 = 1;
            goto LABEL_197;
          }
          if (v60 == 1)
          {
            int v395 = 0;
            uint64_t v393 = 2;
            goto LABEL_197;
          }
          goto LABEL_170;
        }
        if (v59 == 7107186 && v60 == 0xE300000000000000 || (sub_241DAB160() & 1) != 0)
        {
          uint64_t v109 = swift_bridgeObjectRelease();
          *(void *)&long long v442 = 0;
          MEMORY[0x270FA5388](v109);
          v353 = &v442;
          unint64_t v60 = sub_241D281F8((uint64_t)sub_241D28C30, (uint64_t)(&v355 - 4), v56, v57);
          swift_bridgeObjectRelease();
          if ((v60 & 1) == 0) {
            goto LABEL_216;
          }
          double v110 = *(double *)&v442;
          id v111 = objc_msgSend(self, sel_diopterUnit);
          unint64_t v60 = (unint64_t)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v111, v110);

          if (qword_268D4B2D0 != -1) {
            swift_once();
          }
          unint64_t v57 = (unint64_t)objc_msgSend((id)qword_268D4B590, sel_containsQuantity_, v60);
          ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
          if (v57)
          {

            v415 = (char *)v60;
            goto LABEL_197;
          }
          goto LABEL_196;
        }
        if (v59 == 6845042 && v60 == 0xE300000000000000 || (sub_241DAB160() & 1) != 0)
        {
          uint64_t v112 = swift_bridgeObjectRelease();
          *(void *)&long long v442 = 0;
          MEMORY[0x270FA5388](v112);
          v353 = &v442;
          unint64_t v60 = sub_241D281F8((uint64_t)sub_241D28C30, (uint64_t)(&v355 - 4), v56, v57);
          swift_bridgeObjectRelease();
          if ((v60 & 1) == 0) {
            goto LABEL_216;
          }
          double v113 = *(double *)&v442;
          id v114 = objc_msgSend(self, sel_diopterUnit);
          unint64_t v60 = (unint64_t)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v114, v113);

          if (qword_268D4B2D0 != -1) {
            swift_once();
          }
          unint64_t v57 = (unint64_t)objc_msgSend((id)qword_268D4B590, sel_containsQuantity_, v60);
          ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
          if (v57)
          {

            id v414 = (id)v60;
            goto LABEL_197;
          }
          goto LABEL_196;
        }
        if (v59 == 6513505 && v60 == 0xE300000000000000 || (sub_241DAB160() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          if (sub_241DAAA20() == 32 || sub_241DAAA20() == 38)
          {
            v115 = self;
            v116 = (void *)sub_241DAA950();
            swift_bridgeObjectRelease();
            unint64_t v60 = (unint64_t)objc_msgSend(v115, sel_hk_dataWithHexString_, v116);

            uint64_t v53 = v434;
            id v52 = (id)v433;
            ((void (*)(char *, uint64_t))v438->isa)(v434, v433);

            v445 = (char *)v60;
            goto LABEL_59;
          }
LABEL_227:
          uint64_t v53 = v434;
          id v52 = (id)v433;
          ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
          swift_bridgeObjectRelease();
          goto LABEL_59;
        }
        if (v59 == 116 && v60 == 0xE100000000000000 || (sub_241DAB160() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          unint64_t v60 = sub_241D26888(v56, v57);
          unint64_t v57 = v117;
          ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
          if ((v57 & 1) == 0)
          {
            unsigned int v118 = sub_241D4BA7C(v60);
            if (v118 == 4) {
              uint64_t v119 = v404;
            }
            else {
              uint64_t v119 = v118;
            }
            uint64_t v404 = v119;
          }
          goto LABEL_197;
        }
        if (v59 == 25443 && v60 == 0xE200000000000000 || (sub_241DAB160() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          unint64_t v397 = sub_241D26AD8(v56, v57);
          uint64_t v401 = HIDWORD(v397) & 1;
        }
        else
        {
          if (v59 == 28275 && v60 == 0xE200000000000000 || (sub_241DAB160() & 1) != 0)
          {
            v120 = v434;
            id v52 = (id)v433;
            ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v398 = v56;
            uint64_t v53 = v120;
            unint64_t v412 = v57;
            goto LABEL_59;
          }
          if (v59 == 99 && v60 == 0xE100000000000000)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v121 = sub_241DAB160();
            swift_bridgeObjectRelease();
            if ((v121 & 1) == 0) {
              goto LABEL_227;
            }
          }
          if (v50 != (char *)(*(void *)(v411 + 16) - 1)) {
            goto LABEL_227;
          }
          LODWORD(v409) = sub_241D26D38(v56, v57, 0x10uLL);
          uint64_t v410 = WORD1(v409) & 1;
        }
LABEL_216:
        uint64_t v53 = v434;
        id v52 = (id)v433;
        ((void (*)(char *, uint64_t))v438->isa)(v434, v433);
        goto LABEL_59;
      }
      swift_bridgeObjectRelease();
      unint64_t v60 = sub_241D26888(v56, v57);
      unint64_t v57 = v90;
      uint64_t v53 = v434;
      ((void (*)(char *, id))v438->isa)(v434, v52);
      id v43 = v435;
      if (v57) {
        goto LABEL_61;
      }
      if (v60)
      {
        if (v60 == 1)
        {
          int v400 = 0;
          uint64_t v396 = 2;
          goto LABEL_61;
        }
        goto LABEL_112;
      }
      int v400 = 0;
      uint64_t v396 = 1;
    }
LABEL_61:
    if (__OFADD__(v50++, 1))
    {
      __break(1u);
      goto LABEL_288;
    }
LABEL_10:
    v49 += v436;
    v48 = ((char *)v48 - 1);
  }
  while (v48);
  swift_bridgeObjectRelease_n();
  if (v410)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v426;
    uint64_t v41 = v429;
    id v123 = v414;
    v122 = v415;
    v48 = v413;
    goto LABEL_238;
  }
  sub_241DA9630();
  uint64_t v143 = sub_241D28498(7);
  uint64_t v145 = v144;
  uint64_t v147 = v146;
  uint64_t v149 = v148;
  swift_bridgeObjectRelease();
  uint64_t v150 = MEMORY[0x2456395C0](v143, v145, v147, v149);
  unint64_t v152 = v151;
  swift_bridgeObjectRelease();
  int v153 = sub_241D28534(v150, v152);
  swift_bridgeObjectRelease();
  int v154 = v409;
  if ((unsigned __int16)v153 != (unsigned __int16)v409)
  {
    swift_bridgeObjectRelease();
    sub_241DAA2A0();
    v223 = (void *)swift_allocObject();
    v223[2] = v431;
    v224 = v223;
    uint64_t v436 = (uint64_t)v223;
    v225 = (_WORD *)swift_allocObject();
    int v406 = v153;
    v225[8] = v153;
    v226 = v225;
    v437 = (char *)v225;
    v439 = (void *)swift_allocObject();
    *((_WORD *)v439 + 8) = v154;
    v438 = sub_241DAA2D0();
    LODWORD(v411) = sub_241DAAC00();
    uint64_t v408 = swift_allocObject();
    *(unsigned char *)(v408 + 16) = 32;
    v425 = (char *)swift_allocObject();
    v425[16] = 8;
    v227 = (void *)swift_allocObject();
    v227[2] = sub_241D28608;
    v227[3] = v224;
    v228 = v227;
    v435 = v227;
    v229 = (void *)swift_allocObject();
    v229[2] = sub_241D28660;
    v229[3] = v228;
    v230 = v229;
    v434 = (char *)v229;
    uint64_t v231 = swift_allocObject();
    LODWORD(v409) = v154;
    uint64_t v232 = v231;
    *(void *)(v231 + 16) = sub_241D28668;
    *(void *)(v231 + 24) = v230;
    uint64_t v233 = swift_allocObject();
    *(unsigned char *)(v233 + 16) = 0;
    uint64_t v234 = swift_allocObject();
    *(unsigned char *)(v234 + 16) = 2;
    uint64_t v235 = swift_allocObject();
    *(void *)(v235 + 16) = sub_241D28620;
    *(void *)(v235 + 24) = v226;
    uint64_t v236 = swift_allocObject();
    *(void *)(v236 + 16) = sub_241D28698;
    *(void *)(v236 + 24) = v235;
    uint64_t v237 = v236;
    uint64_t v433 = v236;
    uint64_t v428 = swift_allocObject();
    *(unsigned char *)(v428 + 16) = 0;
    uint64_t v238 = swift_allocObject();
    *(unsigned char *)(v238 + 16) = 2;
    uint64_t v239 = swift_allocObject();
    v240 = v439;
    *(void *)(v239 + 16) = sub_241D28D80;
    *(void *)(v239 + 24) = v240;
    uint64_t v241 = swift_allocObject();
    *(void *)(v241 + 16) = sub_241D28D70;
    *(void *)(v241 + 24) = v239;
    sub_241D28370(0, &qword_268D4B5C0, (uint64_t (*)(uint64_t))sub_241D2874C, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    uint64_t v407 = sub_241D6F478(inited, 9);
    uint64_t v243 = v408;
    void *v244 = sub_241D28648;
    v244[1] = v243;
    v245 = v425;
    v244[2] = sub_241D28D7C;
    v244[3] = v245;
    v244[4] = sub_241D28670;
    v244[5] = v232;
    v244[6] = sub_241D28D7C;
    v244[7] = v233;
    v244[8] = sub_241D28D7C;
    v244[9] = v234;
    v244[10] = sub_241D286C8;
    v244[11] = v237;
    uint64_t v246 = v428;
    v244[12] = sub_241D28D7C;
    v244[13] = v246;
    v244[14] = sub_241D28D7C;
    v244[15] = v238;
    v244[16] = sub_241D286C8;
    v244[17] = v241;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    unint64_t v412 = v235;
    swift_retain();
    swift_retain();
    uint64_t v422 = v239;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v410 = v233;
    swift_retain();
    uint64_t v421 = v234;
    swift_retain();
    swift_retain();
    swift_retain();
    v420 = (char *)v238;
    swift_retain();
    v423 = (char *)v241;
    swift_retain();
    swift_bridgeObjectRelease();
    os_log_type_t v247 = v411;
    if (os_log_type_enabled(v438, (os_log_type_t)v411))
    {
      v248 = (uint8_t *)swift_slowAlloc();
      uint64_t v249 = swift_slowAlloc();
      *(void *)&long long v442 = v249;
      *(_WORD *)v248 = 770;
      v248[2] = 32;
      swift_release();
      v248[3] = 8;
      swift_release();
      uint64_t v250 = sub_241DAB1F0();
      *(void *)&v441[0] = sub_241D48854(v250, v251, (uint64_t *)&v442);
      sub_241DAAF10();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v248[12] = 0;
      swift_release();
      v248[13] = 2;
      swift_release();
      swift_release();
      LOWORD(v441[0]) = v406;
      sub_241DAAF10();
      swift_release();
      swift_release();
      v248[16] = 0;
      swift_release();
      v248[17] = 2;
      swift_release();
      swift_release();
      LOWORD(v441[0]) = v409;
      sub_241DAAF10();
      swift_release();
      swift_release();
      v252 = v438;
      _os_log_impl(&dword_241D1C000, v438, v247, "[%s] checksum failed: %hu vs %hu", v248, 0x14u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v249, -1, -1);
      MEMORY[0x24563A5D0](v248, -1, -1);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v432 + 8))(v424, v430);
    (*(void (**)(char *, uint64_t))(v426 + 8))(v427, v429);
    goto LABEL_250;
  }
  sub_241DAA2A0();
  v435 = (void *)swift_allocObject();
  v435[2] = v431;
  id v155 = v449;
  uint64_t v156 = swift_allocObject();
  *(void *)(v156 + 16) = v155;
  id v157 = v450;
  uint64_t v158 = swift_allocObject();
  *(void *)(v158 + 16) = v157;
  id v159 = v448;
  uint64_t v436 = swift_allocObject();
  *(void *)(v436 + 16) = v159;
  v160 = v447;
  v437 = (char *)swift_allocObject();
  *((void *)v437 + 2) = v160;
  v161 = (objc_class *)v446;
  v438 = swift_allocObject();
  v438[2].isa = v161;
  id v162 = v445;
  v439 = (void *)swift_allocObject();
  v439[2] = v162;
  id v359 = v162;
  id v163 = v162;
  id v357 = v155;
  id v164 = v155;
  id v366 = v157;
  id v165 = v157;
  id v358 = v159;
  id v166 = v159;
  swift_retain_n();
  v370 = v160;
  v167 = v160;
  v371 = v161;
  v168 = v161;
  id v372 = v163;
  id v365 = v164;
  id v169 = v165;
  uint64_t v383 = v156;
  id v367 = v169;
  id v368 = v166;
  v369 = v167;
  v379 = v168;
  uint64_t v170 = v158;
  uint64_t v384 = v158;
  os_log_t v378 = (os_log_t)sub_241DAA2D0();
  int v377 = sub_241DAAC00();
  uint64_t v428 = swift_allocObject();
  *(unsigned char *)(v428 + 16) = 32;
  uint64_t v409 = swift_allocObject();
  *(unsigned char *)(v409 + 16) = 8;
  uint64_t v171 = swift_allocObject();
  v172 = v435;
  *(void *)(v171 + 16) = sub_241D28D84;
  *(void *)(v171 + 24) = v172;
  uint64_t v173 = v171;
  uint64_t v381 = v171;
  uint64_t v174 = swift_allocObject();
  *(void *)(v174 + 16) = sub_241D28D68;
  *(void *)(v174 + 24) = v173;
  uint64_t v175 = v174;
  uint64_t v380 = v174;
  uint64_t v176 = swift_allocObject();
  uint64_t v410 = v176;
  *(void *)(v176 + 16) = sub_241D28D6C;
  *(void *)(v176 + 24) = v175;
  uint64_t v389 = swift_allocObject();
  *(unsigned char *)(v389 + 16) = 64;
  uint64_t v387 = swift_allocObject();
  *(unsigned char *)(v387 + 16) = 8;
  uint64_t v177 = swift_allocObject();
  *(void *)(v177 + 16) = sub_241D28D64;
  *(void *)(v177 + 24) = v156;
  uint64_t v391 = swift_allocObject();
  *(unsigned char *)(v391 + 16) = 64;
  uint64_t v388 = swift_allocObject();
  *(unsigned char *)(v388 + 16) = 8;
  uint64_t v178 = swift_allocObject();
  v424 = (char *)v178;
  *(void *)(v178 + 16) = sub_241D28D64;
  *(void *)(v178 + 24) = v170;
  uint64_t v392 = swift_allocObject();
  *(unsigned char *)(v392 + 16) = 64;
  uint64_t v390 = swift_allocObject();
  *(unsigned char *)(v390 + 16) = 8;
  uint64_t v179 = swift_allocObject();
  uint64_t v433 = v179;
  uint64_t v180 = v436;
  *(void *)(v179 + 16) = sub_241D28978;
  *(void *)(v179 + 24) = v180;
  uint64_t v181 = swift_allocObject();
  *(unsigned char *)(v181 + 16) = 64;
  uint64_t v385 = swift_allocObject();
  *(unsigned char *)(v385 + 16) = 8;
  uint64_t v182 = swift_allocObject();
  uint64_t v183 = v419;
  *(void *)(v182 + 16) = sub_241D289A0;
  *(void *)(v182 + 24) = v183;
  uint64_t v382 = swift_allocObject();
  *(unsigned char *)(v382 + 16) = 64;
  uint64_t v411 = swift_allocObject();
  *(unsigned char *)(v411 + 16) = 8;
  v184 = (char *)swift_allocObject();
  v434 = v184;
  v185 = v437;
  *((void *)v184 + 2) = sub_241D28D64;
  *((void *)v184 + 3) = v185;
  uint64_t v186 = swift_allocObject();
  *(unsigned char *)(v186 + 16) = 64;
  uint64_t v187 = v186;
  uint64_t v374 = v186;
  uint64_t v373 = swift_allocObject();
  *(unsigned char *)(v373 + 16) = 8;
  uint64_t v188 = swift_allocObject();
  uint64_t v375 = v188;
  v189 = v438;
  *(void *)(v188 + 16) = sub_241D28D64;
  *(void *)(v188 + 24) = v189;
  uint64_t v190 = swift_allocObject();
  *(unsigned char *)(v190 + 16) = 32;
  uint64_t v191 = v190;
  uint64_t v386 = swift_allocObject();
  *(unsigned char *)(v386 + 16) = 8;
  uint64_t v192 = swift_allocObject();
  v193 = v439;
  *(void *)(v192 + 16) = sub_241D289E4;
  *(void *)(v192 + 24) = v193;
  uint64_t v194 = swift_allocObject();
  *(void *)(v194 + 16) = sub_241D28D6C;
  *(void *)(v194 + 24) = v192;
  uint64_t v376 = v194;
  sub_241D28370(0, &qword_268D4B5C0, (uint64_t (*)(uint64_t))sub_241D2874C, MEMORY[0x263F8E0F8]);
  uint64_t v195 = swift_allocObject();
  uint64_t v360 = sub_241D6F478(v195, 24);
  uint64_t v196 = v428;
  void *v197 = sub_241D28D7C;
  v197[1] = v196;
  uint64_t v198 = v409;
  v197[2] = sub_241D28D7C;
  v197[3] = v198;
  uint64_t v199 = v410;
  v197[4] = sub_241D28D74;
  v197[5] = v199;
  uint64_t v200 = v389;
  v197[6] = sub_241D28D7C;
  v197[7] = v200;
  uint64_t v201 = v387;
  v197[8] = sub_241D28D7C;
  v197[9] = v201;
  v197[10] = sub_241D28AB0;
  v197[11] = v177;
  uint64_t v202 = v391;
  v197[12] = sub_241D28D7C;
  v197[13] = v202;
  uint64_t v203 = v388;
  v197[14] = sub_241D28D7C;
  v197[15] = v203;
  v204 = v424;
  v197[16] = sub_241D28D78;
  v197[17] = v204;
  uint64_t v205 = v392;
  v197[18] = sub_241D28D7C;
  v197[19] = v205;
  uint64_t v206 = v390;
  v197[20] = sub_241D28D7C;
  v197[21] = v206;
  uint64_t v207 = v433;
  v197[22] = sub_241D28D78;
  v197[23] = v207;
  v197[24] = sub_241D28D7C;
  v197[25] = v181;
  uint64_t v208 = v385;
  v197[26] = sub_241D28D7C;
  v197[27] = v208;
  v197[28] = sub_241D28D78;
  v197[29] = v182;
  uint64_t v209 = v382;
  v197[30] = sub_241D28D7C;
  v197[31] = v209;
  uint64_t v210 = v411;
  v197[32] = sub_241D28D7C;
  v197[33] = v210;
  v211 = v434;
  v197[34] = sub_241D28D78;
  v197[35] = v211;
  v197[36] = sub_241D28D7C;
  v197[37] = v187;
  uint64_t v212 = v373;
  v197[38] = sub_241D28D7C;
  v197[39] = v212;
  uint64_t v213 = v375;
  v197[40] = sub_241D28D78;
  v197[41] = v213;
  v197[42] = sub_241D28D7C;
  v197[43] = v191;
  uint64_t v214 = v386;
  v197[44] = sub_241D28D7C;
  v197[45] = v214;
  v197[46] = sub_241D28D74;
  v197[47] = v194;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v364 = v192;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v361 = v177;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v362 = v181;
  swift_retain();
  swift_retain();
  uint64_t v363 = v182;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  os_log_t v215 = v378;
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v215, (os_log_type_t)v377))
  {
    uint64_t v360 = v191;
    v216 = (uint8_t *)swift_slowAlloc();
    v217 = (void *)swift_slowAlloc();
    uint64_t v356 = swift_slowAlloc();
    *(void *)&long long v442 = v356;
    *(_WORD *)v216 = 2050;
    v216[2] = 32;
    swift_release();
    v216[3] = 8;
    swift_release();
    uint64_t v218 = sub_241DAB1F0();
    *(void *)&v441[0] = sub_241D48854(v218, v219, (uint64_t *)&v442);
    sub_241DAAF10();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v216[12] = 64;
    swift_release();
    v216[13] = 8;
    swift_release();
    id v220 = v357;
    if (v357)
    {
      id v221 = v365;
      *(void *)&v441[0] = v365;
      id v222 = v365;
      sub_241DAAF10();
    }
    else
    {
      *(void *)&v441[0] = 0;
      sub_241DAAF10();
      id v221 = v365;
    }
    void *v217 = v220;

    swift_release();
    swift_release();
    v216[22] = 64;
    swift_release();
    v216[23] = 8;
    swift_release();
    id v253 = v368;
    if (v366)
    {
      id v254 = v367;
      *(void *)&v441[0] = v367;
      id v255 = v367;
      sub_241DAAF10();
    }
    else
    {
      *(void *)&v441[0] = 0;
      sub_241DAAF10();
      id v254 = v367;
    }
    v217[1] = v366;

    swift_release();
    swift_release();
    v216[32] = 64;
    swift_release();
    v216[33] = 8;
    swift_release();
    id v256 = v358;
    if (v358)
    {
      *(void *)&v441[0] = v253;
      id v257 = v253;
    }
    else
    {
      *(void *)&v441[0] = 0;
    }
    sub_241DAAF10();
    v217[2] = v256;

    swift_release();
    swift_release();
    v216[42] = 64;
    swift_release();
    v216[43] = 8;
    swift_release();
    v258 = v405;
    swift_beginAccess();
    v259 = *v258;
    if (*v258)
    {
      *(void *)&v441[0] = *v258;
      id v260 = v259;
    }
    else
    {
      *(void *)&v441[0] = 0;
    }
    sub_241DAAF10();
    v261 = v369;
    v217[3] = v259;
    swift_release_n();
    swift_release();
    v216[52] = 64;
    swift_release();
    v216[53] = 8;
    swift_release();
    if (v370)
    {
      *(void *)&v441[0] = v261;
      v262 = v261;
    }
    else
    {
      *(void *)&v441[0] = 0;
    }
    sub_241DAAF10();
    uint64_t v263 = v430;
    v264 = v379;
    v217[4] = v370;

    swift_release();
    swift_release();
    v216[62] = 64;
    swift_release();
    v216[63] = 8;
    swift_release();
    if (v371)
    {
      *(void *)&v441[0] = v264;
      v265 = v379;
      v264 = v379;
    }
    else
    {
      *(void *)&v441[0] = 0;
    }
    sub_241DAAF10();
    v217[5] = v371;

    swift_release();
    swift_release();
    v216[72] = 32;
    swift_release();
    v216[73] = 8;
    swift_release();
    *(void *)&v441[0] = v359;
    sub_241D28890(0, &qword_268D4B620, (unint64_t *)&qword_268D4B610);
    uint64_t v266 = sub_241DAAEE0();
    *(void *)&v441[0] = sub_241D48854(v266, v267, (uint64_t *)&v442);
    sub_241DAAF10();

    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    os_log_t v268 = v378;
    _os_log_impl(&dword_241D1C000, v378, (os_log_type_t)v377, "[%s] lc: %@, ls: %@, la: %@, rc: %@, rs: %@, ra: %@, acc: %s", v216, 0x52u);
    sub_241D28890(0, (unint64_t *)&qword_268D4B5E8, (unint64_t *)&qword_268D4D3D0);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v217, -1, -1);
    uint64_t v269 = v356;
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v269, -1, -1);
    MEMORY[0x24563A5D0](v216, -1, -1);

    (*(void (**)(char *, uint64_t))(v432 + 8))(v425, v263);
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v432 + 8))(v425, v430);
  }
  swift_beginAccess();
  v50 = v445;
  uint64_t v270 = v426;
  v271 = v427;
  unint64_t v57 = (unint64_t)v414;
  v49 = v415;
  id v52 = v413;
  if (!v445)
  {

    swift_bridgeObjectRelease();
LABEL_277:

    (*(void (**)(char *, uint64_t))(v270 + 8))(v271, v429);
    goto LABEL_250;
  }
  if ((v408 & v406 & v407 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_277;
  }
  swift_beginAccess();
  id v51 = v450;
  if (!v450)
  {

    swift_bridgeObjectRelease();
    unint64_t v60 = (unint64_t)v449;
LABEL_289:

    (*(void (**)(char *, uint64_t))(v426 + 8))(v427, v429);
    goto LABEL_250;
  }
  swift_beginAccess();
  v48 = v447;
  if (!v447)
  {

    swift_bridgeObjectRelease();
LABEL_280:

    unint64_t v60 = (unint64_t)v449;
    goto LABEL_289;
  }
  if (v404 != 1)
  {
    swift_beginAccess();
    unint64_t v60 = (unint64_t)v449;
    if (v449)
    {
      v273 = v405;
      swift_beginAccess();
      if (*v273) {
        goto LABEL_283;
      }
    }
LABEL_288:

    swift_bridgeObjectRelease();
    id v279 = v446;

    id v280 = v448;
    goto LABEL_289;
  }
  if ((v57 == 0) == (v49 != 0))
  {

    swift_bridgeObjectRelease();
    id v272 = v446;

    goto LABEL_280;
  }
LABEL_283:
  if (v416)
  {
    id v274 = v417;
    if (v399 & 1) != 0 || !v52 || (v395)
    {
      v275 = v50;
      id v276 = v51;
      v277 = v48;
      v278 = 0;
    }
    else
    {
      id v284 = objc_allocWithZone(MEMORY[0x263F0A8E8]);
      v285 = v50;
      id v286 = v51;
      v287 = v48;
      v278 = (char *)objc_msgSend(v284, sel_initWithVerticalAmount_verticalBase_horizontalAmount_horizontalBase_eye_, v52, v393, v416, v394, 2);
    }
  }
  else
  {
    v281 = v50;
    id v282 = v51;
    v283 = v48;
    v278 = 0;
    id v274 = v417;
  }
  if (v418 && !((v403 | v400) & 1 | (v274 == 0)))
  {
    id v289 = objc_allocWithZone(MEMORY[0x263F0A8E8]);
    id v288 = objc_msgSend(v289, sel_initWithVerticalAmount_verticalBase_horizontalAmount_horizontalBase_eye_, v274, v396, v418, v402, 1);
  }
  else
  {
    id v288 = 0;
  }
  v290 = v405;
  swift_beginAccess();
  v291 = *v290;
  swift_beginAccess();
  id v292 = v446;
  id v293 = objc_allocWithZone(MEMORY[0x263F0A3E8]);
  v438 = v48;
  v437 = v278;
  v435 = objc_msgSend(v293, sel_initWithSphere_cylinder_axis_addPower_vertexDistance_prism_farPupillaryDistance_nearPupillaryDistance_, v48, v291, v292, 0, 0, v278, 0, 0);
  swift_beginAccess();
  id v294 = v449;
  swift_beginAccess();
  id v295 = v448;
  id v296 = objc_allocWithZone(MEMORY[0x263F0A3E8]);
  uint64_t v436 = (uint64_t)v288;
  id v297 = objc_msgSend(v296, sel_initWithSphere_cylinder_axis_addPower_vertexDistance_prism_farPupillaryDistance_nearPupillaryDistance_, v51, v294, v295, 0, 0, v288, 0, 0);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  v353 = (long long *)0xE000000000000000;
  uint64_t v298 = sub_241DA95E0();
  uint64_t v300 = v299;
  sub_241D28370(0, &qword_268D4B600, (uint64_t (*)(uint64_t))sub_241D28B78, MEMORY[0x263F8E0F8]);
  uint64_t v301 = swift_allocObject();
  uint64_t v302 = sub_241D6E870(v301, 3);
  v304 = v303;
  uint64_t *v303 = sub_241DAA990();
  v304[1] = v305;
  v304[5] = sub_241D28BF4(0, (unint64_t *)&qword_268D4B610);
  v304[2] = (uint64_t)v50;
  v304[6] = sub_241DAA990();
  v304[7] = v306;
  uint64_t v307 = MEMORY[0x263F8D310];
  v304[11] = MEMORY[0x263F8D310];
  v304[8] = 0xD000000000000011;
  v304[9] = 0x8000000241DABDE0;
  v304[12] = sub_241DAA990();
  v304[13] = v308;
  v304[17] = v307;
  v304[14] = v298;
  v304[15] = v300;
  uint64_t v309 = nullsub_1(v302);
  v434 = v50;
  unint64_t v310 = sub_241D7597C(v309);
  v439 = v51;
  if (v415)
  {
    id v311 = v414;
    if (v414)
    {
      uint64_t v312 = sub_241DAA990();
      uint64_t v314 = v313;
      uint64_t v315 = sub_241D28BF4(0, (unint64_t *)&qword_268D4B618);
      uint64_t v443 = v315;
      id v316 = v415;
      *(void *)&long long v442 = v415;
      sub_241D28BE4(&v442, v441);
      id v317 = v316;
      id v318 = v311;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v440 = v310;
      sub_241DA3C3C(v441, v312, v314, isUniquelyReferenced_nonNull_native);
      unint64_t v320 = v440;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v321 = sub_241DAA990();
      uint64_t v323 = v322;
      uint64_t v443 = v315;
      *(void *)&long long v442 = v318;
      sub_241D28BE4(&v442, v441);
      char v324 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v440 = v320;
      sub_241DA3C3C(v441, v321, v323, v324);
      unint64_t v310 = v440;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v325 = v412;
  if ((v401 & 1) == 0)
  {
    uint64_t v326 = sub_241DAA990();
    uint64_t v328 = v327;
    id v329 = objc_allocWithZone(NSNumber);
    id v330 = objc_msgSend(v329, sel_initWithUnsignedInt_, v397);
    uint64_t v443 = sub_241D28BF4(0, (unint64_t *)&qword_268D4CC20);
    *(void *)&long long v442 = v330;
    sub_241D28BE4(&v442, v441);
    char v331 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v440 = v310;
    sub_241DA3C3C(v441, v326, v328, v331);
    unint64_t v310 = v440;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v325)
  {
    uint64_t v332 = sub_241DAA990();
    uint64_t v334 = v333;
    uint64_t v443 = v307;
    *(void *)&long long v442 = v398;
    *((void *)&v442 + 1) = v325;
    sub_241D28BE4(&v442, v441);
    char v335 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v440 = v310;
    sub_241DA3C3C(v441, v332, v334, v335);
    unint64_t v310 = v440;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v336 = v420;
  unsigned __int8 v337 = v404;
  if (v404 != 4)
  {
    uint64_t v338 = sub_241DAA990();
    uint64_t v340 = v339;
    id v341 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v337);
    uint64_t v443 = sub_241D28BF4(0, (unint64_t *)&qword_268D4CC20);
    *(void *)&long long v442 = v341;
    sub_241D28BE4(&v442, v441);
    char v342 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v440 = v310;
    sub_241DA3C3C(v441, v338, v340, v342);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v343 = v422;
  uint64_t v344 = v421;
  v435 = v435;
  id v345 = v297;
  sub_241DA9760();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v344 + 56))(v336, 1, 1, v343);
  id v346 = objc_msgSend(self, sel_localDevice);
  v347 = (void *)sub_241DA9730();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v344 + 48))(v336, 1, v343) == 1)
  {
    v348 = 0;
  }
  else
  {
    v348 = (void *)sub_241DA9730();
    (*(void (**)(char *, uint64_t))(v344 + 8))(v336, v343);
  }
  uint64_t v349 = v343;
  v350 = (void *)sub_241DAA910();
  swift_bridgeObjectRelease();
  v351 = self;
  id v352 = v435;
  id v134 = objc_msgSend(v351, sel_prescriptionWithRightEyeSpecification_leftEyeSpecification_dateIssued_expirationDate_device_metadata_, v435, v345, v347, v348, v346, v350);

  (*(void (**)(char *, uint64_t))(v344 + 8))(v423, v349);
  (*(void (**)(char *, uint64_t))(v426 + 8))(v427, v429);
  swift_release();
  return v134;
}

uint64_t sub_241D26888(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_241DAB010();
      }
      uint64_t v7 = (uint64_t)sub_241D27F7C(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_241D273A0(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

unint64_t sub_241D26AD8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
    LOBYTE(v20) = 1;
    return v21 | ((unint64_t)v20 << 32);
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_241DAB010();
      }
      uint64_t v7 = sub_241D27CFC(v6, v4, 10);
      LODWORD(v8) = v7;
      char v27 = BYTE4(v7) & 1;
      char v9 = BYTE4(v7) & 1;
      goto LABEL_38;
    }
    v26[0] = a1;
    v26[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    int v10 = a1;
    if (a1 == 43)
    {
      if (v3)
      {
        if (v3 != 1)
        {
          LODWORD(v8) = (BYTE1(a1) - 48);
          if (v8 <= 9)
          {
            uint64_t v15 = v3 - 2;
            if (v15)
            {
              unsigned int v16 = (unsigned __int8 *)v26 + 2;
              while (1)
              {
                unsigned int v17 = *v16 - 48;
                if (v17 > 9) {
                  goto LABEL_35;
                }
                uint64_t v18 = 10 * v8;
                if ((v18 & 0xFFFFFFFF00000000) != 0) {
                  goto LABEL_35;
                }
                LODWORD(v8) = v18 + v17;
                if (__CFADD__(v18, v17)) {
                  goto LABEL_35;
                }
                char v9 = 0;
                ++v16;
                if (!--v15) {
                  goto LABEL_38;
                }
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (a1 != 45)
      {
        if (v3)
        {
          LODWORD(v8) = (a1 - 48);
          if (v8 <= 9)
          {
            uint64_t v19 = v3 - 1;
            if (v19)
            {
              uint64_t v23 = (unsigned __int8 *)v26 + 1;
              while (1)
              {
                unsigned int v24 = *v23 - 48;
                if (v24 > 9) {
                  goto LABEL_35;
                }
                uint64_t v25 = 10 * v8;
                if ((v25 & 0xFFFFFFFF00000000) != 0) {
                  goto LABEL_35;
                }
                LODWORD(v8) = v25 + v24;
                if (__CFADD__(v25, v24)) {
                  goto LABEL_35;
                }
                char v9 = 0;
                ++v23;
                if (!--v19) {
                  goto LABEL_38;
                }
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_35;
      }
      if (v3)
      {
        if (v3 != 1 && (BYTE1(a1) - 48) <= 9u)
        {
          int v10 = 0;
          LODWORD(v8) = -(BYTE1(a1) - 48);
          if (BYTE1(a1) == 48)
          {
            uint64_t v11 = v3 - 2;
            if (v11)
            {
              unsigned int v12 = (unsigned __int8 *)v26 + 2;
              while (1)
              {
                unsigned int v13 = *v12 - 48;
                if (v13 > 9) {
                  goto LABEL_35;
                }
                uint64_t v14 = 10 * v8;
                if ((v14 & 0xFFFFFFFF00000000) != 0) {
                  goto LABEL_35;
                }
                LODWORD(v8) = v14 - v13;
                if (v14 < v13) {
                  goto LABEL_35;
                }
                char v9 = 0;
                ++v12;
                if (!--v11) {
                  goto LABEL_38;
                }
              }
            }
LABEL_37:
            char v9 = 0;
            goto LABEL_38;
          }
LABEL_53:
          char v9 = 1;
          LODWORD(v8) = v10;
          goto LABEL_38;
        }
LABEL_35:
        LODWORD(v8) = 0;
        char v9 = 1;
LABEL_38:
        swift_bridgeObjectRelease();
        LODWORD(v20) = v9 & 1;
        goto LABEL_39;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_53;
  }
  unint64_t v8 = sub_241D272B8(a1, a2, 10);
  swift_bridgeObjectRelease();
  uint64_t v20 = HIDWORD(v8) & 1;
LABEL_39:
  uint64_t v21 = v8;
  if (v20) {
    uint64_t v21 = 0;
  }
  return v21 | ((unint64_t)v20 << 32);
}

uint64_t sub_241D26D38(uint64_t result, unint64_t a2, unint64_t a3)
{
  if (a3 - 37 < 0xFFFFFFFFFFFFFFDDLL)
  {
    __break(1u);
LABEL_75:
    swift_bridgeObjectRelease();
    int v12 = 0;
    int v11 = 1;
    return v12 | (v11 << 16);
  }
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v6) {
    goto LABEL_75;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v10 = sub_241D27488(result, a2, a3);
    swift_bridgeObjectRelease();
    int v11 = HIWORD(v10) & 1;
LABEL_12:
    int v12 = (unsigned __int16)v10;
    if (v11) {
      int v12 = 0;
    }
    return v12 | (v11 << 16);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      unint64_t v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      unint64_t v8 = (unsigned __int8 *)sub_241DAB010();
    }
    unsigned int v9 = sub_241D27568(v8, v5, a3);
    LOWORD(v10) = v9;
    int v11 = HIWORD(v9) & 1;
    goto LABEL_11;
  }
  v37[0] = result;
  v37[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v4)
    {
      uint64_t v22 = v4 - 1;
      if (v22)
      {
        LOWORD(v14) = 0;
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 0xA)
        {
          unsigned __int8 v23 = 58;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }
        uint64_t v26 = (unsigned __int8 *)v37 + 1;
        int v11 = 1;
        do
        {
          unsigned int v27 = *v26;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              LOWORD(v10) = 0;
              if (v27 < 0x61 || v27 >= v25) {
                goto LABEL_11;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          int v29 = (unsigned __int16)v14 * (unsigned __int16)a3;
          if ((v29 & 0xFFFF0000) != 0) {
            goto LABEL_73;
          }
          int v14 = (unsigned __int16)v29 + (v27 + v28);
          if ((v14 & 0x10000) != 0) {
            goto LABEL_73;
          }
          ++v26;
          --v22;
        }
        while (v22);
LABEL_72:
        int v11 = 0;
        LOWORD(v10) = v14;
        goto LABEL_11;
      }
      goto LABEL_73;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v4)
      {
        LOWORD(v14) = 0;
        unsigned __int8 v30 = a3 + 48;
        unsigned __int8 v31 = a3 + 55;
        unsigned __int8 v32 = a3 + 87;
        if (a3 > 0xA)
        {
          unsigned __int8 v30 = 58;
        }
        else
        {
          unsigned __int8 v32 = 97;
          unsigned __int8 v31 = 65;
        }
        uint64_t v33 = (unsigned __int8 *)v37;
        int v11 = 1;
        while (1)
        {
          unsigned int v34 = *v33;
          if (v34 < 0x30 || v34 >= v30)
          {
            if (v34 < 0x41 || v34 >= v31)
            {
              LOWORD(v10) = 0;
              if (v34 < 0x61 || v34 >= v32) {
                goto LABEL_11;
              }
              char v35 = -87;
            }
            else
            {
              char v35 = -55;
            }
          }
          else
          {
            char v35 = -48;
          }
          int v36 = (unsigned __int16)v14 * (unsigned __int16)a3;
          if ((v36 & 0xFFFF0000) != 0) {
            goto LABEL_73;
          }
          int v14 = (unsigned __int16)v36 + (v34 + v35);
          if ((v14 & 0x10000) != 0) {
            goto LABEL_73;
          }
          ++v33;
          if (!--v4) {
            goto LABEL_72;
          }
        }
      }
      goto LABEL_73;
    }
    if (v4)
    {
      uint64_t v13 = v4 - 1;
      if (v13)
      {
        LOWORD(v14) = 0;
        unsigned __int8 v15 = a3 + 48;
        unsigned __int8 v16 = a3 + 55;
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 0xA)
        {
          unsigned __int8 v15 = 58;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v16 = 65;
        }
        uint64_t v18 = (unsigned __int8 *)v37 + 1;
        int v11 = 1;
        while (1)
        {
          unsigned int v19 = *v18;
          if (v19 < 0x30 || v19 >= v15)
          {
            if (v19 < 0x41 || v19 >= v16)
            {
              LOWORD(v10) = 0;
              if (v19 < 0x61 || v19 >= v17) {
                goto LABEL_11;
              }
              char v20 = -87;
            }
            else
            {
              char v20 = -55;
            }
          }
          else
          {
            char v20 = -48;
          }
          int v21 = (unsigned __int16)v14 * (unsigned __int16)a3;
          if ((v21 & 0xFFFF0000) != 0) {
            break;
          }
          int v14 = (unsigned __int16)v21 - (v19 + v20);
          if ((v14 & 0xFFFF0000) != 0) {
            break;
          }
          ++v18;
          if (!--v13) {
            goto LABEL_72;
          }
        }
      }
LABEL_73:
      LOWORD(v10) = 0;
      int v11 = 1;
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionURLDecoder()
{
  return self;
}

uint64_t sub_241D270B8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      uint64_t v3 = sub_241D27230(v2, 0);
      if (v2 < 0) {
        break;
      }
      uint64_t v4 = v3;
      uint64_t v5 = sub_241DAAFE0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_241DAB070();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_241DAAA60();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_241DAB0F0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_241DAB070();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_241D27230(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_241D28CD0(0, (unint64_t *)&qword_268D4B628, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_241D272B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_241DAAAC0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_241D27810();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_241DAB010();
  }
LABEL_7:
  int v11 = sub_241D27CFC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_241D273A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_241DAAAC0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_241D27810();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_241DAB010();
  }
LABEL_7:
  int v11 = sub_241D27F7C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_241D27488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_241DAAAC0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_241D27810();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_241DAB010();
  }
LABEL_7:
  unsigned int v11 = sub_241D27568(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FFFF;
}

unsigned __int8 *sub_241D27568(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }
        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          uint64_t v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v20 = -87;
              }
              else
              {
                char v20 = -55;
              }
            }
            else
            {
              char v20 = -48;
            }
            if ((((unsigned __int16)v8 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            int v8 = (unsigned __int16)(v8 * a3) + (v19 + v20);
            if ((v8 & 0x10000) != 0) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int16 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int16 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        if (result)
        {
          LOWORD(v24) = 0;
          do
          {
            unsigned int v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v26 = -87;
              }
              else
              {
                char v26 = -55;
              }
            }
            else
            {
              char v26 = -48;
            }
            if ((((unsigned __int16)v24 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            int v24 = (unsigned __int16)(v24 * a3) + (v25 + v26);
            if ((v24 & 0x10000) != 0) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int16 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          unint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            if ((((unsigned __int16)v8 * (unsigned __int16)a3) & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            int v8 = (unsigned __int16)(v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int16 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_241D27810()
{
  unint64_t v0 = sub_241DAAAD0();
  uint64_t v4 = sub_241D27890(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_241D27890(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_241D279E8(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      char v11 = sub_241D27230(v9, 0);
      unint64_t v12 = sub_241D27AE8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_241DAB010();
LABEL_4:
        JUMPOUT(0x2456395F0);
      }
    }
    else
    {
      char v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x2456395F0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2456395F0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_241D279E8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_241D8C010(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_241D8C010(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return sub_241DAAA90();
}

unint64_t sub_241D27AE8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_241D8C010(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_241DAAAA0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_241DAB010();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_241D8C010(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_241DAAA70();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unsigned __int8 *sub_241D27CFC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          char v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            unint64_t v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__CFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            unint64_t v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (v14 < v15) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_241D27F7C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_241D281F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v7)(uint64_t *__return_ptr, void *);
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  void v12[2];
  uint64_t v13;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    unsigned int v10 = sub_241DAAFC0();
    if (!v4) {
      unsigned int v10 = BYTE1(v13);
    }
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    if ((v6 & 0x2000000000000000) != 0)
    {
      v12[0] = v5;
      v12[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      unsigned int v10 = v7(&v13, v12);
      if (!v4) {
        unsigned int v10 = v13;
      }
    }
    else
    {
      if ((v5 & 0x1000000000000000) != 0)
      {
        unsigned __int8 v8 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v9 = v5 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        unsigned __int8 v8 = sub_241DAB010();
      }
      unsigned int v10 = sub_241D28310(v8, v9, (void (*)(uint64_t *__return_ptr))sub_241D28C48);
    }
  }
  return v10 & 1;
}

uint64_t sub_241D28310(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

void sub_241D28370(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241D283D4(uint64_t a1)
{
  sub_241D28370(0, &qword_268D4B5B8, MEMORY[0x263F06370], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241D28460()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D28498(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_241DAAA30();
    return sub_241DAAAD0();
  }
  return result;
}

uint64_t sub_241D28534(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_241D270B8(a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    int v6 = (*(unsigned char *)(v4 + 32) ^ ~((~*(unsigned __int8 *)(v4 + 32) & 0xF0u) >> 4));
    uint64_t v7 = (v6 << 12) ^ (32 * v6) ^ 0xFFFFFF00 ^ v6;
    uint64_t v8 = v5 - 1;
    if (v8)
    {
      char v9 = (unsigned __int16)(((_WORD)v6 << 12) ^ (32 * v6) ^ 0xFF00) >> 8;
      unsigned int v10 = (char *)(v4 + 33);
      do
      {
        char v11 = *v10++;
        unsigned int v12 = (v11 ^ v9 ^ (((v11 ^ v9) & 0xF0) >> 4));
        int v13 = (v12 << 12) ^ (v7 << 8) ^ (32 * v12);
        uint64_t v7 = v13 ^ v12;
        char v9 = BYTE1(v13);
        --v8;
      }
      while (v8);
    }
  }
  else
  {
    uint64_t v7 = 0xFFFFLL;
  }
  swift_release();
  return v7;
}

uint64_t sub_241D285F8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D28608()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_241D28610()
{
  return MEMORY[0x270FA0238](v0, 18, 7);
}

uint64_t sub_241D28620()
{
  return *(unsigned __int16 *)(v0 + 16);
}

uint64_t sub_241D28628()
{
  return MEMORY[0x270FA0238](v0, 18, 7);
}

uint64_t sub_241D28638()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char **sub_241D28648(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_241D48CC8(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_241D28650()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28660()
{
  return sub_241D48778(*(void (**)(void))(v0 + 16));
}

uint64_t sub_241D28668()
{
  return sub_241D487B4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_241D28670(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_241D487DC(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_241D28678()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28688()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28698@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_241D286CC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D286DC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D286EC(uint64_t *a1)
{
  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  uint64_t v3 = *a1 + 2;
  uint64_t result = sub_241DAAF10();
  *a1 = v3;
  return result;
}

unint64_t sub_241D2874C()
{
  unint64_t result = qword_268D4B5C8;
  if (!qword_268D4B5C8)
  {
    sub_241D28CD0(255, &qword_268D4B5D0, MEMORY[0x263F8E778], MEMORY[0x263F8D8D0]);
    sub_241D28370(255, &qword_268D4B5D8, (uint64_t (*)(uint64_t))sub_241D28820, MEMORY[0x263F8D8F0]);
    sub_241D288E8();
    unint64_t result = swift_getFunctionTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4B5C8);
  }
  return result;
}

void sub_241D28820()
{
  if (!qword_268D4B5E0)
  {
    sub_241D28890(255, (unint64_t *)&qword_268D4B5E8, (unint64_t *)&qword_268D4D3D0);
    unint64_t v0 = sub_241DAAED0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B5E0);
    }
  }
}

void sub_241D28890(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241D28BF4(255, a3);
    unint64_t v4 = sub_241DAAEF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241D288E8()
{
  if (!qword_268D4B5F0)
  {
    sub_241D28CD0(255, &qword_268D4B5F8, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8D0]);
    unint64_t v0 = sub_241DAAEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B5F0);
    }
  }
}

uint64_t sub_241D28968()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void *sub_241D28978()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void *sub_241D289A0()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t sub_241D289E4()
{
  return sub_241DAAEE0();
}

uint64_t sub_241D28A38()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28A48()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28A58()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28A68()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28A78()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241D28AB0(uint64_t *a1, void **a2, uint64_t a3)
{
  sub_241DA8A6C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_241D28AB8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28AC8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28AD8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28AE8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28AF8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28B08()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28B18()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28B28()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28B38()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28B48()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28B58()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241D28B68()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

void sub_241D28B78()
{
  if (!qword_268D4B608)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D4B608);
    }
  }
}

_OWORD *sub_241D28BE4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_241D28BF4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unsigned char *sub_241D28C30@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_241D28C60(a1, a2);
}

void *sub_241D28C48@<X0>(unsigned char *a1@<X8>)
{
  return sub_241D28D20(a1);
}

unsigned char *sub_241D28C60@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void sub_241D28CD0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void *sub_241D28D20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionFieldCell(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4B658);
}

uint64_t sub_241D28E04()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241D28E64(char a1)
{
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_22;
      }
      goto LABEL_21;
    case 1:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_22;
    case 2:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_22;
    case 3:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_22;
    case 4:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_22;
    case 6:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_22;
    case 11:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_22;
    case 12:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_22;
    case 13:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_22;
    case 14:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_21;
      }
LABEL_22:
      swift_once();
LABEL_21:
      uint64_t result = sub_241DA95E0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_241D29288(uint64_t a1, unsigned __int8 a2)
{
  if ((a1 & 0x100000000) != 0) {
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  BOOL v4 = v3;
  uint64_t v5 = 2;
  switch(a2)
  {
    case 0u:
    case 1u:
    case 3u:
      goto LABEL_6;
    case 0xBu:
    case 0xCu:
      objc_msgSend(v3, sel_setMinimumFractionDigits_, 1);
      uint64_t v6 = 2;
      break;
    case 0xDu:
    case 0xEu:
      uint64_t v6 = 1;
      objc_msgSend(v3, sel_setMinimumFractionDigits_, 1);
      break;
    default:
      uint64_t v5 = 0;
LABEL_6:
      objc_msgSend(v3, sel_setMinimumFractionDigits_, v5);
      if (a2 > 0xEu) {
        uint64_t v6 = 0;
      }
      else {
        uint64_t v6 = qword_241DB2DB8[(char)a2];
      }
      break;
  }
  objc_msgSend(v4, sel_setMaximumFractionDigits_, v6);
  BOOL v7 = (void *)sub_241DAAB60();
  id v8 = objc_msgSend(v4, sel_stringFromNumber_, v7);

  if (!v8) {
    return 0;
  }
  uint64_t v9 = sub_241DAA990();
  uint64_t v11 = v10;

  if (a2 - 7 < 8 || a2 == 4)
  {
    id v12 = sub_241D3A9E4(a2);
    if (v12)
    {
      int v13 = v12;
      if (qword_268D4B2F0 != -1) {
        swift_once();
      }
      sub_241DA95E0();
      sub_241D2B4E4(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_241DB2C60;
      uint64_t v15 = MEMORY[0x263F8D310];
      *(void *)(v14 + 56) = MEMORY[0x263F8D310];
      unint64_t v16 = sub_241D2B59C();
      *(void *)(v14 + 64) = v16;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      id v17 = objc_msgSend(v13, sel_unitString, 0xE000000000000000);
      uint64_t v18 = sub_241DAA990();
      uint64_t v20 = v19;

      *(void *)(v14 + 96) = v15;
      *(void *)(v14 + 104) = v16;
      *(void *)(v14 + 72) = v18;
      *(void *)(v14 + 80) = v20;
      uint64_t v9 = sub_241DAA960();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v9;
}

char *sub_241D295DC(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = &v4[qword_268D4B630];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  uint64_t v11 = qword_268D4B638;
  id v12 = objc_allocWithZone(MEMORY[0x263F828E0]);
  int v13 = v5;
  id v14 = objc_msgSend(v12, sel_init);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  uint64_t v15 = (void *)sub_241DAADA0();
  objc_msgSend(v14, sel_setFont_, v15);

  objc_msgSend(v14, sel_setTextAlignment_, 4);
  objc_msgSend(v14, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v14, sel_setNumberOfLines_, 0);
  *(void *)&v5[v11] = v14;
  uint64_t v16 = qword_268D4B640;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v13[v16] = v17;
  uint64_t v18 = qword_268D4B648;
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v20 = (void *)sub_241DAADA0();
  objc_msgSend(v19, sel_setFont_, v20);

  objc_msgSend(v19, sel_setTextAlignment_, 4);
  objc_msgSend(v19, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v19, sel_setNumberOfLines_, 0);
  *(void *)&v13[v18] = v19;
  uint64_t v21 = qword_268D4B650;
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  unsigned __int8 v23 = (void *)sub_241DAADA0();
  objc_msgSend(v22, sel_setFont_, v23);

  objc_msgSend(v22, sel_setTextAlignment_, 4);
  objc_msgSend(v22, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v22, sel_setNumberOfLines_, 0);
  *(void *)&v13[v21] = v22;

  v27.receiver = v13;
  v27.super_class = (Class)type metadata accessor for VisionPrescriptionFieldCell(0);
  unsigned __int8 v24 = (char *)objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v24, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[qword_268D4B638]);
  uint64_t v25 = *(void **)&v24[qword_268D4B640];
  objc_msgSend(v24, sel_addSubview_, v25);
  objc_msgSend(v25, sel_addSubview_, *(void *)&v24[qword_268D4B648]);
  objc_msgSend(v25, sel_addSubview_, *(void *)&v24[qword_268D4B650]);
  sub_241D299F0();

  return v24;
}

char *sub_241D299A4(double a1, double a2, double a3, double a4)
{
  return sub_241D295DC(a1, a2, a3, a4);
}

void sub_241D299C8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_241D2AF68();
}

void sub_241D299F0()
{
  uint64_t v1 = v0;
  id v52 = self;
  sub_241D2B5F0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241DB2C70;
  id v3 = *(void **)&v1[qword_268D4B638];
  id v4 = objc_msgSend(v3, sel_topAnchor);
  id v5 = objc_msgSend(v1, (SEL)&off_2650F7530 + 3);
  id v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, 9.0);

  *(void *)(v2 + 32) = v6;
  id v7 = objc_msgSend(v3, sel_leadingAnchor);
  id v8 = objc_msgSend(v1, (SEL)&off_2650F7238 + 2);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 16.0);

  *(void *)(v2 + 40) = v9;
  id v10 = objc_msgSend(v1, sel_trailingAnchor);
  id v11 = objc_msgSend(v3, sel_trailingAnchor);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, 16.0);

  *(void *)(v2 + 48) = v12;
  int v13 = *(void **)&v1[qword_268D4B640];
  id v14 = objc_msgSend(v13, (SEL)&off_2650F7530 + 3);
  id v15 = objc_msgSend(v3, sel_bottomAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v2 + 56) = v16;
  id v17 = objc_msgSend(v13, (SEL)&off_2650F7238 + 2);
  id v18 = objc_msgSend(v1, (SEL)&off_2650F7238 + 2);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 16.0);

  *(void *)(v2 + 64) = v19;
  id v20 = objc_msgSend(v1, sel_trailingAnchor);
  id v21 = objc_msgSend(v13, sel_trailingAnchor);
  id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v21, 16.0);

  *(void *)(v2 + 72) = v22;
  id v23 = objc_msgSend(v1, sel_bottomAnchor);
  id v24 = objc_msgSend(v13, sel_bottomAnchor);
  id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v24, 9.0);

  *(void *)(v2 + 80) = v25;
  unsigned int v26 = *(void **)&v1[qword_268D4B650];
  id v27 = objc_msgSend(v26, (SEL)&off_2650F7238 + 2);
  id v28 = objc_msgSend(v13, (SEL)&off_2650F7238 + 2);
  id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(void *)(v2 + 88) = v29;
  id v30 = objc_msgSend(v1, sel_centerXAnchor);
  id v31 = objc_msgSend(v26, sel_trailingAnchor);
  id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v31, 8.0);

  *(void *)(v2 + 96) = v32;
  id v33 = objc_msgSend(v26, sel_topAnchor);
  id v34 = objc_msgSend(v13, sel_topAnchor);
  id v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

  *(void *)(v2 + 104) = v35;
  id v36 = objc_msgSend(v26, sel_bottomAnchor);
  id v37 = objc_msgSend(v13, sel_bottomAnchor);
  id v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  *(void *)(v2 + 112) = v38;
  uint64_t v39 = *(void **)&v1[qword_268D4B648];
  id v40 = objc_msgSend(v39, sel_leadingAnchor);
  id v41 = objc_msgSend(v1, sel_centerXAnchor);
  id v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v41, 8.0);

  *(void *)(v2 + 120) = v42;
  id v43 = objc_msgSend(v39, sel_trailingAnchor);
  id v44 = objc_msgSend(v13, sel_trailingAnchor);
  id v45 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v44);

  *(void *)(v2 + 128) = v45;
  id v46 = objc_msgSend(v39, sel_topAnchor);
  id v47 = objc_msgSend(v13, sel_topAnchor);
  id v48 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v47);

  *(void *)(v2 + 136) = v48;
  id v49 = objc_msgSend(v39, sel_bottomAnchor);
  id v50 = objc_msgSend(v13, sel_bottomAnchor);
  id v51 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v50);

  *(void *)(v2 + 144) = v51;
  sub_241DAAB10();
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
  id v53 = (id)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v52, sel_activateConstraints_, v53);
}

uint64_t sub_241D2A08C()
{
  uint64_t v1 = v0 + qword_268D4B630;
  swift_beginAccess();
  sub_241D2AED8(v1, (uint64_t)v16);
  if (!v17) {
    return sub_241D2AE50((uint64_t)v16);
  }
  sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
  type metadata accessor for VisionPrescriptionFieldItem(0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    id v3 = *(void **)(v0 + qword_268D4B638);
    swift_bridgeObjectRetain();
    id v4 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setText_, v4);

    if (*(void *)(v15 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_leftValueString + 8))
    {
      id v5 = *(void **)(v0 + qword_268D4B648);
      swift_bridgeObjectRetain();
      id v6 = (void *)sub_241DAA950();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setText_, v6);

      id v7 = objc_msgSend(self, sel_labelColor);
      objc_msgSend(v5, sel_setTextColor_, v7);
    }
    else
    {
      id v8 = *(void **)(v0 + qword_268D4B648);
      if (qword_268D4B2F0 != -1) {
        swift_once();
      }
      sub_241DA95E0();
      id v9 = (void *)sub_241DAA950();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setText_, v9, 0xE000000000000000);

      id v7 = objc_msgSend(self, sel_tertiaryLabelColor);
      objc_msgSend(v8, sel_setTextColor_, v7);
    }

    if (*(void *)(v15 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_rightValueString + 8))
    {
      id v10 = *(void **)(v0 + qword_268D4B650);
      swift_bridgeObjectRetain();
      id v11 = (void *)sub_241DAA950();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setText_, v11);

      id v12 = objc_msgSend(self, sel_labelColor);
    }
    else
    {
      id v10 = *(void **)(v0 + qword_268D4B650);
      if (qword_268D4B2F0 != -1) {
        swift_once();
      }
      sub_241DA95E0();
      int v13 = (void *)sub_241DAA950();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setText_, v13, 0xE000000000000000);

      id v12 = objc_msgSend(self, sel_tertiaryLabelColor);
    }
    id v14 = v12;
    objc_msgSend(v10, sel_setTextColor_, v14);

    return swift_release();
  }
  return result;
}

void sub_241D2A484()
{
  sub_241D2AE50(v0 + qword_268D4B630);

  uint64_t v1 = *(void **)(v0 + qword_268D4B650);
}

id sub_241D2A4F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionFieldCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_241D2A52C(uint64_t a1)
{
  sub_241D2AE50(a1 + qword_268D4B630);

  objc_super v2 = *(void **)(a1 + qword_268D4B650);
}

uint64_t sub_241D2A5A8()
{
  return type metadata accessor for VisionPrescriptionFieldCell(0);
}

uint64_t sub_241D2A5B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268D4B630;
  swift_beginAccess();
  return sub_241D2AED8(v3, a1);
}

uint64_t sub_241D2A608(uint64_t a1)
{
  uint64_t v3 = v1 + qword_268D4B630;
  swift_beginAccess();
  sub_241D2ADC0(a1, v3);
  swift_endAccess();
  sub_241D2A08C();
  return sub_241D2AE50(a1);
}

uint64_t (*sub_241D2A678(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241D2A6D8;
}

uint64_t sub_241D2A6D8(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_241D2A08C();
  }
  return result;
}

uint64_t sub_241D2A70C()
{
  uint64_t v1 = sub_241DAB1F0();
  sub_241DAAA50();
  sub_241DA9780();
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_241D2A7A0(char a1)
{
  objc_super v2 = &selRef_horizontalAmount;
  if (a1)
  {
    uint64_t v3 = &selRef_horizontalBase;
  }
  else
  {
    objc_super v2 = &selRef_verticalAmount;
    uint64_t v3 = &selRef_verticalBase;
  }
  id v4 = [v1 *v2];
  id v5 = [v1 *v3];
  id v6 = objc_msgSend(self, sel_prismDiopterUnit);
  if (!v6) {
    goto LABEL_10;
  }
  id v7 = v6;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  objc_msgSend(v8, sel_setMinimumFractionDigits_, 0);
  objc_msgSend(v8, sel_setMaximumFractionDigits_, 2);
  objc_msgSend(v4, sel_doubleValueForUnit_, v7);
  id v9 = (void *)sub_241DAAB50();
  id v10 = objc_msgSend(v8, sel_stringFromNumber_, v9);

  if (!v10)
  {

LABEL_10:
    return 0;
  }
  uint64_t v11 = sub_241DAA990();
  uint64_t v13 = v12;

  switch((unint64_t)v5)
  {
    case 1uLL:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 2uLL:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 3uLL:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 4uLL:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_16;
      }
LABEL_19:
      swift_once();
LABEL_16:
      sub_241DA95E0();
      break;
    default:
      break;
  }
  sub_241D2B4E4(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_241DB2C80;
  *(void *)(v15 + 56) = MEMORY[0x263F8D310];
  *(void *)(v15 + 64) = sub_241D2B59C();
  *(void *)(v15 + 32) = v11;
  *(void *)(v15 + 40) = v13;
  uint64_t v14 = sub_241DAA9A0();
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t sub_241D2AB7C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_uuid;
  uint64_t v2 = sub_241DA97B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_241D2AC60()
{
  return type metadata accessor for VisionPrescriptionFieldItem(0);
}

uint64_t type metadata accessor for VisionPrescriptionFieldItem(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_26B041520);
}

uint64_t sub_241D2AC88(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D2ACC0()
{
  uint64_t result = sub_241DA97B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241D2AD68()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241D2AD9C()
{
  return sub_241D2A70C();
}

uint64_t sub_241D2ADC0(uint64_t a1, uint64_t a2)
{
  sub_241D2B4E4(0, (unint64_t *)&qword_268D4BC30, (unint64_t *)&qword_268D4B668, MEMORY[0x263F437A0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_241D2AE50(uint64_t a1)
{
  sub_241D2B4E4(0, (unint64_t *)&qword_268D4BC30, (unint64_t *)&qword_268D4B668, MEMORY[0x263F437A0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241D2AED8(uint64_t a1, uint64_t a2)
{
  sub_241D2B4E4(0, (unint64_t *)&qword_268D4BC30, (unint64_t *)&qword_268D4B668, MEMORY[0x263F437A0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_241D2AF68()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[qword_268D4B630];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((void *)v2 + 4) = 0;
  uint64_t v3 = qword_268D4B638;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  id v5 = (void *)sub_241DAADA0();
  objc_msgSend(v4, sel_setFont_, v5);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  *(void *)&v0[v3] = v4;
  uint64_t v6 = qword_268D4B640;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v0[v6] = v7;
  uint64_t v8 = qword_268D4B648;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v10 = (void *)sub_241DAADA0();
  objc_msgSend(v9, sel_setFont_, v10);

  objc_msgSend(v9, sel_setTextAlignment_, 4);
  objc_msgSend(v9, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  *(void *)&v0[v8] = v9;
  uint64_t v11 = qword_268D4B650;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v13 = (void *)sub_241DAADA0();
  objc_msgSend(v12, sel_setFont_, v13);

  objc_msgSend(v12, sel_setTextAlignment_, 4);
  objc_msgSend(v12, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  *(void *)&v1[v11] = v12;

  sub_241DAB080();
  __break(1u);
}

uint64_t sub_241D2B274(char a1, void *a2, void *a3)
{
  if (a1)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
  }
  else if (qword_268D4B2F0 != -1)
  {
    swift_once();
  }
  uint64_t v6 = sub_241DA95E0();
  uint64_t v8 = v7;
  if (!a2)
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    if (a3) {
      goto LABEL_9;
    }
LABEL_11:
    uint64_t v14 = 0;
    goto LABEL_12;
  }
  id v9 = a2;
  uint64_t v10 = sub_241D2A7A0(a1 & 1);
  uint64_t v12 = v11;

  if (!a3) {
    goto LABEL_11;
  }
LABEL_9:
  id v13 = a3;
  uint64_t v14 = sub_241D2A7A0(a1 & 1);
  a3 = v15;

LABEL_12:
  type metadata accessor for VisionPrescriptionFieldItem(0);
  uint64_t v16 = swift_allocObject();
  type metadata accessor for VisionPrescriptionFieldCell(0);
  sub_241D2B48C();
  *(void *)(v16 + 16) = sub_241DA9A30();
  *(void *)(v16 + 24) = v17;
  sub_241DA97A0();
  id v18 = (uint64_t *)(v16 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_leftValueString);
  uint64_t *v18 = 0;
  v18[1] = 0;
  id v19 = (uint64_t *)(v16 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_rightValueString);
  uint64_t *v19 = 0;
  v19[1] = 0;
  id v20 = (uint64_t *)(v16 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_title);
  uint64_t *v20 = v6;
  v20[1] = v8;
  uint64_t *v18 = v10;
  v18[1] = v12;
  swift_bridgeObjectRelease();
  uint64_t *v19 = v14;
  v19[1] = (uint64_t)a3;
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_241D2B48C()
{
  unint64_t result = qword_268D4B670;
  if (!qword_268D4B670)
  {
    type metadata accessor for VisionPrescriptionFieldCell(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4B670);
  }
  return result;
}

void sub_241D2B4E4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241D2B54C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241D2B54C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_241D2B59C()
{
  unint64_t result = qword_268D4D3B0;
  if (!qword_268D4D3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4D3B0);
  }
  return result;
}

void sub_241D2B5F0()
{
  if (!qword_268D4BC80)
  {
    unint64_t v0 = sub_241DAB130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BC80);
    }
  }
}

uint64_t _s8SentinelCMa()
{
  return self;
}

id sub_241D2B670()
{
  _s8SentinelCMa();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_268D50D30 = (uint64_t)result;
  return result;
}

void *static HKPrismBase.allCases.getter()
{
  return &unk_26F5CED18;
}

uint64_t HKPrismBase.text.getter(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_11;
      }
      goto LABEL_10;
    case 2:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_10;
      }
      goto LABEL_11;
    case 3:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_10;
      }
      goto LABEL_11;
    case 4:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_10;
      }
LABEL_11:
      swift_once();
LABEL_10:
      uint64_t result = sub_241DA95E0();
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_241D2B8C8()
{
  return sub_241D2C5B8(&qword_268D4B680, type metadata accessor for HKPrismBase);
}

uint64_t sub_241D2B910()
{
  return HKPrismBase.text.getter(*v0);
}

unint64_t sub_241D2B91C()
{
  unint64_t result = qword_268D4B688;
  if (!qword_268D4B688)
  {
    sub_241D2BFD0(255, &qword_268D4B690, (uint64_t (*)(uint64_t))type metadata accessor for HKPrismBase, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4B688);
  }
  return result;
}

void sub_241D2B9A4(void *a1@<X8>)
{
  *a1 = &unk_26F5CED58;
}

uint64_t sub_241D2B9B4@<X0>(uint64_t a1@<X0>, int a2@<W1>, id (*a3)(uint64_t a1)@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  int v45 = a2;
  uint64_t v9 = sub_241DA97B0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t, void *, void (*)(uint64_t), uint64_t))((char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241D2BFD0(0, &qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v42 - v13;
  type metadata accessor for VisionPrescriptionValidationController();
  uint64_t v15 = swift_allocObject();
  type metadata accessor for VisionPrescriptionValidationHandler();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = a3;
  uint64_t v17 = sub_241D2C6D8;
  id v18 = sub_241D2C388;
  int v44 = a4;
  id v19 = (void (*)(uint64_t, uint64_t, uint64_t, void *, void (*)(uint64_t), uint64_t))v16;
  switch((char)a4)
  {
    case 8:
    case 10:
      id v43 = v11;
      char v20 = v44;
      unint64_t v46 = sub_241D3B370(v44);
      uint64_t v47 = v21;
      swift_retain();
      sub_241DAAA50();
      if (qword_268D4B2F0 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_241DA95E0();
      v42[2] = v23;
      v42[3] = v22;
      swift_bridgeObjectRelease();
      sub_241DA95E0();
      v42[1] = v24;
      uint64_t v25 = sub_241DAA390();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 1, 1, v25);
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = a3;
      *(void *)(v26 + 24) = a1;
      *(unsigned char *)(v26 + 32) = v20;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = a3;
      *(unsigned char *)(v27 + 24) = v20;
      *(void *)(v27 + 32) = a1;
      swift_retain_n();
      sub_241DA97A0();
      sub_241D2C804();
      a5[3] = v28;
      a5[4] = sub_241D2C5B8(&qword_268D4B6B8, (void (*)(uint64_t))sub_241D2C804);
      sub_241D2C600(a5);
      type metadata accessor for HKPrismBase(0);
      sub_241D2C5B8(&qword_268D4B6B0, type metadata accessor for HKPrismBase);
      sub_241DA99F0();
      return swift_release();
    case 9:
      break;
    case 11:
      goto LABEL_6;
    case 12:
      uint64_t v17 = sub_241D2C668;
LABEL_6:
      id v19 = (void (*)(uint64_t, uint64_t, uint64_t, void *, void (*)(uint64_t), uint64_t))swift_allocObject();
      *((void *)v19 + 2) = a3;
      *((void *)v19 + 3) = a1;
      *((void *)v19 + 4) = v16;
      swift_retain();
      id v18 = v17;
      break;
    default:
      id v19 = (void (*)(uint64_t, uint64_t, uint64_t, void *, void (*)(uint64_t), uint64_t))v16;
      break;
  }
  id v43 = v18;
  uint64_t v30 = a1;
  id v31 = (int *)type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  a5[3] = (uint64_t)v31;
  a5[4] = sub_241D2C5B8((unint64_t *)&qword_268D4B6A0, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem);
  id v32 = sub_241D2C600(a5);
  type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
  swift_retain_n();
  swift_retain();
  swift_retain();
  *id v32 = sub_241DA9A30();
  v32[1] = v33;
  sub_241DA97A0();
  id v34 = (void (**)(uint64_t, uint64_t, uint64_t, void *, void (*)(uint64_t), uint64_t))((char *)v32 + v31[6]);
  id v35 = (id (**)(uint64_t))((char *)v32 + v31[7]);
  id v36 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v32 + v31[8]);
  char v37 = v44;
  *((unsigned char *)v32 + v31[10]) = v44;
  *(uint64_t *)((char *)v32 + v31[11]) = v30;
  uint64_t v38 = sub_241D729DC(v30, v37);
  uint64_t v40 = v39;
  swift_release();
  uint64_t result = swift_release();
  id v41 = (uint64_t *)((char *)v32 + v31[12]);
  *id v41 = v38;
  v41[1] = v40;
  *((unsigned char *)v32 + v31[9]) = v45 & 1;
  char *v34 = v43;
  v34[1] = v19;
  *id v35 = sub_241D2C4E0;
  v35[1] = a3;
  NSObject *v36 = sub_241D2C5B0;
  v36[1] = (void (*)(uint64_t, uint64_t, uint64_t))a3;
  return result;
}

void sub_241D2BFD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241D2C034(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  char v16 = *(unsigned char *)(a3 + *(int *)(v15 + 40));
  id v17 = sub_241D3AAD0(a1, a2, v16);
  if (v17)
  {
    id v18 = v17;
    sub_241D4B5F0(a8);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_241DAA6B0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v19 = *(void *)(a3 + *(int *)(v15 + 44));
    id v20 = v18;
    sub_241D69008(v20, v16, v19, v21, (uint64_t)v18, a4, a5, a6);
  }
}

void sub_241D2C170(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  char v16 = *(unsigned char *)(a3 + *(int *)(v15 + 40));
  id v17 = sub_241D3AAD0(a1, a2, v16);
  if (v17)
  {
    id v18 = v17;
    sub_241D4B5F0(a8);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_241DAA6B0();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v19 = *(void *)(a3 + *(int *)(v15 + 44));
    id v20 = v18;
    sub_241D69008(v20, v16, v19, v18, (uint64_t)v21, a4, a5, a6);
  }
}

void sub_241D2C2AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v12 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  char v13 = *(unsigned char *)(a3 + *(int *)(v12 + 40));
  id v14 = sub_241D3AAD0(a1, a2, v13);
  if (v14)
  {
    id v15 = v14;
    sub_241D68F00(v14, v13, *(void *)(a3 + *(int *)(v12 + 44)), a4, a5, a6);
  }
}

void sub_241D2C388(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6)
{
}

uint64_t sub_241D2C390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_241D2D418(a5);
  swift_retain();
  sub_241D5681C(v6, v7, a4);

  return swift_release();
}

id sub_241D2C3F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  unint64_t v3 = *(unsigned __int8 *)(a1 + *(int *)(v2 + 40));
  uint64_t v4 = *(void *)(a1 + *(int *)(v2 + 44));
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v9 != 2)
  {
    if (v9 != 1) {
      return 0;
    }
    id v5 = sub_241D700C4(v3, v4);
    if (v5) {
      goto LABEL_4;
    }
    return 0;
  }
  id v5 = sub_241D700E0(v3, v4);
  if (!v5) {
    return 0;
  }
LABEL_4:
  id v6 = v5;
  id v7 = sub_241D3AD50(v5, v3);

  return v7;
}

id sub_241D2C4E0(uint64_t a1)
{
  return sub_241D2C3F8(a1);
}

void sub_241D2C4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v6 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
    uint64_t v7 = *(void *)(a1 + *(int *)(v6 + 44));
    uint64_t v8 = *(unsigned __int8 *)(a1 + *(int *)(v6 + 40));
    id v10 = sub_241D3AAD0(a2, a3, v8);
    sub_241D6D700(v8, v7, v10);
  }
  else
  {
    uint64_t v9 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
    sub_241D6D700(*(unsigned __int8 *)(a1 + *(int *)(v9 + 40)), *(void *)(a1 + *(int *)(v9 + 44)), 0);
  }
}

void sub_241D2C5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_241D2C5B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_241D2C600(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void sub_241D2C668(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6)
{
  sub_241D2C170(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16), *(void *)(v6 + 24));
}

uint64_t sub_241D2C698()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241D2C6D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6)
{
  sub_241D2C034(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16), *(void *)(v6 + 24));
}

uint64_t sub_241D2C704()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 33, 7);
}

uint64_t sub_241D2C73C@<X0>(uint64_t a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 32);
  uint64_t result = sub_241D2D418(*(void *)(v1 + 24));
  if (v3 == 10)
  {
    id v5 = &OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
  }
  else
  {
    if (v3 != 8)
    {
      uint64_t v7 = 0;
      char v8 = 1;
      goto LABEL_7;
    }
    id v5 = &OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
  }
  uint64_t v6 = result + *v5;
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);
LABEL_7:
  *(void *)a1 = v7;
  *(unsigned char *)(a1 + 8) = v8;
  return result;
}

uint64_t sub_241D2C7BC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241D2C7F4(uint64_t a1, uint64_t a2)
{
  return sub_241D2C390(a1, a2, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_241D2C804()
{
  if (!qword_268D4B6A8)
  {
    type metadata accessor for HKPrismBase(255);
    sub_241D2C5B8(&qword_268D4B6B0, type metadata accessor for HKPrismBase);
    unint64_t v0 = sub_241DA9A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B6A8);
    }
  }
}

uint64_t sub_241D2C898@<X0>(void *a1@<X8>)
{
  return sub_241D2C8D4(a1);
}

uint64_t sub_241D2C8AC(void **a1)
{
  return sub_241D2C964(a1);
}

uint64_t sub_241D2C8C0@<X0>(void *a1@<X8>)
{
  return sub_241D2C8D4(a1);
}

uint64_t sub_241D2C8D4@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241DAA6B0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_241D2C950(void **a1)
{
  return sub_241D2C964(a1);
}

uint64_t sub_241D2C964(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_241DAA6C0();
}

uint64_t sub_241D2C9D8@<X0>(void *a1@<X8>)
{
  return sub_241D2C8D4(a1);
}

uint64_t sub_241D2CA00(void **a1)
{
  return sub_241D2C964(a1);
}

uint64_t sub_241D2CA28@<X0>(void *a1@<X8>)
{
  return sub_241D2C8D4(a1);
}

uint64_t sub_241D2CA50(void **a1)
{
  return sub_241D2C964(a1);
}

id sub_241D2CA78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_241DAA2E0();
  uint64_t v25 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D2DB3C(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v24 - v7;
  swift_retain();
  unint64_t v9 = (unint64_t)sub_241D55130();
  swift_release();
  swift_retain();
  unint64_t v10 = (unint64_t)sub_241D55130();
  swift_release();
  if (v9 | v10)
  {
    sub_241D2DAA8(a2, (uint64_t)v8);
    swift_bridgeObjectRetain();
    id v18 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    uint64_t v19 = (void *)sub_241DA9730();
    uint64_t v20 = sub_241DA9770();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v8, 1, v20) != 1)
    {
      uint64_t v22 = (void *)sub_241DA9730();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v20);
    }
    id v17 = objc_msgSend(self, sel_prescriptionWithRightEyeSpecification_leftEyeSpecification_brand_dateIssued_expirationDate_device_metadata_, v10, v9, v18, v19, v22, 0, 0);
  }
  else
  {
    sub_241DAA2B0();
    uint64_t v11 = sub_241DAA2D0();
    os_log_type_t v12 = sub_241DAAC10();
    if (os_log_type_enabled(v11, v12))
    {
      char v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v27 = v14;
      *(_DWORD *)char v13 = 136315138;
      uint64_t v15 = sub_241DAB1F0();
      uint64_t v26 = sub_241D48854(v15, v16, &v27);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v11, v12, "[%s] Lens specification of at least one side of vision needs to be non-nil.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v14, -1, -1);
      MEMORY[0x24563A5D0](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v3);
    return 0;
  }
  return v17;
}

uint64_t type metadata accessor for ContactsManualDataEntryContext()
{
  return self;
}

id sub_241D2CEA0(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = *v2;
  uint64_t v33 = a2;
  uint64_t v4 = sub_241DAA2E0();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D2DB3C(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = sub_241DA9770();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  unint64_t v14 = (unint64_t)sub_241D55C6C();
  swift_release();
  swift_retain();
  unint64_t v15 = (unint64_t)sub_241D55C6C();
  swift_release();
  if (v14 | v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
    sub_241D2DAA8(v33, (uint64_t)v9);
    sub_241D2DB3C(0, &qword_268D4B600, (uint64_t (*)(uint64_t))sub_241D28B78, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241DB2C80;
    *(void *)(inited + 32) = sub_241DAA990();
    *(void *)(inited + 40) = v24;
    uint64_t v26 = v2[2];
    unint64_t v25 = v2[3];
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    if (!v25) {
      uint64_t v26 = 0;
    }
    unint64_t v27 = 0xE000000000000000;
    if (v25) {
      unint64_t v27 = v25;
    }
    *(void *)(inited + 48) = v26;
    *(void *)(inited + 56) = v27;
    swift_bridgeObjectRetain();
    sub_241D7597C(inited);
    uint64_t v28 = (void *)sub_241DA9730();
    id v29 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      id v29 = (void *)sub_241DA9730();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v30 = (void *)sub_241DAA910();
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(self, sel_prescriptionWithRightEyeSpecification_leftEyeSpecification_dateIssued_expirationDate_device_metadata_, v15, v14, v28, v29, 0, v30, v32);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    sub_241DAA2B0();
    unint64_t v16 = sub_241DAA2D0();
    os_log_type_t v17 = sub_241DAAC10();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v37 = v19;
      *(_DWORD *)id v18 = 136315138;
      uint64_t v20 = sub_241DAB1F0();
      uint64_t v36 = sub_241D48854(v20, v21, &v37);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v16, v17, "[%s] Lens specification of at least one side of vision needs to be non-nil.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v19, -1, -1);
      MEMORY[0x24563A5D0](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v35);
    return 0;
  }
  return v22;
}

uint64_t sub_241D2D394()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GlassesManualDataEntryContext()
{
  return self;
}

_UNKNOWN **sub_241D2D400()
{
  return &off_26B983630;
}

_UNKNOWN **sub_241D2D40C()
{
  return &off_26B983688;
}

uint64_t sub_241D2D418(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241DAA2E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
LABEL_7:
    uint64_t v8 = v2 + 40;
    return *(void *)v8;
  }
  if (a1 != 1)
  {
    sub_241DAA280();
    unint64_t v9 = sub_241DAA2D0();
    os_log_type_t v10 = sub_241DAAC20();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v21 = v19;
      *(_DWORD *)uint64_t v11 = 136446466;
      uint64_t v12 = sub_241DAB1F0();
      uint64_t v20 = sub_241D48854(v12, v13, &v21);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      uint64_t v20 = a1;
      type metadata accessor for HKVisionEye(0);
      uint64_t v14 = sub_241DAA9B0();
      uint64_t v20 = sub_241D48854(v14, v15, &v21);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v9, v10, "[%{public}s] Unknown eye received: %s", (uint8_t *)v11, 0x16u);
      uint64_t v16 = v19;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v16, -1, -1);
      MEMORY[0x24563A5D0](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_7;
  }
  uint64_t v8 = v2 + 32;
  return *(void *)v8;
}

void *sub_241D2D68C(void *a1)
{
  type metadata accessor for ContactsManualDataEntryContext();
  uint64_t v2 = (void *)swift_allocObject();
  if (a1)
  {
    id v3 = objc_msgSend(a1, sel_brand);
    uint64_t v4 = sub_241DAA990();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  v2[2] = v4;
  v2[3] = v6;
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(a1, sel_leftEye);
  type metadata accessor for ContactsLensSpecificationContext();
  swift_allocObject();
  uint64_t v8 = sub_241D5733C(1, v7);

  v2[4] = v8;
  id v9 = objc_msgSend(a1, sel_rightEye);
  swift_allocObject();
  uint64_t v10 = sub_241D5733C(2, v9);

  v2[5] = v10;
  return v2;
}

void *sub_241D2D7B4(id a1)
{
  uint64_t v2 = v1;
  v1[2] = 0;
  v1[3] = 0;
  if (!a1 || (id v4 = objc_msgSend(a1, sel_metadata)) == 0)
  {
    long long v19 = 0u;
    long long v20 = 0u;
    goto LABEL_10;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_241DAA920();

  uint64_t v7 = sub_241DAA990();
  if (!*(void *)(v6 + 16) || (unint64_t v9 = sub_241DA3428(v7, v8), (v10 & 1) == 0))
  {
    long long v19 = 0u;
    long long v20 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_241D2DA4C(*(void *)(v6 + 56) + 32 * v9, (uint64_t)&v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v20 + 1))
  {
LABEL_10:
    sub_241D2D994((uint64_t)&v19);
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    goto LABEL_11;
  }
  int v11 = swift_dynamicCast();
  uint64_t v12 = v17;
  uint64_t v13 = v18;
  if (!v11)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
LABEL_11:
  v2[2] = v12;
  v2[3] = v13;
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(a1, sel_leftEye);
  type metadata accessor for GlassesLensSpecificationContext();
  swift_allocObject();
  v2[4] = sub_241D555C8(1, v14);
  id v15 = objc_msgSend(a1, sel_rightEye);
  swift_allocObject();
  v2[5] = sub_241D555C8(2, v15);
  return v2;
}

uint64_t sub_241D2D994(uint64_t a1)
{
  sub_241D2D9F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241D2D9F0()
{
  if (!qword_268D4C350)
  {
    unint64_t v0 = sub_241DAAEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C350);
    }
  }
}

uint64_t sub_241D2DA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_241D2DAA8(uint64_t a1, uint64_t a2)
{
  sub_241D2DB3C(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_241D2DB3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for VisionPrescriptionSingleEyeTitleCell()
{
  uint64_t result = qword_268D4B6E0;
  if (!qword_268D4B6E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D2DBEC()
{
  return swift_initClassMetadata2();
}

id sub_241D2DC50(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  char v10 = &v4[qword_268D4B6C0];
  *(_OWORD *)char v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  *(void *)&v4[qword_268D4B6C8] = 0;
  *(void *)&v4[qword_268D4B6D0] = 0;
  uint64_t v11 = qword_268D4B6D8;
  id v12 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v13 = v5;
  id v14 = objc_msgSend(v12, sel_init);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  id v15 = (void *)sub_241DAADA0();
  objc_msgSend(v14, sel_setFont_, v15);

  objc_msgSend(v14, sel_setTextAlignment_, 1);
  objc_msgSend(v14, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v14, sel_setNumberOfLines_, 0);
  *(void *)&v5[v11] = v14;

  v18.receiver = v13;
  v18.super_class = (Class)type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
  id v16 = objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  sub_241D2DE54();

  return v16;
}

id sub_241D2DE08(double a1, double a2, double a3, double a4)
{
  return sub_241D2DC50(a1, a2, a3, a4);
}

void sub_241D2DE2C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_241D2E72C();
}

void sub_241D2DE54()
{
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  id v1 = objc_msgSend(v0, sel_contentView);
  uint64_t v2 = *(void **)&v0[qword_268D4B6D8];
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = objc_msgSend(v2, sel_topAnchor);
  id v4 = objc_msgSend(v0, (SEL)&off_2650F7298);
  id v5 = objc_msgSend(v4, sel_topAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 3.0);
  id v7 = objc_msgSend(v0, (SEL)&off_2650F7298);
  id v8 = objc_msgSend(v7, sel_bottomAnchor);

  id v9 = objc_msgSend(v2, sel_bottomAnchor);
  id v10 = objc_msgSend(v8, (SEL)&off_2650F7300 + 7, v9, 3.0);

  uint64_t v11 = *(void **)&v0[qword_268D4B6C8];
  *(void *)&v0[qword_268D4B6C8] = v6;
  id v12 = v6;

  uint64_t v13 = *(void **)&v0[qword_268D4B6D0];
  *(void *)&v0[qword_268D4B6D0] = v10;
  id v14 = v10;

  uint64_t v26 = self;
  sub_241D2B5F0();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_241DB3050;
  *(void *)(v15 + 32) = v12;
  *(void *)(v15 + 40) = v14;
  id v16 = v12;
  id v17 = v14;
  id v18 = objc_msgSend(v2, sel_leadingAnchor);
  id v19 = objc_msgSend(v0, (SEL)&off_2650F7298);
  id v20 = objc_msgSend(v19, sel_leadingAnchor);

  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 16.0);
  *(void *)(v15 + 48) = v21;
  id v22 = objc_msgSend(v0, (SEL)&off_2650F7298);
  id v23 = objc_msgSend(v22, sel_trailingAnchor);

  id v24 = objc_msgSend(v2, sel_trailingAnchor);
  id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v24, 16.0);

  *(void *)(v15 + 56) = v25;
  sub_241DAAB10();
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
  id v27 = (id)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v27);
}

void sub_241D2E1C8()
{
  uint64_t v1 = (uint64_t)&v0[qword_268D4B6C0];
  swift_beginAccess();
  sub_241D2AED8(v1, (uint64_t)v12);
  if (!v13)
  {
    sub_241D2AE50((uint64_t)v12);
    goto LABEL_9;
  }
  sub_241D2E674();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    id v8 = *(void **)&v0[qword_268D4B6D8];
    id v9 = (void *)sub_241DAA950();
    objc_msgSend(v8, sel_setText_, v9);

    return;
  }
  uint64_t v2 = *(void **)&v0[qword_268D4B6D8];
  sub_241D57654(v11);
  id v3 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v3);

  id v4 = objc_msgSend(v0, sel_traitCollection);
  id v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  LOBYTE(v4) = sub_241DAAD70();
  id v6 = *(void **)&v0[qword_268D4B6C8];
  if (v4)
  {
    if (v6) {
      objc_msgSend(v6, sel_setConstant_, 3.0);
    }
    id v7 = *(void **)&v0[qword_268D4B6D0];
    if (v7) {
      objc_msgSend(v7, sel_setConstant_, 3.0);
    }
  }
  else
  {
    if (v6) {
      objc_msgSend(v6, sel_setConstant_, 0.0);
    }
    id v10 = *(void **)&v0[qword_268D4B6D0];
    if (v10) {
      objc_msgSend(v10, sel_setConstant_, 0.0);
    }
  }
}

void sub_241D2E3B8()
{
  sub_241D2AE50(v0 + qword_268D4B6C0);

  uint64_t v1 = *(void **)(v0 + qword_268D4B6D8);
}

id sub_241D2E418()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_241D2E450(uint64_t a1)
{
  sub_241D2AE50(a1 + qword_268D4B6C0);

  objc_super v2 = *(void **)(a1 + qword_268D4B6D8);
}

uint64_t sub_241D2E4BC()
{
  return type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
}

uint64_t sub_241D2E4C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268D4B6C0;
  swift_beginAccess();
  return sub_241D2AED8(v3, a1);
}

uint64_t sub_241D2E518(uint64_t a1)
{
  uint64_t v3 = v1 + qword_268D4B6C0;
  swift_beginAccess();
  sub_241D2ADC0(a1, v3);
  swift_endAccess();
  sub_241D2E1C8();
  return sub_241D2AE50(a1);
}

void (*sub_241D2E588(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241D2E5E8;
}

void sub_241D2E5E8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_241D2E1C8();
  }
}

void sub_241D2E61C()
{
  if (!qword_268D4BC30)
  {
    sub_241D2E674();
    unint64_t v0 = sub_241DAAEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BC30);
    }
  }
}

unint64_t sub_241D2E674()
{
  unint64_t result = qword_268D4B668;
  if (!qword_268D4B668)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4B668);
  }
  return result;
}

uint64_t sub_241D2E6CC()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241D2E6FC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_241D2E72C()
{
  uint64_t v1 = v0;
  objc_super v2 = &v0[qword_268D4B6C0];
  *(_OWORD *)objc_super v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((void *)v2 + 4) = 0;
  *(void *)&v0[qword_268D4B6C8] = 0;
  *(void *)&v0[qword_268D4B6D0] = 0;
  uint64_t v3 = qword_268D4B6D8;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  id v5 = (void *)sub_241DAADA0();
  objc_msgSend(v4, sel_setFont_, v5);

  objc_msgSend(v4, sel_setTextAlignment_, 1);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  *(void *)&v1[v3] = v4;

  sub_241DAB080();
  __break(1u);
}

uint64_t initializeBufferWithCopyOfBuffer for VisionPrescriptionSingleEyeTitleItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for VisionPrescriptionSingleEyeTitleItem()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for VisionPrescriptionSingleEyeTitleItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for VisionPrescriptionSingleEyeTitleItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

__n128 initializeWithTake for VisionPrescriptionSingleEyeTitleItem(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for VisionPrescriptionSingleEyeTitleItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionSingleEyeTitleItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionSingleEyeTitleItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionSingleEyeTitleItem()
{
  return &type metadata for VisionPrescriptionSingleEyeTitleItem;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource()
{
  uint64_t result = qword_268D4B710;
  if (!qword_268D4B710) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D2EB24()
{
  return swift_initClassMetadata2();
}

void *sub_241D2EB88(char a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_241DA97B0();
  uint64_t v20 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v4 + qword_268D4B6F0) = a1;
  *(unsigned char *)(v4 + qword_268D4B6F8) = a2;
  type metadata accessor for VisionPrescriptionValidationController();
  uint64_t v12 = swift_allocObject();
  type metadata accessor for VisionPrescriptionValidationHandler();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = a3;
  *(void *)(v4 + qword_268D4B700) = v13;
  *(void *)(v4 + qword_268D4B708) = a3;
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  swift_retain_n();
  sub_241DAAFD0();
  swift_bridgeObjectRelease();
  strcpy((char *)v21, "MutableArray<");
  HIWORD(v21[1]) = -4864;
  sub_241DA97A0();
  sub_241DA9780();
  id v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  sub_241DAAA50();
  uint64_t v15 = (void *)sub_241DA9C40();
  sub_241D2FD1C(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_241DA9C00();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241DB2C80;
  id v16 = *(void (**)(uint64_t))(qword_268D50D48 + *v15 + 48);
  uint64_t v17 = swift_retain();
  v16(v17);
  sub_241DA97A0();
  sub_241DA9780();
  v14(v11, v20);
  sub_241DA9BF0();
  sub_241DA9C60();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_241D2EEE8()
{
  int v1 = *(unsigned __int8 *)(v0 + qword_268D4B6F0);
  uint64_t v2 = MEMORY[0x263F8EE78];
  switch(*(unsigned char *)(v0 + qword_268D4B6F0))
  {
    case 4:
    case 6:
      return v2;
    case 5:
      int v1 = 4;
      goto LABEL_5;
    case 7:
      int v1 = 13;
      goto LABEL_5;
    case 8:
      int v1 = 14;
      goto LABEL_5;
    default:
LABEL_5:
      sub_241D2FD1C(0, &qword_268D4B740, (uint64_t (*)(uint64_t))sub_241D2E674, MEMORY[0x263F8E0F8]);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_241DB2C60;
      int v3 = *(unsigned __int8 *)(v0 + qword_268D4B6F8);
      uint64_t v4 = *(id (**)(uint64_t))(v0 + qword_268D4B708);
      sub_241D2B9B4(2, v3, v4, v1, (uint64_t *)(v2 + 32));
      sub_241D2B9B4(1, v3, v4, v1, (uint64_t *)(v2 + 72));
      return v2;
  }
}

void sub_241D2F01C()
{
}

uint64_t sub_241D2F04C()
{
  swift_release();

  return swift_release();
}

uint64_t sub_241D2F08C()
{
  sub_241DA9CA0();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241D2F0EC()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource();
}

uint64_t sub_241D2F0F4()
{
  return sub_241DAAC40();
}

uint64_t sub_241D2F18C()
{
  uint64_t v1 = sub_241DA9D50();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)v13 - v6;
  sub_241D2F2F4(*(unsigned char *)(v0 + qword_268D4B6F0));
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (v9) {
    sub_241DA9CE0();
  }
  else {
    sub_241DA9D00();
  }
  sub_241DA9CD0();
  sub_241DA9F00();
  uint64_t v10 = sub_241DA9D40();
  swift_unknownObjectRelease();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  v11(v7, v1);
  return v10;
}

uint64_t sub_241D2F2F4(char a1)
{
  if (a1 == 7 || a1 == 5)
  {
    if (qword_268D4B2F0 == -1) {
      return sub_241DA95E0();
    }
    goto LABEL_12;
  }
  if (!a1)
  {
    if (qword_268D4B2F0 == -1) {
      return sub_241DA95E0();
    }
LABEL_12:
    swift_once();
    return sub_241DA95E0();
  }
  return 0;
}

uint64_t sub_241D2F418()
{
  return sub_241D2F18C();
}

uint64_t sub_241D2F440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_241D2FD1C(0, &qword_268D4B720, MEMORY[0x263F441D8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = sub_241DA97B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241DAA140();
  uint64_t v31 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v17 = sub_241DAA990() == a1 && v16 == a2;
  uint64_t v33 = a3;
  if (v17)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = sub_241DAB160();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      if (sub_241DAA990() == a1 && v19 == a2)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v21 = sub_241DAB160();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0)
        {
LABEL_18:
          uint64_t v29 = sub_241DA9AE0();
          uint64_t v30 = v33;
          v33[3] = v29;
          v30[4] = sub_241D2FCD4(&qword_268D4B728, MEMORY[0x263F43D00]);
          sub_241D2C600(v30);
          return sub_241DA9AD0();
        }
      }
      sub_241D2F2F4(*(unsigned char *)(v32 + qword_268D4B6F0));
      if (v25)
      {
        uint64_t v26 = sub_241DA9DB0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v8, 1, 1, v26);
        uint64_t v27 = sub_241DA9DD0();
        uint64_t v28 = v33;
        v33[3] = v27;
        v28[4] = sub_241D2FCD4(&qword_268D4B730, MEMORY[0x263F441E0]);
        sub_241D2C600(v28);
        return sub_241DA9DC0();
      }
      goto LABEL_18;
    }
  }
  sub_241D2F900(*(unsigned char *)(v32 + qword_268D4B6F0));
  uint64_t v34 = 0x74497265746F6F46;
  unint64_t v35 = 0xEB000000005F6D65;
  sub_241DA97A0();
  sub_241DA9780();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  sub_241DAA130();
  uint64_t v34 = 0;
  unint64_t v35 = 0;
  long long v36 = xmmword_241DB3180;
  char v37 = 0;
  sub_241DAA120();
  id v22 = v33;
  v33[3] = v13;
  v22[4] = sub_241D2FCD4(&qword_268D4B738, MEMORY[0x263F44568]);
  id v23 = sub_241D2C600(v22);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v31 + 32))(v23, v15, v13);
}

uint64_t sub_241D2F900(char a1)
{
  switch(a1)
  {
    case 1:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_20;
      }
      break;
    case 2:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_20;
      }
      break;
    case 3:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_20;
      }
      break;
    case 4:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_20;
      }
      break;
    case 5:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_20;
      }
      break;
    case 6:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_20;
      }
      break;
    case 7:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_20;
      }
      break;
    case 8:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_20;
      }
      break;
    default:
      if (qword_268D4B2F0 != -1) {
LABEL_20:
      }
        swift_once();
      break;
  }
  return sub_241DA95E0();
}

uint64_t sub_241D2FCB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_241D2F440(a1, a2, a3);
}

uint64_t sub_241D2FCD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241D2FD1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241D2FD80()
{
  return 1;
}

uint64_t sub_241D2FD88()
{
  return sub_241DAB1D0();
}

uint64_t sub_241D2FDE0()
{
  return sub_241DAAA10();
}

uint64_t sub_241D2FDFC()
{
  return sub_241DAB1D0();
}

uint64_t sub_241D2FE50@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_241DAB110();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_241D2FEA4(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x8000000241DABDE0;
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionDeviceType(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for VisionPrescriptionDeviceType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x241D2FFB8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_241D2FFE0()
{
  return 0;
}

ValueMetadata *type metadata accessor for VisionPrescriptionDeviceType()
{
  return &type metadata for VisionPrescriptionDeviceType;
}

unint64_t sub_241D30000()
{
  unint64_t result = qword_268D4B748;
  if (!qword_268D4B748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4B748);
  }
  return result;
}

uint64_t sub_241D30054()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ViewControllerHolder()
{
  return self;
}

uint64_t type metadata accessor for VisionPrescriptionAllDataViewController()
{
  uint64_t result = qword_268D4B770;
  if (!qword_268D4B770) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D300FC()
{
  return swift_initClassMetadata2();
}

id sub_241D30164(void *a1, void *a2)
{
  swift_getObjectType();
  uint64_t v5 = qword_268D4B760;
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_241D352E0();
  swift_allocObject();
  uint64_t v6 = v2;
  uint64_t v7 = sub_241DAA600();
  *(void *)&v2[v5] = v7;
  *(void *)&v6[qword_268D4B768] = 0;
  *(void *)&v6[qword_268D4B750] = a1;
  *(void *)&v6[qword_268D4B758] = a2;
  type metadata accessor for ViewControllerHolder();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v9 = a2;
  swift_retain();
  id v10 = a1;
  uint64_t v11 = sub_241D303E8(v7, v10, v8);
  uint64_t v13 = v12;
  swift_release();

  sub_241DA9F10();
  sub_241D353DC();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_241DB2C80;
  *(void *)(v14 + 32) = v11;
  *(void *)(v14 + 40) = v13;
  swift_unknownObjectRetain();
  sub_241DA9F40();
  swift_retain();
  uint64_t v15 = (void *)sub_241DAA1D0();
  swift_unknownObjectWeakAssign();
  uint64_t v16 = qword_268D4B2F0;
  id v17 = v15;
  if (v16 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  char v18 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setTitle_, v18, 0xE000000000000000, v20);

  sub_241D32780();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return v17;
}

uint64_t sub_241D303E8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v24 = a3;
  sub_241D35448();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241DA97B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DA97A0();
  uint64_t v14 = sub_241DA9780();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v26 = a1;
  id v17 = (void *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a1;
  uint64_t v18 = v25;
  v17[4] = v24;
  v17[5] = v14;
  v17[6] = v16;
  v17[7] = v18;
  sub_241D352E0();
  sub_241D36E94(0, &qword_268D4B820, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
  sub_241D37828(&qword_268D4B828, (void (*)(uint64_t))sub_241D352E0);
  id v19 = a2;
  swift_retain();
  swift_retain();
  sub_241DAA750();
  swift_release();
  sub_241D37828(&qword_268D4B830, (void (*)(uint64_t))sub_241D35448);
  sub_241DAA700();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_241DAA050();
  uint64_t v20 = MEMORY[0x263F44428];
  sub_241DA9B40();
  swift_release();
  sub_241D36C80(0, &qword_268D4B838, MEMORY[0x263F44430], v20, MEMORY[0x263F43CD0]);
  sub_241D35584();
  uint64_t v21 = sub_241DA9B70();
  swift_release();
  sub_241D37828(&qword_268D4B848, (void (*)(uint64_t))sub_241D35614);
  return v21;
}

void sub_241D307A0(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = qword_268D4B760;
  sub_241D352E0();
  swift_allocObject();
  id v6 = a3;
  *(void *)&a1[v5] = sub_241DAA600();
  *(void *)&a1[qword_268D4B768] = 0;

  sub_241DAB080();
  __break(1u);
}

uint64_t sub_241D30860@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  v21[1] = a5;
  uint64_t v23 = a7;
  uint64_t v22 = sub_241DA9C00();
  uint64_t v12 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = *a1;
  id v16 = a2;
  swift_retain();
  swift_retain();
  uint64_t v17 = sub_241D31EE4(v15, v16, a3, a4, a6);
  sub_241D31F50(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_241DA9BF0();
  sub_241D36E94(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_241DB2C80;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v18, v14, v22);
  uint64_t *v23 = v19;
  return result;
}

uint64_t sub_241D30A48@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v149 = a4;
  uint64_t v147 = a2;
  uint64_t v151 = a5;
  uint64_t v145 = sub_241DAA1C0();
  uint64_t v144 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  uint64_t v146 = (char *)v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_241DA9CB0();
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  uint64_t v143 = (char *)v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_241DAA350();
  uint64_t v139 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388](v140);
  uint64_t v138 = (char *)v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241D36E94(0, (unint64_t *)&unk_268D4C340, MEMORY[0x263F81DF8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  os_log_type_t v137 = (char *)v121 - v12;
  uint64_t v132 = sub_241DAA300();
  uint64_t v131 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v130 = (char *)v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_241DAA310();
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v133 = (char *)v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_241DA97B0();
  uint64_t v128 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  v125 = (char *)v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D36E94(0, &qword_268D4B698, MEMORY[0x263F81EE0], v10);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v136 = (uint64_t)v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v121 - v19;
  v127 = (void *)sub_241DA9770();
  uint64_t v126 = *(v127 - 1);
  MEMORY[0x270FA5388](v127);
  uint64_t v22 = (char *)v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241DAA460();
  uint64_t v157 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v26 = (unint64_t)objc_msgSend(a1, sel_leftSphere);
  unint64_t v27 = (unint64_t)objc_msgSend(a1, sel_rightSphere);
  uint64_t v156 = v25;
  sub_241DAA450();
  id v28 = (id)HKVisionPrescriptionTypeDetailedLongLocalizedString();
  uint64_t v29 = sub_241DAA990();
  uint64_t v31 = v30;

  id v154 = (id)v26;
  id v155 = (id)v27;
  uint64_t v150 = a3;
  uint64_t v152 = v23;
  int v153 = v20;
  id v158 = a1;
  if (!(v26 | v27))
  {
    id v32 = (id)HKVisionPrescriptionImageOnlyLocalizedString();
    uint64_t v33 = sub_241DAA990();
    uint64_t v35 = v34;

    sub_241D36188(v29, v31, v33, v35);
    char v37 = v156;
    uint64_t v36 = v157;
    uint64_t v38 = v20;
    uint64_t v39 = v125;
    goto LABEL_24;
  }
  v124 = (void (*)(char *, uint64_t, uint64_t))v29;
  uint64_t v123 = v31;
  id v40 = objc_msgSend(a1, sel_metadata);
  uint64_t v41 = MEMORY[0x263F8EE58];
  if (!v40)
  {
    long long aBlock = 0u;
    long long v161 = 0u;
LABEL_15:
    sub_241D366BC((uint64_t)&aBlock, (uint64_t)&qword_268D4C350, v41 + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241D36DF8);
    goto LABEL_16;
  }
  id v42 = v40;
  uint64_t v43 = sub_241DAA920();

  uint64_t v44 = sub_241DAA990();
  if (*(void *)(v43 + 16) && (unint64_t v46 = sub_241DA3428(v44, v45), (v47 & 1) != 0))
  {
    sub_241D2DA4C(*(void *)(v43 + 56) + 32 * v46, (uint64_t)&aBlock);
  }
  else
  {
    long long aBlock = 0u;
    long long v161 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v161 + 1)) {
    goto LABEL_15;
  }
  uint64_t v48 = sub_241D28BF4(0, (unint64_t *)&qword_268D4B618);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    uint64_t v36 = v157;
    id v55 = v155;
    uint64_t v38 = v20;
    uint64_t v39 = v125;
LABEL_17:
    id v59 = v154;
    if (v154)
    {
      id v60 = objc_msgSend(self, sel_diopterUnit);
      objc_msgSend(v59, sel_doubleValueForUnit_, v60);
      double v62 = v61;

      id v59 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v62);
    }
    if (v55)
    {
      id v63 = objc_msgSend(self, sel_diopterUnit);
      objc_msgSend(v55, sel_doubleValueForUnit_, v63);
      double v65 = v64;

      id v66 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v65);
    }
    else
    {
      id v66 = 0;
    }
    id v49 = (id)HKVisionLeftRightShortLocalizedString();
    uint64_t v67 = sub_241DAA990();
    uint64_t v69 = v68;

    uint64_t v57 = (uint64_t)v124;
    goto LABEL_23;
  }
  id v49 = v159;
  id v50 = objc_msgSend(v158, sel_metadata);
  uint64_t v36 = v157;
  uint64_t v38 = v20;
  if (!v50)
  {
    long long aBlock = 0u;
    long long v161 = 0u;
    id v55 = v155;
    uint64_t v39 = v125;
LABEL_35:

    sub_241D366BC((uint64_t)&aBlock, (uint64_t)&qword_268D4C350, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241D36DF8);
    goto LABEL_17;
  }
  id v51 = v50;
  uint64_t v122 = v48;
  uint64_t v52 = sub_241DAA920();

  uint64_t v53 = sub_241DAA990();
  id v55 = v155;
  uint64_t v39 = v125;
  if (*(void *)(v52 + 16))
  {
    unint64_t v56 = sub_241DA3428(v53, v54);
    uint64_t v57 = (uint64_t)v124;
    if (v58)
    {
      sub_241D2DA4C(*(void *)(v52 + 56) + 32 * v56, (uint64_t)&aBlock);
    }
    else
    {
      long long aBlock = 0u;
      long long v161 = 0u;
    }
  }
  else
  {
    long long aBlock = 0u;
    long long v161 = 0u;
    uint64_t v57 = (uint64_t)v124;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v161 + 1)) {
    goto LABEL_35;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_17;
  }
  id v66 = v159;
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t v122 = sub_241DA95E0();
  v121[1] = v109;
  sub_241D359C4(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v110 = swift_allocObject();
  *(_OWORD *)(v110 + 16) = xmmword_241DB2C60;
  id v111 = self;
  id v112 = objc_msgSend(v111, sel_diopterUnit);
  objc_msgSend(v49, sel_doubleValueForUnit_, v112);
  uint64_t v114 = v113;

  uint64_t v115 = MEMORY[0x263F8D538];
  uint64_t v116 = MEMORY[0x263F8D5B8];
  *(void *)(v110 + 56) = MEMORY[0x263F8D538];
  *(void *)(v110 + 64) = v116;
  *(void *)(v110 + 32) = v114;
  id v117 = objc_msgSend(v111, sel_diopterUnit);
  objc_msgSend(v66, sel_doubleValueForUnit_, v117);
  uint64_t v119 = v118;

  *(void *)(v110 + 96) = v115;
  *(void *)(v110 + 104) = v116;
  *(void *)(v110 + 72) = v119;
  uint64_t v67 = sub_241DAA960();
  uint64_t v69 = v120;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v152;
  uint64_t v38 = v153;
  uint64_t v36 = v157;
LABEL_23:

  sub_241D36188(v57, v123, v67, v69);
  char v37 = v156;
LABEL_24:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241DAA440();
  id v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  objc_msgSend(v70, sel_setDateStyle_, 2);
  objc_msgSend(v70, sel_setTimeStyle_, 0);
  id v71 = v158;
  id v72 = objc_msgSend(v158, sel_dateIssued);
  sub_241DA9750();

  uint64_t v73 = (void *)sub_241DA9730();
  (*(void (**)(char *, void *))(v126 + 8))(v22, v127);
  v127 = v70;
  id v74 = objc_msgSend(v70, sel_stringFromDate_, v73);

  sub_241DAA990();
  sub_241DAA3C0();
  uint64_t v75 = sub_241DAA390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v38, 1, 1, v75);
  id v76 = objc_msgSend(v71, sel_UUID);
  sub_241DA9790();

  uint64_t v126 = sub_241DA9780();
  v125 = v77;
  (*(void (**)(char *, uint64_t))(v128 + 8))(v39, v129);
  *((void *)&v161 + 1) = v23;
  id v162 = (void (*)(uint64_t, uint64_t, void (*)(uint64_t), uint64_t))MEMORY[0x263F81F20];
  id v78 = sub_241D2C600((uint64_t *)&aBlock);
  (*(void (**)(uint64_t *, char *, uint64_t))(v36 + 16))(v78, v37, v23);
  sub_241D36E94(0, &qword_268D4B860, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  uint64_t v128 = *(void *)(*(void *)(sub_241DAA370() - 8) + 72);
  uint64_t v129 = swift_allocObject();
  *(_OWORD *)(v129 + 16) = xmmword_241DB2C60;
  uint64_t v79 = *MEMORY[0x263F81DD8];
  uint64_t v80 = v134;
  v124 = *(void (**)(char *, uint64_t, uint64_t))(v134 + 104);
  double v81 = v133;
  uint64_t v82 = v135;
  v124(v133, v79, v135);
  uint64_t v83 = sub_241DAA320();
  double v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56);
  id v85 = v137;
  v84(v137, 1, 1, v83);
  unint64_t v86 = v130;
  sub_241DAA2F0();
  sub_241DAA360();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v86, v132);
  uint64_t v87 = *(void (**)(char *, uint64_t))(v80 + 8);
  v87(v81, v82);
  v124(v81, *MEMORY[0x263F81DE0], v82);
  v84(v85, 1, 1, v83);
  double v88 = v138;
  sub_241DAA340();
  sub_241DAA330();
  (*(void (**)(char *, uint64_t))(v139 + 8))(v88, v140);
  id v89 = v81;
  uint64_t v90 = (uint64_t)v153;
  v87(v89, v82);
  uint64_t v91 = (void *)swift_allocObject();
  id v92 = v158;
  id v93 = v147;
  v91[2] = v158;
  v91[3] = v93;
  uint64_t v94 = v148;
  v91[4] = v148;
  sub_241D36590(v90, v136);
  (*(void (**)(char *, void, uint64_t))(v141 + 104))(v143, *MEMORY[0x263F440E0], v142);
  (*(void (**)(char *, void, uint64_t))(v144 + 104))(v146, *MEMORY[0x263F446D0], v145);
  id v95 = v92;
  id v96 = v93;
  sub_241DA9DF0();
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  v97 = (void *)swift_allocObject();
  uint64_t v98 = v149;
  v97[2] = v95;
  v97[3] = v98;
  v97[4] = v94;
  v97[5] = v96;
  v97[6] = v150;
  id v99 = v95;
  id v100 = v96;
  swift_retain();
  swift_retain();
  uint64_t v101 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  id v162 = sub_241D36674;
  id v163 = v97;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v161 = sub_241D3467C;
  *((void *)&v161 + 1) = &unk_26F5CFD30;
  double v102 = _Block_copy(&aBlock);
  id v103 = objc_msgSend(self, sel_contextualActionWithStyle_title_handler_, 1, v101, v102);

  _Block_release(v102);
  swift_release();
  sub_241D36DF8(0, (unint64_t *)&qword_268D4BC80, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v104 = swift_allocObject();
  *(_OWORD *)(v104 + 16) = xmmword_241DB33B0;
  *(void *)(v104 + 32) = v103;
  *(void *)&long long aBlock = v104;
  sub_241DAAB10();
  sub_241D28BF4(0, &qword_268D4B868);
  id v105 = v103;
  double v106 = (void *)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  id v107 = objc_msgSend(self, sel_configurationWithActions_, v106);

  sub_241DA9DE0();
  sub_241D366BC(v90, (uint64_t)&qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241D36E94);
  return (*(uint64_t (**)(char *, uint64_t))(v157 + 8))(v156, v152);
}

uint64_t sub_241D31EE4(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_241D36314(a1, a2, a3, a4, a5);

  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_241D31F50(uint64_t a1)
{
  uint64_t v2 = sub_241DA9E00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_241D35700(0, v6, 0);
    uint64_t v7 = v22;
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v9 = v10;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v18 = *(void *)(v8 + 56);
    do
    {
      v9(v5, v11, v2);
      uint64_t v22 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1) {
        sub_241D35700(v12 > 1, v13 + 1, 1);
      }
      uint64_t v20 = v2;
      uint64_t v21 = sub_241D37828(&qword_268D4C390, MEMORY[0x263F441F0]);
      uint64_t v14 = sub_241D2C600((uint64_t *)&v19);
      v9((char *)v14, (uint64_t)v5, v2);
      uint64_t v15 = v22;
      *(void *)(v22 + 16) = v13 + 1;
      sub_241D35720(&v19, v15 + 40 * v13 + 32);
      (*(void (**)(char *, uint64_t))(v8 - 8))(v5, v2);
      uint64_t v7 = v22;
      v11 += v18;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_241D3214C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_241DAB0A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t result = sub_241D357C8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x245639BE0](v5, a1);
        unint64_t v8 = *(void *)(v18 + 16);
        unint64_t v7 = *(void *)(v18 + 24);
        if (v8 >= v7 >> 1) {
          sub_241D357C8(v7 > 1, v8 + 1, 1);
        }
        ++v5;
        unint64_t v9 = sub_241D36BF0();
        *(void *)(v18 + 16) = v8 + 1;
        uint64_t v10 = v18 + 16 * v8;
        *(void *)(v10 + 32) = v6;
        *(void *)(v10 + 40) = v9;
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v11 = (uint64_t *)(a1 + 32);
      unint64_t v12 = *(void *)(v18 + 16);
      uint64_t v13 = 16 * v12;
      do
      {
        uint64_t v14 = *v11;
        unint64_t v15 = *(void *)(v18 + 24);
        swift_retain();
        if (v12 >= v15 >> 1) {
          sub_241D357C8(v15 > 1, v12 + 1, 1);
        }
        unint64_t v16 = sub_241D36BF0();
        *(void *)(v18 + 16) = v12 + 1;
        uint64_t v17 = v18 + v13;
        *(void *)(v17 + 32) = v14;
        *(void *)(v17 + 40) = v16;
        v13 += 16;
        ++v11;
        ++v12;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_241D322E0()
{
  return sub_241DAAC60();
}

uint64_t sub_241D32338@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v19 = sub_241DAA1C0();
  uint64_t v2 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v4 = (char *)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241DA9CB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D36E94(0, &qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v20[-1] - v10;
  uint64_t v12 = sub_241DAA460();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA3B0();
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  sub_241DAA440();
  v20[3] = v12;
  v20[4] = MEMORY[0x263F81F20];
  unint64_t v16 = sub_241D2C600(v20);
  (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(v16, v15, v12);
  sub_241DAA380();
  uint64_t v17 = sub_241DAA390();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F440E0], v5);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F446D0], v19);
  a1[3] = sub_241DA9E00();
  a1[4] = sub_241D37828(&qword_268D4C390, MEMORY[0x263F441F0]);
  sub_241D2C600(a1);
  sub_241DA9DF0();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_241D32780()
{
  uint64_t v89 = MEMORY[0x263F8F110];
  uint64_t v88 = MEMORY[0x263F8D8F0];
  sub_241D36E94(0, &qword_268D4B8C8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v87 = (char *)&v62 - v2;
  uint64_t v65 = sub_241DAABD0();
  uint64_t v66 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D36EF8();
  uint64_t v68 = v5;
  uint64_t v69 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v63 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D370D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v71 = v7;
  uint64_t v72 = v8;
  MEMORY[0x270FA5388](v7);
  double v64 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D371B0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v74 = v10;
  uint64_t v75 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v67 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D3725C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v77 = v13;
  uint64_t v78 = v14;
  MEMORY[0x270FA5388](v13);
  id v70 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D37418();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v79 = v16;
  uint64_t v80 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v73 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D37588();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v83 = v19;
  uint64_t v84 = v20;
  MEMORY[0x270FA5388](v19);
  id v76 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D37660();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v85 = v22;
  uint64_t v86 = v23;
  MEMORY[0x270FA5388](v22);
  double v81 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v0;
  uint64_t v25 = v0;
  unint64_t v26 = *(void **)(v0 + qword_268D4B750);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4D370);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v28 = objc_msgSend(ObjCClassFromMetadata, sel_visionPrescriptionType);
  id v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v28, *(void *)(v25 + qword_268D4B758));

  sub_241D36DF8(0, (unint64_t *)&qword_268D4BC80, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_241DB33C0;
  sub_241DAA990();
  id v30 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v31 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(v30, sel_initWithKey_ascending_, v31, 0);

  *(void *)(v29 + 32) = v32;
  sub_241DAA990();
  id v33 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v34 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(v33, sel_initWithKey_ascending_, v34, 0);

  *(void *)(v29 + 40) = v35;
  id v90 = (id)v29;
  sub_241DAAB10();
  id v36 = v90;
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_241DB33B0;
  *(void *)(v37 + 32) = objc_msgSend(ObjCClassFromMetadata, sel_visionPrescriptionType);
  id v90 = (id)v37;
  sub_241DAAB10();
  sub_241DAABF0();
  swift_bridgeObjectRelease();
  sub_241D36FE4();
  sub_241D37828(&qword_268D4C3B0, MEMORY[0x263F44B10]);
  sub_241D37828((unint64_t *)&qword_268D4B8E8, (void (*)(uint64_t))sub_241D36FE4);
  uint64_t v38 = v63;
  uint64_t v39 = v65;
  sub_241DAA770();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v4, v39);
  sub_241DAABC0();
  sub_241D36B4C(0, (unint64_t *)&qword_268D4C3D0);
  sub_241D37828(&qword_268D4B8F8, (void (*)(uint64_t))sub_241D36EF8);
  id v40 = v64;
  uint64_t v41 = v68;
  sub_241DAA6E0();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v41);
  id v42 = (void *)swift_allocObject();
  uint64_t v43 = v62;
  v42[2] = v26;
  v42[3] = v43;
  void v42[4] = v36;
  sub_241DAAB90();
  sub_241D37828(&qword_268D4B908, (void (*)(uint64_t))sub_241D370D0);
  id v44 = v26;
  id v45 = v43;
  unint64_t v46 = v67;
  uint64_t v47 = v71;
  sub_241DAA750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v40, v47);
  sub_241D37828(&qword_268D4B920, (void (*)(uint64_t))sub_241D371B0);
  sub_241D37828(&qword_268D4C410, MEMORY[0x263F44AA8]);
  uint64_t v48 = v70;
  uint64_t v49 = v74;
  sub_241DAA7F0();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v46, v49);
  sub_241D37504();
  sub_241D37828(&qword_268D4B940, (void (*)(uint64_t))sub_241D3725C);
  sub_241D37828(&qword_268D4B948, (void (*)(uint64_t))sub_241D37504);
  id v50 = v73;
  uint64_t v51 = v77;
  sub_241DAA770();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v48, v51);
  sub_241D35374(0, &qword_268D4B808, (unint64_t *)&qword_268D4C210, 0x263F0A8E0, MEMORY[0x263F8D488]);
  sub_241D37828(&qword_268D4B958, (void (*)(uint64_t))sub_241D37418);
  uint64_t v52 = v76;
  uint64_t v53 = v79;
  sub_241DAA750();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v50, v53);
  sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
  id v90 = (id)sub_241DAAD00();
  uint64_t v54 = sub_241DAACE0();
  uint64_t v55 = (uint64_t)v87;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v87, 1, 1, v54);
  sub_241D37828(&qword_268D4B968, (void (*)(uint64_t))sub_241D37588);
  sub_241D3772C();
  unint64_t v56 = v81;
  uint64_t v57 = v83;
  sub_241DAA7B0();
  sub_241D366BC(v55, (uint64_t)&qword_268D4B8C8, v89, v88, (uint64_t (*)(void))sub_241D36E94);

  (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v57);
  swift_allocObject();
  uint64_t v58 = v82;
  swift_unknownObjectWeakInit();
  sub_241D37828(&qword_268D4B978, (void (*)(uint64_t))sub_241D37660);
  uint64_t v59 = v85;
  uint64_t v60 = sub_241DAA810();
  swift_release();
  *(void *)(v58 + qword_268D4B768) = v60;

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v56, v59);
}

uint64_t sub_241D334A4()
{
  sub_241D3704C();

  return sub_241DAA630();
}

uint64_t sub_241D334F8(uint64_t a1, uint64_t a2, void *a3)
{
  sub_241D36DF8(0, (unint64_t *)&qword_268D4BC80, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_241DB33B0;
  *(void *)(v4 + 32) = a3;
  sub_241DAAB10();
  id v5 = a3;
  sub_241DAABA0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241D335E8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_241DAA2E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_241DAA280();
  id v9 = v8;
  id v10 = v8;
  uint64_t v11 = sub_241DAA2D0();
  os_log_type_t v12 = sub_241DAAC10();
  if (os_log_type_enabled(v11, v12))
  {
    v20[1] = a2;
    uint64_t v13 = swift_slowAlloc();
    v20[0] = v4;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v21 = (uint64_t)v8;
    uint64_t v22 = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    id v16 = v8;
    sub_241D36B4C(0, (unint64_t *)&qword_268D4C3D0);
    uint64_t v17 = sub_241DAA9B0();
    uint64_t v21 = sub_241D48854(v17, v18, &v22);
    sub_241DAAF10();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241D1C000, v11, v12, "Error fetching vision prescription samples: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v15, -1, -1);
    MEMORY[0x24563A5D0](v14, -1, -1);

    (*(void (**)(char *, void))(v5 + 8))(v7, v20[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_241D35374(0, (unint64_t *)&unk_268D4C430, (unint64_t *)&unk_268D4D380, 0x263F0A6B8, MEMORY[0x263F8D488]);
  return sub_241DAA620();
}

uint64_t sub_241D3388C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v9;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_241DAB0A0();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_3:
  if (v4 >= 1)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        MEMORY[0x245639BE0](i, v3);
        self;
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x2456396D0]();
          if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_241DAAB20();
          }
          sub_241DAAB30();
          sub_241DAAB10();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      for (uint64_t j = 0; j != v4; ++j)
      {
        uint64_t v8 = *(void **)(v3 + 8 * j + 32);
        self;
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x2456396D0](v8);
          if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_241DAAB20();
          }
          sub_241DAAB30();
          sub_241DAAB10();
        }
      }
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_241D33A70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x24563A650](v2);
  if (result)
  {
    uint64_t v4 = (void *)result;
    swift_retain();

    swift_bridgeObjectRetain();
    sub_241DAA5E0();
    return swift_release();
  }
  return result;
}

void sub_241D33B00(void *a1, void *a2, void *a3)
{
  sub_241D36E94(0, &qword_268D4B880, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v23 - v7;
  id v9 = a3;
  id v10 = a2;
  id v11 = objc_msgSend(v10, sel__source);
  os_log_type_t v12 = v11;
  if (v11)
  {
    id v13 = objc_msgSend(v11, sel_bundleIdentifier);

    os_log_type_t v12 = (void *)sub_241DAA990();
    uint64_t v15 = v14;

    v23[2] = v12;
    void v23[3] = v15;
    v23[0] = sub_241DAA990();
    v23[1] = v16;
    uint64_t v17 = sub_241DA97E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
    sub_241D36B9C();
    sub_241DAAF40();
    LODWORD(v12) = (v18 & 1) == 0;
    sub_241D366BC((uint64_t)v8, (uint64_t)&qword_268D4B880, MEMORY[0x263F07690], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241D36E94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  id v19 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionDetailsViewController());
  uint64_t v20 = (void *)VisionPrescriptionDetailsViewController.init(healthStore:visionPrescription:canEdit:)(v9, v10, (int)v12);
  id v21 = objc_msgSend(a1, sel_navigationController);
  if (v21)
  {
    uint64_t v22 = v21;
    objc_msgSend(v21, sel_pushViewController_animated_, v20, 1);
  }
}

void sub_241D33D74(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v52 = a7;
  uint64_t v53 = a8;
  uint64_t v13 = a9;
  uint64_t v14 = sub_241DAA2E0();
  uint64_t v15 = *(void **)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = objc_msgSend(a5, sel_metadata);
  uint64_t v19 = MEMORY[0x263F8EE58];
  if (!v18)
  {
    long long aBlock = 0u;
    long long v55 = 0u;
    goto LABEL_12;
  }
  uint64_t v20 = v18;
  id v50 = v15;
  uint64_t v51 = a9;
  uint64_t v21 = sub_241DAA920();

  uint64_t v22 = sub_241DAA990();
  if (!*(void *)(v21 + 16) || (unint64_t v24 = sub_241DA3428(v22, v23), (v25 & 1) == 0))
  {
    long long aBlock = 0u;
    long long v55 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v51;
    goto LABEL_12;
  }
  sub_241D2DA4C(*(void *)(v21 + 56) + 32 * v24, (uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v51;
  if (!*((void *)&v55 + 1))
  {
LABEL_12:
    sub_241D366BC((uint64_t)&aBlock, (uint64_t)&qword_268D4C350, v19 + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241D36DF8);
    goto LABEL_13;
  }
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B610);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_241D34528(v53, a5, v13, a3);
    return;
  }

  unint64_t v26 = (void *)MEMORY[0x24563A650](a6 + 16);
  if (v26)
  {
    id v50 = v26;
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
    sub_241DA95E0();
    unint64_t v27 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    id v28 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    id v29 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v27, v28, 1);
    id v48 = v29;

    sub_241DA95E0();
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = a3;
    *(void *)(v30 + 24) = a4;
    swift_retain();
    uint64_t v31 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    unint64_t v56 = sub_241D367A4;
    uint64_t v57 = (void *)v30;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v55 = sub_241D344C0;
    *((void *)&v55 + 1) = &unk_26F5CFDA8;
    id v32 = _Block_copy(&aBlock);
    swift_release();
    id v33 = self;
    id v34 = objc_msgSend(v33, sel_actionWithTitle_style_handler_, v31, 0, v32);
    id v49 = v34;
    _Block_release(v32);

    objc_msgSend(v29, sel_addAction_, v34);
    sub_241DA95E0();
    id v35 = (void *)swift_allocObject();
    id v36 = v53;
    v35[2] = v52;
    v35[3] = v36;
    uint64_t v37 = v51;
    v35[4] = a5;
    v35[5] = v37;
    v35[6] = a3;
    v35[7] = a4;
    swift_retain();
    id v38 = v36;
    id v39 = a5;
    swift_retain();
    id v40 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    unint64_t v56 = sub_241D36820;
    uint64_t v57 = v35;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v55 = sub_241D344C0;
    *((void *)&v55 + 1) = &unk_26F5CFDF8;
    uint64_t v41 = _Block_copy(&aBlock);
    swift_release();
    id v42 = objc_msgSend(v33, sel_actionWithTitle_style_handler_, v40, 2, v41);
    _Block_release(v41);

    id v43 = v48;
    objc_msgSend(v48, sel_addAction_, v42);
    id v44 = v50;
    objc_msgSend(v50, sel_presentViewController_animated_completion_, v43, 1, 0);
  }
  else
  {
    sub_241DAA280();
    id v45 = sub_241DAA2D0();
    os_log_type_t v46 = sub_241DAAC10();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v47 = 0;
      _os_log_impl(&dword_241D1C000, v45, v46, "Can't show delete confirmation alert; View Controller is gone", v47, 2u);
      MEMORY[0x24563A5D0](v47, -1, -1);
    }

    (*((void (**)(char *, uint64_t))v50 + 1))(v17, v14);
  }
}

void sub_241D344C0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_241D34528(void *a1, void *a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_241DAA5D0();
  id v8 = a2;
  sub_241D36850(aBlock[0], v8);
  swift_bridgeObjectRelease();

  sub_241DAA5E0();
  a4(1);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v4;
  aBlock[4] = (unint64_t)sub_241D36B44;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (unint64_t)sub_241D37888;
  aBlock[3] = (unint64_t)&unk_26F5CFE48;
  id v10 = _Block_copy(aBlock);
  id v11 = v8;
  swift_release();
  objc_msgSend(a1, sel_deleteObject_withCompletion_, v11, v10);
  _Block_release(v10);
}

void sub_241D3467C(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a3;
  v6(v10, v9, sub_241D36754, v8);
  swift_release();
  swift_release();
}

uint64_t sub_241D34750(int a1, void *a2, void *a3)
{
  int v39 = a1;
  uint64_t v5 = sub_241DA97B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241DAA2E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA2B0();
  id v13 = a3;
  id v14 = a2;
  id v15 = v13;
  id v16 = a2;
  uint64_t v17 = sub_241DAA2D0();
  os_log_type_t v18 = sub_241DAAC30();
  int v38 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v37 = v9;
    uint64_t v20 = v19;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v41 = v35;
    *(_DWORD *)uint64_t v20 = 136446978;
    os_log_t v34 = v17;
    uint64_t v21 = sub_241DAB1F0();
    uint64_t v36 = v10;
    uint64_t v40 = sub_241D48854(v21, v22, &v41);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    id v23 = objc_msgSend(v15, sel_UUID, v20 + 14);
    sub_241DA9790();

    sub_241D37828(&qword_268D4B870, MEMORY[0x263F07508]);
    uint64_t v24 = sub_241DAB120();
    unint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v40 = sub_241D48854(v24, v26, &v41);
    sub_241DAAF10();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 1024;
    LODWORD(v40) = v39 & 1;
    sub_241DAAF10();
    *(_WORD *)(v20 + 28) = 2082;
    uint64_t v40 = (uint64_t)a2;
    id v27 = a2;
    sub_241D359C4(0, (unint64_t *)&unk_268D4BC60, (unint64_t *)&qword_268D4C3D0, MEMORY[0x263F8E4D8], MEMORY[0x263F8D8F0]);
    uint64_t v28 = sub_241DAA9B0();
    uint64_t v40 = sub_241D48854(v28, v29, &v41);
    sub_241DAAF10();
    swift_bridgeObjectRelease();

    os_log_t v30 = v34;
    _os_log_impl(&dword_241D1C000, v34, (os_log_type_t)v38, "[%{public}s] Delete vision prescription %s success: %{BOOL}d, error: %{public}s", (uint8_t *)v20, 0x26u);
    uint64_t v31 = v35;
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v31, -1, -1);
    MEMORY[0x24563A5D0](v20, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v12, v37);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void sub_241D34BB0(void *a1)
{
  v4.receiver = a1;
  v4.super_class = (Class)type metadata accessor for VisionPrescriptionAllDataViewController();
  id v1 = v4.receiver;
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  id v2 = objc_msgSend(v1, sel_navigationItem, v4.receiver, v4.super_class);
  id v3 = objc_msgSend(v1, sel_editButtonItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, v3);
}

uint64_t sub_241D34C60(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_241DAAF50();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return sub_241D36E44((uint64_t)&v4);
}

void sub_241D34CD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for VisionPrescriptionAllDataViewController();
  id v6 = v9.receiver;
  objc_msgSendSuper2(&v9, sel_setEditing_animated_, a3, a4);
  id v7 = objc_msgSend(v6, sel_navigationItem, v9.receiver, v9.super_class);
  id v8 = objc_msgSend(v7, sel_leftBarButtonItem);

  objc_msgSend(v8, sel_setHidden_, a3);
}

void sub_241D34D90()
{
}

void sub_241D34DC0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_241D34DF4()
{
  swift_release();

  return swift_release();
}

id sub_241D34E54()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionAllDataViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241D34E8C(uint64_t a1)
{
  swift_release();

  return swift_release();
}

uint64_t sub_241D34EF8()
{
  return type metadata accessor for VisionPrescriptionAllDataViewController();
}

uint64_t sub_241D34F00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43BD0];
  uint64_t v3 = sub_241DA9A20();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

void sub_241D34F74(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_navigationItem);
  if (objc_msgSend(v1, sel_isEditing)) {
    id v3 = 0;
  }
  else {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_didTapDone_);
  }
  id v4 = v3;
  objc_msgSend(v2, sel_setLeftBarButtonItem_);
}

void sub_241D3503C(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setLeftBarButtonItem_, 0);
}

uint64_t sub_241D350A8@<X0>(uint64_t a1@<X8>)
{
  id v3 = *v1;
  sub_241D35244();
  uint64_t v5 = *(int *)(v4 + 48);
  sub_241DA9CE0();
  *(void *)(a1 + v5) = objc_msgSend(v3, sel_collectionView);
  uint64_t v6 = *MEMORY[0x263F44110];
  uint64_t v7 = sub_241DA9CC0();
  uint64_t v10 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a1, v6, v7);
  id v8 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56);

  return v8(a1, 0, 1, v7);
}

uint64_t sub_241D351A0()
{
  return sub_241DAA150();
}

uint64_t sub_241D351FC()
{
  return sub_241D37828(&qword_268D4B7E0, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionAllDataViewController);
}

void sub_241D35244()
{
  if (!qword_268D4B7E8)
  {
    sub_241DA9D50();
    sub_241D35374(255, &qword_268D4B7F0, &qword_268D4B7F8, 0x263F82528, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D4B7E8);
    }
  }
}

void sub_241D352E0()
{
  if (!qword_268D4B800)
  {
    sub_241D35374(255, &qword_268D4B808, (unint64_t *)&qword_268D4C210, 0x263F0A8E0, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241DAA5F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B800);
    }
  }
}

void sub_241D35374(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241D28BF4(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241D353DC()
{
  if (!qword_268D4B810)
  {
    sub_241D36B4C(255, (unint64_t *)&qword_268D4C280);
    unint64_t v0 = sub_241DAB130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B810);
    }
  }
}

void sub_241D35448()
{
  if (!qword_268D4B818)
  {
    sub_241D352E0();
    sub_241D36E94(255, &qword_268D4B820, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
    sub_241D37828(&qword_268D4B828, (void (*)(uint64_t))sub_241D352E0);
    unint64_t v0 = sub_241DAA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B818);
    }
  }
}

uint64_t sub_241D35524()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_241D35574@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241D30860(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 56), a2);
}

unint64_t sub_241D35584()
{
  unint64_t result = qword_268D4B840;
  if (!qword_268D4B840)
  {
    sub_241D36C80(255, &qword_268D4B838, MEMORY[0x263F44430], MEMORY[0x263F44428], MEMORY[0x263F43CD0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4B840);
  }
  return result;
}

void sub_241D35614()
{
  if (!qword_268D4B850)
  {
    sub_241D36C80(255, &qword_268D4B838, MEMORY[0x263F44430], MEMORY[0x263F44428], MEMORY[0x263F43CD0]);
    sub_241D35584();
    unint64_t v0 = sub_241DA9A70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B850);
    }
  }
}

uint64_t sub_241D356B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241D35A30(a1, a2, a3, (void *)*v3, &qword_268D4B8C0, MEMORY[0x263F43F98], MEMORY[0x263F43F98]);
  *id v3 = result;
  return result;
}

uint64_t sub_241D35700(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241D357E8(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_241D35720(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_241D35738(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241D35A30(a1, a2, a3, (void *)*v3, &qword_268D4B858, MEMORY[0x263F441F0], MEMORY[0x263F441F0]);
  *long long v3 = result;
  return result;
}

uint64_t sub_241D35788(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241D35C94(a1, a2, a3, (void *)*v3);
  *long long v3 = result;
  return result;
}

uint64_t sub_241D357A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241D35E48(a1, a2, a3, (void *)*v3);
  *long long v3 = result;
  return result;
}

uint64_t sub_241D357C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241D35FF0(a1, a2, a3, (void *)*v3);
  *long long v3 = result;
  return result;
}

uint64_t sub_241D357E8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241D359C4(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_241D36B4C(0, (unint64_t *)&qword_268D4B668);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

void sub_241D359C4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241D36B4C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241D35A30(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_241D36E94(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  size_t v18 = j__malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v22 = (char *)v17 + v21;
  id v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  unint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

uint64_t sub_241D35C94(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241D36E94(0, &qword_268D4B8A0, (uint64_t (*)(uint64_t))sub_241D36CEC, MEMORY[0x263F8E0F8]);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_241D36CEC();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

uint64_t sub_241D35E48(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241D36D7C();
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_241D36DF8(0, &qword_268D4B8B8, (uint64_t)&type metadata for VisionPrescriptionManualDataEntryMeasurementField, MEMORY[0x263F8D488]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

uint64_t sub_241D35FF0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241D353DC();
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_241D36B4C(0, (unint64_t *)&qword_268D4C280);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

uint64_t sub_241D36188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  sub_241D359C4(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_241DB2C60;
  uint64_t v9 = MEMORY[0x263F8D310];
  *(void *)(v8 + 56) = MEMORY[0x263F8D310];
  unint64_t v10 = sub_241D2B59C();
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 72) = a3;
  *(void *)(v8 + 80) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_241DAA960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_241D36314(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a5;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v20 = a2;
  uint64_t v19 = sub_241DA9E00();
  uint64_t v6 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    if (!v9) {
      return v10;
    }
    uint64_t v25 = MEMORY[0x263F8EE78];
    uint64_t result = sub_241D35738(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    uint64_t v12 = 0;
    uint64_t v10 = v25;
    uint64_t v17 = v6 + 32;
    unint64_t v18 = a1 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v18) {
        id v13 = (id)MEMORY[0x245639BE0](v12, a1);
      }
      else {
        id v13 = *(id *)(a1 + 8 * v12 + 32);
      }
      unint64_t v14 = v13;
      sub_241D30A48(v13, v20, v21, v22, (uint64_t)v8);
      if (v24)
      {
        swift_release();

        uint64_t v24 = 1;
        return v10;
      }

      uint64_t v25 = v10;
      unint64_t v16 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_241D35738(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v25;
      }
      ++v12;
      *(void *)(v10 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, v8, v19);
      if (v9 == v12) {
        return v10;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_241DAB0A0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_241D36544()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241D36584(void *a1)
{
  sub_241D33B00(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_241D36590(uint64_t a1, uint64_t a2)
{
  sub_241D36E94(0, &qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241D36624()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_241D36674(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  sub_241D33D74(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void **)(v4 + 40), *(void *)(v4 + 48));
}

uint64_t sub_241D366A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241D366B4()
{
  return swift_release();
}

uint64_t sub_241D366BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_241D3671C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D36754(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_241D3676C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241D367A4()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_241D367D0()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_241D36820()
{
  sub_241D34528(*(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void (**)(uint64_t))(v0 + 48));
}

uint64_t sub_241D36850(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v28 = a2;
  uint64_t v5 = sub_241DA97B0();
  uint64_t v6 = *(void (***)(char *, uint64_t))(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v27 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v26 = (char *)&v21 - v9;
  uint64_t v29 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v10)
  {
    while (1)
    {
      uint64_t v21 = v3;
      uint64_t v22 = v10;
      unint64_t v11 = 0;
      uint64_t v24 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v25 = a1 & 0xC000000000000001;
      uint64_t v12 = v6 + 1;
      unint64_t v23 = a1;
      id v13 = v27;
      while (v25)
      {
        unint64_t v14 = (char *)MEMORY[0x245639BE0](v11, a1);
LABEL_9:
        uint64_t v6 = (void (**)(char *, uint64_t))v14;
        unint64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          goto LABEL_15;
        }
        id v16 = objc_msgSend(v14, sel_UUID);
        uint64_t v17 = v26;
        sub_241DA9790();

        id v18 = objc_msgSend(v28, sel_UUID);
        sub_241DA9790();

        sub_241D37828(&qword_268D4B878, MEMORY[0x263F07508]);
        uint64_t v3 = sub_241DAA940();
        uint64_t v19 = *v12;
        (*v12)(v13, v5);
        v19(v17, v5);
        if (v3)
        {
        }
        else
        {
          uint64_t v3 = (uint64_t)&v29;
          sub_241DAB020();
          sub_241DAB050();
          sub_241DAB060();
          sub_241DAB030();
        }
        a1 = v23;
        ++v11;
        if (v15 == v22) {
          return v29;
        }
      }
      if (v11 < *(void *)(v24 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v10 = sub_241DAB0A0();
      if (!v10) {
        return MEMORY[0x263F8EE78];
      }
    }
    unint64_t v14 = (char *)*(id *)(a1 + 8 * v11 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_241D36B0C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241D36B44(int a1, void *a2)
{
  return sub_241D34750(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_241D36B4C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_241D36B9C()
{
  unint64_t result = qword_268D4B888;
  if (!qword_268D4B888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4B888);
  }
  return result;
}

unint64_t sub_241D36BF0()
{
  unint64_t result = qword_268D4B890;
  if (!qword_268D4B890)
  {
    sub_241D36C80(255, &qword_268D4B898, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource, MEMORY[0x263F440A0], MEMORY[0x263F43E58]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4B890);
  }
  return result;
}

void sub_241D36C80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_241D36CEC()
{
  if (!qword_268D4B8A8)
  {
    sub_241D36C80(255, &qword_268D4B898, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource, MEMORY[0x263F440A0], MEMORY[0x263F43E58]);
    unint64_t v0 = sub_241DAAB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B8A8);
    }
  }
}

void sub_241D36D7C()
{
  if (!qword_268D4B8B0)
  {
    sub_241D36DF8(255, &qword_268D4B8B8, (uint64_t)&type metadata for VisionPrescriptionManualDataEntryMeasurementField, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241DAB130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B8B0);
    }
  }
}

void sub_241D36DF8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241D36E44(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void sub_241D36E94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241D36EF8()
{
  if (!qword_268D4B8D0)
  {
    sub_241DAABD0();
    sub_241D36FE4();
    sub_241D37828(&qword_268D4C3B0, MEMORY[0x263F44B10]);
    sub_241D37828((unint64_t *)&qword_268D4B8E8, (void (*)(uint64_t))sub_241D36FE4);
    unint64_t v0 = sub_241DAA530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B8D0);
    }
  }
}

void sub_241D36FE4()
{
  if (!qword_268D4B8D8)
  {
    sub_241D3704C();
    unint64_t v0 = sub_241DAA640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B8D8);
    }
  }
}

void sub_241D3704C()
{
  if (!qword_268D4B8E0)
  {
    sub_241DAABC0();
    sub_241D36B4C(255, (unint64_t *)&qword_268D4C3D0);
    unint64_t v0 = sub_241DAB1E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B8E0);
    }
  }
}

void sub_241D370D0()
{
  if (!qword_268D4B8F0)
  {
    sub_241D36EF8();
    sub_241DAABC0();
    sub_241D36B4C(255, (unint64_t *)&qword_268D4C3D0);
    sub_241D37828(&qword_268D4B8F8, (void (*)(uint64_t))sub_241D36EF8);
    unint64_t v0 = sub_241DAA4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B8F0);
    }
  }
}

void sub_241D371B0()
{
  if (!qword_268D4B900)
  {
    sub_241D370D0();
    sub_241DAAB90();
    sub_241D37828(&qword_268D4B908, (void (*)(uint64_t))sub_241D370D0);
    unint64_t v0 = sub_241DAA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B900);
    }
  }
}

void sub_241D3725C()
{
  if (!qword_268D4B910)
  {
    sub_241DAAB90();
    sub_241D37348();
    sub_241D37828(&qword_268D4C410, MEMORY[0x263F44AA8]);
    sub_241D37828(&qword_268D4B928, (void (*)(uint64_t))sub_241D37348);
    unint64_t v0 = sub_241DAA4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B910);
    }
  }
}

void sub_241D37348()
{
  if (!qword_268D4B918)
  {
    sub_241D371B0();
    sub_241D36B4C(255, (unint64_t *)&qword_268D4C3D0);
    sub_241D37828(&qword_268D4B920, (void (*)(uint64_t))sub_241D371B0);
    unint64_t v0 = sub_241DAA4D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B918);
    }
  }
}

void sub_241D37418()
{
  if (!qword_268D4B930)
  {
    sub_241D3725C();
    sub_241D37504();
    sub_241D37828(&qword_268D4B940, (void (*)(uint64_t))sub_241D3725C);
    sub_241D37828(&qword_268D4B948, (void (*)(uint64_t))sub_241D37504);
    unint64_t v0 = sub_241DAA530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B930);
    }
  }
}

void sub_241D37504()
{
  if (!qword_268D4B938)
  {
    sub_241D35374(255, (unint64_t *)&unk_268D4C430, (unint64_t *)&unk_268D4D380, 0x263F0A6B8, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241DAA610();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B938);
    }
  }
}

void sub_241D37588()
{
  if (!qword_268D4B950)
  {
    sub_241D37418();
    sub_241D35374(255, &qword_268D4B808, (unint64_t *)&qword_268D4C210, 0x263F0A8E0, MEMORY[0x263F8D488]);
    sub_241D37828(&qword_268D4B958, (void (*)(uint64_t))sub_241D37418);
    unint64_t v0 = sub_241DAA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B950);
    }
  }
}

void sub_241D37660()
{
  if (!qword_268D4B960)
  {
    sub_241D37588();
    sub_241D28BF4(255, (unint64_t *)&qword_268D4BC40);
    sub_241D37828(&qword_268D4B968, (void (*)(uint64_t))sub_241D37588);
    sub_241D3772C();
    unint64_t v0 = sub_241DAA580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B960);
    }
  }
}

unint64_t sub_241D3772C()
{
  unint64_t result = qword_268D4B970;
  if (!qword_268D4B970)
  {
    sub_241D28BF4(255, (unint64_t *)&qword_268D4BC40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4B970);
  }
  return result;
}

uint64_t sub_241D37794()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241D377DC(uint64_t a1)
{
  return sub_241D334F8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_241D377E8()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D37820(uint64_t a1)
{
  return sub_241D33A70(a1, v1);
}

uint64_t sub_241D37828(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241D37888(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_241D37940(void *a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v62 = sub_241DAA2E0();
  uint64_t v4 = *(void *)(v62 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v62);
  uint64_t v7 = &v56[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v56[-v8];
  sub_241D3A528(0, (unint64_t *)&qword_268D4CBE0, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v56[-v11];
  uint64_t v13 = sub_241DA96C0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v56[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = &v56[-v19];
  MEMORY[0x270FA5388](v18);
  double v61 = &v56[-v21];
  id v22 = objc_msgSend(a1, sel_webpageURL);
  if (v22)
  {
    unint64_t v23 = v22;
    uint64_t v59 = a2;
    sub_241DA9690();

    uint64_t v24 = *(void (**)(void))(v14 + 32);
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v24)(v12, v20, v13);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      uint64_t v25 = (uint64_t)v61;
      v24();
      type metadata accessor for VisionPrescriptionURLDecoder();
      id v26 = sub_241D21E28(v25);
      if (v26)
      {
        id v27 = v26;
        id v28 = (void *)sub_241DA9E50();
        sub_241DA9E60();
        id v29 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionAddRecordConfirmationViewController());
        id v30 = sub_241DA5154(v27, v28, (uint64_t)v63);

        id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v30);
        objc_msgSend(v31, sel_setModalPresentationStyle_, 2);
        id v32 = (void *)sub_241DA9E70();
        objc_msgSend(v32, sel_presentViewController_animated_completion_, v31, 1, 0);

        return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v25, v13);
      }
      else
      {
        sub_241DAA2A0();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v17, v25, v13);
        uint64_t v40 = sub_241DAA2D0();
        os_log_type_t v41 = sub_241DAAC10();
        int v42 = v41;
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v43 = swift_slowAlloc();
          uint64_t v58 = swift_slowAlloc();
          v63[0] = v58;
          *(_DWORD *)uint64_t v43 = 136315394;
          int v57 = v42;
          uint64_t v44 = sub_241DAB1F0();
          uint64_t v64 = sub_241D48854(v44, v45, v63);
          sub_241DAAF10();
          swift_bridgeObjectRelease();
          *(_WORD *)(v43 + 12) = 2080;
          sub_241D3A7E4((unint64_t *)&qword_268D4CBF0, 255, MEMORY[0x263F06EA8]);
          uint64_t v46 = sub_241DAB120();
          uint64_t v64 = sub_241D48854(v46, v47, v63);
          sub_241DAAF10();
          swift_bridgeObjectRelease();
          id v48 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
          v48(v17, v13);
          _os_log_impl(&dword_241D1C000, v40, (os_log_type_t)v57, "[%s] Invalid VRX ingestion URL: %s", (uint8_t *)v43, 0x16u);
          uint64_t v49 = v58;
          swift_arrayDestroy();
          MEMORY[0x24563A5D0](v49, -1, -1);
          MEMORY[0x24563A5D0](v43, -1, -1);
        }
        else
        {
          id v48 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
          v48(v17, v13);
        }

        (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v62);
        if (qword_268D4B2F0 != -1) {
          swift_once();
        }
        sub_241DA95E0();
        sub_241DA95E0();
        id v50 = (void *)sub_241DAA950();
        swift_bridgeObjectRelease();
        uint64_t v51 = (void *)sub_241DAA950();
        swift_bridgeObjectRelease();
        id v52 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v50, v51, 1);

        sub_241DA95E0();
        uint64_t v53 = (void *)sub_241DAA950();
        swift_bridgeObjectRelease();
        id v54 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v53, 0, 0);

        objc_msgSend(v52, sel_addAction_, v54);
        long long v55 = (void *)sub_241DA9E70();
        objc_msgSend(v55, sel_presentViewController_animated_completion_, v52, 1, 0);

        return ((uint64_t (*)(unsigned char *, uint64_t))v48)(v61, v13);
      }
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  }
  sub_241D3A774((uint64_t)v12, (unint64_t *)&qword_268D4CBE0, MEMORY[0x263F06EA8]);
  sub_241DAA2A0();
  os_log_t v34 = sub_241DAA2D0();
  os_log_type_t v35 = sub_241DAAC10();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v63[0] = v37;
    *(_DWORD *)uint64_t v36 = 136315138;
    uint64_t v38 = sub_241DAB1F0();
    uint64_t v64 = sub_241D48854(v38, v39, v63);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v34, v35, "[%s] No URL supplied for VRX ingestion", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v37, -1, -1);
    MEMORY[0x24563A5D0](v36, -1, -1);
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v62);
}

id sub_241D382B4(uint64_t a1)
{
  return sub_241D3A33C(a1, type metadata accessor for VisionAppPluginAppDelegate);
}

uint64_t type metadata accessor for VisionAppPluginAppDelegate()
{
  return self;
}

id sub_241D382F0()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

uint64_t sub_241D38328()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for VisionInternalSettingsViewController());
  return sub_241D3844C();
}

uint64_t type metadata accessor for VisionInternalSettingsViewController()
{
  uint64_t result = qword_268D4B9E0;
  if (!qword_268D4B9E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D3840C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241D3844C()
{
  swift_getObjectType();
  uint64_t v0 = sub_241DA97B0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D3A528(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_241DA9C00();
  uint64_t v4 = swift_allocObject();
  long long v16 = xmmword_241DB2C80;
  *(_OWORD *)(v4 + 16) = xmmword_241DB2C80;
  sub_241D3A3C4(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_241DB2C60;
  uint64_t v6 = sub_241DA9E00();
  *(void *)(v5 + 56) = v6;
  uint64_t v7 = sub_241D3A7E4(&qword_268D4C390, 255, MEMORY[0x263F441F0]);
  *(void *)(v5 + 64) = v7;
  uint64_t v8 = sub_241D2C600((uint64_t *)(v5 + 32));
  sub_241D388C4((uint64_t)v8);
  *(void *)(v5 + 96) = v6;
  *(void *)(v5 + 104) = v7;
  uint64_t v9 = sub_241D2C600((uint64_t *)(v5 + 72));
  sub_241D38F34((uint64_t)v9);
  sub_241DA97A0();
  sub_241DA9780();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  sub_241DA9BF0();
  uint64_t v17 = 0x3C53447961727241;
  unint64_t v18 = 0xE800000000000000;
  sub_241DA97A0();
  sub_241DA9780();
  v10(v3, v0);
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  sub_241DAAA50();
  sub_241DA9AB0();
  swift_allocObject();
  sub_241DA9AA0();
  sub_241DA9B40();
  sub_241D3A430();
  sub_241D3A7E4((unint64_t *)&qword_268D4C320, 255, (void (*)(uint64_t))sub_241D3A430);
  uint64_t v11 = sub_241DA9B60();
  swift_release();
  sub_241DA9F10();
  sub_241D353DC();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v16;
  uint64_t v13 = sub_241D3A7E4(&qword_268D4BA00, 255, (void (*)(uint64_t))sub_241D3A490);
  *(void *)(v12 + 32) = v11;
  *(void *)(v12 + 40) = v13;
  swift_retain();
  sub_241DA9F40();
  uint64_t v14 = sub_241DAA1D0();
  swift_release();
  swift_release();
  return v14;
}

uint64_t sub_241D388C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = sub_241DAA1C0();
  uint64_t v34 = *(void *)(v1 - 8);
  uint64_t v35 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v33 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_241DA9CB0();
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  id v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241D3A528(0, &qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  id v28 = (char *)&v26 - v7;
  sub_241D3A528(0, (unint64_t *)&unk_268D4C340, MEMORY[0x263F81DF8], v5);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_241DAA350();
  uint64_t v26 = *(void *)(v11 - 8);
  uint64_t v27 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241DAA310();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241DAA460();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA430();
  sub_241DAA440();
  void v37[3] = v18;
  v37[4] = MEMORY[0x263F81F20];
  id v22 = sub_241D2C600(v37);
  (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 16))(v22, v21, v18);
  sub_241D3A528(0, &qword_268D4B860, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  sub_241DAA370();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241DB2C80;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F81DE8], v14);
  uint64_t v23 = sub_241DAA320();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 1, 1, v23);
  sub_241DAA340();
  sub_241DAA330();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  *(void *)(swift_allocObject() + 16) = v32;
  uint64_t v24 = sub_241DAA390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v28, 1, 1, v24);
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, *MEMORY[0x263F440E0], v31);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v33, *MEMORY[0x263F446D0], v35);
  sub_241DA9DF0();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
}

uint64_t sub_241D38F34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v1 = sub_241DAA1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241DA9CB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D3A528(0, &qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v20[-1] - v10;
  uint64_t v12 = sub_241DAA460();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA430();
  sub_241DAA440();
  v20[3] = v12;
  v20[4] = MEMORY[0x263F81F20];
  uint64_t v16 = sub_241D2C600(v20);
  (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(v16, v15, v12);
  uint64_t v17 = sub_241DAA390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F440E0], v5);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F446D0], v1);
  sub_241DA9DF0();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_241D392B4()
{
  return sub_241DAAC40();
}

uint64_t sub_241D392EC()
{
  uint64_t v0 = sub_241DA9D50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DA9D00();
  uint64_t v4 = sub_241DA9D40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

id sub_241D393C0(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VisionInternalSettingsViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

uint64_t sub_241D3940C(void *a1, uint64_t a2)
{
  v34[2] = a2;
  sub_241D3A528(0, &qword_268D4BA08, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  objc_super v5 = (char *)v34 - v4;
  uint64_t v37 = sub_241DAA030();
  uint64_t v36 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241DAA2E0();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v34 - v10;
  uint64_t v12 = sub_241DA9E30();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DA9E20();
  id v16 = objc_msgSend(a1, sel_resolvedHealthStore);
  uint64_t v39 = v8;
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v35 = v12;
    sub_241DAAC70();
    sub_241DAAC90();
    sub_241D3A710((uint64_t)v43, (uint64_t)v41);
    id v18 = v17;
    id v19 = objc_msgSend(v18, sel_profileIdentifier);
    uint64_t v20 = sub_241DA9A20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 1, 1, v20);
    sub_241DA9AF0();

    sub_241D3A774((uint64_t)v5, &qword_268D4BA08, MEMORY[0x263F43C08]);
    sub_241D3A710((uint64_t)v42, (uint64_t)v40);
    sub_241DAACA0();
    sub_241DAA010();
    id v21 = objc_msgSend(self, sel_visionPrescriptionType);
    uint64_t v31 = (void *)sub_241DA9E10();

    id v32 = objc_msgSend(a1, sel_navigationController);
    if (v32)
    {
      uint64_t v33 = v32;
      objc_msgSend(v32, sel_pushViewController_animated_, v31, 1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v37);
    sub_241D36E44((uint64_t)v42);
    sub_241D36E44((uint64_t)v43);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v35);
  }
  else
  {
    sub_241DAA290();
    id v22 = sub_241DAA2D0();
    os_log_type_t v23 = sub_241DAAC10();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v35 = v12;
      uint64_t v26 = v13;
      uint64_t v27 = v25;
      v43[0] = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v28 = sub_241DAB1F0();
      v42[0] = sub_241D48854(v28, v29, v43);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v22, v23, "%s Cannot push view. No valid resolved health store on view controller", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v27, -1, -1);
      MEMORY[0x24563A5D0](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v39);
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v15, v35);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v39);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
}

void sub_241D39C60(void *a1)
{
  id v2 = (id)HKVisionPrescriptionGenerateGlassesPrescriptionSample();
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  v7[4] = sub_241D3A5C4;
  v7[5] = v4;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_241D37888;
  v7[3] = &unk_26F5CFEE8;
  objc_super v5 = _Block_copy(v7);
  id v6 = a1;
  swift_release();
  objc_msgSend(v3, sel_saveObject_withCompletion_, v2, v5);
  _Block_release(v5);
}

uint64_t sub_241D39D78(char a1, void *a2, void *a3)
{
  uint64_t v6 = sub_241DAA830();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_241DAA850();
  uint64_t v10 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D3A5E4();
  uint64_t v13 = (void *)sub_241DAAD00();
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = a3;
  aBlock[4] = sub_241D3A664;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_241D3A278;
  aBlock[3] = &unk_26F5CFF38;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a2;
  id v17 = a3;
  swift_release();
  sub_241DAA840();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_241D3A7E4((unint64_t *)&qword_268D4D390, 255, MEMORY[0x263F8F030]);
  sub_241D3A528(0, (unint64_t *)&qword_268D4BC50, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_241D3A670();
  sub_241DAAF60();
  MEMORY[0x245639900](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v20);
}

void sub_241D3A068(char a1, void *a2, void *a3)
{
  if ((a1 & 1) == 0)
  {
    sub_241DAAFD0();
    sub_241DAAA50();
    id v5 = a2;
    sub_241D3A3C4(0, (unint64_t *)&unk_268D4BC60, (unint64_t *)&qword_268D4C3D0, MEMORY[0x263F8E4D8], MEMORY[0x263F8D8F0]);
    sub_241DAA9B0();
    sub_241DAAA50();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v6, v7, 1);

  uint64_t v9 = (void *)sub_241DAA950();
  id v10 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v9, 0, 0);

  objc_msgSend(v8, sel_addAction_, v10);
  objc_msgSend(a3, sel_presentViewController_animated_completion_, v8, 1, 0);
}

uint64_t sub_241D3A278(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_241D3A2BC()
{
}

void sub_241D3A2EC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_241D3A320()
{
  return sub_241D3A33C(0, type metadata accessor for VisionInternalSettingsViewController);
}

id sub_241D3A33C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_241D3A374()
{
  return type metadata accessor for VisionInternalSettingsViewController();
}

uint64_t sub_241D3A37C(uint64_t a1, uint64_t a2)
{
  return sub_241D3A7E4(&qword_268D4B9F0, a2, (void (*)(uint64_t))type metadata accessor for VisionAppPluginAppDelegate);
}

void sub_241D3A3C4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241D36B4C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241D3A430()
{
  if (!qword_268D4B9F8)
  {
    sub_241DA9AB0();
    unint64_t v0 = sub_241DA9AC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B9F8);
    }
  }
}

void sub_241D3A490()
{
  if (!qword_268D4C330)
  {
    sub_241D3A430();
    sub_241D3A7E4((unint64_t *)&qword_268D4C320, 255, (void (*)(uint64_t))sub_241D3A430);
    unint64_t v0 = sub_241DA9B80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C330);
    }
  }
}

void sub_241D3A528(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241D3A58C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D3A5C4(char a1, void *a2)
{
  return sub_241D39D78(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_241D3A5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241D3A5DC()
{
  return swift_release();
}

unint64_t sub_241D3A5E4()
{
  unint64_t result = qword_268D4BC40;
  if (!qword_268D4BC40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4BC40);
  }
  return result;
}

uint64_t sub_241D3A624()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241D3A664()
{
  sub_241D3A068(*(unsigned char *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

unint64_t sub_241D3A670()
{
  unint64_t result = qword_268D4D3A0;
  if (!qword_268D4D3A0)
  {
    sub_241D3A528(255, (unint64_t *)&qword_268D4BC50, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4D3A0);
  }
  return result;
}

uint64_t sub_241D3A6F8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D3A708(void *a1)
{
  return sub_241D3940C(a1, *(void *)(v1 + 16));
}

uint64_t sub_241D3A710(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_241D3A774(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241D3A528(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241D3A7E4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s23VisionPrescriptionFieldOwCP(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t _s23VisionPrescriptionFieldOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s23VisionPrescriptionFieldOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241D3A99CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

uint64_t sub_241D3A9C4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_241D3A9CC(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *_s23VisionPrescriptionFieldOMa()
{
  return &_s23VisionPrescriptionFieldON;
}

id sub_241D3A9E4(unsigned __int8 a1)
{
  uint64_t v1 = a1;
  id result = 0;
  switch(v1)
  {
    case 2:
    case 6:
      id v3 = objc_msgSend(self, sel_degreeAngleUnit);
      return v3;
    case 4:
    case 11:
    case 12:
    case 13:
    case 14:
      id v3 = objc_msgSend(self, sel_meterUnitWithMetricPrefix_, 4);
      return v3;
    case 5:
    case 7:
    case 9:
      id v3 = objc_msgSend(self, sel_prismDiopterUnit);
      return v3;
    case 8:
    case 10:
      return result;
    default:
      id v3 = objc_msgSend(self, sel_diopterUnit);
      return v3;
  }
}

id sub_241D3AAD0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = sub_241DA99A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  BOOL v7 = (double *)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v8 = 0;
  switch(a3)
  {
    case 2:
    case 6:
      id v9 = objc_msgSend(self, sel_degreeAngleUnit);
      goto LABEL_6;
    case 4:
    case 11:
    case 12:
    case 13:
    case 14:
      id v9 = objc_msgSend(self, sel_meterUnitWithMetricPrefix_, 4);
      goto LABEL_6;
    case 5:
    case 7:
    case 9:
      id v9 = objc_msgSend(self, sel_prismDiopterUnit);
      goto LABEL_6;
    case 8:
    case 10:
      return v8;
    default:
      id v9 = objc_msgSend(self, sel_diopterUnit);
LABEL_6:
      id v10 = v9;
      if (!v10) {
        return 0;
      }
      uint64_t v11 = v10;
      v15[15] = a3;
      sub_241D3C100();
      sub_241DA9950();
      if ((*(unsigned int (**)(double *, uint64_t))(v5 + 88))(v7, v4) == *MEMORY[0x263F43898])
      {
        (*(void (**)(double *, uint64_t))(v5 + 96))(v7, v4);
        double v12 = v7[2];
        uint64_t v13 = (void *)*((void *)v7 + 3);
        swift_bridgeObjectRelease();

        id v8 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v11, v12);
      }
      else
      {

        (*(void (**)(double *, uint64_t))(v5 + 8))(v7, v4);
        return 0;
      }
      return v8;
  }
}

id sub_241D3AD50(void *a1, unint64_t a2)
{
  uint64_t v4 = sub_241DA99A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241DAA2E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v12 = 0;
    switch((char)a2)
    {
      case 2:
      case 6:
        uint64_t v20 = self;
        id v21 = a1;
        id v15 = objc_msgSend(v20, sel_degreeAngleUnit);
        goto LABEL_7;
      case 4:
      case 11:
      case 12:
      case 13:
      case 14:
        uint64_t v13 = self;
        id v14 = a1;
        id v15 = objc_msgSend(v13, sel_meterUnitWithMetricPrefix_, 4);
        goto LABEL_7;
      case 5:
      case 7:
      case 9:
        id v18 = self;
        id v19 = a1;
        id v15 = objc_msgSend(v18, sel_prismDiopterUnit);
        goto LABEL_7;
      case 8:
      case 10:
        return v12;
      default:
        id v16 = self;
        id v17 = a1;
        id v15 = objc_msgSend(v16, sel_diopterUnit);
LABEL_7:
        id v12 = v15;
        if (!v12)
        {

          return v12;
        }
        uint64_t v43 = v9;
        uint64_t v44 = v8;
        uint64_t v45 = v5;
        sub_241D3C154();
        id v42 = v12;
        objc_msgSend(a1, sel_doubleValueForUnit_, v12);
        id v22 = (void *)sub_241DAADE0();
        sub_241DAA2B0();
        id v23 = v22;
        uint64_t v24 = sub_241DAA2D0();
        int v25 = sub_241DAAC30();
        if (os_log_type_enabled(v24, (os_log_type_t)v25))
        {
          int v39 = v25;
          uint64_t v41 = v4;
          uint64_t v26 = swift_slowAlloc();
          uint64_t v38 = swift_slowAlloc();
          uint64_t v48 = v38;
          *(_DWORD *)uint64_t v26 = 136315394;
          unint64_t v40 = a2;
          unint64_t v46 = sub_241D3B370(a2);
          uint64_t v47 = v27;
          sub_241DAAA50();
          if (qword_268D4B2F0 != -1) {
            swift_once();
          }
          uint64_t v28 = sub_241DA95E0();
          a2 = v29;
          swift_bridgeObjectRelease();
          unint64_t v46 = sub_241D48854(v28, a2, &v48);
          sub_241DAAF10();
          swift_bridgeObjectRelease();
          *(_WORD *)(v26 + 12) = 2048;
          objc_msgSend(v23, sel_doubleValue);
          unint64_t v46 = v30;
          sub_241DAAF10();

          _os_log_impl(&dword_241D1C000, v24, (os_log_type_t)v39, "[jamanse] %s: %f", (uint8_t *)v26, 0x16u);
          uint64_t v31 = v38;
          swift_arrayDestroy();
          MEMORY[0x24563A5D0](v31, -1, -1);
          MEMORY[0x24563A5D0](v26, -1, -1);

          (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v44);
          LOBYTE(a2) = v40;
          uint64_t v4 = v41;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v44);
        }
        id v32 = sub_241D3B4D0(a2);
        id v33 = objc_msgSend(v32, sel_stringFromNumber_, v23);
        uint64_t v34 = v45;
        if (v33)
        {
          uint64_t v35 = v33;
          sub_241DAA990();

          LOBYTE(v46) = a2;
          sub_241D3C100();
          sub_241DA9940();

          swift_bridgeObjectRelease();
        }
        else
        {

          (*(void (**)(char *, void, uint64_t))(v34 + 104))(v7, *MEMORY[0x263F43890], v4);
        }
        if ((*(unsigned int (**)(char *, uint64_t))(v34 + 88))(v7, v4) == *MEMORY[0x263F43898])
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v7, v4);
          id v12 = *(id *)v7;

          return v12;
        }
        (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v4);
        break;
    }
  }
  return 0;
}

unint64_t sub_241D3B370(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000024;
      break;
    case 8:
      unint64_t result = 0xD000000000000029;
      break;
    case 9:
      unint64_t result = 0xD000000000000022;
      break;
    case 10:
      unint64_t result = 0xD000000000000027;
      break;
    case 11:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 12:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 13:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 14:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

id sub_241D3B4D0(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = sub_241DA97E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  sub_241DA97D0();
  uint64_t v8 = (void *)sub_241DA97C0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v7, sel_setLocale_, v8);

  uint64_t v9 = 2;
  switch(v2)
  {
    case 0:
    case 1:
    case 3:
      goto LABEL_5;
    case 11:
    case 12:
      objc_msgSend(v7, sel_setMinimumFractionDigits_, 1);
      uint64_t v10 = 2;
      break;
    case 13:
    case 14:
      uint64_t v10 = 1;
      objc_msgSend(v7, sel_setMinimumFractionDigits_, 1);
      break;
    default:
      uint64_t v9 = 0;
LABEL_5:
      objc_msgSend(v7, sel_setMinimumFractionDigits_, v9);
      if (a1 > 0xEu) {
        uint64_t v10 = 0;
      }
      else {
        uint64_t v10 = qword_241DB3728[(char)a1];
      }
      break;
  }
  objc_msgSend(v7, sel_setMaximumFractionDigits_, v10);
  id v11 = objc_msgSend(v7, sel_minusSign);
  objc_msgSend(v7, sel_setNegativePrefix_, v11);

  return v7;
}

id sub_241D3B70C@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_241DA94E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = sub_241D3B4D0(a1);
  sub_241DA94A0();
  id result = objc_msgSend(v8, sel_plusSign);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v10 = result;
  sub_241DAA990();

  sub_241DA94C0();
  swift_bridgeObjectRelease();
  id result = objc_msgSend(v8, sel_minusSign);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v11 = result;
  sub_241DAA990();

  sub_241DA94C0();
  swift_bridgeObjectRelease();
  id result = objc_msgSend(v8, sel_decimalSeparator);
  if (result)
  {
    id v12 = result;
    sub_241DAA990();

    sub_241DA94C0();
    swift_bridgeObjectRelease();
    sub_241DA94D0();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  }
LABEL_7:
  __break(1u);
  return result;
}

BOOL sub_241D3B8F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_241D3B90C()
{
  return sub_241DAB1D0();
}

uint64_t sub_241D3B954()
{
  return sub_241DAB1C0();
}

uint64_t sub_241D3B980()
{
  return sub_241DAB1D0();
}

void sub_241D3B9C4(void *a1@<X8>)
{
  *a1 = &unk_26F5CEED0;
}

id sub_241D3B9D4@<X0>(uint64_t a1@<X8>)
{
  return sub_241D3B70C(*v1, a1);
}

id sub_241D3B9DC()
{
  return sub_241D3B4D0(*v0);
}

unint64_t sub_241D3B9EC()
{
  unint64_t result = qword_268D4BA10;
  if (!qword_268D4BA10)
  {
    sub_241D3BA44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4BA10);
  }
  return result;
}

void sub_241D3BA44()
{
  if (!qword_268D4BA18)
  {
    unint64_t v0 = sub_241DAAB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BA18);
    }
  }
}

unint64_t sub_241D3BAA0()
{
  unint64_t result = qword_268D4BA20;
  if (!qword_268D4BA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4BA20);
  }
  return result;
}

unint64_t sub_241D3BAF4(unsigned __int8 a1, uint64_t a2)
{
  self;
  if (swift_dynamicCastObjCClass())
  {
    id v5 = v2;
    id v6 = sub_241D3BD04(a1, a2);
  }
  else
  {
    self;
    if (!swift_dynamicCastObjCClass())
    {
      id v8 = 0;
      goto LABEL_6;
    }
    id v7 = v2;
    id v6 = sub_241D3BF80(a1, a2);
  }
  id v8 = v6;

LABEL_6:
  switch(a1)
  {
    case 2u:
    case 6u:
      id v9 = objc_msgSend(self, sel_degreeAngleUnit);
      goto LABEL_12;
    case 4u:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0xEu:
      id v9 = objc_msgSend(self, sel_meterUnitWithMetricPrefix_, 4);
      goto LABEL_12;
    case 5u:
    case 7u:
    case 9u:
      id v9 = objc_msgSend(self, sel_prismDiopterUnit);
      goto LABEL_12;
    case 8u:
    case 0xAu:
      goto LABEL_15;
    default:
      id v9 = objc_msgSend(self, sel_diopterUnit);
LABEL_12:
      id v10 = v9;
      if (v10)
      {
        id v11 = v10;
        if (v8)
        {
          objc_msgSend(v8, sel_doubleValueForUnit_, v10);
          id v13 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v12);
          objc_msgSend(v13, sel_floatValue);
          unsigned int v15 = v14;

          unsigned __int8 v16 = 0;
          uint64_t v17 = v15;
          return v17 | ((unint64_t)v16 << 32);
        }
      }
      else
      {
LABEL_15:
      }
      uint64_t v17 = 0;
      unsigned __int8 v16 = 1;
      return v17 | ((unint64_t)v16 << 32);
  }
}

id sub_241D3BD04(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = &selRef_leftEye;
  int v4 = a1;
  if (a2 != 1) {
    uint64_t v3 = &selRef_rightEye;
  }
  id v5 = [v2 *v3];
  id v6 = v5;
  switch(v4)
  {
    case 0:
      if (!v5) {
        return 0;
      }
      id v8 = objc_msgSend(v5, sel_sphere);
      goto LABEL_30;
    case 1:
      if (!v5) {
        return 0;
      }
      id v8 = objc_msgSend(v5, sel_cylinder);
      goto LABEL_30;
    case 2:
      if (!v5) {
        return 0;
      }
      id v8 = objc_msgSend(v5, sel_axis);
      goto LABEL_30;
    case 3:
      if (!v5) {
        return 0;
      }
      id v8 = objc_msgSend(v5, sel_addPower);
LABEL_30:
      id v7 = v8;
      goto LABEL_31;
    case 4:
      id v8 = objc_msgSend(v5, sel_vertexDistance);
      goto LABEL_30;
    case 5:
      if (!v5) {
        return 0;
      }
      id v9 = objc_msgSend(v5, sel_prism);
      if (!v9) {
        goto LABEL_4;
      }
      id v10 = v9;
      id v11 = objc_msgSend(v9, sel_amount);
      goto LABEL_27;
    case 6:
      if (!v5) {
        return 0;
      }
      id v12 = objc_msgSend(v5, sel_prism);
      if (!v12) {
        goto LABEL_4;
      }
      id v10 = v12;
      id v11 = objc_msgSend(v12, sel_angle);
      goto LABEL_27;
    case 7:
      if (!v5) {
        return 0;
      }
      id v13 = objc_msgSend(v5, sel_prism);
      if (!v13) {
        goto LABEL_4;
      }
      id v10 = v13;
      id v11 = objc_msgSend(v13, sel_horizontalAmount);
      goto LABEL_27;
    case 9:
      if (!v5) {
        return 0;
      }
      id v14 = objc_msgSend(v5, sel_prism);
      if (v14)
      {
        id v10 = v14;
        id v11 = objc_msgSend(v14, sel_verticalAmount);
LABEL_27:
        id v7 = v11;

LABEL_31:
      }
      else
      {
LABEL_4:

        return 0;
      }
      return v7;
    case 11:
      id v8 = objc_msgSend(v5, sel_nearPupillaryDistance);
      goto LABEL_30;
    case 12:
      id v8 = objc_msgSend(v5, sel_farPupillaryDistance);
      goto LABEL_30;
    default:
      goto LABEL_4;
  }
}

id sub_241D3BF80(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = &selRef_leftEye;
  int v4 = a1;
  if (a2 != 1) {
    uint64_t v3 = &selRef_rightEye;
  }
  id v5 = [v2 *v3];
  id v6 = v5;
  switch(v4)
  {
    case 0:
      if (!v5) {
        goto LABEL_13;
      }
      id v7 = objc_msgSend(v5, sel_sphere);
      goto LABEL_16;
    case 1:
      if (!v5) {
        goto LABEL_13;
      }
      id v7 = objc_msgSend(v5, sel_cylinder);
      goto LABEL_16;
    case 2:
      if (!v5) {
        goto LABEL_13;
      }
      id v7 = objc_msgSend(v5, sel_axis);
      goto LABEL_16;
    case 3:
      if (!v5) {
        goto LABEL_13;
      }
      id v7 = objc_msgSend(v5, sel_addPower);
LABEL_16:
      id v8 = v7;

      break;
    case 13:
      id v7 = objc_msgSend(v5, sel_baseCurve);
      goto LABEL_16;
    case 14:
      id v7 = objc_msgSend(v5, sel_diameter);
      goto LABEL_16;
    default:

LABEL_13:
      id v8 = 0;
      break;
  }
  return v8;
}

unint64_t sub_241D3C100()
{
  unint64_t result = qword_268D4BA28;
  if (!qword_268D4BA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4BA28);
  }
  return result;
}

unint64_t sub_241D3C154()
{
  unint64_t result = qword_268D4CC20;
  if (!qword_268D4CC20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4CC20);
  }
  return result;
}

uint64_t sub_241D3C194(uint64_t a1, char a2)
{
  if ((a2 - 11) > 1u)
  {
    sub_241DAAFD0();
    sub_241DAAA50();
    sub_241DAB1F0();
    sub_241DAAA50();
    swift_bridgeObjectRelease();
    sub_241DAAA50();
    sub_241DAA9B0();
    sub_241DAAA50();
    swift_bridgeObjectRelease();
    sub_241DAAA50();
    uint64_t result = sub_241DAB080();
    __break(1u);
  }
  else
  {
    id v4 = sub_241D1FBA0(a2);
    if (v4
      && (id v5 = v4,
          id v6 = sub_241D2030C(),
          unsigned __int8 v7 = objc_msgSend(v6, sel_containsQuantity_, a1),
          v6,
          v5,
          (v7 & 1) != 0))
    {
      return 0;
    }
    else
    {
      uint64_t result = (uint64_t)sub_241D1F440(a2);
      if (result)
      {
        id v9 = (void *)result;
        id v10 = sub_241D2030C();
        unsigned int v11 = objc_msgSend(v10, sel_containsQuantity_, a1);

        if (v11) {
          return 1;
        }
        else {
          return 3;
        }
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionValidationController()
{
  return self;
}

id sub_241D3C398(void *a1, void *a2)
{
  uint64_t v3 = v2;
  *(void *)&v2[OBJC_IVAR____TtC21VisionHealthAppPlugin43VisionPrescriptionRecordAddedViewController_healthStore] = a1;
  uint64_t v5 = qword_268D4B2F0;
  id v24 = a1;
  if (v5 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  sub_241DA95E0();
  id v6 = objc_msgSend(a2, sel_metadata, 0xE000000000000000);
  uint64_t v7 = MEMORY[0x263F8D310];
  if (!v6)
  {
    long long v28 = 0u;
    long long v29 = 0u;
    goto LABEL_11;
  }
  id v8 = v6;
  uint64_t v9 = sub_241DAA920();

  uint64_t v10 = sub_241DAA990();
  if (!*(void *)(v9 + 16) || (unint64_t v12 = sub_241DA3428(v10, v11), (v13 & 1) == 0))
  {
    long long v28 = 0u;
    long long v29 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_241D2DA4C(*(void *)(v9 + 56) + 32 * v12, (uint64_t)&v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v29 + 1))
  {
LABEL_11:
    sub_241D2D994((uint64_t)&v28);
    goto LABEL_12;
  }
  if (!swift_dynamicCast())
  {
LABEL_12:
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    goto LABEL_13;
  }
  uint64_t v14 = v25;
  unint64_t v15 = v26;
LABEL_13:
  sub_241D3CF4C(0, (unint64_t *)&qword_268D4C380, (uint64_t (*)(uint64_t))sub_241D3CEF4, MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_241DB2C80;
  *(void *)(v16 + 56) = v7;
  *(void *)(v16 + 64) = sub_241D2B59C();
  *(void *)(v16 + 32) = v14;
  *(void *)(v16 + 40) = v15;
  sub_241DAA960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v17 = (id)HKHealthUIFrameworkBundle();
  id v18 = (void *)sub_241DAA950();
  id v19 = objc_msgSend(self, sel_imageNamed_inBundle_, v18, v17);

  uint64_t v20 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  id v21 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  v27.receiver = v3;
  v27.super_class = (Class)type metadata accessor for VisionPrescriptionRecordAddedViewController();
  id v22 = objc_msgSendSuper2(&v27, sel_initWithTitle_detailText_icon_contentLayout_, v20, v21, v19, 2);

  return v22;
}

void sub_241D3C748()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for VisionPrescriptionRecordAddedViewController();
  objc_msgSendSuper2(&v7, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_headerView);
  objc_msgSend(v1, sel_setAllowFullWidthIcon_, 1);

  id v2 = objc_msgSend(v0, sel_headerView);
  LODWORD(v3) = 1036831949;
  objc_msgSend(v2, sel_setTitleHyphenationFactor_, v3);

  id v4 = objc_msgSend(self, sel_boldButton);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  uint64_t v5 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setTitle_forState_, v5, 0, 0xE000000000000000);

  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_doneButtonTapped, 64);
  id v6 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v6, sel_addButton_, v4);
}

uint64_t sub_241D3C968()
{
  id v1 = v0;
  sub_241D3CF4C(0, (unint64_t *)&qword_268D4CBE0, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v28 - v3;
  uint64_t v5 = sub_241DA96C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = sub_241DAA860();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241D3A5E4();
  uint64_t *v15 = sub_241DAAD00();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F0E0], v12);
  char v16 = sub_241DAA870();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    id v18 = objc_msgSend(v1, sel_presentingViewController);
    if (v18)
    {
      id v19 = v18;
      objc_msgSend(v18, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
    id v20 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC21VisionHealthAppPlugin43VisionPrescriptionRecordAddedViewController_healthStore], sel_profileIdentifier);
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F42A20]), sel_initWithProfileIdentifier_, v20);

    id v22 = objc_msgSend(self, sel_visionPrescriptionType);
    id v23 = objc_msgSend(v21, sel_URLForDataTypeDetailWithObjectType_, v22);

    if (v23)
    {
      sub_241DA9690();

      id v24 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v24(v4, v9, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        v24(v11, v4, v5);
        id v25 = objc_msgSend(self, sel_sharedApplication);
        unint64_t v26 = (void *)sub_241DA9660();
        sub_241D75AA4(MEMORY[0x263F8EE78]);
        type metadata accessor for OpenExternalURLOptionsKey(0);
        sub_241D3CFB0();
        objc_super v27 = (void *)sub_241DAA910();
        swift_bridgeObjectRelease();
        objc_msgSend(v25, sel_openURL_options_completionHandler_, v26, v27, 0);

        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    }

    return sub_241D21A08((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241D3CE8C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionRecordAddedViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VisionPrescriptionRecordAddedViewController()
{
  return self;
}

unint64_t sub_241D3CEF4()
{
  unint64_t result = qword_268D4D270;
  if (!qword_268D4D270)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4D270);
  }
  return result;
}

void sub_241D3CF4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_241D3CFB0()
{
  unint64_t result = qword_268D4B568;
  if (!qword_268D4B568)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4B568);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionAddPrescriptionButtonCell()
{
  uint64_t result = qword_268D4BA38;
  if (!qword_268D4BA38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D3D054()
{
  return swift_initClassMetadata2();
}

void sub_241D3D094()
{
  sub_241DA9D60();
  unint64_t v0 = (void (*)(void))sub_241DA9D70();
  v0();
  sub_241DA98A0();
  id v1 = (id)*MEMORY[0x263F15A20];
  sub_241DAADC0();
}

void *sub_241D3D11C()
{
  uint64_t v0 = sub_241DAAE90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241DAAE50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241DAAEB0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v18 - v13;
  sub_241DAAEA0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F821A0], v4);
  sub_241DAAE60();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F821F0], v0);
  sub_241DAAE40();
  sub_241DAAE70();
  id v15 = objc_msgSend(self, sel_configurationWithTextStyle_, *MEMORY[0x263F83570]);
  sub_241DAAE30();
  sub_241D3D47C();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  char v16 = (void *)sub_241DAAEC0();
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v16;
}

id sub_241D3D3F0(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VisionPrescriptionAddPrescriptionButtonCell();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_241D3D43C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionAddPrescriptionButtonCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241D3D474()
{
  return type metadata accessor for VisionPrescriptionAddPrescriptionButtonCell();
}

unint64_t sub_241D3D47C()
{
  unint64_t result = qword_268D4BA48;
  if (!qword_268D4BA48)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4BA48);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell()
{
  uint64_t result = qword_268D4BA50;
  if (!qword_268D4BA50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D3D508()
{
  return swift_initClassMetadata2();
}

void *sub_241D3D548()
{
  uint64_t v0 = sub_241DAAE90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241DAAE50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241DAAEB0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v19 - v13;
  sub_241DAAEA0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F821A0], v4);
  sub_241DAAE60();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F821F0], v0);
  sub_241DAAE40();
  id v15 = objc_msgSend(self, sel_systemRedColor);
  sub_241DAAE80();
  id v16 = objc_msgSend(self, sel_configurationWithTextStyle_, *MEMORY[0x263F83570]);
  sub_241DAAE30();
  sub_241D3D47C();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  id v17 = (void *)sub_241DAAEC0();
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v17;
}

id sub_241D3D838(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_241D3D884()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241D3D8BC()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell();
}

uint64_t type metadata accessor for VisionPrescriptionViewAttachmentCell(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4BAB0);
}

uint64_t sub_241D3D8E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241D3D968()
{
  uint64_t v0 = sub_241DAA460();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA430();
  sub_241DAA410();
  uint64_t v5 = v4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_268D4BA60 = v5;
  return result;
}

id sub_241D3DA40()
{
  id v0 = objc_msgSend(self, sel_buttonWithType_, 1);
  objc_msgSend(v0, sel_setContentHorizontalAlignment_, 5);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  uint64_t v1 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_forState_, v1, 0, 0xE000000000000000);

  return v0;
}

id sub_241D3DB74()
{
  uint64_t v1 = qword_268D4BA98;
  uint64_t v2 = *(void **)(v0 + qword_268D4BA98);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_268D4BA98);
  }
  else
  {
    id v4 = objc_msgSend(*(id *)(v0 + qword_268D4BA88), sel_heightAnchor);
    id v5 = objc_msgSend(v4, sel_constraintEqualToConstant_, 0.0);

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

char *sub_241D3DC1C(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  uint64_t v10 = qword_268D4BA68;
  type metadata accessor for VisionPrescriptionImagePreviewProvider();
  uint64_t v11 = (void *)swift_allocObject();
  v11[3] = 0;
  v11[4] = 0;
  v11[2] = 0;
  *(void *)&v5[v10] = v11;
  swift_unknownObjectWeakInit();
  uint64_t v12 = &v5[qword_268D4BA78];
  *(_OWORD *)uint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((void *)v12 + 4) = 0;
  uint64_t v13 = qword_268D4BA80;
  id v14 = objc_allocWithZone(MEMORY[0x263F828E0]);
  id v15 = v5;
  id v16 = objc_msgSend(v14, sel_init);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  id v17 = (void *)sub_241DAADA0();
  objc_msgSend(v16, sel_setFont_, v17);

  objc_msgSend(v16, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v5[v13] = v16;
  uint64_t v18 = qword_268D4BA88;
  *(void *)&v15[v18] = sub_241D3DA40();
  uint64_t v19 = qword_268D4BA90;
  id v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionImagePreviewView()), sel_init);
  objc_msgSend(v20, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v15[v19] = v20;
  *(void *)&v15[qword_268D4BA98] = 0;
  *(void *)&v15[qword_268D4BAA0] = 0;
  *(void *)&v15[qword_268D4BAA8] = 0;

  v31.receiver = v15;
  v31.super_class = (Class)type metadata accessor for VisionPrescriptionViewAttachmentCell(0);
  id v21 = (char *)objc_msgSendSuper2(&v31, sel_initWithFrame_, a1, a2, a3, a4);
  id v22 = objc_msgSend(v21, sel_contentView);
  objc_msgSend(v22, sel_addSubview_, *(void *)&v21[qword_268D4BA80]);

  id v23 = objc_msgSend(v21, sel_contentView);
  objc_msgSend(v23, sel_addSubview_, *(void *)&v21[qword_268D4BA90]);

  id v24 = objc_msgSend(v21, sel_contentView);
  uint64_t v25 = qword_268D4BA88;
  objc_msgSend(v24, sel_addSubview_, *(void *)&v21[qword_268D4BA88]);

  id v26 = (id)*MEMORY[0x263F15A20];
  sub_241DAADC0();

  objc_super v27 = self;
  sub_241D3E61C();
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
  uint64_t v28 = (void *)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, v28);

  id v29 = *(id *)&v21[v25];
  objc_msgSend(v29, sel_addTarget_action_forControlEvents_, v21, sel_presentPreviewViewController, 64);

  return v21;
}

char *sub_241D3DF70(double a1, double a2, double a3, double a4)
{
  return sub_241D3DC1C(a1, a2, a3, a4);
}

void sub_241D3DF94(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_241D41610();
}

uint64_t sub_241D3DFBC()
{
  return sub_241D3E63C(&qword_268D4BAA0, (uint64_t (*)(uint64_t))sub_241D3DFDC);
}

uint64_t sub_241D3DFDC(char *a1)
{
  uint64_t v2 = *(void **)&a1[qword_268D4BA80];
  id v3 = objc_msgSend(v2, sel_trailingAnchor);
  id v4 = objc_msgSend(a1, sel_contentView);
  id v5 = objc_msgSend(v4, byte_2650F7494);

  id v52 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 0.0);
  LODWORD(v6) = 1132068864;
  objc_msgSend(v52, sel_setPriority_, v6);
  sub_241D2B5F0();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_241DB3870;
  id v8 = objc_msgSend(v2, sel_topAnchor);
  id v9 = objc_msgSend(a1, (SEL)&off_2650F7298);
  id v10 = objc_msgSend(v9, sel_topAnchor);

  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, 0.0);
  *(void *)(v7 + 32) = v11;
  uint64_t v54 = qword_268D4BA88;
  id v12 = objc_msgSend(*(id *)&a1[qword_268D4BA88], sel_topAnchor);
  id v13 = objc_msgSend(a1, (SEL)&off_2650F7298);
  id v14 = objc_msgSend(v13, sel_topAnchor);

  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, 0.0);
  *(void *)(v7 + 40) = v15;
  id v16 = *(void **)&a1[qword_268D4BA90];
  id v17 = objc_msgSend(v16, sel_topAnchor);
  id v18 = objc_msgSend(v2, sel_bottomAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 0.0);

  *(void *)(v7 + 48) = v19;
  id v20 = objc_msgSend(a1, (SEL)&off_2650F7298);
  id v21 = objc_msgSend(v20, sel_bottomAnchor);

  id v22 = objc_msgSend(v16, sel_bottomAnchor);
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v22, 0.0);

  *(void *)(v7 + 56) = v23;
  id v24 = objc_msgSend(v2, sel_leadingAnchor);
  id v25 = objc_msgSend(a1, (SEL)&off_2650F7298);
  id v26 = objc_msgSend(v25, sel_leadingAnchor);

  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26, 0.0);
  *(void *)(v7 + 64) = v27;
  id v28 = objc_msgSend(v2, sel_trailingAnchor);
  id v29 = objc_msgSend(*(id *)&a1[v54], sel_leadingAnchor);
  id v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v29, 0.0);

  *(void *)(v7 + 72) = v30;
  *(void *)(v7 + 80) = v52;
  objc_super v31 = *(void **)&a1[v54];
  id v53 = v52;
  id v32 = objc_msgSend(v31, sel_trailingAnchor);
  id v33 = objc_msgSend(a1, (SEL)&off_2650F7298);
  id v34 = objc_msgSend(v33, sel_trailingAnchor);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 0.0);
  *(void *)(v7 + 88) = v35;
  id v36 = objc_msgSend(v16, sel_leadingAnchor);
  id v37 = objc_msgSend(a1, (SEL)&off_2650F7298);
  id v38 = objc_msgSend(v37, sel_leadingAnchor);

  id v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v38, 0.0);
  *(void *)(v7 + 96) = v39;
  id v40 = objc_msgSend(v16, sel_trailingAnchor);
  id v41 = objc_msgSend(a1, (SEL)&off_2650F7298);
  id v42 = objc_msgSend(v41, sel_trailingAnchor);

  id v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v42, 0.0);
  *(void *)(v7 + 104) = v43;
  id v44 = objc_msgSend(a1, (SEL)&off_2650F7298);
  id v45 = objc_msgSend(v44, sel_trailingAnchor);

  id v46 = objc_msgSend(v16, sel_trailingAnchor);
  id v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v46, 0.0);

  *(void *)(v7 + 112) = v47;
  id v48 = objc_msgSend(v2, sel_centerYAnchor);
  id v49 = objc_msgSend(*(id *)&a1[v54], sel_centerYAnchor);
  id v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

  *(void *)(v7 + 120) = v50;
  sub_241DAAB10();

  return v7;
}

uint64_t sub_241D3E61C()
{
  return sub_241D3E63C(&qword_268D4BAA8, (uint64_t (*)(uint64_t))sub_241D3E6A4);
}

uint64_t sub_241D3E63C(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v2 + *a1);
  if (v4)
  {
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = a2(v2);
    *(void *)(v2 + v3) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_241D3E6A4(char *a1)
{
  uint64_t v2 = *(void **)&a1[qword_268D4BA80];
  id v3 = objc_msgSend(v2, sel_trailingAnchor);
  id v4 = objc_msgSend(a1, sel_contentView);
  id v5 = objc_msgSend(v4, sel_trailingAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 0.0);
  LODWORD(v7) = 1132068864;
  uint64_t v51 = v6;
  objc_msgSend(v6, sel_setPriority_, v7);
  sub_241D2B5F0();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_241DB3880;
  id v9 = objc_msgSend(v2, sel_topAnchor);
  id v10 = objc_msgSend(a1, (SEL)&off_2650F7298);
  id v11 = objc_msgSend(v10, sel_topAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, 10.0);
  *(void *)(v8 + 32) = v12;
  uint64_t v53 = qword_268D4BA88;
  id v13 = objc_msgSend(*(id *)&a1[qword_268D4BA88], sel_topAnchor);
  id v14 = objc_msgSend(a1, (SEL)&off_2650F7298);
  id v15 = objc_msgSend(v14, sel_topAnchor);

  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, 10.0);
  *(void *)(v8 + 40) = v16;
  id v17 = *(void **)&a1[qword_268D4BA90];
  id v18 = objc_msgSend(v17, sel_topAnchor);
  id v19 = objc_msgSend(v2, sel_bottomAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 10.0);

  *(void *)(v8 + 48) = v20;
  id v21 = objc_msgSend(a1, sel_contentView);
  id v22 = objc_msgSend(v21, sel_bottomAnchor);

  id v23 = objc_msgSend(v17, sel_bottomAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 14.0);

  *(void *)(v8 + 56) = v24;
  id v25 = objc_msgSend(v2, sel_leadingAnchor);
  id v26 = objc_msgSend(a1, sel_contentView);
  id v27 = objc_msgSend(v26, sel_leadingAnchor);

  if (qword_268D4B2F8 != -1) {
    swift_once();
  }
  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, *(double *)&qword_268D4BA60);

  *(void *)(v8 + 64) = v28;
  id v29 = objc_msgSend(v2, sel_trailingAnchor);
  id v30 = objc_msgSend(*(id *)&a1[v53], sel_leadingAnchor);
  id v31 = objc_msgSend(v29, (SEL)&off_2650F7300 + 7, v30, -*(double *)&qword_268D4BA60);

  *(void *)(v8 + 72) = v31;
  *(void *)(v8 + 80) = v51;
  id v32 = *(void **)&a1[v53];
  id v52 = v51;
  id v33 = objc_msgSend(v32, sel_trailingAnchor);
  id v34 = objc_msgSend(a1, sel_contentView);
  id v35 = objc_msgSend(v34, sel_trailingAnchor);

  id v36 = objc_msgSend(v33, (SEL)&off_2650F7300 + 7, v35, -*(double *)&qword_268D4BA60);
  *(void *)(v8 + 88) = v36;
  id v37 = objc_msgSend(v17, sel_leadingAnchor);
  id v38 = objc_msgSend(a1, sel_contentView);
  id v39 = objc_msgSend(v38, sel_readableContentGuide);

  id v40 = objc_msgSend(v39, sel_leadingAnchor);
  id v41 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v40);

  *(void *)(v8 + 96) = v41;
  id v42 = objc_msgSend(v17, sel_trailingAnchor);
  id v43 = objc_msgSend(a1, sel_contentView);
  id v44 = objc_msgSend(v43, sel_readableContentGuide);

  id v45 = objc_msgSend(v44, sel_trailingAnchor);
  id v46 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v45);

  *(void *)(v8 + 104) = v46;
  id v47 = objc_msgSend(v2, sel_centerYAnchor);
  id v48 = objc_msgSend(*(id *)&a1[v53], sel_centerYAnchor);
  id v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v48);

  *(void *)(v8 + 112) = v49;
  sub_241DAAB10();

  return v8;
}

void sub_241D3ECF0()
{
  uint64_t v1 = v0 + qword_268D4BA78;
  swift_beginAccess();
  sub_241D2AED8(v1, (uint64_t)v8);
  if (v9)
  {
    sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
    type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
    if (swift_dynamicCast())
    {
      if ((*(unsigned char *)(v7 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_hasPadding) & 1) == 0)
      {
        id v5 = self;
        sub_241D3E61C();
        sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
        id v6 = (void *)sub_241DAAAF0();
        swift_bridgeObjectRelease();
        objc_msgSend(v5, sel_deactivateConstraints_, v6);

        sub_241D3DFBC();
        id v4 = (void *)sub_241DAAAF0();
        swift_bridgeObjectRelease();
        objc_msgSend(v5, sel_activateConstraints_, v4);
        swift_release();
        goto LABEL_7;
      }
      swift_release();
    }
  }
  else
  {
    sub_241D2AE50((uint64_t)v8);
  }
  uint64_t v2 = self;
  sub_241D3DFBC();
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
  id v3 = (void *)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v3);

  sub_241D3E61C();
  id v4 = (void *)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v4);
LABEL_7:
}

id sub_241D3EEF8()
{
  uint64_t v1 = (uint64_t)&v0[qword_268D4BA78];
  swift_beginAccess();
  sub_241D2AED8(v1, (uint64_t)v23);
  if (!v24)
  {
    sub_241D2AE50((uint64_t)v23);
    goto LABEL_6;
  }
  sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
  type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    uint64_t v3 = 0;
    goto LABEL_7;
  }
  unint64_t v2 = *(void *)(v22 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_attachments);
  swift_bridgeObjectRetain();
  swift_release();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_241DAB0A0();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
LABEL_7:
  BOOL v4 = v3 < 2;
  objc_msgSend(*(id *)&v0[qword_268D4BA88], sel_setHidden_, v4);
  id v5 = sub_241D3DB74();
  objc_msgSend(v5, sel_setActive_, v4);

  id v6 = *(void **)&v0[qword_268D4BA80];
  sub_241D2AED8(v1, (uint64_t)v23);
  if (v24)
  {
    sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
    type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
    if (swift_dynamicCast())
    {
      uint64_t v7 = *(void *)(v22 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_title + 8);
      swift_bridgeObjectRetain();
      swift_release();
      if (v7)
      {
        uint64_t v8 = (void *)sub_241DAA950();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
  }
  else
  {
    sub_241D2AE50((uint64_t)v23);
  }
  uint64_t v8 = 0;
LABEL_13:
  objc_msgSend(v6, sel_setText_, v8);

  id v9 = objc_msgSend(v6, sel_text);
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = sub_241DAA990();
    unint64_t v13 = v12;

    swift_bridgeObjectRelease();
    uint64_t v14 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0) {
      uint64_t v14 = v11 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v15 = v14 == 0;
  }
  else
  {
    BOOL v15 = 1;
  }
  objc_msgSend(v6, sel_setHidden_, v15);
  id v16 = *(char **)&v0[qword_268D4BA90];
  sub_241D2AED8(v1, (uint64_t)v23);
  if (v24)
  {
    sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
    type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
    if (swift_dynamicCast()) {
      uint64_t v17 = v22;
    }
    else {
      uint64_t v17 = 0;
    }
  }
  else
  {
    sub_241D2AE50((uint64_t)v23);
    uint64_t v17 = 0;
  }
  uint64_t v18 = OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionImagePreviewView_item;
  *(void *)&v16[OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionImagePreviewView_item] = v17;
  swift_retain();
  swift_release();
  uint64_t v19 = *(void *)&v16[v18];
  if (v19) {
    id v20 = objc_retain(*(id *)(v19
  }
                            + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_previewImage));
  else {
    id v20 = 0;
  }
  objc_msgSend(v16, sel_setImage_, v20);

  objc_msgSend(v16, sel_setNeedsLayout);
  swift_release();
  sub_241D3ECF0();
  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_241D3F288()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for VisionPrescriptionViewAttachmentCell(0);
  objc_msgSendSuper2(&v13, sel_layoutSubviews);
  uint64_t v1 = (uint64_t)v0 + qword_268D4BA78;
  swift_beginAccess();
  sub_241D2AED8(v1, (uint64_t)v11);
  if (v12)
  {
    sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
    type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      id v3 = objc_msgSend(v0, sel_contentView);
      objc_msgSend(v3, sel_bounds);
      double v5 = v4;
      double v7 = v6;

      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v0;
      id v9 = v0;
      sub_241D40218(v10, (void (*)(void))sub_241D41DE8, v8, v5, v7);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    uint64_t result = sub_241D2AE50((uint64_t)v11);
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_241D3F3FC(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = objc_msgSend(a1, sel_UIImage);
    if (v3)
    {
      id v4 = v3;
      objc_msgSend(*(id *)(a2 + qword_268D4BA90), sel_setImage_);
    }
  }
}

void sub_241D3F484(void *a1)
{
  id v1 = a1;
  sub_241D3F288();
}

uint64_t sub_241D3F4CC()
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  sub_241D2AE50(v0 + qword_268D4BA78);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_241D3F57C()
{
  return sub_241D412BC(0, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionViewAttachmentCell);
}

uint64_t sub_241D3F598(uint64_t a1)
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  sub_241D2AE50(a1 + qword_268D4BA78);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241D3F654()
{
  return type metadata accessor for VisionPrescriptionViewAttachmentCell(0);
}

uint64_t sub_241D3F65C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268D4BA78;
  swift_beginAccess();
  return sub_241D2AED8(v3, a1);
}

uint64_t sub_241D3F6B0(uint64_t a1)
{
  uint64_t v3 = v1 + qword_268D4BA78;
  swift_beginAccess();
  sub_241D2ADC0(a1, v3);
  swift_endAccess();
  sub_241D3EEF8();
  return sub_241D2AE50(a1);
}

id (*sub_241D3F720(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241D3F780;
}

id sub_241D3F780(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_241D3EEF8();
  }
  return result;
}

uint64_t sub_241D3F7B4()
{
  uint64_t v1 = v0 + qword_268D4BA70;
  swift_beginAccess();
  return MEMORY[0x24563A650](v1);
}

void sub_241D3F800(void *a1)
{
}

void (*sub_241D3F858(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = qword_268D4BA70;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x24563A650](v5);
  return sub_241D3F8DC;
}

void sub_241D3F8DC(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }

  free(v3);
}

void sub_241D3F958()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_241DAA2E0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  double v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v29 - v7;
  uint64_t v9 = v1 + qword_268D4BA78;
  swift_beginAccess();
  sub_241D2AED8(v9, (uint64_t)v31);
  if (!v31[3])
  {
    sub_241D2AE50((uint64_t)v31);
    goto LABEL_9;
  }
  sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
  type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_241DAA2B0();
    id v16 = sub_241DAA2D0();
    os_log_type_t v17 = sub_241DAAC30();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v31[0] = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v20 = sub_241DAB1F0();
      uint64_t v30 = sub_241D48854(v20, v21, v31);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v16, v17, "[%s] Item was not of type visionPrescriptionViewAttachmentItem", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v19, -1, -1);
      MEMORY[0x24563A5D0](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return;
  }
  uint64_t v10 = v30;
  uint64_t v11 = v1 + qword_268D4BA70;
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x24563A650](v11);
  if (v12)
  {
    objc_super v13 = (void *)v12;
    unint64_t v14 = *(void *)(v10 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_attachments);
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_241DAB0A0();
      swift_bridgeObjectRelease();
      if (v28)
      {
LABEL_6:
        if (*(void *)(*(void *)(v10
                                   + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_data)
                       + 16))
        {
          id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F16098]), sel_init);
          objc_msgSend(v15, sel_setDataSource_, v10);
          objc_msgSend(v15, sel_setDelegate_, v1);
          objc_msgSend(v15, sel_setCurrentPreviewItemIndex_, 0);
          objc_msgSend(v13, sel_presentViewController_animated_completion_, v15, 1, 0);
          swift_release();

          return;
        }
      }
    }
    else if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_6;
    }
    swift_release();

    return;
  }
  sub_241DAA2B0();
  uint64_t v22 = sub_241DAA2D0();
  os_log_type_t v23 = sub_241DAAC30();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v30 = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    v29[1] = v24 + 4;
    uint64_t v26 = sub_241DAB1F0();
    v29[2] = sub_241D48854(v26, v27, &v30);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v22, v23, "[%s] Could not get parent view controller", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v25, -1, -1);
    MEMORY[0x24563A5D0](v24, -1, -1);
    swift_release();
  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

void sub_241D3FE2C(void *a1)
{
  id v1 = a1;
  sub_241D3F958();
}

id sub_241D3FE78()
{
  return objc_msgSend(*v0, sel_presentPreviewViewController);
}

uint64_t sub_241D3FE88@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 1;
  uint64_t v2 = *MEMORY[0x263F440D8];
  uint64_t v3 = sub_241DA9CB0();
  uint64_t v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_241D3FF0C()
{
  uint64_t v1 = sub_241DAB1F0();
  sub_241DAAA50();
  sub_241DA9780();
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_241D3FFA0()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_uuid;
  uint64_t v2 = sub_241DA97B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_241D4008C()
{
  return type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
}

uint64_t type metadata accessor for VisionPrescriptionViewAttachmentItem(uint64_t a1)
{
  return sub_241D2AC88(a1, qword_268D4BAD0);
}

uint64_t sub_241D400B4()
{
  uint64_t result = sub_241DA97B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241D40180()
{
  return sub_241D3FF0C();
}

id sub_241D401A4()
{
  unint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    id v3 = objc_msgSend(self, sel_sharedGenerator);
    uint64_t v4 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v3;
    id v2 = v3;

    unint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

void sub_241D40218(uint64_t a1, void (*a2)(void), uint64_t a3, double a4, double a5)
{
  double v6 = v5;
  uint64_t v68 = a2;
  uint64_t v69 = a3;
  uint64_t v10 = *v5;
  uint64_t v11 = sub_241DAA2E0();
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v65 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v66 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241DAA260();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_241DAA860();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
  uint64_t *v20 = sub_241DAAD00();
  (*(void (**)(uint64_t *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x263F8F0E0], v17);
  char v21 = sub_241DAA870();
  (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v67 = v10;
  uint64_t v22 = (void *)v6[3];
  if (!v22) {
    goto LABEL_13;
  }
  id v23 = v22;
  swift_retain();
  uint64_t v24 = sub_241D3FF0C();
  uint64_t v26 = v25;
  if (v24 == sub_241D3FF0C() && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
LABEL_7:
    objc_msgSend(v23, sel_size);
    double v30 = v29;
    double v32 = v31;
    swift_release();

    if (v30 == a4 && v32 == a5) {
      return;
    }
    goto LABEL_11;
  }
  char v28 = sub_241DAB160();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_7;
  }
  swift_release();

LABEL_11:
  id v33 = (void *)v6[3];
  if (v33)
  {
    sub_241D41B6C((void *)v6[3]);
    id v34 = v33;
    sub_241D41BAC(v33);
    id v35 = sub_241D401A4();
    objc_msgSend(v35, sel_cancelRequest_, v34);
  }
LABEL_13:
  uint64_t v36 = sub_241D417E8(a1);
  if (v36)
  {
    id v39 = (void *)v36;
    uint64_t v40 = v37;
    unint64_t v41 = v38;
    sub_241D41560(v37, v38);
    id v42 = objc_msgSend(v39, sel_contentType);
    sub_241DAA230();

    sub_241DAA220();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    id v43 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v43, sel_scale);
    double v45 = v44;

    id v46 = objc_allocWithZone(MEMORY[0x263F160C8]);
    id v47 = (void *)sub_241DA96E0();
    id v48 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    id v49 = objc_msgSend(v46, sel_initWithData_contentType_size_scale_representationTypes_, v47, v48, -1, a4, a5, v45);
    sub_241D415B8(v40, v41);

    id v50 = (void *)v6[3];
    v6[3] = v49;
    v6[4] = a1;
    id v51 = v49;
    swift_retain();
    sub_241D41BAC(v50);
    id v52 = sub_241D401A4();
    uint64_t v53 = (void *)swift_allocObject();
    uint64_t v54 = v69;
    v53[2] = v68;
    v53[3] = v54;
    v53[4] = v67;
    aBlock[4] = (uint64_t)sub_241D41C24;
    aBlock[5] = (uint64_t)v53;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_241D8E378;
    aBlock[3] = (uint64_t)&unk_26F5D0040;
    long long v55 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v52, sel_generateBestRepresentationForRequest_completionHandler_, v51, v55);
    _Block_release(v55);

    sub_241D415B8(v40, v41);
  }
  else
  {
    unint64_t v56 = v66;
    sub_241DAA290();
    int v57 = sub_241DAA2D0();
    os_log_type_t v58 = sub_241DAAC10();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      aBlock[0] = v60;
      *(_DWORD *)uint64_t v59 = 136315138;
      uint64_t v61 = sub_241DAB1F0();
      void aBlock[6] = sub_241D48854(v61, v62, aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v57, v58, "[%s] Asked to render preview image, but no attachments or data found", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v60, -1, -1);
      MEMORY[0x24563A5D0](v59, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v64 + 8))(v56, v65);
    v68(0);
  }
}

uint64_t sub_241D40904(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v35[1] = a5;
  uint64_t v9 = sub_241DAA2E0();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241DAA830();
  uint64_t v36 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241DAA850();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_241DAA290();
    id v19 = a2;
    id v20 = a2;
    char v21 = sub_241DAA2D0();
    os_log_type_t v22 = sub_241DAAC10();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      aBlock[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v25 = sub_241DAB1F0();
      uint64_t v39 = sub_241D48854(v25, v26, aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v39 = (uint64_t)a2;
      id v27 = a2;
      sub_241D41D58(0, (unint64_t *)&unk_268D4BC60, (unint64_t *)&qword_268D4C3D0);
      uint64_t v28 = sub_241DAA9B0();
      uint64_t v39 = sub_241D48854(v28, v29, aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241D1C000, v21, v22, "[%s] QLThumbnailGenerator request returned error: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v24, -1, -1);
      MEMORY[0x24563A5D0](v23, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v11, v38);
  }
  else
  {
    sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
    uint64_t v38 = sub_241DAAD00();
    double v30 = (void *)swift_allocObject();
    v30[2] = a3;
    v30[3] = a4;
    v30[4] = a1;
    aBlock[4] = (uint64_t)sub_241D41C88;
    aBlock[5] = (uint64_t)v30;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_241D3A278;
    aBlock[3] = (uint64_t)&unk_26F5D0090;
    double v31 = _Block_copy(aBlock);
    id v32 = a1;
    swift_retain();
    swift_release();
    sub_241DAA840();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_241D41D10((unint64_t *)&qword_268D4D390, MEMORY[0x263F8F030]);
    sub_241D41CB8();
    sub_241D41D10((unint64_t *)&qword_268D4D3A0, (void (*)(uint64_t))sub_241D41CB8);
    sub_241DAAF60();
    id v33 = (void *)v38;
    MEMORY[0x245639900](0, v18, v14, v31);
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

uint64_t sub_241D40E40()
{
  sub_241D41BAC(*(void **)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionImagePreviewProvider()
{
  return self;
}

id sub_241D410AC()
{
  uint64_t v1 = OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionImagePreviewView_imageHeightAnchorConstraint;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionImagePreviewView_imageHeightAnchorConstraint];
  if (v2) {
    objc_msgSend(v2, sel_setActive_, 0);
  }
  id v3 = objc_msgSend(v0, sel_image);
  if (v3 && (uint64_t v4 = v3, objc_msgSend(v3, sel_size), v6 = v5, v8 = v7, v4, v6 > 0.0))
  {
    id v9 = objc_msgSend(v0, sel_heightAnchor);
    id v10 = objc_msgSend(v0, sel_widthAnchor);
    id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_multiplier_, v10, fmin(v8 / v6, 1.0));
  }
  else
  {
    id v10 = objc_msgSend(v0, sel_heightAnchor);
    id v11 = objc_msgSend(v10, sel_constraintEqualToConstant_, 0.0);
  }

  uint64_t v12 = *(void **)&v0[v1];
  *(void *)&v0[v1] = v11;

  id result = *(id *)&v0[v1];
  if (result)
  {
    return objc_msgSend(result, sel_setActive_, 1);
  }
  return result;
}

id sub_241D412A4(uint64_t a1)
{
  return sub_241D412BC(a1, type metadata accessor for VisionPrescriptionImagePreviewView);
}

id sub_241D412BC(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t type metadata accessor for VisionPrescriptionImagePreviewView()
{
  return self;
}

id sub_241D41364(uint64_t a1)
{
  return *(id *)(a1 + qword_268D4BA90);
}

id sub_241D4150C()
{
  return sub_241D412BC(0, type metadata accessor for QLItemSingleDataProvider);
}

uint64_t type metadata accessor for QLItemSingleDataProvider()
{
  return self;
}

uint64_t sub_241D41560(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_241D415B8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void sub_241D41610()
{
  uint64_t v1 = v0;
  uint64_t v2 = qword_268D4BA68;
  type metadata accessor for VisionPrescriptionImagePreviewProvider();
  id v3 = (void *)swift_allocObject();
  v3[3] = 0;
  v3[4] = 0;
  v3[2] = 0;
  *(void *)&v1[v2] = v3;
  swift_unknownObjectWeakInit();
  objc_super v4 = &v1[qword_268D4BA78];
  *(_OWORD *)objc_super v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  uint64_t v5 = qword_268D4BA80;
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  double v7 = (void *)sub_241DAADA0();
  objc_msgSend(v6, sel_setFont_, v7);

  objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v5] = v6;
  uint64_t v8 = qword_268D4BA88;
  *(void *)&v1[v8] = sub_241D3DA40();
  uint64_t v9 = qword_268D4BA90;
  id v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionImagePreviewView()), sel_init);
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v9] = v10;
  *(void *)&v1[qword_268D4BA98] = 0;
  *(void *)&v1[qword_268D4BAA0] = 0;
  *(void *)&v1[qword_268D4BAA8] = 0;

  sub_241DAB080();
  __break(1u);
}

uint64_t sub_241D417E8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_attachments);
  if (!(v2 >> 62))
  {
    id v3 = *(void **)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_241DAB0A0();
  id v3 = (void *)result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x245639BE0](0, v2);
LABEL_6:
    id v3 = v5;
    swift_bridgeObjectRelease();
    id v6 = *(void **)(a1 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_data);
    if (v6[2])
    {
      sub_241D41560(v6[4], v6[5]);
    }
    else
    {

      return 0;
    }
    return (uint64_t)v3;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v2 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

id sub_241D418E8(unint64_t a1)
{
  uint64_t v3 = sub_241DAA260();
  uint64_t v4 = *(void *)(v3 - 8);
  id result = (id)MEMORY[0x270FA5388](v3);
  double v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_attachments);
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((a1 & 0x8000000000000000) == 0)
    {
      if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
      {
        id result = *(id *)(v8 + 8 * a1 + 32);
        uint64_t v9 = result;
        goto LABEL_5;
      }
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)MEMORY[0x245639BE0](a1, v8);
  id result = (id)swift_bridgeObjectRelease();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_data);
  if (*(void *)(v10 + 16) > a1)
  {
    uint64_t v11 = v10 + 16 * a1;
    uint64_t v12 = *(void *)(v11 + 32);
    unint64_t v13 = *(void *)(v11 + 40);
    uint64_t v14 = (objc_class *)type metadata accessor for QLItemSingleDataProvider();
    uint64_t v15 = (char *)objc_allocWithZone(v14);
    uint64_t v16 = (uint64_t *)&v15[OBJC_IVAR____TtC21VisionHealthAppPluginP33_CF6C513206421B216281CAD0791521A824QLItemSingleDataProvider_data];
    uint64_t *v16 = v12;
    v16[1] = v13;
    sub_241D41560(v12, v13);
    v24.receiver = v15;
    v24.super_class = v14;
    id v17 = objc_msgSendSuper2(&v24, sel_init);
    id v18 = objc_msgSend(v9, sel_contentType);
    sub_241DAA230();

    sub_241DAA220();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    id v19 = objc_msgSend(v9, sel_name);
    sub_241DAA990();

    id v20 = objc_allocWithZone(MEMORY[0x263F16090]);
    char v21 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    os_log_type_t v22 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(v20, sel_initWithDataProvider_contentType_previewTitle_, v17, v21, v22);

    return v23;
  }
LABEL_11:
  __break(1u);
  return result;
}

void *sub_241D41B6C(void *result)
{
  if (result)
  {
    id v1 = result;
    return (void *)swift_retain();
  }
  return result;
}

void *sub_241D41BAC(void *result)
{
  if (result)
  {

    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_241D41BEC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241D41C24(void *a1, void *a2)
{
  return sub_241D40904(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_241D41C30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241D41C40()
{
  return swift_release();
}

uint64_t sub_241D41C48()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241D41C88()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

void sub_241D41CB8()
{
  if (!qword_268D4BC50)
  {
    sub_241DAA830();
    unint64_t v0 = sub_241DAAB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BC50);
    }
  }
}

uint64_t sub_241D41D10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241D41D58(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241D2B54C(255, a3);
    unint64_t v4 = sub_241DAAEF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241D41DB0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_241D41DE8(void *a1)
{
  sub_241D3F3FC(a1, *(void *)(v1 + 16));
}

uint64_t sub_241D41DF8(void *a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_241DA97B0();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v6);
  id v43 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D42668(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v38 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D4269C(0);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D42734();
  uint64_t v40 = v15;
  uint64_t v42 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D42810();
  uint64_t v41 = v18;
  uint64_t v36 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v39 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  os_log_type_t v22 = (char *)&v35 - v21;
  swift_beginAccess();
  sub_241D426D0(0, &qword_268D4BD18, (uint64_t (*)(uint64_t))sub_241D219B0, MEMORY[0x263EFDE58]);
  sub_241DAA6A0();
  swift_endAccess();
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 16) = a2;
  *(void *)(v23 + 24) = a1;
  *(void *)(v23 + 32) = a3;
  *(void *)(v23 + 40) = v37;
  sub_241D426D0(0, &qword_268D4B820, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
  sub_241D428DC(&qword_268D4BD00, sub_241D4269C);
  id v24 = a1;
  swift_retain();
  sub_241DAA750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v25 = v36;
  sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
  v46[0] = (id)sub_241DAAD00();
  uint64_t v26 = sub_241DAACE0();
  uint64_t v27 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v38, 1, 1, v26);
  sub_241D428DC(&qword_268D4BD10, (void (*)(uint64_t))sub_241D42734);
  sub_241D3772C();
  uint64_t v28 = v40;
  sub_241DAA7B0();
  sub_241D43B68(v27, (uint64_t (*)(void))sub_241D42668);

  unint64_t v29 = v17;
  double v30 = v22;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v28);
  uint64_t v31 = v41;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v39, v30, v41);
  sub_241DAA050();
  swift_allocObject();
  sub_241D428DC(&qword_268D4BD20, (void (*)(uint64_t))sub_241D42810);
  sub_241DAA060();
  sub_241DA9B60();
  swift_release();
  sub_241D4397C();
  sub_241D428DC(&qword_268D4BD30, (void (*)(uint64_t))sub_241D4397C);
  sub_241DA9B40();
  swift_release();
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  v46[0] = (id)0x74497265746F6F46;
  v46[1] = (id)0xEB000000005F6D65;
  id v32 = v43;
  sub_241DA97A0();
  sub_241DA9780();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v45);
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  v46[3] = (id)sub_241DAA140();
  v46[4] = (id)sub_241D428DC(&qword_268D4B738, MEMORY[0x263F44568]);
  sub_241D2C600((uint64_t *)v46);
  sub_241DAA130();
  sub_241D439DC();
  sub_241D428DC(&qword_268D4BD40, (void (*)(uint64_t))sub_241D439DC);
  uint64_t v33 = sub_241DA9B50();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v31);
  sub_241D36E44((uint64_t)v46);
  sub_241D428DC(&qword_268D4BD48, (void (*)(uint64_t))sub_241D43A70);
  return v33;
}

void sub_241D42668(uint64_t a1)
{
}

void sub_241D4269C(uint64_t a1)
{
}

void sub_241D426D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241D42734()
{
  if (!qword_268D4BCF8)
  {
    sub_241D4269C(255);
    sub_241D426D0(255, &qword_268D4B820, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
    sub_241D428DC(&qword_268D4BD00, sub_241D4269C);
    unint64_t v0 = sub_241DAA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BCF8);
    }
  }
}

void sub_241D42810()
{
  if (!qword_268D4BD08)
  {
    sub_241D42734();
    sub_241D28BF4(255, (unint64_t *)&qword_268D4BC40);
    sub_241D428DC(&qword_268D4BD10, (void (*)(uint64_t))sub_241D42734);
    sub_241D3772C();
    unint64_t v0 = sub_241DAA580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BD08);
    }
  }
}

uint64_t sub_241D428DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241D42924@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X2>, char *a4@<X3>, void (*a5)(void, void)@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v82 = a5;
  uint64_t v83 = a4;
  int v85 = a2;
  uint64_t v9 = sub_241DA97B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D219B0();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_241DA96C0();
  unint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  os_log_type_t v22 = (char *)v74 - v21;
  uint64_t v23 = a1;
  unint64_t v25 = v24;
  sub_241D43B04(v23, (uint64_t)v15);
  int v26 = (*(uint64_t (**)(char *, uint64_t, unint64_t))(v17 + 48))(v15, 1, v25);
  uint64_t v86 = v9;
  uint64_t v87 = a6;
  if (v26 == 1)
  {
    sub_241D43B68((uint64_t)v15, (uint64_t (*)(void))sub_241D219B0);
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
    sub_241D426D0(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    uint64_t v28 = *(void *)(sub_241DA9C00() - 8);
    unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v30 = swift_allocObject();
    long long v80 = xmmword_241DB2C80;
    *(_OWORD *)(v30 + 16) = xmmword_241DB2C80;
    uint64_t v84 = v30;
    unint64_t v81 = v30 + v29;
    sub_241D426D0(0, &qword_268D4B740, (uint64_t (*)(uint64_t))sub_241D2E674, v27);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = v80;
    *(void *)&long long v80 = v31 + 32;
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_241DA95E0();
    unint64_t v78 = v33;
    uint64_t v79 = v32;
    id v34 = (void *)sub_241DAA950();
    *(void *)&long long v77 = objc_msgSend(self, sel_systemImageNamed_, v34);

    uint64_t v35 = (void *)swift_allocObject();
    void v35[2] = a3;
    uint64_t v36 = v82;
    v35[3] = v83;
    v35[4] = v36;
    type metadata accessor for VisionPrescriptionManualDataEntryAddImageButtonCell();
    id v37 = a3;
    swift_retain();
    sub_241DA9A30();
    sub_241DA97A0();
    sub_241DA9780();
    uint64_t v38 = *(void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v39 = v86;
    v38(v12, v86);
    *(void *)(v31 + 56) = sub_241DA9D90();
    *(void *)(v31 + 64) = sub_241D428DC(&qword_268D4BD60, MEMORY[0x263F441B8]);
    sub_241D2C600((uint64_t *)v80);
    sub_241DA9D80();
    sub_241DA97A0();
    sub_241DA9780();
    v38(v12, v39);
    uint64_t result = sub_241DA9BF0();
    goto LABEL_12;
  }
  *(void *)&long long v80 = v12;
  (*(void (**)(char *, char *, unint64_t))(v17 + 32))(v22, v15, v25);
  sub_241D28BF4(0, &qword_268D4BD68);
  id v41 = static UIImage.pdfThumbnail(from:)((uint64_t)v22);
  uint64_t v42 = *(void (**)(char *, char *, unint64_t))(v17 + 16);
  uint64_t v83 = v22;
  v42(v20, v22, v25);
  unint64_t v81 = v25;
  if (v41)
  {
    unint64_t v78 = v17;
    uint64_t v79 = v10;
    uint64_t v82 = *(void (**)(void, void))(v17 + 8);
    v82(v20, v25);
    id v43 = a3;
LABEL_9:
    uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
    sub_241D426D0(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    uint64_t v45 = *(void *)(sub_241DA9C00() - 8);
    unint64_t v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_241DB2C80;
    uint64_t v84 = v47;
    *(void *)&long long v77 = v47 + v46;
    sub_241D426D0(0, &qword_268D4B740, (uint64_t (*)(uint64_t))sub_241D2E674, v44);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_241DB2C60;
    uint64_t v49 = type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
    uint64_t v50 = swift_allocObject();
    type metadata accessor for VisionPrescriptionViewAttachmentCell(0);
    sub_241D428DC(&qword_268D4BD58, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionViewAttachmentCell);
    id v51 = v41;
    *(void *)(v50 + 16) = sub_241DA9A30();
    *(void *)(v50 + 24) = v52;
    sub_241DA97A0();
    uint64_t v53 = (void *)(v50 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_title);
    *uint64_t v53 = 0;
    v53[1] = 0;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v50 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_hasPadding) = 0;
    uint64_t v54 = MEMORY[0x263F8EE78];
    *(void *)(v50 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_attachments) = MEMORY[0x263F8EE78];
    *(void *)(v50 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_data) = v54;
    id v76 = v51;
    *(void *)(v50 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_previewImage) = v51;
    *(void *)(v48 + 56) = v49;
    *(void *)(v48 + 64) = sub_241D428DC(&qword_268D4BD70, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionViewAttachmentItem);
    *(void *)(v48 + 32) = v50;
    uint64_t v75 = (uint64_t *)(v48 + 72);
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_241DA95E0();
    v74[0] = v56;
    v74[1] = v55;
    *(void *)(swift_allocObject() + 16) = v43;
    type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell();
    id v57 = v43;
    sub_241DA9A30();
    uint64_t v58 = v80;
    sub_241DA97A0();
    sub_241DA9780();
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
    uint64_t v60 = v86;
    v59(v58, v86);
    *(void *)(v48 + 96) = sub_241DA9D90();
    *(void *)(v48 + 104) = sub_241D428DC(&qword_268D4BD60, MEMORY[0x263F441B8]);
    sub_241D2C600(v75);
    sub_241DA9D80();
    sub_241DA97A0();
    sub_241DA9780();
    v59(v58, v60);
    sub_241DA9BF0();

    uint64_t result = ((uint64_t (*)(char *, unint64_t))v82)(v83, v81);
    goto LABEL_12;
  }
  id v41 = static UIImage.withData(at:)();
  uint64_t v82 = *(void (**)(void, void))(v17 + 8);
  v82(v20, v25);
  if (v41)
  {
    unint64_t v78 = v17;
    uint64_t v79 = v10;
    id v43 = a3;
    goto LABEL_9;
  }
  uint64_t v79 = v17 + 8;
  uint64_t v61 = v80;
  unint64_t v62 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241D426D0(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  uint64_t v63 = *(void *)(sub_241DA9C00() - 8);
  unint64_t v64 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  uint64_t v65 = swift_allocObject();
  long long v77 = xmmword_241DB2C80;
  *(_OWORD *)(v65 + 16) = xmmword_241DB2C80;
  uint64_t v84 = v65;
  unint64_t v78 = v65 + v64;
  sub_241D426D0(0, &qword_268D4B740, (uint64_t (*)(uint64_t))sub_241D2E674, v62);
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = v77;
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t v67 = sub_241DA95E0();
  id v76 = v68;
  *(void *)&long long v77 = v67;
  *(void *)(swift_allocObject() + 16) = a3;
  type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell();
  id v69 = a3;
  uint64_t v75 = (uint64_t *)sub_241DA9A30();
  uint64_t v70 = v61;
  sub_241DA97A0();
  sub_241DA9780();
  uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  uint64_t v72 = v61;
  uint64_t v73 = v86;
  v71(v72, v86);
  *(void *)(v66 + 56) = sub_241DA9D90();
  *(void *)(v66 + 64) = sub_241D428DC(&qword_268D4BD60, MEMORY[0x263F441B8]);
  sub_241D2C600((uint64_t *)(v66 + 32));
  sub_241DA9D80();
  sub_241DA97A0();
  sub_241DA9780();
  v71(v70, v73);
  sub_241DA9BF0();
  uint64_t result = ((uint64_t (*)(char *, unint64_t))v82)(v83, v81);
LABEL_12:
  *uint64_t v87 = v84;
  return result;
}

uint64_t sub_241D436DC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_241D4371C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241D42924(a1, *(unsigned __int8 *)(v2 + 16), *(void **)(v2 + 24), *(char **)(v2 + 32), *(void (**)(void, void))(v2 + 40), a2);
}

uint64_t sub_241D4372C(void *a1, void *a2, uint64_t a3)
{
  id v6 = objc_msgSend(self, sel_sharedPhotoLibrary);
  uint64_t v7 = sub_241D44214(a1, a2, v6, a3);

  return v7;
}

uint64_t sub_241D437A0()
{
  uint64_t v0 = sub_241DA9D50();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  unint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  id v6 = (char *)&v10 - v5;
  sub_241DA9D00();
  sub_241DA9CD0();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  uint64_t v8 = sub_241DA9D40();
  v7(v4, v0);
  return v8;
}

uint64_t sub_241D438BC()
{
  return sub_241DAAC50();
}

void sub_241D4397C()
{
  if (!qword_268D4BD28)
  {
    sub_241DAA050();
    unint64_t v0 = sub_241DA9B80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BD28);
    }
  }
}

void sub_241D439DC()
{
  if (!qword_268D4BD38)
  {
    sub_241D4397C();
    sub_241D428DC(&qword_268D4BD30, (void (*)(uint64_t))sub_241D4397C);
    unint64_t v0 = sub_241DA9AC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BD38);
    }
  }
}

void sub_241D43A70()
{
  if (!qword_268D4BD50)
  {
    sub_241D439DC();
    sub_241D428DC(&qword_268D4BD40, (void (*)(uint64_t))sub_241D439DC);
    unint64_t v0 = sub_241DA9A70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BD50);
    }
  }
}

uint64_t sub_241D43B04(uint64_t a1, uint64_t a2)
{
  sub_241D219B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241D43B68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241D43BC8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241D43C08(void *a1)
{
  return sub_241D4372C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_241D43C14()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D43C4C()
{
  return sub_241D857CC();
}

uint64_t sub_241D43C70(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a4;
  id v8 = a4;
  swift_retain();
  id v9 = a3;
  sub_241DA9970();

  return swift_release();
}

void sub_241D43D00(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1 == 2)
  {
    MEMORY[0x270F32238](a4);
  }
  else if (a1 == 3)
  {
    sub_241DA6314(4, 0, 0, 0x10100u >> (8 * *(unsigned char *)(a2 + 64)));
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F1F330]), sel_init);
    objc_msgSend(v6, sel_setDelegate_, a3);
    if (a4) {
      objc_msgSend(a4, sel_presentViewController_animated_completion_, v6, 1, 0);
    }
  }
}

void sub_241D43E08(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  sub_241D426D0(0, &qword_268D4BD90, MEMORY[0x263F15180], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = sub_241DAA900();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v21 - v16;
  sub_241DA6314(5, 0, 0, 0x10100u >> (8 * *(unsigned char *)(a2 + 64)));
  id v18 = a3;
  sub_241DAA8D0();
  sub_241DAA8E0();
  sub_241DAA890();
  uint64_t v19 = sub_241DAA8A0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 0, 1, v19);
  sub_241DAA8F0();
  sub_241D28BF4(0, &qword_268D4BD98);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  uint64_t v20 = (void *)sub_241DAAD80();
  sub_241D428DC(&qword_268D4BDA0, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler);
  swift_unknownObjectRetain();
  sub_241DAAD90();
  if (a5)
  {
    objc_msgSend(a5, sel_presentViewController_animated_completion_, v20, 1, 0);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
}

void sub_241D440DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_241DA6314(6, 0, 0, 0x10100u >> (8 * *(unsigned char *)(a2 + 64)));
  id v6 = (id)HKVisionPrescriptionSupportedImageUTTypeIdentifiers();
  sub_241DAA260();
  sub_241DAAB00();

  id v7 = objc_allocWithZone(MEMORY[0x263F82698]);
  uint64_t v8 = (void *)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initForOpeningContentTypes_asCopy_, v8, 1);

  objc_msgSend(v9, sel_setDelegate_, a3);
  objc_msgSend(v9, sel_setAllowsMultipleSelection_, 0);
  if (a4) {
    objc_msgSend(a4, sel_presentViewController_animated_completion_, v9, 1, 0);
  }
}

uint64_t sub_241D44214(void *a1, void *a2, void *a3, uint64_t a4)
{
  unint64_t v41 = MEMORY[0x263F8EE78];
  if (sub_241DA9960())
  {
    sub_241D28BF4(0, &qword_268D4BD78);
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
    id v7 = (void *)sub_241DAA950();
    id v8 = objc_msgSend(self, sel_systemImageNamed_, v7, 0xE000000000000000);

    id v9 = (void *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a2;
    v9[4] = a1;
    id v10 = a1;
    swift_retain();
    id v11 = a2;
    uint64_t v12 = sub_241DAAE20();
    MEMORY[0x2456396D0](v12, v13, v14, v15, v16);
    if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_241DAAB20();
    }
    sub_241DAAB30();
    sub_241DAAB10();
  }
  sub_241D28BF4(0, &qword_268D4BD78);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  unint64_t v17 = (void *)sub_241DAA950();
  id v18 = self;
  id v19 = objc_msgSend(v18, sel_systemImageNamed_, v17, 0xE000000000000000);

  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a4;
  v20[3] = a3;
  v20[4] = a2;
  uint64_t v20[5] = a1;
  id v39 = a1;
  id v21 = a3;
  swift_retain();
  id v22 = a2;
  uint64_t v23 = sub_241DAAE20();
  MEMORY[0x2456396D0](v23, v24, v25, v26, v27);
  if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_241DAAB20();
  }
  sub_241DAAB30();
  sub_241DAAB10();
  sub_241DA95E0();
  uint64_t v28 = (void *)sub_241DAA950();
  id v29 = objc_msgSend(v18, sel_systemImageNamed_, v28, 0xE000000000000000, 0, 0, sub_241D4489C, v20);

  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = a4;
  v30[3] = v22;
  v30[4] = a1;
  swift_retain();
  id v31 = v22;
  id v32 = v39;
  uint64_t v33 = sub_241DAAE20();
  MEMORY[0x2456396D0](v33, v34, v35, v36, v37);
  if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_241DAAB20();
  }
  sub_241DAAB30();
  sub_241DAAB10();
  if (v41 >> 62)
  {
    sub_241D28BF4(0, &qword_268D4BD80);
    swift_bridgeObjectRetain();
    sub_241DAB090();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_241DAB170();
    sub_241D28BF4(0, &qword_268D4BD80);
  }
  swift_bridgeObjectRelease();
  sub_241D28BF4(0, &qword_268D4BD88);
  return sub_241DAADB0();
}

uint64_t sub_241D4484C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_241D4489C(uint64_t a1)
{
  sub_241D43E08(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

void sub_241D448AC(uint64_t a1)
{
  sub_241D440DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_241D448BC(uint64_t a1)
{
  return sub_241D43C70(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_241D448CC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241D44914(uint64_t a1)
{
  sub_241D43D00(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VisionPrescriptionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241D44A84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionError()
{
  return &type metadata for VisionPrescriptionError;
}

unint64_t sub_241D44AC0()
{
  unint64_t result = qword_268D4BDA8;
  if (!qword_268D4BDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4BDA8);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionSourceCell(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4BDE0);
}

uint64_t sub_241D44B34()
{
  return swift_initClassMetadata2();
}

id sub_241D44BA0(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[qword_268D4BDB0];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = MEMORY[0x263F8EE78];
  *(void *)&v4[qword_268D4BDD0] = MEMORY[0x263F8EE78];
  *(void *)&v4[qword_268D4BDD8] = v10;
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  id v11 = v4;
  uint64_t v12 = (void *)sub_241DAADA0();
  id v13 = sub_241D469CC((uint64_t)v12);

  *(void *)&v11[qword_268D4BDB8] = v13;
  uint64_t v14 = (void *)sub_241DAADA0();
  id v15 = sub_241D469CC((uint64_t)v14);

  *(void *)&v11[qword_268D4BDC0] = v15;
  uint64_t v16 = (void *)sub_241DAADA0();
  id v17 = sub_241D469CC((uint64_t)v16);

  *(void *)&v11[qword_268D4BDC8] = v17;
  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for VisionPrescriptionSourceCell(0);
  id v18 = objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  sub_241D44E38();

  return v18;
}

id sub_241D44D70(double a1, double a2, double a3, double a4)
{
  return sub_241D44BA0(a1, a2, a3, a4);
}

void sub_241D44D94(char *a1, uint64_t a2, void *a3)
{
  unsigned int v4 = &a1[qword_268D4BDB0];
  *(_OWORD *)unsigned int v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)&a1[qword_268D4BDD0] = MEMORY[0x263F8EE78];
  *(void *)&a1[qword_268D4BDD8] = v5;
  id v6 = a3;

  sub_241DAB080();
  __break(1u);
}

void sub_241D44E38()
{
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  id v1 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_addSubview_, *(void *)&v0[qword_268D4BDB8]);

  id v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v2, sel_addSubview_, *(void *)&v0[qword_268D4BDC0]);

  id v3 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v3, sel_addSubview_, *(void *)&v0[qword_268D4BDC8]);

  sub_241D44F18();
}

void sub_241D44F18()
{
  id v1 = v0;
  sub_241D2B5F0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241DB33B0;
  id v3 = objc_msgSend(v1, sel_contentView);
  id v4 = objc_msgSend(v3, sel_bottomAnchor);

  uint64_t v5 = *(void **)&v1[qword_268D4BDC0];
  id v6 = objc_msgSend(v5, (SEL)&off_2650F7620 + 5);
  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, 14.0);

  *(void *)(v2 + 32) = v7;
  sub_241DAAB10();
  *(void *)&v1[qword_268D4BDD8] = v2;
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_241DB3050;
  id v9 = *(void **)&v1[qword_268D4BDC8];
  id v10 = objc_msgSend(v9, sel_topAnchor);
  id v11 = objc_msgSend(v5, (SEL)&off_2650F7620 + 5);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(void *)(v8 + 32) = v12;
  id v13 = objc_msgSend(v9, sel_leadingAnchor);
  id v14 = objc_msgSend(v1, sel_contentView);
  id v15 = objc_msgSend(v14, sel_layoutMarginsGuide);

  id v16 = objc_msgSend(v15, sel_leadingAnchor);
  id v17 = objc_msgSend(v13, (SEL)&off_2650F72E8 + 6, v16);

  *(void *)(v8 + 40) = v17;
  id v18 = objc_msgSend(v9, sel_trailingAnchor);
  id v19 = objc_msgSend(v1, sel_contentView);
  id v20 = objc_msgSend(v19, sel_layoutMarginsGuide);

  id v21 = objc_msgSend(v20, sel_trailingAnchor);
  id v22 = objc_msgSend(v18, (SEL)&off_2650F72E8 + 6, v21);

  *(void *)(v8 + 48) = v22;
  id v23 = objc_msgSend(v1, sel_contentView);
  id v24 = objc_msgSend(v23, sel_bottomAnchor);

  id v25 = objc_msgSend(v9, sel_bottomAnchor);
  id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v25, 14.0);

  *(void *)(v8 + 56) = v26;
  sub_241DAAB10();
  *(void *)&v1[qword_268D4BDD0] = v8;
  swift_bridgeObjectRelease();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_241DB3BF0;
  uint64_t v28 = *(void **)&v1[qword_268D4BDB8];
  id v29 = objc_msgSend(v28, sel_topAnchor);
  id v30 = objc_msgSend(v1, sel_contentView);
  id v31 = objc_msgSend(v30, sel_topAnchor);

  id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, 12.0);
  *(void *)(v27 + 32) = v32;
  id v33 = objc_msgSend(v28, sel_leadingAnchor);
  id v34 = objc_msgSend(v1, (SEL)&off_2650F7298);
  id v35 = objc_msgSend(v34, sel_layoutMarginsGuide);

  id v36 = objc_msgSend(v35, sel_leadingAnchor);
  id v37 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v36);

  *(void *)(v27 + 40) = v37;
  id v38 = objc_msgSend(v28, sel_trailingAnchor);
  id v39 = objc_msgSend(v1, sel_contentView);
  id v40 = objc_msgSend(v39, sel_layoutMarginsGuide);

  id v41 = objc_msgSend(v40, sel_trailingAnchor);
  id v42 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v41);

  *(void *)(v27 + 48) = v42;
  id v43 = objc_msgSend(v5, sel_topAnchor);
  id v44 = objc_msgSend(v28, sel_bottomAnchor);
  id v45 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v44);

  *(void *)(v27 + 56) = v45;
  id v46 = objc_msgSend(v5, sel_leadingAnchor);
  id v47 = objc_msgSend(v1, sel_contentView);
  id v48 = objc_msgSend(v47, sel_layoutMarginsGuide);

  id v49 = objc_msgSend(v48, sel_leadingAnchor);
  id v50 = objc_msgSend(v46, (SEL)&off_2650F72E8 + 6, v49);

  *(void *)(v27 + 64) = v50;
  id v51 = objc_msgSend(v5, sel_trailingAnchor);
  id v52 = objc_msgSend(v1, sel_contentView);
  id v53 = objc_msgSend(v52, sel_layoutMarginsGuide);

  id v54 = objc_msgSend(v53, sel_trailingAnchor);
  id v55 = objc_msgSend(v51, (SEL)&off_2650F72E8 + 6, v54);

  *(void *)(v27 + 72) = v55;
  sub_241DAAB10();
  uint64_t v56 = self;
  unint64_t v57 = swift_bridgeObjectRetain();
  sub_241D98A98(v57);
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
  id v58 = (id)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v56, sel_activateConstraints_, v58);
}

uint64_t sub_241D45694()
{
  sub_241D46AA8(0, &qword_268D4BE08, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionInfoItem);
  MEMORY[0x270FA5388](v1 - 8);
  id v3 = &v16[-v2];
  uint64_t v4 = type metadata accessor for VisionPrescriptionInfoItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = v0 + qword_268D4BDB0;
  swift_beginAccess();
  sub_241D2AED8(v8, (uint64_t)v17);
  if (!v18)
  {
    sub_241D2AE50((uint64_t)v17);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    return sub_241D46B60((uint64_t)v3, &qword_268D4BE08, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionInfoItem);
  }
  sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
  int v9 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(v3, v9 ^ 1u, 1, v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_241D46B60((uint64_t)v3, &qword_268D4BE08, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionInfoItem);
  }
  sub_241D46BBC((uint64_t)v3, (uint64_t)v7);
  id v10 = *(void **)(v0 + qword_268D4BDB8);
  swift_bridgeObjectRetain();
  id v11 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setText_, v11);

  id v12 = *(void **)(v0 + qword_268D4BDC0);
  sub_241D45958((uint64_t)v7);
  if (v13)
  {
    id v14 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v14 = 0;
  }
  objc_msgSend(v12, sel_setText_, v14);

  sub_241D45EF0((uint64_t)&v7[*(int *)(v4 + 32)]);
  return sub_241D46C20((uint64_t)v7);
}

uint64_t sub_241D45958(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VisionPrescriptionInfoItem(0);
  uint64_t v3 = sub_241D45B5C(a1 + *(int *)(v2 + 28));
  uint64_t v5 = v4;
  if (v4)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
    if ((*(unsigned char *)(a1 + *(int *)(v2 + 36)) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_241DA95E0();
    }
    sub_241D2B4E4(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_241DB2C80;
    *(void *)(v6 + 56) = MEMORY[0x263F8D310];
    *(void *)(v6 + 64) = sub_241D2B59C();
    *(void *)(v6 + 32) = v3;
    *(void *)(v6 + 40) = v5;
    uint64_t v3 = sub_241DAA960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_241D45B5C(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v2 = sub_241DA9770();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_241DAA2E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = (void *)sub_241DA9730();
  id v11 = (id)HKLocalizedStringForDateAndTemplate();

  if (v11)
  {
    uint64_t v12 = sub_241DAA990();
  }
  else
  {
    sub_241DAA290();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    uint64_t v13 = sub_241DAA2D0();
    os_log_type_t v14 = sub_241DAAC10();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v28 = v26;
      *(_DWORD *)uint64_t v16 = 136446466;
      int v24 = v15;
      uint64_t v17 = sub_241DAB1F0();
      uint64_t v27 = sub_241D48854(v17, v18, &v28);
      uint64_t v25 = v7;
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      sub_241D46AFC(&qword_268D4BE00);
      uint64_t v19 = sub_241DAB120();
      uint64_t v27 = sub_241D48854(v19, v20, &v28);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
      _os_log_impl(&dword_241D1C000, v13, (os_log_type_t)v24, "[%{public}s] Failed to get date string for %s", (uint8_t *)v16, 0x16u);
      uint64_t v21 = v26;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v21, -1, -1);
      MEMORY[0x24563A5D0](v16, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v9, v6);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);

      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return 0;
  }
  return v12;
}

void sub_241D45EF0(uint64_t a1)
{
  sub_241D46AA8(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v18 - v4;
  uint64_t v6 = sub_241DA9770();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D2DAA8(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_241D46B60((uint64_t)v5, &qword_268D4B5B0, MEMORY[0x263F07490]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    uint64_t v10 = sub_241D45B5C((uint64_t)v9);
    if (v11)
    {
      sub_241D4626C((uint64_t)v9, v10, v11);
      swift_bridgeObjectRelease();
      objc_msgSend(*(id *)(v1 + qword_268D4BDC8), sel_setHidden_, 0);
      uint64_t v12 = self;
      sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
      swift_bridgeObjectRetain();
      uint64_t v13 = (void *)sub_241DAAAF0();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_activateConstraints_, v13);

      swift_bridgeObjectRetain();
      os_log_type_t v14 = (void *)sub_241DAAAF0();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_deactivateConstraints_, v14);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  objc_msgSend(*(id *)(v1 + qword_268D4BDC8), sel_setHidden_, 1);
  int v15 = self;
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
  swift_bridgeObjectRetain();
  uint64_t v16 = (void *)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_activateConstraints_, v16);

  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_deactivateConstraints_, v17);
}

uint64_t sub_241D4626C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  v27[0] = a1;
  uint64_t v3 = sub_241DA9810();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241DA9770();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v27 - v12;
  sub_241D28BF4(0, &qword_268D4BDF0);
  os_log_type_t v14 = (void *)sub_241DAAB70();
  id v15 = objc_msgSend(v14, sel_calendar, v27[0]);

  sub_241DA9800();
  sub_241DA97F0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v16 = (void *)sub_241DAAB70();
  id v17 = objc_msgSend(v16, sel_startOfDayMidnight);

  sub_241DA9750();
  sub_241D46AFC(&qword_268D4BDF8);
  char v18 = sub_241DAA930();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v11, v7);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  if (v18) {
    unint64_t v20 = &selRef_labelColor;
  }
  else {
    unint64_t v20 = &selRef_redColor;
  }
  sub_241DA95E0();
  uint64_t v21 = *(void **)(v27[1] + qword_268D4BDC8);
  sub_241D2B4E4(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_241DB2C80;
  *(void *)(v22 + 56) = MEMORY[0x263F8D310];
  *(void *)(v22 + 64) = sub_241D2B59C();
  uint64_t v23 = v29;
  *(void *)(v22 + 32) = v28;
  *(void *)(v22 + 40) = v23;
  swift_bridgeObjectRetain();
  sub_241DAA960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v24 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setText_, v24);

  id v25 = [self *v20];
  objc_msgSend(v21, sel_setTextColor_, v25);

  return ((uint64_t (*)(char *, uint64_t))v19)(v13, v7);
}

uint64_t sub_241D466C4()
{
  sub_241D2AE50(v0 + qword_268D4BDB0);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_241D46744()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionSourceCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241D4677C(uint64_t a1)
{
  sub_241D2AE50(a1 + qword_268D4BDB0);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241D46808()
{
  return type metadata accessor for VisionPrescriptionSourceCell(0);
}

uint64_t sub_241D46810@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268D4BDB0;
  swift_beginAccess();
  return sub_241D2AED8(v3, a1);
}

uint64_t sub_241D46864(uint64_t a1)
{
  uint64_t v3 = v1 + qword_268D4BDB0;
  swift_beginAccess();
  sub_241D2ADC0(a1, v3);
  swift_endAccess();
  sub_241D45694();
  return sub_241D2AE50(a1);
}

uint64_t (*sub_241D468D4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241D46934;
}

uint64_t sub_241D46934(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_241D45694();
  }
  return result;
}

unint64_t sub_241D46968()
{
  return 0xD00000000000001BLL;
}

id sub_241D469CC(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setFont_, a1);
  objc_msgSend(v2, sel_setTextAlignment_, 4);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v3 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v3);

  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  return v2;
}

void sub_241D46AA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241DAAEF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241D46AFC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241DA9770();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionInfoItem(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4BE10);
}

uint64_t sub_241D46B60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241D46AA8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241D46BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisionPrescriptionInfoItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241D46C20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VisionPrescriptionInfoItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_241D46C7C(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_241DA97B0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    id v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = &a2[v13];
    uint64_t v17 = *((void *)v16 + 1);
    void *v15 = *(void *)v16;
    v15[1] = v17;
    char v18 = (char *)v4 + v14;
    uint64_t v19 = &a2[v14];
    uint64_t v20 = sub_241DA9770();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    swift_bridgeObjectRetain();
    v22(v18, v19, v20);
    uint64_t v23 = a3[8];
    int v24 = (char *)v4 + v23;
    id v25 = &a2[v23];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(&a2[v23], 1, v20))
    {
      sub_241D46AA8(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      v22(v24, v25, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
    }
    *((unsigned char *)v4 + a3[9]) = a2[a3[9]];
  }
  return v4;
}

uint64_t sub_241D46EAC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_241DA97B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = sub_241DA9770();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v6, v7);
  uint64_t v9 = a1 + a2[8];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v7);
  }
  return result;
}

void *sub_241D47004(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_241DA97B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  id v15 = &a2[v12];
  uint64_t v16 = *((void *)v15 + 1);
  void *v14 = *(void *)v15;
  v14[1] = v16;
  uint64_t v17 = (char *)a1 + v13;
  char v18 = &a2[v13];
  uint64_t v19 = sub_241DA9770();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  swift_bridgeObjectRetain();
  v21(v17, v18, v19);
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  int v24 = &a2[v22];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(&a2[v22], 1, v19))
  {
    sub_241D46AA8(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    v21(v23, v24, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
  }
  *((unsigned char *)a1 + a3[9]) = a2[a3[9]];
  return a1;
}

void *sub_241D471E4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241DA97B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  id v15 = (char *)a2 + v13;
  uint64_t v16 = sub_241DA9770();
  uint64_t v17 = *(void *)(v16 - 8);
  char v18 = *(void (**)(char *, char *, uint64_t))(v17 + 24);
  v18(v14, v15, v16);
  uint64_t v29 = a3;
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a2 + v19;
  uint64_t v21 = *(uint64_t (**)(void))(v17 + 48);
  uint64_t v28 = (char *)a1 + v19;
  LODWORD(a3) = v21();
  int v22 = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v20, 1, v16);
  if (a3)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v28, v20, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v28, 0, 1, v16);
      goto LABEL_9;
    }
    sub_241D46AA8(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
    size_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
    uint64_t v25 = v28;
  }
  else
  {
    if (!v22)
    {
      v18(v28, v20, v16);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v28, v16);
    sub_241D46AA8(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
    size_t v24 = *(void *)(*(void *)(v26 - 8) + 64);
    uint64_t v25 = v28;
  }
  memcpy(v25, v20, v24);
LABEL_9:
  *((unsigned char *)a1 + v29[9]) = *((unsigned char *)a2 + v29[9]);
  return a1;
}

_OWORD *sub_241D47498(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_241DA97B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)&a2[a3[6]];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_241DA9770();
  uint64_t v14 = *(void *)(v13 - 8);
  id v15 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v15(v11, v12, v13);
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  char v18 = &a2[v16];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&a2[v16], 1, v13))
  {
    sub_241D46AA8(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v15(v17, v18, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
  }
  *((unsigned char *)a1 + a3[9]) = a2[a3[9]];
  return a1;
}

void *sub_241D4765C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241DA97B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  char v18 = (char *)a2 + v16;
  uint64_t v19 = sub_241DA9770();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v20 + 40);
  v21(v17, v18, v19);
  id v32 = a3;
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a2 + v22;
  size_t v24 = *(uint64_t (**)(void))(v20 + 48);
  id v31 = (char *)a1 + v22;
  LODWORD(a3) = v24();
  int v25 = ((uint64_t (*)(char *, uint64_t, uint64_t))v24)(v23, 1, v19);
  if (a3)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v31, v23, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v31, 0, 1, v19);
      goto LABEL_9;
    }
    sub_241D46AA8(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
    size_t v27 = *(void *)(*(void *)(v26 - 8) + 64);
    uint64_t v28 = v31;
  }
  else
  {
    if (!v25)
    {
      v21(v31, v23, v19);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v31, v19);
    sub_241D46AA8(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
    size_t v27 = *(void *)(*(void *)(v29 - 8) + 64);
    uint64_t v28 = v31;
  }
  memcpy(v28, v23, v27);
LABEL_9:
  *((unsigned char *)a1 + v32[9]) = *((unsigned char *)a2 + v32[9]);
  return a1;
}

uint64_t sub_241D478F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241D47904);
}

uint64_t sub_241D47904(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_241DA97B0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_241DA9770();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_9;
  }
  sub_241D46AA8(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[8];

  return v15(v17, a2, v16);
}

uint64_t sub_241D47A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241D47AAC);
}

uint64_t sub_241D47AAC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_241DA97B0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_241DA9770();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  sub_241D46AA8(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[8];

  return v15(v17, a2, a2, v16);
}

void sub_241D47C40()
{
  sub_241DA97B0();
  if (v0 <= 0x3F)
  {
    sub_241DA9770();
    if (v1 <= 0x3F)
    {
      sub_241D46AA8(319, &qword_268D4B5B0, MEMORY[0x263F07490]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

id static UIImage.pdfThumbnail(from:)(uint64_t a1)
{
  uint64_t v2 = sub_241DA96C0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v39[-v7];
  uint64_t v9 = sub_241DAA2E0();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v39[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v39[-v13];
  id v15 = objc_allocWithZone(MEMORY[0x263F14740]);
  uint64_t v16 = (void *)sub_241DA9660();
  id v17 = objc_msgSend(v15, sel_initWithURL_, v16);

  if (!v17)
  {
    sub_241DAA290();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
    uint64_t v21 = sub_241DAA2D0();
    os_log_type_t v22 = sub_241DAAC30();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v45 = v41;
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v24 = sub_241DAB1F0();
      uint64_t v44 = sub_241D48854(v24, v25, &v45);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      sub_241D21A64();
      uint64_t v26 = sub_241DAB120();
      uint64_t v44 = sub_241D48854(v26, v27, &v45);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
      _os_log_impl(&dword_241D1C000, v21, v22, "[%s] file at %s cannot be pdf.", (uint8_t *)v23, 0x16u);
      uint64_t v28 = v41;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v28, -1, -1);
      MEMORY[0x24563A5D0](v23, -1, -1);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
    }

    (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v12, v43);
    return 0;
  }
  id v18 = objc_msgSend(v17, sel_pageAtIndex_, 0);
  if (!v18)
  {
    sub_241DAA290();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v8, a1, v2);
    uint64_t v29 = sub_241DAA2D0();
    os_log_type_t v30 = sub_241DAAC30();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v45 = v41;
      *(_DWORD *)uint64_t v32 = 136315394;
      int v40 = v31;
      uint64_t v33 = sub_241DAB1F0();
      uint64_t v44 = sub_241D48854(v33, v34, &v45);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      sub_241D21A64();
      uint64_t v35 = sub_241DAB120();
      uint64_t v44 = sub_241D48854(v35, v36, &v45);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
      _os_log_impl(&dword_241D1C000, v29, (os_log_type_t)v40, "[%s] pdf at %s is empty.", (uint8_t *)v32, 0x16u);
      uint64_t v37 = v41;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v37, -1, -1);
      MEMORY[0x24563A5D0](v32, -1, -1);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
    }
    (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v14, v43);
    return 0;
  }
  uint64_t v19 = v18;
  id v20 = objc_msgSend(v18, sel_thumbnailOfSize_forBox_, 4, 1000.0, 1000.0);

  return v20;
}

id static UIImage.withData(at:)()
{
  uint64_t v0 = sub_241DA96C0();
  MEMORY[0x270FA5388](v0);
  uint64_t v1 = sub_241DAA2E0();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = sub_241DA96D0();
  unint64_t v4 = v3;
  id v5 = objc_allocWithZone(MEMORY[0x263F827E8]);
  uint64_t v6 = (void *)sub_241DA96E0();
  id v7 = objc_msgSend(v5, sel_initWithData_, v6);
  sub_241D415B8(v2, v4);

  return v7;
}

id static UIImage.withAppClipCodePayload(data:darkTheme:)(void *a1)
{
  type metadata accessor for AppClipCodeGenerator();
  uint64_t v2 = sub_241D21210(a1);
  id v4 = 0;
  if (v3 >> 60 != 15)
  {
    uint64_t v5 = v2;
    unint64_t v6 = v3;
    id v7 = (void *)sub_241DA96E0();
    uint64_t v8 = (void *)CGSVGDocumentCreateFromData();

    if (v8)
    {
      id v4 = objc_msgSend(self, sel__imageWithCGSVGDocument_scale_orientation_, v8, 0, 1.0);
    }
    else
    {
      id v4 = 0;
    }
    sub_241D48CD8(v5, v6);
  }
  return v4;
}

uint64_t sub_241D48778(void (*a1)(void))
{
  a1();

  return sub_241DAB1F0();
}

uint64_t sub_241D487B4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_241D487DC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_241D48854(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_241DAAF10();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_241D48854(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_241D48928(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_241D2DA4C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_241D2DA4C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_241D36E44((uint64_t)v12);
  return v7;
}

uint64_t sub_241D48928(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_241DAAF20();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_241D48AE4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_241DAB010();
  if (!v8)
  {
    sub_241DAB070();
    __break(1u);
LABEL_17:
    uint64_t result = sub_241DAB0F0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_241D48AE4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_241D270B8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_241D48B7C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_241D48B7C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_241D48B7C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_241D48CEC();
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

unsigned char **sub_241D48CC8(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_241D48CD8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_241D415B8(a1, a2);
  }
  return a1;
}

void sub_241D48CEC()
{
  if (!qword_268D4B628)
  {
    unint64_t v0 = sub_241DAB130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B628);
    }
  }
}

uint64_t type metadata accessor for VisionPrescriptionColumnTitleCell(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4BE38);
}

uint64_t sub_241D48D64()
{
  return swift_initClassMetadata2();
}

id sub_241D48DC0(double a1, double a2, double a3, double a4)
{
  int64_t v9 = &v4[qword_268D4BE20];
  *(_OWORD *)int64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = qword_268D4BE28;
  id v11 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v12 = v4;
  id v13 = objc_msgSend(v11, sel_init);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  uint64_t v14 = (void *)sub_241DAADA0();
  objc_msgSend(v13, sel_setFont_, v14);

  objc_msgSend(v13, sel_setTextAlignment_, 1);
  objc_msgSend(v13, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v13, sel_setNumberOfLines_, 0);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  id v15 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setText_, v15, 0xE000000000000000);

  *(void *)&v12[v10] = v13;
  uint64_t v16 = qword_268D4BE30;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v18 = (void *)sub_241DAADA0();
  objc_msgSend(v17, sel_setFont_, v18);

  objc_msgSend(v17, sel_setTextAlignment_, 1);
  objc_msgSend(v17, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v17, sel_setNumberOfLines_, 0);
  sub_241DA95E0();
  uint64_t v19 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setText_, v19, 0xE000000000000000);

  *(void *)&v12[v16] = v17;
  v22.receiver = v12;
  v22.super_class = (Class)type metadata accessor for VisionPrescriptionColumnTitleCell(0);
  id v20 = objc_msgSendSuper2(&v22, sel_initWithFrame_, a1, a2, a3, a4);
  sub_241D491A0();

  return v20;
}

id sub_241D49154(double a1, double a2, double a3, double a4)
{
  return sub_241D48DC0(a1, a2, a3, a4);
}

void sub_241D49178(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_241D49A60();
}

void sub_241D491A0()
{
  uint64_t v1 = v0;
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  uint64_t v2 = *(void **)&v0[qword_268D4BE28];
  objc_msgSend(v1, sel_addSubview_, v2);
  id v3 = *(void **)&v1[qword_268D4BE30];
  objc_msgSend(v1, sel_addSubview_, v3);
  uint64_t v29 = self;
  sub_241D2B5F0();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_241DB3D70;
  id v5 = objc_msgSend(v3, sel_topAnchor);
  id v6 = objc_msgSend(v1, (SEL)&off_2650F7530 + 3);
  id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, 10.0);

  *(void *)(v4 + 32) = v7;
  id v8 = objc_msgSend(v1, sel_bottomAnchor);
  id v9 = objc_msgSend(v3, (SEL)&off_2650F7620 + 5);
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, 10.0);

  *(void *)(v4 + 40) = v10;
  id v11 = objc_msgSend(v3, sel_leadingAnchor);
  id v12 = objc_msgSend(v1, sel_leadingAnchor);
  id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v12, 16.0);

  *(void *)(v4 + 48) = v13;
  id v14 = objc_msgSend(v1, sel_centerXAnchor);
  id v15 = objc_msgSend(v3, sel_trailingAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, 8.0);

  *(void *)(v4 + 56) = v16;
  id v17 = objc_msgSend(v2, sel_leadingAnchor);
  id v18 = objc_msgSend(v1, sel_centerXAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 8.0);

  *(void *)(v4 + 64) = v19;
  id v20 = objc_msgSend(v1, sel_trailingAnchor);
  id v21 = objc_msgSend(v2, sel_trailingAnchor);
  id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v21, 16.0);

  *(void *)(v4 + 72) = v22;
  id v23 = objc_msgSend(v2, sel_topAnchor);
  id v24 = objc_msgSend(v1, sel_topAnchor);
  id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v24, 10.0);

  *(void *)(v4 + 80) = v25;
  id v26 = objc_msgSend(v1, sel_bottomAnchor);
  id v27 = objc_msgSend(v2, sel_bottomAnchor);
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, 10.0);

  *(void *)(v4 + 88) = v28;
  sub_241DAAB10();
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
  id v30 = (id)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_activateConstraints_, v30);
}

void sub_241D495DC()
{
  sub_241D2AE50(v0 + qword_268D4BE20);

  uint64_t v1 = *(void **)(v0 + qword_268D4BE30);
}

id sub_241D4962C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionColumnTitleCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_241D49664(uint64_t a1)
{
  sub_241D2AE50(a1 + qword_268D4BE20);

  objc_super v2 = *(void **)(a1 + qword_268D4BE30);
}

uint64_t sub_241D496C0()
{
  return type metadata accessor for VisionPrescriptionColumnTitleCell(0);
}

uint64_t sub_241D496C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268D4BE20;
  swift_beginAccess();
  return sub_241D2AED8(v3, a1);
}

uint64_t sub_241D4971C(uint64_t a1)
{
  uint64_t v3 = v1 + qword_268D4BE20;
  swift_beginAccess();
  sub_241D499FC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_241D49778())()
{
  return j__swift_endAccess;
}

uint64_t sub_241D497D8()
{
  uint64_t v1 = sub_241DAB1F0();
  sub_241DAAA50();
  sub_241DA9780();
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_241D4986C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin33VisionPrescriptionColumnTitleItem_uuid;
  uint64_t v2 = sub_241DA97B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241D49914()
{
  return type metadata accessor for VisionPrescriptionColumnTitleItem(0);
}

uint64_t type metadata accessor for VisionPrescriptionColumnTitleItem(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4BE50);
}

uint64_t sub_241D4993C()
{
  uint64_t result = sub_241DA97B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241D499D8()
{
  return sub_241D497D8();
}

uint64_t sub_241D499FC(uint64_t a1, uint64_t a2)
{
  sub_241D2E61C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_241D49A60()
{
  unint64_t v1 = v0;
  uint64_t v2 = &v0[qword_268D4BE20];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((void *)v2 + 4) = 0;
  uint64_t v3 = qword_268D4BE28;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  id v5 = (void *)sub_241DAADA0();
  objc_msgSend(v4, sel_setFont_, v5);

  objc_msgSend(v4, sel_setTextAlignment_, 1);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  id v6 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setText_, v6, 0xE000000000000000);

  *(void *)&v0[v3] = v4;
  uint64_t v7 = qword_268D4BE30;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v9 = (void *)sub_241DAADA0();
  objc_msgSend(v8, sel_setFont_, v9);

  objc_msgSend(v8, sel_setTextAlignment_, 1);
  objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v8, sel_setNumberOfLines_, 0);
  sub_241DA95E0();
  id v10 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setText_, v10, 0xE000000000000000);

  *(void *)&v1[v7] = v8;
  sub_241DAB080();
  __break(1u);
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlViewController()
{
  uint64_t result = qword_268D4BE78;
  if (!qword_268D4BE78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D49DF8()
{
  return swift_initClassMetadata2();
}

void sub_241D49E60()
{
}

void sub_241D49EBC(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlViewController();
  id v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_241D49F20();
  sub_241D4A338();
}

void sub_241D49F20()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLargeTitleDisplayMode_, 2);

  id v2 = objc_msgSend(v0, sel_navigationItem);
  sub_241D4A0FC(*(void *)&v0[qword_268D4BE68], v0[qword_268D4BE60]);
  uint64_t v3 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setTitle_, v3);

  id v4 = objc_msgSend(v0, sel_navigationItem);
  id v5 = objc_msgSend(v4, sel_backBarButtonItem);

  if (v5)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
    id v6 = (id)sub_241DAA950();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setTitle_, v6, 0xE000000000000000);
  }
}

uint64_t sub_241D4A0FC(uint64_t a1, char a2)
{
  if (a2 == 6)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
    sub_241D4A5E8();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_241DB2C80;
    uint64_t v5 = sub_241D57774(a1);
    uint64_t v7 = v6;
    *(void *)(v4 + 56) = MEMORY[0x263F8D310];
    *(void *)(v4 + 64) = sub_241D2B59C();
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v7;
    uint64_t v2 = sub_241DAA9A0();
    swift_bridgeObjectRelease();
  }
  else if (a2 == 4)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    return sub_241DA95E0();
  }
  else
  {
    return 0;
  }
  return v2;
}

void sub_241D4A2F0(void *a1)
{
  id v1 = a1;
  sub_241D4A554();
}

void sub_241D4A338()
{
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = v1;
  objc_msgSend(v1, sel_setKeyboardDismissMode_, 1);

  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CB0]), sel_initWithTarget_action_, v0, sel_dismissKeyboard);
  objc_msgSend(v3, sel_setCancelsTouchesInView_, 0);
  id v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v5 = v4;
  objc_msgSend(v4, sel_addGestureRecognizer_, v3);
}

void sub_241D4A41C(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_view);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_endEditing_, 1);
  }
  else
  {
    __break(1u);
  }
}

void sub_241D4A490()
{
}

void sub_241D4A4C0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_241D4A4F4()
{
  return swift_release();
}

id sub_241D4A504()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241D4A53C()
{
  return swift_release();
}

uint64_t sub_241D4A54C()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlViewController();
}

uint64_t sub_241D4A554()
{
  if ((*(unsigned __int8 *)(v0 + qword_268D4BE60) | 2) == 6)
  {
    unsigned int v1 = 0x10100u >> (8 * *(unsigned char *)(*(void *)(v0 + qword_268D4BE70) + 64));
    swift_retain();
    sub_241DA6314(17, 0, 0, v1);
    return swift_release();
  }
  return result;
}

void sub_241D4A5E8()
{
  if (!qword_268D4C380)
  {
    sub_241D3CEF4();
    unint64_t v0 = sub_241DAB130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C380);
    }
  }
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldPrismDataSource()
{
  uint64_t result = qword_268D4BE90;
  if (!qword_268D4BE90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D4A68C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241D4A6DC(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_11;
      }
      goto LABEL_10;
    case 2:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_10;
      }
      goto LABEL_11;
    case 3:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_10;
      }
      goto LABEL_11;
    case 4:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_10;
      }
LABEL_11:
      swift_once();
LABEL_10:
      uint64_t result = sub_241DA95E0();
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_241D4A8D0()
{
  sub_241D4BA24(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_241DB2C60;
  sub_241D70380(2, 0, (uint64_t *)(v0 + 32));
  sub_241D70380(1, 0, (uint64_t *)(v0 + 72));
  return v0;
}

uint64_t sub_241D4A94C(uint64_t a1)
{
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v37 == 2)
  {
    objc_super v2 = sub_241D700E0(9u, a1);
    goto LABEL_5;
  }
  if (v37 == 1)
  {
    objc_super v2 = sub_241D700C4(9u, a1);
LABEL_5:
    id v3 = v2;
    goto LABEL_7;
  }
  id v3 = 0;
LABEL_7:
  id v35 = sub_241D3AD50(v3, 9uLL);
  uint64_t v5 = v4;
  swift_retain();
  uint64_t v6 = sub_241D2D418(a1);
  uint64_t v7 = *(void *)(v6 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase);
  int v8 = *(unsigned __int8 *)(v6
                          + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase
                          + 8);
  swift_release();
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v37 == 2)
  {
    id v9 = sub_241D700E0(7u, a1);
    goto LABEL_11;
  }
  if (v37 == 1)
  {
    id v9 = sub_241D700C4(7u, a1);
LABEL_11:
    id v10 = v9;
    goto LABEL_13;
  }
  id v10 = 0;
LABEL_13:
  id v36 = sub_241D3AD50(v10, 7uLL);
  uint64_t v12 = v11;
  swift_retain();
  uint64_t v13 = sub_241D2D418(a1);
  uint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase);
  char v15 = *(unsigned char *)(v13 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase + 8);
  swift_release();
  if (v5)
  {
    if (v8 || !v7)
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = 0;
      uint64_t v5 = 0;
      if (!v12) {
        goto LABEL_30;
      }
    }
    else
    {
      unint64_t v34 = v3;
      if (qword_268D4B2F0 != -1) {
        swift_once();
      }
      sub_241DA95E0();
      sub_241D4BA24(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_241DB2C60;
      uint64_t v17 = MEMORY[0x263F8D310];
      *(void *)(v16 + 56) = MEMORY[0x263F8D310];
      unint64_t v18 = sub_241D2B59C();
      *(void *)(v16 + 64) = v18;
      *(void *)(v16 + 32) = v35;
      *(void *)(v16 + 40) = v5;
      uint64_t v19 = sub_241D4A6DC(v7);
      *(void *)(v16 + 96) = v17;
      *(void *)(v16 + 104) = v18;
      *(void *)(v16 + 72) = v19;
      *(void *)(v16 + 80) = v20;
      uint64_t v21 = sub_241DAA960();
      uint64_t v5 = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v3 = v34;
      if (!v12) {
        goto LABEL_30;
      }
    }
  }
  else
  {
    uint64_t v21 = 0;
    if (!v12)
    {
LABEL_30:

      return v21;
    }
  }
  if ((v15 & 1) != 0 || !v14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  sub_241D4BA24(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_241DB2C60;
  uint64_t v24 = MEMORY[0x263F8D310];
  *(void *)(v23 + 56) = MEMORY[0x263F8D310];
  unint64_t v25 = sub_241D2B59C();
  *(void *)(v23 + 64) = v25;
  *(void *)(v23 + 32) = v36;
  *(void *)(v23 + 40) = v12;
  uint64_t v26 = sub_241D4A6DC(v14);
  *(void *)(v23 + 96) = v24;
  *(void *)(v23 + 104) = v25;
  *(void *)(v23 + 72) = v26;
  *(void *)(v23 + 80) = v27;
  uint64_t v28 = sub_241DAA960();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_241DA95E0();
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_241DB2C60;
    uint64_t v32 = MEMORY[0x263F8D310];
    *(void *)(v31 + 56) = MEMORY[0x263F8D310];
    *(void *)(v31 + 64) = v25;
    *(void *)(v31 + 32) = v28;
    *(void *)(v31 + 40) = v30;
    *(void *)(v31 + 96) = v32;
    *(void *)(v31 + 104) = v25;
    *(void *)(v31 + 72) = v21;
    *(void *)(v31 + 80) = v5;
    uint64_t v21 = sub_241DAA960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    return v28;
  }
  return v21;
}

uint64_t sub_241D4AE98(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_241D4B8E0(0, &qword_268D4BEA0, (uint64_t (*)(uint64_t))sub_241D4B86C, MEMORY[0x263EFDE48]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v10 - v7;
  sub_241D4B5F0(a1);
  swift_beginAccess();
  sub_241D4B8E0(0, &qword_268D4BEB8, (uint64_t (*)(uint64_t))sub_241D4B86C, MEMORY[0x263EFDE58]);
  swift_retain();
  sub_241DAA6A0();
  swift_endAccess();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v3;
  swift_allocObject();
  swift_weakInit();
  sub_241D4B99C();
  sub_241DAA760();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  sub_241DAA5B0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_241D4B120()
{
  uint64_t v0 = sub_241DAA2E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA280();
  uint64_t v4 = sub_241DAA2D0();
  os_log_type_t v5 = sub_241DAAC30();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = sub_241DAB1F0();
    uint64_t v11 = sub_241D48854(v8, v9, &v12);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v4, v5, "[%s] prism cancellable completed.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v7, -1, -1);
    MEMORY[0x24563A5D0](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_241D4B2F8()
{
  uint64_t v0 = sub_241DA97B0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_241D4B8E0(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    sub_241DA9C00();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241DB2C80;
    sub_241D4BA24(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_241DB2C60;
    sub_241D70380(2, 0, (uint64_t *)(v5 + 32));
    sub_241D70380(1, 0, (uint64_t *)(v5 + 72));
    sub_241DA97A0();
    sub_241DA9780();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_241DA9BF0();
    sub_241DA9C60();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_241D4B560()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_241D4B570()
{
  sub_241DA9CA0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_241D4B5E8()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldPrismDataSource();
}

uint64_t sub_241D4B5F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241DAA2E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
LABEL_7:
    uint64_t v8 = *(void *)(v2 + 48) + 40;
    return *(void *)v8;
  }
  if (a1 != 1)
  {
    sub_241DAA280();
    unint64_t v9 = sub_241DAA2D0();
    os_log_type_t v10 = sub_241DAAC20();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v21 = v19;
      *(_DWORD *)uint64_t v11 = 136446466;
      uint64_t v12 = sub_241DAB1F0();
      uint64_t v20 = sub_241D48854(v12, v13, &v21);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      uint64_t v20 = a1;
      type metadata accessor for HKVisionEye(0);
      uint64_t v14 = sub_241DAA9B0();
      uint64_t v20 = sub_241D48854(v14, v15, &v21);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v9, v10, "[%{public}s] Unknown eye received: %s", (uint8_t *)v11, 0x16u);
      uint64_t v16 = v19;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v16, -1, -1);
      MEMORY[0x24563A5D0](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(v2 + 48) + 32;
  return *(void *)v8;
}

void sub_241D4B86C(uint64_t a1)
{
}

unint64_t sub_241D4B8A0()
{
  unint64_t result = qword_268D4BEB0;
  if (!qword_268D4BEB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4BEB0);
  }
  return result;
}

void sub_241D4B8E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241D4B944()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D4B954()
{
  return sub_241D4B120();
}

uint64_t sub_241D4B95C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D4B994()
{
  return sub_241D4B2F8();
}

unint64_t sub_241D4B99C()
{
  unint64_t result = qword_268D4BEC0;
  if (!qword_268D4BEC0)
  {
    sub_241D4B8E0(255, &qword_268D4BEA0, (uint64_t (*)(uint64_t))sub_241D4B86C, MEMORY[0x263EFDE48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4BEC0);
  }
  return result;
}

void sub_241D4BA24(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241D2B54C(255, a3);
    unint64_t v4 = sub_241DAB130();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_241D4BA7C(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

uint64_t type metadata accessor for LatestOrAddVisionPrescriptionDataSource()
{
  uint64_t result = qword_268D4BEF8;
  if (!qword_268D4BEF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D4BAD8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241D4BB40(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v45 = a3;
  uint64_t v43 = *v3;
  *(void *)&long long v44 = a2;
  sub_241D4ED5C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  os_log_type_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)((char *)v3 + qword_268D4BEF0) = 0;
  swift_retain();
  id v47 = a1;
  uint64_t v11 = sub_241D4EF08(a1);
  *(void *)((char *)v4 + qword_268D4BEE8) = v11;
  uint64_t v12 = qword_268D4B2F0;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_241DA95E0();
  uint64_t v14 = v13;
  uint64_t v48 = v11;
  uint64_t v46 = v11;
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_241D526CC(0, &qword_268D4BF10, (uint64_t (*)(uint64_t))sub_241D4EE3C, MEMORY[0x263EFDCF0]);
  v41[1] = v16;
  sub_241D4EEA0();
  v41[0] = v17;
  sub_241D52508(&qword_268D4BF28, &qword_268D4BF10, v15);
  sub_241DAA750();
  sub_241D5012C(&qword_268D4BF30, (void (*)(uint64_t))sub_241D4ED5C);
  uint64_t v18 = (void *)sub_241DAA720();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v10, v7);
  uint64_t v20 = sub_241D50174(v42, v14, v47, v18);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v42 = qword_268D4BEC8;
  *(void *)((char *)v4 + qword_268D4BEC8) = v20;
  uint64_t v21 = sub_241DA95E0();
  uint64_t v23 = v22;
  uint64_t v48 = v46;
  sub_241DAA750();
  uint64_t v24 = (void *)sub_241DAA720();
  v19(v10, v7);
  unint64_t v25 = v47;
  uint64_t v26 = sub_241D50174(v21, v23, v47, v24);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v27 = qword_268D4BED0;
  *(void *)((char *)v4 + qword_268D4BED0) = v26;
  uint64_t v28 = v25;
  uint64_t v29 = sub_241D4C074(v25);
  uint64_t v30 = (void *)((char *)v4 + qword_268D4BED8);
  *uint64_t v30 = v29;
  v30[1] = v31;
  uint64_t v32 = sub_241D5045C(v44, v45);
  uint64_t v33 = qword_268D4BEE0;
  *(void *)((char *)v4 + qword_268D4BEE0) = v32;
  swift_release();
  sub_241D50C30(0, (unint64_t *)&qword_268D4B810, (unint64_t *)&qword_268D4C280);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_241DB3F80;
  uint64_t v35 = *(void *)((char *)v4 + v42);
  unint64_t v36 = sub_241D50C90();
  *(void *)(v34 + 32) = v35;
  *(void *)(v34 + 40) = v36;
  *(void *)(v34 + 48) = *(void *)((char *)v4 + v27);
  *(void *)(v34 + 56) = v36;
  long long v44 = *(_OWORD *)v30;
  *(_OWORD *)(v34 + 64) = v44;
  uint64_t v37 = *(void *)((char *)v4 + v33);
  unint64_t v38 = sub_241D50E8C();
  *(void *)(v34 + 80) = v37;
  *(void *)(v34 + 88) = v38;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v39 = sub_241DA9F30();
  swift_retain();
  sub_241D4E5E4();
  swift_release();
  swift_release();

  swift_release();
  return v39;
}

id sub_241D4C05C@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

id sub_241D4C068@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 8);
  *a2 = v2;
  return v2;
}

uint64_t sub_241D4C074(void *a1)
{
  sub_241D510A0(0, &qword_268D4B8C8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v66 = (char *)&v47 - v3;
  uint64_t v4 = sub_241DAABD0();
  uint64_t v51 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D51104(0, &qword_268D4BF80, MEMORY[0x263F44B10], MEMORY[0x263F44AC8], (void (*)(void))sub_241D51194);
  uint64_t v48 = v7;
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v47 - v8;
  sub_241D511C8();
  uint64_t v49 = v10;
  uint64_t v52 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D520D0(0, &qword_268D4BFA0, (void (*)(uint64_t))sub_241D511C8, (void (*)(void))sub_241D51364);
  uint64_t v53 = v13;
  uint64_t v55 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)&v47 - v14;
  sub_241D51398();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v57 = v16;
  uint64_t v58 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D5158C();
  uint64_t v59 = v20;
  uint64_t v64 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  id v54 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_241D5158C;
  uint64_t v60 = sub_241D51710;
  sub_241D51668(0, &qword_268D4BFE0, (void (*)(uint64_t))sub_241D5158C, (void (*)(void))sub_241D51710);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v62 = v22;
  uint64_t v63 = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v56 = (char *)&v47 - v24;
  sub_241D51744(0, (unint64_t *)&qword_268D4BC80, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_241DB33B0;
  sub_241D28BF4(0, (unint64_t *)&unk_268D4D370);
  *(void *)(v25 + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_visionPrescriptionType);
  id v67 = (id)v25;
  sub_241DAAB10();
  sub_241DAABF0();
  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = a1;
  sub_241DAABB0();
  sub_241D51194();
  id v26 = a1;
  sub_241DAA750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v4);
  unint64_t v27 = sub_241D512C8();
  uint64_t v28 = sub_241D5012C(&qword_268D4BF90, MEMORY[0x263F44AC8]);
  uint64_t v29 = v48;
  MEMORY[0x245639300](v48, v27, v28);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v29);
  sub_241D51364();
  uint64_t v30 = v49;
  uint64_t v31 = MEMORY[0x263F8D6C8];
  sub_241DAA750();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v12, v30);
  sub_241D51744(0, &qword_268D4BFB8, v31, MEMORY[0x263EFDDF8]);
  sub_241D51480();
  sub_241D51510();
  uint64_t v32 = v53;
  sub_241DAA770();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v32);
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = v65;
  *(void *)(v33 + 16) = v26;
  *(void *)(v33 + 24) = v34;
  sub_241D510A0(0, &qword_268D4B820, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
  sub_241D5012C(&qword_268D4BFD8, (void (*)(uint64_t))sub_241D51398);
  id v35 = v26;
  unint64_t v36 = v54;
  uint64_t v37 = v57;
  sub_241DAA750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v19, v37);
  sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
  id v67 = (id)sub_241DAAD00();
  uint64_t v38 = sub_241DAACE0();
  uint64_t v39 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v66, 1, 1, v38);
  sub_241D51710();
  sub_241D3772C();
  int v40 = v56;
  uint64_t v41 = v59;
  sub_241DAA7B0();
  sub_241D51810(v39);

  (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v41);
  sub_241D5189C(&qword_268D4BFF0, &qword_268D4BFE0, (void (*)(uint64_t))v61, (void (*)(void))v60);
  uint64_t v42 = v62;
  sub_241DAA700();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v42);
  sub_241DAA050();
  uint64_t v43 = MEMORY[0x263F44428];
  sub_241DA9B40();
  swift_release();
  long long v44 = (uint64_t (*)(uint64_t))MEMORY[0x263F44430];
  sub_241D518EC(0, &qword_268D4B838, MEMORY[0x263F44430], v43, MEMORY[0x263F43CD0]);
  sub_241D50FA8((unint64_t *)&qword_268D4B840, &qword_268D4B838, v44, v43);
  uint64_t v45 = sub_241DA9B60();
  swift_release();
  sub_241D5012C(&qword_268D4BFF8, (void (*)(uint64_t))sub_241D51958);
  return v45;
}

uint64_t sub_241D4CAE8(uint64_t a1, void *a2)
{
  sub_241D51744(0, (unint64_t *)&qword_268D4BC80, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_241DB33B0;
  *(void *)(v3 + 32) = a2;
  sub_241DAAB10();
  id v4 = a2;
  sub_241DAABA0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241D4CBD0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v19 = MEMORY[0x263F8EE78];
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_241DAB0A0();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_19;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      MEMORY[0x245639BE0](i, v3);
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x2456396D0]();
        if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241DAAB20();
        }
        sub_241DAAB30();
        sub_241DAAB10();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (uint64_t j = 0; j != v4; ++j)
    {
      uint64_t v8 = *(void **)(v3 + 8 * j + 32);
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x2456396D0](v8);
        if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241DAAB20();
        }
        sub_241DAAB30();
        sub_241DAAB10();
      }
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  if (v19 >> 62) {
    goto LABEL_41;
  }
  uint64_t v9 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v9; uint64_t v9 = sub_241DAB0A0())
  {
    unint64_t v10 = v19 & 0xC000000000000001;
    uint64_t v11 = 4;
    while (1)
    {
      if (v10) {
        id v12 = (id)MEMORY[0x245639BE0](v11 - 4, v19);
      }
      else {
        id v12 = *(id *)(v19 + 8 * v11);
      }
      uint64_t v13 = v12;
      uint64_t v14 = v11 - 3;
      if (__OFADD__(v11 - 4, 1))
      {
        __break(1u);
        goto LABEL_40;
      }
      if (objc_msgSend(v12, sel_prescriptionType) == (id)1) {
        break;
      }

      ++v11;
      if (v14 == v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = 0;
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRelease();
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v15 = 4;
    while (1)
    {
      id v16 = v10 ? (id)MEMORY[0x245639BE0](v15 - 4, v19) : *(id *)(v19 + 8 * v15);
      uint64_t v17 = v16;
      uint64_t v18 = v15 - 3;
      if (__OFADD__(v15 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v16, sel_prescriptionType) == (id)2)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        goto LABEL_43;
      }

      ++v15;
      if (v18 == v9)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        uint64_t v17 = 0;
        goto LABEL_43;
      }
    }
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
  }
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v17 = 0;
  uint64_t v13 = 0;
LABEL_43:
  *a2 = v13;
  a2[1] = v17;
  return result;
}

uint64_t sub_241D4CF08@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_241DAA2E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_241DAA280();
  id v9 = v8;
  id v10 = v8;
  uint64_t v11 = sub_241DAA2D0();
  os_log_type_t v12 = sub_241DAAC10();
  if (os_log_type_enabled(v11, v12))
  {
    v20[1] = a2;
    uint64_t v13 = swift_slowAlloc();
    v20[0] = v4;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v21 = (uint64_t)v8;
    uint64_t v22 = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    id v16 = v8;
    sub_241D36B4C(0, (unint64_t *)&qword_268D4C3D0);
    uint64_t v17 = sub_241DAA9B0();
    uint64_t v21 = sub_241D48854(v17, v18, &v22);
    sub_241DAAF10();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241D1C000, v11, v12, "Error fetching most recent vision prescription sample: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v15, -1, -1);
    MEMORY[0x24563A5D0](v14, -1, -1);

    (*(void (**)(char *, void))(v5 + 8))(v7, v20[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_241D4EE3C();
  return sub_241DAA630();
}

uint64_t sub_241D4D184@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_241DAA460();
  MEMORY[0x270FA5388](v2 - 8);
  swift_bridgeObjectRetain();
  sub_241DAA420();
  uint64_t v3 = sub_241DA99E0();
  swift_allocObject();
  uint64_t v4 = sub_241DA99D0();
  a1[3] = v3;
  uint64_t result = sub_241D5012C(&qword_268D4C018, MEMORY[0x263F43AA8]);
  a1[4] = result;
  *a1 = v4;
  return result;
}

uint64_t sub_241D4D2A4()
{
  uint64_t v0 = sub_241DA9D50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DA9D10();
  sub_241DA9D30();
  uint64_t v4 = sub_241DA9D40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_241D4D390()
{
  return sub_241DAAC40();
}

uint64_t sub_241D4D3C8()
{
  uint64_t v0 = sub_241DA9D50();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v12[-v5];
  sub_241DA9D00();
  uint64_t v7 = (void (*)(unsigned char *, void))sub_241DA9D20();
  void *v8 = 0x4038000000000000;
  v7(v12, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v9 = sub_241DA9D40();
  id v10 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v6, v0);
  return v9;
}

uint64_t sub_241D4D538()
{
  sub_241D51744(0, (unint64_t *)&qword_268D4BC80, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_241DB33B0;
  sub_241D28BF4(0, (unint64_t *)&unk_268D4D370);
  *(void *)(v0 + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_visionPrescriptionType);
  sub_241DAAB10();
  sub_241DAABE0();

  return swift_bridgeObjectRelease();
}

void sub_241D4D63C(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_241D28BF4(0, (unint64_t *)&unk_268D4D370);
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_visionPrescriptionType);
  uint64_t v5 = v4;
  if (*(void *)(v3 + 16) && (unint64_t v6 = sub_241DA35A0((uint64_t)v4), (v7 & 1) != 0)) {
    uint64_t v8 = *(void *)(*(void *)(v3 + 56) + 8 * v6);
  }
  else {
    uint64_t v8 = 0;
  }

  *a2 = v8;
}

uint64_t sub_241D4D6C8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_241DAA2E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_241DAA280();
  id v9 = v8;
  id v10 = v8;
  uint64_t v11 = sub_241DAA2D0();
  os_log_type_t v12 = sub_241DAAC10();
  if (os_log_type_enabled(v11, v12))
  {
    v20[1] = a2;
    uint64_t v13 = swift_slowAlloc();
    v20[0] = v4;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v21 = (uint64_t)v8;
    uint64_t v22 = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    id v16 = v8;
    sub_241D36B4C(0, (unint64_t *)&qword_268D4C3D0);
    uint64_t v17 = sub_241DAA9B0();
    uint64_t v21 = sub_241D48854(v17, v18, &v22);
    sub_241DAAF10();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241D1C000, v11, v12, "Error fetching vision prescription sample count: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v15, -1, -1);
    MEMORY[0x24563A5D0](v14, -1, -1);

    (*(void (**)(char *, void))(v5 + 8))(v7, v20[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v22 = 0;
  return sub_241DAA620();
}

uint64_t sub_241D4D934@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v68 = a3;
  uint64_t v75 = a2;
  uint64_t v6 = sub_241DA97B0();
  uint64_t v76 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241DAA1C0();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v71 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_241DA9CB0();
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  id v67 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241D510A0(0, &qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v66 = (char *)&v53 - v14;
  sub_241D510A0(0, (unint64_t *)&unk_268D4C340, MEMORY[0x263F81DF8], v12);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v62 = (char *)&v53 - v16;
  uint64_t v17 = sub_241DAA350();
  uint64_t v63 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_241DAA310();
  uint64_t v20 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241DA9E00();
  uint64_t v73 = *(void *)(v23 - 8);
  uint64_t v74 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v72 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_241DAA460();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t result = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *a1;
  if (v30 < 1)
  {
    uint64_t v35 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v31 = v29;
    uint64_t v56 = v17;
    uint64_t v78 = result;
    uint64_t v58 = v8;
    uint64_t v59 = v6;
    uint64_t v60 = a4;
    id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
    id v33 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v30);
    id v57 = v32;
    id v34 = objc_msgSend(v32, sel_stringFromNumber_, v33);

    if (v34)
    {
      sub_241DAA990();
    }
    sub_241DAA450();
    sub_241DAA440();
    id v54 = v31;
    sub_241DAA3C0();
    uint64_t v36 = v78;
    v79[3] = v78;
    v79[4] = MEMORY[0x263F81F20];
    uint64_t v37 = sub_241D2C600(v79);
    uint64_t v55 = v26;
    (*(void (**)(uint64_t *, char *, uint64_t))(v26 + 16))(v37, v31, v36);
    uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
    sub_241D510A0(0, &qword_268D4B860, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
    sub_241DAA370();
    uint64_t v39 = swift_allocObject();
    long long v77 = xmmword_241DB2C80;
    *(_OWORD *)(v39 + 16) = xmmword_241DB2C80;
    uint64_t v40 = v61;
    (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, *MEMORY[0x263F81DE8], v61);
    uint64_t v41 = sub_241DAA320();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v62, 1, 1, v41);
    sub_241DAA340();
    sub_241DAA330();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v19, v56);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v40);
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = v75;
    uint64_t v44 = v68;
    *(void *)(v42 + 16) = v75;
    *(void *)(v42 + 24) = v44;
    uint64_t v45 = sub_241DAA390();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v66, 1, 1, v45);
    (*(void (**)(char *, void, uint64_t))(v64 + 104))(v67, *MEMORY[0x263F440E0], v65);
    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v71, *MEMORY[0x263F446D0], v70);
    id v46 = v43;
    uint64_t v47 = v72;
    sub_241DA9DF0();
    sub_241D510A0(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], v38);
    sub_241DA9C00();
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v77;
    sub_241D50C30(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v77;
    uint64_t v49 = v74;
    *(void *)(v48 + 56) = v74;
    *(void *)(v48 + 64) = sub_241D5012C(&qword_268D4C390, MEMORY[0x263F441F0]);
    uint64_t v50 = sub_241D2C600((uint64_t *)(v48 + 32));
    uint64_t v51 = v73;
    (*(void (**)(uint64_t *, char *, uint64_t))(v73 + 16))(v50, v47, v49);
    uint64_t v52 = v58;
    sub_241DA97A0();
    sub_241DA9780();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v52, v59);
    sub_241DA9BF0();

    (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v49);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v54, v78);
    a4 = v60;
  }
  *a4 = v35;
  return result;
}

uint64_t sub_241D4E450(void *a1, void *a2)
{
  objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionAllDataViewController());
  id v4 = sub_241D30164(a2, 0);
  sub_241D51A2C();
  id v5 = v4;
  objc_msgSend(a1, sel_showAdaptively_sender_, v5, sub_241DAB180());

  return swift_unknownObjectRelease();
}

uint64_t sub_241D4E4FC()
{
  uint64_t v0 = sub_241DA9D50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DA9D00();
  sub_241DA9D30();
  uint64_t v4 = sub_241DA9D40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_241D4E5E4()
{
  uint64_t v1 = v0;
  sub_241D510A0(0, &qword_268D4B8C8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v16 - v3;
  sub_241D52824();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *(id *)(v0 + qword_268D4BEE8);
  sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
  swift_retain();
  v16[0] = (id)sub_241DAAD00();
  uint64_t v10 = sub_241DAACE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_241D526CC(0, &qword_268D4BF10, (uint64_t (*)(uint64_t))sub_241D4EE3C, MEMORY[0x263EFDCF0]);
  sub_241D52508(&qword_268D4BF28, &qword_268D4BF10, v11);
  sub_241D3772C();
  sub_241DAA7B0();
  sub_241D51810((uint64_t)v4);

  swift_release();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_241D5295C;
  *(void *)(v13 + 24) = v12;
  sub_241D5012C(&qword_268D4C128, (void (*)(uint64_t))sub_241D52824);
  uint64_t v14 = sub_241DAA810();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(void *)(v1 + qword_268D4BEF0) = v14;
  return swift_release();
}

uint64_t sub_241D4E928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F43E48];
  sub_241D50F28(0, &qword_268D4BF78, (uint64_t (*)(uint64_t))sub_241D3A490, sub_241D5100C, MEMORY[0x263F43E48]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v31 = (char *)&v27 - v8;
  sub_241D50F28(0, &qword_268D4C010, (uint64_t (*)(uint64_t))sub_241D50D2C, sub_241D50E58, v4);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v27 - v15;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v30 = v6;
    uint64_t v28 = a2;
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
    uint64_t v19 = a1;
    uint64_t v29 = a1;
    unsigned int v20 = *MEMORY[0x263F43E38];
    uint64_t v21 = v7;
    unsigned int v22 = *MEMORY[0x263F43E40];
    if (v19) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = v20;
    }
    v18(v16, v23, v10);
    sub_241DA9B20();
    uint64_t v24 = v28;
    if (v28) {
      uint64_t v25 = v22;
    }
    else {
      uint64_t v25 = v20;
    }
    v18(v14, v25, v10);
    sub_241DA9B20();
    if (v24 | v29) {
      uint64_t v26 = v20;
    }
    else {
      uint64_t v26 = v22;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v31, v26, v30);
    sub_241DA9B20();
    return swift_release();
  }
  return result;
}

void sub_241D4EC04()
{
}

uint64_t sub_241D4EC34()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_241D4ECB4()
{
  sub_241DA9F20();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241D4ED54()
{
  return type metadata accessor for LatestOrAddVisionPrescriptionDataSource();
}

void sub_241D4ED5C()
{
  if (!qword_268D4BF08)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_241D526CC(255, &qword_268D4BF10, (uint64_t (*)(uint64_t))sub_241D4EE3C, MEMORY[0x263EFDCF0]);
    sub_241D4EEA0();
    sub_241D52508(&qword_268D4BF28, &qword_268D4BF10, v0);
    unint64_t v1 = sub_241DAA510();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D4BF08);
    }
  }
}

void sub_241D4EE3C()
{
  if (!qword_268D4BF18)
  {
    sub_241D4EEA0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D4BF18);
    }
  }
}

void sub_241D4EEA0()
{
  if (!qword_268D4BF20)
  {
    sub_241D28BF4(255, (unint64_t *)&qword_268D4C210);
    unint64_t v0 = sub_241DAAEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BF20);
    }
  }
}

uint64_t sub_241D4EF08(void *a1)
{
  uint64_t v87 = a1;
  sub_241D510A0(0, &qword_268D4B8C8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v113 = (char *)&v76 - v2;
  sub_241D51AA8();
  uint64_t v109 = *(void *)(v3 - 8);
  uint64_t v110 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v108 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D51668(0, &qword_268D4C0D8, sub_241D52564, (void (*)(void))sub_241D52774);
  uint64_t v114 = v5;
  uint64_t v112 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v111 = (char *)&v76 - v6;
  sub_241D51FD0();
  uint64_t v99 = v7;
  uint64_t v95 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v92 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D51104(0, &qword_268D4C060, (void (*)(uint64_t))sub_241D51FD0, MEMORY[0x263F44AA8], (void (*)(void))sub_241D52368);
  uint64_t v97 = v9;
  uint64_t v93 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v90 = (char *)&v76 - v10;
  sub_241D51E00();
  uint64_t v98 = v11;
  uint64_t v94 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v91 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D51104(0, &qword_268D4C048, (void (*)(uint64_t))sub_241D51E00, (void (*)(uint64_t))sub_241D4EE3C, (void (*)(void))sub_241D52438);
  uint64_t v101 = *(void *)(v13 - 8);
  uint64_t v102 = v13;
  MEMORY[0x270FA5388](v13);
  id v96 = (char *)&v76 - v14;
  sub_241D51CCC();
  uint64_t v106 = *(void *)(v15 - 8);
  uint64_t v107 = v15;
  MEMORY[0x270FA5388](v15);
  id v105 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_241DAAD50();
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v86 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = MEMORY[0x263F8EE60] + 8;
  sub_241D520D0(0, (unint64_t *)&unk_268D4C3C0, MEMORY[0x263F07CB0], (void (*)(void))sub_241D5220C);
  uint64_t v116 = v18;
  uint64_t v104 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  id v103 = (char *)&v76 - v19;
  uint64_t v79 = sub_241DAABD0();
  uint64_t v80 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D36EF8();
  uint64_t v81 = v22;
  uint64_t v83 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  long long v77 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D370D0();
  uint64_t v82 = v24;
  uint64_t v84 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v78 = (char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D520D0(0, &qword_268D4C070, (void (*)(uint64_t))sub_241D370D0, (void (*)(void))sub_241D521D8);
  uint64_t v115 = v26;
  uint64_t v100 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v76 - v27;
  sub_241D28BF4(0, (unint64_t *)&unk_268D4D370);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v30 = objc_msgSend(ObjCClassFromMetadata, sel_visionPrescriptionType);
  id v85 = objc_msgSend(self, sel_queryDescriptorWithSampleType_, v30);

  sub_241D51744(0, (unint64_t *)&qword_268D4BC80, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_241DB33C0;
  sub_241DAA990();
  id v32 = objc_allocWithZone(MEMORY[0x263F08B30]);
  id v33 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v32, sel_initWithKey_ascending_, v33, 0);

  *(void *)(v31 + 32) = v34;
  sub_241DAA990();
  id v35 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v36 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  uint64_t v37 = v28;
  id v38 = objc_msgSend(v35, sel_initWithKey_ascending_, v36, 0);

  *(void *)(v31 + 40) = v38;
  uint64_t v39 = v87;
  uint64_t v118 = v31;
  sub_241DAAB10();
  uint64_t v40 = v118;
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_241DB33B0;
  *(void *)(v41 + 32) = objc_msgSend(ObjCClassFromMetadata, sel_visionPrescriptionType);
  uint64_t v118 = v41;
  sub_241DAAB10();
  sub_241DAABF0();
  swift_bridgeObjectRelease();
  sub_241D526CC(0, (unint64_t *)&qword_268D4B8D8, (uint64_t (*)(uint64_t))sub_241D3704C, MEMORY[0x263EFDE08]);
  sub_241D51194();
  sub_241D52150();
  uint64_t v42 = v77;
  uint64_t v43 = v79;
  sub_241DAA770();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v21, v43);
  sub_241DAABC0();
  sub_241D36B4C(0, (unint64_t *)&qword_268D4C3D0);
  sub_241D5012C(&qword_268D4B8F8, (void (*)(uint64_t))sub_241D36EF8);
  uint64_t v44 = v78;
  uint64_t v45 = v81;
  sub_241DAA6E0();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v42, v45);
  sub_241D521D8();
  uint64_t v46 = v82;
  sub_241DAA750();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v44, v46);
  id v47 = objc_msgSend(self, sel_defaultCenter);
  if (qword_268D4B4B0 != -1) {
    swift_once();
  }
  uint64_t v48 = v86;
  sub_241DAAD60();

  sub_241D5220C();
  uint64_t v49 = v103;
  uint64_t v50 = v89;
  sub_241DAA750();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v48, v50);
  sub_241D52240();
  sub_241D522D4();
  uint64_t v51 = v92;
  sub_241DAA780();
  uint64_t v52 = (void *)swift_allocObject();
  uint64_t v53 = v85;
  v52[2] = v39;
  v52[3] = v53;
  v52[4] = v40;
  uint64_t v54 = swift_allocObject();
  uint64_t v89 = (uint64_t)v37;
  *(void *)(v54 + 16) = sub_241D527F0;
  *(void *)(v54 + 24) = v52;
  sub_241DAAB90();
  sub_241D52368();
  id v55 = v39;
  id v56 = v53;
  id v57 = v90;
  uint64_t v58 = v99;
  sub_241DAA750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v51, v58);
  sub_241D5239C();
  sub_241D5012C(&qword_268D4C410, MEMORY[0x263F44AA8]);
  uint64_t v59 = v91;
  uint64_t v60 = v97;
  sub_241DAA7F0();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v57, v60);
  sub_241D4EE3C();
  sub_241D52438();
  uint64_t v61 = v96;
  uint64_t v62 = v98;
  sub_241DAA750();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v59, v62);
  uint64_t v63 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDE08];
  sub_241D526CC(0, &qword_268D4C0B0, (uint64_t (*)(uint64_t))sub_241D4EE3C, MEMORY[0x263EFDE08]);
  sub_241D5246C();
  sub_241D52508(&qword_268D4C0C0, &qword_268D4C0B0, v63);
  uint64_t v64 = v105;
  uint64_t v65 = v102;
  sub_241DAA770();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v61, v65);
  sub_241D5012C(&qword_268D4C0D0, (void (*)(uint64_t))sub_241D51CCC);
  uint64_t v67 = v107;
  uint64_t v66 = v108;
  sub_241DAA7A0();
  sub_241D5012C(&qword_268D4C0F8, (void (*)(uint64_t))sub_241D51AA8);
  uint64_t v68 = v110;
  uint64_t v69 = sub_241DAA6F0();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v66, v68);
  uint64_t v118 = v69;
  sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
  id v117 = (id)sub_241DAAD00();
  uint64_t v70 = sub_241DAACE0();
  uint64_t v71 = (uint64_t)v113;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v113, 1, 1, v70);
  sub_241D52564(0);
  sub_241D52774();
  sub_241D3772C();
  uint64_t v72 = v111;
  sub_241DAA7B0();
  sub_241D51810(v71);

  swift_release();
  sub_241D5189C(&qword_268D4C118, &qword_268D4C0D8, sub_241D52564, (void (*)(void))sub_241D52774);
  uint64_t v73 = v114;
  uint64_t v74 = sub_241DAA720();

  (*(void (**)(char *, uint64_t))(v112 + 8))(v72, v73);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v64, v67);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v49, v116);
  (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v89, v115);
  return v74;
}

uint64_t sub_241D5012C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241D50174(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v19 = sub_241D50D2C;
  sub_241D50F28(0, &qword_268D4C010, (uint64_t (*)(uint64_t))sub_241D50D2C, sub_241D50E58, MEMORY[0x263F43E48]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v18 - v11;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0D8]), sel_initWithHealthStore_, a3);
  type metadata accessor for VisionPrescriptionAnalyticsContext();
  swift_allocObject();
  swift_retain();
  uint64_t v14 = sub_241DA5C58(a3);
  type metadata accessor for VisionPrescriptionDataSource();
  swift_allocObject();
  sub_241D8E9E8(v13, a4, v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  swift_bridgeObjectRetain();
  uint64_t v16 = MEMORY[0x263F440A0];
  sub_241DA9B70();
  swift_release();
  swift_release();
  sub_241D518EC(0, &qword_268D4BF50, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionDataSource, v16, MEMORY[0x263F43C70]);
  sub_241D50DC8();
  sub_241DA9B60();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F43E40], v9);
  sub_241D50F28(0, &qword_268D4BF40, (uint64_t (*)(uint64_t))v19, sub_241D50E58, MEMORY[0x263F43E58]);
  swift_allocObject();
  return sub_241DA9B30();
}

uint64_t sub_241D5045C(uint64_t a1, uint64_t a2)
{
  sub_241D50F28(0, &qword_268D4BF78, (uint64_t (*)(uint64_t))sub_241D3A490, sub_241D5100C, MEMORY[0x263F43E48]);
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)v31 - v5;
  uint64_t v42 = sub_241DA9C00();
  uint64_t v36 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_241DA97B0();
  uint64_t v7 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_241DA9D90();
  uint64_t v33 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_241DA95E0();
  v31[1] = v12;
  *(void *)&long long v32 = v11;
  id v13 = (void *)sub_241DAA950();
  id v14 = objc_msgSend(self, sel_systemImageNamed_, v13);

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  type metadata accessor for VisionPrescriptionAddPrescriptionButtonCell();
  swift_retain();
  sub_241DA9A30();
  sub_241DA97A0();
  sub_241DA9780();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v9, v38);
  uint64_t v17 = v39;
  sub_241DA9D80();
  sub_241D50C30(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668);
  uint64_t v18 = swift_allocObject();
  long long v32 = xmmword_241DB2C80;
  *(_OWORD *)(v18 + 16) = xmmword_241DB2C80;
  uint64_t v19 = v40;
  *(void *)(v18 + 56) = v40;
  *(void *)(v18 + 64) = sub_241D5012C(&qword_268D4BD60, MEMORY[0x263F441B8]);
  uint64_t v20 = sub_241D2C600((uint64_t *)(v18 + 32));
  uint64_t v21 = v33;
  (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 16))(v20, v17, v19);
  sub_241DA97A0();
  sub_241DA9780();
  uint64_t v22 = v38;
  v16(v9, v38);
  uint64_t v23 = v41;
  sub_241DA9BF0();
  sub_241D510A0(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  uint64_t v24 = v36;
  unint64_t v25 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 16))(v26 + v25, v23, v42);
  uint64_t v43 = 0x3C53447961727241;
  unint64_t v44 = 0xE800000000000000;
  sub_241DA97A0();
  sub_241DA9780();
  v16(v9, v22);
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  sub_241DAAA50();
  sub_241DA9AB0();
  swift_allocObject();
  sub_241DA9AA0();
  uint64_t v27 = MEMORY[0x263F43CC0];
  sub_241DA9B40();
  swift_release();
  uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x263F43CC8];
  sub_241D518EC(0, (unint64_t *)&qword_268D4B9F8, MEMORY[0x263F43CC8], v27, MEMORY[0x263F43CD0]);
  sub_241D50FA8((unint64_t *)&qword_268D4C320, (unint64_t *)&qword_268D4B9F8, v28, v27);
  sub_241DA9B60();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v37, *MEMORY[0x263F43E40], v35);
  sub_241D50F28(0, &qword_268D4BF70, (uint64_t (*)(uint64_t))sub_241D3A490, sub_241D5100C, MEMORY[0x263F43E58]);
  swift_allocObject();
  uint64_t v29 = sub_241DA9B30();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v41, v42);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v39, v40);
  return v29;
}

void sub_241D50C30(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241D36B4C(255, a3);
    unint64_t v4 = sub_241DAB130();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_241D50C90()
{
  unint64_t result = qword_268D4BF38;
  if (!qword_268D4BF38)
  {
    sub_241D50F28(255, &qword_268D4BF40, (uint64_t (*)(uint64_t))sub_241D50D2C, sub_241D50E58, MEMORY[0x263F43E58]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4BF38);
  }
  return result;
}

void sub_241D50D2C()
{
  if (!qword_268D4BF48)
  {
    sub_241D518EC(255, &qword_268D4BF50, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionDataSource, MEMORY[0x263F440A0], MEMORY[0x263F43C70]);
    sub_241D50DC8();
    unint64_t v0 = sub_241DA9B80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BF48);
    }
  }
}

unint64_t sub_241D50DC8()
{
  unint64_t result = qword_268D4BF58;
  if (!qword_268D4BF58)
  {
    sub_241D518EC(255, &qword_268D4BF50, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionDataSource, MEMORY[0x263F440A0], MEMORY[0x263F43C70]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4BF58);
  }
  return result;
}

uint64_t sub_241D50E58()
{
  return sub_241D5012C(&qword_268D4BF60, (void (*)(uint64_t))sub_241D50D2C);
}

unint64_t sub_241D50E8C()
{
  unint64_t result = qword_268D4BF68;
  if (!qword_268D4BF68)
  {
    sub_241D50F28(255, &qword_268D4BF70, (uint64_t (*)(uint64_t))sub_241D3A490, sub_241D5100C, MEMORY[0x263F43E58]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4BF68);
  }
  return result;
}

void sub_241D50F28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_241D50FA8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241D518EC(255, a2, a3, a4, MEMORY[0x263F43CD0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241D5100C()
{
  return sub_241D5012C(&qword_268D4BA00, (void (*)(uint64_t))sub_241D3A490);
}

uint64_t sub_241D51040()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241D51078()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_241D510A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241D51104(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_241DAA510();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241D51194()
{
  return sub_241D5012C(&qword_268D4C3B0, MEMORY[0x263F44B10]);
}

void sub_241D511C8()
{
  if (!qword_268D4BF88)
  {
    sub_241DAABB0();
    sub_241D51104(255, &qword_268D4BF80, MEMORY[0x263F44B10], MEMORY[0x263F44AC8], (void (*)(void))sub_241D51194);
    sub_241D5012C(&qword_268D4BF90, MEMORY[0x263F44AC8]);
    sub_241D512C8();
    unint64_t v0 = sub_241DAA4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BF88);
    }
  }
}

unint64_t sub_241D512C8()
{
  unint64_t result = qword_268D4BF98;
  if (!qword_268D4BF98)
  {
    sub_241D51104(255, &qword_268D4BF80, MEMORY[0x263F44B10], MEMORY[0x263F44AC8], (void (*)(void))sub_241D51194);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4BF98);
  }
  return result;
}

uint64_t sub_241D51364()
{
  return sub_241D5012C(&qword_268D4BFA8, (void (*)(uint64_t))sub_241D511C8);
}

void sub_241D51398()
{
  if (!qword_268D4BFB0)
  {
    uint64_t v0 = MEMORY[0x263F8D6C8];
    sub_241D520D0(255, &qword_268D4BFA0, (void (*)(uint64_t))sub_241D511C8, (void (*)(void))sub_241D51364);
    sub_241D51744(255, &qword_268D4BFB8, v0, MEMORY[0x263EFDDF8]);
    sub_241D51480();
    sub_241D51510();
    unint64_t v1 = sub_241DAA530();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D4BFB0);
    }
  }
}

unint64_t sub_241D51480()
{
  unint64_t result = qword_268D4BFC0;
  if (!qword_268D4BFC0)
  {
    sub_241D520D0(255, &qword_268D4BFA0, (void (*)(uint64_t))sub_241D511C8, (void (*)(void))sub_241D51364);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4BFC0);
  }
  return result;
}

unint64_t sub_241D51510()
{
  unint64_t result = qword_268D4BFC8;
  if (!qword_268D4BFC8)
  {
    sub_241D51744(255, &qword_268D4BFB8, MEMORY[0x263F8D6C8], MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4BFC8);
  }
  return result;
}

void sub_241D5158C()
{
  if (!qword_268D4BFD0)
  {
    sub_241D51398();
    sub_241D510A0(255, &qword_268D4B820, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
    sub_241D5012C(&qword_268D4BFD8, (void (*)(uint64_t))sub_241D51398);
    unint64_t v0 = sub_241DAA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4BFD0);
    }
  }
}

void sub_241D51668(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_241D28BF4(255, (unint64_t *)&qword_268D4BC40);
    a4();
    sub_241D3772C();
    unint64_t v6 = sub_241DAA580();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_241D51710()
{
  return sub_241D5012C(&qword_268D4BFE8, (void (*)(uint64_t))sub_241D5158C);
}

void sub_241D51744(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241D51790()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D517C8()
{
  return sub_241D4D538();
}

uint64_t sub_241D517D0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241D51808@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241D4D934(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_241D51810(uint64_t a1)
{
  sub_241D510A0(0, &qword_268D4B8C8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241D5189C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241D51668(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241D518EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_241D51958()
{
  if (!qword_268D4C000)
  {
    uint64_t v0 = MEMORY[0x263F44428];
    uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x263F44430];
    sub_241D518EC(255, &qword_268D4B838, MEMORY[0x263F44430], MEMORY[0x263F44428], MEMORY[0x263F43CD0]);
    sub_241D50FA8((unint64_t *)&qword_268D4B840, &qword_268D4B838, v1, v0);
    unint64_t v2 = sub_241DA9B80();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_268D4C000);
    }
  }
}

uint64_t sub_241D51A24(void *a1)
{
  return sub_241D4E450(a1, *(void **)(v1 + 16));
}

unint64_t sub_241D51A2C()
{
  unint64_t result = qword_268D4C008;
  if (!qword_268D4C008)
  {
    type metadata accessor for LatestOrAddVisionPrescriptionDataSource();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4C008);
  }
  return result;
}

uint64_t sub_241D51A68()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241D51AA0@<X0>(uint64_t *a1@<X8>)
{
  return sub_241D4D184(a1);
}

void sub_241D51AA8()
{
  if (!qword_268D4C020)
  {
    sub_241D51B94();
    sub_241D51CCC();
    sub_241D5012C(&qword_268D4C0C8, (void (*)(uint64_t))sub_241D51B94);
    sub_241D5012C(&qword_268D4C0D0, (void (*)(uint64_t))sub_241D51CCC);
    unint64_t v0 = sub_241DAA4C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C020);
    }
  }
}

void sub_241D51B94()
{
  if (!qword_268D4C028)
  {
    sub_241D510A0(255, &qword_268D4C030, (uint64_t (*)(uint64_t))sub_241D4EE3C, MEMORY[0x263F8D488]);
    sub_241D51C44();
    unint64_t v0 = sub_241DAA560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C028);
    }
  }
}

unint64_t sub_241D51C44()
{
  unint64_t result = qword_268D4C038;
  if (!qword_268D4C038)
  {
    sub_241D510A0(255, &qword_268D4C030, (uint64_t (*)(uint64_t))sub_241D4EE3C, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C038);
  }
  return result;
}

void sub_241D51CCC()
{
  if (!qword_268D4C040)
  {
    sub_241D51104(255, &qword_268D4C048, (void (*)(uint64_t))sub_241D51E00, (void (*)(uint64_t))sub_241D4EE3C, (void (*)(void))sub_241D52438);
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDE08];
    sub_241D526CC(255, &qword_268D4C0B0, (uint64_t (*)(uint64_t))sub_241D4EE3C, MEMORY[0x263EFDE08]);
    sub_241D5246C();
    sub_241D52508(&qword_268D4C0C0, &qword_268D4C0B0, v0);
    unint64_t v1 = sub_241DAA530();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D4C040);
    }
  }
}

void sub_241D51E00()
{
  if (!qword_268D4C050)
  {
    sub_241DAAB90();
    sub_241D51EEC();
    sub_241D5012C(&qword_268D4C410, MEMORY[0x263F44AA8]);
    sub_241D5012C(&qword_268D4C0A0, (void (*)(uint64_t))sub_241D51EEC);
    unint64_t v0 = sub_241DAA4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C050);
    }
  }
}

void sub_241D51EEC()
{
  if (!qword_268D4C058)
  {
    sub_241D51104(255, &qword_268D4C060, (void (*)(uint64_t))sub_241D51FD0, MEMORY[0x263F44AA8], (void (*)(void))sub_241D52368);
    sub_241D36B4C(255, (unint64_t *)&qword_268D4C3D0);
    sub_241D5239C();
    unint64_t v0 = sub_241DAA4D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C058);
    }
  }
}

void sub_241D51FD0()
{
  if (!qword_268D4C068)
  {
    sub_241D520D0(255, &qword_268D4C070, (void (*)(uint64_t))sub_241D370D0, (void (*)(void))sub_241D521D8);
    sub_241D520D0(255, (unint64_t *)&unk_268D4C3C0, MEMORY[0x263F07CB0], (void (*)(void))sub_241D5220C);
    sub_241D52240();
    sub_241D522D4();
    unint64_t v0 = sub_241DAA540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C068);
    }
  }
}

void sub_241D520D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_241DAA510();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_241D52150()
{
  unint64_t result = qword_268D4B8E8;
  if (!qword_268D4B8E8)
  {
    sub_241D526CC(255, (unint64_t *)&qword_268D4B8D8, (uint64_t (*)(uint64_t))sub_241D3704C, MEMORY[0x263EFDE08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4B8E8);
  }
  return result;
}

uint64_t sub_241D521D8()
{
  return sub_241D5012C(&qword_268D4B908, (void (*)(uint64_t))sub_241D370D0);
}

uint64_t sub_241D5220C()
{
  return sub_241D5012C(&qword_268D4C078, MEMORY[0x263F07CB0]);
}

unint64_t sub_241D52240()
{
  unint64_t result = qword_268D4C080;
  if (!qword_268D4C080)
  {
    sub_241D520D0(255, &qword_268D4C070, (void (*)(uint64_t))sub_241D370D0, (void (*)(void))sub_241D521D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C080);
  }
  return result;
}

unint64_t sub_241D522D4()
{
  unint64_t result = qword_268D4C088;
  if (!qword_268D4C088)
  {
    sub_241D520D0(255, (unint64_t *)&unk_268D4C3C0, MEMORY[0x263F07CB0], (void (*)(void))sub_241D5220C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C088);
  }
  return result;
}

uint64_t sub_241D52368()
{
  return sub_241D5012C(&qword_268D4C090, (void (*)(uint64_t))sub_241D51FD0);
}

unint64_t sub_241D5239C()
{
  unint64_t result = qword_268D4C098;
  if (!qword_268D4C098)
  {
    sub_241D51104(255, &qword_268D4C060, (void (*)(uint64_t))sub_241D51FD0, MEMORY[0x263F44AA8], (void (*)(void))sub_241D52368);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C098);
  }
  return result;
}

uint64_t sub_241D52438()
{
  return sub_241D5012C(&qword_268D4C0A8, (void (*)(uint64_t))sub_241D51E00);
}

unint64_t sub_241D5246C()
{
  unint64_t result = qword_268D4C0B8;
  if (!qword_268D4C0B8)
  {
    sub_241D51104(255, &qword_268D4C048, (void (*)(uint64_t))sub_241D51E00, (void (*)(uint64_t))sub_241D4EE3C, (void (*)(void))sub_241D52438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C0B8);
  }
  return result;
}

uint64_t sub_241D52508(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241D526CC(255, a2, (uint64_t (*)(uint64_t))sub_241D4EE3C, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241D52564(uint64_t a1)
{
}

void sub_241D525AC()
{
  if (!qword_268D4C0E8)
  {
    sub_241D51AA8();
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263F43558];
    sub_241D526CC(255, &qword_268D4C0F0, (uint64_t (*)(uint64_t))sub_241D4EE3C, MEMORY[0x263F43558]);
    sub_241D5012C(&qword_268D4C0F8, (void (*)(uint64_t))sub_241D51AA8);
    sub_241D52508(&qword_268D4C100, &qword_268D4C0F0, v0);
    unint64_t v1 = sub_241DAA570();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D4C0E8);
    }
  }
}

void sub_241D526CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241D52740()
{
  return sub_241D5012C(&qword_268D4C108, (void (*)(uint64_t))sub_241D525AC);
}

uint64_t sub_241D52774()
{
  return sub_241D5012C(&qword_268D4C110, sub_241D52564);
}

uint64_t sub_241D527A8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241D527F0()
{
  return sub_241D4CAE8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_241D527FC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_241D52824()
{
  if (!qword_268D4C120)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_241D526CC(255, &qword_268D4BF10, (uint64_t (*)(uint64_t))sub_241D4EE3C, MEMORY[0x263EFDCF0]);
    sub_241D28BF4(255, (unint64_t *)&qword_268D4BC40);
    sub_241D52508(&qword_268D4BF28, &qword_268D4BF10, v0);
    sub_241D3772C();
    unint64_t v1 = sub_241DAA580();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D4C120);
    }
  }
}

uint64_t sub_241D52924()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D5295C(uint64_t a1, uint64_t a2)
{
  return sub_241D4E928(a1, a2);
}

uint64_t sub_241D52964(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_241D529A0(char a1)
{
  switch(a1)
  {
    case 0:
      id v2 = objc_msgSend(v1, sel_leftEye);
      if (v2)
      {
        uint64_t v3 = v2;
        id v4 = objc_msgSend(v2, sel_sphere);
      }
      else
      {
        id v4 = 0;
      }
      id v16 = objc_msgSend(v1, sel_rightEye);
      if (!v16) {
        goto LABEL_29;
      }
      id v12 = v16;
      id v13 = objc_msgSend(v16, sel_sphere);
      goto LABEL_25;
    case 1:
      id v5 = objc_msgSend(v1, sel_leftEye);
      if (v5)
      {
        unint64_t v6 = v5;
        id v4 = objc_msgSend(v5, sel_cylinder);
      }
      else
      {
        id v4 = 0;
      }
      id v17 = objc_msgSend(v1, sel_rightEye);
      if (!v17) {
        goto LABEL_29;
      }
      id v12 = v17;
      id v13 = objc_msgSend(v17, sel_cylinder);
      goto LABEL_25;
    case 2:
      id v7 = objc_msgSend(v1, sel_leftEye);
      if (v7)
      {
        unint64_t v8 = v7;
        id v4 = objc_msgSend(v7, sel_axis);
      }
      else
      {
        id v4 = 0;
      }
      id v18 = objc_msgSend(v1, sel_rightEye);
      if (!v18) {
        goto LABEL_29;
      }
      id v12 = v18;
      id v13 = objc_msgSend(v18, sel_axis);
      goto LABEL_25;
    case 3:
      id v9 = objc_msgSend(v1, sel_leftEye);
      if (v9)
      {
        unint64_t v10 = v9;
        id v4 = objc_msgSend(v9, sel_addPower);
      }
      else
      {
        id v4 = 0;
      }
      id v19 = objc_msgSend(v1, sel_rightEye);
      if (v19)
      {
        id v12 = v19;
        id v13 = objc_msgSend(v19, sel_addPower);
LABEL_25:
        id v20 = v13;

        if (v4) {
          goto LABEL_26;
        }
      }
      else
      {
LABEL_29:
        id v20 = 0;
        if (v4)
        {
LABEL_26:
          if (v20)
          {
            uint64_t v21 = *(void *)aBoth;
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v21 = *(void *)aLeft;
            swift_bridgeObjectRetain();
          }
          return v21;
        }
      }
      if (v20)
      {
        uint64_t v21 = *(void *)aRight;
        swift_bridgeObjectRetain();
      }
      else
      {
LABEL_32:
        uint64_t v21 = *(void *)aNone;
        swift_bridgeObjectRetain();
      }
      return v21;
    case 4:
      id v11 = objc_msgSend(v1, sel_leftEye);
      id v4 = objc_msgSend(v11, sel_vertexDistance);

      id v12 = objc_msgSend(v1, sel_rightEye);
      id v13 = objc_msgSend(v12, sel_vertexDistance);
      goto LABEL_25;
    case 11:
      id v14 = objc_msgSend(v1, sel_leftEye);
      id v4 = objc_msgSend(v14, sel_nearPupillaryDistance);

      id v12 = objc_msgSend(v1, sel_rightEye);
      id v13 = objc_msgSend(v12, sel_nearPupillaryDistance);
      goto LABEL_25;
    case 12:
      id v15 = objc_msgSend(v1, sel_leftEye);
      id v4 = objc_msgSend(v15, sel_farPupillaryDistance);

      id v12 = objc_msgSend(v1, sel_rightEye);
      id v13 = objc_msgSend(v12, sel_farPupillaryDistance);
      goto LABEL_25;
    default:
      goto LABEL_32;
  }
}

uint64_t sub_241D52DB4()
{
  id v1 = objc_msgSend(v0, sel_leftEye);
  id v2 = objc_msgSend(v1, sel_prism);

  id v3 = objc_msgSend(v0, sel_rightEye);
  id v4 = objc_msgSend(v3, sel_prism);

  if (v2)
  {
    if (v4)
    {
      uint64_t v5 = *(void *)aBoth;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v5 = *(void *)aLeft;
      swift_bridgeObjectRetain();
    }
  }
  else if (v4)
  {
    uint64_t v5 = *(void *)aRight;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = *(void *)aNone;
    swift_bridgeObjectRetain();
  }
  return v5;
}

uint64_t sub_241D52EC4(char a1)
{
  switch(a1)
  {
    case 0:
      id v2 = objc_msgSend(v1, sel_leftEye);
      if (v2)
      {
        id v3 = v2;
        id v4 = objc_msgSend(v2, sel_sphere);
      }
      else
      {
        id v4 = 0;
      }
      id v15 = objc_msgSend(v1, sel_rightEye);
      if (!v15) {
        goto LABEL_27;
      }
      id v12 = v15;
      id v13 = objc_msgSend(v15, sel_sphere);
      goto LABEL_24;
    case 1:
      id v5 = objc_msgSend(v1, sel_leftEye);
      if (v5)
      {
        unint64_t v6 = v5;
        id v4 = objc_msgSend(v5, sel_cylinder);
      }
      else
      {
        id v4 = 0;
      }
      id v16 = objc_msgSend(v1, sel_rightEye);
      if (!v16) {
        goto LABEL_27;
      }
      id v12 = v16;
      id v13 = objc_msgSend(v16, sel_cylinder);
      goto LABEL_24;
    case 2:
      id v7 = objc_msgSend(v1, sel_leftEye);
      if (v7)
      {
        unint64_t v8 = v7;
        id v4 = objc_msgSend(v7, sel_axis);
      }
      else
      {
        id v4 = 0;
      }
      id v17 = objc_msgSend(v1, sel_rightEye);
      if (!v17) {
        goto LABEL_27;
      }
      id v12 = v17;
      id v13 = objc_msgSend(v17, sel_axis);
      goto LABEL_24;
    case 3:
      id v9 = objc_msgSend(v1, sel_leftEye);
      if (v9)
      {
        unint64_t v10 = v9;
        id v4 = objc_msgSend(v9, sel_addPower);
      }
      else
      {
        id v4 = 0;
      }
      id v18 = objc_msgSend(v1, sel_rightEye);
      if (v18)
      {
        id v12 = v18;
        id v13 = objc_msgSend(v18, sel_addPower);
LABEL_24:
        id v19 = v13;

        if (v4) {
          goto LABEL_25;
        }
      }
      else
      {
LABEL_27:
        id v19 = 0;
        if (v4)
        {
LABEL_25:
          if (v19)
          {
            uint64_t v20 = *(void *)aBoth;
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v20 = *(void *)aLeft;
            swift_bridgeObjectRetain();
          }
          return v20;
        }
      }
      if (v19)
      {
        uint64_t v20 = *(void *)aRight;
        swift_bridgeObjectRetain();
      }
      else
      {
LABEL_30:
        uint64_t v20 = *(void *)aNone;
        swift_bridgeObjectRetain();
      }
      return v20;
    case 13:
      id v11 = objc_msgSend(v1, sel_leftEye);
      id v4 = objc_msgSend(v11, sel_baseCurve);

      id v12 = objc_msgSend(v1, sel_rightEye);
      id v13 = objc_msgSend(v12, sel_baseCurve);
      goto LABEL_24;
    case 14:
      id v14 = objc_msgSend(v1, sel_leftEye);
      id v4 = objc_msgSend(v14, sel_diameter);

      id v12 = objc_msgSend(v1, sel_rightEye);
      id v13 = objc_msgSend(v12, sel_diameter);
      goto LABEL_24;
    default:
      goto LABEL_30;
  }
}

void *sub_241D5327C(uint64_t a1, id a2, int a3)
{
  id v4 = v3;
  int v69 = a3;
  uint64_t v68 = *v3;
  sub_241D54EFC(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v70 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v71 = (char *)v62 - v10;
  uint64_t v11 = sub_241DAA2E0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D54EFC(0, (unint64_t *)&qword_268D4C190, MEMORY[0x263F442A8]);
  MEMORY[0x270FA5388](v15 - 8);
  id v17 = (char *)v62 - v16;
  uint64_t v18 = sub_241DA9ED0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D54E7C(a1, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_241D54F50((uint64_t)v17, (unint64_t *)&qword_268D4C190, MEMORY[0x263F442A8]);
    v4[2] = 0;
    v4[3] = 0;
  }
  else
  {
    uint64_t v66 = v12;
    uint64_t v67 = a1;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    sub_241DAA2C0();
    uint64_t v22 = sub_241DAA2D0();
    os_log_type_t v23 = sub_241DAAC30();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v65 = v11;
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      *(void *)&long long v73 = v64;
      uint64_t v63 = v24;
      *(_DWORD *)uint64_t v24 = 136315138;
      v62[1] = v24 + 4;
      uint64_t v25 = sub_241DAB1F0();
      uint64_t v72 = sub_241D48854(v25, v26, (uint64_t *)&v73);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      uint64_t v27 = v63;
      _os_log_impl(&dword_241D1C000, v22, v23, "[%s] Demographics data exists. Setting age and biological sex.", v63, 0xCu);
      uint64_t v28 = v64;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v28, -1, -1);
      MEMORY[0x24563A5D0](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v14, v65);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v66 + 8))(v14, v11);
    }
    v4[2] = sub_241DA9EA0();
    uint64_t v29 = sub_241DA9EB0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v4[3] = v29;
    a1 = v67;
  }
  uint64_t v31 = (uint64_t)v70;
  uint64_t v30 = (uint64_t)v71;
  char v32 = v69;
  v4[4] = sub_241DAA950();
  if (a2 && (id v33 = objc_msgSend(a2, sel_metadata)) != 0)
  {
    uint64_t v34 = v33;
    uint64_t v35 = sub_241DAA920();

    uint64_t v36 = sub_241DAA990();
    if (*(void *)(v35 + 16) && (unint64_t v38 = sub_241DA3428(v36, v37), (v39 & 1) != 0))
    {
      sub_241D2DA4C(*(void *)(v35 + 56) + 32 * v38, (uint64_t)&v73);
    }
    else
    {
      long long v73 = 0u;
      long long v74 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v40 = *((void *)&v74 + 1) != 0;
  }
  else
  {
    BOOL v40 = 0;
    long long v73 = 0u;
    long long v74 = 0u;
  }
  sub_241D2D994((uint64_t)&v73);
  v4[6] = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v40);
  v4[5] = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v32 & 1);
  if (a2)
  {
    id v41 = objc_msgSend(a2, sel_expirationDate);
    if (v41)
    {
      uint64_t v42 = v41;
      sub_241DA9750();

      uint64_t v43 = sub_241DA9770();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v31, 0, 1, v43);
    }
    else
    {
      uint64_t v43 = sub_241DA9770();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v31, 1, 1, v43);
    }
    sub_241D54FAC(v31, v30);
    sub_241DA9770();
    BOOL v45 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v30, 1, v43) != 1;
  }
  else
  {
    uint64_t v44 = sub_241DA9770();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v30, 1, 1, v44);
    BOOL v45 = 0;
  }
  sub_241D54F50(v30, &qword_268D4B5B0, MEMORY[0x263F07490]);
  v4[8] = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v45);
  if (a2)
  {
    id v46 = a2;
    sub_241D529A0(0);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v47 = sub_241DAA950();
  swift_bridgeObjectRelease();
  v4[9] = v47;
  if (a2)
  {
    id v48 = a2;
    sub_241D529A0(1);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v49 = sub_241DAA950();
  swift_bridgeObjectRelease();
  v4[10] = v49;
  if (a2)
  {
    id v50 = a2;
    sub_241D529A0(2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v51 = sub_241DAA950();
  swift_bridgeObjectRelease();
  v4[11] = v51;
  if (a2)
  {
    id v52 = a2;
    sub_241D529A0(3);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v53 = sub_241DAA950();
  swift_bridgeObjectRelease();
  v4[12] = v53;
  if (a2)
  {
    id v54 = a2;
    sub_241D529A0(12);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v55 = sub_241DAA950();
  swift_bridgeObjectRelease();
  v4[13] = v55;
  if (a2)
  {
    id v56 = a2;
    sub_241D529A0(11);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v57 = sub_241DAA950();
  swift_bridgeObjectRelease();
  v4[14] = v57;
  if (a2)
  {
    id v58 = a2;
    sub_241D529A0(4);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v59 = sub_241DAA950();
  swift_bridgeObjectRelease();
  v4[15] = v59;
  if (a2)
  {
    a2 = a2;
    sub_241D52DB4();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v60 = sub_241DAA950();
  swift_bridgeObjectRelease();

  sub_241D54F50(a1, (unint64_t *)&qword_268D4C190, MEMORY[0x263F442A8]);
  v4[7] = 0;
  v4[17] = 0;
  v4[18] = 0;
  v4[16] = v60;
  return v4;
}

void *sub_241D53C4C(uint64_t a1, id a2, int a3)
{
  id v4 = v3;
  uint64_t v60 = *v3;
  sub_241D54EFC(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v62 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v63 = (char *)&v54 - v11;
  uint64_t v12 = sub_241DAA2E0();
  uint64_t v61 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D54EFC(0, (unint64_t *)&qword_268D4C190, MEMORY[0x263F442A8]);
  MEMORY[0x270FA5388](v15 - 8);
  id v17 = (char *)&v54 - v16;
  uint64_t v18 = sub_241DA9ED0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D54E7C(a1, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_241D54F50((uint64_t)v17, (unint64_t *)&qword_268D4C190, MEMORY[0x263F442A8]);
    v4[2] = 0;
    v4[3] = 0;
  }
  else
  {
    int v58 = a3;
    uint64_t v59 = a1;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    sub_241DAA2C0();
    uint64_t v22 = sub_241DAA2D0();
    os_log_type_t v23 = sub_241DAAC30();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v57 = v12;
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v65 = v56;
      uint64_t v55 = v24;
      *(_DWORD *)uint64_t v24 = 136315138;
      id v54 = v24 + 4;
      uint64_t v25 = sub_241DAB1F0();
      uint64_t v64 = sub_241D48854(v25, v26, &v65);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      uint64_t v27 = v55;
      _os_log_impl(&dword_241D1C000, v22, v23, "[%s] Demographics data exists. Setting age and biological sex.", v55, 0xCu);
      uint64_t v28 = v56;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v28, -1, -1);
      MEMORY[0x24563A5D0](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v14, v57);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v61 + 8))(v14, v12);
    }
    a1 = v59;
    LOBYTE(a3) = v58;
    v4[2] = sub_241DA9EA0();
    uint64_t v29 = sub_241DA9EB0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v4[3] = v29;
  }
  v4[4] = sub_241DAA950();
  v4[6] = 0;
  uint64_t v31 = (uint64_t)v62;
  uint64_t v30 = (uint64_t)v63;
  if (a2)
  {
    id v32 = objc_msgSend(a2, sel_brand);
    uint64_t v33 = sub_241DAA990();
    unint64_t v35 = v34;

    swift_bridgeObjectRelease();
    if ((v35 & 0x2000000000000000) == 0)
    {
      uint64_t v36 = v33 & 0xFFFFFFFFFFFFLL;
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v35 = 0xE000000000000000;
  }
  uint64_t v36 = HIBYTE(v35) & 0xF;
LABEL_12:
  v4[7] = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v36 != 0);
  v4[5] = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, a3 & 1);
  if (a2)
  {
    id v37 = objc_msgSend(a2, sel_expirationDate);
    if (v37)
    {
      unint64_t v38 = v37;
      sub_241DA9750();

      uint64_t v39 = sub_241DA9770();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v31, 0, 1, v39);
    }
    else
    {
      uint64_t v39 = sub_241DA9770();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v31, 1, 1, v39);
    }
    sub_241D54FAC(v31, v30);
    sub_241DA9770();
    BOOL v41 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v30, 1, v39) != 1;
  }
  else
  {
    uint64_t v40 = sub_241DA9770();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v30, 1, 1, v40);
    BOOL v41 = 0;
  }
  sub_241D54F50(v30, &qword_268D4B5B0, MEMORY[0x263F07490]);
  v4[8] = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v41);
  if (a2)
  {
    id v42 = a2;
    sub_241D52EC4(0);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v43 = sub_241DAA950();
  swift_bridgeObjectRelease();
  v4[9] = v43;
  if (a2)
  {
    id v44 = a2;
    sub_241D52EC4(1);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v45 = sub_241DAA950();
  swift_bridgeObjectRelease();
  v4[10] = v45;
  if (a2)
  {
    id v46 = a2;
    sub_241D52EC4(2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v47 = sub_241DAA950();
  swift_bridgeObjectRelease();
  v4[11] = v47;
  if (a2)
  {
    id v48 = a2;
    sub_241D52EC4(3);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v49 = sub_241DAA950();
  swift_bridgeObjectRelease();
  v4[12] = v49;
  if (a2)
  {
    id v50 = a2;
    sub_241D52EC4(13);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v51 = sub_241DAA950();
  swift_bridgeObjectRelease();
  v4[17] = v51;
  if (a2)
  {
    a2 = a2;
    sub_241D52EC4(14);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v52 = sub_241DAA950();
  swift_bridgeObjectRelease();

  sub_241D54F50(a1, (unint64_t *)&qword_268D4C190, MEMORY[0x263F442A8]);
  v4[18] = v52;
  *(_OWORD *)(v4 + 13) = 0u;
  *(_OWORD *)(v4 + 15) = 0u;
  return v4;
}

id *sub_241D54510()
{
  return v0;
}

uint64_t sub_241D545B0()
{
  sub_241D54510();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionSampleAnalyticsEvent()
{
  return self;
}

unint64_t sub_241D5460C()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_241D5462C()
{
  uint64_t v0 = sub_241D54970((uint64_t)&unk_26F5CEF30);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_241D54674(uint64_t a1, uint64_t a2)
{
  return sub_241D54E34(&qword_268D4C170, a2, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSampleAnalyticsEvent);
}

uint64_t sub_241D546BC(uint64_t a1, uint64_t a2)
{
  return sub_241D54E34(&qword_268D4C178, a2, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSampleAnalyticsEvent);
}

uint64_t sub_241D54704(uint64_t a1, void *a2, char a3)
{
  sub_241D54EFC(0, (unint64_t *)&qword_268D4C190, MEMORY[0x263F442A8]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v19 - v10;
  id v12 = objc_msgSend(a2, sel_prescriptionType);
  if (v12 == (id)2)
  {
    sub_241D54E7C(a1, (uint64_t)v9);
    self;
    uint64_t v13 = (void *)swift_dynamicCastObjCClass();
    if (v13) {
      id v14 = a2;
    }
    type metadata accessor for VisionPrescriptionSampleAnalyticsEvent();
    uint64_t v15 = swift_allocObject();
    sub_241D53C4C((uint64_t)v9, v13, a3 & 1);
LABEL_9:

    sub_241D54F50(a1, (unint64_t *)&qword_268D4C190, MEMORY[0x263F442A8]);
    return v15;
  }
  if (v12 == (id)1)
  {
    sub_241D54E7C(a1, (uint64_t)v11);
    self;
    uint64_t v16 = (void *)swift_dynamicCastObjCClass();
    if (v16) {
      id v17 = a2;
    }
    type metadata accessor for VisionPrescriptionSampleAnalyticsEvent();
    uint64_t v15 = swift_allocObject();
    sub_241D5327C((uint64_t)v11, v16, a3 & 1);
    goto LABEL_9;
  }
  unint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_241DAAFD0();
  swift_bridgeObjectRelease();
  unint64_t v20 = 0xD00000000000001ALL;
  unint64_t v21 = 0x8000000241DAE8B0;
  v19[1] = objc_msgSend(a2, sel_prescriptionType);
  type metadata accessor for HKVisionPrescriptionType(0);
  sub_241DAA9B0();
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  uint64_t result = sub_241DAB080();
  __break(1u);
  return result;
}

uint64_t sub_241D54970(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_241D54B10();
    uint64_t v3 = sub_241DAAFA0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_241DAB1B0();
      swift_bridgeObjectRetain();
      sub_241DAAA10();
      uint64_t result = sub_241DAB1D0();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_241DAB160(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_241DAB160();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      unint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_241D54B10()
{
  if (!qword_268D4C180)
  {
    unint64_t v0 = sub_241DAAFB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C180);
    }
  }
}

uint64_t sub_241D54B70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_241D54D9C();
    uint64_t v3 = sub_241DAAFA0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_241DAA990();
      sub_241DAB1B0();
      id v7 = v6;
      sub_241DAAA10();
      uint64_t v8 = sub_241DAB1D0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_241DAA990();
        uint64_t v17 = v16;
        if (v15 == sub_241DAA990() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_241DAB160();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_241DAA990();
          uint64_t v24 = v23;
          if (v22 == sub_241DAA990() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_241DAB160();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_241D54D9C()
{
  if (!qword_268D4C188)
  {
    type metadata accessor for URLResourceKey(255);
    sub_241D54E34(&qword_268D4B580, 255, type metadata accessor for URLResourceKey);
    unint64_t v0 = sub_241DAAFB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C188);
    }
  }
}

uint64_t sub_241D54E34(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241D54E7C(uint64_t a1, uint64_t a2)
{
  sub_241D54EFC(0, (unint64_t *)&qword_268D4C190, MEMORY[0x263F442A8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_241D54EFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241DAAEF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241D54F50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241D54EFC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241D54FAC(uint64_t a1, uint64_t a2)
{
  sub_241D54EFC(0, &qword_268D4B5B0, MEMORY[0x263F07490]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241D5502C()
{
  off_268D4C198 = &unk_26F5CEE70;
}

void sub_241D55040()
{
  qword_268D4C1A0 = (uint64_t)&unk_26F5CEE20;
}

void sub_241D55054()
{
  qword_268D4C1A8 = (uint64_t)&unk_26F5CEE48;
}

void sub_241D55068()
{
  off_268D4C1B0 = &unk_26F5CEDF8;
}

BOOL sub_241D5507C(unsigned __int8 a1, void *a2, uint64_t *a3)
{
  if (*a2 != -1) {
    goto LABEL_18;
  }
  while (1)
  {
    uint64_t v5 = *a3;
    uint64_t v6 = *(void *)(*a3 + 16);
    if (!v6) {
      break;
    }
    if (*(unsigned __int8 *)(v5 + 32) == a1) {
      return 1;
    }
    if (v6 == 1) {
      break;
    }
    if (*(unsigned __int8 *)(v5 + 33) == a1) {
      return 1;
    }
    if (v6 == 2) {
      break;
    }
    for (uint64_t i = 34; ; ++i)
    {
      uint64_t v9 = i - 31;
      if (__OFADD__(i - 32, 1)) {
        break;
      }
      int v10 = *(unsigned __int8 *)(v5 + i);
      BOOL result = v10 == a1;
      if (v10 == a1 || v9 == v6) {
        return result;
      }
    }
    __break(1u);
LABEL_18:
    swift_once();
  }
  return 0;
}

id sub_241D55130()
{
  uint64_t v1 = sub_241DAA2E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v0 + 24);
  if (*(void *)(v6 + 16)
    && (unint64_t v7 = sub_241DA34A0(0), (v8 & 1) != 0)
    && (uint64_t v9 = *(void **)(*(void *)(v6 + 56) + 8 * v7)) != 0)
  {
    uint64_t v10 = *v5;
    if (*(void *)(*v5 + 16) && (unint64_t v11 = sub_241DA34A0(1u), (v12 & 1) != 0)) {
      id v13 = *(id *)(*(void *)(v10 + 56) + 8 * v11);
    }
    else {
      id v13 = 0;
    }
    uint64_t v22 = *v5;
    if (*(void *)(*v5 + 16) && (unint64_t v23 = sub_241DA34A0(2u), (v24 & 1) != 0)) {
      id v25 = *(id *)(*(void *)(v22 + 56) + 8 * v23);
    }
    else {
      id v25 = 0;
    }
    uint64_t v26 = *v5;
    if (*(void *)(*v5 + 16) && (unint64_t v27 = sub_241DA34A0(3u), (v28 & 1) != 0)) {
      id v29 = *(id *)(*(void *)(v26 + 56) + 8 * v27);
    }
    else {
      id v29 = 0;
    }
    uint64_t v30 = *v5;
    if (*(void *)(*v5 + 16) && (unint64_t v31 = sub_241DA34A0(0xDu), (v32 & 1) != 0)) {
      id v33 = *(id *)(*(void *)(v30 + 56) + 8 * v31);
    }
    else {
      id v33 = 0;
    }
    uint64_t v34 = *v5;
    if (*(void *)(*v5 + 16) && (unint64_t v35 = sub_241DA34A0(0xEu), (v36 & 1) != 0)) {
      id v37 = *(id *)(*(void *)(v34 + 56) + 8 * v35);
    }
    else {
      id v37 = 0;
    }
    id v38 = objc_allocWithZone(MEMORY[0x263F0A240]);
    id v39 = v9;
    id v20 = objc_msgSend(v38, sel_initWithSphere_cylinder_axis_addPower_baseCurve_diameter_, v39, v13, v25, v29, v33, v37);
  }
  else
  {
    sub_241DAA2B0();
    uint64_t v14 = sub_241DAA2D0();
    os_log_type_t v15 = sub_241DAAC10();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v41 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v18 = sub_241DAB1F0();
      v40[1] = sub_241D48854(v18, v19, &v41);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v14, v15, "[%s] sphere is required for HKContactsLensSpecification", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v17, -1, -1);
      MEMORY[0x24563A5D0](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  return v20;
}

uint64_t sub_241D554C4()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ContactsLensSpecificationContext()
{
  return self;
}

uint64_t sub_241D55520()
{
  return sub_241D5555C();
}

uint64_t sub_241D55534()
{
  return sub_241D5555C();
}

uint64_t sub_241D55548()
{
  return sub_241D5555C();
}

uint64_t sub_241D5555C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241DAA6B0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_241D555C8(uint64_t a1, void *a2)
{
  uint64_t v47 = a2;
  uint64_t v49 = a1;
  sub_241D57110(0, &qword_268D4BEB8, &qword_268D4BEA8, (unint64_t *)&qword_268D4BEB0);
  uint64_t v48 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v46 - v5;
  sub_241D57110(0, &qword_268D4C1E0, (unint64_t *)&unk_268D4D3E0, (unint64_t *)&qword_268D4B618);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v46 - v10;
  uint64_t v12 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext__farPupillaryDistance;
  uint64_t v50 = 0;
  sub_241D28890(0, (unint64_t *)&unk_268D4D3E0, (unint64_t *)&qword_268D4B618);
  sub_241DAA690();
  id v13 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v13(v12, v11, v8);
  uint64_t v14 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext__nearPupillaryDistance;
  uint64_t v50 = 0;
  sub_241DAA690();
  v13(v14, v11, v8);
  os_log_type_t v15 = v47;
  uint64_t v16 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext__prism;
  uint64_t v50 = 0;
  sub_241D28890(0, &qword_268D4BEA8, (unint64_t *)&qword_268D4BEB0);
  sub_241DAA690();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v16, v6, v48);
  uint64_t v17 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
  *(void *)uint64_t v17 = 0;
  char v18 = 1;
  *(unsigned char *)(v17 + 8) = 1;
  uint64_t v19 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  *(void *)(v2 + 16) = v49;
  sub_241D5716C();
  uint64_t inited = swift_initStackObject();
  uint64_t v21 = inited;
  *(_OWORD *)(inited + 16) = xmmword_241DB41A0;
  *(unsigned char *)(inited + 32) = 2;
  if (v15)
  {
    *(void *)(inited + 40) = objc_msgSend(v15, sel_axis);
    *(unsigned char *)(v21 + 48) = 0;
    *(void *)(v21 + 56) = objc_msgSend(v15, sel_sphere);
    *(unsigned char *)(v21 + 64) = 1;
    *(void *)(v21 + 72) = objc_msgSend(v15, sel_cylinder);
    *(unsigned char *)(v21 + 80) = 3;
    *(void *)(v21 + 88) = objc_msgSend(v15, sel_addPower);
    *(unsigned char *)(v21 + 96) = 4;
    *(void *)(v21 + 104) = objc_msgSend(v15, sel_vertexDistance);
    *(unsigned char *)(v21 + 112) = 12;
    *(void *)(v21 + 120) = objc_msgSend(v15, sel_farPupillaryDistance);
    *(unsigned char *)(v21 + 128) = 11;
    *(void *)(v21 + 136) = objc_msgSend(v15, sel_nearPupillaryDistance);
    *(unsigned char *)(v21 + 144) = 5;
    id v22 = objc_msgSend(v15, sel_prism);
    if (v22)
    {
      unint64_t v23 = v22;
      id v24 = objc_msgSend(v22, sel_amount);
    }
    else
    {
      id v24 = 0;
    }
    *(void *)(v21 + 152) = v24;
    *(unsigned char *)(v21 + 160) = 6;
    id v28 = objc_msgSend(v15, sel_prism);
    if (v28)
    {
      id v29 = v28;
      id v30 = objc_msgSend(v28, sel_angle);
    }
    else
    {
      id v30 = 0;
    }
    *(void *)(v21 + 168) = v30;
    *(unsigned char *)(v21 + 176) = 7;
    id v31 = objc_msgSend(v15, sel_prism);
    if (v31)
    {
      char v32 = v31;
      id v33 = objc_msgSend(v31, sel_horizontalAmount);
    }
    else
    {
      id v33 = 0;
    }
    *(void *)(v21 + 184) = v33;
    *(unsigned char *)(v21 + 192) = 9;
    id v34 = objc_msgSend(v15, sel_prism);
    if (v34)
    {
      unint64_t v35 = v34;
      id v36 = objc_msgSend(v34, sel_verticalAmount);
    }
    else
    {
      id v36 = 0;
    }
    *(void *)(v21 + 200) = v36;
    unint64_t v37 = sub_241D778E4(v21);
    swift_setDeallocating();
    sub_241D571C4();
    swift_arrayDestroy();
    *(void *)(v2 + 24) = v37;
    id v38 = objc_msgSend(v15, sel_prism);
    id v39 = v38;
    if (v38)
    {
      id v40 = objc_msgSend(v38, sel_horizontalBase);
    }
    else
    {
      id v40 = 0;
    }
    uint64_t v41 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
    *(void *)uint64_t v41 = v40;
    *(unsigned char *)(v41 + 8) = v39 == 0;
    id v42 = objc_msgSend(v15, sel_prism);
    if (v42)
    {
      uint64_t v43 = v42;
      id v26 = objc_msgSend(v42, sel_verticalBase);

      char v18 = 0;
    }
    else
    {

      id v26 = 0;
      char v18 = 1;
    }
  }
  else
  {
    *(void *)(inited + 40) = 0;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(unsigned char *)(inited + 64) = 1;
    *(void *)(inited + 72) = 0;
    *(unsigned char *)(inited + 80) = 3;
    *(void *)(inited + 88) = 0;
    *(unsigned char *)(inited + 96) = 4;
    *(void *)(inited + 104) = 0;
    *(unsigned char *)(inited + 112) = 12;
    *(void *)(inited + 120) = 0;
    *(unsigned char *)(inited + 128) = 11;
    *(void *)(inited + 136) = 0;
    *(unsigned char *)(inited + 144) = 5;
    *(void *)(inited + 152) = 0;
    *(unsigned char *)(inited + 160) = 6;
    *(void *)(inited + 168) = 0;
    *(unsigned char *)(inited + 176) = 7;
    *(void *)(inited + 184) = 0;
    *(unsigned char *)(inited + 192) = 9;
    *(void *)(inited + 200) = 0;
    unint64_t v25 = sub_241D778E4(inited);
    swift_setDeallocating();
    sub_241D571C4();
    swift_arrayDestroy();
    id v26 = 0;
    *(void *)(v2 + 24) = v25;
    uint64_t v27 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
    *(void *)uint64_t v27 = 0;
    *(unsigned char *)(v27 + 8) = 1;
  }
  uint64_t v44 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
  *(void *)uint64_t v44 = v26;
  *(unsigned char *)(v44 + 8) = v18;
  return v2;
}

id sub_241D55C6C()
{
  uint64_t v1 = sub_241DAA2E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v0 + 24);
  if (*(void *)(v6 + 16)
    && (unint64_t v7 = sub_241DA34A0(0), (v8 & 1) != 0)
    && (uint64_t v9 = *(void **)(*(void *)(v6 + 56) + 8 * v7)) != 0)
  {
    uint64_t v10 = *v5;
    if (*(void *)(*v5 + 16) && (unint64_t v11 = sub_241DA34A0(1u), (v12 & 1) != 0)) {
      id v13 = *(id *)(*(void *)(v10 + 56) + 8 * v11);
    }
    else {
      id v13 = 0;
    }
    uint64_t v22 = *v5;
    if (*(void *)(*v5 + 16) && (unint64_t v23 = sub_241DA34A0(2u), (v24 & 1) != 0)) {
      id v25 = *(id *)(*(void *)(v22 + 56) + 8 * v23);
    }
    else {
      id v25 = 0;
    }
    uint64_t v26 = *v5;
    if (*(void *)(*v5 + 16) && (unint64_t v27 = sub_241DA34A0(3u), (v28 & 1) != 0)) {
      id v29 = *(id *)(*(void *)(v26 + 56) + 8 * v27);
    }
    else {
      id v29 = 0;
    }
    uint64_t v30 = *v5;
    if (*(void *)(*v5 + 16) && (unint64_t v31 = sub_241DA34A0(4u), (v32 & 1) != 0)) {
      id v33 = *(id *)(*(void *)(v30 + 56) + 8 * v31);
    }
    else {
      id v33 = 0;
    }
    id v34 = v9;
    id v35 = sub_241D56BD8();
    if (!v35) {
      id v35 = sub_241D56C98();
    }
    uint64_t v36 = *v5;
    if (*(void *)(*v5 + 16) && (unint64_t v37 = sub_241DA34A0(0xCu), (v38 & 1) != 0)) {
      id v39 = *(id *)(*(void *)(v36 + 56) + 8 * v37);
    }
    else {
      id v39 = 0;
    }
    uint64_t v40 = *v5;
    if (*(void *)(*v5 + 16) && (unint64_t v41 = sub_241DA34A0(0xBu), (v42 & 1) != 0)) {
      id v43 = *(id *)(*(void *)(v40 + 56) + 8 * v41);
    }
    else {
      id v43 = 0;
    }
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3E8]), sel_initWithSphere_cylinder_axis_addPower_vertexDistance_prism_farPupillaryDistance_nearPupillaryDistance_, v34, v13, v25, v29, v33, v35, v39, v43);
  }
  else
  {
    sub_241DAA2A0();
    uint64_t v14 = sub_241DAA2D0();
    os_log_type_t v15 = sub_241DAAC10();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v45 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v18 = sub_241DAB1F0();
      v44[1] = sub_241D48854(v18, v19, &v45);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v14, v15, "[%s] sphere is required for HKGlassesLensSpecification", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v17, -1, -1);
      MEMORY[0x24563A5D0](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  return v20;
}

uint64_t sub_241D56058(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_268D4B308 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_268D4C1A0;
  uint64_t v5 = qword_268D4B310;
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_241D9894C(v6);
  char v7 = sub_241D988E8(a1, v4);
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    if (sub_241D5507C(a1, &qword_268D4B308, &qword_268D4C1A0))
    {
      sub_241D56984();
    }
    else if (sub_241D5507C(a1, &qword_268D4B310, &qword_268D4C1A8))
    {
      sub_241D56AC4();
      sub_241D56444();
    }
    id v9 = sub_241D56BD8();
    if (v9)
    {
      id v10 = v9;
    }
    else
    {
      id v11 = sub_241D56C98();
      if (!v11)
      {
LABEL_15:
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        return sub_241DAA6C0();
      }
      id v10 = v11;
      id v9 = 0;
    }
    id v12 = v9;
    id v13 = objc_msgSend(v10, sel_angle);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *(void *)(v2 + 24);
    *(void *)(v2 + 24) = 0x8000000000000000;
    sub_241DA3D90((uint64_t)v13, 6u, isUniquelyReferenced_nonNull_native);
    *(void *)(v2 + 24) = v25;
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v15 = objc_msgSend(v10, sel_amount);
    swift_beginAccess();
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *(void *)(v2 + 24);
    *(void *)(v2 + 24) = 0x8000000000000000;
    sub_241DA3D90((uint64_t)v15, 5u, v16);
    *(void *)(v2 + 24) = v26;
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v17 = objc_msgSend(v10, sel_horizontalAmount);
    swift_beginAccess();
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *(void *)(v2 + 24);
    *(void *)(v2 + 24) = 0x8000000000000000;
    sub_241DA3D90((uint64_t)v17, 7u, v18);
    *(void *)(v2 + 24) = v27;
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v19 = objc_msgSend(v10, sel_verticalAmount);
    swift_beginAccess();
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *(void *)(v2 + 24);
    *(void *)(v2 + 24) = 0x8000000000000000;
    sub_241DA3D90((uint64_t)v19, 9u, v20);
    *(void *)(v2 + 24) = v28;
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v21 = objc_msgSend(v10, sel_horizontalBase);
    uint64_t v22 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
    *(void *)uint64_t v22 = v21;
    *(unsigned char *)(v22 + 8) = 0;
    id v23 = objc_msgSend(v10, sel_verticalBase);

    uint64_t v24 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
    *(void *)uint64_t v24 = v23;
    *(unsigned char *)(v24 + 8) = 0;
    goto LABEL_15;
  }
  return result;
}

void sub_241D56444()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase + 8)) {
    uint64_t v2 = 0;
  }
  *(void *)uint64_t v1 = v2;
  *(unsigned char *)(v1 + 8) = 0;
  uint64_t v3 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase + 8)) {
    uint64_t v4 = 0;
  }
  *(void *)uint64_t v3 = v4;
  *(unsigned char *)(v3 + 8) = 0;
  uint64_t v5 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v0 + 24);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_241DA34A0(9u), (v8 & 1) != 0))
  {
    id v9 = *(id *)(*(void *)(v6 + 56) + 8 * v7);
    id v10 = v9;
  }
  else
  {
    id v11 = self;
    id v12 = objc_msgSend(v11, sel_prismDiopterUnit);
    if (v12 || (id v12 = objc_msgSend(v11, sel_prismDiopterUnit)) != 0)
    {
      id v9 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v12, 0.0);
    }
    else
    {
      id v9 = 0;
    }
  }
  uint64_t v13 = *v5;
  if (*(void *)(*v5 + 16) && (unint64_t v14 = sub_241DA34A0(7u), (v15 & 1) != 0))
  {
    id v16 = *(id *)(*(void *)(v13 + 56) + 8 * v14);
    id v17 = v16;
  }
  else
  {
    char v18 = self;
    id v19 = objc_msgSend(v18, sel_prismDiopterUnit);
    if (v19 || (id v19 = objc_msgSend(v18, sel_prismDiopterUnit)) != 0)
    {
      id v16 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v19, 0.0);
    }
    else
    {
      id v16 = 0;
    }
  }
  swift_beginAccess();
  id v20 = v9;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v5;
  *uint64_t v5 = 0x8000000000000000;
  sub_241DA3D90((uint64_t)v9, 9u, isUniquelyReferenced_nonNull_native);
  *uint64_t v5 = v24;
  swift_bridgeObjectRelease();
  id v22 = v16;
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v5;
  *uint64_t v5 = 0x8000000000000000;
  sub_241DA3D90((uint64_t)v16, 7u, v23);
  *uint64_t v5 = v25;
  swift_bridgeObjectRelease();
  swift_endAccess();
}

uint64_t sub_241D566C8(uint64_t result, void *a2)
{
  unsigned __int8 v3 = result;
  if (qword_268D4B300 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v4 = *((void *)off_268D4C198 + 2);
  if (v4)
  {
    if (*((unsigned __int8 *)off_268D4C198 + 32) == v3) {
      goto LABEL_9;
    }
    if (v4 == 1) {
      return result;
    }
    if (*((unsigned __int8 *)off_268D4C198 + 33) == v3) {
      goto LABEL_9;
    }
    if (v4 == 2) {
      return result;
    }
    if (*((unsigned __int8 *)off_268D4C198 + 34) == v3)
    {
LABEL_9:
      if (v3 == 11 || v3 == 12)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        id v5 = a2;
        swift_retain();
        return sub_241DAA6C0();
      }
    }
    else if (v4 != 3)
    {
      for (uint64_t i = 35; ; ++i)
      {
        uint64_t v7 = i - 31;
        if (__OFADD__(i - 32, 1)) {
          break;
        }
        if (*((unsigned __int8 *)off_268D4C198 + i) == v3) {
          goto LABEL_9;
        }
        if (v7 == v4) {
          return result;
        }
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_241D5681C(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v6 = result;
  if (qword_268D4B318 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v7 = *((void *)off_268D4C1B0 + 2);
  if (v7)
  {
    if (*((unsigned __int8 *)off_268D4C1B0 + 32) == a3) {
      goto LABEL_9;
    }
    if (v7 == 1) {
      return result;
    }
    if (*((unsigned __int8 *)off_268D4C1B0 + 33) == a3) {
      goto LABEL_9;
    }
    if (v7 == 2) {
      return result;
    }
    if (*((unsigned __int8 *)off_268D4C1B0 + 34) == a3)
    {
LABEL_9:
      if (a3 == 8)
      {
        char v8 = &OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
        id v9 = &OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
      }
      else
      {
        if (a3 != 10)
        {
LABEL_16:
          return sub_241D56058(a3);
        }
        char v8 = &OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
        id v9 = &OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
      }
      uint64_t v10 = v3 + *v9;
      *(void *)uint64_t v10 = v6;
      *(unsigned char *)(v10 + 8) = a2 & 1;
      id v11 = (uint64_t *)(v3 + *v8);
      uint64_t v12 = *v11;
      if (*((unsigned char *)v11 + 8)) {
        uint64_t v12 = 0;
      }
      *id v11 = v12;
      *((unsigned char *)v11 + 8) = 0;
      goto LABEL_16;
    }
    if (v7 != 3)
    {
      for (uint64_t i = 35; ; ++i)
      {
        uint64_t v14 = i - 31;
        if (__OFADD__(i - 32, 1)) {
          break;
        }
        if (*((unsigned __int8 *)off_268D4C1B0 + i) == a3) {
          goto LABEL_9;
        }
        if (v14 == v7) {
          return result;
        }
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_241D56984()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 1;
  uint64_t v2 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
  *(void *)uint64_t v2 = 0;
  *(unsigned char *)(v2 + 8) = 1;
  uint64_t v3 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  unint64_t v4 = sub_241DA34A0(7u);
  if (v5)
  {
    unint64_t v6 = v4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    uint64_t v17 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_241DA4530();
      uint64_t v8 = v17;
    }
    id v9 = *(void **)(*(void *)(v8 + 56) + 8 * v6);
    sub_241D82C14(v6, v8);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
  }
  unint64_t v10 = sub_241DA34A0(9u);
  if (v11)
  {
    unint64_t v12 = v10;
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((v13 & 1) == 0)
    {
      sub_241DA4530();
      uint64_t v14 = v18;
    }
    char v15 = *(void **)(*(void *)(v14 + 56) + 8 * v12);
    sub_241D82C14(v12, v14);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
  }
  return swift_endAccess();
}

uint64_t sub_241D56AC4()
{
  uint64_t v1 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  unint64_t v2 = sub_241DA34A0(5u);
  if (v3)
  {
    unint64_t v4 = v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v1;
    uint64_t v15 = *v1;
    *uint64_t v1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_241DA4530();
      uint64_t v6 = v15;
    }
    uint64_t v7 = *(void **)(*(void *)(v6 + 56) + 8 * v4);
    sub_241D82C14(v4, v6);
    *uint64_t v1 = v6;
    swift_bridgeObjectRelease();
  }
  unint64_t v8 = sub_241DA34A0(6u);
  if (v9)
  {
    unint64_t v10 = v8;
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v1;
    uint64_t v16 = *v1;
    *uint64_t v1 = 0x8000000000000000;
    if ((v11 & 1) == 0)
    {
      sub_241DA4530();
      uint64_t v12 = v16;
    }
    char v13 = *(void **)(*(void *)(v12 + 56) + 8 * v10);
    sub_241D82C14(v10, v12);
    *uint64_t v1 = v12;
    swift_bridgeObjectRelease();
  }
  return swift_endAccess();
}

id sub_241D56BD8()
{
  uint64_t v1 = v0;
  unint64_t v2 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v0 + 24);
  if (*(void *)(v3 + 16)
    && (unint64_t v4 = sub_241DA34A0(5u), (v5 & 1) != 0)
    && (uint64_t v6 = *(void *)(*(void *)(v3 + 56) + 8 * v4)) != 0
    && (uint64_t v7 = *v2, *(void *)(*v2 + 16))
    && (unint64_t v8 = sub_241DA34A0(6u), (v9 & 1) != 0)
    && (uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8)) != 0)
  {
    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A8E8]), sel_initWithAmount_angle_eye_, v6, v10, *(void *)(v1 + 16));
  }
  else
  {
    return 0;
  }
}

id sub_241D56C98()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase + 8)) {
    return 0;
  }
  uint64_t v1 = v0;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase + 8)) {
    return 0;
  }
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase);
  id v5 = objc_msgSend(self, sel_prismDiopterUnit);
  id v6 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v5, 0.0);

  uint64_t v7 = (uint64_t *)(v1 + 24);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1 + 24);
  char v9 = v6;
  if (*(void *)(v8 + 16))
  {
    unint64_t v10 = sub_241DA34A0(9u);
    char v9 = v6;
    if (v11)
    {
      char v9 = *(void **)(*(void *)(v8 + 56) + 8 * v10);
      if (!v9) {
        char v9 = v6;
      }
    }
  }
  id v12 = v9;
  uint64_t v13 = *v7;
  uint64_t v14 = v6;
  if (*(void *)(*v7 + 16))
  {
    unint64_t v15 = sub_241DA34A0(7u);
    uint64_t v14 = v6;
    if (v16)
    {
      uint64_t v14 = *(void **)(*(void *)(v13 + 56) + 8 * v15);
      if (!v14) {
        uint64_t v14 = v6;
      }
    }
  }
  id v17 = v14;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A8E8]), sel_initWithVerticalAmount_verticalBase_horizontalAmount_horizontalBase_eye_, v12, v3, v17, v4, *(void *)(v1 + 16));

  return v2;
}

uint64_t sub_241D56E30()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext__farPupillaryDistance;
  sub_241D57110(0, &qword_268D4C1E0, (unint64_t *)&unk_268D4D3E0, (unint64_t *)&qword_268D4B618);
  uint64_t v3 = v2;
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v4(v1, v2);
  v4(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext__nearPupillaryDistance, v3);
  uint64_t v5 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext__prism;
  sub_241D57110(0, &qword_268D4BEB8, &qword_268D4BEA8, (unint64_t *)&qword_268D4BEB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_241D56F8C()
{
  return type metadata accessor for GlassesLensSpecificationContext();
}

uint64_t type metadata accessor for GlassesLensSpecificationContext()
{
  uint64_t result = qword_268D4C1D0;
  if (!qword_268D4C1D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241D56FE0()
{
  sub_241D57110(319, &qword_268D4C1E0, (unint64_t *)&unk_268D4D3E0, (unint64_t *)&qword_268D4B618);
  if (v0 <= 0x3F)
  {
    sub_241D57110(319, &qword_268D4BEB8, &qword_268D4BEA8, (unint64_t *)&qword_268D4BEB0);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_241D57110(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_241D28890(255, a3, a4);
    unint64_t v5 = sub_241DAA6D0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241D5716C()
{
  if (!qword_268D4C1E8)
  {
    sub_241D571C4();
    unint64_t v0 = sub_241DAB130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C1E8);
    }
  }
}

void sub_241D571C4()
{
  if (!qword_268D4C1F0)
  {
    sub_241D28890(255, (unint64_t *)&unk_268D4D3E0, (unint64_t *)&qword_268D4B618);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D4C1F0);
    }
  }
}

uint64_t sub_241D57244@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241DAA6B0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_241D572C4(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_241DAA6C0();
}

uint64_t sub_241D5733C(uint64_t a1, void *a2)
{
  *(void *)(v2 + 16) = a1;
  sub_241D5716C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241DB41B0;
  *(unsigned char *)(inited + 32) = 2;
  if (a2)
  {
    *(void *)(inited + 40) = objc_msgSend(a2, sel_axis);
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = objc_msgSend(a2, sel_sphere);
    *(unsigned char *)(inited + 64) = 1;
    *(void *)(inited + 72) = objc_msgSend(a2, sel_cylinder);
    *(unsigned char *)(inited + 80) = 3;
    *(void *)(inited + 88) = objc_msgSend(a2, sel_addPower);
    *(unsigned char *)(inited + 96) = 14;
    *(void *)(inited + 104) = objc_msgSend(a2, sel_diameter);
    *(unsigned char *)(inited + 112) = 13;
    id v5 = objc_msgSend(a2, sel_baseCurve);
  }
  else
  {
    id v5 = 0;
    *(unsigned char *)(inited + 64) = 1;
    *(unsigned char *)(inited + 80) = 3;
    *(unsigned char *)(inited + 96) = 14;
    *(unsigned char *)(inited + 112) = 13;
    *(void *)(inited + 40) = 0;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(void *)(inited + 72) = 0;
    *(void *)(inited + 88) = 0;
    *(void *)(inited + 104) = 0;
  }
  *(void *)(inited + 120) = v5;
  unint64_t v6 = sub_241D778E4(inited);
  swift_setDeallocating();
  sub_241D571C4();
  swift_arrayDestroy();
  *(void *)(v2 + 24) = v6;
  return v2;
}

uint64_t sub_241D574F8()
{
  uint64_t result = (uint64_t)objc_msgSend(v0, sel_metadata);
  if (result)
  {
    uint64_t v2 = (void *)result;
    uint64_t v3 = sub_241DAA920();

    uint64_t v4 = sub_241DAA990();
    if (*(void *)(v3 + 16) && (unint64_t v6 = sub_241DA3428(v4, v5), (v7 & 1) != 0))
    {
      sub_241D2DA4C(*(void *)(v3 + 56) + 32 * v6, (uint64_t)&v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v10 + 1))
      {
        sub_241D57614();
        uint64_t result = swift_dynamicCast();
        if (result)
        {

          return 1;
        }
        return result;
      }
    }
    else
    {
      long long v9 = 0u;
      long long v10 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_241D2D994((uint64_t)&v9);
    return 0;
  }
  return result;
}

unint64_t sub_241D57614()
{
  unint64_t result = qword_268D4B610;
  if (!qword_268D4B610)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4B610);
  }
  return result;
}

uint64_t sub_241D57654(uint64_t a1)
{
  if (a1 == 2)
  {
    if (qword_268D4B2F0 == -1) {
      return sub_241DA95E0();
    }
LABEL_8:
    swift_once();
    return sub_241DA95E0();
  }
  if (a1 == 1)
  {
    if (qword_268D4B2F0 == -1) {
      return sub_241DA95E0();
    }
    goto LABEL_8;
  }
  return 0;
}

uint64_t sub_241D57774(uint64_t a1)
{
  if (a1 == 2)
  {
    if (qword_268D4B2F0 == -1) {
      return sub_241DA95E0();
    }
LABEL_8:
    swift_once();
    return sub_241DA95E0();
  }
  if (a1 == 1)
  {
    if (qword_268D4B2F0 == -1) {
      return sub_241DA95E0();
    }
    goto LABEL_8;
  }
  return 0;
}

uint64_t VisionPrescriptionDetailsViewController.__allocating_init(healthStore:visionPrescription:canEdit:)(void *a1, void *a2, int a3)
{
  id v7 = objc_allocWithZone(v3);
  return VisionPrescriptionDetailsViewController.init(healthStore:visionPrescription:canEdit:)(a1, a2, a3);
}

uint64_t VisionPrescriptionDetailsViewController.init(healthStore:visionPrescription:canEdit:)(void *a1, void *a2, int a3)
{
  uint64_t v4 = v3;
  char v5 = a3;
  int v43 = a3;
  uint64_t ObjectType = swift_getObjectType();
  sub_241D5D8E4(0, &qword_268D4C200, (void (*)(uint64_t))sub_241D57E98, (void (*)(void))sub_241D57F10);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  uint64_t v42 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v40 = (char *)&v39 - v11;
  sub_241D57F44();
  uint64_t v39 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = (uint64_t)a2;
  sub_241D57E98();
  swift_allocObject();
  char v16 = v4;
  id v17 = a2;
  uint64_t v18 = sub_241DAA600();
  *(void *)&v16[qword_268D4C240] = v18;
  *(void *)&v16[qword_268D4C248] = a1;
  v16[qword_268D4C250] = v5;
  swift_retain();
  id v19 = a1;
  uint64_t v44 = v17;
  uint64_t v45 = ObjectType;
  uint64_t v46 = sub_241D58094(v19, v17);
  sub_241D58000();
  sub_241D28BF4(0, (unint64_t *)&qword_268D4C210);
  sub_241D5DD40(&qword_268D4C238, (void (*)(uint64_t))sub_241D58000);
  sub_241DAA730();
  swift_release();
  sub_241D5DD40(&qword_268D4C258, (void (*)(uint64_t))sub_241D57F44);
  swift_retain();
  uint64_t v20 = v39;
  uint64_t v21 = sub_241DAA810();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v20);
  *(void *)&v16[qword_268D4C260] = v21;
  uint64_t v46 = v18;
  sub_241D5D87C(0, (unint64_t *)&qword_268D4BF20, (unint64_t *)&qword_268D4C210, 0x263F0A8E0, MEMORY[0x263F8D8F0]);
  sub_241D57F10();
  id v22 = v40;
  sub_241DAA750();
  sub_241D58F00();
  uint64_t v23 = v41;
  uint64_t v24 = (void *)sub_241DAA720();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v23);
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0D8]), sel_initWithHealthStore_, v19);
  type metadata accessor for VisionPrescriptionAnalyticsContext();
  swift_allocObject();
  id v26 = v19;
  swift_retain();
  uint64_t v27 = sub_241DA5C58(v26);
  type metadata accessor for VisionPrescriptionDataSource();
  swift_allocObject();
  *(void *)&v16[qword_268D4C270] = sub_241D8E9E8(v25, v24, v27);
  swift_retain();
  uint64_t v28 = sub_241DA9B60();
  swift_release();

  sub_241DA9F10();
  sub_241D50C30(0, (unint64_t *)&qword_268D4B810, (unint64_t *)&qword_268D4C280);
  if (v43)
  {
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_241DB4380;
    unint64_t v30 = sub_241D5CC74();
    *(void *)(v29 + 32) = v28;
    *(void *)(v29 + 40) = v30;
    swift_retain();
    unint64_t v31 = v44;
    *(void *)(v29 + 48) = sub_241D590A8(v26, v44);
    *(void *)(v29 + 56) = v32;
    *(void *)(v29 + 64) = sub_241D59558(v31);
    *(void *)(v29 + 72) = v33;
  }
  else
  {
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_241DB2C60;
    unint64_t v35 = sub_241D5CC74();
    *(void *)(v34 + 32) = v28;
    *(void *)(v34 + 40) = v35;
    swift_retain();
    unint64_t v31 = v44;
    *(void *)(v34 + 48) = sub_241D59558(v44);
    *(void *)(v34 + 56) = v36;
  }
  sub_241DA9F40();
  uint64_t v37 = sub_241DAA1D0();
  swift_release();
  swift_release();
  swift_release();

  return v37;
}

void sub_241D57E98()
{
  if (!qword_268D4C208)
  {
    sub_241D28BF4(255, (unint64_t *)&qword_268D4C210);
    unint64_t v0 = sub_241DAA5F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C208);
    }
  }
}

uint64_t sub_241D57F10()
{
  return sub_241D5DD40(&qword_268D4C220, (void (*)(uint64_t))sub_241D57E98);
}

void sub_241D57F44()
{
  if (!qword_268D4C228)
  {
    sub_241D58000();
    sub_241D28BF4(255, (unint64_t *)&qword_268D4C210);
    sub_241D5DD40(&qword_268D4C238, (void (*)(uint64_t))sub_241D58000);
    unint64_t v0 = sub_241DAA4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C228);
    }
  }
}

void sub_241D58000()
{
  if (!qword_268D4C230)
  {
    sub_241D5D87C(255, (unint64_t *)&qword_268D4BF20, (unint64_t *)&qword_268D4C210, 0x263F0A8E0, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241DAA5A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C230);
    }
  }
}

uint64_t sub_241D58094(void *a1, void *a2)
{
  uint64_t v65 = a2;
  uint64_t v91 = a1;
  sub_241D5D2A4();
  uint64_t v71 = v2;
  uint64_t v68 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v66 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D5D5F8();
  uint64_t v73 = v4;
  uint64_t v72 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int v69 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D5D6A4();
  uint64_t v77 = v6;
  uint64_t v75 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v74 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D5D790();
  uint64_t v80 = *(void *)(v8 - 8);
  uint64_t v81 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v76 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D5D8E4(0, &qword_268D4C450, (void (*)(uint64_t))sub_241D5D790, (void (*)(void))sub_241D5D998);
  uint64_t v87 = v10;
  uint64_t v85 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v83 = (char *)&v62 - v11;
  sub_241D5D9CC();
  uint64_t v88 = v12;
  uint64_t v86 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v84 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D5D338();
  uint64_t v93 = v14;
  uint64_t v82 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v78 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_241DAAD50();
  uint64_t v16 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D5D4F4(0, (unint64_t *)&unk_268D4C3C0, MEMORY[0x263F07CB0], (void (*)(void))sub_241D5220C);
  uint64_t v63 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v22 = (char *)&v62 - v21;
  sub_241D5D424();
  uint64_t v92 = v23;
  uint64_t v70 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v67 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_241DAABD0();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D5D4F4(0, &qword_268D4C3A8, MEMORY[0x263F44B10], (void (*)(void))sub_241D51194);
  uint64_t v90 = v29;
  uint64_t v64 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  unint64_t v31 = (char *)&v62 - v30;
  sub_241D5DE14(0, (unint64_t *)&qword_268D4BC80, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_241DB33B0;
  sub_241D28BF4(0, (unint64_t *)&unk_268D4D370);
  *(void *)(v32 + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_visionPrescriptionType);
  uint64_t v94 = v32;
  sub_241DAAB10();
  sub_241DAABF0();
  swift_bridgeObjectRelease();
  sub_241D51194();
  uint64_t v89 = v31;
  sub_241DAA750();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  id v33 = objc_msgSend(self, sel_defaultCenter);
  if (qword_268D4B4B0 != -1) {
    swift_once();
  }
  sub_241DAAD60();

  sub_241D5220C();
  uint64_t v34 = v62;
  sub_241DAA750();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v34);
  sub_241D36B4C(0, (unint64_t *)&qword_268D4C3D0);
  sub_241D522D4();
  unint64_t v35 = v67;
  uint64_t v36 = v63;
  sub_241DAA800();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v36);
  sub_241D5D570();
  sub_241D5DD40(&qword_268D4C3E8, (void (*)(uint64_t))sub_241D5D424);
  uint64_t v37 = v78;
  sub_241DAA780();
  sub_241D5DD40(&qword_268D4C3F0, (void (*)(uint64_t))sub_241D5D338);
  char v38 = v66;
  sub_241DAA7C0();
  uint64_t v39 = (void *)swift_allocObject();
  uint64_t v40 = v65;
  uint64_t v41 = v91;
  v39[2] = v65;
  v39[3] = v41;
  uint64_t v42 = v79;
  unsigned char v39[4] = v79;
  sub_241DAAB90();
  sub_241D5DD40(&qword_268D4C400, (void (*)(uint64_t))sub_241D5D2A4);
  id v43 = v40;
  id v44 = v41;
  uint64_t v45 = v69;
  uint64_t v46 = v71;
  sub_241DAA750();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v38, v46);
  uint64_t v47 = sub_241D5DD40(&qword_268D4C418, (void (*)(uint64_t))sub_241D5D5F8);
  uint64_t v48 = sub_241D5DD40(&qword_268D4C410, MEMORY[0x263F44AA8]);
  uint64_t v49 = v74;
  uint64_t v50 = v73;
  MEMORY[0x245639300](v73, v47, v48);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v45, v50);
  *(void *)(swift_allocObject() + 16) = v42;
  sub_241D37504();
  sub_241D5DD40((unint64_t *)&unk_268D4C440, (void (*)(uint64_t))sub_241D5D6A4);
  sub_241D5DD40(&qword_268D4B948, (void (*)(uint64_t))sub_241D37504);
  uint64_t v52 = v76;
  uint64_t v51 = v77;
  sub_241DAA770();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v49, v51);
  sub_241D5D87C(0, (unint64_t *)&qword_268D4BF20, (unint64_t *)&qword_268D4C210, 0x263F0A8E0, MEMORY[0x263F8D8F0]);
  sub_241D5D998();
  uint64_t v53 = v83;
  uint64_t v54 = v81;
  sub_241DAA750();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v52, v54);
  sub_241D5DB54(0, &qword_268D4C490, MEMORY[0x263F8E0F8]);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_241DB2C80;
  *(void *)(v55 + 32) = v43;
  uint64_t v94 = v55;
  sub_241DAAB10();
  sub_241D5DC54();
  id v56 = v43;
  uint64_t v57 = v84;
  uint64_t v58 = v87;
  sub_241DAA7A0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v53, v58);
  sub_241D5DD40(&qword_268D4C498, (void (*)(uint64_t))sub_241D5D9CC);
  uint64_t v59 = v88;
  uint64_t v60 = sub_241DAA720();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v57, v59);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v37, v93);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v35, v92);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v89, v90);
  return v60;
}

uint64_t sub_241D58ED4()
{
  return sub_241DAA5C0();
}

unint64_t sub_241D58F00()
{
  unint64_t result = qword_268D4C268;
  if (!qword_268D4C268)
  {
    sub_241D5D8E4(255, &qword_268D4C200, (void (*)(uint64_t))sub_241D57E98, (void (*)(void))sub_241D57F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C268);
  }
  return result;
}

uint64_t sub_241D58F88()
{
  uint64_t v0 = sub_241DA9D50();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v10 - v5;
  sub_241DA9D10();
  sub_241DA9CF0();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  uint64_t v8 = sub_241DA9D40();
  v7(v4, v0);
  return v8;
}

uint64_t sub_241D590A8(void *a1, void *a2)
{
  uint64_t v4 = sub_241DA97B0();
  uint64_t v25 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241DA9C00();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v27 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241D5D05C(0, &qword_268D4B858, MEMORY[0x263F441F0], MEMORY[0x263F8E0F8]);
  uint64_t v12 = *(void *)(sub_241DA9E00() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  long long v26 = xmmword_241DB2C80;
  *(_OWORD *)(v14 + 16) = xmmword_241DB2C80;
  sub_241D5BCE0(a1, a2, v14 + v13);
  sub_241D31F50(v14);
  swift_bridgeObjectRelease();
  sub_241DA97A0();
  sub_241DA9780();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v7, v4);
  uint64_t v16 = v27;
  sub_241DA9BF0();
  sub_241D5D05C(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], v11);
  uint64_t v17 = v29;
  unint64_t v18 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = v26;
  uint64_t v20 = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 16))(v19 + v18, v16, v28);
  uint64_t v30 = 0x3C53447961727241;
  unint64_t v31 = 0xE800000000000000;
  sub_241DA97A0();
  sub_241DA9780();
  v15(v7, v25);
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  sub_241DAAA50();
  sub_241DA9AB0();
  swift_allocObject();
  sub_241DA9AA0();
  uint64_t v21 = MEMORY[0x263F43CC0];
  sub_241DA9B40();
  swift_release();
  sub_241D5CF60(0, (unint64_t *)&qword_268D4B9F8, MEMORY[0x263F43CC8], v21, MEMORY[0x263F43CD0]);
  sub_241D5CFCC();
  uint64_t v22 = sub_241DA9B60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v20);
  sub_241D5D1AC(&qword_268D4BA00, (unint64_t *)&qword_268D4C330, MEMORY[0x263F43F28]);
  return v22;
}

uint64_t sub_241D59558(void *a1)
{
  uint64_t v88 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_241DA97B0();
  uint64_t v75 = *(void *)(v2 - 8);
  uint64_t v76 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_241DA9C00();
  uint64_t v73 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v77 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_241DA9E00();
  uint64_t v6 = *(void *)(v79 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v79);
  uint64_t v80 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v72 = (uint64_t)&v70 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v71 = (uint64_t)&v70 - v11;
  uint64_t v12 = sub_241DA9770();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D5D05C(0, &qword_268D4B858, MEMORY[0x263F441F0], MEMORY[0x263F8E0F8]);
  uint64_t v16 = *(void *)(v6 + 72);
  uint64_t v78 = v6;
  unint64_t v17 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v82 = v16;
  uint64_t v18 = swift_allocObject();
  long long v74 = xmmword_241DB2C80;
  *(_OWORD *)(v18 + 16) = xmmword_241DB2C80;
  unint64_t v81 = v17;
  id v19 = objc_msgSend(a1, sel__creationDate);
  sub_241DA9750();

  sub_241D5B350(v18 + v17);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  id v20 = objc_msgSend(a1, sel_metadata);
  if (!v20)
  {
    long long v86 = 0u;
    long long v87 = 0u;
LABEL_13:
    sub_241D2D994((uint64_t)&v86);
    goto LABEL_14;
  }
  uint64_t v21 = v20;
  uint64_t v22 = sub_241DAA920();

  uint64_t v23 = sub_241DAA990();
  if (*(void *)(v22 + 16) && (unint64_t v25 = sub_241DA3428(v23, v24), (v26 & 1) != 0))
  {
    sub_241D2DA4C(*(void *)(v22 + 56) + 32 * v25, (uint64_t)&v86);
  }
  else
  {
    long long v86 = 0u;
    long long v87 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v87 + 1)) {
    goto LABEL_13;
  }
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B618);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v27 = v84;
  id v28 = objc_msgSend(a1, sel_metadata);
  if (!v28)
  {
    long long v86 = 0u;
    long long v87 = 0u;
LABEL_39:

    sub_241D2D994((uint64_t)&v86);
    goto LABEL_14;
  }
  uint64_t v29 = v28;
  uint64_t v30 = sub_241DAA920();

  uint64_t v31 = sub_241DAA990();
  if (*(void *)(v30 + 16) && (unint64_t v33 = sub_241DA3428(v31, v32), (v34 & 1) != 0))
  {
    sub_241D2DA4C(*(void *)(v30 + 56) + 32 * v33, (uint64_t)&v86);
  }
  else
  {
    long long v86 = 0u;
    long long v87 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v87 + 1)) {
    goto LABEL_39;
  }
  if (swift_dynamicCast())
  {
    uint64_t v67 = v84;
    sub_241D5B4D8(v27, v84, v71);
    unint64_t v69 = *(void *)(v18 + 16);
    unint64_t v68 = *(void *)(v18 + 24);
    if (v69 >= v68 >> 1) {
      uint64_t v18 = sub_241D9A0E4(v68 > 1, v69 + 1, 1, v18);
    }
    *(void *)(v18 + 16) = v69 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v78 + 32))(v18 + v81 + v69 * v82, v71, v79);
  }
  else
  {
  }
LABEL_14:
  id v35 = objc_msgSend(a1, sel_metadata);
  if (!v35)
  {
    long long v86 = 0u;
    long long v87 = 0u;
    uint64_t v41 = v79;
    uint64_t v40 = (uint64_t)v80;
LABEL_27:
    sub_241D2D994((uint64_t)&v86);
    goto LABEL_28;
  }
  uint64_t v36 = v35;
  uint64_t v37 = sub_241DAA920();

  uint64_t v38 = sub_241DAA990();
  uint64_t v41 = v79;
  uint64_t v40 = (uint64_t)v80;
  if (*(void *)(v37 + 16) && (unint64_t v42 = sub_241DA3428(v38, v39), (v43 & 1) != 0))
  {
    sub_241D2DA4C(*(void *)(v37 + 56) + 32 * v42, (uint64_t)&v86);
  }
  else
  {
    long long v86 = 0u;
    long long v87 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v87 + 1)) {
    goto LABEL_27;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_28:
    uint64_t v46 = v78;
    goto LABEL_29;
  }
  uint64_t v45 = (uint64_t)v84;
  uint64_t v44 = v85;
  uint64_t v46 = v78;
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_241DA95E0();
  sub_241D5C4E8(v47, v48, v45, v44, v72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v50 = *(void *)(v18 + 16);
  unint64_t v49 = *(void *)(v18 + 24);
  if (v50 >= v49 >> 1) {
    uint64_t v18 = sub_241D9A0E4(v49 > 1, v50 + 1, 1, v18);
  }
  uint64_t v40 = (uint64_t)v80;
  unint64_t v51 = v81;
  *(void *)(v18 + 16) = v50 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v46 + 32))(v18 + v51 + v50 * v82, v72, v41);
LABEL_29:
  id v52 = objc_msgSend(a1, sel_sourceRevision);
  sub_241D5B748(v52, v40);

  unint64_t v54 = *(void *)(v18 + 16);
  unint64_t v53 = *(void *)(v18 + 24);
  uint64_t v55 = v73;
  if (v54 >= v53 >> 1) {
    uint64_t v18 = sub_241D9A0E4(v53 > 1, v54 + 1, 1, v18);
  }
  uint64_t v56 = v82;
  uint64_t v57 = v83;
  *(void *)(v18 + 16) = v54 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v46 + 32))(v18 + v81 + v54 * v56, v40, v41);
  sub_241D31F50(v18);
  swift_bridgeObjectRelease();
  sub_241DA97A0();
  sub_241DA9780();
  uint64_t v58 = v76;
  uint64_t v59 = *(void (**)(char *, uint64_t))(v75 + 8);
  v59(v4, v76);
  uint64_t v60 = v77;
  sub_241DA9BF0();
  sub_241D5D05C(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  unint64_t v61 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  uint64_t v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = v74;
  (*(void (**)(unint64_t, char *, uint64_t))(v55 + 16))(v62 + v61, v60, v57);
  *(void *)&long long v86 = 0x3C53447961727241;
  *((void *)&v86 + 1) = 0xE800000000000000;
  sub_241DA97A0();
  sub_241DA9780();
  v59(v4, v58);
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  sub_241DAAA50();
  sub_241DA9AB0();
  swift_allocObject();
  sub_241DA9AA0();
  uint64_t v63 = MEMORY[0x263F43CC0];
  sub_241DA9B40();
  swift_release();
  sub_241D5CF60(0, (unint64_t *)&qword_268D4B9F8, MEMORY[0x263F43CC8], v63, MEMORY[0x263F43CD0]);
  sub_241D5CFCC();
  sub_241DA9B70();
  swift_release();
  uint64_t v64 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x263F43C70];
  sub_241D5D108(0, &qword_268D4C358, MEMORY[0x263F43C70]);
  sub_241D5D1AC(&qword_268D4C360, &qword_268D4C358, v64);
  uint64_t v65 = sub_241DA9B60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v60, v83);
  sub_241D5DD40(&qword_268D4C368, (void (*)(uint64_t))sub_241D5D1F0);
  return v65;
}

uint64_t sub_241D5A0D0(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5)
{
  return VisionPrescriptionDetailsViewController.init(healthStore:visionPrescription:canEdit:)(a3, a4, a5);
}

uint64_t sub_241D5A120@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  id v40 = a1;
  uint64_t v3 = sub_241DAA2E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA280();
  uint64_t v7 = sub_241DAA2D0();
  os_log_type_t v8 = sub_241DAAC30();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = MEMORY[0x263F8EE58];
  if (v9)
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v38 = v3;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v39 = a2;
    uint64_t v14 = v13;
    *(void *)&long long v44 = v13;
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v15 = sub_241DAB1F0();
    *(void *)&long long v42 = sub_241D48854(v15, v16, (uint64_t *)&v44);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v7, v8, "%{public}s Received prescription updates, updating sample details", v12, 0xCu);
    uint64_t v10 = MEMORY[0x263F8EE58];
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v14, -1, -1);
    MEMORY[0x24563A5D0](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v38);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v17 = v10;
  id v18 = v40;
  id v19 = objc_msgSend(v40, sel_metadata);
  id v20 = (id *)MEMORY[0x263F09AF0];
  if (v19)
  {
    uint64_t v21 = v19;
    uint64_t v22 = sub_241DAA920();

    uint64_t v23 = sub_241DAA990();
    if (*(void *)(v22 + 16) && (unint64_t v25 = sub_241DA3428(v23, v24), (v26 & 1) != 0))
    {
      sub_241D2DA4C(*(void *)(v22 + 56) + 32 * v25, (uint64_t)&v44);
    }
    else
    {
      long long v44 = 0u;
      long long v45 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v44 = 0u;
    long long v45 = 0u;
  }
  sub_241D5DD88((uint64_t)&v44, (uint64_t)&v42);
  if (v43)
  {
    sub_241D28BE4(&v42, v41);
    sub_241D5DE14(0, (unint64_t *)&unk_268D4C4A0, v17 + 8, MEMORY[0x263F8E0F8]);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_241DB2C80;
    sub_241D28BE4(v41, (_OWORD *)(v27 + 32));
  }
  id v28 = self;
  id v29 = *v20;
  uint64_t v30 = (void *)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(v28, sel_predicateForObjectsWithMetadataKey_allowedValues_, v29, v30);

  id v32 = objc_msgSend(v18, sel_sampleType);
  id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v32, v31);

  sub_241D5DE14(0, (unint64_t *)&qword_268D4BC80, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_241DB33B0;
  *(void *)(v34 + 32) = v33;
  *(void *)&long long v42 = v34;
  sub_241DAAB10();
  id v35 = v33;
  sub_241DAABA0();

  swift_bridgeObjectRelease();
  return sub_241D2D994((uint64_t)&v44);
}

uint64_t sub_241D5A5AC(void **a1)
{
  uint64_t v2 = sub_241DAA2E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  sub_241DAA280();
  id v7 = v6;
  id v8 = v6;
  BOOL v9 = sub_241DAA2D0();
  os_log_type_t v10 = sub_241DAAC10();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v21 = v2;
    uint64_t v12 = v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v13;
    *(_DWORD *)uint64_t v12 = 136446466;
    uint64_t v14 = sub_241DAB1F0();
    uint64_t v22 = sub_241D48854(v14, v15, &v23);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v22 = (uint64_t)v6;
    id v16 = v6;
    sub_241D36B4C(0, (unint64_t *)&qword_268D4C3D0);
    uint64_t v17 = sub_241DAA9B0();
    uint64_t v22 = sub_241D48854(v17, v18, &v23);
    sub_241DAAF10();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241D1C000, v9, v10, "[%{public}s] Single updating prescription stream failed: %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v13, -1, -1);
    MEMORY[0x24563A5D0](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v23 = MEMORY[0x263F8EE78];
  sub_241D5D87C(0, (unint64_t *)&unk_268D4C430, (unint64_t *)&unk_268D4D380, 0x263F0A6B8, MEMORY[0x263F8D488]);
  return sub_241DAA620();
}

void sub_241D5A890(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    *a2 = 0;
    return;
  }
  swift_bridgeObjectRetain();
  if (!sub_241DAB0A0()) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x245639BE0](0, v3);
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v3 + 32);
LABEL_6:
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    self;
    uint64_t v7 = swift_dynamicCastObjCClass();
    if (v7)
    {
      *a2 = v7;
      return;
    }

    goto LABEL_11;
  }
  __break(1u);
}

void sub_241D5A970()
{
}

Swift::Void __swiftcall VisionPrescriptionDetailsViewController.viewDidLoad()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for VisionPrescriptionDetailsViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_241D5AA64();
}

void sub_241D5AA08(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionDetailsViewController();
  id v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_241D5AA64();
}

void sub_241D5AA64()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  id v1 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v1, 0xE000000000000000);

  if (*((unsigned char *)v0 + qword_268D4C250) == 1
    && (id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A980]), sel_init),
        unsigned int v3 = objc_msgSend(v2, sel_hkui_isRunningInHealthApp),
        v2,
        v3))
  {
    sub_241D5ABE8();
  }
  else if (objc_msgSend(v0, sel_isBeingPresented))
  {
    sub_241D5AE3C();
  }
}

void sub_241D5ABE8()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  uint64_t v2 = type metadata accessor for VisionPrescriptionDetailsViewController();
  uint64_t v12[3] = v2;
  v12[0] = v0;
  id v3 = v0;
  uint64_t v4 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  if (v2)
  {
    id v5 = sub_241D5CF1C(v12, v2);
    uint64_t v6 = *(void *)(v2 - 8);
    MEMORY[0x270FA5388](v5);
    id v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = sub_241DAB140();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v2);
    sub_241D36E44((uint64_t)v12);
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = objc_allocWithZone(MEMORY[0x263F824A8]);
  id v11 = objc_msgSend(v10, sel_initWithTitle_style_target_action_, v4, 0, v9, sel_editButtonTapped_, v12[0]);

  swift_unknownObjectRelease();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v11);
}

void sub_241D5AE3C()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  uint64_t v2 = type metadata accessor for VisionPrescriptionDetailsViewController();
  uint64_t v12[3] = v2;
  v12[0] = v0;
  id v3 = v0;
  uint64_t v4 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  if (v2)
  {
    id v5 = sub_241D5CF1C(v12, v2);
    uint64_t v6 = *(void *)(v2 - 8);
    MEMORY[0x270FA5388](v5);
    id v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = sub_241DAB140();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v2);
    sub_241D36E44((uint64_t)v12);
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = objc_allocWithZone(MEMORY[0x263F824A8]);
  id v11 = objc_msgSend(v10, sel_initWithTitle_style_target_action_, v4, 0, v9, sel_doneButtonTapped_, v12[0]);

  swift_unknownObjectRelease();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v11);
}

uint64_t sub_241D5B090()
{
  id v1 = v0;
  uint64_t v2 = *(void **)&v0[qword_268D4C248];
  type metadata accessor for VisionPrescriptionAnalyticsContext();
  swift_allocObject();
  id v3 = v2;
  sub_241DA5C58(v3);
  char v4 = 1;
  sub_241DA6314(1, 0, 0, 1);
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v12)
  {
    id v5 = v12;
    sub_241D5CE1C(v13, (uint64_t)v14, v15);
    sub_241D5CEC8((uint64_t)v13, (uint64_t)v14, v15);
    char v6 = sub_241D574F8();

    if (v6) {
      char v4 = 2;
    }
    else {
      char v4 = 1;
    }
  }
  id v7 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionManualDataEntryViewController());
  id v8 = v3;
  sub_241D5CDC4(v12, v13, (uint64_t)v14, v15);
  uint64_t v9 = (void *)sub_241D62778(v8, v12, (uint64_t)v13, v14, v15, v4);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v9);
  objc_msgSend(v10, sel_setModalInPresentation_, 1);
  objc_msgSend(v10, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v10, 1, 0);
  sub_241D5CE70(v12, (uint64_t)v13, (uint64_t)v14, v15);

  return swift_release();
}

uint64_t sub_241D5B274(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_241DAAF50();
  swift_unknownObjectRelease();
  sub_241D5B090();

  return sub_241D36E44((uint64_t)&v4);
}

uint64_t sub_241D5B2DC(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_241DAAF50();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return sub_241D36E44((uint64_t)&v4);
}

void sub_241D5B350(uint64_t a1@<X8>)
{
  id v11 = (id)HKDateFormatterFromTemplate();
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t v2 = 0xE000000000000000;
  uint64_t v3 = sub_241DA95E0();
  uint64_t v5 = v4;
  if (v11)
  {
    id v6 = v11;
    id v7 = (void *)sub_241DA9730();
    id v8 = objc_msgSend(v6, sel_stringFromDate_, v7, 0xE000000000000000);

    uint64_t v9 = sub_241DAA990();
    uint64_t v2 = v10;
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_241D5C4E8(v3, v5, v9, v2, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_241D5B4D8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  sub_241D50C30(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_241DB2C60;
  id v6 = self;
  id v7 = objc_msgSend(v6, sel_diopterUnit, 0xE000000000000000);
  objc_msgSend(a1, sel_doubleValueForUnit_, v7);
  uint64_t v9 = v8;

  uint64_t v10 = MEMORY[0x263F8D538];
  uint64_t v11 = MEMORY[0x263F8D5B8];
  *(void *)(v5 + 56) = MEMORY[0x263F8D538];
  *(void *)(v5 + 64) = v11;
  *(void *)(v5 + 32) = v9;
  id v12 = objc_msgSend(v6, sel_diopterUnit);
  objc_msgSend(a2, sel_doubleValueForUnit_, v12);
  uint64_t v14 = v13;

  *(void *)(v5 + 96) = v10;
  *(void *)(v5 + 104) = v11;
  *(void *)(v5 + 72) = v14;
  uint64_t v15 = sub_241DAA960();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_241DA95E0();
  sub_241D5C4E8(v18, v19, v15, v17, a3);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241D5B748@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_source);
  id v4 = objc_msgSend(v3, sel_name);

  uint64_t v5 = sub_241DAA990();
  uint64_t v7 = v6;

  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_241DA95E0();
  sub_241D5C4E8(v8, v9, v5, v7, a2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241D5B880@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v19 = sub_241DAA1C0();
  uint64_t v2 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v4 = (char *)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241DA9CB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D5D05C(0, &qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v20[-1] - v10;
  uint64_t v12 = sub_241DAA460();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA3B0();
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  sub_241DAA440();
  v20[3] = v12;
  v20[4] = MEMORY[0x263F81F20];
  uint64_t v16 = sub_241D2C600(v20);
  (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(v16, v15, v12);
  sub_241DAA380();
  uint64_t v17 = sub_241DAA390();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F440E0], v5);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F446D0], v19);
  a1[3] = sub_241DA9E00();
  a1[4] = sub_241D5DD40(&qword_268D4C390, MEMORY[0x263F441F0]);
  sub_241D2C600(a1);
  sub_241DA9DF0();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_241D5BCC8(uint64_t a1, uint64_t a2)
{
  return sub_241D5C400(a1, a2, MEMORY[0x263F44120]);
}

uint64_t sub_241D5BCE0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a2;
  long long v44 = a1;
  uint64_t v45 = a3;
  uint64_t v3 = sub_241DAA1C0();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v3);
  long long v42 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241DA9CB0();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v39 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241D5D05C(0, &qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v36 = (char *)v33 - v9;
  sub_241D5D05C(0, (unint64_t *)&unk_268D4C340, MEMORY[0x263F81DF8], v7);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v33 - v11;
  uint64_t v13 = sub_241DAA350();
  uint64_t v34 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_241DAA310();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_241DAA460();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  v33[1] = sub_241DA95E0();
  sub_241DAA430();
  swift_bridgeObjectRetain();
  sub_241DAA440();
  v46[3] = v20;
  v46[4] = MEMORY[0x263F81F20];
  uint64_t v24 = sub_241D2C600(v46);
  (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 16))(v24, v23, v20);
  sub_241D5D05C(0, &qword_268D4B860, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  sub_241DAA370();
  v33[0] = v20;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241DB2C80;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F81DE8], v16);
  uint64_t v25 = sub_241DAA320();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 1, 1, v25);
  sub_241DAA340();
  sub_241DAA330();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v35);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v26 = swift_allocObject();
  id v28 = v43;
  uint64_t v27 = v44;
  *(void *)(v26 + 16) = v43;
  *(void *)(v26 + 24) = v27;
  uint64_t v29 = sub_241DAA390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v36, 1, 1, v29);
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v39, *MEMORY[0x263F440E0], v38);
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v42, *MEMORY[0x263F446D0], v41);
  id v30 = v28;
  id v31 = v27;
  sub_241DA9DF0();
  return (*(uint64_t (**)(char *, void))(v21 + 8))(v23, v33[0]);
}

uint64_t sub_241D5C3E8(uint64_t a1, uint64_t a2)
{
  return sub_241D5C400(a1, a2, MEMORY[0x263F44128]);
}

uint64_t sub_241D5C400(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = sub_241DA9D50();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v6);
  uint64_t v9 = sub_241DA9D40();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v9;
}

uint64_t sub_241D5C4E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v29[1] = a4;
  v29[2] = a3;
  uint64_t v31 = a1;
  uint64_t v38 = a5;
  uint64_t v6 = sub_241DAA1C0();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v35 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241DA9CB0();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  MEMORY[0x270FA5388](v8);
  id v32 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D5D05C(0, &qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  id v30 = (char *)v29 - v11;
  uint64_t v12 = sub_241DAA460();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA3A0();
  void v29[3] = a2;
  swift_bridgeObjectRetain();
  sub_241DAA440();
  uint64_t v16 = self;
  id v17 = objc_msgSend(v16, sel_preferredFontForTextStyle_, *MEMORY[0x263F835F0]);
  uint64_t v18 = (void (*)(uint64_t *, void))sub_241DAA3F0();
  sub_241DAA3D0();
  v18(v39, 0);
  uint64_t v19 = self;
  id v20 = objc_msgSend(v19, sel_secondaryLabelColor);
  uint64_t v21 = (void (*)(uint64_t *, void))sub_241DAA3F0();
  sub_241DAA3E0();
  v21(v39, 0);
  swift_bridgeObjectRetain();
  sub_241DAA3C0();
  id v22 = objc_msgSend(v16, sel_preferredFontForTextStyle_, *MEMORY[0x263F83570]);
  uint64_t v23 = (void (*)(uint64_t *, void))sub_241DAA400();
  sub_241DAA3D0();
  v23(v39, 0);
  id v24 = objc_msgSend(v19, sel_labelColor);
  uint64_t v25 = (void (*)(uint64_t *, void))sub_241DAA400();
  sub_241DAA3E0();
  v25(v39, 0);
  v39[3] = v12;
  unsigned char v39[4] = MEMORY[0x263F81F20];
  uint64_t v26 = sub_241D2C600(v39);
  (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(v26, v15, v12);
  uint64_t v27 = sub_241DAA390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v30, 1, 1, v27);
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, *MEMORY[0x263F440E0], v34);
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F446D0], v37);
  swift_bridgeObjectRetain();
  sub_241DA9DF0();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

void sub_241D5C9E0(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46870]), sel_initWithSample_healthStore_, a2, a3);
  objc_msgSend(a1, sel_showViewController_sender_, v4, a1);
}

void VisionPrescriptionDetailsViewController.__allocating_init(dataSource:)()
{
}

void VisionPrescriptionDetailsViewController.init(dataSource:)()
{
}

id VisionPrescriptionDetailsViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void VisionPrescriptionDetailsViewController.init(collectionViewLayout:)()
{
}

void sub_241D5CB3C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_241D5CB70()
{
  swift_release();

  swift_release();

  return swift_release();
}

id VisionPrescriptionDetailsViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionDetailsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241D5CC08(uint64_t a1)
{
  swift_release();

  swift_release();

  return swift_release();
}

unint64_t sub_241D5CC74()
{
  unint64_t result = qword_268D4C288;
  if (!qword_268D4C288)
  {
    sub_241D5CF60(255, &qword_268D4C290, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionDataSource, MEMORY[0x263F440A0], MEMORY[0x263F43F28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C288);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionDetailsViewController()
{
  uint64_t result = qword_268D4C298;
  if (!qword_268D4C298) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D5CD50()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241D5CDBC()
{
  return type metadata accessor for VisionPrescriptionDetailsViewController();
}

id sub_241D5CDC4(id result, void *a2, uint64_t a3, void *a4)
{
  if (result)
  {
    id v7 = result;
    return sub_241D5CE1C(a2, a3, a4);
  }
  return result;
}

id sub_241D5CE1C(id result, uint64_t a2, void *a3)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a3;
  }
  return result;
}

void sub_241D5CE70(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {

    sub_241D5CEC8(a2, a3, a4);
  }
}

void sub_241D5CEC8(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void *sub_241D5CF1C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

void sub_241D5CF60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_241D5CFCC()
{
  unint64_t result = qword_268D4C320;
  if (!qword_268D4C320)
  {
    sub_241D5CF60(255, (unint64_t *)&qword_268D4B9F8, MEMORY[0x263F43CC8], MEMORY[0x263F43CC0], MEMORY[0x263F43CD0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C320);
  }
  return result;
}

void sub_241D5D05C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241D5D0C0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241D5D100(void *a1)
{
  sub_241D5C9E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_241D5D108(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  if (!*a2)
  {
    sub_241D5CF60(255, (unint64_t *)&qword_268D4B9F8, MEMORY[0x263F43CC8], MEMORY[0x263F43CC0], MEMORY[0x263F43CD0]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_241D5CFCC();
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241D5D1AC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241D5D108(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241D5D1F0()
{
  if (!qword_268D4C370)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x263F43C70];
    sub_241D5D108(255, &qword_268D4C358, MEMORY[0x263F43C70]);
    sub_241D5D1AC(&qword_268D4C360, &qword_268D4C358, v0);
    unint64_t v1 = sub_241DA9B80();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D4C370);
    }
  }
}

void sub_241D5D2A4()
{
  if (!qword_268D4C398)
  {
    sub_241D5D338();
    sub_241D5DD40(&qword_268D4C3F0, (void (*)(uint64_t))sub_241D5D338);
    unint64_t v0 = sub_241DAA520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C398);
    }
  }
}

void sub_241D5D338()
{
  if (!qword_268D4C3A0)
  {
    sub_241D5D4F4(255, &qword_268D4C3A8, MEMORY[0x263F44B10], (void (*)(void))sub_241D51194);
    sub_241D5D424();
    sub_241D5D570();
    sub_241D5DD40(&qword_268D4C3E8, (void (*)(uint64_t))sub_241D5D424);
    unint64_t v0 = sub_241DAA540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C3A0);
    }
  }
}

void sub_241D5D424()
{
  if (!qword_268D4C3B8)
  {
    sub_241D5D4F4(255, (unint64_t *)&unk_268D4C3C0, MEMORY[0x263F07CB0], (void (*)(void))sub_241D5220C);
    sub_241D36B4C(255, (unint64_t *)&qword_268D4C3D0);
    sub_241D522D4();
    unint64_t v0 = sub_241DAA4D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C3B8);
    }
  }
}

void sub_241D5D4F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_241DAA510();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_241D5D570()
{
  unint64_t result = qword_268D4C3E0;
  if (!qword_268D4C3E0)
  {
    sub_241D5D4F4(255, &qword_268D4C3A8, MEMORY[0x263F44B10], (void (*)(void))sub_241D51194);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C3E0);
  }
  return result;
}

void sub_241D5D5F8()
{
  if (!qword_268D4C3F8)
  {
    sub_241D5D2A4();
    sub_241DAAB90();
    sub_241D5DD40(&qword_268D4C400, (void (*)(uint64_t))sub_241D5D2A4);
    unint64_t v0 = sub_241DAA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C3F8);
    }
  }
}

void sub_241D5D6A4()
{
  if (!qword_268D4C408)
  {
    sub_241DAAB90();
    sub_241D5D5F8();
    sub_241D5DD40(&qword_268D4C410, MEMORY[0x263F44AA8]);
    sub_241D5DD40(&qword_268D4C418, (void (*)(uint64_t))sub_241D5D5F8);
    unint64_t v0 = sub_241DAA4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C408);
    }
  }
}

void sub_241D5D790()
{
  if (!qword_268D4C420)
  {
    sub_241D5D6A4();
    sub_241D37504();
    sub_241D5DD40((unint64_t *)&unk_268D4C440, (void (*)(uint64_t))sub_241D5D6A4);
    sub_241D5DD40(&qword_268D4B948, (void (*)(uint64_t))sub_241D37504);
    unint64_t v0 = sub_241DAA530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C420);
    }
  }
}

void sub_241D5D87C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241D28BF4(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241D5D8E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_241D5D87C(255, (unint64_t *)&qword_268D4BF20, (unint64_t *)&qword_268D4C210, 0x263F0A8E0, MEMORY[0x263F8D8F0]);
    a4();
    unint64_t v6 = sub_241DAA510();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_241D5D998()
{
  return sub_241D5DD40(&qword_268D4C458, (void (*)(uint64_t))sub_241D5D790);
}

void sub_241D5D9CC()
{
  if (!qword_268D4C460)
  {
    sub_241D5DAB8();
    sub_241D5D8E4(255, &qword_268D4C450, (void (*)(uint64_t))sub_241D5D790, (void (*)(void))sub_241D5D998);
    sub_241D5DD40(&qword_268D4C480, (void (*)(uint64_t))sub_241D5DAB8);
    sub_241D5DC54();
    unint64_t v0 = sub_241DAA4C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C460);
    }
  }
}

void sub_241D5DAB8()
{
  if (!qword_268D4C468)
  {
    sub_241D5DB54(255, &qword_268D4C470, MEMORY[0x263F8D488]);
    sub_241D5DBE0();
    unint64_t v0 = sub_241DAA560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C468);
    }
  }
}

void sub_241D5DB54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_241D5D87C(255, (unint64_t *)&qword_268D4BF20, (unint64_t *)&qword_268D4C210, 0x263F0A8E0, MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_241D5DBE0()
{
  unint64_t result = qword_268D4C478;
  if (!qword_268D4C478)
  {
    sub_241D5DB54(255, &qword_268D4C470, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C478);
  }
  return result;
}

unint64_t sub_241D5DC54()
{
  unint64_t result = qword_268D4C488;
  if (!qword_268D4C488)
  {
    sub_241D5D8E4(255, &qword_268D4C450, (void (*)(uint64_t))sub_241D5D790, (void (*)(void))sub_241D5D998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C488);
  }
  return result;
}

uint64_t sub_241D5DCDC()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241D5DD1C@<X0>(uint64_t a1@<X8>)
{
  return sub_241D5A120(*(void **)(v1 + 16), a1);
}

uint64_t sub_241D5DD28()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D5DD38(void **a1)
{
  return sub_241D5A5AC(a1);
}

uint64_t sub_241D5DD40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241D5DD88(uint64_t a1, uint64_t a2)
{
  sub_241D5DE14(0, (unint64_t *)&qword_268D4C350, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_241D5DE14(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241D5DE60()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C4B0 = result;
  *(void *)algn_268D4C4B8 = v1;
  return result;
}

void *static HKVisionPrescriptionType.allCases.getter()
{
  return &unk_26F5CF0B0;
}

uint64_t HKVisionPrescriptionType.text.getter(uint64_t a1)
{
  uint64_t v2 = sub_241DAA2E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    if (qword_268D4B2F0 == -1) {
      return sub_241DA95E0();
    }
LABEL_10:
    swift_once();
    return sub_241DA95E0();
  }
  if (a1 == 2)
  {
    if (qword_268D4B2F0 == -1) {
      return sub_241DA95E0();
    }
    goto LABEL_10;
  }
  sub_241DAA2B0();
  unint64_t v7 = sub_241DAA2D0();
  os_log_type_t v8 = sub_241DAAC10();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v13 = sub_241D48854(0xD000000000000018, 0x8000000241DAEDA0, &v14);
    sub_241DAAF10();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v13 = a1;
    type metadata accessor for HKVisionPrescriptionType(0);
    uint64_t v11 = sub_241DAA9B0();
    uint64_t v13 = sub_241D48854(v11, v12, &v14);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v7, v8, "[%s] unknown HKVisionPrescriptionType %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v10, -1, -1);
    MEMORY[0x24563A5D0](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

void sub_241D5E244(void *a1@<X8>)
{
  *a1 = &unk_26F5CF0E0;
}

uint64_t sub_241D5E254()
{
  return HKVisionPrescriptionType.text.getter(*v0);
}

uint64_t sub_241D5E25C(char a1)
{
  if (a1)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
  }
  else if (qword_268D4B2F0 != -1)
  {
    swift_once();
  }
  return sub_241DA95E0();
}

uint64_t sub_241D5E360(char a1)
{
  if (a1)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
  }
  else if (qword_268D4B2F0 != -1)
  {
    swift_once();
  }
  return sub_241DA95E0();
}

BOOL sub_241D5E464(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_241D5E47C@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  sub_241DAA5D0();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_241D5E4CC(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    swift_retain();
    sub_241DAA5E0();
    return swift_release();
  }
  return result;
}

uint64_t sub_241D5E51C(char a1)
{
  char v1 = a1 & 1;
  sub_241D5E25C(a1 & 1);
  sub_241D5E360(v1);
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = v1;
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(unsigned char *)(v5 + 24) = v1;
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(unsigned char *)(v7 + 24) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241D5E25C(v1);
  sub_241DA9E80();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_241D5E708(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_241D62424(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - v6;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    uint64_t v9 = sub_241DA9770();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
    if (a4) {
      sub_241D6D314((uint64_t)v7);
    }
    else {
      sub_241D6CF98((uint64_t)v7);
    }
    swift_release();
    return sub_241D6251C((uint64_t)v7, &qword_268D4B5B0, MEMORY[0x263F07490]);
  }
  return result;
}

uint64_t sub_241D5E870(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_241D5EA54(a3 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_241D5E8D0@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    swift_retain();
    sub_241DAA5D0();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v2 = sub_241DA9770();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
}

uint64_t sub_241D5E9B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    if (a4) {
      sub_241D6D314(a2);
    }
    else {
      sub_241D6CF98(a2);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_241D5EA54(char a1)
{
  uint64_t v2 = a1 & 1;
  uint64_t v3 = sub_241DA9E90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D62424(0, &qword_268D4C5A8, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v21[-1] - v8;
  uint64_t v10 = sub_241DA9880();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v21[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = qword_268D4C4F8;
  int v16 = *(unsigned __int8 *)(v1 + qword_268D4C4F8);
  if (v16 != 2)
  {
    sub_241D5F17C(v16 & 1, (uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      uint64_t result = sub_241D6251C((uint64_t)v9, &qword_268D4C5A8, MEMORY[0x263F07A30]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
      sub_241DA9C30();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  int v17 = *(unsigned __int8 *)(v1 + v15);
  if (v17 != 2 && (v17 & 1) == v2)
  {
    LOBYTE(v2) = 2;
  }
  else
  {
    sub_241D5ED70(v2);
    sub_241D5E51C(v2);
    v21[3] = v3;
    v21[4] = sub_241D611C8(&qword_268D4C568, MEMORY[0x263F442A0]);
    uint64_t v19 = sub_241D2C600(v21);
    (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v19, v6, v3);
    sub_241DA9C80();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_241D36E44((uint64_t)v21);
    uint64_t result = sub_241D5F39C(v2);
  }
  *(unsigned char *)(v1 + v15) = v2;
  return result;
}

uint64_t sub_241D5ED70(char a1)
{
  uint64_t v2 = sub_241DA9770();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v27 = (char *)&v27 - v6;
  sub_241D62424(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  int v16 = (char *)&v27 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v27 - v17;
  uint64_t v19 = (uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (a1)
  {
    swift_retain();
    sub_241DAA5D0();
    swift_release();
    id v22 = *v19;
    int v23 = (*v19)(v13, 1, v2);
    uint64_t result = sub_241D6251C((uint64_t)v13, &qword_268D4B5B0, MEMORY[0x263F07490]);
    if (v23 == 1)
    {
      swift_retain();
      sub_241DAA5D0();
      swift_release();
      if (v22(v10, 1, v2) == 1)
      {
        return sub_241D6251C((uint64_t)v10, &qword_268D4B5B0, MEMORY[0x263F07490]);
      }
      else
      {
        id v24 = v27;
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v27, v10, v2);
        uint64_t v25 = v28;
        sub_241DA9720();
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v16, v25, v2);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v16, 0, 1, v2);
        swift_retain();
        sub_241DAA5E0();
        swift_release();
        uint64_t v26 = *(void (**)(char *, uint64_t))(v3 + 8);
        v26(v25, v2);
        return ((uint64_t (*)(char *, uint64_t))v26)(v24, v2);
      }
    }
  }
  else
  {
    swift_retain();
    sub_241DAA5D0();
    swift_release();
    int v20 = (*v19)(v18, 1, v2);
    uint64_t result = sub_241D6251C((uint64_t)v18, &qword_268D4B5B0, MEMORY[0x263F07490]);
    if (v20 == 1)
    {
      swift_retain();
      sub_241DA9760();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v16, 0, 1, v2);
      sub_241DAA5E0();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_241D5F17C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  char v3 = a1 & 1;
  sub_241D62424(0, &qword_268D4C5A8, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = sub_241DA9880();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241D5E25C(v3);
  sub_241D60C10(v11, v12, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_241D6251C((uint64_t)v6, &qword_268D4C5A8, MEMORY[0x263F07A30]);
    uint64_t v13 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v13, 1, v7);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  uint64_t result = sub_241DA9850();
  uint64_t v15 = result + 1;
  if (!__OFADD__(result, 1))
  {
    uint64_t v16 = sub_241DA9870();
    MEMORY[0x245638430](v15, v16);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v13 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v13, 1, v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_241D5F39C(char a1)
{
  char v1 = a1 & 1;
  uint64_t v2 = sub_241DA9C20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D62424(0, &qword_268D4C5A8, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v22[-1] - v7;
  uint64_t v9 = sub_241DA9880();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v22[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D5F17C(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_241D6251C((uint64_t)v8, &qword_268D4C5A8, MEMORY[0x263F07A30]);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v14 = swift_allocObject();
  uint64_t v21 = v2;
  uint64_t v15 = v14;
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(unsigned char *)(v16 + 24) = v1;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(unsigned char *)(v18 + 24) = v1;
  sub_241DA9C10();
  uint64_t v19 = v21;
  v22[3] = v21;
  v22[4] = sub_241D611C8(&qword_268D4C5B0, MEMORY[0x263F44078]);
  int v20 = sub_241D2C600(v22);
  (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v20, v5, v19);
  sub_241DA9C70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return sub_241D36E44((uint64_t)v22);
}

uint64_t sub_241D5F728()
{
  char v1 = v0;
  uint64_t v2 = *v0;
  sub_241D620CC();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)((char *)v0 + qword_268D4C500);
  uint64_t v9 = *(void *)(v8 + 24);
  v14[0] = *(void *)(v8 + 32);
  v14[1] = v9;
  sub_241D6216C();
  sub_241D611C8(&qword_268D4C590, (void (*)(uint64_t))sub_241D6216C);
  sub_241DAA740();
  *(void *)(swift_allocObject() + 16) = v2;
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_241D62238;
  *(void *)(v11 + 24) = v10;
  sub_241D611C8(&qword_268D4C598, (void (*)(uint64_t))sub_241D620CC);
  uint64_t v12 = sub_241DAA760();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(void *)((char *)v1 + qword_268D4C4E8) = v12;
  return swift_release();
}

uint64_t sub_241D5F99C()
{
  uint64_t v0 = sub_241DA9E90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_241D5E51C(0);
    uint64_t v9 = v0;
    uint64_t v10 = sub_241D611C8(&qword_268D4C568, MEMORY[0x263F442A0]);
    uint64_t v4 = sub_241D2C600(v8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(v4, v3, v0);
    sub_241DA9C80();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_241D36E44((uint64_t)v8);
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_241D5E51C(1);
    uint64_t v9 = v0;
    uint64_t v10 = sub_241D611C8(&qword_268D4C568, MEMORY[0x263F442A0]);
    uint64_t v6 = sub_241D2C600(v8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(v6, v3, v0);
    sub_241DA9C80();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_241D36E44((uint64_t)v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_241D5FBD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  *(void *)(swift_allocObject() + 16) = v2;
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  sub_241D61F7C();
  sub_241D611C8((unint64_t *)&qword_268D4C578, (void (*)(uint64_t))sub_241D61F7C);
  swift_retain();
  uint64_t v5 = sub_241DAA760();
  swift_release();
  swift_release();
  swift_release();
  *(void *)((char *)v1 + qword_268D4C4E0) = v5;
  return swift_release();
}

uint64_t sub_241D5FD60(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v4 = sub_241DAA2E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA280();
  uint64_t v8 = sub_241DAA2D0();
  os_log_type_t v9 = sub_241DAAC30();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = a3;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_241DAB1F0();
    uint64_t v18 = sub_241D48854(v13, v14, &v19);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v8, v9, v17, v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v12, -1, -1);
    MEMORY[0x24563A5D0](v11, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_241D5FF3C(uint64_t *a1)
{
  uint64_t v2 = sub_241DAA2E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v6 == 2)
    {
      if (qword_268D4B2F0 != -1) {
        swift_once();
      }
      sub_241DA95E0();
      if (qword_268D4B320 == -1) {
        goto LABEL_11;
      }
LABEL_17:
      swift_once();
LABEL_11:
      v20[3] = sub_241DA9A90();
      v20[4] = sub_241D611C8(&qword_268D4C560, MEMORY[0x263F43C88]);
      sub_241D2C600(v20);
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_241DA9A80();
      sub_241DA9C90();
      swift_release();
      return sub_241D36E44((uint64_t)v20);
    }
    if (v6 == 1)
    {
      if (qword_268D4B2F0 != -1) {
        swift_once();
      }
      sub_241DA95E0();
      if (qword_268D4B320 == -1) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
    sub_241DAA280();
    uint64_t v8 = sub_241DAA2D0();
    os_log_type_t v9 = sub_241DAAC10();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v10 = 136315394;
      uint64_t v11 = sub_241DAB1F0();
      uint64_t v18 = sub_241D48854(v11, v12, &v19);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      uint64_t v18 = v6;
      type metadata accessor for HKVisionPrescriptionType(0);
      uint64_t v13 = sub_241DAA9B0();
      uint64_t v18 = sub_241D48854(v13, v14, &v19);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v8, v9, "[%s] unsupported vision prescription type %s", (uint8_t *)v10, 0x16u);
      uint64_t v15 = v17;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v15, -1, -1);
      MEMORY[0x24563A5D0](v10, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

void sub_241D604D0()
{
}

uint64_t sub_241D60500()
{
  uint64_t v1 = v0 + qword_268D4C4D8;
  uint64_t v2 = sub_241DA9880();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_241D605AC()
{
  uint64_t v0 = sub_241DA9CA0() + qword_268D4C4D8;
  uint64_t v1 = sub_241DA9880();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241D60694()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F44238];
  sub_241D61DE4(0, &qword_268D4C528, MEMORY[0x263F44238]);
  sub_241D6151C(&qword_268D4C538, &qword_268D4C528, v0);
  sub_241DAAC40();
  sub_241DAA0C0();
  sub_241DAAC40();
  sub_241DAA1A0();
  sub_241DAAC40();
  sub_241DAA170();
  sub_241DAAC40();
  sub_241DA99C0();
  return sub_241DAAC50();
}

uint64_t sub_241D60784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_241DAA1C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  os_log_type_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D62424(0, &qword_268D4C540, MEMORY[0x263F43C30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v18 - v11;
  if (sub_241DAA990() == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = sub_241DAB160();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      a3[3] = sub_241DA9AE0();
      a3[4] = sub_241D611C8(&qword_268D4B728, MEMORY[0x263F43D00]);
      sub_241D2C600(a3);
      return sub_241DA9AD0();
    }
  }
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  uint64_t v17 = sub_241DA9A50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 1, 1, v17);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F446D0], v6);
  a3[3] = sub_241DA9A60();
  a3[4] = sub_241D611C8(&qword_268D4C548, MEMORY[0x263F43C38]);
  sub_241D2C600(a3);
  return sub_241DA9A40();
}

uint64_t sub_241D60ABC()
{
  uint64_t v0 = sub_241DA9D50();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v10 - v5;
  sub_241DA9D00();
  sub_241DA9CD0();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  sub_241DA9F00();
  uint64_t v8 = sub_241DA9D40();
  swift_unknownObjectRelease();
  v7(v4, v0);
  return v8;
}

uint64_t sub_241D60BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_241D60784(a1, a2, a3);
}

uint64_t sub_241D60C10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v5 = sub_241DA9C00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D623B8();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v40 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D62424(0, &qword_268D4C5C0, (uint64_t (*)(uint64_t))sub_241D623B8, MEMORY[0x263F8D8F0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v47 = (char *)&v36 - v17;
  uint64_t result = sub_241DA9C50();
  unint64_t i = 0;
  unint64_t v20 = *(void *)(result + 16);
  uint64_t v39 = v6 + 16;
  unint64_t v50 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  unint64_t v51 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v48 = result;
  unint64_t v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v21 = (unint64_t *)v16;
  uint64_t v46 = (void (**)(char *, uint64_t))(v6 + 8);
  unint64_t v41 = v20;
  long long v42 = (unint64_t *)v16;
  uint64_t v43 = v8;
  uint64_t v44 = v5;
  uint64_t v36 = v10;
  uint64_t v37 = v6;
  if (v20) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v22 = 1;
  for (unint64_t i = v20; ; ++i)
  {
    uint64_t v25 = v47;
    (*v50)(v21, v22, 1, v10);
    sub_241D62488((uint64_t)v21, (uint64_t)v25);
    if ((*v49)(v25, 1, v10) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v35 = sub_241DA9880();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v38, 1, 1, v35);
    }
    uint64_t v45 = *(void *)v25;
    (*v51)(v8, &v25[*(int *)(v10 + 48)], v5);
    uint64_t v26 = sub_241DA9BE0();
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_17:
    (*v46)(v8, v5);
    unint64_t v20 = v41;
    uint64_t v21 = v42;
    uint64_t result = v48;
    if (i == v41) {
      goto LABEL_2;
    }
LABEL_3:
    if ((i & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      return result;
    }
    if (i >= *(void *)(result + 16)) {
      goto LABEL_23;
    }
    int v23 = &v40[*(int *)(v10 + 48)];
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v23, result+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * i, v5);
    id v24 = (char *)v21 + *(int *)(v10 + 48);
    unint64_t *v21 = i;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v24, v23, v5);
    uint64_t v22 = 0;
  }
  uint64_t v28 = 0;
  uint64_t v29 = v26 + 32;
  while (1)
  {
    sub_241D3A710(v29, (uint64_t)v52);
    sub_241D5CF1C(v52, v52[3]);
    if (sub_241DA9910() == a1 && v30 == a2) {
      break;
    }
    char v32 = sub_241DAB160();
    swift_bridgeObjectRelease();
    sub_241D36E44((uint64_t)v52);
    if (v32) {
      goto LABEL_20;
    }
    ++v28;
    v29 += 40;
    if (v27 == v28)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = v43;
      uint64_t v5 = v44;
      uint64_t v10 = v36;
      uint64_t v6 = v37;
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
  sub_241D36E44((uint64_t)v52);
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = v38;
  MEMORY[0x245638450](v28, v45);
  (*v46)(v43, v44);
  uint64_t v34 = sub_241DA9880();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
}

unint64_t sub_241D610F8()
{
  unint64_t result = qword_268D4C4C0;
  if (!qword_268D4C4C0)
  {
    sub_241D62424(255, &qword_268D4C4C8, (uint64_t (*)(uint64_t))type metadata accessor for HKVisionPrescriptionType, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C4C0);
  }
  return result;
}

uint64_t sub_241D61180()
{
  return sub_241D611C8(&qword_268D4C4D0, type metadata accessor for HKVisionPrescriptionType);
}

uint64_t sub_241D611C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource()
{
  uint64_t result = qword_268D4C510;
  if (!qword_268D4C510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D6125C()
{
  uint64_t result = sub_241DA9880();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241D6131C()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource();
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource.VisionPrescriptionDateType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource.VisionPrescriptionDateType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241D61480);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_241D614A8(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource.VisionPrescriptionDateType()
{
  return &type metadata for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource.VisionPrescriptionDateType;
}

unint64_t sub_241D614C8()
{
  unint64_t result = qword_268D4C520;
  if (!qword_268D4C520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C520);
  }
  return result;
}

uint64_t sub_241D6151C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241D61DE4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241D61560(char a1, uint64_t a2)
{
  sub_241D62424(0, &qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  BOOL v7 = (char *)&v24 - v6;
  sub_241D61DE4(0, &qword_268D4C550, MEMORY[0x263F43AD8]);
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v27 = (char *)&v24 - v9;
  uint64_t v10 = sub_241DA97B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  MEMORY[0x245638430](1, 0);
  *(void *)(v2 + qword_268D4C4E0) = 0;
  *(void *)(v2 + qword_268D4C4E8) = 0;
  *(void *)(v2 + qword_268D4C4F0) = 0;
  *(unsigned char *)(v2 + qword_268D4C4F8) = 2;
  *(void *)(v2 + qword_268D4C500) = a2;
  *(unsigned char *)(v2 + qword_268D4C508) = a1;
  swift_retain();
  swift_release();
  v30[0] = 0;
  v30[1] = 0xE000000000000000;
  sub_241DAAFD0();
  swift_bridgeObjectRelease();
  strcpy((char *)v30, "MutableArray<");
  HIWORD(v30[1]) = -4864;
  sub_241DA97A0();
  sub_241DA9780();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v26 = v10;
  v25(v13, v10);
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  sub_241DAAA50();
  uint64_t v14 = sub_241DA9C40();
  uint64_t v15 = qword_268D4B2F0;
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  uint64_t v16 = sub_241DAA390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 1, 1, v16);
  swift_retain_n();
  sub_241DA97A0();
  type metadata accessor for HKVisionPrescriptionType(0);
  sub_241D611C8(&qword_268D4C530, type metadata accessor for HKVisionPrescriptionType);
  uint64_t v17 = v27;
  sub_241DA99F0();
  sub_241D62424(0, &qword_268D4B740, (uint64_t (*)(uint64_t))sub_241D2E674, MEMORY[0x263F8E0F8]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_241DB3F80;
  uint64_t v19 = v29;
  *(void *)(v18 + 56) = v29;
  *(void *)(v18 + 64) = sub_241D6151C(&qword_268D4C558, &qword_268D4C550, MEMORY[0x263F43AD8]);
  unint64_t v20 = sub_241D2C600((uint64_t *)(v18 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v28 + 16))(v20, v17, v19);
  sub_241DA95E0();
  if (qword_268D4B320 != -1) {
    swift_once();
  }
  *(void *)(v18 + 96) = sub_241DA9A90();
  *(void *)(v18 + 104) = sub_241D611C8(&qword_268D4C560, MEMORY[0x263F43C88]);
  sub_241D2C600((uint64_t *)(v18 + 72));
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_241DA9A80();
  uint64_t v21 = sub_241DA9E90();
  *(void *)(v18 + 136) = v21;
  uint64_t v22 = sub_241D611C8(&qword_268D4C568, MEMORY[0x263F442A0]);
  *(void *)(v18 + 144) = v22;
  sub_241D2C600((uint64_t *)(v18 + 112));
  sub_241D5E51C(0);
  *(void *)(v18 + 176) = v21;
  *(void *)(v18 + 184) = v22;
  sub_241D2C600((uint64_t *)(v18 + 152));
  sub_241D5E51C(1);
  sub_241D62424(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_241DA9C00();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241DB2C80;
  swift_retain();
  sub_241DA97A0();
  sub_241DA9780();
  v25(v13, v26);
  sub_241DA9BF0();
  sub_241DA9C60();
  swift_release();
  swift_bridgeObjectRelease();
  sub_241D5FBD4();
  sub_241D5F728();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v29);
  return v14;
}

void sub_241D61DE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    type metadata accessor for HKVisionPrescriptionType(255);
    uint64_t v7 = v6;
    uint64_t v8 = sub_241D611C8(&qword_268D4C530, type metadata accessor for HKVisionPrescriptionType);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241D61E80@<X0>(uint64_t a1@<X8>)
{
  return sub_241D5E47C(a1);
}

uint64_t sub_241D61E88(uint64_t a1, uint64_t a2)
{
  return sub_241D5E4CC(a1, a2);
}

uint64_t sub_241D61E90()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241D61EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241D6CAF0(a2, a3);
}

uint64_t sub_241D61ED0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D61EE0(uint64_t a1)
{
  return sub_241D5FD60(a1, *(void *)(v1 + 16), "[%s] prescriptionTypeCancellable completed.");
}

uint64_t sub_241D61F04()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D61F3C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241D61F74(uint64_t *a1)
{
  return sub_241D5FF3C(a1);
}

void sub_241D61F7C()
{
  if (!qword_268D4C570)
  {
    type metadata accessor for HKVisionPrescriptionType(255);
    unint64_t v0 = sub_241DAA5F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C570);
    }
  }
}

uint64_t sub_241D61FE4()
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)(v0 + qword_268D4C500) + 40) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241D62024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241D6CD44(a2, a3);
}

uint64_t sub_241D62058()
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)(v0 + qword_268D4C500) + 48) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241D62098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241D6CAF0(a2, a3);
}

void sub_241D620CC()
{
  if (!qword_268D4C580)
  {
    sub_241D6216C();
    sub_241D611C8(&qword_268D4C590, (void (*)(uint64_t))sub_241D6216C);
    unint64_t v0 = sub_241DAA470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C580);
    }
  }
}

void sub_241D6216C()
{
  if (!qword_268D4C588)
  {
    sub_241D62424(255, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241DAA5F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C588);
    }
  }
}

uint64_t sub_241D62204()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D62214(uint64_t a1)
{
  return sub_241D5FD60(a1, *(void *)(v1 + 16), "[%s] dateIssuedCancellable completed.");
}

uint64_t sub_241D62238()
{
  return sub_241D5F99C();
}

uint64_t sub_241D62240()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241D62278(uint64_t a1)
{
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  sub_241D622C0();
  return v3(a1, a1 + *(int *)(v4 + 48));
}

void sub_241D622C0()
{
  if (!qword_268D4C5A0)
  {
    sub_241D62424(255, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D4C5A0);
    }
  }
}

uint64_t sub_241D62354()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_241D6238C@<X0>(uint64_t a1@<X8>)
{
  return sub_241D5E8D0(a1);
}

uint64_t sub_241D623AC(uint64_t a1, uint64_t a2)
{
  return sub_241D5E9B8(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

void sub_241D623B8()
{
  if (!qword_268D4C5B8)
  {
    sub_241DA9C00();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D4C5B8);
    }
  }
}

void sub_241D62424(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241D62488(uint64_t a1, uint64_t a2)
{
  sub_241D62424(0, &qword_268D4C5C0, (uint64_t (*)(uint64_t))sub_241D623B8, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241D6251C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241D62424(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241D6258C(uint64_t a1, uint64_t a2)
{
  return sub_241D5E708(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_241D62598(uint64_t a1)
{
  return sub_241D5E870(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryViewController()
{
  uint64_t result = qword_268D4C610;
  if (!qword_268D4C610) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D62604()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241D62678(char a1)
{
  if (a1)
  {
    if (qword_268D4B2F0 == -1) {
      return sub_241DA95E0();
    }
    goto LABEL_6;
  }
  if (qword_268D4B2F0 != -1) {
LABEL_6:
  }
    swift_once();
  return sub_241DA95E0();
}

uint64_t sub_241D62778(void *a1, void *a2, uint64_t a3, void *a4, void *a5, char a6)
{
  uint64_t v7 = v6;
  v6[qword_268D4C608] = a6;
  if (!a2)
  {
    *(void *)&v6[qword_268D4C5F8] = 0;
    uint64_t v21 = v6;
    goto LABEL_14;
  }
  uint64_t v13 = v6;
  sub_241D5CDC4(a2, (void *)a3, (uint64_t)a4, a5);
  sub_241D5CEC8(a3, (uint64_t)a4, a5);
  *(void *)&v13[qword_268D4C5F8] = a2;
  id v14 = a2;
  sub_241D5CE1C((id)a3, (uint64_t)a4, a5);

  if (!a3)
  {
LABEL_14:
    unint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v18 = 0;
LABEL_15:
    uint64_t v22 = self;
    sub_241D64C78(v18, v20, v19);
    id v23 = objc_msgSend(v22, sel_defaultManager);
    id v24 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler());
    uint64_t v41 = v20;
    unint64_t v42 = v19;
    id v25 = sub_241D84688(v18, v20, v19, v23);
    *(void *)&v7[qword_268D4C5E8] = v25;
    if (v18) {
      id v26 = v18;
    }
    *(void *)&v7[qword_268D4C600] = v18;
    uint64_t v44 = (uint64_t)a4;
    uint64_t v45 = a5;
    uint64_t v43 = v7;
    if (a2)
    {
      sub_241D5CDC4(a2, (void *)a3, (uint64_t)a4, a5);
      id v27 = v25;
      sub_241D5CEC8(a3, (uint64_t)a4, a5);
      char v28 = a6;
      if (a3)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = a3;
LABEL_22:
        type metadata accessor for VisionPrescriptionManualDataEntryManager();
        uint64_t v31 = (void *)swift_allocObject();
        v31[8] = 0;
        void v31[2] = a1;
        v31[3] = 0;
        v31[4] = a2;
        uint64_t v31[5] = v29;
        type metadata accessor for VisionPrescriptionManualDataEntryContext();
        swift_allocObject();
        id v32 = a2;
        id v33 = v25;
        id v34 = a1;
        uint64_t v35 = sub_241D6E880(a2, v28, v34);

        v31[6] = v35;
        v31[7] = v33;
        *(void *)&v43[qword_268D4C5F0] = v31;
        type metadata accessor for VisionPrescriptionManualDataEntryDataSource();
        swift_allocObject();
        id v36 = v33;
        swift_retain();
        uint64_t v37 = sub_241D98F98(v28, v36, (uint64_t)v31);

        sub_241DA9F10();
        sub_241D650B0(0, (unint64_t *)&qword_268D4B810, (uint64_t (*)(uint64_t))sub_241D64DEC, MEMORY[0x263F8E0F8]);
        uint64_t v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_241DB2C80;
        uint64_t v39 = MEMORY[0x263F44340];
        *(void *)(v38 + 32) = v37;
        *(void *)(v38 + 40) = v39;
        swift_retain();
        sub_241DA9F40();
        uint64_t v40 = sub_241DAA1D0();
        sub_241D5CE70(a2, a3, v44, v45);
        swift_release();

        sub_241D64E40(v18, v41, v42);
        return v40;
      }
    }
    else
    {
      char v28 = a6;
      id v30 = v25;
    }
    uint64_t v29 = MEMORY[0x263F8EE78];
    goto LABEL_22;
  }
  if (!((unint64_t)a3 >> 62))
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_5;
    }
LABEL_13:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_241DAB0A0();
  if (!result) {
    goto LABEL_13;
  }
LABEL_5:
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v17 = (id)MEMORY[0x245639BE0](0, a3);
    goto LABEL_8;
  }
  if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v17 = *(id *)(a3 + 32);
LABEL_8:
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    if (a4[2])
    {
      uint64_t v20 = a4[4];
      unint64_t v19 = a4[5];
      sub_241D41560(v20, v19);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      goto LABEL_15;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_241D62B9C(void *a1)
{
  id v1 = a1;
  sub_241D64E88();
}

void sub_241D62BE4()
{
}

void sub_241D62C40(void *a1)
{
  id v1 = a1;
  sub_241D62C94();
  sub_241D4A338();
  v2.receiver = v1;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryViewController();
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
}

void sub_241D62C94()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLargeTitleDisplayMode_, 2);

  id v2 = objc_msgSend(v0, sel_navigationItem);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  int v3 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setTitle_, v3);

  id v4 = objc_msgSend(v0, sel_presentingViewController);
  if (v4)
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelAndDismiss_);
    id v6 = objc_msgSend(v0, sel_navigationItem);
    objc_msgSend(v6, sel_setLeftBarButtonItem_, v5);
  }
  sub_241D62678(*((unsigned char *)v0 + qword_268D4C608));
  uint64_t v7 = type metadata accessor for VisionPrescriptionManualDataEntryViewController();
  v18[3] = v7;
  v18[0] = v0;
  id v8 = v0;
  uint64_t v9 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t v10 = sub_241D5CF1C(v18, v7);
    uint64_t v11 = *(void *)(v7 - 8);
    MEMORY[0x270FA5388](v10);
    uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v13);
    uint64_t v14 = sub_241DAB140();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v7);
    sub_241D36E44((uint64_t)v18);
  }
  else
  {
    uint64_t v14 = 0;
  }
  id v15 = objc_allocWithZone(MEMORY[0x263F824A8]);
  id v16 = objc_msgSend(v15, sel_initWithTitle_style_target_action_, v9, 0, v14, sel_rightButtonTapped_, v18[0]);

  swift_unknownObjectRelease();
  id v17 = objc_msgSend(v8, sel_navigationItem);
  objc_msgSend(v17, sel_setRightBarButtonItem_, v16);
}

uint64_t sub_241D62FF4(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_241DAAF50();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return sub_241D36E44((uint64_t)&v4);
}

void sub_241D63068()
{
  id v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_241DAA2E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_collectionView);
  if (!v6)
  {
    __break(1u);
    return;
  }
  uint64_t v7 = v6;
  objc_msgSend(v6, sel_endEditing_, 1);

  id v9 = sub_241D7B32C();
  char v10 = v8;
  if (BYTE1(v8) != 4)
  {
    unsigned int v11 = v8 >> 8;
    uint64_t v47 = v9;
    uint64_t v12 = sub_241D6377C(SBYTE1(v8));
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v19 = swift_allocObject();
    *(unsigned char *)(v19 + 16) = v11;
    *(void *)(v19 + 24) = v1;
    id v20 = v1;
    sub_241D64660(v12, v14, v16, v18, (uint64_t)sub_241D650A4, v19);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  if (v9)
  {
    uint64_t v47 = v9;
    if (v8 == 2)
    {
      if (*((unsigned char *)v1 + qword_268D4C608))
      {
        sub_241D641B8(v47);
LABEL_8:
        uint64_t v21 = v47;

        return;
      }
      uint64_t v43 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = v43;
      uint64_t v45 = v47;
      *(void *)(v44 + 24) = v47;
      uint64_t v46 = v45;
      swift_retain();
      sub_241D7BFB0(v46, (void (*)(uint64_t))sub_241D6504C, v44);

      swift_release();
      swift_release();
    }
    else
    {
      sub_241D64F08();
      char v28 = v47;
      uint64_t v29 = sub_241D63CE4(v10 & 1);
      id v33 = sub_241D7B1A0(v29, v30, v31, v32);
      if (qword_268D4B2F0 != -1) {
        swift_once();
      }
      sub_241DA95E0();
      uint64_t v34 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v34;
      *(void *)(v35 + 24) = v28;
      id v36 = v28;
      swift_retain();
      uint64_t v37 = (void *)sub_241DAA950();
      swift_bridgeObjectRelease();
      aBlock[4] = (uint64_t)sub_241D65040;
      aBlock[5] = v35;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_241D344C0;
      aBlock[3] = (uint64_t)&unk_26F5D0880;
      uint64_t v38 = _Block_copy(aBlock);
      swift_release();
      uint64_t v39 = self;
      id v40 = objc_msgSend(v39, sel_actionWithTitle_style_handler_, v37, 0, v38);
      _Block_release(v38);
      swift_release();

      objc_msgSend(v33, sel_addAction_, v40);
      sub_241DA95E0();
      uint64_t v41 = (void *)sub_241DAA950();
      swift_bridgeObjectRelease();
      id v42 = objc_msgSend(v39, sel_actionWithTitle_style_handler_, v41, 0, 0);

      objc_msgSend(v33, sel_addAction_, v42);
      objc_msgSend(v1, sel_presentViewController_animated_completion_, v33, 1, 0);
    }
  }
  else
  {
    sub_241DAA290();
    uint64_t v22 = sub_241DAA2D0();
    os_log_type_t v23 = sub_241DAAC10();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)id v24 = 136315138;
      uint64_t v47 = v24 + 4;
      aBlock[0] = v25;
      uint64_t v26 = sub_241DAB1F0();
      uint64_t aBlock[6] = sub_241D48854(v26, v27, aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v22, v23, "[%s] There should have been an error if there's no prescription to save.", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v25, -1, -1);
      MEMORY[0x24563A5D0](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (qword_268D4B328 != -1) {
      swift_once();
    }
    sub_241D64660(qword_268D4C5C8, unk_268D4C5D0, qword_268D4C5D8, unk_268D4C5E0, 0, 0);
  }
}

uint64_t sub_241D6377C(char a1)
{
  switch(a1)
  {
    case 1:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_10;
      }
      break;
    case 2:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_10;
      }
      break;
    case 3:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_10;
      }
      break;
    default:
      if (qword_268D4B2F0 != -1) {
LABEL_10:
      }
        swift_once();
      break;
  }
  uint64_t v1 = sub_241DA95E0();
  sub_241DA95E0();
  return v1;
}

void sub_241D63AE8(unsigned __int8 a1, uint64_t a2)
{
  int v3 = a1;
  sub_241D650B0(0, (unint64_t *)&qword_268D4CBE0, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  char v10 = (char *)&v17 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v17 - v11;
  if (v3 == 3)
  {
    uint64_t v13 = *(void **)(*(void *)(a2 + qword_268D4C5F0) + 56);
    uint64_t v14 = sub_241DA96C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
    swift_getKeyPath();
    swift_getKeyPath();
    id v15 = v13;
    sub_241DAA6B0();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_241D43B04((uint64_t)v12, (uint64_t)v7);
    id v16 = v15;
    sub_241DAA6C0();
    sub_241D84064((uint64_t)v10);
    sub_241D21A08((uint64_t)v12);
    sub_241D21A08((uint64_t)v10);
  }
}

uint64_t sub_241D63CE4(char a1)
{
  if (a1)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
  }
  else if (qword_268D4B2F0 != -1)
  {
    swift_once();
  }
  uint64_t v1 = sub_241DA95E0();
  sub_241DA95E0();
  return v1;
}

void sub_241D63EB8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x24563A650](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    if (*(unsigned char *)(v5 + qword_268D4C608))
    {
      sub_241D641B8(a3);
    }
    else
    {
      uint64_t v7 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v7;
      *(void *)(v8 + 24) = a3;
      swift_retain();
      sub_241D7BFB0((char *)a3, (void (*)(uint64_t))sub_241D65168, v8);

      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_241D63FC4(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_241DAAF50();
  swift_unknownObjectRelease();
  sub_241D63068();

  return sub_241D36E44((uint64_t)&v4);
}

uint64_t sub_241D64024(char a1)
{
  if (a1 == 2)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_241DA95E0();
    sub_241DA95E0();
  }
  else
  {
    if (qword_268D4B328 != -1) {
      swift_once();
    }
    uint64_t v1 = qword_268D4C5C8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_241D641B8(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = sub_241DAA2E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v2 + qword_268D4C5F8))
  {
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = a1;
    swift_retain();
    id v10 = a1;
    sub_241D7CBE4((void (*)(uint64_t))sub_241D6501C, v9);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_241DAA290();
    uint64_t v12 = sub_241DAA2D0();
    os_log_type_t v13 = sub_241DAAC10();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      uint64_t v16 = sub_241DAB1F0();
      uint64_t v18 = sub_241D48854(v16, v17, &v19);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v12, v13, "[%s] No initial vision prescription found to edit. Skipping editing", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v15, -1, -1);
      MEMORY[0x24563A5D0](v14, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_241D64460(char a1, uint64_t a2, id a3, int a4)
{
  uint64_t v4 = a2 + 16;
  if (a1 == 6)
  {
    if (objc_msgSend(a3, sel_prescriptionType) == (id)1)
    {
      swift_beginAccess();
      uint64_t v7 = MEMORY[0x24563A650](v4);
      if (!v7) {
        goto LABEL_11;
      }
      uint64_t v8 = (void *)v7;
      swift_retain();

      swift_retain();
      swift_release();
      swift_retain();
      swift_release();
      int v9 = 2;
    }
    else
    {
      if (objc_msgSend(a3, sel_prescriptionType) != (id)2) {
        goto LABEL_11;
      }
      swift_beginAccess();
      uint64_t v17 = MEMORY[0x24563A650](v4);
      if (!v17) {
        goto LABEL_11;
      }
      uint64_t v18 = (void *)v17;
      swift_retain();

      swift_retain();
      swift_release();
      swift_retain();
      swift_release();
      int v9 = 3;
    }
    sub_241DA6314(v9, 0, 0, a4);
    swift_release();
LABEL_11:
    swift_beginAccess();
    uint64_t v19 = (void *)MEMORY[0x24563A650](v4);
    if (v19)
    {
      id v20 = v19;
      objc_msgSend(v19, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
    return;
  }
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x24563A650](v4);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    uint64_t v13 = sub_241D64024(a1);
    sub_241D64660(v13, v14, v15, v16, 0, 0);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_241D64660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  sub_241D64F08();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = sub_241D7B1A0(a1, a2, a3, a4);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a5;
  *(void *)(v15 + 24) = a6;
  sub_241D64FB8(a5);
  uint64_t v16 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_241D64F88;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_241D344C0;
  aBlock[3] = &unk_26F5D07E0;
  uint64_t v17 = _Block_copy(aBlock);
  swift_release();
  id v18 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v16, 0, v17, 0xE000000000000000);
  _Block_release(v17);

  objc_msgSend(v14, sel_addAction_, v18);
  objc_msgSend(v7, sel_presentViewController_animated_completion_, v14, 1, 0);
}

void sub_241D648A8(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_view);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_endEditing_, 1);
  }
  else
  {
    __break(1u);
  }
}

void sub_241D6491C()
{
}

void sub_241D6494C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_241D64980()
{
  swift_release();
  id v1 = *(void **)(v0 + qword_268D4C600);
}

id sub_241D649E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_241D64A18(uint64_t a1)
{
  swift_release();
  objc_super v2 = *(void **)(a1 + qword_268D4C600);
}

uint64_t sub_241D64A84()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryViewController();
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionManualDataEntryMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VisionPrescriptionManualDataEntryMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241D64BE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionManualDataEntryMode()
{
  return &type metadata for VisionPrescriptionManualDataEntryMode;
}

unint64_t sub_241D64C24()
{
  unint64_t result = qword_268D4C620;
  if (!qword_268D4C620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C620);
  }
  return result;
}

void *sub_241D64C78(void *result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    id v5 = result;
    return (void *)sub_241D41560(a2, a3);
  }
  return result;
}

uint64_t sub_241D64CC0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_241DA95E0();
  uint64_t v2 = v1;
  uint64_t result = sub_241DA95E0();
  qword_268D4C5C8 = v0;
  unk_268D4C5D0 = v2;
  qword_268D4C5D8 = result;
  unk_268D4C5E0 = v4;
  return result;
}

unint64_t sub_241D64DEC()
{
  unint64_t result = qword_268D4C280;
  if (!qword_268D4C280)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4C280);
  }
  return result;
}

void *sub_241D64E40(void *result, uint64_t a2, unint64_t a3)
{
  if (result)
  {

    return (void *)sub_241D415B8(a2, a3);
  }
  return result;
}

uint64_t sub_241D64E88()
{
  unsigned int v1 = 0x10100u >> (8 * *(unsigned char *)(v0 + qword_268D4C608));
  swift_retain();
  sub_241DA6314(v1, 0, 0, v1);

  return swift_release();
}

unint64_t sub_241D64F08()
{
  unint64_t result = qword_268D4C628;
  if (!qword_268D4C628)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4C628);
  }
  return result;
}

uint64_t sub_241D64F48()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241D64F88()
{
  unsigned int v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_241D64FB8(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_241D64FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241D64FD8()
{
  return swift_release();
}

uint64_t sub_241D64FE0()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_241D6501C(char a1)
{
  sub_241D64460(a1, *(void *)(v1 + 16), *(id *)(v1 + 24), 1);
}

void sub_241D65040(uint64_t a1)
{
  sub_241D63EB8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_241D6504C(char a1)
{
  sub_241D64460(a1, *(void *)(v1 + 16), *(id *)(v1 + 24), 0);
}

uint64_t sub_241D6506C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241D650A4()
{
  sub_241D63AE8(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_241D650B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241D65120()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionManualDataEntryMeasurementField(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VisionPrescriptionManualDataEntryMeasurementField(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241D652C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionManualDataEntryMeasurementField()
{
  return &type metadata for VisionPrescriptionManualDataEntryMeasurementField;
}

unint64_t sub_241D65304()
{
  unint64_t result = qword_268D4C630;
  if (!qword_268D4C630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C630);
  }
  return result;
}

uint64_t sub_241D65358(uint64_t a1, char a2, unsigned __int8 a3)
{
  if ((a2 & 1) == 0 || (uint64_t v5 = sub_241D65840(a1, a3), !v6))
  {
    switch(a3)
    {
      case 1u:
        if (qword_268D4B2F0 != -1) {
          goto LABEL_27;
        }
        goto LABEL_23;
      case 2u:
        if (qword_268D4B2F0 == -1) {
          goto LABEL_23;
        }
        goto LABEL_27;
      case 3u:
        if (qword_268D4B2F0 == -1) {
          goto LABEL_23;
        }
        goto LABEL_27;
      case 4u:
        if (qword_268D4B2F0 == -1) {
          goto LABEL_23;
        }
        goto LABEL_27;
      case 5u:
        if (qword_268D4B2F0 == -1) {
          goto LABEL_23;
        }
        goto LABEL_27;
      case 6u:
        if (qword_268D4B2F0 == -1) {
          goto LABEL_23;
        }
        goto LABEL_27;
      case 7u:
        if (qword_268D4B2F0 == -1) {
          goto LABEL_23;
        }
        goto LABEL_27;
      case 8u:
        if (qword_268D4B2F0 == -1) {
          goto LABEL_23;
        }
LABEL_27:
        swift_once();
LABEL_23:
        sub_241DA95E0();
        sub_241D4A5E8();
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_241DB2C80;
        uint64_t v9 = sub_241D57774(a1);
        uint64_t v11 = v10;
        *(void *)(v8 + 56) = MEMORY[0x263F8D310];
        *(void *)(v8 + 64) = sub_241D2B59C();
        *(void *)(v8 + 32) = v9;
        *(void *)(v8 + 40) = v11;
        uint64_t v7 = sub_241DAA9A0();
        swift_bridgeObjectRelease();
        return v7;
      default:
        if (a1 == 1)
        {
          if (qword_268D4B2F0 == -1) {
            goto LABEL_26;
          }
        }
        else if (qword_268D4B2F0 == -1)
        {
          goto LABEL_26;
        }
        swift_once();
LABEL_26:
        uint64_t v5 = sub_241DA95E0();
        break;
    }
  }
  return v5;
}

uint64_t sub_241D65840(uint64_t a1, unsigned __int8 a2)
{
  int v3 = a2;
  uint64_t v4 = sub_241DAA2E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3 == 4)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
    sub_241D4A5E8();
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_241DB2C80;
    uint64_t v9 = sub_241D57774(a1);
    uint64_t v11 = v10;
    *(void *)(v8 + 56) = MEMORY[0x263F8D310];
    *(void *)(v8 + 64) = sub_241D2B59C();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    uint64_t v12 = sub_241DAA9A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_241DAA290();
    uint64_t v13 = sub_241DAA2D0();
    os_log_type_t v14 = sub_241DAAC10();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v19 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v18 = sub_241D48854(0xD000000000000031, 0x8000000241DB4710, &v19);
      sub_241DAAF10();
      _os_log_impl(&dword_241D1C000, v13, v14, "[%s] Abbreviated title text is only supported for pupillary distance.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v16, -1, -1);
      MEMORY[0x24563A5D0](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  return v12;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryAddImageButtonCell()
{
  uint64_t result = qword_268D4C638;
  if (!qword_268D4C638) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D65B88()
{
  return swift_initClassMetadata2();
}

void *sub_241D65BC8()
{
  uint64_t v0 = sub_241DAAE90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241DAAE50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241DAAEB0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  os_log_type_t v14 = (char *)&v18 - v13;
  sub_241DAAEA0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F821A0], v4);
  sub_241DAAE60();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F821F0], v0);
  sub_241DAAE40();
  sub_241DAAE70();
  id v15 = objc_msgSend(self, sel_configurationWithTextStyle_, *MEMORY[0x263F83570]);
  sub_241DAAE30();
  sub_241D3D47C();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t v16 = (void *)sub_241DAAEC0();
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v16;
}

id sub_241D65E9C(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryAddImageButtonCell();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_241D65EE8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryAddImageButtonCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241D65F20()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryAddImageButtonCell();
}

uint64_t type metadata accessor for VisionPrescriptionSingleFieldCell()
{
  uint64_t result = qword_268D4C668;
  if (!qword_268D4C668) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D65F74()
{
  return swift_initClassMetadata2();
}

id sub_241D65FD8(double a1, double a2, double a3, double a4)
{
  objc_super v5 = v4;
  uint64_t v10 = &v4[qword_268D4C648];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  uint64_t v11 = qword_268D4C650;
  id v12 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v13 = v5;
  id v14 = objc_msgSend(v12, sel_init);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  id v15 = (void *)sub_241DAADA0();
  objc_msgSend(v14, sel_setFont_, v15);

  objc_msgSend(v14, sel_setTextAlignment_, 4);
  objc_msgSend(v14, sel_setNumberOfLines_, 0);
  objc_msgSend(v14, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(void *)&v5[v11] = v14;
  uint64_t v16 = qword_268D4C658;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v18 = (void *)sub_241DAADA0();
  objc_msgSend(v17, sel_setFont_, v18);

  objc_msgSend(v17, sel_setTextAlignment_, 4);
  objc_msgSend(v17, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v17, sel_setNumberOfLines_, 0);
  *(void *)&v13[v16] = v17;
  *(void *)&v13[qword_268D4C660] = 0;

  v21.receiver = v13;
  v21.super_class = (Class)type metadata accessor for VisionPrescriptionSingleFieldCell();
  id v19 = objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  sub_241D6628C();

  return v19;
}

id sub_241D66240(double a1, double a2, double a3, double a4)
{
  return sub_241D65FD8(a1, a2, a3, a4);
}

void sub_241D66264(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_241D66C00();
}

void sub_241D6628C()
{
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  id v1 = objc_msgSend(v0, sel_contentView);
  objc_super v2 = *(void **)&v0[qword_268D4C650];
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = objc_msgSend(v0, sel_contentView);
  uint64_t v4 = *(void **)&v0[qword_268D4C658];
  objc_msgSend(v3, sel_addSubview_, v4);

  id v33 = self;
  sub_241D2B5F0();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_241DB4810;
  id v6 = objc_msgSend(v2, sel_topAnchor);
  id v7 = objc_msgSend(v0, sel_contentView);
  id v8 = objc_msgSend(v7, sel_topAnchor);

  id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, 9.0);
  *(void *)(v5 + 32) = v9;
  id v10 = objc_msgSend(v2, sel_leadingAnchor);
  id v11 = objc_msgSend(v0, sel_contentView);
  id v12 = objc_msgSend(v11, (SEL)&off_2650F7238 + 2);

  id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v12, 16.0);
  *(void *)(v5 + 40) = v13;
  id v14 = objc_msgSend(v0, sel_contentView);
  id v15 = objc_msgSend(v14, sel_trailingAnchor);

  id v16 = objc_msgSend(v2, byte_2650F7494);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v16, 16.0);

  *(void *)(v5 + 48) = v17;
  id v18 = objc_msgSend(v4, sel_topAnchor);
  id v19 = objc_msgSend(v2, sel_bottomAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 7.0);

  *(void *)(v5 + 56) = v20;
  id v21 = objc_msgSend(v0, sel_contentView);
  id v22 = objc_msgSend(v21, sel_bottomAnchor);

  id v23 = objc_msgSend(v4, sel_bottomAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 20.0);

  *(void *)(v5 + 64) = v24;
  id v25 = objc_msgSend(v4, sel_leadingAnchor);
  id v26 = objc_msgSend(v0, sel_contentView);
  id v27 = objc_msgSend(v26, sel_leadingAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, 16.0);
  *(void *)(v5 + 72) = v28;
  id v29 = objc_msgSend(v0, sel_contentView);
  id v30 = objc_msgSend(v29, sel_trailingAnchor);

  id v31 = objc_msgSend(v4, sel_trailingAnchor);
  id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v31, 16.0);

  *(void *)(v5 + 80) = v32;
  sub_241DAAB10();
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
  id v34 = (id)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_activateConstraints_, v34);
}

void sub_241D66728()
{
  uint64_t v1 = v0 + qword_268D4C648;
  swift_beginAccess();
  sub_241D2AED8(v1, (uint64_t)v10);
  if (v11)
  {
    sub_241D2E674();
    if (swift_dynamicCast())
    {
      objc_super v2 = *(void **)(v0 + qword_268D4C650);
      id v3 = (void *)sub_241DAA950();
      objc_msgSend(v2, sel_setText_, v3);

      if (v9)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = *(void **)(v0 + qword_268D4C658);
        uint64_t v5 = (void *)sub_241DAA950();
        swift_bridgeObjectRelease();
        objc_msgSend(v4, sel_setText_, v5);

        id v6 = objc_msgSend(self, sel_labelColor);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = *(void **)(v0 + qword_268D4C658);
        if (qword_268D4B2F0 != -1) {
          swift_once();
        }
        sub_241DA95E0();
        id v7 = (void *)sub_241DAA950();
        swift_bridgeObjectRelease();
        objc_msgSend(v4, sel_setText_, v7, 0xE000000000000000);

        id v6 = objc_msgSend(self, sel_tertiaryLabelColor);
      }
      id v8 = v6;
      objc_msgSend(v4, sel_setTextColor_, v8);
    }
  }
  else
  {
    sub_241D2AE50((uint64_t)v10);
  }
}

void sub_241D6699C()
{
  sub_241D2AE50(v0 + qword_268D4C648);

  uint64_t v1 = *(void **)(v0 + qword_268D4C660);
}

id sub_241D669FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionSingleFieldCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_241D66A34(uint64_t a1)
{
  sub_241D2AE50(a1 + qword_268D4C648);

  objc_super v2 = *(void **)(a1 + qword_268D4C660);
}

uint64_t sub_241D66AA0()
{
  return type metadata accessor for VisionPrescriptionSingleFieldCell();
}

uint64_t sub_241D66AA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268D4C648;
  swift_beginAccess();
  return sub_241D2AED8(v3, a1);
}

uint64_t sub_241D66AFC(uint64_t a1)
{
  uint64_t v3 = v1 + qword_268D4C648;
  swift_beginAccess();
  sub_241D2ADC0(a1, v3);
  swift_endAccess();
  sub_241D66728();
  return sub_241D2AE50(a1);
}

void (*sub_241D66B6C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241D66BCC;
}

void sub_241D66BCC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_241D66728();
  }
}

void sub_241D66C00()
{
  uint64_t v1 = v0;
  objc_super v2 = &v0[qword_268D4C648];
  *(_OWORD *)objc_super v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((void *)v2 + 4) = 0;
  uint64_t v3 = qword_268D4C650;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  uint64_t v5 = (void *)sub_241DAADA0();
  objc_msgSend(v4, sel_setFont_, v5);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(void *)&v0[v3] = v4;
  uint64_t v6 = qword_268D4C658;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v8 = (void *)sub_241DAADA0();
  objc_msgSend(v7, sel_setFont_, v8);

  objc_msgSend(v7, sel_setTextAlignment_, 4);
  objc_msgSend(v7, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v7, sel_setNumberOfLines_, 0);
  *(void *)&v1[v6] = v7;
  *(void *)&v1[qword_268D4C660] = 0;

  sub_241DAB080();
  __break(1u);
}

uint64_t sub_241D66E20@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_241DA97B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
  }
  else if (qword_268D4B2F0 != -1)
  {
    swift_once();
  }
  uint64_t v10 = sub_241DA95E0();
  uint64_t v23 = v11;
  uint64_t v24 = v10;
  if (a2)
  {
    id v12 = a2;
    a2 = (void *)sub_241D2A7A0(a1 & 1);
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v14 = 0;
  }
  type metadata accessor for VisionPrescriptionSingleFieldCell();
  sub_241D67098();
  uint64_t v15 = sub_241DA9A30();
  uint64_t v17 = v16;
  swift_bridgeObjectRetain();
  sub_241DA97A0();
  uint64_t v18 = sub_241DA9780();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v15;
  a3[1] = v17;
  a3[2] = v18;
  a3[3] = v20;
  uint64_t v22 = v23;
  a3[4] = v24;
  a3[5] = v22;
  a3[6] = (uint64_t)a2;
  a3[7] = v14;
  return result;
}

unint64_t sub_241D67098()
{
  unint64_t result = qword_268D4C678;
  if (!qword_268D4C678)
  {
    type metadata accessor for VisionPrescriptionSingleFieldCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C678);
  }
  return result;
}

uint64_t destroy for VisionPrescriptionSingleFieldItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for VisionPrescriptionSingleFieldItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for VisionPrescriptionSingleFieldItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for VisionPrescriptionSingleFieldItem(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for VisionPrescriptionSingleFieldItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionSingleFieldItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionSingleFieldItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionSingleFieldItem()
{
  return &type metadata for VisionPrescriptionSingleFieldItem;
}

uint64_t sub_241D67378()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C680 = result;
  *(void *)algn_268D4C688 = v1;
  return result;
}

uint64_t sub_241D67428()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C690 = result;
  *(void *)algn_268D4C698 = v1;
  return result;
}

uint64_t sub_241D674D8()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C6A0 = result;
  *(void *)algn_268D4C6A8 = v1;
  return result;
}

uint64_t sub_241D67588()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C6B0 = result;
  *(void *)algn_268D4C6B8 = v1;
  return result;
}

uint64_t sub_241D67640()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C6C0 = result;
  *(void *)algn_268D4C6C8 = v1;
  return result;
}

uint64_t sub_241D676F0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C6D0 = result;
  *(void *)algn_268D4C6D8 = v1;
  return result;
}

uint64_t sub_241D677A0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C6E0 = result;
  *(void *)algn_268D4C6E8 = v1;
  return result;
}

uint64_t sub_241D67850()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C6F0 = result;
  *(void *)algn_268D4C6F8 = v1;
  return result;
}

uint64_t sub_241D67900()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C700 = result;
  *(void *)algn_268D4C708 = v1;
  return result;
}

uint64_t sub_241D679B0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C710 = result;
  *(void *)algn_268D4C718 = v1;
  return result;
}

uint64_t sub_241D67A60()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C720 = result;
  *(void *)algn_268D4C728 = v1;
  return result;
}

uint64_t sub_241D67B10()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C730 = result;
  *(void *)algn_268D4C738 = v1;
  return result;
}

uint64_t sub_241D67BC0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C740 = result;
  *(void *)algn_268D4C748 = v1;
  return result;
}

uint64_t sub_241D67C70()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C750 = result;
  *(void *)algn_268D4C758 = v1;
  return result;
}

uint64_t sub_241D67D20()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C760 = result;
  *(void *)algn_268D4C768 = v1;
  return result;
}

uint64_t sub_241D67DD0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C770 = result;
  *(void *)algn_268D4C778 = v1;
  return result;
}

uint64_t sub_241D67E80()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C780 = result;
  *(void *)algn_268D4C788 = v1;
  return result;
}

uint64_t sub_241D67F30()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C790 = result;
  *(void *)algn_268D4C798 = v1;
  return result;
}

uint64_t sub_241D67FE0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C7A0 = result;
  *(void *)algn_268D4C7A8 = v1;
  return result;
}

uint64_t sub_241D68090()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C7B0 = result;
  *(void *)algn_268D4C7B8 = v1;
  return result;
}

uint64_t sub_241D68140()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C7C0 = result;
  *(void *)algn_268D4C7C8 = v1;
  return result;
}

uint64_t sub_241D681F0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C7D0 = result;
  *(void *)algn_268D4C7D8 = v1;
  return result;
}

uint64_t sub_241D682A0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C7E0 = result;
  *(void *)algn_268D4C7E8 = v1;
  return result;
}

uint64_t sub_241D68350()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C7F0 = result;
  *(void *)algn_268D4C7F8 = v1;
  return result;
}

uint64_t sub_241D68400()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C800 = result;
  *(void *)algn_268D4C808 = v1;
  return result;
}

uint64_t sub_241D684B0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C810 = result;
  *(void *)algn_268D4C818 = v1;
  return result;
}

uint64_t sub_241D68560()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C820 = result;
  *(void *)algn_268D4C828 = v1;
  return result;
}

uint64_t sub_241D68610()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C830 = result;
  *(void *)algn_268D4C838 = v1;
  return result;
}

uint64_t sub_241D686C0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C840 = result;
  *(void *)algn_268D4C848 = v1;
  return result;
}

uint64_t sub_241D68770()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C850 = result;
  *(void *)algn_268D4C858 = v1;
  return result;
}

uint64_t sub_241D68820()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C860 = result;
  *(void *)algn_268D4C868 = v1;
  return result;
}

uint64_t sub_241D688D0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C870 = result;
  *(void *)algn_268D4C878 = v1;
  return result;
}

uint64_t sub_241D68980()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C880 = result;
  *(void *)algn_268D4C888 = v1;
  return result;
}

uint64_t sub_241D68A30()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C890 = result;
  *(void *)algn_268D4C898 = v1;
  return result;
}

uint64_t sub_241D68AE0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C8A0 = result;
  *(void *)algn_268D4C8A8 = v1;
  return result;
}

uint64_t sub_241D68B90()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C8B0 = result;
  *(void *)algn_268D4C8B8 = v1;
  return result;
}

uint64_t sub_241D68C40()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C8C0 = result;
  *(void *)algn_268D4C8C8 = v1;
  return result;
}

uint64_t sub_241D68CF0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C8D0 = result;
  *(void *)algn_268D4C8D8 = v1;
  return result;
}

uint64_t sub_241D68DA0()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C8E0 = result;
  *(void *)algn_268D4C8E8 = v1;
  return result;
}

uint64_t sub_241D68E50()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C8F0 = result;
  *(void *)algn_268D4C8F8 = v1;
  return result;
}

uint64_t sub_241D68F00(void *a1, char a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6)
{
  id v12 = sub_241D1FBA0(a2);
  if (v12 && (uint64_t v13 = v12, v14 = objc_msgSend(v12, sel_containsQuantity_, a1), v13, v14))
  {
    LOBYTE(v15) = 0;
  }
  else
  {
    id v16 = sub_241D1F440(a2);
    uint64_t v15 = v16;
    if (v16)
    {
      unsigned int v17 = objc_msgSend(v16, sel_containsQuantity_, a1);

      if (v17) {
        LOBYTE(v15) = 1;
      }
      else {
        LOBYTE(v15) = 3;
      }
    }
  }
  uint64_t v18 = sub_241D69440(a2, a1, a3, (char)v15);
  sub_241D6B1F4((char)v15, v18, v19, a4, a5, a6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241D69008(void *a1, char a2, uint64_t a3, void *a4, uint64_t a5, void *a6, void (*a7)(uint64_t), uint64_t a8)
{
  id v15 = sub_241D1FBA0(a2);
  if (!v15
    || (id v16 = v15, v17 = objc_msgSend(v15, sel_containsQuantity_, a1),
                   v16,
                   (v17 & 1) == 0))
  {
    id v18 = sub_241D1F440(a2);
    if (v18)
    {
      uint64_t v19 = v18;
      unsigned int v20 = objc_msgSend(v18, sel_containsQuantity_, a1);

      if (v20) {
        char v21 = 1;
      }
      else {
        char v21 = 3;
      }
      goto LABEL_10;
    }
  }
  char v21 = 0;
  if (!a4)
  {
LABEL_10:
    uint64_t v22 = a6;
    goto LABEL_11;
  }
  uint64_t v22 = a6;
  if (a5) {
    char v21 = 2 * (objc_msgSend(a4, sel_compare_) == (id)-1);
  }
LABEL_11:
  uint64_t v23 = sub_241D69440(a2, a1, a3, v21);
  sub_241D6B1F4(v21, v23, v24, v22, a7, a8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241D69154(void *a1, char a2, void *a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10 = sub_241DAA2E0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 - 11) > 1u)
  {
    sub_241DAA2B0();
    id v18 = sub_241DAA2D0();
    os_log_type_t v19 = sub_241DAAC10();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v27 = v21;
      *(_DWORD *)uint64_t v20 = 136315394;
      uint64_t v22 = sub_241DAB1F0();
      uint64_t v26 = sub_241D48854(v22, v23, &v27);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      LOBYTE(v26) = a2;
      uint64_t v24 = sub_241DAA9B0();
      uint64_t v26 = sub_241D48854(v24, v25, &v27);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v18, v19, "[%s] Cannot validate non-pupillary distance field %s against pupillary distance", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v21, -1, -1);
      MEMORY[0x24563A5D0](v20, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    char v14 = sub_241D3C194((uint64_t)a1, a2);
    id v15 = sub_241D69D58(a2, a1, v14);
    sub_241D6B1F4(v14, (uint64_t)v15, v16, a3, a4, a5);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_241D69440(char a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_241DAA2E0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = sub_241D3A9E4(a1);
  if (v14)
  {
    id v15 = v14;
    sub_241D28BF4(0, (unint64_t *)&qword_268D4CC20);
    objc_msgSend(a2, sel_doubleValueForUnit_, v15);
    uint64_t v16 = (void *)sub_241DAADE0();
    id v17 = objc_msgSend(self, sel_localizedStringFromNumber_numberStyle_, v16, 1);
    uint64_t v70 = sub_241DAA990();
    uint64_t v19 = v18;

    switch(a4)
    {
      case 1:
        uint64_t v20 = *(void *)(v5 + 24);
        swift_retain();
        uint64_t v21 = sub_241D28E64(a1);
        sub_241DA6314(9, v21, v22, 0x10100u >> (8 * *(unsigned char *)(v20 + 64)));
        swift_release();
        swift_bridgeObjectRelease();
        if (qword_268D4B360 != -1) {
          swift_once();
        }
        uint64_t v68 = *(void *)algn_268D4C6E8;
        uint64_t v69 = qword_268D4C6E0;
        sub_241D4A5E8();
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_241DB4380;
        if (a3 == 2)
        {
          if (qword_268D4B2F0 == -1) {
            goto LABEL_21;
          }
        }
        else
        {
          if (a3 != 1)
          {
            uint64_t v56 = 0;
            unint64_t v58 = 0xE000000000000000;
            goto LABEL_23;
          }
          if (qword_268D4B2F0 == -1)
          {
LABEL_21:
            uint64_t v56 = sub_241DA95E0();
            unint64_t v58 = v57;
LABEL_23:
            uint64_t v59 = MEMORY[0x263F8D310];
            *(void *)(v23 + 56) = MEMORY[0x263F8D310];
            unint64_t v60 = sub_241D2B59C();
            *(void *)(v23 + 64) = v60;
            *(void *)(v23 + 32) = v56;
            *(void *)(v23 + 40) = v58;
            v71[0] = sub_241D3B370(a1);
            v71[1] = v61;
            sub_241DAAA50();
            if (qword_268D4B2F0 != -1) {
              swift_once();
            }
            uint64_t v62 = sub_241DA95E0();
            uint64_t v64 = v63;
            swift_bridgeObjectRelease();
            *(void *)(v23 + 96) = v59;
            *(void *)(v23 + 104) = v60;
            *(void *)(v23 + 72) = v62;
            *(void *)(v23 + 80) = v64;
            *(void *)(v23 + 136) = v59;
            *(void *)(v23 + 144) = v60;
            *(void *)(v23 + 112) = v70;
            *(void *)(v23 + 120) = v19;
            uint64_t v35 = sub_241DAA960();

            goto LABEL_26;
          }
        }
        swift_once();
        goto LABEL_21;
      case 2:
        swift_bridgeObjectRelease();
        uint64_t v32 = *(void *)(v5 + 24);
        swift_retain();
        uint64_t v33 = sub_241D28E64(a1);
        sub_241DA6314(11, v33, v34, 0x10100u >> (8 * *(unsigned char *)(v32 + 64)));
        swift_release();
        swift_bridgeObjectRelease();
        if (qword_268D4B378 != -1) {
          swift_once();
        }
        uint64_t v35 = qword_268D4C710;
        swift_bridgeObjectRetain();

        return v35;
      case 3:
        uint64_t v36 = *(void *)(v5 + 24);
        swift_retain();
        uint64_t v37 = sub_241D28E64(a1);
        sub_241DA6314(10, v37, v38, 0x10100u >> (8 * *(unsigned char *)(v36 + 64)));
        swift_release();
        swift_bridgeObjectRelease();
        id v39 = sub_241D1F440(a1);
        if (!v39) {
          goto LABEL_19;
        }
        id v40 = v39;
        id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
        objc_msgSend(v41, sel_setMinimumFractionDigits_, 0);
        id v42 = objc_msgSend(v40, sel_minimum);
        objc_msgSend(v42, (SEL)&selRef_systemGray5Color + 3, v15);

        uint64_t v43 = (void *)sub_241DAAB50();
        id v44 = objc_msgSend(v41, sel_stringFromNumber_, v43);

        if (!v44) {
          goto LABEL_28;
        }
        uint64_t v68 = sub_241DAA990();
        uint64_t v69 = v45;

        id v46 = objc_msgSend(v40, sel_maximum);
        objc_msgSend(v46, (SEL)&selRef_systemGray5Color + 3, v15);

        uint64_t v47 = (void *)sub_241DAAB50();
        id v48 = objc_msgSend(v41, sel_stringFromNumber_, v47);

        if (v48)
        {
          uint64_t v49 = sub_241DAA990();
          uint64_t v67 = v50;

          sub_241D6A8FC(a1, a3);
          sub_241D4A5E8();
          uint64_t v51 = swift_allocObject();
          *(_OWORD *)(v51 + 16) = xmmword_241DB4380;
          uint64_t v52 = MEMORY[0x263F8D310];
          *(void *)(v51 + 56) = MEMORY[0x263F8D310];
          unint64_t v53 = sub_241D2B59C();
          *(void *)(v51 + 32) = v70;
          *(void *)(v51 + 40) = v19;
          *(void *)(v51 + 96) = v52;
          *(void *)(v51 + 104) = v53;
          uint64_t v54 = v68;
          *(void *)(v51 + 64) = v53;
          *(void *)(v51 + 72) = v54;
          *(void *)(v51 + 80) = v69;
          *(void *)(v51 + 136) = v52;
          *(void *)(v51 + 144) = v53;
          uint64_t v55 = v67;
          *(void *)(v51 + 112) = v49;
          *(void *)(v51 + 120) = v55;
          swift_bridgeObjectRetain();
          uint64_t v35 = sub_241DAA960();

          swift_bridgeObjectRelease();
LABEL_26:
          swift_bridgeObjectRelease();
          return v35;
        }
        swift_bridgeObjectRelease();
LABEL_28:
        swift_bridgeObjectRelease();

        return 0;
      default:
LABEL_19:

        swift_bridgeObjectRelease();
        return 0;
    }
  }
  sub_241DAA2B0();
  uint64_t v24 = sub_241DAA2D0();
  os_log_type_t v25 = sub_241DAAC10();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    v71[0] = v70;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v27 = sub_241DAB1F0();
    uint64_t v72 = sub_241D48854(v27, v28, v71);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    LOBYTE(v72) = a1;
    uint64_t v29 = sub_241DAA9B0();
    uint64_t v72 = sub_241D48854(v29, v30, v71);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v24, v25, "[%s] Cannot find prescriptionField's unit to format quantity value string with %s", (uint8_t *)v26, 0x16u);
    uint64_t v31 = v70;
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v31, -1, -1);
    MEMORY[0x24563A5D0](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return 0;
}

id sub_241D69D58(char a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_241DAA2E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v14 = (char *)v80 - v13;
  if ((a1 - 11) > 1u)
  {
    sub_241DAA2B0();
    uint64_t v22 = sub_241DAA2D0();
    os_log_type_t v23 = sub_241DAAC10();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      unint64_t v87 = v25;
      *(_DWORD *)uint64_t v24 = 136315394;
      uint64_t v26 = sub_241DAB1F0();
      uint64_t v89 = sub_241D48854(v26, v27, (uint64_t *)&v87);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      LOBYTE(v89) = a1;
      uint64_t v28 = sub_241DAA9B0();
      uint64_t v89 = sub_241D48854(v28, v29, (uint64_t *)&v87);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v22, v23, "[%s] field %s is not a pupillary distance field. Skipping to create alert message", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v25, -1, -1);
      MEMORY[0x24563A5D0](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return 0;
  }
  id v15 = sub_241D3A9E4(a1);
  if (!v15)
  {
    sub_241DAA2B0();
    unint64_t v30 = sub_241DAA2D0();
    os_log_type_t v31 = sub_241DAAC10();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      unint64_t v87 = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v34 = sub_241DAB1F0();
      uint64_t v89 = sub_241D48854(v34, v35, (uint64_t *)&v87);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      LOBYTE(v89) = a1;
      uint64_t v36 = sub_241DAA9B0();
      uint64_t v89 = sub_241D48854(v36, v37, (uint64_t *)&v87);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v30, v31, "[%s] Cannot find prescriptionField's unit to format quantity value string with %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v33, -1, -1);
      MEMORY[0x24563A5D0](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    return 0;
  }
  uint64_t v16 = v15;
  sub_241D28BF4(0, (unint64_t *)&qword_268D4CC20);
  objc_msgSend(a2, sel_doubleValueForUnit_, v16);
  id v17 = (void *)sub_241DAADE0();
  id v18 = objc_msgSend(self, sel_localizedStringFromNumber_numberStyle_, v17, 1);
  uint64_t v19 = sub_241DAA990();
  uint64_t v21 = v20;

  switch(a3)
  {
    case 1:
      uint64_t v40 = *(void *)(v4 + 24);
      swift_retain();
      uint64_t v41 = sub_241D28E64(a1);
      sub_241DA6314(9, v41, v42, 0x10100u >> (8 * *(unsigned char *)(v40 + 64)));
      swift_release();
      swift_bridgeObjectRelease();
      if (qword_268D4B368 != -1) {
        swift_once();
      }
      sub_241D4A5E8();
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_241DB2C60;
      unint64_t v87 = sub_241D3B370(a1);
      unint64_t v88 = v44;
      sub_241DAAA50();
      if (qword_268D4B2F0 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_241DA95E0();
      uint64_t v47 = v46;
      swift_bridgeObjectRelease();
      uint64_t v48 = MEMORY[0x263F8D310];
      *(void *)(v43 + 56) = MEMORY[0x263F8D310];
      unint64_t v49 = sub_241D2B59C();
      *(void *)(v43 + 32) = v45;
      *(void *)(v43 + 40) = v47;
      *(void *)(v43 + 96) = v48;
      *(void *)(v43 + 104) = v49;
      *(void *)(v43 + 64) = v49;
      *(void *)(v43 + 72) = v19;
      *(void *)(v43 + 80) = v21;
      id v38 = (id)sub_241DAA960();

      swift_bridgeObjectRelease();
      return v38;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v50 = *(void *)(v4 + 24);
      swift_retain();
      uint64_t v51 = sub_241D28E64(a1);
      sub_241DA6314(11, v51, v52, 0x10100u >> (8 * *(unsigned char *)(v50 + 64)));
      swift_release();
      swift_bridgeObjectRelease();
      if (qword_268D4B378 != -1) {
        swift_once();
      }
      id v38 = (id)qword_268D4C710;
      swift_bridgeObjectRetain();

      return v38;
    case 3:
      uint64_t v53 = *(void *)(v4 + 24);
      swift_retain();
      uint64_t v54 = sub_241D28E64(a1);
      sub_241DA6314(10, v54, v55, 0x10100u >> (8 * *(unsigned char *)(v53 + 64)));
      swift_release();
      swift_bridgeObjectRelease();
      id v38 = sub_241D1F440(a1);
      if (!v38)
      {

        swift_bridgeObjectRelease();
        return v38;
      }
      id v56 = sub_241D2030C();

      id v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
      objc_msgSend(v57, sel_setMinimumFractionDigits_, 0);
      id v58 = objc_msgSend(v56, sel_minimum);
      objc_msgSend(v58, (SEL)&selRef_systemGray5Color + 3, v16);

      uint64_t v59 = (void *)sub_241DAAB50();
      id v38 = objc_msgSend(v57, sel_stringFromNumber_, v59);

      if (!v38) {
        goto LABEL_31;
      }
      uint64_t v85 = sub_241DAA990();
      uint64_t v86 = v60;

      id v61 = objc_msgSend(v56, sel_maximum);
      objc_msgSend(v61, (SEL)&selRef_systemGray5Color + 3, v16);

      uint64_t v62 = (void *)sub_241DAAB50();
      id v38 = objc_msgSend(v57, sel_stringFromNumber_, v62);

      if (v38)
      {
        uint64_t v63 = sub_241DAA990();
        uint64_t v81 = v64;
        uint64_t v82 = v63;

        if (qword_268D4B370 != -1) {
          swift_once();
        }
        id v83 = v57;
        id v84 = v56;
        v80[1] = *(void *)algn_268D4C708;
        v80[2] = qword_268D4C700;
        sub_241D4A5E8();
        uint64_t v65 = swift_allocObject();
        *(_OWORD *)(v65 + 16) = xmmword_241DB4940;
        unint64_t v87 = sub_241D3B370(a1);
        unint64_t v88 = v66;
        sub_241DAAA50();
        if (qword_268D4B2F0 != -1) {
          swift_once();
        }
        uint64_t v67 = sub_241DA95E0();
        uint64_t v69 = v68;
        swift_bridgeObjectRelease();
        uint64_t v70 = MEMORY[0x263F8D310];
        *(void *)(v65 + 56) = MEMORY[0x263F8D310];
        unint64_t v71 = sub_241D2B59C();
        *(void *)(v65 + 32) = v67;
        *(void *)(v65 + 40) = v69;
        *(void *)(v65 + 96) = v70;
        *(void *)(v65 + 104) = v71;
        *(void *)(v65 + 64) = v71;
        *(void *)(v65 + 72) = v19;
        *(void *)(v65 + 80) = v21;
        unint64_t v87 = 0;
        unint64_t v88 = 0xE000000000000000;
        sub_241DAAFD0();
        unint64_t v72 = sub_241D3B370(a1);
        unint64_t v74 = v73;
        swift_bridgeObjectRelease();
        unint64_t v87 = v72;
        unint64_t v88 = v74;
        sub_241DAAA50();
        uint64_t v75 = sub_241DA95E0();
        uint64_t v77 = v76;
        swift_bridgeObjectRelease();
        *(void *)(v65 + 136) = v70;
        *(void *)(v65 + 144) = v71;
        *(void *)(v65 + 112) = v75;
        *(void *)(v65 + 120) = v77;
        *(void *)(v65 + 176) = v70;
        *(void *)(v65 + 184) = v71;
        uint64_t v78 = v86;
        *(void *)(v65 + 152) = v85;
        *(void *)(v65 + 160) = v78;
        *(void *)(v65 + 216) = v70;
        *(void *)(v65 + 224) = v71;
        uint64_t v79 = v81;
        *(void *)(v65 + 192) = v82;
        *(void *)(v65 + 200) = v79;
        id v38 = (id)sub_241DAA960();

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_31:
        swift_bridgeObjectRelease();
      }
      break;
    default:

      swift_bridgeObjectRelease();
      return 0;
  }
  return v38;
}

uint64_t sub_241D6A898()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionValidationHandler()
{
  return self;
}

uint64_t sub_241D6A8FC(char a1, uint64_t a2)
{
  sub_241D6B18C();
  switch(a1)
  {
    case 1:
      if (a2 == 2)
      {
        if (qword_268D4B398 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C750;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B390 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C740;
      return *v4;
    case 2:
      if (a2 == 2)
      {
        if (qword_268D4B3A8 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C770;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B3A0 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C760;
      return *v4;
    case 3:
      if (a2 == 2)
      {
        if (qword_268D4B3B8 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C790;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B3B0 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C780;
      return *v4;
    case 4:
      if (a2 == 2)
      {
        if (qword_268D4B3C8 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C7B0;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B3C0 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C7A0;
      return *v4;
    case 5:
      if (a2 == 2)
      {
        if (qword_268D4B3D8 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C7D0;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B3D0 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C7C0;
      return *v4;
    case 6:
      if (a2 == 2)
      {
        if (qword_268D4B3E8 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C7F0;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B3E0 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C7E0;
      return *v4;
    case 7:
      if (a2 == 2)
      {
        if (qword_268D4B3F8 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C810;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B3F0 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C800;
      return *v4;
    case 8:
      if (a2 == 2)
      {
        if (qword_268D4B408 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C830;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B400 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C820;
      return *v4;
    case 9:
      if (a2 == 2)
      {
        if (qword_268D4B418 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C850;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B410 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C840;
      return *v4;
    case 10:
      if (a2 == 2)
      {
        if (qword_268D4B428 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C870;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B420 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C860;
      return *v4;
    case 11:
      if (a2 == 2)
      {
        if (qword_268D4B438 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C890;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B430 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C880;
      return *v4;
    case 12:
      if (a2 == 2)
      {
        if (qword_268D4B448 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C8B0;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B440 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C8A0;
      return *v4;
    case 13:
      if (a2 == 2)
      {
        if (qword_268D4B458 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C8D0;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B450 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C8C0;
      return *v4;
    case 14:
      if (a2 == 2)
      {
        if (qword_268D4B468 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C8F0;
        return *v4;
      }
      if (a2 != 1) {
        goto LABEL_123;
      }
      if (qword_268D4B460 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_268D4C8E0;
      break;
    default:
      if (a2 == 2)
      {
        if (qword_268D4B388 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C730;
      }
      else
      {
        if (a2 != 1)
        {
LABEL_123:
          sub_241DAB150();
          __break(1u);
          JUMPOUT(0x241D6B150);
        }
        if (qword_268D4B380 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_268D4C720;
      }
      break;
  }
  return *v4;
}

void sub_241D6B18C()
{
  if (!qword_268D4C900)
  {
    type metadata accessor for HKVisionEye(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D4C900);
    }
  }
}

void sub_241D6B1F4(char a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6)
{
  switch(a1)
  {
    case 1:
      if (qword_268D4B350 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_268D4C6C0;
      uint64_t v12 = *(void *)algn_268D4C6C8;
      sub_241D28BF4(0, (unint64_t *)&qword_268D4C628);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v13 = sub_241D7B1A0(v11, v12, a2, a3);
      if (qword_268D4B330 != -1) {
        swift_once();
      }
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = a5;
      *(void *)(v14 + 24) = a6;
      swift_bridgeObjectRetain();
      swift_retain();
      id v15 = (void *)sub_241DAA950();
      swift_bridgeObjectRelease();
      uint64_t v33 = sub_241D6B85C;
      uint64_t v34 = v14;
      uint64_t v29 = MEMORY[0x263EF8330];
      uint64_t v30 = 1107296256;
      os_log_type_t v31 = sub_241D344C0;
      uint64_t v32 = &unk_26F5D0AB0;
      uint64_t v16 = _Block_copy(&v29);
      swift_release();
      id v17 = self;
      id v18 = objc_msgSend(v17, sel_actionWithTitle_style_handler_, v15, 0, v16);
      _Block_release(v16);

      objc_msgSend(v13, sel_addAction_, v18);
      if (qword_268D4B338 != -1) {
        swift_once();
      }
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = a5;
      *(void *)(v19 + 24) = a6;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v20 = (void *)sub_241DAA950();
      swift_bridgeObjectRelease();
      uint64_t v33 = sub_241D6B830;
      uint64_t v34 = v19;
      uint64_t v29 = MEMORY[0x263EF8330];
      uint64_t v30 = 1107296256;
      os_log_type_t v31 = sub_241D344C0;
      uint64_t v32 = &unk_26F5D0B00;
      uint64_t v21 = _Block_copy(&v29);
      swift_release();
      id v22 = objc_msgSend(v17, sel_actionWithTitle_style_handler_, v20, 0, v21);
      _Block_release(v21);

      objc_msgSend(v13, sel_addAction_, v22);
      objc_msgSend(v13, sel_setPreferredAction_, v22);

      goto LABEL_19;
    case 2:
      if (qword_268D4B340 != -1) {
        swift_once();
      }
      os_log_type_t v23 = &qword_268D4C6A0;
      goto LABEL_16;
    case 3:
      if (qword_268D4B358 != -1) {
        swift_once();
      }
      os_log_type_t v23 = &qword_268D4C6D0;
LABEL_16:
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      swift_bridgeObjectRetain();
      sub_241D28BF4(0, (unint64_t *)&qword_268D4C628);
      swift_bridgeObjectRetain();
      id v13 = sub_241D7B1A0(v24, v25, a2, a3);
      if (qword_268D4B348 != -1) {
        swift_once();
      }
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = a5;
      *(void *)(v26 + 24) = a6;
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v27 = (void *)sub_241DAA950();
      swift_bridgeObjectRelease();
      uint64_t v33 = sub_241D367A4;
      uint64_t v34 = v26;
      uint64_t v29 = MEMORY[0x263EF8330];
      uint64_t v30 = 1107296256;
      os_log_type_t v31 = sub_241D344C0;
      uint64_t v32 = &unk_26F5D0A60;
      uint64_t v28 = _Block_copy(&v29);
      swift_release();
      id v22 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v27, 1, v28);
      _Block_release(v28);

      objc_msgSend(v13, sel_addAction_, v22);
      objc_msgSend(v13, sel_setPreferredAction_, v22);
LABEL_19:

      if (!a4)
      {
        __break(1u);
        JUMPOUT(0x241D6B7D0);
      }
      objc_msgSend(a4, sel_presentViewController_animated_completion_, v13, 1, 0);

      break;
    default:
      a5(1);
      break;
  }
}

uint64_t sub_241D6B7E0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241D6B818(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241D6B828()
{
  return swift_release();
}

uint64_t sub_241D6B830()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

void *sub_241D6B878(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  int v39 = a5;
  int v40 = a2;
  uint64_t v37 = *v5;
  uint64_t v10 = sub_241DAA2E0();
  uint64_t v36 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D6C0E8();
  MEMORY[0x270FA5388]();
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241DA9ED0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388]();
  id v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1;
  sub_241D54E7C(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v19 = v36;
    uint64_t v34 = v10;
    uint64_t v35 = a3;
    sub_241D6C140((uint64_t)v14);
    v6[2] = 0;
    v6[3] = 0;
    sub_241DAA2C0();
    uint64_t v20 = sub_241DAA2D0();
    os_log_type_t v21 = sub_241DAAC30();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v33 = a4;
      os_log_type_t v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v42 = v24;
      *(_DWORD *)os_log_type_t v23 = 136315138;
      uint64_t v25 = sub_241DAB1F0();
      uint64_t v41 = sub_241D48854(v25, v26, &v42);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v20, v21, "[%s] Demographics data was nil. Setting age and biological sex to nil.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v24, -1, -1);
      unint64_t v27 = v23;
      a4 = v33;
      MEMORY[0x24563A5D0](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v34);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    v6[2] = sub_241DA9EA0();
    uint64_t v28 = sub_241DA9EB0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v6[3] = v28;
  }
  v6[4] = sub_241D6BCA4();
  if (a4)
  {
    uint64_t v29 = sub_241DAA950();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = 0;
  }
  v6[6] = v29;
  sub_241D6C19C();
  uint64_t v30 = sub_241DAAE10();
  sub_241D6C140(v38);
  v6[5] = v30;
  return v6;
}

uint64_t sub_241D6BCA4()
{
  return sub_241DAAE10();
}

uint64_t sub_241D6BF60()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent()
{
  return self;
}

unint64_t sub_241D6BFDC()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_241D6BFF8()
{
  uint64_t v0 = sub_241D54970((uint64_t)&unk_26F5CF110);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_241D6C040()
{
  return sub_241D6C0A8(&qword_268D4C908);
}

uint64_t sub_241D6C074()
{
  return sub_241D6C0A8(&qword_268D4C910);
}

uint64_t sub_241D6C0A8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241D6C0E8()
{
  if (!qword_268D4C190)
  {
    sub_241DA9ED0();
    unint64_t v0 = sub_241DAAEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C190);
    }
  }
}

uint64_t sub_241D6C140(uint64_t a1)
{
  sub_241D6C0E8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_241D6C19C()
{
  unint64_t result = qword_268D4C918;
  if (!qword_268D4C918)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4C918);
  }
  return result;
}

uint64_t sub_241D6C1DC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = sub_241DAA2E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 2)
  {
    uint64_t v11 = *(void *)(v3 + 40);
    swift_beginAccess();
    id v13 = a3;
    swift_retain();
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    uint64_t v11 = *(void *)(v3 + 32);
    swift_beginAccess();
    id v12 = a3;
    swift_retain();
LABEL_5:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *(void *)(v11 + 24);
    *(void *)(v11 + 24) = 0x8000000000000000;
    sub_241DA3D90((uint64_t)a3, a1, isUniquelyReferenced_nonNull_native);
    *(void *)(v11 + 24) = v23;
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_241D56058(a1);
    sub_241D566C8(a1, a3);
    return swift_release();
  }
  sub_241DAA280();
  uint64_t v16 = sub_241DAA2D0();
  os_log_type_t v17 = sub_241DAAC20();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v22[0] = v19;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v23 = sub_241D48854(0xD00000000000001DLL, 0x8000000241DB0560, v22);
    sub_241DAAF10();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v23 = a2;
    type metadata accessor for HKVisionEye(0);
    uint64_t v20 = sub_241DAA9B0();
    uint64_t v23 = sub_241D48854(v20, v21, v22);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v16, v17, "[%{public}s] Unknown eye received: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v19, -1, -1);
    MEMORY[0x24563A5D0](v18, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_241D6C4D8(unsigned __int8 a1, uint64_t a2, void *a3)
{
  uint64_t v7 = sub_241DAA2E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 2)
  {
    uint64_t v11 = *(void *)(v3 + 40);
    swift_beginAccess();
    id v13 = a3;
    swift_retain();
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    uint64_t v11 = *(void *)(v3 + 32);
    swift_beginAccess();
    id v12 = a3;
    swift_retain();
LABEL_5:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *(void *)(v11 + 24);
    *(void *)(v11 + 24) = 0x8000000000000000;
    sub_241DA3D90((uint64_t)a3, a1, isUniquelyReferenced_nonNull_native);
    *(void *)(v11 + 24) = v23;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return swift_release();
  }
  sub_241DAA280();
  uint64_t v16 = sub_241DAA2D0();
  os_log_type_t v17 = sub_241DAAC20();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v22[0] = v19;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v23 = sub_241D48854(0xD00000000000001ELL, 0x8000000241DB0580, v22);
    sub_241DAAF10();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v23 = a2;
    type metadata accessor for HKVisionEye(0);
    uint64_t v20 = sub_241DAA9B0();
    uint64_t v23 = sub_241D48854(v20, v21, v22);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v16, v17, "[%{public}s] Unknown eye received: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v19, -1, -1);
    MEMORY[0x24563A5D0](v18, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_241D6C7BC()
{
  uint64_t v0 = sub_241DAA2E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA2B0();
  uint64_t v4 = sub_241DAA2D0();
  os_log_type_t v5 = sub_241DAAC30();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = sub_241DAB1F0();
    uint64_t v11 = sub_241D48854(v8, v9, &v12);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v4, v5, "[%s] prescriptionType completed.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v7, -1, -1);
    MEMORY[0x24563A5D0](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_241D6C994(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v1 == 2)
    {
      uint64_t v7 = *(void *)(result + 48);
      uint64_t v8 = *(void *)(v7 + 32);
      swift_beginAccess();
      uint64_t v9 = MEMORY[0x263F8EE80];
      *(void *)(v8 + 24) = MEMORY[0x263F8EE80];
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(v7 + 40);
      swift_beginAccess();
      *(void *)(v10 + 24) = v9;
      swift_release();
      goto LABEL_6;
    }
    if (v1 == 1)
    {
      uint64_t v3 = *(void *)(result + 40);
      uint64_t v4 = *(void *)(v3 + 32);
      swift_beginAccess();
      uint64_t v5 = MEMORY[0x263F8EE80];
      *(void *)(v4 + 24) = MEMORY[0x263F8EE80];
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(v3 + 40);
      swift_beginAccess();
      *(void *)(v6 + 24) = v5;
      swift_release();
LABEL_6:
      swift_release();
      return swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_241D6CAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_241DAA2E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v18 == 1)
  {
    uint64_t v9 = *(void *)(v2 + 48);
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a2;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_241DAA2B0();
    uint64_t v11 = sub_241DAA2D0();
    os_log_type_t v12 = sub_241DAAC10();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v18 = v14;
      *(_DWORD *)id v13 = 136315138;
      uint64_t v15 = sub_241DAB1F0();
      uint64_t v17 = sub_241D48854(v15, v16, &v18);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v11, v12, "[%s] currently selected prescription type is not glasses. Skipping updating the glasses description.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v14, -1, -1);
      MEMORY[0x24563A5D0](v13, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_241D6CD44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_241DAA2E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v18 == 2)
  {
    uint64_t v9 = *(void *)(v2 + 40);
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a2;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_241DAA2B0();
    uint64_t v11 = sub_241DAA2D0();
    os_log_type_t v12 = sub_241DAAC10();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v18 = v14;
      *(_DWORD *)id v13 = 136315138;
      uint64_t v15 = sub_241DAB1F0();
      uint64_t v17 = sub_241D48854(v15, v16, &v18);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v11, v12, "[%s] currently selected prescription type is not contacts. Skipping updating the brand of contacts.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v14, -1, -1);
      MEMORY[0x24563A5D0](v13, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_241D6CF98(uint64_t a1)
{
  uint64_t v2 = sub_241DA9770();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v29 = (char *)&v28 - v7;
  sub_241D2DB3C(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v28 - v13;
  MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v28 - v15;
  sub_241D2DAA8(a1, (uint64_t)&v28 - v15);
  swift_retain();
  sub_241DAA5E0();
  uint64_t v17 = v3;
  swift_release();
  sub_241D2DAA8(a1, (uint64_t)v14);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  uint64_t v19 = v2;
  if (v18(v14, 1, v2) == 1)
  {
    sub_241D6F214((uint64_t)v14);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, 1, 1, v2);
    swift_retain();
    sub_241DAA5E0();
    return swift_release();
  }
  else
  {
    uint64_t v28 = v6;
    unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v21(v29, v14, v19);
    uint64_t v22 = v19;
    uint64_t v23 = v17;
    swift_retain();
    sub_241DAA5D0();
    swift_release();
    if (v18(v11, 1, v22) == 1)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v29, v22);
      return sub_241D6F214((uint64_t)v11);
    }
    else
    {
      uint64_t v24 = v28;
      v21(v28, v11, v22);
      uint64_t v25 = v24;
      unint64_t v26 = v29;
      if (sub_241DA9740())
      {
        swift_retain();
        swift_retain();
        sub_241DAA5D0();
        swift_release();
        sub_241DAA5E0();
        swift_release();
      }
      unint64_t v27 = *(void (**)(char *, uint64_t))(v23 + 8);
      v27(v25, v22);
      return ((uint64_t (*)(char *, uint64_t))v27)(v26, v22);
    }
  }
}

uint64_t sub_241D6D314(uint64_t a1)
{
  uint64_t v3 = sub_241DA9770();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - v8;
  sub_241D2DB3C(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  os_log_type_t v31 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v29 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v32 = v1;
  sub_241D2DAA8(a1, (uint64_t)&v29 - v19);
  swift_retain();
  sub_241DAA5E0();
  swift_release();
  sub_241D2DAA8(a1, (uint64_t)v18);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v20(v18, 1, v3) == 1) {
    return sub_241D6F214((uint64_t)v18);
  }
  uint64_t v29 = v7;
  uint64_t v30 = v4;
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v22(v9, v18, v3);
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v20(v15, 1, v3) == 1)
  {
    sub_241D6F214((uint64_t)v15);
    uint64_t v23 = v30;
  }
  else
  {
    uint64_t v24 = v29;
    v22(v29, v15, v3);
    if (sub_241DA9740())
    {
      uint64_t v25 = v24;
      swift_retain();
      swift_retain();
      sub_241DAA5D0();
      swift_release();
      sub_241DAA5E0();
      swift_release();
      unint64_t v26 = *(void (**)(char *, uint64_t))(v30 + 8);
      v26(v25, v3);
      return ((uint64_t (*)(char *, uint64_t))v26)(v9, v3);
    }
    uint64_t v23 = v30;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v3);
  }
  swift_retain();
  uint64_t v27 = (uint64_t)v31;
  sub_241DAA5D0();
  swift_release();
  unsigned int v28 = v20((char *)v27, 1, v3);
  sub_241D6F214(v27);
  if (v28 == 1)
  {
    swift_retain();
    swift_retain();
    sub_241DAA5D0();
    swift_release();
    sub_241DAA5E0();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v3);
}

uint64_t sub_241D6D700(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_241DAA2E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v24 == 2) {
    return sub_241D6C4D8(a1, a2, a3);
  }
  if (v24 == 1) {
    return sub_241D6C1DC(a1, a2, a3);
  }
  sub_241DAA2B0();
  swift_retain_n();
  uint64_t v13 = sub_241DAA2D0();
  os_log_type_t v14 = sub_241DAAC10();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v21 = v9;
    uint64_t v17 = sub_241DAB1F0();
    uint64_t v22 = sub_241D48854(v17, v18, &v23);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v22 = *(void *)(v4 + 16);
    sub_241D61F7C();
    swift_retain();
    uint64_t v19 = sub_241DAA9B0();
    uint64_t v22 = sub_241D48854(v19, v20, &v23);
    sub_241DAAF10();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v13, v14, "[%s] Updating VisionPrescriptionManualDataEntryContext currently not supported for %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v16, -1, -1);
    MEMORY[0x24563A5D0](v15, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v8);
  }
  else
  {

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

id sub_241D6DA18()
{
  uint64_t v1 = v0;
  uint64_t v40 = *v0;
  uint64_t v41 = sub_241DAA2E0();
  uint64_t v2 = *(void *)(v41 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v41);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v37 - v6;
  sub_241D2DB3C(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = sub_241DA9770();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_241D6F214((uint64_t)v13);
    sub_241DAA2A0();
    unint64_t v18 = sub_241DAA2D0();
    os_log_type_t v19 = sub_241DAAC10();
    if (os_log_type_enabled(v18, v19))
    {
      unint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v44 = v21;
      *(_DWORD *)unint64_t v20 = 136315138;
      uint64_t v22 = sub_241DAB1F0();
      uint64_t v43 = sub_241D48854(v22, v23, &v44);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v18, v19, "[%s] Cannot create HKVisionPrescriptiton without dateIssued.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v21, -1, -1);
      MEMORY[0x24563A5D0](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v41);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  if (sub_241D6E058())
  {
    id v24 = sub_241D6E290();
LABEL_13:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return v24;
  }
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v44 == 2)
  {
    swift_retain();
    sub_241DAA5D0();
    swift_release();
    id v25 = sub_241D2CA78((uint64_t)v17, (uint64_t)v11);
    goto LABEL_12;
  }
  if (v44 == 1)
  {
    swift_retain();
    sub_241DAA5D0();
    swift_release();
    id v25 = sub_241D2CEA0((uint64_t)v17, (uint64_t)v11);
LABEL_12:
    id v24 = v25;
    sub_241D6F214((uint64_t)v11);
    goto LABEL_13;
  }
  sub_241DAA2A0();
  swift_retain_n();
  uint64_t v27 = sub_241DAA2D0();
  os_log_type_t v28 = sub_241DAAC10();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc();
    int v39 = v29;
    uint64_t v31 = v30;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v43 = v38;
    *(_DWORD *)uint64_t v31 = 136315394;
    uint64_t v32 = sub_241DAB1F0();
    uint64_t v42 = sub_241D48854(v32, v33, &v43);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    uint64_t v40 = v31 + 14;
    uint64_t v42 = v1[2];
    sub_241D61F7C();
    swift_retain();
    uint64_t v34 = sub_241DAA9B0();
    uint64_t v42 = sub_241D48854(v34, v35, &v43);
    sub_241DAAF10();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v27, (os_log_type_t)v39, "[%s] unsupported prescription type %s", (uint8_t *)v31, 0x16u);
    uint64_t v36 = v38;
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v36, -1, -1);
    MEMORY[0x24563A5D0](v31, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v41);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return 0;
}

unint64_t sub_241D6E058()
{
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v28 == 2)
  {
    uint64_t v8 = qword_26F5CEEE0;
    if (qword_26F5CEEE0)
    {
      uint64_t v9 = *(void *)(v0 + 40);
      uint64_t v10 = *(void *)(v9 + 32) + 24;
      swift_beginAccess();
      uint64_t v11 = (unsigned __int8 *)&byte_26F5CEEF0;
      while (1)
      {
        uint64_t v12 = *(void *)v10;
        if (*(void *)(*(void *)v10 + 16))
        {
          unint64_t v13 = sub_241DA34A0(*v11);
          if (v14)
          {
            if (*(void *)(*(void *)(v12 + 56) + 8 * v13)) {
              break;
            }
          }
        }
        ++v11;
        if (!--v8)
        {
          uint64_t v22 = qword_26F5CEEE0;
          if (!qword_26F5CEEE0) {
            return 1;
          }
          uint64_t v23 = *(void *)(v9 + 40) + 24;
          unint64_t result = swift_beginAccess();
          for (uint64_t i = 0; ; ++i)
          {
            uint64_t v25 = i + 1;
            if (__OFADD__(i, 1)) {
              break;
            }
            uint64_t v26 = *(void *)v23;
            if (*(void *)(*(void *)v23 + 16))
            {
              unint64_t result = sub_241DA34A0(*((unsigned char *)&unk_26F5CEED0 + i + 32));
              if (v27)
              {
                if (*(void *)(*(void *)(v26 + 56) + 8 * result)) {
                  return 0;
                }
              }
            }
            if (v25 == v22) {
              return 1;
            }
          }
LABEL_36:
          __break(1u);
          return result;
        }
      }
      return 0;
    }
  }
  else
  {
    if (v28 != 1) {
      return 0;
    }
    uint64_t v1 = qword_26F5CEEE0;
    if (qword_26F5CEEE0)
    {
      uint64_t v2 = *(void *)(v0 + 48);
      uint64_t v3 = *(void *)(v2 + 32) + 24;
      swift_beginAccess();
      uint64_t v4 = (unsigned __int8 *)&byte_26F5CEEF0;
      while (1)
      {
        uint64_t v5 = *(void *)v3;
        if (*(void *)(*(void *)v3 + 16))
        {
          unint64_t v6 = sub_241DA34A0(*v4);
          if (v7)
          {
            if (*(void *)(*(void *)(v5 + 56) + 8 * v6)) {
              return 0;
            }
          }
        }
        ++v4;
        if (!--v1)
        {
          uint64_t v15 = qword_26F5CEEE0;
          if (!qword_26F5CEEE0) {
            return 1;
          }
          uint64_t v16 = *(void *)(v2 + 40) + 24;
          unint64_t result = swift_beginAccess();
          for (uint64_t j = 0; ; ++j)
          {
            uint64_t v19 = j + 1;
            if (__OFADD__(j, 1)) {
              break;
            }
            uint64_t v20 = *(void *)v16;
            if (*(void *)(*(void *)v16 + 16))
            {
              unint64_t result = sub_241DA34A0(*((unsigned char *)&unk_26F5CEED0 + j + 32));
              if (v21)
              {
                if (*(void *)(*(void *)(v20 + 56) + 8 * result)) {
                  return 0;
                }
              }
            }
            if (v19 == v15) {
              return 1;
            }
          }
          __break(1u);
          goto LABEL_36;
        }
      }
    }
  }
  return 1;
}

id sub_241D6E290()
{
  uint64_t v36 = *v0;
  uint64_t v1 = sub_241DAA2E0();
  uint64_t v37 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D2DB3C(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  char v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t v10 = sub_241DA9770();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v34 - v15;
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    uint64_t v35 = v1;
    sub_241D6F214((uint64_t)v9);
    sub_241DAA2A0();
    uint64_t v17 = sub_241DAA2D0();
    os_log_type_t v18 = sub_241DAAC10();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v39 = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v21 = sub_241DAB1F0();
      uint64_t v38 = sub_241D48854(v21, v22, &v39);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v17, v18, "[%s] Cannot create HKVisionPrescriptiton without dateIssued.", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v20, -1, -1);
      MEMORY[0x24563A5D0](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v37 + 8))(v3, v35);
    return 0;
  }
  else
  {
    id v24 = v7;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    swift_retain();
    sub_241DAA5D0();
    swift_release();
    if (v39 == 1)
    {
      uint64_t v25 = v0[6];
      uint64_t v26 = (uint64_t)v7;
      if (*(void *)(v25 + 24))
      {
        uint64_t v27 = *(void *)(v25 + 16);
        unint64_t v28 = *(void *)(v25 + 24);
      }
      else
      {
        uint64_t v27 = 0;
        unint64_t v28 = 0xE000000000000000;
      }
      sub_241D2DB3C(0, &qword_268D4B600, (uint64_t (*)(uint64_t))sub_241D28B78, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241DB2C80;
      *(void *)(inited + 32) = sub_241DAA990();
      *(void *)(inited + 40) = v31;
      *(void *)(inited + 72) = MEMORY[0x263F8D310];
      *(void *)(inited + 48) = v27;
      *(void *)(inited + 56) = v28;
      swift_bridgeObjectRetain();
      unint64_t v29 = sub_241D7597C(inited);
    }
    else
    {
      unint64_t v29 = 0;
      uint64_t v26 = (uint64_t)v24;
    }
    sub_241D6F2A0();
    swift_retain();
    sub_241DAA5D0();
    swift_release();
    uint64_t v32 = v39;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    swift_retain();
    sub_241DAA5D0();
    swift_release();
    id v23 = sub_241D6F2E0(v32, (uint64_t)v14, v26, 0, v29);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  return v23;
}

uint64_t sub_241D6E7C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_241D6E818()
{
  sub_241D6E7C8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryContext()
{
  return self;
}

uint64_t sub_241D6E870(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

void *sub_241D6E880(void *a1, char a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v64 = a3;
  uint64_t v7 = *v3;
  sub_241D2DB3C(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  char v14 = (char *)&v64 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v64 - v15;
  v4[9] = 0;
  uint64_t v65 = v7;
  if (a1) {
    uint64_t v17 = (uint64_t)objc_msgSend(a1, sel_prescriptionType);
  }
  else {
    uint64_t v17 = 1;
  }
  *(void *)&long long v68 = v17;
  sub_241D61F7C();
  swift_allocObject();
  v4[2] = sub_241DAA600();
  if (a1)
  {
    id v18 = objc_msgSend(a1, sel_dateIssued);
    sub_241DA9750();

    uint64_t v19 = sub_241DA9770();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v16, 0, 1, v19);
  }
  else
  {
    uint64_t v20 = sub_241DA9770();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 1, 1, v20);
  }
  sub_241D6216C();
  swift_allocObject();
  v4[3] = sub_241DAA600();
  if (a1)
  {
    id v21 = objc_msgSend(a1, sel_expirationDate);
    if (v21)
    {
      unint64_t v22 = v21;
      sub_241DA9750();

      uint64_t v23 = sub_241DA9770();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 0, 1, v23);
    }
    else
    {
      uint64_t v25 = sub_241DA9770();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 1, 1, v25);
    }
    sub_241D54FAC((uint64_t)v11, (uint64_t)v14);
  }
  else
  {
    uint64_t v24 = sub_241DA9770();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 1, 1, v24);
  }
  swift_allocObject();
  v4[4] = sub_241DAA600();
  *((unsigned char *)v4 + 64) = a2;
  if (!a1) {
    goto LABEL_18;
  }
  self;
  uint64_t v26 = swift_dynamicCastObjCClass();
  if (!v26)
  {
    self;
    uint64_t v35 = swift_dynamicCastObjCClass();
    if (v35)
    {
      uint64_t v36 = (void *)v35;
      id v37 = a1;
      uint64_t v38 = sub_241D2D68C(v36);

      v4[5] = v38;
      type metadata accessor for GlassesManualDataEntryContext();
      uint64_t v39 = (void *)swift_allocObject();
      v39[2] = 0;
      v39[3] = 0;
      swift_bridgeObjectRelease();
      id v40 = objc_msgSend(0, sel_leftEye);
      type metadata accessor for GlassesLensSpecificationContext();
      swift_allocObject();
      unsigned char v39[4] = sub_241D555C8(1, v40);
      id v41 = objc_msgSend(0, sel_rightEye);
      swift_allocObject();
      uint64_t v39[5] = sub_241D555C8(2, v41);
      v4[6] = v39;
      uint64_t v34 = v65;
      goto LABEL_33;
    }
LABEL_18:
    type metadata accessor for ContactsManualDataEntryContext();
    uint64_t v42 = (void *)swift_allocObject();
    v42[2] = 0;
    v42[3] = 0;
    swift_bridgeObjectRelease();
    id v43 = objc_msgSend(0, sel_leftEye);
    type metadata accessor for ContactsLensSpecificationContext();
    swift_allocObject();
    uint64_t v44 = sub_241D5733C(1, v43);

    void v42[4] = v44;
    id v45 = objc_msgSend(0, sel_rightEye);
    swift_allocObject();
    uint64_t v46 = sub_241D5733C(2, v45);

    void v42[5] = v46;
    v4[5] = v42;
    type metadata accessor for GlassesManualDataEntryContext();
    uint64_t v47 = (void *)swift_allocObject();
    v47[2] = 0;
    v47[3] = 0;
    swift_bridgeObjectRelease();
    id v48 = objc_msgSend(0, sel_leftEye);
    type metadata accessor for GlassesLensSpecificationContext();
    swift_allocObject();
    v47[4] = sub_241D555C8(1, v48);
    id v49 = objc_msgSend(0, sel_rightEye);
    swift_allocObject();
    v47[5] = sub_241D555C8(2, v49);
    BOOL v50 = v17 == 1;
    uint64_t v34 = v65;
    if (!v50) {
      goto LABEL_32;
    }
    if (a1 && (id v51 = objc_msgSend(a1, sel_metadata)) != 0)
    {
      uint64_t v52 = v51;
      uint64_t v53 = sub_241DAA920();

      uint64_t v54 = sub_241DAA990();
      if (*(void *)(v53 + 16) && (unint64_t v56 = sub_241DA3428(v54, v55), (v57 & 1) != 0))
      {
        sub_241D2DA4C(*(void *)(v53 + 56) + 32 * v56, (uint64_t)&v68);
      }
      else
      {
        long long v68 = 0u;
        long long v69 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v69 + 1))
      {
        int v58 = swift_dynamicCast();
        uint64_t v59 = v66;
        uint64_t v60 = v67;
        if (!v58)
        {
          uint64_t v59 = 0;
          uint64_t v60 = 0;
        }
        goto LABEL_31;
      }
    }
    else
    {
      long long v68 = 0u;
      long long v69 = 0u;
    }
    sub_241D2D994((uint64_t)&v68);
    uint64_t v59 = 0;
    uint64_t v60 = 0;
LABEL_31:
    v47[2] = v59;
    v47[3] = v60;
    swift_bridgeObjectRelease();
LABEL_32:
    v4[6] = v47;
    goto LABEL_33;
  }
  uint64_t v27 = (void *)v26;
  type metadata accessor for GlassesManualDataEntryContext();
  swift_allocObject();
  id v28 = a1;
  v4[6] = sub_241D2D7B4(v27);
  type metadata accessor for ContactsManualDataEntryContext();
  unint64_t v29 = (void *)swift_allocObject();
  v29[2] = 0;
  void v29[3] = 0;
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(0, sel_leftEye);
  type metadata accessor for ContactsLensSpecificationContext();
  swift_allocObject();
  uint64_t v31 = sub_241D5733C(1, v30);

  void v29[4] = v31;
  id v32 = objc_msgSend(0, sel_rightEye);
  swift_allocObject();
  uint64_t v33 = sub_241D5733C(2, v32);

  v29[5] = v33;
  v4[5] = v29;
  uint64_t v34 = v65;
LABEL_33:
  id v61 = v64;
  type metadata accessor for VisionPrescriptionAnalyticsContext();
  swift_allocObject();
  v4[7] = sub_241DA5C58(v61);
  *(void *)&long long v68 = v4[2];
  *(void *)(swift_allocObject() + 16) = v34;
  swift_allocObject();
  swift_weakInit();
  sub_241D6F1BC();
  swift_retain();
  uint64_t v62 = sub_241DAA760();
  swift_release();
  swift_release();
  swift_release();
  v4[9] = v62;
  swift_release();
  return v4;
}

uint64_t sub_241D6F164()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D6F174()
{
  return sub_241D6C7BC();
}

uint64_t sub_241D6F17C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D6F1B4(uint64_t *a1)
{
  return sub_241D6C994(a1);
}

unint64_t sub_241D6F1BC()
{
  unint64_t result = qword_268D4C578;
  if (!qword_268D4C578)
  {
    sub_241D61F7C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C578);
  }
  return result;
}

uint64_t sub_241D6F214(uint64_t a1)
{
  sub_241D2DB3C(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_241D6F2A0()
{
  unint64_t result = qword_268D4C210;
  if (!qword_268D4C210)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4C210);
  }
  return result;
}

id sub_241D6F2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)sub_241DA9730();
  uint64_t v11 = sub_241DA9770();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a3, 1, v11) != 1)
  {
    uint64_t v13 = (void *)sub_241DA9730();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a3, v11);
  }
  if (a5)
  {
    char v14 = (void *)sub_241DAA910();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = 0;
  }
  id v15 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_prescriptionWithType_dateIssued_expirationDate_device_metadata_, a1, v10, v13, a4, v14);

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a2, v11);
  return v15;
}

uint64_t type metadata accessor for VisionPrescriptionRoomViewController()
{
  uint64_t result = qword_268D4C920;
  if (!qword_268D4C920) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D6F4C8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241D6F508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241DAA030();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v9 = sub_241DAA0F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  return v9;
}

void sub_241D6F620(void *a1)
{
  uint64_t v2 = sub_241DA9A20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (objc_class *)type metadata accessor for VisionPrescriptionRoomViewController();
  v11.receiver = a1;
  v11.super_class = v6;
  id v7 = a1;
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  id v8 = objc_msgSend(v7, sel_collectionView);
  if (v8)
  {
    uint64_t v9 = v8;
    sub_241DAAC80();
    uint64_t v10 = (void *)sub_241DA9A10();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v9, sel_setBackgroundColor_, v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_241D6F76C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)sub_241DAA0E0();
  id v5 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionManualDataEntryViewController());
  uint64_t v6 = (void *)sub_241D62778(v4, 0, 0, 0, 0, 0);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v6);
  objc_msgSend(v7, sel_setModalInPresentation_, 1);
  objc_msgSend(v7, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v2, sel_presentViewController_animated_completion_, v7, a1 & 1, 0);
}

id sub_241D6F854(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VisionPrescriptionRoomViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_241D6F8A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionRoomViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241D6F8D8()
{
  return type metadata accessor for VisionPrescriptionRoomViewController();
}

uint64_t sub_241D6F8E0(void *a1)
{
  sub_241D6FF24();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241DB4380;
  uint64_t v3 = type metadata accessor for VisionPrescriptionComponent();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0xD00000000000001BLL;
  *(void *)(v4 + 24) = 0x8000000241DB4BC0;
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = sub_241D6FFD4();
  *(void *)(v2 + 32) = v4;
  uint64_t v5 = sub_241DA9FB0();
  uint64_t v6 = MEMORY[0x263F443A0];
  *(void *)(v2 + 96) = v5;
  *(void *)(v2 + 104) = v6;
  sub_241D2C600((uint64_t *)(v2 + 72));
  id v7 = a1;
  sub_241DA9FA0();
  sub_241DA9F90();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_241DB2C60;
  id v9 = v7;
  sub_241DA9FF0();
  uint64_t v10 = sub_241DAA000();
  uint64_t v11 = MEMORY[0x263F443C0];
  *(void *)(v8 + 56) = v10;
  *(void *)(v8 + 64) = v11;
  sub_241D2C600((uint64_t *)(v8 + 32));
  sub_241DA9FE0();
  uint64_t v12 = sub_241DA9F70();
  uint64_t v13 = MEMORY[0x263F44358];
  *(void *)(v8 + 96) = v12;
  *(void *)(v8 + 104) = v13;
  sub_241D2C600((uint64_t *)(v8 + 72));
  id v14 = v9;
  sub_241DA9F60();
  uint64_t v15 = sub_241DA9FD0();
  uint64_t v16 = MEMORY[0x263F443B8];
  *(void *)(v2 + 136) = v15;
  *(void *)(v2 + 144) = v16;
  sub_241D2C600((uint64_t *)(v2 + 112));
  sub_241DA9FC0();
  return sub_241DA9F80();
}

uint64_t type metadata accessor for VisionPrescriptionDataTypeDetailConfigurationProvider()
{
  return self;
}

uint64_t sub_241D6FAEC(void *a1)
{
  return sub_241D6F8E0(a1);
}

void sub_241D6FB04(void *a1, uint64_t *a2)
{
  uint64_t v4 = sub_241DAA2E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (type metadata accessor for VisionPrescriptionRoomViewController(), (uint64_t v8 = swift_dynamicCastClass()) != 0))
  {
    id v9 = (void *)v8;
    id v10 = a1;
    uint64_t v11 = (void *)sub_241DAA0E0();
    id v12 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionManualDataEntryViewController());
    uint64_t v13 = (void *)sub_241D62778(v11, 0, 0, 0, 0, 0);
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v13);
    objc_msgSend(v22, sel_setModalInPresentation_, 1);
    objc_msgSend(v22, sel_setModalPresentationStyle_, 2);
    objc_msgSend(v9, sel_presentViewController_animated_completion_, v22, 1, 0);

    id v14 = v22;
  }
  else
  {
    sub_241DAA290();
    swift_retain_n();
    uint64_t v15 = sub_241DAA2D0();
    os_log_type_t v16 = sub_241DAAC10();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      id v22 = v17 + 4;
      uint64_t v23 = *a2;
      uint64_t v24 = v18;
      sub_241D6FEEC();
      uint64_t v19 = sub_241DAA9B0();
      uint64_t v23 = sub_241D48854(v19, v20, &v24);
      sub_241DAAF10();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v15, v16, "Expected UIViewController to be VisionPrescriptionRoomViewController, was %s instead.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v18, -1, -1);
      MEMORY[0x24563A5D0](v17, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t type metadata accessor for VisionPrescriptionComponent()
{
  return self;
}

uint64_t sub_241D6FE64()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)sub_241DAA020();
  type metadata accessor for LatestOrAddVisionPrescriptionDataSource();
  swift_allocObject();
  swift_retain();
  return sub_241D4BB40(v2, (uint64_t)sub_241D6FEE4, v1);
}

void sub_241D6FEE4(void *a1)
{
  sub_241D6FB04(a1, v1);
}

unint64_t sub_241D6FEEC()
{
  unint64_t result = qword_268D4C930;
  if (!qword_268D4C930)
  {
    type metadata accessor for VisionPrescriptionComponent();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4C930);
  }
  return result;
}

void sub_241D6FF24()
{
  if (!qword_268D4C938)
  {
    sub_241D6FF7C();
    unint64_t v0 = sub_241DAB130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C938);
    }
  }
}

unint64_t sub_241D6FF7C()
{
  unint64_t result = qword_268D4C940;
  if (!qword_268D4C940)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4C940);
  }
  return result;
}

unint64_t sub_241D6FFD4()
{
  unint64_t result = qword_268D4C948;
  if (!qword_268D4C948)
  {
    type metadata accessor for VisionPrescriptionComponent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C948);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldPupillaryDistanceDataSource()
{
  uint64_t result = qword_268D4C958;
  if (!qword_268D4C958) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D70074()
{
  return swift_initClassMetadata2();
}

void *sub_241D700C4(unsigned __int8 a1, uint64_t a2)
{
  return sub_241D700FC(a1, a2, 0xD00000000000001DLL, 0x8000000241DB0560);
}

void *sub_241D700E0(unsigned __int8 a1, uint64_t a2)
{
  return sub_241D700FC(a1, a2, 0xD00000000000001ELL, 0x8000000241DB0580);
}

void *sub_241D700FC(unsigned __int8 a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = sub_241DAA2E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 2)
  {
    uint64_t v13 = *(void *)(v4 + 40);
  }
  else
  {
    if (a2 != 1)
    {
      sub_241DAA280();
      uint64_t v19 = sub_241DAA2D0();
      os_log_type_t v20 = sub_241DAAC20();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        v28[0] = v27;
        *(_DWORD *)uint64_t v21 = 136446466;
        uint64_t v29 = sub_241D48854(a3, a4, v28);
        sub_241DAAF10();
        *(_WORD *)(v21 + 12) = 2080;
        uint64_t v29 = a2;
        type metadata accessor for HKVisionEye(0);
        uint64_t v22 = sub_241DAA9B0();
        uint64_t v29 = sub_241D48854(v22, v23, v28);
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241D1C000, v19, v20, "[%{public}s] Unknown eye received: %s", (uint8_t *)v21, 0x16u);
        uint64_t v24 = v27;
        swift_arrayDestroy();
        MEMORY[0x24563A5D0](v24, -1, -1);
        MEMORY[0x24563A5D0](v21, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return 0;
    }
    uint64_t v13 = *(void *)(v4 + 32);
  }
  swift_beginAccess();
  uint64_t v14 = *(void *)(v13 + 24);
  if (!*(void *)(v14 + 16)) {
    return 0;
  }
  unint64_t v15 = sub_241DA34A0(a1);
  if ((v16 & 1) == 0) {
    return 0;
  }
  uint64_t v17 = *(void **)(*(void *)(v14 + 56) + 8 * v15);
  id v18 = v17;
  return v17;
}

uint64_t sub_241D70380@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  int v46 = a2;
  uint64_t v60 = a3;
  uint64_t v6 = sub_241DAA1C0();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v59 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241DA9CB0();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v8);
  int v58 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241D72774(0, &qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v55 = (char *)&v42 - v12;
  sub_241D72774(0, (unint64_t *)&unk_268D4C340, MEMORY[0x263F81DF8], v10);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v47 = (char *)&v42 - v14;
  uint64_t v15 = sub_241DAA350();
  uint64_t v48 = *(void *)(v15 - 8);
  uint64_t v49 = v15;
  MEMORY[0x270FA5388](v15);
  id v43 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_241DAA310();
  uint64_t v17 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_241DAA460();
  uint64_t v52 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA450();
  unsigned __int8 v22 = *(unsigned char *)(v3 + qword_268D4B6F0);
  uint64_t v23 = sub_241D65358(a1, 0, v22);
  uint64_t v25 = v24;
  swift_bridgeObjectRetain();
  uint64_t v50 = v25;
  uint64_t v51 = v23;
  sub_241DAA440();
  id v26 = objc_msgSend(self, sel_systemBlueColor);
  uint64_t v27 = (void (*)(uint64_t *, void))sub_241DAA400();
  uint64_t v28 = a1;
  sub_241DAA3E0();
  v27(v62, 0);
  uint64_t v45 = v4;
  sub_241D4A94C(a1);
  if (!v29)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
  }
  sub_241DAA3C0();
  sub_241D65358(a1, v46 & 1, v22);
  sub_241DAA440();
  uint64_t v30 = v61;
  v62[3] = v61;
  v62[4] = MEMORY[0x263F81F20];
  uint64_t v31 = sub_241D2C600(v62);
  uint64_t v32 = v52;
  (*(void (**)(uint64_t *, char *, uint64_t))(v52 + 16))(v31, v21, v30);
  sub_241D72774(0, &qword_268D4B860, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  sub_241DAA370();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241DB2C80;
  uint64_t v33 = v44;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F81DE8], v44);
  uint64_t v34 = sub_241DAA320();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v47, 1, 1, v34);
  uint64_t v35 = v43;
  sub_241DAA340();
  sub_241DAA330();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v33);
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v36;
  *(void *)(v37 + 24) = v28;
  uint64_t v38 = sub_241DAA390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v55, 1, 1, v38);
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v58, *MEMORY[0x263F440E0], v54);
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v59, *MEMORY[0x263F446D0], v57);
  uint64_t v39 = sub_241DA9E00();
  id v40 = v60;
  v60[3] = v39;
  v40[4] = sub_241D72830(&qword_268D4C390, MEMORY[0x263F441F0]);
  sub_241D2C600(v40);
  swift_retain();
  sub_241DA9DF0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v61);
  return swift_release();
}

uint64_t sub_241D70BE8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  int v48 = a2;
  uint64_t v63 = a3;
  uint64_t v6 = sub_241DAA1C0();
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v62 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241DA9CB0();
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v61 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241D72774(0, &qword_268D4B698, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  int v58 = (char *)&v45 - v12;
  sub_241D72774(0, (unint64_t *)&unk_268D4C340, MEMORY[0x263F81DF8], v10);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v49 = (char *)&v45 - v14;
  uint64_t v15 = sub_241DAA350();
  uint64_t v50 = *(void *)(v15 - 8);
  uint64_t v51 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v47 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_241DAA310();
  uint64_t v17 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_241DAA460();
  uint64_t v54 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA450();
  unsigned __int8 v22 = *(unsigned char *)(v3 + qword_268D4B6F0);
  uint64_t v23 = sub_241D65358(a1, 0, v22);
  uint64_t v25 = v24;
  swift_bridgeObjectRetain();
  uint64_t v52 = v25;
  uint64_t v53 = v23;
  sub_241DAA440();
  id v26 = objc_msgSend(self, sel_systemBlueColor);
  uint64_t v27 = (void (*)(uint64_t *, void))sub_241DAA400();
  sub_241DAA3E0();
  v27(v65, 0);
  uint64_t v55 = v4;
  swift_retain();
  uint64_t v28 = sub_241D700FC(0xCu, a1, 0xD00000000000001DLL, 0x8000000241DB0560);
  swift_release();
  swift_retain();
  uint64_t v29 = sub_241D700FC(0xBu, a1, 0xD00000000000001DLL, 0x8000000241DB0560);
  swift_release();
  sub_241D7221C(v28, v29);
  uint64_t v31 = v30;

  if (!v31)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
  }
  sub_241DAA3C0();
  sub_241D65358(a1, v48 & 1, v22);
  sub_241DAA440();
  uint64_t v32 = v64;
  v65[3] = v64;
  v65[4] = MEMORY[0x263F81F20];
  uint64_t v33 = sub_241D2C600(v65);
  uint64_t v34 = v54;
  (*(void (**)(uint64_t *, char *, uint64_t))(v54 + 16))(v33, v21, v32);
  sub_241D72774(0, &qword_268D4B860, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  sub_241DAA370();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241DB2C80;
  uint64_t v35 = v19;
  uint64_t v36 = v46;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F81DE8], v46);
  uint64_t v37 = sub_241DAA320();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v49, 1, 1, v37);
  uint64_t v38 = v47;
  sub_241DAA340();
  sub_241DAA330();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v51);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v35, v36);
  uint64_t v39 = swift_allocObject();
  swift_weakInit();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v39;
  *(void *)(v40 + 24) = a1;
  uint64_t v41 = sub_241DAA390();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v58, 1, 1, v41);
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v61, *MEMORY[0x263F440E0], v57);
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v62, *MEMORY[0x263F446D0], v60);
  uint64_t v42 = sub_241DA9E00();
  id v43 = v63;
  v63[3] = v42;
  v43[4] = sub_241D72830(&qword_268D4C390, MEMORY[0x263F441F0]);
  sub_241D2C600(v43);
  swift_retain();
  sub_241DA9DF0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v64);
  return swift_release();
}

uint64_t sub_241D714F8(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = qword_268D4B708;
  uint64_t v8 = *(void *)(result + qword_268D4B708);
  uint64_t v9 = qword_268D4B6F0;
  int v10 = *(unsigned __int8 *)(result + qword_268D4B6F8);
  char v11 = *(unsigned char *)(result + qword_268D4B6F0);
  uint64_t v12 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlViewController());
  v12[qword_268D4BE60] = v11;
  *(void *)&v12[qword_268D4BE68] = a3;
  *(void *)&v12[qword_268D4BE70] = v8;
  type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource(0);
  swift_allocObject();
  swift_retain_n();
  sub_241D88BA4(v11, a3, v10, v8);
  swift_retain();
  uint64_t v13 = (void *)sub_241DAA1D0();
  swift_release();
  swift_release();
  int v14 = *(unsigned __int8 *)(v6 + v9);
  if (v14 == 6)
  {
    unsigned int v15 = 0x10100u >> (8 * *(unsigned char *)(*(void *)(v6 + v7) + 64));
    swift_retain();
    int v16 = 14;
    goto LABEL_6;
  }
  if (v14 == 4)
  {
    unsigned int v15 = 0x10100u >> (8 * *(unsigned char *)(*(void *)(v6 + v7) + 64));
    swift_retain();
    int v16 = 16;
LABEL_6:
    sub_241DA6314(v16, 0, 0, v15);
    swift_release();
  }
  id v17 = objc_msgSend(a1, sel_navigationController);
  if (v17)
  {
    uint64_t v18 = v17;
    objc_msgSend(v17, sel_pushViewController_animated_, v13, 1);
  }
  return swift_release();
}

uint64_t sub_241D716F4()
{
  uint64_t v1 = *(void *)(v0 + qword_268D4B708);
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v25 == 2)
  {
    uint64_t v2 = *(void *)(v1 + 40);
  }
  else
  {
    if (v25 != 1) {
      goto LABEL_8;
    }
    uint64_t v2 = *(void *)(v1 + 48);
  }
  uint64_t v3 = *(void *)(v2 + 32);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  if (*(void *)(v4 + 16))
  {
    unint64_t v5 = sub_241DA34A0(0xCu);
    if (v6)
    {
      if (*(void *)(*(void *)(v4 + 56) + 8 * v5)) {
        goto LABEL_22;
      }
    }
  }
LABEL_8:
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v25 == 2)
  {
    uint64_t v7 = *(void *)(v1 + 40);
  }
  else
  {
    if (v25 != 1) {
      goto LABEL_15;
    }
    uint64_t v7 = *(void *)(v1 + 48);
  }
  uint64_t v8 = *(void *)(v7 + 40);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v8 + 24);
  if (*(void *)(v9 + 16))
  {
    unint64_t v10 = sub_241DA34A0(0xCu);
    if (v11)
    {
      if (*(void *)(*(void *)(v9 + 56) + 8 * v10)) {
        goto LABEL_22;
      }
    }
  }
LABEL_15:
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  if (v25 == 2)
  {
    uint64_t v12 = *(void *)(v1 + 40);
  }
  else
  {
    if (v25 != 1) {
      goto LABEL_23;
    }
    uint64_t v12 = *(void *)(v1 + 48);
  }
  uint64_t v13 = *(void *)(v12 + 32);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v13 + 24);
  if (!*(void *)(v14 + 16)
    || (unint64_t v15 = sub_241DA34A0(0xBu), (v16 & 1) == 0)
    || !*(void *)(*(void *)(v14 + 56) + 8 * v15))
  {
LABEL_23:
    swift_retain();
    sub_241DAA5D0();
    swift_release();
    if (v26 == 2)
    {
      uint64_t v18 = *(void *)(v1 + 40);
    }
    else
    {
      if (v26 != 1) {
        goto LABEL_30;
      }
      uint64_t v18 = *(void *)(v1 + 48);
    }
    uint64_t v19 = *(void *)(v18 + 40);
    swift_beginAccess();
    uint64_t v20 = *(void *)(v19 + 24);
    if (*(void *)(v20 + 16))
    {
      unint64_t v21 = sub_241DA34A0(0xBu);
      if (v22)
      {
        BOOL v17 = *(void *)(*(void *)(v20 + 56) + 8 * v21) != 0;
        goto LABEL_31;
      }
    }
LABEL_30:
    BOOL v17 = 0;
    goto LABEL_31;
  }
LABEL_22:
  BOOL v17 = 1;
LABEL_31:
  sub_241D4BA24(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_241DB2C60;
  sub_241D70BE8(2, v17, (uint64_t *)(v23 + 32));
  sub_241D70BE8(1, v17, (uint64_t *)(v23 + 72));
  return v23;
}

uint64_t sub_241D7198C(uint64_t a1)
{
  uint64_t v21 = *v1;
  sub_241D72774(0, &qword_268D4C968, (uint64_t (*)(uint64_t))sub_241D725D8, MEMORY[0x263EFDE48]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v20 - v9;
  sub_241D7264C();
  uint64_t v22 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D4B5F0(a1);
  swift_beginAccess();
  sub_241D72774(0, &qword_268D4C1E0, (uint64_t (*)(uint64_t))sub_241D725D8, MEMORY[0x263EFDE58]);
  swift_retain();
  sub_241DAA6A0();
  swift_endAccess();
  swift_beginAccess();
  sub_241DAA6A0();
  swift_endAccess();
  sub_241D726EC();
  sub_241DAA740();
  unint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  *(void *)(swift_allocObject() + 16) = v21;
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_241D727F0;
  *(void *)(v17 + 24) = v16;
  sub_241D72830(&qword_268D4C980, (void (*)(uint64_t))sub_241D7264C);
  uint64_t v18 = v22;
  sub_241DAA760();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v18);
  swift_beginAccess();
  sub_241DAA5B0();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_241D71DA0()
{
  uint64_t v0 = sub_241DAA2E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA280();
  uint64_t v4 = sub_241DAA2D0();
  os_log_type_t v5 = sub_241DAAC30();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = sub_241DAB1F0();
    uint64_t v11 = sub_241D48854(v8, v9, &v12);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v4, v5, "[%s] pupillary distance cancellable completed.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v7, -1, -1);
    MEMORY[0x24563A5D0](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_241D71F78()
{
  uint64_t v0 = sub_241DA97B0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_241D72774(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    sub_241DA9C00();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241DB2C80;
    sub_241D716F4();
    sub_241DA97A0();
    sub_241DA9780();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_241DA9BF0();
    sub_241DA9C60();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_241D7218C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_241D7219C()
{
  sub_241DA9CA0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_241D72214()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldPupillaryDistanceDataSource();
}

uint64_t sub_241D7221C(void *a1, void *a2)
{
  id v3 = sub_241D3AD50(a1, 0xCuLL);
  uint64_t v5 = v4;
  uint64_t v7 = (uint64_t)sub_241D3AD50(a2, 0xBuLL);
  uint64_t v8 = v6;
  if (v5)
  {
    if (v6)
    {
      if (qword_268D4B2F0 != -1) {
        swift_once();
      }
      sub_241DA95E0();
      sub_241D4BA24(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_241DB2C60;
      uint64_t v10 = MEMORY[0x263F8D310];
      *(void *)(v9 + 56) = MEMORY[0x263F8D310];
      unint64_t v11 = sub_241D2B59C();
      *(void *)(v9 + 32) = v3;
      *(void *)(v9 + 40) = v5;
      *(void *)(v9 + 96) = v10;
      *(void *)(v9 + 104) = v11;
      *(void *)(v9 + 64) = v11;
      *(void *)(v9 + 72) = v7;
      *(void *)(v9 + 80) = v8;
    }
    else
    {
      if (qword_268D4B2F0 != -1) {
        swift_once();
      }
      sub_241DA95E0();
      sub_241D4BA24(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_241DB2C80;
      *(void *)(v13 + 56) = MEMORY[0x263F8D310];
      *(void *)(v13 + 64) = sub_241D2B59C();
      *(void *)(v13 + 32) = v3;
      *(void *)(v13 + 40) = v5;
    }
LABEL_13:
    uint64_t v7 = sub_241DAA960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  if (v6)
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
    sub_241D4BA24(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_241DB2C80;
    *(void *)(v12 + 56) = MEMORY[0x263F8D310];
    *(void *)(v12 + 64) = sub_241D2B59C();
    *(void *)(v12 + 32) = v7;
    *(void *)(v12 + 40) = v8;
    goto LABEL_13;
  }
  return v7;
}

uint64_t sub_241D72584()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D725BC(void *a1)
{
  return sub_241D714F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_241D725D8(uint64_t a1)
{
}

unint64_t sub_241D7260C()
{
  unint64_t result = qword_268D4B618;
  if (!qword_268D4B618)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4B618);
  }
  return result;
}

void sub_241D7264C()
{
  if (!qword_268D4C970)
  {
    sub_241D72774(255, &qword_268D4C968, (uint64_t (*)(uint64_t))sub_241D725D8, MEMORY[0x263EFDE48]);
    sub_241D726EC();
    unint64_t v0 = sub_241DAA470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4C970);
    }
  }
}

unint64_t sub_241D726EC()
{
  unint64_t result = qword_268D4C978;
  if (!qword_268D4C978)
  {
    sub_241D72774(255, &qword_268D4C968, (uint64_t (*)(uint64_t))sub_241D725D8, MEMORY[0x263EFDE48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4C978);
  }
  return result;
}

void sub_241D72774(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241D727D8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D727E8()
{
  return sub_241D71DA0();
}

uint64_t sub_241D727F0()
{
  return sub_241D71F78();
}

uint64_t sub_241D727F8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241D72830(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241D72878()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4C9A0);
}

uint64_t sub_241D728E0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241D7292C()
{
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t result = sub_241DA95E0();
  qword_268D4C988 = result;
  unk_268D4C990 = v1;
  return result;
}

uint64_t sub_241D729DC(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      if (qword_268D4B2F0 != -1) {
        goto LABEL_32;
      }
      goto LABEL_31;
    case 2:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_31;
      }
      goto LABEL_32;
    case 3:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_31;
      }
      goto LABEL_32;
    case 4:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_31;
      }
      goto LABEL_32;
    case 5:
      if (qword_268D4B2F0 == -1) {
        return sub_241DA95E0();
      }
      goto LABEL_35;
    case 6:
      if (qword_268D4B2F0 == -1) {
        return sub_241DA95E0();
      }
      goto LABEL_35;
    case 7:
      if (qword_268D4B2F0 == -1) {
        return sub_241DA95E0();
      }
      goto LABEL_35;
    case 8:
      if (qword_268D4B2F0 == -1) {
        return sub_241DA95E0();
      }
      goto LABEL_35;
    case 9:
      if (qword_268D4B2F0 == -1) {
        return sub_241DA95E0();
      }
      goto LABEL_35;
    case 10:
      if (qword_268D4B2F0 == -1) {
        return sub_241DA95E0();
      }
LABEL_35:
      swift_once();
      return sub_241DA95E0();
    case 11:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_31;
      }
      goto LABEL_32;
    case 12:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_31;
      }
      goto LABEL_32;
    case 13:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_31;
      }
      goto LABEL_32;
    case 14:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_31;
      }
      goto LABEL_32;
    default:
      if (qword_268D4B2F0 == -1) {
        goto LABEL_31;
      }
LABEL_32:
      swift_once();
LABEL_31:
      sub_241DA95E0();
      sub_241D74A94(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_241DB2C80;
      uint64_t v5 = sub_241D57774(a1);
      uint64_t v7 = v6;
      *(void *)(v4 + 56) = MEMORY[0x263F8D310];
      *(void *)(v4 + 64) = sub_241D2B59C();
      *(void *)(v4 + 32) = v5;
      *(void *)(v4 + 40) = v7;
      uint64_t v8 = sub_241DAA9A0();
      swift_bridgeObjectRelease();
      return v8;
  }
}

uint64_t sub_241D7309C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_241D730D4()
{
  return 8;
}

uint64_t sub_241D730DC(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_241D730E8()
{
  if (qword_268D4B470 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_268D4C988;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_241D73150(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + *(int *)(a1 + 28));
  if (v2) {
    return v2(v1);
  }
  else {
    return 0;
  }
}

id sub_241D7319C()
{
  id v0 = objc_msgSend(self, sel_systemBlueColor);

  return v0;
}

uint64_t sub_241D731DC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + *(int *)(a3 + 32));
  if (v4) {
    return v4(v3, result, a2);
  }
  return result;
}

unint64_t sub_241D73228()
{
  return 0xD000000000000036;
}

uint64_t sub_241D7328C()
{
  sub_241D74C48(0, &qword_268D4C9B0, type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v11[-v1 - 8];
  uint64_t v3 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_241DAA0C0();
  uint64_t v7 = (void (*)(void))sub_241DAA0D0();
  v7();
  sub_241DAA090();
  if (v12)
  {
    sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
    int v8 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, v8 ^ 1u, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      sub_241D74B88((uint64_t)v2, (uint64_t)v6);
      sub_241D734BC(v6[*(int *)(v3 + 40)]);
      sub_241DAA070();
      swift_bridgeObjectRelease();
      return sub_241D74BEC((uint64_t)v6);
    }
  }
  else
  {
    sub_241D2AE50((uint64_t)v11);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  return sub_241D74AFC((uint64_t)v2);
}

unint64_t sub_241D734BC(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  unint64_t v29 = MEMORY[0x263F8EE78];
  if (a1 <= 1u)
  {
    uint64_t v3 = (void *)sub_241DAA950();
    id v4 = objc_msgSend(self, sel_systemImageNamed_, v3);

    id v5 = objc_allocWithZone(MEMORY[0x263F824A8]);
    id v6 = v2;
    id v7 = objc_msgSend(v5, sel_initWithImage_style_target_action_, v4, 0, v6, sel_plusMinusPressed);

    objc_msgSend(v7, sel_setIsAccessibilityElement_, 1);
    uint64_t v8 = qword_268D4B2F0;
    id v9 = v7;
    if (v8 != -1) {
      swift_once();
    }
    sub_241DA95E0();
    uint64_t v10 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityLabel_, v10);

    id v11 = v9;
    MEMORY[0x2456396D0]();
    if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_241DAAB20();
    }
    sub_241DAAB30();
    sub_241DAAB10();
  }
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 5, v2, 0);
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  uint64_t v13 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
  uint64_t v28[3] = v13;
  v28[0] = v2;
  id v14 = v2;
  unint64_t v15 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v16 = sub_241D5CF1C(v28, v13);
    uint64_t v17 = *(void *)(v13 - 8);
    MEMORY[0x270FA5388](v16);
    uint64_t v19 = (char *)&v28[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v17 + 16))(v19);
    uint64_t v20 = sub_241DAB140();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v13);
    sub_241D36E44((uint64_t)v28);
  }
  else
  {
    uint64_t v20 = 0;
  }
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithTitle_style_target_action_, v15, 0, v20, sel_done);

  swift_unknownObjectRelease();
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_241DAB0A0();
    swift_bridgeObjectRelease();
    uint64_t v23 = v26 + 2;
    if (!__OFADD__(v26, 2))
    {
LABEL_14:
      sub_241D74D40(v23, 1);
      sub_241DAAB10();
      id v12 = v12;
      MEMORY[0x2456396D0]();
      if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_15;
      }
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v22 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v23 = v22 + 2;
    if (!__OFADD__(v22, 2)) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_21:
  sub_241DAAB20();
LABEL_15:
  sub_241DAAB30();
  sub_241DAAB10();
  id v24 = v21;
  MEMORY[0x2456396D0]();
  if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_241DAAB20();
  }
  sub_241DAAB30();
  sub_241DAAB10();

  return v29;
}

uint64_t sub_241D739D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241DA99A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_241D74C48(0, &qword_268D4C9B0, type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v24[-v7 - 8];
  uint64_t v9 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_241DAA090();
  if (!v25)
  {
    sub_241D2AE50((uint64_t)v24);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    return sub_241D74AFC((uint64_t)v8);
  }
  sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
  int v13 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, v13 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_241D74AFC((uint64_t)v8);
  }
  sub_241D74B88((uint64_t)v8, (uint64_t)v12);
  sub_241DAA0A0();
  if (v14)
  {
    v24[0] = v12[*(int *)(v9 + 40)];
    sub_241D3C100();
    sub_241DA9950();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x263F43898])
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
      uint64_t v15 = *(void *)v5;
      uint64_t v16 = *((void *)v5 + 1);

      uint64_t v17 = *(void (**)(uint64_t, uint64_t, char *, void *, void (*)(char), void *))&v12[*(int *)(v9 + 24)];
      if (v17)
      {
        uint64_t v18 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v19 = (void *)swift_allocObject();
        void v19[2] = v18;
        v19[3] = v15;
        v19[4] = v16;
        uint64_t v20 = v1 + qword_268D4C998;
        swift_beginAccess();
        id v21 = (void *)MEMORY[0x24563A650](v20);
        sub_241D64FB8((uint64_t)v17);
        swift_bridgeObjectRetain();
        v17(v15, v16, v12, v21, sub_241D74D24, v19);
        sub_241D74D30((uint64_t)v17);
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        sub_241DAA0B0();
        swift_bridgeObjectRelease();
      }
      return sub_241D74BEC((uint64_t)v12);
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_241DAA0B0();
  return sub_241D74BEC((uint64_t)v12);
}

void sub_241D73E24(char a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  if (a1)
  {
    swift_beginAccess();
    uint64_t v3 = MEMORY[0x24563A650](v2);
    if (!v3) {
      return;
    }
    uint64_t v4 = (void *)v3;
    sub_241DAA0B0();
    goto LABEL_8;
  }
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x24563A650](v2);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_241DAA0B0();
  }
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x24563A650](v2);
  if (v7)
  {
    uint64_t v4 = (void *)v7;
    sub_241DAA080();
LABEL_8:
  }
}

uint64_t sub_241D73EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_241DA99A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_241D74C48(0, &qword_268D4C9B0, type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v20[-v10 - 8];
  uint64_t v12 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!a4) {
    return 1;
  }
  sub_241DAA090();
  if (!v21)
  {
    sub_241D2AE50((uint64_t)v20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_6;
  }
  sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
  int v16 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, v16 ^ 1u, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_6:
    sub_241D74AFC((uint64_t)v11);
    return 1;
  }
  sub_241D74B88((uint64_t)v11, (uint64_t)v15);
  v20[0] = v15[*(int *)(v12 + 40)];
  sub_241D3C100();
  sub_241DA9950();
  sub_241D74BEC((uint64_t)v15);
  BOOL v17 = (*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) != *MEMORY[0x263F43888];
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v17;
}

id sub_241D741FC(void *a1, double a2, double a3, double a4, double a5)
{
  swift_unknownObjectWeakInit();
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
  return objc_msgSendSuper2(&v11, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_241D74284(void *a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakInit();
  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

uint64_t sub_241D742E4()
{
  return swift_unknownObjectWeakDestroy();
}

id sub_241D742F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241D7432C()
{
  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_241D7433C()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
}

uint64_t sub_241D74344()
{
  uint64_t v1 = v0 + qword_268D4C998;
  swift_beginAccess();
  return MEMORY[0x24563A650](v1);
}

void sub_241D74390(void *a1)
{
}

void (*sub_241D743E8(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = qword_268D4C998;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x24563A650](v5);
  return sub_241D3F8DC;
}

uint64_t sub_241D7446C()
{
  uint64_t v0 = sub_241DA99A0();
  uint64_t v34 = *(void *)(v0 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  uint64_t v33 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v28 - v3;
  sub_241D74C48(0, &qword_268D4C9B0, type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v28 - v6;
  uint64_t v8 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  objc_super v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_241DAA0A0();
  if (!v13) {
    return result;
  }
  sub_241DAA090();
  if (!v36)
  {
    sub_241D2AE50((uint64_t)v35);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_8;
  }
  sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
  int v14 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, v14 ^ 1u, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return sub_241D74AFC((uint64_t)v7);
  }
  sub_241D74B88((uint64_t)v7, (uint64_t)v11);
  int v32 = v11[*(int *)(v8 + 40)];
  v35[0] = v32;
  unint64_t v15 = sub_241D3C100();
  sub_241DA9950();
  swift_bridgeObjectRelease();
  uint64_t v16 = v34;
  BOOL v17 = *(uint64_t (**)(char *, uint64_t))(v34 + 88);
  int v18 = v17(v4, v0);
  if (v18 == *MEMORY[0x263F43898])
  {
    int v30 = v18;
    uint64_t v31 = v17;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v16 + 96);
    v28[1] = v16 + 96;
    void v28[2] = v15;
    v28[0] = v19;
    v19(v4, v0);
    uint64_t v20 = (void *)*((void *)v4 + 3);
    swift_bridgeObjectRelease();

    sub_241D3C154();
    uint64_t v21 = (void *)sub_241DAADE0();
    sub_241D74C48(0, &qword_268D4C9B8, MEMORY[0x263F437C8], MEMORY[0x263F8E0F8]);
    sub_241DA9930();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241DB2C80;
    sub_241DA9920();
    char v22 = v32;
    id v23 = sub_241D3B4D0(v32);
    id v29 = v21;
    id v24 = objc_msgSend(v23, sel_stringFromNumber_, v21);
    if (v24)
    {
      uint64_t v25 = v24;
      sub_241DAA990();

      v35[0] = v22;
      uint64_t v26 = v33;
      sub_241DA9940();
      swift_bridgeObjectRelease();
      uint64_t v16 = v34;
      swift_bridgeObjectRelease();
    }
    else
    {

      uint64_t v26 = v33;
      (*(void (**)(char *, void, uint64_t))(v16 + 104))(v33, *MEMORY[0x263F43890], v0);
      swift_bridgeObjectRelease();
    }
    int v27 = v31(v26, v0);
    if (v27 == v30)
    {
      ((void (*)(char *, uint64_t))v28[0])(v26, v0);

      sub_241DAA0B0();
      swift_bridgeObjectRelease();
      return sub_241D74BEC((uint64_t)v11);
    }
    else
    {
      sub_241D74BEC((uint64_t)v11);

      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v26, v0);
    }
  }
  else
  {
    sub_241D74BEC((uint64_t)v11);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v4, v0);
  }
}

void sub_241D74A1C(void *a1)
{
  id v1 = a1;
  sub_241D7446C();
}

id sub_241D74A64(void *a1)
{
  return objc_msgSend(a1, sel_endEditing_, 1);
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4C9C0);
}

void sub_241D74A94(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241D2B54C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241D74AFC(uint64_t a1)
{
  sub_241D74C48(0, &qword_268D4C9B0, type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241D74B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241D74BEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241D74C48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241D74CAC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D74CE4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241D74D24(char a1)
{
  sub_241D73E24(a1, *(void *)(v1 + 16));
}

uint64_t sub_241D74D30(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_241D74D40(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_241DAB0A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x245639BF0](v7, v9, a2 & 1, v5);
  *uint64_t v2 = result;
  return result;
}

void *sub_241D74E00(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241DA97B0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    int v14 = (void *)((char *)v4 + v13);
    unint64_t v15 = (void *)((char *)a2 + v13);
    if (*v15)
    {
      uint64_t v16 = v15[1];
      void *v14 = *v15;
      v14[1] = v16;
      swift_retain();
    }
    else
    {
      *(_OWORD *)int v14 = *(_OWORD *)v15;
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)((char *)v4 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    if (*v20)
    {
      uint64_t v21 = v20[1];
      void *v19 = *v20;
      v19[1] = v21;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    }
    uint64_t v22 = a3[8];
    id v23 = (void *)((char *)v4 + v22);
    id v24 = (void *)((char *)a2 + v22);
    if (*v24)
    {
      uint64_t v25 = v24[1];
      void *v23 = *v24;
      v23[1] = v25;
      swift_retain();
    }
    else
    {
      *(_OWORD *)id v23 = *(_OWORD *)v24;
    }
    uint64_t v26 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v4 + v26) = *((unsigned char *)a2 + v26);
    uint64_t v27 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    uint64_t v28 = (void *)((char *)v4 + v27);
    id v29 = (void *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    void *v28 = *v29;
    v28[1] = v30;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_241D74FB0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_241DA97B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  if (*(void *)(a1 + a2[6])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[7])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[8])) {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

void *sub_241D75088(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241DA97B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  int v14 = (void *)((char *)a2 + v12);
  if (*v14)
  {
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  if (*v18)
  {
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  if (*v22)
  {
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  uint64_t v24 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
  uint64_t v25 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  void *v26 = *v27;
  v26[1] = v28;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_241D751E8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241DA97B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)((char *)a1 + v10);
  uint64_t v14 = *(void *)((char *)a2 + v10);
  if (v13)
  {
    if (v14)
    {
      uint64_t v15 = *((void *)v12 + 1);
      *uint64_t v11 = v14;
      v11[1] = v15;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v14)
  {
    uint64_t v16 = *((void *)v12 + 1);
    *uint64_t v11 = v14;
    v11[1] = v16;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
LABEL_8:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)((char *)a1 + v17);
  uint64_t v21 = *(void *)((char *)a2 + v17);
  if (v20)
  {
    if (v21)
    {
      uint64_t v22 = *((void *)v19 + 1);
      void *v18 = v21;
      v18[1] = v22;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v21)
  {
    uint64_t v23 = *((void *)v19 + 1);
    void *v18 = v21;
    v18[1] = v23;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
LABEL_15:
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)((char *)a1 + v24);
  uint64_t v28 = *(void *)((char *)a2 + v24);
  if (!v27)
  {
    if (v28)
    {
      uint64_t v30 = *((void *)v26 + 1);
      void *v25 = v28;
      v25[1] = v30;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    goto LABEL_22;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v29 = *((void *)v26 + 1);
  void *v25 = v28;
  v25[1] = v29;
  swift_retain();
  swift_release();
LABEL_22:
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v31 = a3[12];
  int v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  *int v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_241D753F0(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241DA97B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  uint64_t v13 = *v12;
  if (*v12)
  {
    uint64_t v14 = v12[1];
    *uint64_t v11 = v13;
    v11[1] = v14;
  }
  else
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (uint64_t *)((char *)a2 + v15);
  uint64_t v18 = *v17;
  if (*v17)
  {
    uint64_t v19 = v17[1];
    void *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (uint64_t *)((char *)a2 + v20);
  uint64_t v23 = *v22;
  if (*v22)
  {
    uint64_t v24 = v22[1];
    void *v21 = v23;
    v21[1] = v24;
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  uint64_t v25 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
  uint64_t v26 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v26) = *(_OWORD *)((char *)a2 + v26);
  return a1;
}

void *sub_241D7551C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241DA97B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)((char *)a1 + v11);
  uint64_t v15 = *(void *)((char *)a2 + v11);
  if (v14)
  {
    if (v15)
    {
      uint64_t v16 = *((void *)v13 + 1);
      *uint64_t v12 = v15;
      v12[1] = v16;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v15)
  {
    uint64_t v17 = *((void *)v13 + 1);
    *uint64_t v12 = v15;
    v12[1] = v17;
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
LABEL_8:
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)((char *)a1 + v18);
  uint64_t v22 = *(void *)((char *)a2 + v18);
  if (v21)
  {
    if (v22)
    {
      uint64_t v23 = *((void *)v20 + 1);
      void *v19 = v22;
      v19[1] = v23;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v22)
  {
    uint64_t v24 = *((void *)v20 + 1);
    void *v19 = v22;
    v19[1] = v24;
    goto LABEL_15;
  }
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
LABEL_15:
  uint64_t v25 = a3[8];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a1 + v25);
  uint64_t v29 = *(void *)((char *)a2 + v25);
  if (!v28)
  {
    if (v29)
    {
      uint64_t v31 = *((void *)v27 + 1);
      void *v26 = v29;
      v26[1] = v31;
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    goto LABEL_22;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v30 = *((void *)v27 + 1);
  void *v26 = v29;
  v26[1] = v30;
  swift_release();
LABEL_22:
  uint64_t v32 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v32) = *((unsigned char *)a2 + v32);
  uint64_t v33 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  void *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241D756D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241D756EC);
}

uint64_t sub_241D756EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_241DA97B0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241D7579C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241D757B0);
}

uint64_t sub_241D757B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_241DA97B0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_241D75858()
{
  uint64_t result = sub_241DA97B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_241D75924()
{
  unint64_t result = qword_268D4B6A0;
  if (!qword_268D4B6A0)
  {
    type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4B6A0);
  }
  return result;
}

unint64_t sub_241D7597C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_241D78538();
  uint64_t v2 = sub_241DAB0D0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_241D785A4(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_241DA3428(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_241D28BE4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_241D75AA4(uint64_t a1)
{
  return sub_241D75B34(a1, (void (*)(void))sub_241D78608, &qword_268D4CA18, type metadata accessor for OpenExternalURLOptionsKey, (uint64_t (*)(uint64_t))sub_241DA350C);
}

unint64_t sub_241D75AEC(uint64_t a1)
{
  return sub_241D75B34(a1, (void (*)(void))sub_241D787C4, (unint64_t *)&qword_268D4CA00, type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_241DA35E4);
}

unint64_t sub_241D75B34(uint64_t a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    char v10 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v9 = sub_241DAB0D0();
  char v10 = (void *)v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  uint64_t v12 = v9 + 64;
  uint64_t v13 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_241D786F0(v13, (uint64_t)&v20, a3, a4);
    uint64_t v14 = v20;
    unint64_t result = a5(v20);
    if (v16) {
      break;
    }
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v10[6] + 8 * result) = v14;
    unint64_t result = (unint64_t)sub_241D28BE4(&v21, (_OWORD *)(v10[7] + 32 * result));
    uint64_t v17 = v10[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    void v10[2] = v19;
    v13 += 40;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_241D75C78()
{
  qword_268D50EB0 = 0x4062600000000000;
}

void sub_241D75C8C()
{
  qword_268D50EB8 = 0x3FF0000000000000;
}

void sub_241D75C9C()
{
  qword_268D50EC0 = 0x4020000000000000;
}

void sub_241D75CAC()
{
  qword_268D50EC8 = 0x4008000000000000;
}

void sub_241D75CBC()
{
  qword_268D50ED0 = 0x3FF0000000000000;
}

void sub_241D75CCC()
{
  qword_268D50ED8 = 0x4024000000000000;
}

void sub_241D75CDC()
{
  qword_268D50EE0 = 0x4000000000000000;
}

double RangeView.range.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range;
  swift_beginAccess();
  return *(double *)v1;
}

id RangeView.range.setter(double a1, double a2)
{
  uint64_t v5 = (double *)&v2[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  double v6 = *(double *)&v2[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value];
  if (v6 < a1 || v6 > a2)
  {
    if (v6 <= a1) {
      double v6 = a1;
    }
    if (v6 > a2) {
      double v6 = a2;
    }
    *(double *)&v2[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value] = v6;
  }
  return objc_msgSend(v2, sel_setNeedsDisplay);
}

void (*RangeView.range.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_241D75E34;
}

void sub_241D75E34(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = (char *)v3[3];
    uint64_t v5 = (double *)&v4[v3[4]];
    double v7 = *v5;
    double v6 = v5[1];
    double v8 = *(double *)&v4[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value];
    if (*v5 > v8 || v8 > v6)
    {
      if (v8 > v7) {
        double v7 = *(double *)&v4[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value];
      }
      if (v6 >= v7) {
        double v6 = v7;
      }
      *(double *)&v4[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value] = v6;
      uint64_t v4 = (char *)v3[3];
    }
    objc_msgSend(v4, sel_setNeedsDisplay);
  }

  free(v3);
}

double RangeView.value.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value);
}

id RangeView.value.setter(double a1)
{
  uint64_t v3 = (double *)&v1[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  swift_beginAccess();
  double v4 = *v3;
  if (*v3 < a1) {
    double v4 = a1;
  }
  if (v3[1] < v4) {
    double v4 = v3[1];
  }
  *(double *)&v1[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value] = v4;
  return objc_msgSend(v1, sel_setNeedsDisplay);
}

void (*RangeView.value.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value;
  v3[7] = v1;
  v3[8] = v4;
  v3[6] = *(void *)(v1 + v4);
  return sub_241D75FAC;
}

void sub_241D75FAC(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  double v2 = *(double *)(*(void *)a1 + 48);
  uint64_t v3 = *(char **)(*(void *)a1 + 56);
  uint64_t v4 = (double *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  swift_beginAccess();
  double v6 = *v4;
  if (v2 > *v4) {
    double v6 = v2;
  }
  if (v4[1] < v6) {
    double v6 = v4[1];
  }
  *(double *)&v3[v5] = v6;
  objc_msgSend(v3, sel_setNeedsDisplay);

  free(v1);
}

uint64_t RangeView.minimumFractionDigits.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits;
  swift_beginAccess();
  return *(void *)v1;
}

id RangeView.minimumFractionDigits.setter(uint64_t a1)
{
  return sub_241D76168(a1, &OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits);
}

uint64_t (*RangeView.minimumFractionDigits.modify(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241D76110;
}

uint64_t RangeView.maximumFractionDigits.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_maximumFractionDigits;
  swift_beginAccess();
  return *(void *)v1;
}

id RangeView.maximumFractionDigits.setter(uint64_t a1)
{
  return sub_241D76168(a1, &OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_maximumFractionDigits);
}

id sub_241D76168(uint64_t a1, void *a2)
{
  uint64_t v4 = &v2[*a2];
  swift_beginAccess();
  *(void *)uint64_t v4 = a1;
  return objc_msgSend(v2, sel_setNeedsDisplay);
}

uint64_t (*RangeView.maximumFractionDigits.modify(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241D76110;
}

uint64_t RangeView.showsPositivePrefix.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix);
  swift_beginAccess();
  return *v1;
}

id RangeView.showsPositivePrefix.setter(char a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
  swift_beginAccess();
  *uint64_t v3 = a1;
  return objc_msgSend(v1, sel_setNeedsDisplay);
}

uint64_t (*RangeView.showsPositivePrefix.modify(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241D76110;
}

id sub_241D76334(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    return objc_msgSend(v5, sel_setNeedsDisplay);
  }
  return result;
}

id RangeView.intrinsicContentSize.getter()
{
  return objc_msgSend(v0, sel_sizeThatFits_, 0.0, 0.0);
}

id RangeView.__allocating_init(range:value:)(double a1, double a2, double a3)
{
  id v7 = objc_allocWithZone(v3);
  return RangeView.init(range:value:)(a1, a2, a3);
}

id RangeView.init(range:value:)(double a1, double a2, double a3)
{
  *(void *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits] = 0;
  *(void *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_maximumFractionDigits] = 2;
  v3[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix] = 0;
  uint64_t v4 = (double *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  *uint64_t v4 = a1;
  v4[1] = a2;
  if (a3 > a1) {
    a1 = a3;
  }
  if (a1 > a2) {
    a1 = a2;
  }
  *(double *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value] = a1;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for RangeView();
  id v5 = objc_msgSendSuper2(&v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  double v6 = self;
  id v7 = v5;
  id v8 = objc_msgSend(v6, sel_clearColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v8);

  return v7;
}

uint64_t type metadata accessor for RangeView()
{
  return self;
}

id RangeView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void RangeView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits] = 0;
  *(void *)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_maximumFractionDigits] = 2;
  v0[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix] = 0;

  sub_241DAB080();
  __break(1u);
}

Swift::Void __swiftcall RangeView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for RangeView();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  objc_msgSend(v0, sel_setNeedsDisplay);
}

id sub_241D76770(char a1, double a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  if (a1)
  {
    double v6 = (void *)(v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits);
    swift_beginAccess();
    objc_msgSend(v5, sel_setMinimumFractionDigits_, *v6);
    id v7 = (void *)(v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_maximumFractionDigits);
    swift_beginAccess();
    objc_msgSend(v5, sel_setMaximumFractionDigits_, *v7);
  }
  id v8 = (unsigned char *)(v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix);
  swift_beginAccess();
  if (*v8 == 1)
  {
    id v9 = objc_msgSend(v5, sel_plusSign);
    objc_msgSend(v5, sel_setPositivePrefix_, v9);
  }
  id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a2);
  id v11 = objc_msgSend(v5, sel_stringFromNumber_, v10);

  if (!v11)
  {
    sub_241D28BF4(0, (unint64_t *)&qword_268D4C918);
    id v11 = (id)sub_241DAAE10();
  }

  return v11;
}

Swift::Void __swiftcall RangeView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  uint64_t v2 = v1;
  Class isa = a1.value.super.isa;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for RangeView();
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, isa);
  id v4 = objc_msgSend(v2, sel_traitCollection);
  id v5 = v4;
  if (!isa)
  {
    if (!v4) {
      return;
    }

    goto LABEL_7;
  }
  if (!v4
    || (sub_241D28BF4(0, &qword_268D4C9F8),
        double v6 = isa,
        char v7 = sub_241DAAE00(),
        v6,
        v6,
        v5,
        (v7 & 1) == 0))
  {
LABEL_7:
    objc_msgSend(v2, sel_invalidateIntrinsicContentSize);
    objc_msgSend(v2, sel_setNeedsDisplay);
  }
}

Swift::Void __swiftcall RangeView.draw(_:)(CGRect a1)
{
  CGFloat height = a1.size.height;
  CGFloat width = a1.size.width;
  CGFloat y = a1.origin.y;
  CGFloat x = a1.origin.x;
  double v6 = UIGraphicsGetCurrentContext();
  if (v6)
  {
    char v7 = v6;
    double v8 = sub_241D76E38(x, y, width, height);
    UIGraphicsPushContext(v7);
    id v9 = sub_241D76770(1, *(double *)(v1 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value));
    sub_241D781D0();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241DB2C60;
    id v11 = (void *)*MEMORY[0x263F814F0];
    *(void *)(inited + 32) = *MEMORY[0x263F814F0];
    uint64_t v12 = sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
    id v13 = v11;
    *(void *)(inited + 40) = sub_241DAADA0();
    uint64_t v14 = (void *)*MEMORY[0x263F81500];
    *(void *)(inited + 64) = v12;
    *(void *)(inited + 72) = v14;
    uint64_t v15 = self;
    id v16 = v14;
    id v17 = objc_msgSend(v15, sel_labelColor);
    *(void *)(inited + 104) = sub_241D28BF4(0, &qword_268D4D1E0);
    *(void *)(inited + 80) = v17;
    sub_241D75B34(inited, (void (*)(void))sub_241D787C4, (unint64_t *)&qword_268D4CA00, type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_241DA35E4);
    type metadata accessor for Key(0);
    sub_241D786A8((unint64_t *)&qword_268D4B4F0, type metadata accessor for Key);
    BOOL v18 = (void *)sub_241DAA910();
    objc_msgSend(v9, sel_sizeWithAttributes_, v18);
    double v20 = v19;
    double v22 = v21;

    v28.origin.CGFloat x = x;
    v28.origin.CGFloat y = y;
    v28.size.CGFloat width = width;
    v28.size.CGFloat height = height;
    double v23 = CGRectGetWidth(v28) - v20;
    double v24 = 0.0;
    if (v8 + v20 * -0.5 > 0.0) {
      double v24 = v8 + v20 * -0.5;
    }
    if (v23 >= v24) {
      double v25 = v24;
    }
    else {
      double v25 = v23;
    }
    uint64_t v26 = (void *)sub_241DAA910();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_drawAtPoint_withAttributes_, v26, v25, y);

    UIGraphicsPopContext();
    double v27 = sub_241D76F80(v7, x, y, width, height, v22);
    sub_241D78244(v7, v8, v27);
    sub_241D77244(v7, x, y, width, height);
  }
}

double sub_241D76E38(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  id v9 = (double *)&v4[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  swift_beginAccess();
  double v10 = *(double *)&v4[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value];
  double v12 = *v9;
  double v11 = v9[1];
  v20.origin.CGFloat x = a1;
  v20.origin.CGFloat y = a2;
  v20.size.CGFloat width = a3;
  v20.size.CGFloat height = a4;
  double Width = CGRectGetWidth(v20);
  if (qword_268D4B4A0 != -1) {
    swift_once();
  }
  double v14 = Width - *(double *)&qword_268D50ED8;
  double v15 = vabdd_f64(v12, v10) / (fabs(v12) + fabs(v11));
  id v16 = objc_msgSend(v4, sel_traitCollection);
  id v17 = objc_msgSend(v16, sel_layoutDirection);

  double v18 = 1.0 - v15;
  if (v17 != (id)1) {
    double v18 = v15;
  }
  return v14 * v18 + *(double *)&qword_268D50ED8 * 0.5;
}

double sub_241D76F80(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6)
{
  char v7 = v6;
  uint64_t v14 = sub_241DA9890();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268D4B480 != -1) {
    swift_once();
  }
  double v18 = *(double *)&qword_268D50EB8;
  v31.origin.CGFloat x = a2;
  v31.origin.CGFloat y = a3;
  v31.size.CGFloat width = a4;
  v31.size.CGFloat height = a5;
  double Width = CGRectGetWidth(v31);
  if (qword_268D4B488 != -1) {
    swift_once();
  }
  double v20 = a3 + a6 + v18;
  id v21 = objc_msgSend(self, sel_bezierPathWithRoundedRect_cornerRadius_, a2, v20, Width, *(double *)&qword_268D50EC0, *(double *)&qword_268D50EC0 * 0.5);
  id v22 = objc_msgSend(v7, sel_traitCollection);
  id v23 = objc_msgSend(v22, sel_userInterfaceStyle);

  double v24 = self;
  double v25 = &selRef_tertiarySystemFillColor;
  if (v23 != (id)2) {
    double v25 = &selRef_systemGray5Color;
  }
  id v26 = [v24 *v25];
  double v27 = (CGColor *)objc_msgSend(v26, sel_CGColor);
  CGContextSetFillColorWithColor(a1, v27);

  CGRect v28 = (const CGPath *)objc_msgSend(v21, sel_CGPath);
  CGContextAddPath(a1, v28);

  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F00040], v14);
  sub_241DAAB80();

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v20;
}

void sub_241D77244(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  UIGraphicsPushContext(a1);
  double v10 = (double *)&v5[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  swift_beginAccess();
  double v11 = *v10;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  id v55 = v5;
  id v13 = &v5[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
  swift_beginAccess();
  if (*v13 == 1)
  {
    id v14 = objc_msgSend(v12, sel_plusSign);
    objc_msgSend(v12, sel_setPositivePrefix_, v14);
  }
  id v15 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v11);
  id v16 = objc_msgSend(v12, sel_stringFromNumber_, v15);

  if (!v16)
  {
    sub_241D28BF4(0, (unint64_t *)&qword_268D4C918);
    id v16 = (id)sub_241DAAE10();
  }

  double v17 = v10[1];
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  double v19 = v18;
  if (*v13 == 1)
  {
    id v20 = objc_msgSend(v18, sel_plusSign);
    objc_msgSend(v19, sel_setPositivePrefix_, v20);
  }
  id v21 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v17);
  id v22 = objc_msgSend(v19, sel_stringFromNumber_, v21);

  if (!v22)
  {
    sub_241D28BF4(0, (unint64_t *)&qword_268D4C918);
    id v22 = (id)sub_241DAAE10();
  }

  sub_241D781D0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241DB2C60;
  double v24 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v25 = sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  id v26 = v24;
  *(void *)(inited + 40) = sub_241DAADA0();
  double v27 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v25;
  *(void *)(inited + 72) = v27;
  CGRect v28 = self;
  id v29 = v27;
  id v30 = objc_msgSend(v28, sel_secondaryLabelColor);
  *(void *)(inited + 104) = sub_241D28BF4(0, &qword_268D4D1E0);
  *(void *)(inited + 80) = v30;
  sub_241D75B34(inited, (void (*)(void))sub_241D787C4, (unint64_t *)&qword_268D4CA00, type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_241DA35E4);
  type metadata accessor for Key(0);
  sub_241D786A8((unint64_t *)&qword_268D4B4F0, type metadata accessor for Key);
  CGRect v31 = (void *)sub_241DAA910();
  objc_msgSend(v16, sel_sizeWithAttributes_, v31);
  double v54 = v32;
  double v34 = v33;

  uint64_t v35 = (void *)sub_241DAA910();
  objc_msgSend(v22, sel_sizeWithAttributes_, v35);
  double v37 = v36;
  double v39 = v38;

  v56.origin.CGFloat x = a2;
  v56.origin.CGFloat y = a3;
  v56.size.CGFloat width = a4;
  v56.size.CGFloat height = a5;
  CGFloat Height = CGRectGetHeight(v56);
  if (qword_268D4B498 != -1) {
    swift_once();
  }
  double v40 = *(double *)&qword_268D50ED0;
  id v41 = objc_msgSend(v55, sel_traitCollection, *(void *)&Height);
  id v42 = objc_msgSend(v41, sel_layoutDirection);

  v57.origin.CGFloat x = a2;
  v57.origin.CGFloat y = a3;
  v57.size.CGFloat width = a4;
  v57.size.CGFloat height = a5;
  CGFloat Width = CGRectGetWidth(v57);
  double v44 = Width - v37;
  double v45 = Width - v54;
  if (v42 == (id)1) {
    double v44 = -0.0;
  }
  double v46 = v44 + a2;
  if (v42 != (id)1) {
    double v45 = -0.0;
  }
  double v47 = v45 + a2;
  if (v34 > v39) {
    double v48 = v34;
  }
  else {
    double v48 = v39;
  }
  double v49 = v53 - v48 - v40 + a3;
  uint64_t v50 = (void *)sub_241DAA910();
  objc_msgSend(v16, sel_drawAtPoint_withAttributes_, v50, v47, v49);

  uint64_t v51 = (void *)sub_241DAA910();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_drawAtPoint_withAttributes_, v51, v46, v49);

  UIGraphicsPopContext();
}

id RangeView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void RangeView.init(frame:)()
{
}

id RangeView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RangeView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_241D778E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  sub_241D78478();
  id v3 = (void *)sub_241DAB0D0();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  id v5 = *(void **)(a1 + 40);
  unint64_t result = sub_241DA34A0(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v16 = v5;
    return (unint64_t)v3;
  }
  double v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    id v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    id v13 = (void *)*v8;
    id v14 = v5;
    unint64_t result = sub_241DA34A0(v4);
    double v8 = v12;
    id v5 = v13;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void _s21VisionHealthAppPlugin9RangeViewC12sizeThatFitsySo6CGSizeVAFF_0()
{
  uint64_t v1 = (double *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range);
  swift_beginAccess();
  double v2 = *v1;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  uint64_t v37 = v0;
  unsigned __int8 v4 = (unsigned char *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix);
  swift_beginAccess();
  if (*v4 == 1)
  {
    id v5 = objc_msgSend(v3, sel_plusSign);
    objc_msgSend(v3, sel_setPositivePrefix_, v5);
  }
  id v6 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v2);
  id v7 = objc_msgSend(v3, sel_stringFromNumber_, v6);

  if (!v7)
  {
    sub_241D28BF4(0, (unint64_t *)&qword_268D4C918);
    id v7 = (id)sub_241DAAE10();
  }

  sub_241D781D0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241DB2C60;
  uint64_t v9 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v10 = sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  id v11 = v9;
  *(void *)(inited + 40) = sub_241DAADA0();
  id v12 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v12;
  id v13 = self;
  id v35 = v12;
  id v36 = v13;
  id v14 = objc_msgSend(v13, sel_secondaryLabelColor);
  uint64_t v15 = sub_241D28BF4(0, &qword_268D4D1E0);
  *(void *)(inited + 104) = v15;
  *(void *)(inited + 80) = v14;
  sub_241D75B34(inited, (void (*)(void))sub_241D787C4, (unint64_t *)&qword_268D4CA00, type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_241DA35E4);
  type metadata accessor for Key(0);
  sub_241D786A8((unint64_t *)&qword_268D4B4F0, type metadata accessor for Key);
  id v16 = (void *)sub_241DAA910();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_sizeWithAttributes_, v16);

  double v17 = v1[1];
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), (SEL)&off_2650F7618);
  double v19 = v18;
  if (*v4 == 1)
  {
    id v20 = objc_msgSend(v18, sel_plusSign);
    objc_msgSend(v19, sel_setPositivePrefix_, v20);
  }
  uint64_t v21 = v15;
  id v22 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v17);
  id v23 = objc_msgSend(v19, sel_stringFromNumber_, v22);

  if (!v23)
  {
    sub_241D28BF4(0, (unint64_t *)&qword_268D4C918);
    id v23 = (id)sub_241DAAE10();
  }

  uint64_t v24 = swift_initStackObject();
  *(_OWORD *)(v24 + 16) = xmmword_241DB2C60;
  *(void *)(v24 + 32) = v11;
  id v34 = v11;
  *(void *)(v24 + 40) = sub_241DAADA0();
  *(void *)(v24 + 64) = v10;
  *(void *)(v24 + 72) = v35;
  id v25 = v35;
  id v26 = objc_msgSend(v36, sel_secondaryLabelColor);
  *(void *)(v24 + 104) = v21;
  *(void *)(v24 + 80) = v26;
  sub_241D75B34(v24, (void (*)(void))sub_241D787C4, (unint64_t *)&qword_268D4CA00, type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_241DA35E4);
  double v27 = (void *)sub_241DAA910();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_sizeWithAttributes_, v27);

  if (qword_268D4B478 != -1) {
    swift_once();
  }
  id v28 = sub_241D76770(1, *(double *)(v37 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value));
  uint64_t v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = xmmword_241DB2C60;
  *(void *)(v29 + 32) = v34;
  id v30 = v34;
  *(void *)(v29 + 40) = sub_241DAADA0();
  *(void *)(v29 + 64) = v10;
  *(void *)(v29 + 72) = v25;
  id v31 = v25;
  id v32 = objc_msgSend(v36, sel_labelColor);
  *(void *)(v29 + 104) = v21;
  *(void *)(v29 + 80) = v32;
  sub_241D75B34(v29, (void (*)(void))sub_241D787C4, (unint64_t *)&qword_268D4CA00, type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_241DA35E4);
  double v33 = (void *)sub_241DAA910();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_sizeWithAttributes_, v33);

  if (qword_268D4B480 != -1) {
    swift_once();
  }
  if (qword_268D4B488 != -1) {
    swift_once();
  }
  if (qword_268D4B490 != -1) {
    swift_once();
  }
  if (qword_268D4B498 != -1) {
    swift_once();
  }
}

void sub_241D781D0()
{
  if (!qword_268D4D1D0)
  {
    sub_241D7875C(255, (unint64_t *)&qword_268D4CA00, type metadata accessor for Key);
    unint64_t v0 = sub_241DAB130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4D1D0);
    }
  }
}

void sub_241D78244(CGContextRef c, double a2, CGFloat a3)
{
  unsigned __int8 v4 = v3;
  if (qword_268D4B4A0 != -1) {
    swift_once();
  }
  double v8 = *(double *)&qword_268D50ED8;
  if (qword_268D4B4A8 != -1) {
    swift_once();
  }
  double v9 = *(double *)&qword_268D50EE0;
  CGContextSetLineWidth(c, *(CGFloat *)&qword_268D50EE0);
  id v10 = objc_msgSend(v3, sel_traitCollection);
  id v11 = objc_msgSend(v10, sel_userInterfaceStyle);

  id v12 = self;
  if (v11 == (id)2) {
    id v13 = &selRef_whiteColor;
  }
  else {
    id v13 = &selRef_blackColor;
  }
  id v14 = [v12 *v13];
  id v15 = objc_msgSend(v4, sel_traitCollection);
  id v16 = objc_msgSend(v15, sel_userInterfaceStyle);

  double v17 = self;
  if (v16 == (id)2) {
    id v18 = &selRef_blackColor;
  }
  else {
    id v18 = &selRef_whiteColor;
  }
  id v22 = [v17 *v18];
  CGFloat v19 = v8 - v9;
  id v20 = (CGColor *)objc_msgSend(v14, sel_CGColor);
  CGContextSetFillColorWithColor(c, v20);

  uint64_t v21 = (CGColor *)objc_msgSend(v22, sel_CGColor);
  CGContextSetStrokeColorWithColor(c, v21);

  v24.origin.CGFloat x = a2 + v19 * -0.5;
  v24.origin.CGFloat y = a3;
  v24.size.CGFloat width = v19;
  v24.size.CGFloat height = v19;
  CGContextAddEllipseInRect(c, v24);
  CGContextDrawPath(c, kCGPathFillStroke);
}

void sub_241D78478()
{
  if (!qword_268D4CA08)
  {
    sub_241D725D8(255);
    sub_241D784E4();
    unint64_t v0 = sub_241DAB0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CA08);
    }
  }
}

unint64_t sub_241D784E4()
{
  unint64_t result = qword_268D4D3F0;
  if (!qword_268D4D3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4D3F0);
  }
  return result;
}

void sub_241D78538()
{
  if (!qword_268D4D3C0)
  {
    unint64_t v0 = sub_241DAB0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4D3C0);
    }
  }
}

uint64_t sub_241D785A4(uint64_t a1, uint64_t a2)
{
  sub_241D28B78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_241D78608()
{
  if (!qword_268D4CA10)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    sub_241D786A8((unint64_t *)&qword_268D4B568, type metadata accessor for OpenExternalURLOptionsKey);
    unint64_t v0 = sub_241DAB0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CA10);
    }
  }
}

uint64_t sub_241D786A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241D786F0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241D7875C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_241D7875C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_241D787C4()
{
  if (!qword_268D4CA20)
  {
    type metadata accessor for Key(255);
    sub_241D786A8((unint64_t *)&qword_268D4B4F0, type metadata accessor for Key);
    unint64_t v0 = sub_241DAB0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CA20);
    }
  }
}

uint64_t type metadata accessor for VisionPrescriptionRangeCell(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4CA68);
}

uint64_t sub_241D78884()
{
  return swift_initClassMetadata2();
}

id sub_241D788FC()
{
  return sub_241D78914(&qword_268D4CA58);
}

id sub_241D78908()
{
  return sub_241D78914(&qword_268D4CA60);
}

id sub_241D78914(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    uint64_t v5 = v1;
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
    id v7 = (void *)sub_241DAADA0();
    objc_msgSend(v6, sel_setFont_, v7);

    objc_msgSend(v6, sel_setTextAlignment_, 4);
    id v8 = objc_msgSend(self, sel_tertiaryLabelColor);
    objc_msgSend(v6, sel_setTextColor_, v8);

    objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
    double v9 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setText_, v9, 0xE000000000000000);

    id v10 = *(void **)(v5 + v2);
    *(void *)(v5 + v2) = v6;
    id v4 = v6;

    id v3 = 0;
  }
  id v11 = v3;
  return v4;
}

id sub_241D78B28(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = qword_268D4CA28;
  uint64_t v11 = MEMORY[0x263F8EE78];
  *(void *)&v4[qword_268D4CA28] = MEMORY[0x263F8EE78];
  id v12 = &v4[qword_268D4CA30];
  *(_OWORD *)id v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((void *)v12 + 4) = 0;
  uint64_t v13 = qword_268D4CA38;
  id v14 = objc_allocWithZone(MEMORY[0x263F828E0]);
  id v15 = v5;
  id v16 = objc_msgSend(v14, sel_init);
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  double v17 = (void *)sub_241DAADA0();
  objc_msgSend(v16, sel_setFont_, v17);

  objc_msgSend(v16, sel_setTextAlignment_, 4);
  objc_msgSend(v16, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(void *)&v5[v13] = v16;
  uint64_t v18 = qword_268D4CA40;
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v15[v18] = v19;
  uint64_t v20 = qword_268D4CA48;
  uint64_t v21 = (objc_class *)type metadata accessor for RangeView();
  id v22 = objc_allocWithZone(v21);
  id v23 = RangeView.init(range:value:)(0.0, 1.0, 0.0);
  objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v15[v20] = v23;
  uint64_t v24 = qword_268D4CA50;
  id v25 = objc_allocWithZone(v21);
  id v26 = RangeView.init(range:value:)(0.0, 1.0, 0.0);
  objc_msgSend(v26, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v15[v24] = v26;
  *(void *)&v15[qword_268D4CA58] = 0;
  *(void *)&v15[qword_268D4CA60] = 0;
  *(void *)&v5[v10] = v11;

  swift_bridgeObjectRelease();
  v33.receiver = v15;
  v33.super_class = (Class)type metadata accessor for VisionPrescriptionRangeCell(0);
  id v27 = objc_msgSendSuper2(&v33, sel_initWithFrame_, a1, a2, a3, a4);
  sub_241D7B048();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_241DB2C80;
  uint64_t v29 = sub_241DAA880();
  unint64_t v30 = sub_241D7B0EC();
  *(void *)(v28 + 32) = v29;
  *(void *)(v28 + 40) = v30;
  id v31 = v27;
  MEMORY[0x2456399C0](v28, sel_traitWidthDesignationDidChange);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  sub_241D794A0();

  return v31;
}

id sub_241D78E20(double a1, double a2, double a3, double a4)
{
  return sub_241D78B28(a1, a2, a3, a4);
}

void sub_241D78E44(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_241D7AE10();
}

void sub_241D78E6C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_241DAA2E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA290();
  id v6 = sub_241DAA2D0();
  os_log_type_t v7 = sub_241DAAC30();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    v13[1] = v1;
    double v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v10;
    *(_DWORD *)double v9 = 136315138;
    uint64_t v11 = sub_241DAB1F0();
    void v13[2] = sub_241D48854(v11, v12, &v14);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v6, v7, "[%s] Updating the constraints based on traitWidthDesignation changes", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v10, -1, -1);
    MEMORY[0x24563A5D0](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_241D790A8();
}

void sub_241D79060(void *a1)
{
  id v1 = a1;
  sub_241D78E6C();
}

void sub_241D790A8()
{
  id v1 = v0;
  uint64_t v2 = self;
  uint64_t v32 = qword_268D4CA28;
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v3);

  sub_241D2B5F0();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_241DB3050;
  id v5 = objc_msgSend(v1, sel_centerXAnchor);
  id v6 = objc_msgSend(*(id *)&v1[qword_268D4CA50], sel_trailingAnchor);
  os_log_type_t v7 = self;
  id v8 = objc_msgSend(v1, sel_traitCollection);
  uint64_t v9 = sub_241DAAD30();

  objc_msgSend(v7, sel_interItemSpacingForWidthDesignation_, v9);
  id v11 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, v10 * 0.5);

  *(void *)(v4 + 32) = v11;
  id v12 = objc_msgSend(v1, sel_centerXAnchor);
  id v13 = sub_241D78908();
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = objc_msgSend(v1, sel_traitCollection);
  uint64_t v16 = sub_241DAAD30();

  objc_msgSend(v7, sel_interItemSpacingForWidthDesignation_, v16);
  id v18 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, v17 * 0.5);

  *(void *)(v4 + 40) = v18;
  id v19 = objc_msgSend(*(id *)&v1[qword_268D4CA48], sel_leadingAnchor);
  id v20 = objc_msgSend(v1, sel_centerXAnchor);
  id v21 = objc_msgSend(v1, sel_traitCollection);
  uint64_t v22 = sub_241DAAD30();

  objc_msgSend(v7, sel_interItemSpacingForWidthDesignation_, v22);
  id v24 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, v23 * 0.5);

  *(void *)(v4 + 48) = v24;
  id v25 = sub_241D788FC();
  id v26 = objc_msgSend(v25, sel_leadingAnchor);

  id v27 = objc_msgSend(v1, sel_centerXAnchor);
  id v28 = objc_msgSend(v1, sel_traitCollection);
  uint64_t v29 = sub_241DAAD30();

  objc_msgSend(v7, sel_interItemSpacingForWidthDesignation_, v29);
  id v31 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, v30 * 0.5);

  *(void *)(v4 + 56) = v31;
  sub_241DAAB10();
  *(void *)&v1[v32] = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v33 = (id)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v33);
}

void sub_241D794A0()
{
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v0, sel_addSubview_, *(void *)&v0[qword_268D4CA38]);
  id v1 = *(void **)&v0[qword_268D4CA40];
  objc_msgSend(v0, sel_addSubview_, v1);
  objc_msgSend(v1, sel_addSubview_, *(void *)&v0[qword_268D4CA48]);
  id v2 = sub_241D788FC();
  objc_msgSend(v1, sel_addSubview_, v2);

  objc_msgSend(v1, sel_addSubview_, *(void *)&v0[qword_268D4CA50]);
  id v3 = sub_241D78908();
  objc_msgSend(v1, sel_addSubview_, v3);

  sub_241D79588();
}

void sub_241D79588()
{
  sub_241D790A8();
  long long v69 = self;
  sub_241D2B5F0();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_241DB4EE0;
  id v2 = *(void **)&v0[qword_268D4CA38];
  id v3 = objc_msgSend(v2, sel_topAnchor);
  id v4 = objc_msgSend(v0, (SEL)&off_2650F7530 + 3);
  id v5 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v4, 9.0);

  *(void *)(v1 + 32) = v5;
  id v6 = objc_msgSend(v2, sel_leadingAnchor);
  id v7 = objc_msgSend(v0, sel_leadingAnchor);
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v7, 16.0);

  *(void *)(v1 + 40) = v8;
  id v9 = objc_msgSend(v0, sel_trailingAnchor);
  id v10 = objc_msgSend(v2, byte_2650F7494);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, 16.0);

  *(void *)(v1 + 48) = v11;
  id v12 = *(void **)&v0[qword_268D4CA40];
  id v13 = objc_msgSend(v12, (SEL)&off_2650F7530 + 3);
  id v14 = objc_msgSend(v2, sel_bottomAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, 7.0);

  *(void *)(v1 + 56) = v15;
  id v16 = objc_msgSend(v12, sel_leadingAnchor);
  id v17 = objc_msgSend(v0, sel_leadingAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 16.0);

  *(void *)(v1 + 64) = v18;
  id v19 = objc_msgSend(v0, byte_2650F7494);
  id v20 = objc_msgSend(v12, byte_2650F7494);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, 16.0);

  *(void *)(v1 + 72) = v21;
  id v22 = objc_msgSend(v0, sel_bottomAnchor);
  id v23 = objc_msgSend(v12, sel_bottomAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 9.0);

  *(void *)(v1 + 80) = v24;
  id v25 = *(void **)&v0[qword_268D4CA50];
  id v26 = objc_msgSend(v25, sel_leadingAnchor);
  id v27 = objc_msgSend(v12, sel_leadingAnchor);
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  *(void *)(v1 + 88) = v28;
  id v29 = objc_msgSend(v25, sel_topAnchor);
  id v30 = objc_msgSend(v12, sel_topAnchor);
  id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  *(void *)(v1 + 96) = v31;
  id v32 = objc_msgSend(v25, sel_bottomAnchor);
  id v33 = objc_msgSend(v12, sel_bottomAnchor);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  *(void *)(v1 + 104) = v34;
  id v35 = sub_241D78908();
  id v36 = objc_msgSend(v35, sel_leadingAnchor);

  id v37 = objc_msgSend(v12, sel_leadingAnchor);
  id v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  *(void *)(v1 + 112) = v38;
  id v39 = sub_241D78908();
  id v40 = objc_msgSend(v39, sel_topAnchor);

  id v41 = objc_msgSend(v12, sel_topAnchor);
  id v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

  *(void *)(v1 + 120) = v42;
  id v43 = sub_241D78908();
  id v44 = objc_msgSend(v43, sel_bottomAnchor);

  id v45 = objc_msgSend(v12, sel_bottomAnchor);
  id v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v45);

  *(void *)(v1 + 128) = v46;
  double v47 = *(void **)&v0[qword_268D4CA48];
  id v48 = objc_msgSend(v47, sel_trailingAnchor);
  id v49 = objc_msgSend(v12, sel_trailingAnchor);
  id v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

  *(void *)(v1 + 136) = v50;
  id v51 = objc_msgSend(v47, sel_topAnchor);
  id v52 = objc_msgSend(v12, sel_topAnchor);
  id v53 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v52);

  *(void *)(v1 + 144) = v53;
  id v54 = objc_msgSend(v47, sel_bottomAnchor);
  id v55 = objc_msgSend(v12, sel_bottomAnchor);
  id v56 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v55);

  *(void *)(v1 + 152) = v56;
  id v57 = sub_241D788FC();
  id v58 = objc_msgSend(v57, sel_trailingAnchor);

  id v59 = objc_msgSend(v12, sel_trailingAnchor);
  id v60 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

  *(void *)(v1 + 160) = v60;
  id v61 = sub_241D788FC();
  id v62 = objc_msgSend(v61, sel_topAnchor);

  id v63 = objc_msgSend(v12, sel_topAnchor);
  id v64 = objc_msgSend(v62, sel_constraintEqualToAnchor_, v63);

  *(void *)(v1 + 168) = v64;
  id v65 = sub_241D788FC();
  id v66 = objc_msgSend(v65, sel_bottomAnchor);

  id v67 = objc_msgSend(v12, sel_bottomAnchor);
  id v68 = objc_msgSend(v66, sel_constraintEqualToAnchor_, v67);

  *(void *)(v1 + 176) = v68;
  sub_241DAAB10();
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
  id v70 = (id)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v69, sel_activateConstraints_, v70);
}

void sub_241D79DA8()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_241DAA2E0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = &v60[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  id v8 = &v60[-v7];
  uint64_t v9 = (uint64_t)&v1[qword_268D4CA30];
  swift_beginAccess();
  sub_241D2AED8(v9, (uint64_t)v65);
  if (!v65[3])
  {
    sub_241D2AE50((uint64_t)v65);
    goto LABEL_9;
  }
  sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
  type metadata accessor for VisionPrescriptionRangeItem(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_241DAA2B0();
    id v25 = v1;
    id v26 = sub_241DAA2D0();
    os_log_type_t v27 = sub_241DAAC30();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v63 = v2;
      uint64_t v30 = v29;
      v64[0] = v29;
      *(_DWORD *)uint64_t v28 = 136315394;
      uint64_t v31 = sub_241DAB1F0();
      v65[0] = sub_241D48854(v31, v32, v64);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      sub_241D2AED8(v9, (uint64_t)v65);
      sub_241D7B144(0, (unint64_t *)&qword_268D4BC30, (uint64_t)&qword_268D4B668, MEMORY[0x263F437A0], (void (*)(uint64_t, uint64_t, uint64_t))sub_241D2B54C);
      uint64_t v33 = sub_241DAA9B0();
      v65[0] = sub_241D48854(v33, v34, v64);
      sub_241DAAF10();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v26, v27, "[%s] Item was not of type VisionPrescriptionRangeItem. Item: %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v30, -1, -1);
      MEMORY[0x24563A5D0](v28, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v63);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
    }
    id v35 = sub_241D788FC();
    objc_msgSend(v35, sel_setHidden_, 0);

    objc_msgSend(*(id *)&v25[qword_268D4CA48], sel_setHidden_, 1);
    id v36 = sub_241D78908();
    objc_msgSend(v36, sel_setHidden_, 0);

    objc_msgSend(*(id *)&v25[qword_268D4CA50], sel_setHidden_, 1);
    return;
  }
  uint64_t v10 = v64[0];
  id v11 = *(void **)&v1[qword_268D4CA38];
  uint64_t v12 = OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_prescriptionField;
  sub_241D28E64(*(unsigned char *)(v64[0]
                         + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_prescriptionField));
  id v13 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setText_, v13);

  id v14 = sub_241D1F440(*(unsigned char *)(v10 + v12));
  if (!v14)
  {
LABEL_14:
    sub_241DAA2B0();
    swift_retain_n();
    id v37 = sub_241DAA2D0();
    os_log_type_t v38 = sub_241DAAC30();
    int v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v40 = swift_slowAlloc();
      int v61 = v39;
      uint64_t v41 = v40;
      uint64_t v62 = swift_slowAlloc();
      v65[0] = v62;
      *(_DWORD *)uint64_t v41 = 136315650;
      uint64_t v42 = sub_241DAB1F0();
      v64[0] = sub_241D48854(v42, v43, v65);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      v64[0] = (uint64_t)sub_241D1F440(*(unsigned char *)(v10 + v12));
      sub_241D7B144(0, &qword_268D4CAB0, (uint64_t)&unk_268D4CAB8, 0x263F0A640, (void (*)(uint64_t, uint64_t, uint64_t))sub_241D28BF4);
      uint64_t v44 = sub_241DAA9B0();
      uint64_t v63 = v2;
      v64[0] = sub_241D48854(v44, v45, v65);
      sub_241DAAF10();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 22) = 2080;
      v64[0] = (uint64_t)sub_241D3A9E4(*(unsigned char *)(v10 + v12));
      sub_241D7B144(0, &qword_268D4CAC0, (uint64_t)&unk_268D4CAC8, 0x263F0A830, (void (*)(uint64_t, uint64_t, uint64_t))sub_241D28BF4);
      uint64_t v46 = sub_241DAA9B0();
      v64[0] = sub_241D48854(v46, v47, v65);
      sub_241DAAF10();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v37, (os_log_type_t)v61, "[%s] VisionPrescriptionRangeItem Range/Unit were nil: Range: %s, Unit: %s", (uint8_t *)v41, 0x20u);
      uint64_t v48 = v62;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v48, -1, -1);
      MEMORY[0x24563A5D0](v41, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v63);
    }
    else
    {

      swift_release_n();
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
    }
    id v49 = sub_241D788FC();
    objc_msgSend(v49, sel_setHidden_, 0);

    objc_msgSend(*(id *)&v1[qword_268D4CA48], sel_setHidden_, 1);
    id v50 = sub_241D78908();
    objc_msgSend(v50, sel_setHidden_, 0);

    objc_msgSend(*(id *)&v1[qword_268D4CA50], sel_setHidden_, 1);
    swift_release();
    return;
  }
  id v15 = v14;
  id v16 = sub_241D3A9E4(*(unsigned char *)(v10 + v12));
  if (!v16)
  {

    goto LABEL_14;
  }
  id v17 = v16;
  id v18 = objc_msgSend(v15, sel_minimum);
  objc_msgSend(v18, sel_doubleValueForUnit_, v17);
  double v20 = v19;

  id v21 = objc_msgSend(v15, sel_maximum);
  objc_msgSend(v21, sel_doubleValueForUnit_, v17);
  double v23 = v22;

  if (v20 > v23)
  {
    __break(1u);
  }
  else
  {
    if (*(unsigned char *)(v10 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_leftValue + 4))
    {
      id v24 = sub_241D788FC();
      objc_msgSend(v24, sel_setHidden_, 0);

      objc_msgSend(*(id *)&v1[qword_268D4CA48], sel_setHidden_, 1);
    }
    else
    {
      sub_241D7A7A8(*(float *)(v10 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_leftValue), v20, v23);
      id v51 = *(char **)&v1[qword_268D4CA48];
      id v52 = &v51[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits];
      if (*(unsigned __int8 *)(v10 + v12) >= 2u)
      {
        swift_beginAccess();
        *(void *)id v52 = 0;
        objc_msgSend(v51, sel_setNeedsDisplay);
        id v54 = &v51[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
        swift_beginAccess();
        *id v54 = 0;
      }
      else
      {
        swift_beginAccess();
        *(void *)id v52 = 2;
        objc_msgSend(v51, sel_setNeedsDisplay);
        id v53 = &v51[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
        swift_beginAccess();
        *id v53 = 1;
      }
      objc_msgSend(v51, sel_setNeedsDisplay);
    }
    if (*(unsigned char *)(v10 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_rightValue + 4))
    {
      id v55 = sub_241D78908();
      objc_msgSend(v55, sel_setHidden_, 0);

      objc_msgSend(*(id *)&v1[qword_268D4CA50], sel_setHidden_, 1);
    }
    else
    {
      sub_241D7A7C8(*(float *)(v10 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_rightValue), v20, v23);
      id v56 = *(char **)&v1[qword_268D4CA50];
      id v57 = &v56[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits];
      if (*(unsigned __int8 *)(v10 + v12) >= 2u)
      {
        swift_beginAccess();
        *(void *)id v57 = 0;
        objc_msgSend(v56, sel_setNeedsDisplay);
        id v59 = &v56[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
        swift_beginAccess();
        *id v59 = 0;
      }
      else
      {
        swift_beginAccess();
        *(void *)id v57 = 2;
        objc_msgSend(v56, sel_setNeedsDisplay);
        id v58 = &v56[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
        swift_beginAccess();
        *id v58 = 1;
      }
      objc_msgSend(v56, sel_setNeedsDisplay);
    }
    swift_release();
  }
}

id sub_241D7A7A8(double a1, double a2, double a3)
{
  return sub_241D7A7E8((uint64_t (*)(void))sub_241D788FC, &qword_268D4CA48, a1, a2, a3);
}

id sub_241D7A7C8(double a1, double a2, double a3)
{
  return sub_241D7A7E8((uint64_t (*)(void))sub_241D78908, &qword_268D4CA50, a1, a2, a3);
}

id sub_241D7A7E8(uint64_t (*a1)(void), void *a2, double a3, double a4, double a5)
{
  uint64_t v10 = (void *)a1();
  objc_msgSend(v10, sel_setHidden_, 1);

  id v11 = *(char **)(v5 + *a2);
  objc_msgSend(v11, sel_setHidden_, 0);
  uint64_t v12 = (double *)&v11[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  swift_beginAccess();
  *uint64_t v12 = a4;
  v12[1] = a5;
  uint64_t v13 = OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value;
  double v14 = *(double *)&v11[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value];
  if (v14 < a4 || v14 > a5)
  {
    if (v14 <= a4) {
      double v14 = a4;
    }
    if (v14 > a5) {
      double v14 = a5;
    }
    *(double *)&v11[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value] = v14;
  }
  objc_msgSend(v11, sel_setNeedsDisplay);
  double v16 = *v12;
  if (*v12 < a3) {
    double v16 = a3;
  }
  if (v12[1] < v16) {
    double v16 = v12[1];
  }
  *(double *)&v11[v13] = v16;
  return objc_msgSend(v11, sel_setNeedsDisplay);
}

void sub_241D7A8F4()
{
  swift_bridgeObjectRelease();
  sub_241D2AE50(v0 + qword_268D4CA30);

  uint64_t v1 = *(void **)(v0 + qword_268D4CA60);
}

id sub_241D7A994()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionRangeCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_241D7A9CC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_241D2AE50(a1 + qword_268D4CA30);

  objc_super v2 = *(void **)(a1 + qword_268D4CA60);
}

uint64_t sub_241D7AA78()
{
  return type metadata accessor for VisionPrescriptionRangeCell(0);
}

uint64_t sub_241D7AA80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268D4CA30;
  swift_beginAccess();
  return sub_241D2AED8(v3, a1);
}

uint64_t sub_241D7AAD4(uint64_t a1)
{
  uint64_t v3 = v1 + qword_268D4CA30;
  swift_beginAccess();
  sub_241D2ADC0(a1, v3);
  swift_endAccess();
  sub_241D79DA8();
  return sub_241D2AE50(a1);
}

void (*sub_241D7AB44(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241D7ABA4;
}

void sub_241D7ABA4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_241D79DA8();
  }
}

uint64_t sub_241D7ABD8()
{
  uint64_t v1 = sub_241DAB1F0();
  sub_241DAAA50();
  sub_241DA9780();
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_241D7AC6C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_uuid;
  uint64_t v2 = sub_241DA97B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241D7AD14()
{
  return type metadata accessor for VisionPrescriptionRangeItem(0);
}

uint64_t type metadata accessor for VisionPrescriptionRangeItem(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4CA80);
}

uint64_t sub_241D7AD3C()
{
  uint64_t result = sub_241DA97B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241D7ADEC()
{
  return sub_241D7ABD8();
}

void sub_241D7AE10()
{
  unint64_t v1 = v0;
  *(void *)&v0[qword_268D4CA28] = MEMORY[0x263F8EE78];
  uint64_t v2 = &v0[qword_268D4CA30];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((void *)v2 + 4) = 0;
  uint64_t v3 = qword_268D4CA38;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  uint64_t v5 = (void *)sub_241DAADA0();
  objc_msgSend(v4, sel_setFont_, v5);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(void *)&v1[v3] = v4;
  uint64_t v6 = qword_268D4CA40;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v6] = v7;
  uint64_t v8 = qword_268D4CA48;
  uint64_t v9 = (objc_class *)type metadata accessor for RangeView();
  id v10 = objc_allocWithZone(v9);
  id v11 = RangeView.init(range:value:)(0.0, 1.0, 0.0);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v8] = v11;
  uint64_t v12 = qword_268D4CA50;
  id v13 = objc_allocWithZone(v9);
  id v14 = RangeView.init(range:value:)(0.0, 1.0, 0.0);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v12] = v14;
  *(void *)&v1[qword_268D4CA58] = 0;
  *(void *)&v1[qword_268D4CA60] = 0;

  sub_241DAB080();
  __break(1u);
}

void sub_241D7B048()
{
  if (!qword_268D4CA90)
  {
    sub_241D7B0A0();
    unint64_t v0 = sub_241DAB130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CA90);
    }
  }
}

unint64_t sub_241D7B0A0()
{
  unint64_t result = qword_268D4CA98;
  if (!qword_268D4CA98)
  {
    sub_241D2B54C(255, &qword_268D4CAA0);
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4CA98);
  }
  return result;
}

unint64_t sub_241D7B0EC()
{
  unint64_t result = qword_268D4CAA8;
  if (!qword_268D4CAA8)
  {
    sub_241DAA880();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CAA8);
  }
  return result;
}

void sub_241D7B144(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_241DAAEF0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

id sub_241D7B1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
  {
    uint64_t v5 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    unint64_t v6 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  swift_bridgeObjectRetain();
  unint64_t v6 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease_n();
LABEL_6:
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_alertControllerWithTitle_message_preferredStyle_, v5, v6, 1);

  return v7;
}

BOOL sub_241D7B278()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 32);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 24);
  if (*(void *)(v3 + 16))
  {
    unint64_t v4 = sub_241DA34A0(0);
    if (v5)
    {
      if (*(void *)(*(void *)(v3 + 56) + 8 * v4)) {
        return 0;
      }
    }
  }
  uint64_t v7 = *(void *)(v1 + 40);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 24);
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_241DA34A0(0), (v10 & 1) != 0)) {
    return *(void *)(*(void *)(v8 + 56) + 8 * v9) == 0;
  }
  else {
    return 1;
  }
}

id sub_241D7B32C()
{
  uint64_t v1 = v0;
  uint64_t v78 = *v0;
  uint64_t v2 = sub_241DAA2E0();
  uint64_t v81 = *(void *)(v2 - 8);
  uint64_t v82 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  unint64_t v73 = (char *)&v69 - v6;
  uint64_t v77 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  uint64_t v80 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v72 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241D83820(0, (unint64_t *)&qword_268D4CBE0, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v69 - v10;
  uint64_t v12 = sub_241DA96C0();
  uint64_t v75 = *(void *)(v12 - 8);
  uint64_t v76 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  unint64_t v74 = (char *)&v69 - v16;
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, v8);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v71 = (uint64_t)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  double v22 = (char *)&v69 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  id v25 = (char *)&v69 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v79 = (uint64_t)&v69 - v26;
  os_log_type_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241D83820(0, &qword_268D4B5B0, MEMORY[0x263F07490], v8);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v69 - v29;
  swift_retain();
  sub_241DAA5D0();
  swift_release();
  uint64_t v31 = sub_241DA9770();
  LODWORD(v8) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31);
  sub_241D82F2C((uint64_t)v30, &qword_268D4B5B0, v27);
  if (v8 != 1)
  {
    id v39 = (id)v1[7];
    BOOL v40 = sub_241D85B70();

    if (!v40) {
      return 0;
    }
    id v70 = v22;
    uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
    uint64_t v42 = v77;
    v41(v79, 1, 1, v77);
    unint64_t v43 = (void *)v1[7];
    swift_getKeyPath();
    swift_getKeyPath();
    id v44 = v43;
    sub_241DAA6B0();

    swift_release();
    swift_release();
    uint64_t v46 = v75;
    uint64_t v45 = v76;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v11, 1, v76) == 1)
    {
      sub_241D82F2C((uint64_t)v11, (unint64_t *)&qword_268D4CBE0, MEMORY[0x263F06EA8]);
      uint64_t v47 = v79;
    }
    else
    {
      long long v69 = v41;
      id v49 = v74;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v74, v11, v45);
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v15, v49, v45);
      sub_241D7E138((uint64_t)v15, (uint64_t)v25);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v25, 1, v42) == 1)
      {
        sub_241D82F2C((uint64_t)v25, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        id v50 = v73;
        sub_241DAA2B0();
        id v51 = sub_241DAA2D0();
        os_log_type_t v52 = sub_241DAAC10();
        if (os_log_type_enabled(v51, v52))
        {
          id v53 = (uint8_t *)swift_slowAlloc();
          uint64_t v54 = v45;
          uint64_t v55 = swift_slowAlloc();
          uint64_t v84 = v55;
          *(_DWORD *)id v53 = 136315138;
          uint64_t v56 = sub_241DAB1F0();
          uint64_t v83 = sub_241D48854(v56, v57, &v84);
          sub_241DAAF10();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241D1C000, v51, v52, "[%s] A prescription image is selected, but could not create URLAndContentType. Skipping saving a prescription and attachment.", v53, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24563A5D0](v55, -1, -1);
          MEMORY[0x24563A5D0](v53, -1, -1);

          (*(void (**)(char *, uint64_t))(v81 + 8))(v50, v82);
          (*(void (**)(char *, uint64_t))(v46 + 8))(v74, v54);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v81 + 8))(v50, v82);
          (*(void (**)(char *, uint64_t))(v46 + 8))(v74, v45);
        }
        sub_241D82F2C(v79, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        return 0;
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v45);
      uint64_t v47 = v79;
      sub_241D82F2C(v79, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
      uint64_t v58 = v72;
      sub_241D82F9C((uint64_t)v25, v72);
      sub_241D82F9C(v58, v47);
      v69(v47, 0, 1, v42);
    }
    uint64_t v59 = (uint64_t)v70;
    swift_retain();
    id v38 = sub_241D6DA18();
    swift_release();
    swift_retain();
    char v60 = sub_241D6E058();
    swift_release();
    if (v60)
    {
      sub_241D82DD0(v47, v59);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v59, 1, v42) == 1)
      {

        sub_241D82F2C(v59, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        sub_241D82F2C(v47, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        return 0;
      }
      sub_241D82F2C(v59, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
      swift_retain();
      sub_241DAA5D0();
      swift_release();
      if (v84 != 2) {
        goto LABEL_40;
      }
      uint64_t v61 = *(void *)(v1[6] + 40);
      if (*(void *)(v61 + 24))
      {
        uint64_t v62 = *(void *)(v61 + 16) & 0xFFFFFFFFFFFFLL;
        unint64_t v63 = *(void *)(v61 + 24);
      }
      else
      {
        uint64_t v62 = 0;
        unint64_t v63 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v68 = HIBYTE(v63) & 0xF;
      if ((v63 & 0x2000000000000000) == 0) {
        uint64_t v68 = v62;
      }
      if (!v68)
      {
LABEL_40:
        swift_retain();
        sub_241DA6314(12, 0, 0, 0);
        swift_release();
        sub_241D82F2C(v47, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        return v38;
      }
LABEL_39:
      sub_241D82F2C(v47, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);

      return 0;
    }
    swift_retain();
    swift_retain();
    sub_241DAA5D0();
    swift_release();
    if (v84 == 1 || v84 == 2)
    {
      BOOL v64 = sub_241D7B278();
      swift_release();
      if (v64) {
        goto LABEL_39;
      }
      if (v1[4])
      {
LABEL_27:
        char v65 = sub_241D574F8();
        if (!v38) {
          goto LABEL_34;
        }
LABEL_31:
        if ((v65 & 1) == 0)
        {
          uint64_t v66 = v71;
          sub_241D82DD0(v47, v71);
          int v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v66, 1, v42);
          sub_241D82F2C(v66, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
          if (v67 == 1)
          {
            swift_retain();
            sub_241DA6314(13, 0, 0, 0);
            swift_release();
            sub_241D82F2C(v47, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
            return v38;
          }
        }
LABEL_34:
        sub_241D82F2C(v47, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        return v38;
      }
    }
    else
    {
      swift_release();
      if (v1[4]) {
        goto LABEL_27;
      }
    }
    char v65 = 0;
    if (!v38) {
      goto LABEL_34;
    }
    goto LABEL_31;
  }
  sub_241DAA2A0();
  unint64_t v32 = sub_241DAA2D0();
  os_log_type_t v33 = sub_241DAAC10();
  if (os_log_type_enabled(v32, v33))
  {
    unint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v84 = v35;
    *(_DWORD *)unint64_t v34 = 136315138;
    uint64_t v36 = sub_241DAB1F0();
    uint64_t v83 = sub_241D48854(v36, v37, &v84);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v32, v33, "[%s] Cannot create HKVisionPrescriptiton without dateIssued.", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v35, -1, -1);
    MEMORY[0x24563A5D0](v34, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v81 + 8))(v5, v82);
  return 0;
}

uint64_t sub_241D7BFB0(char *a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v103 = a3;
  uint64_t v104 = a2;
  uint64_t v4 = *v3;
  uint64_t v101 = a1;
  uint64_t v102 = v4;
  uint64_t v5 = sub_241DA9770();
  uint64_t v99 = *(void *)(v5 - 8);
  uint64_t v100 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v98 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_241DA97B0();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v95 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_241DAA2E0();
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v89 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v88 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241D83820(0, (unint64_t *)&qword_268D4CBE0, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)&v85 - v14;
  uint64_t v16 = sub_241DA96C0();
  uint64_t v105 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v85 - v20;
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, v12);
  uint64_t v91 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v93 = (uint64_t)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  os_log_type_t v27 = (char *)&v85 - v26;
  uint64_t v92 = v28;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = *(void (**)(void))(v10 + 56);
  uint64_t v106 = (uint64_t)&v85 - v30;
  uint64_t v90 = v9;
  unint64_t v87 = v29;
  v29();
  uint64_t v94 = v3;
  uint64_t v31 = (void *)v3[7];
  swift_getKeyPath();
  swift_getKeyPath();
  id v32 = v31;
  sub_241DAA6B0();

  swift_release();
  uint64_t v33 = v16;
  uint64_t v34 = v105;
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v15, 1, v33) == 1)
  {
    sub_241D82F2C((uint64_t)v15, (unint64_t *)&qword_268D4CBE0, MEMORY[0x263F06EA8]);
    uint64_t v35 = v106;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v21, v15, v33);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v19, v21, v33);
    sub_241D7E138((uint64_t)v19, (uint64_t)v27);
    uint64_t v36 = v90;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v27, 1, v90) == 1)
    {
      sub_241D82F2C((uint64_t)v27, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
      unint64_t v37 = v89;
      sub_241DAA2B0();
      id v38 = sub_241DAA2D0();
      os_log_type_t v39 = sub_241DAAC10();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v101 = v21;
        BOOL v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        *(void *)&long long aBlock = v41;
        *(_DWORD *)BOOL v40 = 136315138;
        uint64_t v42 = sub_241DAB1F0();
        *(void *)&long long v113 = sub_241D48854(v42, v43, (uint64_t *)&aBlock);
        uint64_t v21 = v101;
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241D1C000, v38, v39, "[%s] A prescription image is selected, but could not create URLAndContentType. Skipping saving a prescription and attachment.", v40, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24563A5D0](v41, -1, -1);
        MEMORY[0x24563A5D0](v40, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v85 + 8))(v37, v86);
      uint64_t v44 = v106;
      if (v104) {
        v104(2);
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v33);
      return sub_241D82F2C(v44, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v33);
    uint64_t v35 = v106;
    sub_241D82F2C(v106, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
    uint64_t v45 = v88;
    sub_241D82F9C((uint64_t)v27, v88);
    sub_241D82F9C(v45, v35);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v87)(v35, 0, 1, v36);
  }
  uint64_t v46 = v101;
  id v47 = objc_msgSend(v101, sel_metadata);
  uint64_t v48 = (void *)MEMORY[0x263F8D310];
  if (v47)
  {
    id v49 = v47;
    unint64_t v50 = sub_241DAA920();
  }
  else
  {
    unint64_t v50 = sub_241D7597C(MEMORY[0x263F8EE78]);
  }
  uint64_t v51 = sub_241DAA990();
  uint64_t v53 = v52;
  id v54 = objc_msgSend(v46, sel_UUID);
  uint64_t v55 = v95;
  sub_241DA9790();

  uint64_t v56 = sub_241DA9780();
  uint64_t v58 = v57;
  (*(void (**)(char *, uint64_t))(v96 + 8))(v55, v97);
  uint64_t v109 = v48;
  *(void *)&long long aBlock = v56;
  *((void *)&aBlock + 1) = v58;
  sub_241D28BE4(&aBlock, &v113);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v112 = v50;
  sub_241DA3C3C(&v113, v51, v53, isUniquelyReferenced_nonNull_native);
  unint64_t v60 = v112;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v61 = sub_241DAA990();
  uint64_t v63 = v62;
  BOOL v64 = v98;
  sub_241DA9760();
  sub_241DA9710();
  double v66 = v65;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v64, v100);
  if ((~*(void *)&v66 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v66 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v66 < 9.22337204e18)
  {
    uint64_t v109 = (void *)MEMORY[0x263F8D6C8];
    *(void *)&long long aBlock = (uint64_t)v66;
    sub_241D28BE4(&aBlock, &v113);
    char v68 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v112 = v60;
    sub_241DA3C3C(&v113, v61, v63, v68);
    unint64_t v69 = v112;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v70 = sub_241DAA990();
    uint64_t v72 = v71;
    uint64_t v109 = (void *)MEMORY[0x263F8D4F8];
    LOBYTE(aBlock) = 1;
    sub_241D28BE4(&aBlock, &v113);
    char v73 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v112 = v69;
    sub_241DA3C3C(&v113, v70, v72, v73);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v74 = (void *)sub_241DAA910();
    swift_bridgeObjectRelease();
    objc_msgSend(v46, sel__setMetadata_, v74);

    uint64_t v75 = v94;
    uint64_t v76 = (void *)v94[2];
    uint64_t v77 = v93;
    sub_241D82DD0(v35, v93);
    unint64_t v78 = (*(unsigned __int8 *)(v91 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
    unint64_t v79 = (v92 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v80 = (void *)swift_allocObject();
    uint64_t v81 = (uint64_t)v104;
    v80[2] = v46;
    void v80[3] = v81;
    v80[4] = v103;
    sub_241D82E68(v77, (uint64_t)v80 + v78);
    *(void *)((char *)v80 + v79) = v75;
    *(void *)((char *)v80 + ((v79 + 15) & 0xFFFFFFFFFFFFFFF8)) = v102;
    uint64_t v110 = sub_241D82EFC;
    id v111 = v80;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    unint64_t v108 = sub_241D37888;
    uint64_t v109 = &unk_26F5D0D78;
    uint64_t v82 = _Block_copy(&aBlock);
    id v83 = v76;
    uint64_t v84 = v46;
    uint64_t v44 = v106;
    sub_241D64FB8(v81);
    swift_retain();
    swift_release();
    objc_msgSend(v83, sel_saveObject_withCompletion_, v84, v82);
    _Block_release(v82);

    return sub_241D82F2C(v44, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
  }
LABEL_20:
  __break(1u);
  return result;
}

void sub_241D7CBE4(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v110 = a2;
  uint64_t v104 = *v2;
  uint64_t v99 = sub_241DA9770();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v97 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241DAA2E0();
  uint64_t v107 = *(void *)(v5 - 8);
  uint64_t v108 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v106 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v101 = (char *)&v95 - v8;
  uint64_t v9 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v100 = (uint64_t)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241D83820(0, (unint64_t *)&qword_268D4CBE0, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)&v95 - v14;
  uint64_t v16 = sub_241DA96C0();
  uint64_t v109 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v105 = (char *)&v95 - v20;
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, v12);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v24 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v111 = (uint64_t)&v95 - v25;
  uint64_t v26 = (void *)v2[4];
  if (!v26) {
    goto LABEL_49;
  }
  swift_retain();
  id v112 = v26;
  id v27 = sub_241D6DA18();
  swift_release();
  if (v27)
  {
    id v102 = v27;
    uint64_t v103 = a1;
    uint64_t v96 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v96(v111, 1, 1, v9);
    uint64_t v95 = v2;
    uint64_t v28 = (void *)v2[7];
    swift_getKeyPath();
    swift_getKeyPath();
    id v29 = v28;
    sub_241DAA6B0();

    swift_release();
    swift_release();
    uint64_t v30 = v109;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v15, 1, v16) == 1)
    {
      sub_241D82F2C((uint64_t)v15, (unint64_t *)&qword_268D4CBE0, MEMORY[0x263F06EA8]);
    }
    else
    {
      id v32 = v105;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v105, v15, v16);
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v19, v32, v16);
      sub_241D7E138((uint64_t)v19, (uint64_t)v24);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v24, 1, v9) == 1)
      {
        sub_241D82F2C((uint64_t)v24, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        uint64_t v33 = v101;
        sub_241DAA2B0();
        uint64_t v34 = sub_241DAA2D0();
        os_log_type_t v35 = sub_241DAAC10();
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v36 = (uint8_t *)swift_slowAlloc();
          uint64_t v37 = swift_slowAlloc();
          *(void *)&long long v116 = v37;
          *(_DWORD *)uint64_t v36 = 136315138;
          uint64_t v38 = sub_241DAB1F0();
          *(void *)&v114[0] = sub_241D48854(v38, v39, (uint64_t *)&v116);
          id v32 = v105;
          sub_241DAAF10();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241D1C000, v34, v35, "[%s] A prescription image is selected, but could not create URLAndContentType. Skipping saving a prescription and attachment.", v36, 0xCu);
          swift_arrayDestroy();
          uint64_t v40 = v37;
          uint64_t v30 = v109;
          MEMORY[0x24563A5D0](v40, -1, -1);
          MEMORY[0x24563A5D0](v36, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v107 + 8))(v33, v108);
        uint64_t v41 = v102;
        if (v103) {
          v103(2);
        }

        (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v16);
        goto LABEL_32;
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v16);
      uint64_t v42 = v111;
      sub_241D82F2C(v111, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
      uint64_t v43 = v100;
      sub_241D82F9C((uint64_t)v24, v100);
      sub_241D82F9C(v43, v42);
      v96(v42, 0, 1, v9);
    }
    uint64_t v44 = v103;
    id v45 = objc_msgSend(v112, sel_metadata);
    uint64_t v46 = v106;
    if (v45)
    {
      id v47 = v45;
      uint64_t v48 = sub_241DAA920();

      uint64_t v49 = sub_241DAA990();
      if (*(void *)(v48 + 16) && (unint64_t v51 = sub_241DA3428(v49, v50), (v52 & 1) != 0))
      {
        sub_241D2DA4C(*(void *)(v48 + 56) + 32 * v51, (uint64_t)&v116);
      }
      else
      {
        long long v116 = 0u;
        long long v117 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v117 + 1))
      {
        uint64_t v53 = MEMORY[0x263F8D310];
        if (swift_dynamicCast())
        {
          long long v54 = v114[0];
          id v55 = objc_msgSend(v112, sel_metadata);
          if (v55)
          {
            uint64_t v56 = v55;
            unint64_t v57 = sub_241DAA920();
          }
          else
          {
            unint64_t v57 = sub_241D7597C(MEMORY[0x263F8EE78]);
          }
          double v66 = v97;
          uint64_t v67 = sub_241DAA990();
          uint64_t v69 = v68;
          *((void *)&v117 + 1) = v53;
          long long v116 = v54;
          sub_241D28BE4(&v116, v114);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v113 = v57;
          unint64_t v115 = 0x8000000000000000;
          sub_241DA3C3C(v114, v67, v69, isUniquelyReferenced_nonNull_native);
          unint64_t v115 = v113;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v71 = sub_241DAA990();
          uint64_t v73 = v72;
          sub_241DA9760();
          sub_241DA9710();
          double v75 = v74;
          (*(void (**)(char *, uint64_t))(v98 + 8))(v66, v99);
          if ((~*(void *)&v75 & 0x7FF0000000000000) != 0)
          {
            uint64_t v76 = v102;
            if (v75 > -9.22337204e18)
            {
              if (v75 < 9.22337204e18)
              {
                *((void *)&v117 + 1) = MEMORY[0x263F8D6C8];
                *(void *)&long long v116 = (uint64_t)v75;
                sub_241D28BE4(&v116, v114);
                unint64_t v77 = v115;
                char v78 = swift_isUniquelyReferenced_nonNull_native();
                unint64_t v113 = v77;
                unint64_t v115 = 0x8000000000000000;
                sub_241DA3C3C(v114, v71, v73, v78);
                unint64_t v115 = v113;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                id v79 = v76;
                id v80 = objc_msgSend(v112, sel__source);
                uint64_t v81 = v80;
                if (v80)
                {
                  id v82 = objc_msgSend(v80, sel_bundleIdentifier);

                  sub_241DAA990();
                  uint64_t v81 = (void *)sub_241DAA950();
                  swift_bridgeObjectRelease();
                }
                objc_msgSend(v79, sel__setSourceBundleIdentifier_, v81);

                id v83 = v95;
                swift_retain();
                sub_241DAA5D0();
                swift_release();
                if ((void)v116 == 1)
                {
                  uint64_t v84 = sub_241DAA990();
                  uint64_t v86 = v84;
                  uint64_t v87 = v85;
                  uint64_t v88 = *(void *)(v83[6] + 48);
                  uint64_t v89 = *(void *)(v88 + 24);
                  if (v89)
                  {
                    uint64_t v90 = *(void *)(v88 + 16);
                    *((void *)&v117 + 1) = v53;
                    *(void *)&long long v116 = v90;
                    *((void *)&v116 + 1) = v89;
                    sub_241D28BE4(&v116, v114);
                    swift_bridgeObjectRetain();
                    unint64_t v91 = v115;
                    char v92 = swift_isUniquelyReferenced_nonNull_native();
                    unint64_t v113 = v91;
                    unint64_t v115 = 0x8000000000000000;
                    sub_241DA3C3C(v114, v86, v87, v92);
                    unint64_t v115 = v113;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_241D82938(v84, v85, &v116);
                    swift_bridgeObjectRelease();
                    sub_241D830C8((uint64_t)&v116, (uint64_t (*)(void))sub_241D2D9F0);
                  }
                }
                uint64_t v93 = (void *)sub_241DAA910();
                swift_bridgeObjectRelease();
                objc_msgSend(v79, sel__setMetadata_, v93);

                uint64_t v94 = v111;
                sub_241D7F3C4(v79, v111, (uint64_t)v44, v110);

                uint64_t v65 = v94;
                goto LABEL_33;
              }
              goto LABEL_48;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          sub_241DAB080();
          __break(1u);
          return;
        }
        goto LABEL_28;
      }
    }
    else
    {
      long long v116 = 0u;
      long long v117 = 0u;
    }
    sub_241D830C8((uint64_t)&v116, (uint64_t (*)(void))sub_241D2D9F0);
LABEL_28:
    sub_241DAA2B0();
    uint64_t v58 = sub_241DAA2D0();
    os_log_type_t v59 = sub_241DAAC20();
    if (os_log_type_enabled(v58, v59))
    {
      unint64_t v60 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      *(void *)&long long v116 = v61;
      *(_DWORD *)unint64_t v60 = 136315138;
      uint64_t v62 = sub_241DAB1F0();
      *(void *)&v114[0] = sub_241D48854(v62, v63, (uint64_t *)&v116);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v58, v59, "[%s] Cannot edit vision prescription sample without sync identifier", v60, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v61, -1, -1);
      MEMORY[0x24563A5D0](v60, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v107 + 8))(v46, v108);
    BOOL v64 = v102;
    if (!v44)
    {
      sub_241D82F2C(v111, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);

      return;
    }
    v44(5);

LABEL_32:
    uint64_t v65 = v111;
LABEL_33:
    sub_241D82F2C(v65, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
    return;
  }
  if (a1) {
    a1(0);
  }
  id v31 = v112;
}

uint64_t sub_241D7DA88()
{
  uint64_t v9 = sub_241DAA2E0();
  MEMORY[0x270FA5388](v9);
  uint64_t v0 = sub_241DA9610();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D83820(0, &qword_268D4CAD8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241DB2C80;
  uint64_t v5 = (void *)*MEMORY[0x263EFF608];
  *(void *)(inited + 32) = *MEMORY[0x263EFF608];
  id v6 = v5;
  sub_241D54B70(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_241DA9640();
  swift_bridgeObjectRelease();
  sub_241DA9600();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_241D7DE88()
{
  uint64_t result = sub_241DAA950();
  qword_268D50F10 = result;
  return result;
}

id sub_241D7DEC0()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    id v2 = *(id *)(v0 + 24);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0D8]), sel_initWithHealthStore_, *(void *)(v0 + 16));
    uint64_t v4 = *(void **)(v0 + 24);
    *(void *)(v0 + 24) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

id *sub_241D7DF34()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  return v0;
}

uint64_t sub_241D7DF84()
{
  sub_241D7DF34();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryManager()
{
  return self;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType()
{
  uint64_t result = qword_268D4CAE0;
  if (!qword_268D4CAE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241D7E028(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)v1[2];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  v8[4] = sub_241D831E4;
  v8[5] = v5;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  v8[2] = sub_241D37888;
  uint64_t v8[3] = &unk_26F5D0F58;
  id v6 = _Block_copy(v8);
  id v7 = v4;
  swift_release();
  objc_msgSend(v7, sel_deleteObject_withCompletion_, a1, v6);
  _Block_release(v6);
}

uint64_t sub_241D7E138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_241D83820(0, (unint64_t *)&unk_268D4CC00, MEMORY[0x263F8F3A0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v20 - v5;
  uint64_t v7 = sub_241DAA260();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D7DA88();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    uint64_t v15 = sub_241DA96C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
    sub_241D82F2C((uint64_t)v6, (unint64_t *)&unk_268D4CC00, MEMORY[0x263F8F3A0]);
    uint64_t v16 = 1;
  }
  else
  {
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v17(v10, v6, v7);
    uint64_t v18 = sub_241DA96C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v14, a1, v18);
    v17(&v14[*(int *)(v11 + 20)], v10, v7);
    sub_241D82F9C((uint64_t)v14, a2);
    uint64_t v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, v16, 1, v11);
}

uint64_t sub_241D7E414(char a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v96 = a2;
  uint64_t v97 = a8;
  uint64_t v94 = a7;
  uint64_t v95 = a6;
  uint64_t v103 = a4;
  uint64_t v104 = a5;
  uint64_t v10 = sub_241DAA830();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v99 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_241DAA850();
  uint64_t v102 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v98 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v89 - v15;
  uint64_t v17 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_241DAA2E0();
  uint64_t v105 = *(void *)(v21 - 8);
  uint64_t v106 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v89 - v27;
  uint64_t v101 = v11;
  if (a1)
  {
    uint64_t v91 = v18;
    uint64_t v92 = v17;
    id v96 = v20;
    uint64_t v90 = v26;
    sub_241DAA2B0();
    id v29 = a3;
    uint64_t v30 = sub_241DAA2D0();
    os_log_type_t v31 = sub_241DAAC30();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v93 = v10;
    if (v32)
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t aBlock = v34;
      *(_DWORD *)uint64_t v33 = 136315395;
      uint64_t v35 = sub_241DAB1F0();
      uint64_t v107 = sub_241D48854(v35, v36, &aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2081;
      uint64_t v107 = (uint64_t)v29;
      sub_241D28BF4(0, (unint64_t *)&qword_268D4C210);
      id v37 = v29;
      uint64_t v38 = sub_241DAA9C0();
      uint64_t v107 = sub_241D48854(v38, v39, &aBlock);
      sub_241DAAF10();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v30, v31, "[%s] Saving vision prescription %{private}s was successful.", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v34, -1, -1);
      MEMORY[0x24563A5D0](v33, -1, -1);
    }
    else
    {
    }
    unint64_t v57 = *(void (**)(char *, uint64_t))(v105 + 8);
    v57(v28, v106);
    uint64_t v58 = (uint64_t)v96;
    uint64_t v59 = v92;
    uint64_t v60 = v91;
    sub_241D82DD0(v95, (uint64_t)v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v16, 1, v59) == 1)
    {
      sub_241D82F2C((uint64_t)v16, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
      uint64_t v61 = v90;
      sub_241DAA2B0();
      uint64_t v62 = sub_241DAA2D0();
      os_log_type_t v63 = sub_241DAAC30();
      BOOL v64 = os_log_type_enabled(v62, v63);
      uint64_t v65 = v102;
      uint64_t v66 = v104;
      if (v64)
      {
        uint64_t v67 = (uint8_t *)swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        uint64_t aBlock = v68;
        *(_DWORD *)uint64_t v67 = 136315138;
        uint64_t v69 = sub_241DAB1F0();
        uint64_t v107 = sub_241D48854(v69, v70, &aBlock);
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241D1C000, v62, v63, "[%s] No attachment to save. Returning.", v67, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24563A5D0](v68, -1, -1);
        uint64_t v71 = v67;
        uint64_t v65 = v102;
        MEMORY[0x24563A5D0](v71, -1, -1);
      }

      v57(v61, v106);
      sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
      uint64_t v72 = (void *)sub_241DAAD00();
      uint64_t v73 = swift_allocObject();
      uint64_t v74 = v103;
      *(void *)(v73 + 16) = v103;
      *(void *)(v73 + 24) = v66;
      id v112 = sub_241D830C0;
      uint64_t v113 = v73;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v109 = 1107296256;
      uint64_t v110 = sub_241D3A278;
      uint64_t v111 = &unk_26F5D0E18;
      double v75 = _Block_copy(&aBlock);
      sub_241D64FB8(v74);
      swift_release();
      uint64_t v76 = v98;
      sub_241DAA840();
      uint64_t aBlock = MEMORY[0x263F8EE78];
      sub_241D83064();
      sub_241D83820(0, (unint64_t *)&qword_268D4BC50, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
      sub_241D3A670();
      unint64_t v77 = v99;
      uint64_t v78 = v93;
      sub_241DAAF60();
      MEMORY[0x245639900](0, v76, v77, v75);
      _Block_release(v75);

      (*(void (**)(char *, uint64_t))(v101 + 8))(v77, v78);
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v76, v100);
    }
    else
    {
      sub_241D82F9C((uint64_t)v16, v58);
      sub_241D7F04C(v58, v29, 1, v103, v104);
      return sub_241D830C8(v58, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
    }
  }
  else
  {
    sub_241DAA2B0();
    id v40 = a3;
    id v41 = v96;
    id v42 = v96;
    id v43 = v40;
    id v44 = v41;
    id v45 = sub_241DAA2D0();
    os_log_type_t v46 = sub_241DAAC10();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t aBlock = v48;
      *(_DWORD *)uint64_t v47 = 136315651;
      uint64_t v49 = sub_241DAB1F0();
      uint64_t v93 = v10;
      uint64_t v107 = sub_241D48854(v49, v50, &aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2081;
      uint64_t v107 = (uint64_t)v43;
      sub_241D28BF4(0, (unint64_t *)&qword_268D4C210);
      id v51 = v43;
      uint64_t v52 = sub_241DAA9C0();
      uint64_t v107 = sub_241D48854(v52, v53, &aBlock);
      sub_241DAAF10();

      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2080;
      uint64_t v107 = (uint64_t)v41;
      id v54 = v41;
      sub_241D83820(0, (unint64_t *)&unk_268D4BC60, (uint64_t (*)(uint64_t))sub_241D83000, MEMORY[0x263F8D8F0]);
      uint64_t v55 = sub_241DAA9B0();
      uint64_t v107 = sub_241D48854(v55, v56, &aBlock);
      uint64_t v10 = v93;
      sub_241DAAF10();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241D1C000, v45, v46, "[%s] Failed to save vision prescription %{private}s) with error: %s", (uint8_t *)v47, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v48, -1, -1);
      MEMORY[0x24563A5D0](v47, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v105 + 8))(v24, v106);
    uint64_t v81 = v99;
    uint64_t v80 = v100;
    uint64_t v82 = v102;
    uint64_t v83 = v103;
    uint64_t v84 = v98;
    uint64_t v85 = v104;
    sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
    uint64_t v86 = (void *)sub_241DAAD00();
    uint64_t v87 = swift_allocObject();
    *(void *)(v87 + 16) = v83;
    *(void *)(v87 + 24) = v85;
    id v112 = sub_241D8305C;
    uint64_t v113 = v87;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v109 = 1107296256;
    uint64_t v110 = sub_241D3A278;
    uint64_t v111 = &unk_26F5D0DC8;
    uint64_t v88 = _Block_copy(&aBlock);
    sub_241D64FB8(v83);
    swift_release();
    sub_241DAA840();
    uint64_t aBlock = MEMORY[0x263F8EE78];
    sub_241D83064();
    sub_241D83820(0, (unint64_t *)&qword_268D4BC50, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_241D3A670();
    sub_241DAAF60();
    MEMORY[0x245639900](0, v84, v81, v88);
    _Block_release(v88);

    (*(void (**)(char *, uint64_t))(v101 + 8))(v81, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v84, v80);
  }
}

uint64_t sub_241D7F04C(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v36 = *v5;
  uint64_t v9 = sub_241DA96C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241DAA260();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v35 = sub_241D7DEC0();
  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_241DA95E0();
  uint64_t v33 = v18;
  uint64_t v34 = v17;
  uint64_t v19 = a1 + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType() + 20);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v32 = v13;
  v20(v16, v19, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = swift_allocObject();
  os_log_type_t v31 = v16;
  *(void *)(v22 + 16) = a2;
  *(unsigned char *)(v22 + 24) = a3 & 1;
  uint64_t v23 = a2;
  uint64_t v24 = v37;
  uint64_t v25 = v38;
  *(void *)(v22 + 32) = v21;
  *(void *)(v22 + 40) = v24;
  uint64_t v26 = v36;
  *(void *)(v22 + 48) = v25;
  *(void *)(v22 + 56) = v26;
  id v27 = v23;
  swift_retain();
  sub_241D64FB8(v24);
  sub_241D82650(MEMORY[0x263F8EE78]);
  uint64_t v28 = v31;
  id v29 = v35;
  sub_241DAACB0();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v28, v32);
  return swift_release();
}

void sub_241D7F3C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *v5;
  uint64_t v26 = a2;
  uint64_t v27 = v9;
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, MEMORY[0x263F8D8F0]);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v14 = (char *)&v26 - v13;
  id v15 = objc_msgSend(a1, sel__sourceBundleIdentifier);
  if (v15)
  {
    uint64_t v16 = v15;
    sub_241DAA990();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v18 = 0;
  }
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  if (v18) {
    uint64_t v20 = (void *)sub_241DAA950();
  }
  else {
    uint64_t v20 = 0;
  }
  objc_msgSend(v19, sel_setSourceBundleIdentifier_, v20, v26);

  objc_msgSend(v19, sel_resume);
  swift_bridgeObjectRelease();
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  sub_241D82DD0(v26, (uint64_t)v14);
  unint64_t v22 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = a1;
  void v23[3] = a3;
  void v23[4] = a4;
  v23[5] = v21;
  sub_241D82E68((uint64_t)v14, (uint64_t)v23 + v22);
  *(void *)((char *)v23 + ((v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
  aBlock[4] = sub_241D833A4;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_241D37888;
  aBlock[3] = &unk_26F5D0FA8;
  uint64_t v24 = _Block_copy(aBlock);
  id v25 = a1;
  sub_241D64FB8(a3);
  swift_release();
  objc_msgSend(v19, sel_saveObject_withCompletion_, v25, v24);
  _Block_release(v24);
}

uint64_t sub_241D7F6A8(char a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v84 = a8;
  uint64_t v88 = a4;
  uint64_t v89 = a5;
  uint64_t v13 = sub_241DAA830();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v86 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_241DAA850();
  uint64_t v87 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v85 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241DAA2E0();
  uint64_t v90 = *(void *)(v18 - 8);
  uint64_t v91 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  MEMORY[0x270FA5388](v22);
  id v25 = (char *)&v79 - v24;
  if (a1)
  {
    uint64_t v80 = v23;
    uint64_t v81 = v13;
    uint64_t v82 = v16;
    uint64_t v26 = a6 + 16;
    sub_241DAA2B0();
    id v27 = a3;
    uint64_t v28 = sub_241DAA2D0();
    os_log_type_t v29 = sub_241DAAC30();
    BOOL v30 = os_log_type_enabled(v28, v29);
    uint64_t v83 = v14;
    if (v30)
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v79 = v26;
      uint64_t v32 = v31;
      uint64_t v33 = swift_slowAlloc();
      uint64_t aBlock = v33;
      *(_DWORD *)uint64_t v32 = 136315395;
      uint64_t v34 = sub_241DAB1F0();
      uint64_t v93 = sub_241D48854(v34, v35, &aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2081;
      uint64_t v93 = (uint64_t)v27;
      sub_241D28BF4(0, (unint64_t *)&qword_268D4C210);
      id v36 = v27;
      uint64_t v37 = sub_241DAA9C0();
      uint64_t v93 = sub_241D48854(v37, v38, &aBlock);
      sub_241DAAF10();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v28, v29, "[%s] Successfully saved the updated vision prescription %{private}s. Continuing to update prescription image attachment.", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v33, -1, -1);
      MEMORY[0x24563A5D0](v32, -1, -1);
    }
    else
    {
    }
    uint64_t v55 = *(void (**)(char *, uint64_t))(v90 + 8);
    v55(v25, v91);
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t v16 = v82;
    if (Strong)
    {
      sub_241D80178(a7, v27, v88, v89);
      return swift_release();
    }
    uint64_t v65 = v80;
    sub_241DAA2B0();
    uint64_t v66 = sub_241DAA2D0();
    os_log_type_t v67 = sub_241DAAC10();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t aBlock = v69;
      *(_DWORD *)uint64_t v68 = 136315138;
      uint64_t v70 = sub_241DAB1F0();
      uint64_t v92 = sub_241D48854(v70, v71, &aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v66, v67, "[%s] completion handler is called but self has been deallocated.", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v69, -1, -1);
      MEMORY[0x24563A5D0](v68, -1, -1);
    }

    v55(v65, v91);
    sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
    uint64_t v72 = (void *)sub_241DAAD00();
    uint64_t v73 = swift_allocObject();
    uint64_t v75 = v88;
    uint64_t v74 = v89;
    *(void *)(v73 + 16) = v88;
    *(void *)(v73 + 24) = v74;
    uint64_t v98 = sub_241D831CC;
    uint64_t v99 = v73;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v95 = 1107296256;
    id v96 = sub_241D3A278;
    uint64_t v97 = &unk_26F5D1048;
    uint64_t v76 = _Block_copy(&aBlock);
    sub_241D64FB8(v75);
    swift_release();
    os_log_type_t v63 = v85;
    sub_241DAA840();
    uint64_t aBlock = MEMORY[0x263F8EE78];
    sub_241D83064();
    sub_241D83820(0, (unint64_t *)&qword_268D4BC50, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_241D3A670();
    unint64_t v77 = v86;
    uint64_t v78 = v81;
    sub_241DAAF60();
    MEMORY[0x245639900](0, v63, v77, v76);
    _Block_release(v76);

    (*(void (**)(char *, uint64_t))(v83 + 8))(v77, v78);
  }
  else
  {
    sub_241DAA2B0();
    id v39 = a3;
    id v40 = a2;
    id v41 = v39;
    id v42 = a2;
    id v43 = sub_241DAA2D0();
    os_log_type_t v44 = sub_241DAAC10();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      uint64_t aBlock = v82;
      *(_DWORD *)uint64_t v45 = 136315651;
      uint64_t v46 = sub_241DAB1F0();
      uint64_t v83 = v14;
      uint64_t v93 = sub_241D48854(v46, v47, &aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2081;
      uint64_t v93 = (uint64_t)v41;
      sub_241D28BF4(0, (unint64_t *)&qword_268D4C210);
      id v48 = v41;
      uint64_t v49 = sub_241DAA9C0();
      uint64_t v93 = sub_241D48854(v49, v50, &aBlock);
      sub_241DAAF10();

      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 22) = 2080;
      uint64_t v93 = (uint64_t)a2;
      id v51 = a2;
      sub_241D83820(0, (unint64_t *)&unk_268D4BC60, (uint64_t (*)(uint64_t))sub_241D83000, MEMORY[0x263F8D8F0]);
      uint64_t v52 = sub_241DAA9B0();
      uint64_t v93 = sub_241D48854(v52, v53, &aBlock);
      uint64_t v14 = v83;
      sub_241DAAF10();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241D1C000, v43, v44, "[%s] Failed to save edited vision prescription %{private}s) with error: %s", (uint8_t *)v45, 0x20u);
      uint64_t v54 = v82;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v54, -1, -1);
      MEMORY[0x24563A5D0](v45, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v90 + 8))(v21, v91);
    sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
    uint64_t v58 = (void *)sub_241DAAD00();
    uint64_t v59 = swift_allocObject();
    uint64_t v61 = v88;
    uint64_t v60 = v89;
    *(void *)(v59 + 16) = v88;
    *(void *)(v59 + 24) = v60;
    uint64_t v98 = sub_241D8348C;
    uint64_t v99 = v59;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v95 = 1107296256;
    id v96 = sub_241D3A278;
    uint64_t v97 = &unk_26F5D0FF8;
    uint64_t v62 = _Block_copy(&aBlock);
    sub_241D64FB8(v61);
    swift_release();
    os_log_type_t v63 = v85;
    sub_241DAA840();
    uint64_t aBlock = MEMORY[0x263F8EE78];
    sub_241D83064();
    sub_241D83820(0, (unint64_t *)&qword_268D4BC50, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_241D3A670();
    BOOL v64 = v86;
    sub_241DAAF60();
    MEMORY[0x245639900](0, v63, v64, v62);
    _Block_release(v62);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v64, v13);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v63, v16);
}

void sub_241D80178(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v82 = a1;
  uint64_t v8 = *v4;
  uint64_t v80 = a2;
  uint64_t v81 = v8;
  uint64_t v9 = sub_241DAA830();
  uint64_t v71 = *(void *)(v9 - 8);
  uint64_t v72 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v69 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_241DAA850();
  uint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  os_log_type_t v67 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  uint64_t v74 = *(void *)(v12 - 8);
  uint64_t v75 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241DAA2E0();
  uint64_t v76 = *(void *)(v15 - 8);
  id v77 = (id)v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v73 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v66 - v18;
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, MEMORY[0x263F8D8F0]);
  uint64_t v79 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v79 + 64);
  uint64_t v22 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  id v25 = (char *)v66 - v24;
  unint64_t v26 = v5[5];
  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_241DAB0A0()) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    sub_241DAA2B0();
    unint64_t v38 = sub_241DAA2D0();
    os_log_type_t v39 = sub_241DAAC30();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v78 = a4;
      id v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v79 = a3;
      uint64_t v42 = v41;
      uint64_t aBlock = v41;
      *(_DWORD *)id v40 = 136315138;
      v66[1] = v40 + 4;
      uint64_t v43 = sub_241DAB1F0();
      uint64_t v83 = sub_241D48854(v43, v44, &aBlock);
      sub_241DAAF10();
      a4 = v78;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v38, v39, "[%s] No attachment to remove. Continue to saving a new attachment.", v40, 0xCu);
      swift_arrayDestroy();
      uint64_t v45 = v42;
      a3 = v79;
      MEMORY[0x24563A5D0](v45, -1, -1);
      MEMORY[0x24563A5D0](v40, -1, -1);
    }

    uint64_t v46 = *(void (**)(char *, id))(v76 + 8);
    v46(v19, v77);
    uint64_t v48 = v74;
    uint64_t v47 = v75;
    sub_241D82DD0(v82, (uint64_t)v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v23, 1, v47) == 1)
    {
      sub_241D82F2C((uint64_t)v23, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
      uint64_t v49 = v73;
      sub_241DAA2B0();
      unint64_t v50 = sub_241DAA2D0();
      os_log_type_t v51 = sub_241DAAC30();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        uint64_t v53 = a3;
        uint64_t v54 = a4;
        uint64_t v55 = swift_slowAlloc();
        uint64_t aBlock = v55;
        *(_DWORD *)uint64_t v52 = 136315138;
        uint64_t v56 = sub_241DAB1F0();
        uint64_t v83 = sub_241D48854(v56, v57, &aBlock);
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241D1C000, v50, v51, "[%s] No attachment to save. Returning.", v52, 0xCu);
        swift_arrayDestroy();
        uint64_t v58 = v55;
        a4 = v54;
        a3 = v53;
        MEMORY[0x24563A5D0](v58, -1, -1);
        MEMORY[0x24563A5D0](v52, -1, -1);

        uint64_t v59 = v73;
      }
      else
      {

        uint64_t v59 = v49;
      }
      v46(v59, v77);
      sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
      uint64_t v60 = (void *)sub_241DAAD00();
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = a3;
      *(void *)(v61 + 24) = a4;
      uint64_t v88 = sub_241D830C0;
      uint64_t v89 = (void *)v61;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v85 = 1107296256;
      uint64_t v86 = sub_241D3A278;
      uint64_t v87 = &unk_26F5D10E8;
      uint64_t v62 = _Block_copy(&aBlock);
      sub_241D64FB8(a3);
      swift_release();
      os_log_type_t v63 = v67;
      sub_241DAA840();
      uint64_t aBlock = MEMORY[0x263F8EE78];
      sub_241D83064();
      sub_241D83820(0, (unint64_t *)&qword_268D4BC50, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
      sub_241D3A670();
      BOOL v64 = v69;
      uint64_t v65 = v72;
      sub_241DAAF60();
      MEMORY[0x245639900](0, v63, v64, v62);
      _Block_release(v62);

      (*(void (**)(char *, uint64_t))(v71 + 8))(v64, v65);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v63, v70);
    }
    else
    {
      sub_241D82F9C((uint64_t)v23, (uint64_t)v14);
      sub_241D7F04C((uint64_t)v14, v80, 0, a3, a4);
      sub_241D830C8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
    }
    return;
  }
  uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v27) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t v78 = a4;
  if ((v26 & 0xC000000000000001) != 0)
  {
    id v28 = (id)MEMORY[0x245639BE0](0, v26);
    goto LABEL_6;
  }
  if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v28 = *(id *)(v26 + 32);
LABEL_6:
    id v77 = v28;
    swift_bridgeObjectRelease();
    id v29 = sub_241D7DEC0();
    uint64_t v30 = swift_allocObject();
    swift_weakInit();
    sub_241D82DD0(v82, (uint64_t)v25);
    unint64_t v31 = (*(unsigned __int8 *)(v79 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    unint64_t v32 = (v21 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = (void *)swift_allocObject();
    uint64_t v34 = v80;
    void v33[2] = v80;
    v33[3] = a3;
    v33[4] = v78;
    sub_241D82E68((uint64_t)v25, (uint64_t)v33 + v31);
    *(void *)((char *)v33 + v32) = v30;
    *(void *)((char *)v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v81;
    uint64_t v88 = sub_241D83664;
    uint64_t v89 = v33;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v85 = 1107296256;
    uint64_t v86 = sub_241D37888;
    uint64_t v87 = &unk_26F5D1098;
    unint64_t v35 = _Block_copy(&aBlock);
    id v36 = v34;
    sub_241D64FB8(a3);
    swift_release();
    uint64_t v37 = v77;
    objc_msgSend(v29, sel_removeAttachment_fromObject_completion_, v77, v36, v35);
    _Block_release(v35);

    return;
  }
  __break(1u);
}

uint64_t sub_241D80B60(char a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v95 = a7;
  uint64_t v96 = a8;
  uint64_t v103 = a4;
  uint64_t v104 = a5;
  uint64_t v12 = sub_241DAA830();
  uint64_t v100 = *(void *)(v12 - 8);
  uint64_t v101 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v97 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241DAA850();
  uint64_t v98 = *(void *)(v14 - 8);
  uint64_t v99 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v102 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_241DAA2E0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v105 = v16;
  uint64_t v106 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v94 = (char *)&v92 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  id v25 = (char *)&v92 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v92 - v26;
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v92 - v29;
  uint64_t v31 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v92 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_241DAA2B0();
    id v51 = a3;
    id v52 = a2;
    id v53 = v51;
    id v54 = a2;
    uint64_t v55 = sub_241DAA2D0();
    os_log_type_t v56 = sub_241DAAC10();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t aBlock = v58;
      *(_DWORD *)uint64_t v57 = 136315651;
      uint64_t v59 = sub_241DAB1F0();
      uint64_t v108 = sub_241D48854(v59, v60, &aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 12) = 2081;
      uint64_t v108 = (uint64_t)v53;
      sub_241D28BF4(0, (unint64_t *)&qword_268D4C210);
      id v61 = v53;
      uint64_t v62 = sub_241DAA9C0();
      uint64_t v108 = sub_241D48854(v62, v63, &aBlock);
      sub_241DAAF10();

      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 22) = 2080;
      uint64_t v108 = (uint64_t)a2;
      id v64 = a2;
      sub_241D83820(0, (unint64_t *)&unk_268D4BC60, (uint64_t (*)(uint64_t))sub_241D83000, MEMORY[0x263F8D8F0]);
      uint64_t v65 = sub_241DAA9B0();
      uint64_t v108 = sub_241D48854(v65, v66, &aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241D1C000, v55, v56, "[%s] Failed to remove vision prescription %{private}s) with error: %s", (uint8_t *)v57, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v58, -1, -1);
      MEMORY[0x24563A5D0](v57, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v106 + 8))(v20, v105);
    uint64_t v41 = v103;
    uint64_t v80 = v104;
    uint64_t v43 = v100;
    uint64_t v42 = v101;
    uint64_t v45 = v98;
    uint64_t v44 = v99;
    uint64_t v46 = v97;
    sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
    uint64_t v47 = (void *)sub_241DAAD00();
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = v41;
    *(void *)(v81 + 24) = v80;
    uint64_t v113 = sub_241D83788;
    uint64_t v114 = v81;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v110 = 1107296256;
    unint64_t v50 = &unk_26F5D1138;
    goto LABEL_13;
  }
  uint64_t v93 = v34;
  sub_241D82DD0(a6, (uint64_t)v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    sub_241D82F2C((uint64_t)v30, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
    sub_241DAA2B0();
    unint64_t v35 = sub_241DAA2D0();
    os_log_type_t v36 = sub_241DAAC30();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t aBlock = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v39 = sub_241DAB1F0();
      uint64_t v108 = sub_241D48854(v39, v40, &aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v35, v36, "[%s] No attachment to save. Returning.", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v38, -1, -1);
      MEMORY[0x24563A5D0](v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v106 + 8))(v27, v105);
    uint64_t v41 = v103;
    uint64_t v43 = v100;
    uint64_t v42 = v101;
    uint64_t v45 = v98;
    uint64_t v44 = v99;
    uint64_t v46 = v97;
    sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
    uint64_t v47 = (void *)sub_241DAAD00();
    uint64_t v48 = swift_allocObject();
    uint64_t v49 = v104;
    *(void *)(v48 + 16) = v41;
    *(void *)(v48 + 24) = v49;
    uint64_t v113 = sub_241D83804;
    uint64_t v114 = v48;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v110 = 1107296256;
    unint64_t v50 = &unk_26F5D1188;
LABEL_13:
    uint64_t v111 = sub_241D3A278;
    id v112 = v50;
    uint64_t v82 = _Block_copy(&aBlock);
    sub_241D64FB8(v41);
    swift_release();
    uint64_t v83 = v102;
    sub_241DAA840();
    uint64_t aBlock = MEMORY[0x263F8EE78];
    sub_241D83064();
    sub_241D83820(0, (unint64_t *)&qword_268D4BC50, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_241D3A670();
    sub_241DAAF60();
    MEMORY[0x245639900](0, v83, v46, v82);
    _Block_release(v82);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v42);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v83, v44);
  }
  sub_241D82F9C((uint64_t)v30, (uint64_t)v93);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    os_log_type_t v67 = v94;
    sub_241DAA2B0();
    id v68 = a3;
    uint64_t v69 = v67;
    id v70 = v68;
    uint64_t v71 = sub_241DAA2D0();
    os_log_type_t v72 = sub_241DAAC30();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      uint64_t v108 = v74;
      *(_DWORD *)uint64_t v73 = 136315395;
      uint64_t v75 = sub_241DAB1F0();
      uint64_t v107 = sub_241D48854(v75, v76, &v108);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 2081;
      uint64_t v107 = (uint64_t)v70;
      sub_241D28BF4(0, (unint64_t *)&qword_268D4C210);
      id v77 = v70;
      uint64_t v78 = sub_241DAA9C0();
      uint64_t v107 = sub_241D48854(v78, v79, &v108);
      sub_241DAAF10();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v71, v72, "[%s] Successfully removed the original attachment for %{private}s. Continuing to save the new prescription image attachment.", (uint8_t *)v73, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v74, -1, -1);
      MEMORY[0x24563A5D0](v73, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v106 + 8))(v69, v105);
    uint64_t v91 = (uint64_t)v93;
    sub_241D7F04C((uint64_t)v93, v70, 0, v103, v104);
    swift_release();
    return sub_241D830C8(v91, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
  }
  else
  {
    sub_241DAA2B0();
    uint64_t v85 = sub_241DAA2D0();
    os_log_type_t v86 = sub_241DAAC10();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      uint64_t v108 = v88;
      *(_DWORD *)uint64_t v87 = 136315138;
      uint64_t v89 = sub_241DAB1F0();
      uint64_t v107 = sub_241D48854(v89, v90, &v108);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v85, v86, "[%s] Has an attachment to save but self has been deallocated.", v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v88, -1, -1);
      MEMORY[0x24563A5D0](v87, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v106 + 8))(v25, v105);
    return sub_241D830C8((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
  }
}

uint64_t sub_241D817FC(uint64_t a1, void *a2, void *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v80 = a8;
  uint64_t v81 = a7;
  uint64_t v83 = a6;
  LODWORD(v8) = a4;
  uint64_t v88 = sub_241DAA830();
  uint64_t v11 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_241DAA850();
  uint64_t v14 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_241DAA2E0();
  uint64_t v86 = *(void *)(v17 - 8);
  uint64_t v87 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  unint64_t v79 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v75 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v75 - v23;
  uint64_t v84 = v14;
  uint64_t v82 = v16;
  if (a2)
  {
    sub_241DAA2B0();
    id v25 = a3;
    id v26 = a2;
    id v27 = v25;
    id v28 = a2;
    uint64_t v29 = sub_241DAA2D0();
    os_log_type_t v30 = sub_241DAAC10();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v77 = (uint64_t)v27;
    if (v31)
    {
      uint64_t v32 = swift_slowAlloc();
      LODWORD(v76) = v8;
      uint64_t v33 = v27;
      uint64_t v34 = v32;
      uint64_t v75 = swift_slowAlloc();
      uint64_t aBlock = v75;
      *(_DWORD *)uint64_t v34 = 136315651;
      uint64_t v35 = sub_241DAB1F0();
      uint64_t v78 = v11;
      uint64_t v89 = sub_241D48854(v35, v36, &aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2081;
      uint64_t v89 = (uint64_t)v33;
      sub_241D28BF4(0, (unint64_t *)&qword_268D4C210);
      id v8 = v33;
      uint64_t v37 = sub_241DAA9C0();
      uint64_t v89 = sub_241D48854(v37, v38, &aBlock);
      sub_241DAAF10();

      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 22) = 2080;
      uint64_t v89 = (uint64_t)a2;
      id v39 = a2;
      sub_241D83820(0, (unint64_t *)&unk_268D4BC60, (uint64_t (*)(uint64_t))sub_241D83000, MEMORY[0x263F8D8F0]);
      uint64_t v40 = sub_241DAA9B0();
      uint64_t v89 = sub_241D48854(v40, v41, &aBlock);
      LOBYTE(v8) = (_BYTE)v76;
      sub_241DAAF10();
      uint64_t v11 = v78;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241D1C000, v29, v30, "[%s] Failed save prescription image for vision prescription %{private}s) with error: %s", (uint8_t *)v34, 0x20u);
      uint64_t v42 = v75;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v42, -1, -1);
      MEMORY[0x24563A5D0](v34, -1, -1);
    }
    else
    {
    }
    uint64_t v55 = *(void (**)(char *, uint64_t))(v86 + 8);
    v55(v22, v87);
    os_log_type_t v56 = v79;
    if (v8)
    {
      sub_241DAA2B0();
      uint64_t v57 = sub_241DAA2D0();
      os_log_type_t v58 = sub_241DAAC30();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v78 = v11;
        uint64_t v59 = (uint8_t *)swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        unint64_t v76 = v13;
        uint64_t v61 = v60;
        uint64_t aBlock = v60;
        *(_DWORD *)uint64_t v59 = 136315138;
        uint64_t v62 = sub_241DAB1F0();
        uint64_t v89 = sub_241D48854(v62, v63, &aBlock);
        uint64_t v11 = v78;
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241D1C000, v57, v58, "[%s] Reverting the saved prescription since image failed to save", v59, 0xCu);
        swift_arrayDestroy();
        uint64_t v64 = v61;
        uint64_t v13 = v76;
        MEMORY[0x24563A5D0](v64, -1, -1);
        MEMORY[0x24563A5D0](v59, -1, -1);
      }

      v55(v56, v87);
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        sub_241D7E028(v77);
        swift_release();
      }
    }
    sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
    os_log_type_t v67 = (void *)sub_241DAAD00();
    uint64_t v71 = swift_allocObject();
    uint64_t v72 = v83;
    uint64_t v73 = v81;
    *(void *)(v71 + 16) = v83;
    *(void *)(v71 + 24) = v73;
    uint64_t v94 = sub_241D831CC;
    uint64_t v95 = v71;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v91 = 1107296256;
    uint64_t v92 = sub_241D3A278;
    uint64_t v93 = &unk_26F5D0F08;
    id v70 = _Block_copy(&aBlock);
    sub_241D64FB8(v72);
    swift_release();
    uint64_t v65 = v82;
  }
  else
  {
    sub_241DAA2B0();
    id v43 = a3;
    uint64_t v44 = sub_241DAA2D0();
    os_log_type_t v45 = sub_241DAAC30();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      unint64_t v76 = v13;
      uint64_t v48 = v47;
      uint64_t aBlock = v47;
      *(_DWORD *)uint64_t v46 = 136315395;
      uint64_t v49 = sub_241DAB1F0();
      uint64_t v89 = sub_241D48854(v49, v50, &aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2081;
      uint64_t v89 = (uint64_t)v43;
      sub_241D28BF4(0, (unint64_t *)&qword_268D4C210);
      id v51 = v43;
      uint64_t v52 = sub_241DAA9C0();
      uint64_t v89 = sub_241D48854(v52, v53, &aBlock);
      sub_241DAAF10();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v44, v45, "[%s] Successfully saved the new attachment for %{private}s.", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      uint64_t v54 = v48;
      uint64_t v13 = v76;
      MEMORY[0x24563A5D0](v54, -1, -1);
      MEMORY[0x24563A5D0](v46, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v86 + 8))(v24, v87);
    uint64_t v66 = v81;
    uint64_t v65 = v82;
    sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
    os_log_type_t v67 = (void *)sub_241DAAD00();
    uint64_t v68 = swift_allocObject();
    uint64_t v69 = v83;
    *(void *)(v68 + 16) = v83;
    *(void *)(v68 + 24) = v66;
    uint64_t v94 = sub_241D84000;
    uint64_t v95 = v68;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v91 = 1107296256;
    uint64_t v92 = sub_241D3A278;
    uint64_t v93 = &unk_26F5D0EB8;
    id v70 = _Block_copy(&aBlock);
    sub_241D64FB8(v69);
    swift_release();
  }
  sub_241DAA840();
  uint64_t aBlock = MEMORY[0x263F8EE78];
  sub_241D83064();
  sub_241D83820(0, (unint64_t *)&qword_268D4BC50, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_241D3A670();
  sub_241DAAF60();
  MEMORY[0x245639900](0, v65, v13, v70);
  _Block_release(v70);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v88);
  return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v65, v85);
}

void sub_241D82240(void (*a1)(uint64_t))
{
  uint64_t v2 = sub_241DA9510();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_defaultCenter);
  if (qword_268D4B4B0 != -1) {
    swift_once();
  }
  memset(v9, 0, sizeof(v9));
  id v7 = (id)qword_268D50F10;
  sub_241DA9500();
  id v8 = (void *)sub_241DA94F0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v6, sel_postNotification_, v8);

  if (a1) {
    a1(6);
  }
}

uint64_t sub_241D823C4(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_241DAA2E0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v8 = a2;
    sub_241DAA2B0();
    id v9 = a2;
    id v10 = a2;
    uint64_t v11 = sub_241DAA2D0();
    os_log_type_t v12 = sub_241DAAC10();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v21 = v14;
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v15 = sub_241DAB1F0();
      uint64_t v20 = sub_241D48854(v15, v16, &v21);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      uint64_t v20 = (uint64_t)a2;
      id v17 = a2;
      sub_241D83000();
      uint64_t v18 = sub_241DAA9B0();
      uint64_t v20 = sub_241D48854(v18, v19, &v21);
      sub_241DAAF10();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241D1C000, v11, v12, "[%s] Error occurred while deleting a vision prescription sample: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v14, -1, -1);
      MEMORY[0x24563A5D0](v13, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

unint64_t sub_241D82650(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_241D78538();
  uint64_t v2 = sub_241DAB0D0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_241D785A4(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_241D82778(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_241D28BE4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_241D82778(uint64_t a1, uint64_t a2)
{
  sub_241DAB1B0();
  sub_241DAAA10();
  uint64_t v4 = sub_241DAB1D0();

  return sub_241D827F0(a1, a2, v4);
}

unint64_t sub_241D827F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_241DAB160() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_241DAB160() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_241DAB160()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

double sub_241D82938@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_241DA3428(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_241DA434C();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_241D28BE4((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_241D82A3C(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_241D82A3C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_241DAAF70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_241DAB1B0();
        swift_bridgeObjectRetain();
        sub_241DAAA10();
        uint64_t v10 = sub_241DAB1D0();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            _OWORD *v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          long long v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            _OWORD *v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_241D82C14(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_241DAAF70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_241DAB1B0();
        sub_241DAB1C0();
        double result = sub_241DAB1D0();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          unint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *unint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            void *v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_241D82DD0(uint64_t a1, uint64_t a2)
{
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241D82E68(uint64_t a1, uint64_t a2)
{
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241D82EFC(uint64_t a1, uint64_t a2)
{
  return sub_241D8367C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))sub_241D7E414);
}

uint64_t sub_241D82F14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241D82F24()
{
  return swift_release();
}

uint64_t sub_241D82F2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241D83820(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241D82F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_241D83000()
{
  unint64_t result = qword_268D4C3D0;
  if (!qword_268D4C3D0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4C3D0);
  }
  return result;
}

uint64_t sub_241D8305C()
{
  return sub_241D83790();
}

unint64_t sub_241D83064()
{
  unint64_t result = qword_268D4D390;
  if (!qword_268D4D390)
  {
    sub_241DAA830();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4D390);
  }
  return result;
}

uint64_t sub_241D830C0()
{
  return sub_241D83790();
}

uint64_t sub_241D830C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241D83128()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D83160()
{
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_241D831B0(uint64_t a1, void *a2)
{
  return sub_241D817FC(a1, a2, *(void **)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_241D831CC()
{
  return sub_241D83790();
}

uint64_t sub_241D831D4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D831E4(uint64_t a1, void *a2)
{
  return sub_241D823C4(a1, a2);
}

uint64_t sub_241D831EC()
{
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, MEMORY[0x263F8D8F0]);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_release();
  uint64_t v5 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v3, 1, v5))
  {
    uint64_t v6 = sub_241DA96C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
    uint64_t v7 = v0 + v3 + *(int *)(v5 + 20);
    uint64_t v8 = sub_241DAA260();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_241D833A4(char a1, void *a2)
{
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, MEMORY[0x263F8D8F0]);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (void *)v2[2];
  uint64_t v9 = v2[3];
  uint64_t v10 = v2[4];
  uint64_t v11 = v2[5];
  uint64_t v12 = *(void *)((char *)v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241D7F6A8(a1, a2, v8, v9, v10, v11, (uint64_t)v2 + v7, v12);
}

uint64_t sub_241D8348C()
{
  return sub_241D83790();
}

uint64_t sub_241D8349C()
{
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, MEMORY[0x263F8D8F0]);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  uint64_t v5 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v3, 1, v5))
  {
    uint64_t v6 = sub_241DA96C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
    uint64_t v7 = v0 + v3 + *(int *)(v5 + 20);
    uint64_t v8 = sub_241DAA260();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_241D83664(uint64_t a1, uint64_t a2)
{
  return sub_241D8367C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))sub_241D80B60);
}

uint64_t sub_241D8367C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))
{
  sub_241D83820(0, &qword_268D4CAD0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *((void *)v3 + 2);
  uint64_t v11 = *((void *)v3 + 3);
  uint64_t v12 = *((void *)v3 + 4);
  uint64_t v13 = *(void *)&v3[v9];
  uint64_t v14 = *(void *)&v3[(v9 + 15) & 0xFFFFFFFFFFFFFFF8];

  return a3(a1, a2, v10, v11, v12, &v3[v8], v13, v14);
}

uint64_t sub_241D83788()
{
  return sub_241D83790();
}

uint64_t sub_241D83790()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_241D837C4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241D83804()
{
  sub_241D82240(*(void (**)(uint64_t))(v0 + 16));
}

void sub_241D83820(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t *sub_241D83884(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241DA96C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241DAA260();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_241D8398C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241DA96C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_241DAA260();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_241D83A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241DA96C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241DAA260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_241D83AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241DA96C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241DAA260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_241D83BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241DA96C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241DAA260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_241D83C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241DA96C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241DAA260();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_241D83D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241D83D28);
}

uint64_t sub_241D83D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241DA96C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_241DAA260();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_241D83E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241D83E34);
}

uint64_t sub_241D83E34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_241DA96C0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_241DAA260();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_241D83F38()
{
  uint64_t result = sub_241DA96C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241DAA260();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_241D84064(uint64_t a1)
{
  v48[1] = *(id *)MEMORY[0x263EF8340];
  swift_getObjectType();
  uint64_t v3 = sub_241DAA2E0();
  uint64_t v46 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = &v41[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241D219B0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_241DA96C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v41[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v41[-v14];
  sub_241D43B04(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_241D88314((uint64_t)v8, (uint64_t (*)(void))sub_241D219B0);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v15, v8, v9);
  uint64_t v17 = *(void **)(v1
                 + OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler_fileManager);
  uint64_t v18 = (void *)sub_241DA9660();
  v48[0] = 0;
  LODWORD(v17) = objc_msgSend(v17, sel_removeItemAtURL_error_, v18, v48);

  if (v17)
  {
    uint64_t v19 = *(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8);
    id v20 = v48[0];
    return v19(v15, v9);
  }
  else
  {
    id v21 = v48[0];
    BOOL v22 = (void *)sub_241DA9620();

    swift_willThrow();
    sub_241DAA2B0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v13, v15, v9);
    id v23 = v22;
    id v24 = v22;
    id v25 = sub_241DAA2D0();
    os_log_type_t v26 = sub_241DAAC10();
    int v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v45 = v3;
      uint64_t v29 = v28;
      uint64_t v44 = (void *)swift_slowAlloc();
      v48[0] = v44;
      *(_DWORD *)uint64_t v29 = 136315650;
      os_log_t v43 = v25;
      uint64_t v30 = sub_241DAB1F0();
      uint64_t v47 = sub_241D48854(v30, v31, (uint64_t *)v48);
      int v42 = v27;
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      sub_241D88AFC((unint64_t *)&qword_268D4CBF0, MEMORY[0x263F06EA8]);
      uint64_t v32 = sub_241DAB120();
      uint64_t v47 = sub_241D48854(v32, v33, (uint64_t *)v48);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v10 + 8);
      v34(v13, v9);
      *(_WORD *)(v29 + 22) = 2080;
      uint64_t v47 = (uint64_t)v22;
      id v35 = v22;
      sub_241D83000();
      uint64_t v36 = sub_241DAA9C0();
      uint64_t v47 = sub_241D48854(v36, v37, (uint64_t *)v48);
      sub_241DAAF10();
      swift_bridgeObjectRelease();

      os_log_t v38 = v43;
      _os_log_impl(&dword_241D1C000, v43, (os_log_type_t)v42, "[%s] Error occurred while attempting to clean up file at %s: %s", (uint8_t *)v29, 0x20u);
      id v39 = v44;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v39, -1, -1);
      MEMORY[0x24563A5D0](v29, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v5, v45);
      return ((uint64_t (*)(unsigned char *, uint64_t))v34)(v15, v9);
    }
    else
    {

      uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v10 + 8);
      v40(v13, v9);

      (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v5, v3);
      return ((uint64_t (*)(unsigned char *, uint64_t))v40)(v15, v9);
    }
  }
}

uint64_t sub_241D84610()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241DAA6B0();
  swift_release();

  return swift_release();
}

id sub_241D84688(void *a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v48 = a2;
  unint64_t v49 = a3;
  uint64_t v7 = sub_241DAA260();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  MEMORY[0x270FA5388](v7);
  os_log_t v43 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D86250(0, &qword_268D4BD18, (uint64_t (*)(uint64_t))sub_241D219B0, MEMORY[0x263EFDE58]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v40 - v12;
  sub_241D219B0();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v44 = (uint64_t)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v47 = (char *)&v40 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v40 - v20;
  MEMORY[0x270FA5388](v19);
  id v23 = (char *)&v40 - v22;
  id v24 = &v4[OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler__selectedImageURL];
  uint64_t v25 = sub_241DA96C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v23, 1, 1, v25);
  sub_241D43B04((uint64_t)v23, (uint64_t)v21);
  os_log_type_t v26 = v4;
  sub_241DAA690();
  sub_241D88314((uint64_t)v23, (uint64_t (*)(void))sub_241D219B0);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v13, v10);
  *(void *)&v26[OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler_fileManager] = a4;
  id v27 = a4;

  uint64_t v28 = (objc_class *)type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler();
  v50.receiver = v26;
  v50.super_class = v28;
  id v29 = objc_msgSendSuper2(&v50, sel_init);
  if (a1)
  {
    uint64_t v30 = a1;
    uint64_t v31 = v48;
    unint64_t v32 = v49;
    sub_241D64C78(a1, v48, v49);
    sub_241D64C78(a1, v31, v32);
    id v33 = v29;
    sub_241D415B8(v31, v32);
    id v34 = objc_msgSend(a1, sel_contentType);
    id v42 = v29;
    id v35 = v34;

    id v41 = v27;
    uint64_t v36 = (uint64_t)v43;
    sub_241DAA230();

    sub_241D84B4C(v31, v32, v36, (uint64_t)v23);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v36, v46);
    sub_241D43B04((uint64_t)v23, (uint64_t)v21);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v37 = (uint64_t)v47;
    sub_241DAA6B0();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_241D43B04((uint64_t)v21, v44);
    id v38 = v33;
    sub_241DAA6C0();
    sub_241D84064(v37);
    sub_241D88314((uint64_t)v21, (uint64_t (*)(void))sub_241D219B0);
    sub_241D88314(v37, (uint64_t (*)(void))sub_241D219B0);

    sub_241D64E40(v30, v31, v32);
    sub_241D64E40(v30, v31, v32);
    id v29 = v42;
    sub_241D88314((uint64_t)v23, (uint64_t (*)(void))sub_241D219B0);
  }
  else
  {
  }
  return v29;
}

uint64_t sub_241D84B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v24[4] = a3;
  v24[5] = a1;
  v24[6] = a2;
  uint64_t v25 = a4;
  v24[0] = swift_getObjectType();
  uint64_t v4 = sub_241DAA2E0();
  v24[1] = *(void *)(v4 - 8);
  v24[2] = v4;
  MEMORY[0x270FA5388](v4);
  v24[3] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241DA97B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241DA96C0();
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v24 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v24 - v17;
  uint64_t v19 = NSTemporaryDirectory();
  sub_241DAA990();

  sub_241DA9650();
  swift_bridgeObjectRelease();
  sub_241DA97A0();
  sub_241DA9780();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v20 = v26;
  sub_241DA9680();
  swift_bridgeObjectRelease();
  sub_241DA9670();
  id v21 = *(void (**)(char *, uint64_t))(v20 + 8);
  v21(v13, v10);
  sub_241DA9700();
  v21(v18, v10);
  uint64_t v22 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v25, v16, v10);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v10);
}

id sub_241D85094()
{
  uint64_t v1 = v0;
  v51[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_241DAA2E0();
  uint64_t v48 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = &v42[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241D219B0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_241DA96C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v42[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v42[-v13];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241DAA6B0();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_241D88314((uint64_t)v7, (uint64_t (*)(void))sub_241D219B0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v14, v7, v8);
    uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler_fileManager];
    uint64_t v16 = (void *)sub_241DA9660();
    v51[0] = 0;
    LODWORD(v15) = objc_msgSend(v15, sel_removeItemAtURL_error_, v16, v51);

    if (v15)
    {
      uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
      id v18 = v51[0];
      v17(v14, v8);
    }
    else
    {
      id v19 = v51[0];
      uint64_t v20 = (void *)sub_241DA9620();

      swift_willThrow();
      id v21 = v4;
      sub_241DAA2B0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v14, v8);
      id v22 = v20;
      id v23 = v20;
      id v24 = sub_241DAA2D0();
      os_log_type_t v25 = sub_241DAAC10();
      int v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v46 = v21;
        uint64_t v28 = v27;
        uint64_t v45 = (void *)swift_slowAlloc();
        v51[0] = v45;
        *(_DWORD *)uint64_t v28 = 136315650;
        os_log_t v44 = v24;
        uint64_t v29 = sub_241DAB1F0();
        int v43 = v26;
        uint64_t v49 = sub_241D48854(v29, v30, (uint64_t *)v51);
        uint64_t ObjectType = v2;
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2080;
        sub_241D88AFC((unint64_t *)&qword_268D4CBF0, MEMORY[0x263F06EA8]);
        uint64_t v31 = sub_241DAB120();
        uint64_t v49 = sub_241D48854(v31, v32, (uint64_t *)v51);
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        id v33 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
        v33(v12, v8);
        *(_WORD *)(v28 + 22) = 2080;
        uint64_t v49 = (uint64_t)v20;
        id v34 = v20;
        sub_241D83000();
        uint64_t v35 = sub_241DAA9C0();
        uint64_t v49 = sub_241D48854(v35, v36, (uint64_t *)v51);
        sub_241DAAF10();
        swift_bridgeObjectRelease();

        os_log_t v37 = v44;
        _os_log_impl(&dword_241D1C000, v44, (os_log_type_t)v43, "[%s] Error occurred while attempting to clean up file at %s: %s", (uint8_t *)v28, 0x20u);
        id v38 = v45;
        swift_arrayDestroy();
        MEMORY[0x24563A5D0](v38, -1, -1);
        MEMORY[0x24563A5D0](v28, -1, -1);

        (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v46, ObjectType);
        v33(v14, v8);
      }
      else
      {

        id v39 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
        v39(v12, v8);

        (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v21, v2);
        v39(v14, v8);
      }
    }
  }
  uint64_t v40 = (objc_class *)type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler();
  v50.receiver = v1;
  v50.super_class = v40;
  return objc_msgSendSuper2(&v50, sel_dealloc);
}

uint64_t sub_241D85778()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler();
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler()
{
  uint64_t result = qword_268D4CBC8;
  if (!qword_268D4CBC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D857CC()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  sub_241D219B0();
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v26 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v29 = (char *)&v26 - v9;
  uint64_t v10 = sub_241DAA2E0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA2B0();
  uint64_t v14 = sub_241DAA2D0();
  os_log_type_t v15 = sub_241DAAC30();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = v10;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v28 = v1;
    uint64_t v19 = v18;
    uint64_t v31 = v18;
    uint64_t v27 = v5;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v20 = sub_241DAB1F0();
    uint64_t v30 = sub_241D48854(v20, v21, &v31);
    uint64_t v5 = v27;
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v14, v15, "[%s] Removing image selection.", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v19;
    uint64_t v1 = v28;
    MEMORY[0x24563A5D0](v22, -1, -1);
    MEMORY[0x24563A5D0](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v23 = sub_241DA96C0();
  uint64_t v24 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v29, 1, 1, v23);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241DAA6B0();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241D43B04(v24, (uint64_t)v5);
  v1;
  sub_241DAA6C0();
  sub_241D84064((uint64_t)v8);
  sub_241D88314(v24, (uint64_t (*)(void))sub_241D219B0);
  return sub_241D88314((uint64_t)v8, (uint64_t (*)(void))sub_241D219B0);
}

BOOL sub_241D85B70()
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v0 = sub_241DAA2E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D219B0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241DA96C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241DAA6B0();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_241D88314((uint64_t)v6, (uint64_t (*)(void))sub_241D219B0);
    return 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  id v11 = objc_msgSend(self, sel_defaultManager);
  sub_241DA96A0();
  uint64_t v12 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  *(void *)&long long v39 = 0;
  id v13 = objc_msgSend(v11, sel_attributesOfItemAtPath_error_, v12, &v39);

  uint64_t v14 = (void *)v39;
  if (v13)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_241D88AFC((unint64_t *)&unk_268D4CC10, type metadata accessor for FileAttributeKey);
    uint64_t v15 = sub_241DAA920();
    id v16 = v14;

    if (*(void *)(v15 + 16))
    {
      id v17 = (id)*MEMORY[0x263F080B8];
      uint64_t v18 = sub_241DA35E4();
      if (v19)
      {
        sub_241D2DA4C(*(void *)(v15 + 56) + 32 * v18, (uint64_t)&v39);
      }
      else
      {
        long long v39 = 0u;
        long long v40 = 0u;
      }
    }
    else
    {
      long long v39 = 0u;
      long long v40 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v40 + 1))
    {
      sub_241D3C154();
      if (swift_dynamicCast())
      {
        id v30 = v38;
        uint64_t v31 = (uint64_t)objc_msgSend(v38, sel_integerValue);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        return v31 < 26214400;
      }
    }
    else
    {
      sub_241D88314((uint64_t)&v39, (uint64_t (*)(void))sub_241D2D9F0);
    }
LABEL_17:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 1;
  }
  id v20 = (id)v39;
  unint64_t v21 = (void *)sub_241DA9620();

  swift_willThrow();
  sub_241DAA2B0();
  uint64_t v22 = sub_241DAA2D0();
  os_log_type_t v23 = sub_241DAAC10();
  if (!os_log_type_enabled(v22, v23))
  {

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    goto LABEL_17;
  }
  uint64_t v36 = v1;
  uint64_t v24 = swift_slowAlloc();
  id v35 = v21;
  os_log_type_t v25 = (uint8_t *)v24;
  uint64_t v34 = swift_slowAlloc();
  *(void *)&long long v39 = v34;
  *(_DWORD *)os_log_type_t v25 = 136315138;
  v33[1] = v25 + 4;
  uint64_t v26 = sub_241DAB1F0();
  id v38 = (id)sub_241D48854(v26, v27, (uint64_t *)&v39);
  sub_241DAAF10();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_241D1C000, v22, v23, "[%s] Failed to read size information", v25, 0xCu);
  uint64_t v28 = 1;
  uint64_t v29 = v34;
  swift_arrayDestroy();
  MEMORY[0x24563A5D0](v29, -1, -1);
  MEMORY[0x24563A5D0](v25, -1, -1);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v28;
}

void sub_241D86180()
{
  sub_241D86250(319, &qword_268D4BD18, (uint64_t (*)(uint64_t))sub_241D219B0, MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_241D86250(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241D862B8(void *a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_241DAA2E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241DAA260();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  if (*(void *)(a2 + 16))
  {
    sub_241DAA8C0();
    id v13 = (void *)sub_241DAA8B0();
    sub_241DAA250();
    sub_241DAA220();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v14 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = ObjectType;
    aBlock[4] = (uint64_t)sub_241D882C0;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_241D87E10;
    aBlock[3] = (uint64_t)&unk_26F5D1218;
    id v17 = _Block_copy(aBlock);
    swift_release();
    id v18 = objc_msgSend(v13, sel_loadFileRepresentationForTypeIdentifier_completionHandler_, v14, v17);
    _Block_release(v17);
  }
  else
  {
    sub_241DAA2B0();
    char v19 = sub_241DAA2D0();
    os_log_type_t v20 = sub_241DAAC30();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      aBlock[0] = v22;
      *(_DWORD *)unint64_t v21 = 136315138;
      uint64_t v23 = sub_241DAB1F0();
      v25[1] = sub_241D48854(v23, v24, aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v19, v20, "[%s] No photo selected", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v22, -1, -1);
      MEMORY[0x24563A5D0](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_241D866AC(void *a1, void *a2)
{
  uint64_t v5 = sub_241DAA260();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D219B0();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v35 - v14;
  MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v35 - v16;
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  id v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F14740]), sel_init);
  unint64_t v18 = (unint64_t)objc_msgSend(a2, sel_pageCount);
  if ((v18 & 0x8000000000000000) != 0)
  {
LABEL_14:
    __break(1u);
    return;
  }
  unint64_t v19 = v18;
  id v35 = v8;
  uint64_t v36 = v6;
  uint64_t v37 = v5;
  id v38 = v17;
  long long v39 = v12;
  long long v40 = v15;
  uint64_t v41 = v2;
  if (v18)
  {
    uint64_t v20 = 0;
    while (v19 != v20)
    {
      id v21 = objc_msgSend(a2, sel_imageOfPageAtIndex_, v20);
      id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F14750]), sel_initWithImage_, v21);
      if (!v22)
      {

        goto LABEL_10;
      }
      uint64_t v23 = v22;
      objc_msgSend(v42, sel_insertPage_atIndex_, v22, v20);

      if (v19 == ++v20) {
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_7:
  id v24 = objc_msgSend(v42, sel_dataRepresentation, v35);
  if (v24)
  {
    os_log_type_t v25 = v24;
    uint64_t v26 = sub_241DA96F0();
    unint64_t v28 = v27;

    uint64_t v29 = (uint64_t)v35;
    sub_241DAA240();
    uint64_t v30 = (uint64_t)v38;
    uint64_t v31 = v41;
    sub_241D84B4C(v26, v28, v29, (uint64_t)v38);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v29, v37);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v32 = (uint64_t)v40;
    sub_241DAA6B0();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_241D43B04(v30, (uint64_t)v39);
    id v33 = v31;
    sub_241DAA6C0();
    sub_241D84064(v32);
    sub_241D88314(v30, (uint64_t (*)(void))sub_241D219B0);
    sub_241D88314(v32, (uint64_t (*)(void))sub_241D219B0);

    sub_241D415B8(v26, v28);
  }
  else
  {
LABEL_10:
    id v34 = v42;
  }
}

void *sub_241D86AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v63 = a4;
  uint64_t v6 = sub_241DAA2E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v62 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v57 - v10;
  sub_241D219B0();
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v60 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v61 = (char *)&v57 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v59 = (char *)&v57 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v57 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v57 - v22;
  uint64_t v24 = sub_241DA96C0();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  unint64_t v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v65 = (char *)&v57 - v29;
  swift_beginAccess();
  uint64_t result = (void *)MEMORY[0x24563A650](a3 + 16);
  if (result)
  {
    id v64 = result;
    sub_241D43B04(a1, (uint64_t)v23);
    uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    if (v31(v23, 1, v24) == 1)
    {
      sub_241D88314((uint64_t)v23, (uint64_t (*)(void))sub_241D219B0);
      sub_241DAA2B0();
      uint64_t v32 = sub_241DAA2D0();
      os_log_type_t v33 = sub_241DAAC10();
      if (os_log_type_enabled(v32, v33))
      {
        id v34 = (uint8_t *)swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        uint64_t v67 = v35;
        *(_DWORD *)id v34 = 136315138;
        uint64_t v36 = sub_241DAB1F0();
        uint64_t v66 = sub_241D48854(v36, v37, &v67);
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241D1C000, v32, v33, "[%s] URL is empty. Skipping updating the url of selectedImageURL", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24563A5D0](v35, -1, -1);
        MEMORY[0x24563A5D0](v34, -1, -1);
      }

      return (void *)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    }
    else
    {
      uint64_t v57 = v6;
      uint64_t v58 = v7;
      id v38 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
      uint64_t v39 = (uint64_t)v65;
      v38(v65, v23, v24);
      sub_241D87274(v39, (uint64_t)v21);
      int v40 = v31(v21, 1, v24);
      uint64_t v41 = (char *)v24;
      if (v40 == 1)
      {
        sub_241D88314((uint64_t)v21, (uint64_t (*)(void))sub_241D219B0);
        id v42 = v62;
        sub_241DAA2B0();
        int v43 = sub_241DAA2D0();
        os_log_type_t v44 = sub_241DAAC10();
        BOOL v45 = os_log_type_enabled(v43, v44);
        uint64_t v46 = v57;
        if (v45)
        {
          uint64_t v47 = (uint8_t *)swift_slowAlloc();
          uint64_t v48 = swift_slowAlloc();
          uint64_t v61 = v41;
          uint64_t v49 = v48;
          uint64_t v67 = v48;
          *(_DWORD *)uint64_t v47 = 136315138;
          uint64_t v50 = sub_241DAB1F0();
          uint64_t v66 = sub_241D48854(v50, v51, &v67);
          sub_241DAAF10();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241D1C000, v43, v44, "[%s] Unable to move the file to a temporary location.", v47, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24563A5D0](v49, -1, -1);
          MEMORY[0x24563A5D0](v47, -1, -1);

          (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v46);
          return (void *)(*(uint64_t (**)(char *, char *))(v25 + 8))(v65, v61);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v46);
          return (void *)(*(uint64_t (**)(char *, char *))(v25 + 8))(v65, v41);
        }
      }
      else
      {
        v38(v28, v21, v24);
        uint64_t v52 = (uint64_t)v59;
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v59, v28, v24);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v52, 0, 1, v24);
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v53 = (uint64_t)v61;
        id v54 = v64;
        sub_241DAA6B0();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_241D43B04(v52, v60);
        id v55 = v54;
        sub_241DAA6C0();
        sub_241D84064(v53);
        sub_241D88314(v52, (uint64_t (*)(void))sub_241D219B0);
        sub_241D88314(v53, (uint64_t (*)(void))sub_241D219B0);

        os_log_type_t v56 = *(void (**)(char *, char *))(v25 + 8);
        v56(v28, v41);
        return (void *)((uint64_t (*)(char *, char *))v56)(v65, v41);
      }
    }
  }
  return result;
}

uint64_t sub_241D87274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  v93[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_241DAA2E0();
  uint64_t v85 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v88 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v81 = (char *)&v74 - v6;
  uint64_t v77 = sub_241DA97B0();
  uint64_t v76 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v75 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241DA96C0();
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v84 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v74 = (char *)&v74 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v78 = (char *)&v74 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (char *)&v74 - v15;
  sub_241D882E0(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_241DAA260();
  uint64_t v83 = *(void (***)(char *, char *))(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241DA9610();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D86250(0, &qword_268D4CAD8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241DB2C80;
  uint64_t v27 = (void *)*MEMORY[0x263EFF780];
  *(void *)(inited + 32) = *MEMORY[0x263EFF780];
  id v28 = v27;
  sub_241D54B70(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  uint64_t v89 = a1;
  sub_241DA9640();
  uint64_t v49 = v83;
  swift_bridgeObjectRelease();
  sub_241DA95F0();
  uint64_t v51 = v50;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v43 = v90;
  uint64_t v52 = v81;
  if (v51)
  {
    sub_241DAA270();
    uint64_t v53 = (char *)v19;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v49[6])(v18, 1, v19) != 1)
    {
      ((void (*)(char *, char *, uint64_t))v49[4])(v21, v18, v19);
      uint64_t v63 = NSTemporaryDirectory();
      sub_241DAA990();
      uint64_t v81 = v53;

      sub_241DA9650();
      swift_bridgeObjectRelease();
      id v64 = v75;
      sub_241DA97A0();
      sub_241DA9780();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v64, v77);
      uint64_t v65 = v74;
      sub_241DA9680();
      swift_bridgeObjectRelease();
      uint64_t v66 = v78;
      sub_241DA9670();
      uint64_t v67 = *(void (**)(char *, uint64_t))(v43 + 8);
      uint64_t v48 = v91;
      v67(v65, v91);
      uint64_t v68 = *(void **)(v79
                     + OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler_fileManager);
      uint64_t v69 = (void *)sub_241DA9660();
      id v70 = (void *)sub_241DA9660();
      v93[0] = 0;
      LODWORD(v65) = objc_msgSend(v68, sel_moveItemAtURL_toURL_error_, v69, v70, v93);

      if (v65)
      {
        id v71 = v93[0];
        v67(v80, v48);
        v83[1](v21, v81);
        uint64_t v61 = v87;
        (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v87, v66, v48);
        uint64_t v60 = 0;
      }
      else
      {
        id v72 = v93[0];
        uint64_t v73 = (void *)sub_241DA9620();

        swift_willThrow();
        v67(v66, v48);
        v67(v80, v48);
        v83[1](v21, v81);
        uint64_t v29 = v88;
        sub_241DAA2B0();
        uint64_t v30 = *(void (***)(char *, char *))(v43 + 16);
        uint64_t v31 = v84;
        ((void (*)(char *, uint64_t, uint64_t))v30)(v84, v89, v48);
        id v32 = v73;
        id v33 = v73;
        id v34 = sub_241DAA2D0();
        os_log_type_t v35 = sub_241DAAC10();
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v36 = v31;
          uint64_t v37 = swift_slowAlloc();
          id v38 = (void *)swift_slowAlloc();
          v93[0] = v38;
          *(_DWORD *)uint64_t v37 = 136315650;
          uint64_t v39 = sub_241DAB1F0();
          uint64_t v83 = v30;
          uint64_t v92 = sub_241D48854(v39, v40, (uint64_t *)v93);
          sub_241DAAF10();
          swift_bridgeObjectRelease();
          *(_WORD *)(v37 + 12) = 2080;
          sub_241D88AFC((unint64_t *)&qword_268D4CBF0, MEMORY[0x263F06EA8]);
          uint64_t v41 = sub_241DAB120();
          uint64_t v92 = sub_241D48854(v41, v42, (uint64_t *)v93);
          sub_241DAAF10();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v90 + 8))(v36, v91);
          *(_WORD *)(v37 + 22) = 2080;
          uint64_t v43 = v90;
          uint64_t v92 = (uint64_t)v73;
          id v44 = v73;
          sub_241D83000();
          uint64_t v45 = sub_241DAA9B0();
          uint64_t v92 = sub_241D48854(v45, v46, (uint64_t *)v93);
          sub_241DAAF10();
          uint64_t v30 = v83;
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_241D1C000, v34, v35, "[%s] error occurred while moving file from url %s: %s", (uint8_t *)v37, 0x20u);
          swift_arrayDestroy();
          uint64_t v47 = v38;
          uint64_t v48 = v91;
          MEMORY[0x24563A5D0](v47, -1, -1);
          MEMORY[0x24563A5D0](v37, -1, -1);

          (*(void (**)(char *, uint64_t))(v85 + 8))(v88, v86);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v48);
          (*(void (**)(char *, uint64_t))(v85 + 8))(v29, v86);
        }
        uint64_t v61 = v87;
        ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v87, v89, v48);
        uint64_t v60 = 0;
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v61, v60, 1, v48);
    }
    sub_241D88314((uint64_t)v18, (uint64_t (*)(void))sub_241D882E0);
  }
  sub_241DAA2B0();
  id v54 = sub_241DAA2D0();
  os_log_type_t v55 = sub_241DAAC10();
  if (os_log_type_enabled(v54, v55))
  {
    os_log_type_t v56 = (uint8_t *)swift_slowAlloc();
    uint64_t v57 = (void *)swift_slowAlloc();
    v93[0] = v57;
    *(_DWORD *)os_log_type_t v56 = 136315138;
    uint64_t v58 = sub_241DAB1F0();
    uint64_t v92 = sub_241D48854(v58, v59, (uint64_t *)v93);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v54, v55, "[%s] cannot get the type identifier. Skipping to move file.", v56, 0xCu);
    uint64_t v60 = 1;
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v57, -1, -1);
    MEMORY[0x24563A5D0](v56, -1, -1);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v52, v86);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v85 + 8))(v52, v86);
    uint64_t v60 = 1;
  }
  uint64_t v61 = v87;
  uint64_t v48 = v91;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v61, v60, 1, v48);
}

uint64_t sub_241D87E10(uint64_t a1, uint64_t a2, void *a3)
{
  sub_241D219B0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_241DA9690();
    uint64_t v10 = sub_241DA96C0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = sub_241DA96C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_241D88314((uint64_t)v8, (uint64_t (*)(void))sub_241D219B0);
}

uint64_t sub_241D87FDC(uint64_t a1)
{
  uint64_t result = sub_241D88AFC(&qword_268D4BDA0, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241D88034()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241DAA6B0();
  swift_release();

  return swift_release();
}

uint64_t sub_241D880B4(uint64_t a1, void **a2)
{
  sub_241D219B0();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v15 - v9;
  MEMORY[0x270FA5388](v8);
  id v12 = (char *)&v15 - v11;
  sub_241D43B04(a1, (uint64_t)&v15 - v11);
  uint64_t v13 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241DAA6B0();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241D43B04((uint64_t)v12, (uint64_t)v7);
  v13;
  sub_241DAA6C0();
  sub_241D84064((uint64_t)v10);
  sub_241D88314((uint64_t)v12, (uint64_t (*)(void))sub_241D219B0);
  return sub_241D88314((uint64_t)v10, (uint64_t (*)(void))sub_241D219B0);
}

uint64_t sub_241D88250()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D88288()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void *sub_241D882C0(uint64_t a1, uint64_t a2)
{
  return sub_241D86AF4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_241D882C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241D882D8()
{
  return swift_release();
}

void sub_241D882E0(uint64_t a1)
{
}

uint64_t sub_241D88314(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241D88374(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_241DAA2E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v74 = (char *)&v65 - v10;
  sub_241D219B0();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v72 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v73 = (char *)&v65 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  id v71 = (char *)&v65 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v65 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v65 - v21;
  uint64_t v23 = sub_241DA96C0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v77 = v5;
  uint64_t v78 = v6;
  uint64_t v76 = ObjectType;
  if (v28)
  {
    uint64_t v69 = v20;
    id v70 = v2;
    uint64_t v29 = v9;
    uint64_t v68 = v27;
    uint64_t v75 = (char *)&v65 - v26;
    uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v24 + 16);
    v30(v22, a1 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80)), v23);
    uint64_t v31 = *(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56);
    v31(v22, 0, 1, v23);
    id v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
    if (v32((uint64_t)v22, 1, v23) != 1)
    {
      uint64_t v65 = (void (*)(char *, uint64_t, uint64_t))v30;
      uint64_t v66 = (void (*)(uint64_t, void, uint64_t, uint64_t))v31;
      id v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32);
      uint64_t v67 = v24;
      uint64_t v34 = v23;
      os_log_type_t v35 = v75;
      uint64_t v36 = v22;
      uint64_t v37 = v33;
      v33((uint64_t)v75, (uint64_t)v36, v34);
      uint64_t v38 = (uint64_t)v69;
      uint64_t v39 = v70;
      uint64_t v40 = (uint64_t)v35;
      uint64_t v41 = v34;
      sub_241D87274(v40, (uint64_t)v69);
      if (v32(v38, 1, v34) == 1)
      {
        sub_241D88314(v38, (uint64_t (*)(void))sub_241D219B0);
        unint64_t v42 = v74;
        sub_241DAA2B0();
        uint64_t v43 = sub_241DAA2D0();
        os_log_type_t v44 = sub_241DAAC10();
        BOOL v45 = os_log_type_enabled(v43, v44);
        uint64_t v46 = v77;
        uint64_t v47 = v67;
        if (v45)
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          uint64_t v80 = v49;
          *(_DWORD *)uint64_t v48 = 136315138;
          uint64_t v50 = sub_241DAB1F0();
          uint64_t v79 = sub_241D48854(v50, v51, &v80);
          sub_241DAAF10();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241D1C000, v43, v44, "[%s] Unable to move the file to a temporary location.", v48, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24563A5D0](v49, -1, -1);
          MEMORY[0x24563A5D0](v48, -1, -1);

          (*(void (**)(char *, uint64_t))(v78 + 8))(v74, v46);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v78 + 8))(v42, v46);
        }
        return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v75, v41);
      }
      else
      {
        uint64_t v60 = v68;
        v37(v68, v38, v41);
        uint64_t v61 = (uint64_t)v71;
        v65(v71, v60, v41);
        v66(v61, 0, 1, v41);
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v62 = (uint64_t)v73;
        sub_241DAA6B0();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_241D43B04(v61, v72);
        id v63 = v39;
        sub_241DAA6C0();
        sub_241D84064(v62);
        sub_241D88314(v61, (uint64_t (*)(void))sub_241D219B0);
        sub_241D88314(v62, (uint64_t (*)(void))sub_241D219B0);
        id v64 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
        v64(v60, v41);
        return ((uint64_t (*)(char *, uint64_t))v64)(v75, v41);
      }
    }
  }
  else
  {
    uint64_t v29 = v9;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v22, 1, 1, v23);
  }
  sub_241D88314((uint64_t)v22, (uint64_t (*)(void))sub_241D219B0);
  uint64_t v52 = v29;
  sub_241DAA2B0();
  uint64_t v53 = sub_241DAA2D0();
  os_log_type_t v54 = sub_241DAAC10();
  if (os_log_type_enabled(v53, v54))
  {
    os_log_type_t v55 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    uint64_t v80 = v56;
    *(_DWORD *)os_log_type_t v55 = 136315138;
    uint64_t v57 = sub_241DAB1F0();
    uint64_t v79 = sub_241D48854(v57, v58, &v80);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v53, v54, "[%s] No document selected. Skipping updating the url of selectedImageURL", v55, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v56, -1, -1);
    MEMORY[0x24563A5D0](v55, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v52, v77);
}

uint64_t sub_241D88AFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4CC30);
}

uint64_t sub_241D88B64()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241D88BA4(char a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_241D8BE84();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v51 = v10;
  uint64_t v52 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v40 - v15;
  uint64_t v17 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_241D892A8(a1, a2, a3, a4);
  uint64_t v22 = v21;
  if (*(void *)(v21 + 16))
  {
    sub_241D8C974(v21 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), (uint64_t)v20, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment);
    uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDD90];
    sub_241D8BFA0(0, &qword_268D4CC58, MEMORY[0x263EFDD90]);
    uint64_t v50 = a4;
    swift_allocObject();
    uint64_t v24 = sub_241DAA600();
    uint64_t v53 = v24;
    sub_241D8C170(v22, v24);
    swift_bridgeObjectRelease();
    sub_241DA9EF0();
    swift_allocObject();
    uint64_t v49 = sub_241DA9EE0();
    uint64_t v54 = v24;
    uint64_t v48 = sub_241D8C45C(&qword_268D4CC60, &qword_268D4CC58, v23);
    uint64_t v46 = sub_241DAA720();
    uint64_t v54 = v46;
    uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_241D8BFA0(0, &qword_268D4CC48, MEMORY[0x263EFDCF0]);
    uint64_t v45 = v26;
    sub_241D8C4E8(0, &qword_268D4B820, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
    uint64_t v44 = v27;
    uint64_t v43 = sub_241D8C45C(&qword_268D4CC50, &qword_268D4CC48, v25);
    uint64_t v28 = v16;
    sub_241DAA750();
    uint64_t v29 = v52;
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    uint64_t v30 = v16;
    uint64_t v31 = v51;
    v41(v14, v30, v51);
    sub_241DAA050();
    swift_allocObject();
    void v40[2] = sub_241D8C4A0(&qword_268D4CC68, (void (*)(uint64_t))sub_241D8BE84);
    sub_241DAA060();
    sub_241DA9B60();
    swift_release();
    sub_241D4397C();
    v40[1] = v32;
    v40[0] = sub_241D8C4A0(&qword_268D4BD30, (void (*)(uint64_t))sub_241D4397C);
    uint64_t v42 = sub_241DA9B40();
    swift_release();
    uint64_t v47 = v5;
    id v33 = *(void (**)(char *, uint64_t))(v29 + 8);
    v33(v28, v31);
    swift_release();
    uint64_t v34 = sub_241D8C4A0(&qword_268D4BD40, (void (*)(uint64_t))sub_241D439DC);
    uint64_t v54 = v53;
    uint64_t v54 = sub_241DAA720();
    sub_241DAA750();
    v41(v14, v28, v31);
    swift_allocObject();
    sub_241DAA060();
    sub_241DA9B60();
    swift_release();
    uint64_t v35 = sub_241DA9B40();
    swift_release();
    v33(v28, v31);
    swift_release();
    sub_241D353DC();
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_241DB4380;
    uint64_t v37 = MEMORY[0x263F440A0];
    *(void *)(v36 + 32) = v49;
    *(void *)(v36 + 40) = v37;
    *(void *)(v36 + 48) = v42;
    *(void *)(v36 + 56) = v34;
    *(void *)(v36 + 64) = v35;
    *(void *)(v36 + 72) = v34;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v38 = sub_241DA9F30();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_241DA9F30();
  }
  swift_release();
  return v38;
}

uint64_t sub_241D892A8(char a1, uint64_t a2, int a3, uint64_t a4)
{
  int v95 = a3;
  uint64_t v94 = a2;
  uint64_t v7 = sub_241DAA2E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241D8C4E8(0, (unint64_t *)&qword_268D4CBE0, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v89 - v15;
  uint64_t v17 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v96 = v4;
  if (a1 == 4)
  {
    uint64_t v91 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v94 = a4;
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_241DA95E0();
    uint64_t v46 = v45;
    sub_241DA95E0();
    sub_241D359C4(0, (unint64_t *)&qword_268D4C380, (unint64_t *)&qword_268D4D270, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_241DB2C80;
    *(void *)(v47 + 56) = MEMORY[0x263F8D310];
    *(void *)(v47 + 64) = sub_241D2B59C();
    *(void *)(v47 + 32) = v44;
    *(void *)(v47 + 40) = v46;
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_241DAA960();
    uint64_t v89 = v49;
    uint64_t v90 = v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_241DA96B0();
    uint64_t v50 = sub_241DA96C0();
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48))(v16, 1, v50);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v52 = v91;
      *(void *)uint64_t v91 = v44;
      *((void *)v52 + 1) = v46;
      uint64_t v53 = (uint64_t)v52;
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v52[*(int *)(v17 + 20)], v16, v50);
      sub_241D8C4E8(0, &qword_268D4CC98, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment, MEMORY[0x263F8E0F8]);
      uint64_t v54 = (int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0)
                  - 8);
      uint64_t v55 = *(void *)(*(void *)v54 + 72);
      unint64_t v56 = (*(unsigned __int8 *)(*(void *)v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v54 + 80);
      uint64_t v57 = swift_allocObject();
      uint64_t v93 = v57;
      *(_OWORD *)(v57 + 16) = xmmword_241DB2C60;
      unint64_t v58 = (uint64_t *)(v57 + v56);
      uint64_t v59 = sub_241DA95E0();
      uint64_t v61 = v60;
      sub_241D8C58C();
      uint64_t v63 = (uint64_t)v13 + *(int *)(v62 + 48);
      uint64_t v64 = v89;
      uint64_t *v13 = v90;
      v13[1] = v64;
      sub_241D8C974(v53, v63, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link);
      uint64_t v92 = v11;
      swift_storeEnumTagMultiPayload();
      uint64_t v65 = swift_allocObject();
      char v66 = v95 & 1;
      *(unsigned char *)(v65 + 16) = v95 & 1;
      uint64_t v67 = v94;
      uint64_t v68 = v96;
      *(void *)(v65 + 24) = v94;
      *(void *)(v65 + 32) = v68;
      *unint64_t v58 = v59;
      v58[1] = v61;
      sub_241D8CA3C((uint64_t)v13, (uint64_t)v58 + v54[7], type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
      uint64_t v69 = (uint64_t *)((char *)v58 + v54[8]);
      *uint64_t v69 = sub_241D8CA14;
      v69[1] = v65;
      id v70 = (uint64_t *)((char *)v58 + v55);
      swift_retain();
      uint64_t v71 = sub_241DA95E0();
      uint64_t v73 = v72;
      uint64_t v74 = sub_241DA95E0();
      uint64_t v76 = v75;
      uint64_t v77 = swift_allocObject();
      *(unsigned char *)(v77 + 16) = v66;
      *(void *)(v77 + 24) = v67;
      *(void *)(v77 + 32) = v68;
      uint64_t v78 = (uint64_t *)((char *)v70 + v54[7]);
      *uint64_t v78 = v74;
      v78[1] = v76;
      swift_storeEnumTagMultiPayload();
      *id v70 = v71;
      v70[1] = v73;
      uint64_t v79 = (uint64_t (**)())((char *)v70 + v54[8]);
      *uint64_t v79 = sub_241D8CAA4;
      v79[1] = (uint64_t (*)())v77;
      swift_retain();
      sub_241D8D054((uint64_t)v91, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link);
      return v93;
    }
  }
  else if (a1 == 6)
  {
    uint64_t v92 = v11;
    uint64_t v19 = a4;
    sub_241D8C4E8(0, &qword_268D4CC98, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment, MEMORY[0x263F8E0F8]);
    uint64_t v20 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
    unint64_t v21 = (*(unsigned __int8 *)(*(void *)(v20 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v20 - 8) + 80);
    uint64_t v91 = *(char **)(*(void *)(v20 - 8) + 72);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_241DB2C60;
    uint64_t v93 = v22;
    uint64_t v23 = (uint64_t *)(v22 + v21);
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    uint64_t v90 = sub_241DA95E0();
    uint64_t v25 = v24;
    uint64_t v26 = sub_241DA95E0();
    uint64_t v28 = v27;
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v94;
    *(void *)(v29 + 16) = v94;
    v95 &= 1u;
    *(unsigned char *)(v29 + 24) = v95;
    uint64_t v31 = v96;
    *(void *)(v29 + 32) = v19;
    *(void *)(v29 + 40) = v31;
    uint64_t v32 = (uint64_t *)((char *)v23 + *(int *)(v20 + 20));
    *uint64_t v32 = v26;
    v32[1] = v28;
    swift_storeEnumTagMultiPayload();
    uint64_t *v23 = v90;
    v23[1] = v25;
    id v33 = (uint64_t (**)())((char *)v23 + *(int *)(v20 + 24));
    void *v33 = sub_241D8CAB0;
    v33[1] = (uint64_t (*)())v29;
    uint64_t v34 = (char **)&v91[(void)v23];
    swift_retain();
    uint64_t v91 = (char *)sub_241DA95E0();
    uint64_t v36 = v35;
    uint64_t v37 = sub_241DA95E0();
    uint64_t v39 = v38;
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v30;
    *(unsigned char *)(v40 + 24) = v95;
    *(void *)(v40 + 32) = v19;
    *(void *)(v40 + 40) = v31;
    uint64_t v41 = (uint64_t *)((char *)v34 + *(int *)(v20 + 20));
    *uint64_t v41 = v37;
    v41[1] = v39;
    swift_storeEnumTagMultiPayload();
    NSObject *v34 = v91;
    v34[1] = v36;
    uint64_t v42 = (uint64_t (**)())((char *)v34 + *(int *)(v20 + 24));
    *uint64_t v42 = sub_241D8CAF8;
    v42[1] = (uint64_t (*)())v40;
    swift_retain();
    return v93;
  }
  else
  {
    sub_241DAA290();
    uint64_t v80 = sub_241DAA2D0();
    os_log_type_t v81 = sub_241DAAC10();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      uint64_t v98 = v83;
      *(_DWORD *)uint64_t v82 = 136315394;
      uint64_t v84 = v96;
      uint64_t v85 = sub_241DAB1F0();
      uint64_t v97 = sub_241D48854(v85, v86, &v98);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v82 + 12) = 2080;
      uint64_t v97 = v84;
      sub_241D8C938();
      uint64_t v87 = sub_241DAA9B0();
      uint64_t v97 = sub_241D48854(v87, v88, &v98);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v80, v81, "[%s] %s is unsupported to have segments", (uint8_t *)v82, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v83, -1, -1);
      MEMORY[0x24563A5D0](v82, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_241D89F0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_241DA97B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
  (*(void (**)(void))(a1 + *(int *)(v8 + 24)))();
  sub_241D8C4E8(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_241DA9C00();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_241DB2C80;
  sub_241DA97A0();
  sub_241DA9780();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = sub_241DA9BF0();
  *a2 = v9;
  return result;
}

uint64_t sub_241D8A0F0()
{
  uint64_t v0 = sub_241DA9D50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DA9D00();
  uint64_t v4 = sub_241DA9D40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_241D8A1C4()
{
  return sub_241DAAC40();
}

uint64_t sub_241D8A24C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = sub_241DA97B0();
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v52 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241D8C4E8(0, &qword_268D4B880, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v46 - v7;
  uint64_t v9 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_241DAA1C0();
  uint64_t v51 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D8C4E8(0, &qword_268D4C540, MEMORY[0x263F43C30], v5);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v46 - v16;
  uint64_t v18 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (unint64_t *)((char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
  sub_241D8C974(a1 + *(int *)(v21 + 20), (uint64_t)v20, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v23 = *v20;
  unint64_t v50 = v20[1];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v48 = v17;
    uint64_t v49 = v12;
    sub_241D8C58C();
    sub_241D8CA3C((uint64_t)v20 + *(int *)(v24 + 48), (uint64_t)v11, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link);
    uint64_t v58 = 91;
    unint64_t v59 = 0xE100000000000000;
    unint64_t v25 = v23;
    uint64_t v27 = *v11;
    uint64_t v26 = v11[1];
    swift_bridgeObjectRetain();
    sub_241DAAA50();
    swift_bridgeObjectRelease();
    sub_241DAAA50();
    sub_241DA96C0();
    sub_241D8C4A0((unint64_t *)&qword_268D4CBF0, MEMORY[0x263F06EA8]);
    sub_241DAB120();
    sub_241DAAA50();
    swift_bridgeObjectRelease();
    sub_241DAAA50();
    unint64_t v28 = v59;
    uint64_t v47 = v58;
    unint64_t v29 = v50;
    uint64_t v58 = v25;
    unint64_t v59 = v50;
    uint64_t v56 = v27;
    uint64_t v57 = v26;
    uint64_t v30 = sub_241DA97E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v8, 1, 1, v30);
    sub_241D36B9C();
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_241DAAF40();
    unint64_t v33 = v32;
    LOBYTE(v27) = v34;
    sub_241D8C5F8((uint64_t)v8);
    swift_bridgeObjectRelease();
    uint64_t v35 = v51;
    if ((v27 & 1) == 0)
    {
      sub_241D8AAAC(v31, v33, v47, v28, v25, v29);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_241D359C4(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_241DB2C80;
    uint64_t v39 = sub_241DA9A50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v48, 1, 1, v39);
    (*(void (**)(char *, void, uint64_t))(v35 + 104))(v14, *MEMORY[0x263F446D0], v49);
    *(void *)(v38 + 56) = sub_241DA9A60();
    *(void *)(v38 + 64) = sub_241D8C4A0(&qword_268D4C548, MEMORY[0x263F43C38]);
    sub_241D2C600((uint64_t *)(v38 + 32));
    sub_241DA9A40();
    sub_241D8D054((uint64_t)v11, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link);
  }
  else
  {
    sub_241D359C4(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_241DB2C80;
    uint64_t v37 = sub_241DA9A50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v17, 1, 1, v37);
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v14, *MEMORY[0x263F446D0], v12);
    *(void *)(v36 + 56) = sub_241DA9A60();
    *(void *)(v36 + 64) = sub_241D8C4A0(&qword_268D4C548, MEMORY[0x263F43C38]);
    sub_241D2C600((uint64_t *)(v36 + 32));
    sub_241DA9A40();
  }
  uint64_t v41 = v54;
  uint64_t v40 = v55;
  uint64_t v43 = v52;
  uint64_t v42 = v53;
  sub_241D8C4E8(0, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_241DA9C00();
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_241DB2C80;
  sub_241DA97A0();
  sub_241DA9780();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v41);
  uint64_t result = sub_241DA9BF0();
  *uint64_t v40 = v44;
  return result;
}

uint64_t sub_241D8AAAC(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  swift_bridgeObjectRetain();
  sub_241DAAF00();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  sub_241DAAF00();
  uint64_t v15 = v14;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  uint64_t v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v17) = 1;
  }
  uint64_t v18 = 4 << v17;
  unint64_t v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    uint64_t result = sub_241D8C010(a1, a5, a6);
    unint64_t v19 = result;
  }
  uint64_t v40 = a3;
  unint64_t v20 = a2;
  unint64_t v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    uint64_t v23 = a6 & 0x2000000000000000;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v32 = HIBYTE(a6) & 0xF;
    }
    else {
      unint64_t v32 = a5 & 0xFFFFFFFFFFFFLL;
    }
    if (v32 < v19 >> 16) {
      goto LABEL_43;
    }
    uint64_t result = sub_241DAAA90();
    uint64_t v22 = result;
    if (v21) {
      uint64_t v26 = 7;
    }
    else {
      uint64_t v26 = 11;
    }
  }
  else
  {
    uint64_t v22 = v19 >> 16;
    uint64_t v23 = a6 & 0x2000000000000000;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    uint64_t v26 = 7;
  }
  if (!v23) {
    unint64_t v24 = v25;
  }
  uint64_t v27 = 4 << (v21 >> 59);
  unint64_t v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0) {
    uint64_t v27 = 8;
  }
  unint64_t v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    unint64_t v33 = v20;
    uint64_t v34 = v22;
    uint64_t result = sub_241D8C010(v33, a5, a6);
    uint64_t v22 = v34;
    unint64_t v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    unint64_t v35 = v26 | (v24 << 16);
    uint64_t v36 = v22;
    uint64_t result = sub_241D8C010(v35, a5, a6);
    uint64_t v22 = v36;
    unint64_t v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      uint64_t v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    uint64_t v37 = v22;
    uint64_t v38 = sub_241DAAA90();
    uint64_t v22 = v37;
    uint64_t v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        uint64_t result = HIBYTE(a4) & 0xF;
        uint64_t v31 = v22 + result;
        if (!__OFADD__(v22, result)) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v40 & 0xFFFFFFFFFFFFLL;
        uint64_t v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_23;
        }
      }
      goto LABEL_39;
    }
LABEL_37:
    uint64_t v39 = v22;
    uint64_t result = sub_241DAAA60();
    uint64_t v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      uint64_t result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        MEMORY[0x2456395D0](result);
LABEL_25:
        sub_241DAAAD0();
        sub_241D8C684();
        sub_241DAAA40();
        swift_bridgeObjectRelease();
        sub_241DAAA40();
        sub_241D8C08C(a2, a5, a6);
        sub_241DAAA40();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_241D8ADF4()
{
  uint64_t v0 = sub_241DA9D50();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v12[-v5];
  sub_241DA9D00();
  uint64_t v7 = (void (*)(unsigned char *, void))sub_241DA9D20();
  void *v8 = 0xC034000000000000;
  v7(v12, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v9 = sub_241DA9D40();
  uint64_t v10 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v6, v0);
  return v9;
}

uint64_t sub_241D8AF64()
{
  return sub_241DAAC40();
}

uint64_t sub_241D8AF9C(uint64_t a1, int a2, id (*a3)(uint64_t a1))
{
  sub_241D359C4(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_241DB3F80;
  sub_241D2B9B4(a1, a2, a3, 8, (uint64_t *)(v6 + 32));
  sub_241D2B9B4(a1, a2, a3, 7, (uint64_t *)(v6 + 72));
  sub_241D2B9B4(a1, a2, a3, 10, (uint64_t *)(v6 + 112));
  sub_241D2B9B4(a1, a2, a3, 9, (uint64_t *)(v6 + 152));
  return v6;
}

uint64_t sub_241D8B080(uint64_t a1, int a2, id (*a3)(uint64_t a1))
{
  sub_241D359C4(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_241DB2C60;
  sub_241D2B9B4(a1, a2, a3, 5, (uint64_t *)(v6 + 32));
  sub_241D2B9B4(a1, a2, a3, 6, (uint64_t *)(v6 + 72));
  return v6;
}

void *sub_241D8B134(char a1, id (*a2)(uint64_t a1))
{
  long long v29 = xmmword_241DB2C60;
  sub_241D8B5DC(12, a1, a2, (uint64_t)v30);
  sub_241D8B5DC(11, a1, a2, (uint64_t)v31);
  unint64_t v28 = (void *)MEMORY[0x263F8EE78];
  sub_241D2AED8((uint64_t)v30, (uint64_t)v27);
  sub_241D8CB08((uint64_t)v27, (uint64_t)&v23);
  if (v24)
  {
    sub_241D35720(&v23, (uint64_t)v26);
    sub_241D35720(v26, (uint64_t)&v23);
    uint64_t v4 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = sub_241D9A244(0, v4[2] + 1, 1, v4);
      unint64_t v28 = v4;
    }
    unint64_t v6 = v4[2];
    unint64_t v5 = v4[3];
    if (v6 >= v5 >> 1) {
      unint64_t v28 = sub_241D9A244((void *)(v5 > 1), v6 + 1, 1, v4);
    }
    uint64_t v7 = v24;
    uint64_t v8 = v25;
    uint64_t v9 = sub_241D8CB98((uint64_t)&v23, v24);
    MEMORY[0x270FA5388](v9);
    uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v11);
    sub_241D8C0D8(v6, (uint64_t)v11, (uint64_t *)&v28, v7, v8);
    sub_241D36E44((uint64_t)&v23);
  }
  else
  {
    sub_241D2AE50((uint64_t)&v23);
  }
  sub_241D2AED8((uint64_t)v31, (uint64_t)v27);
  sub_241D8CB08((uint64_t)v27, (uint64_t)&v23);
  if (v24)
  {
    sub_241D35720(&v23, (uint64_t)v26);
    sub_241D35720(v26, (uint64_t)&v23);
    uint64_t v13 = v28;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = sub_241D9A244(0, v13[2] + 1, 1, v13);
      unint64_t v28 = v13;
    }
    unint64_t v15 = v13[2];
    unint64_t v14 = v13[3];
    if (v15 >= v14 >> 1) {
      unint64_t v28 = sub_241D9A244((void *)(v14 > 1), v15 + 1, 1, v13);
    }
    uint64_t v16 = v24;
    uint64_t v17 = v25;
    uint64_t v18 = sub_241D8CB98((uint64_t)&v23, v24);
    MEMORY[0x270FA5388](v18);
    unint64_t v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v21 + 16))(v20);
    sub_241D8C0D8(v15, (uint64_t)v20, (uint64_t *)&v28, v16, v17);
    sub_241D36E44((uint64_t)&v23);
  }
  else
  {
    sub_241D2AE50((uint64_t)&v23);
  }
  sub_241D359C4(0, (unint64_t *)&qword_268D4BC30, (unint64_t *)&qword_268D4B668, MEMORY[0x263F437A0], MEMORY[0x263F8D8F0]);
  swift_arrayDestroy();
  return v28;
}

uint64_t sub_241D8B4FC(int a1, id (*a2)(uint64_t a1))
{
  sub_241D359C4(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_241DB3F80;
  sub_241D2B9B4(2, a1, a2, 12, (uint64_t *)(v4 + 32));
  sub_241D2B9B4(1, a1, a2, 12, (uint64_t *)(v4 + 72));
  sub_241D2B9B4(2, a1, a2, 11, (uint64_t *)(v4 + 112));
  sub_241D2B9B4(1, a1, a2, 11, (uint64_t *)(v4 + 152));
  return v4;
}

uint64_t sub_241D8B5DC@<X0>(char a1@<W0>, char a2@<W1>, id (*a3)(uint64_t a1)@<X2>, uint64_t a4@<X8>)
{
  type metadata accessor for VisionPrescriptionValidationController();
  uint64_t v8 = swift_allocObject();
  type metadata accessor for VisionPrescriptionValidationHandler();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = a3;
  if (a1 == 11)
  {
    uint64_t v11 = qword_268D4B2F0;
    swift_retain();
    if (v11 == -1)
    {
LABEL_6:
      uint64_t v12 = sub_241DA95E0();
      uint64_t v14 = v13;
      unint64_t v15 = (int *)type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
      *(void *)(a4 + 24) = v15;
      *(void *)(a4 + 32) = sub_241D8C4A0((unint64_t *)&qword_268D4B6A0, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem);
      uint64_t v16 = sub_241D2C600((uint64_t *)a4);
      type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
      swift_retain_n();
      swift_retain_n();
      uint64_t *v16 = sub_241DA9A30();
      v16[1] = v17;
      sub_241DA97A0();
      uint64_t result = swift_release_n();
      uint64_t v19 = (void (**)(uint64_t, uint64_t, uint64_t, void *, void (*)(uint64_t), uint64_t))((char *)v16 + v15[6]);
      unint64_t v20 = (id (**)(uint64_t))((char *)v16 + v15[7]);
      uint64_t v21 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v16 + v15[8]);
      *((unsigned char *)v16 + v15[10]) = a1;
      *(uint64_t *)((char *)v16 + v15[11]) = 1;
      uint64_t v22 = (uint64_t *)((char *)v16 + v15[12]);
      uint64_t *v22 = v12;
      v22[1] = v14;
      *((unsigned char *)v16 + v15[9]) = a2 & 1;
      NSObject *v19 = sub_241D8CBE8;
      v19[1] = (void (*)(uint64_t, uint64_t, uint64_t, void *, void (*)(uint64_t), uint64_t))v9;
      char *v20 = sub_241D8CBF0;
      v20[1] = a3;
      char *v21 = sub_241D8CBF8;
      v21[1] = (void (*)(uint64_t, uint64_t, uint64_t))a3;
      return result;
    }
LABEL_10:
    swift_once();
    goto LABEL_6;
  }
  if (a1 == 12)
  {
    uint64_t v10 = qword_268D4B2F0;
    swift_retain();
    if (v10 == -1) {
      goto LABEL_6;
    }
    goto LABEL_10;
  }
  *(void *)(a4 + 32) = 0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  swift_retain();

  return swift_release();
}

void sub_241D8B8E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6)
{
  char v11 = *(unsigned char *)(a3
                 + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0) + 40));
  id v12 = sub_241D3AAD0(a1, a2, v11);
  if (v12)
  {
    id v13 = v12;
    sub_241D69154(v12, v11, a4, a5, a6);
  }
}

id sub_241D8B9A4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(unsigned __int8 *)(a1
                          + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0)
                                   + 40));
  id v4 = 0;
  switch(v3)
  {
    case 2uLL:
    case 6uLL:
      id v5 = objc_msgSend(self, sel_degreeAngleUnit);
      goto LABEL_6;
    case 4uLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
      id v5 = objc_msgSend(self, sel_meterUnitWithMetricPrefix_, 4);
      goto LABEL_6;
    case 5uLL:
    case 7uLL:
    case 9uLL:
      id v5 = objc_msgSend(self, sel_prismDiopterUnit);
      goto LABEL_6;
    case 8uLL:
    case 0xAuLL:
      return v4;
    default:
      id v5 = objc_msgSend(self, sel_diopterUnit);
LABEL_6:
      id v6 = v5;
      if (!v6) {
        return 0;
      }
      uint64_t v7 = v6;
      swift_retain();
      sub_241DAA5D0();
      swift_release();
      if (v29 == 1)
      {
        uint64_t v8 = *(void *)(a2 + 48);
      }
      else
      {
        if (v29 != 2) {
          goto LABEL_14;
        }
        uint64_t v8 = *(void *)(a2 + 40);
      }
      uint64_t v9 = *(void *)(v8 + 32);
      swift_beginAccess();
      uint64_t v10 = *(void *)(v9 + 24);
      if (*(void *)(v10 + 16))
      {
        unint64_t v11 = sub_241DA34A0(v3);
        if (v12)
        {
          id v13 = *(void **)(*(void *)(v10 + 56) + 8 * v11);
          id v14 = v13;
          goto LABEL_15;
        }
      }
LABEL_14:
      id v13 = 0;
LABEL_15:
      swift_retain();
      sub_241DAA5D0();
      swift_release();
      if (v30 == 2)
      {
        uint64_t v15 = *(void *)(a2 + 40);
      }
      else
      {
        if (v30 != 1) {
          goto LABEL_24;
        }
        uint64_t v15 = *(void *)(a2 + 48);
      }
      uint64_t v16 = *(void *)(v15 + 40);
      swift_beginAccess();
      uint64_t v17 = *(void *)(v16 + 24);
      if (*(void *)(v17 + 16))
      {
        unint64_t v18 = sub_241DA34A0(v3);
        if (v19)
        {
          unint64_t v20 = *(void **)(*(void *)(v17 + 56) + 8 * v18);
          id v21 = v20;
          uint64_t v22 = &off_2650F7000;
          if (!v13) {
            goto LABEL_22;
          }
LABEL_25:
          objc_msgSend(v13, (SEL)v22[274], v7);
          double v23 = v24;
          if (!v20)
          {
            double v25 = 0.0;
            goto LABEL_28;
          }
LABEL_26:
          objc_msgSend(v20, (SEL)v22[274], v7);
LABEL_28:
          id v26 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v7, v25 + v23);
          id v27 = v26;
          id v4 = sub_241D3AD50(v26, v3);

          return v4;
        }
      }
LABEL_24:
      unint64_t v20 = 0;
      uint64_t v22 = &off_2650F7000;
      if (v13) {
        goto LABEL_25;
      }
LABEL_22:
      if (v20)
      {
        id v13 = 0;
        double v23 = 0.0;
        goto LABEL_26;
      }

      return 0;
  }
}

void sub_241D8BCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3
    && (uint64_t v6 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0) + 40),
        uint64_t v7 = *(unsigned __int8 *)(a1 + v6),
        (id v8 = sub_241D3AAD0(a2, a3, *(unsigned char *)(a1 + v6))) != 0))
  {
    uint64_t v9 = v8;
    objc_msgSend(v8, sel__value);
    double v11 = v10 * 0.5;
    id v12 = objc_msgSend(v9, sel__unit);
    id v13 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v12, v11);

    id v14 = v13;
    sub_241D6D700(v7, 1, v13);

    id v16 = v14;
    sub_241D6D700(v7, 2, v13);
  }
  else
  {
    uint64_t v15 = *(unsigned __int8 *)(a1
                             + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0)
                                      + 40));
    sub_241D6D700(v15, 1, 0);
    sub_241D6D700(v15, 2, 0);
  }
}

void sub_241D8BE1C()
{
}

uint64_t sub_241D8BE4C()
{
  sub_241DA9F20();

  return swift_deallocClassInstance();
}

uint64_t sub_241D8BE7C()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource(0);
}

void sub_241D8BE84()
{
  if (!qword_268D4CC40)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_241D8BFA0(255, &qword_268D4CC48, MEMORY[0x263EFDCF0]);
    sub_241D8C4E8(255, &qword_268D4B820, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
    sub_241D8C45C(&qword_268D4CC50, &qword_268D4CC48, v0);
    unint64_t v1 = sub_241DAA510();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D4CC40);
    }
  }
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4CCC0);
}

void sub_241D8BFA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(255);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241D8C010(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_241DAAAB0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x245639670](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unint64_t sub_241D8C08C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_241DAAAD0();
  }
  __break(1u);
  return result;
}

uint64_t sub_241D8C0D8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_241D2C600((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_241D35720(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_241D8C170(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v22 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241DA9BA0();
  uint64_t v8 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    v20[1] = v2;
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_241D356B0(0, v11, 0);
    uint64_t v13 = *(unsigned __int8 *)(v22 + 80);
    uint64_t v14 = a1 + ((v13 + 32) & ~v13);
    uint64_t v15 = *(void *)(v22 + 72);
    uint64_t v21 = (v13 + 24) & ~v13;
    uint64_t v22 = v15;
    v20[3] = v13 | 7;
    v20[4] = v21 + v6;
    void v20[2] = v8 + 32;
    do
    {
      sub_241D8C974(v14, (uint64_t)v7, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = a2;
      sub_241D8CA3C((uint64_t)v7, v16 + v21, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_241DA9B90();
      uint64_t v12 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_241D356B0(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v24;
      }
      unint64_t v18 = *(void *)(v12 + 16);
      unint64_t v17 = *(void *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_241D356B0(v17 > 1, v18 + 1, 1);
        uint64_t v12 = v24;
      }
      *(void *)(v12 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v18, v10, v23);
      uint64_t v24 = v12;
      v14 += v22;
      --v11;
    }
    while (v11);
  }
  return v12;
}

uint64_t sub_241D8C45C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241D8BFA0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241D8C4A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241D8C4E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4CCB0);
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4CCA0);
}

void sub_241D8C58C()
{
  if (!qword_268D4CC70)
  {
    type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D4CC70);
    }
  }
}

uint64_t sub_241D8C5F8(uint64_t a1)
{
  sub_241D8C4E8(0, &qword_268D4B880, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_241D8C684()
{
  unint64_t result = qword_268D4CC78;
  if (!qword_268D4CC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CC78);
  }
  return result;
}

void sub_241D8C6D8()
{
  if (!qword_268D4CC80)
  {
    type metadata accessor for HKPrismBase(255);
    sub_241D8C4A0(&qword_268D4B6B0, type metadata accessor for HKPrismBase);
    unint64_t v0 = sub_241DA9E40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CC80);
    }
  }
}

uint64_t sub_241D8C76C()
{
  uint64_t v1 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    sub_241D8C58C();
    uint64_t v8 = v5 + *(int *)(v7 + 48);
    swift_bridgeObjectRelease();
    uint64_t v9 = v8
       + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                + 20);
    uint64_t v10 = sub_241DA96C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241D8C8D4()
{
  return sub_241DAA5C0();
}

unint64_t sub_241D8C938()
{
  unint64_t result = qword_268D4CC90;
  if (!qword_268D4CC90)
  {
    type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource(255);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4CC90);
  }
  return result;
}

uint64_t sub_241D8C974(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241D8C9DC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void *sub_241D8CA14()
{
  return sub_241D8B134(*(unsigned char *)(v0 + 16), *(id (**)(uint64_t))(v0 + 24));
}

uint64_t sub_241D8CA3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241D8CAA4()
{
  return sub_241D8B4FC(*(unsigned __int8 *)(v0 + 16), *(id (**)(uint64_t))(v0 + 24));
}

uint64_t sub_241D8CAB0()
{
  return sub_241D8AF9C(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(id (**)(uint64_t))(v0 + 32));
}

uint64_t sub_241D8CAC0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_241D8CAF8()
{
  return sub_241D8B080(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(id (**)(uint64_t))(v0 + 32));
}

uint64_t sub_241D8CB08(uint64_t a1, uint64_t a2)
{
  sub_241D359C4(0, (unint64_t *)&qword_268D4BC30, (unint64_t *)&qword_268D4B668, MEMORY[0x263F437A0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241D8CB98(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_241D8CBE8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6)
{
}

id sub_241D8CBF0(uint64_t a1)
{
  return sub_241D8B9A4(a1, v1);
}

void sub_241D8CBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *sub_241D8CC00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      sub_241D8C58C();
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = (uint64_t *)((char *)a1 + v9);
      int64_t v11 = (char *)a2 + v9;
      uint64_t v12 = *(uint64_t *)((char *)a2 + v9);
      uint64_t v13 = *((void *)v11 + 1);
      *uint64_t v10 = v12;
      v10[1] = v13;
      uint64_t v14 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                   + 20);
      uint64_t v15 = (char *)v10 + v14;
      uint64_t v16 = &v11[v14];
      uint64_t v17 = sub_241DA96C0();
      unint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241D8CD60(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    sub_241D8C58C();
    uint64_t v5 = a1 + *(int *)(v4 + 48);
    swift_bridgeObjectRelease();
    uint64_t v6 = v5
       + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                + 20);
    uint64_t v7 = sub_241DA96C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  return result;
}

void *sub_241D8CE10(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    sub_241D8C58C();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = *(void *)((char *)a2 + v7);
    uint64_t v11 = *((void *)v9 + 1);
    void *v8 = v10;
    v8[1] = v11;
    uint64_t v12 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                 + 20);
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = &v9[v12];
    uint64_t v15 = sub_241DA96C0();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_241D8CF18(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_241D8D054((uint64_t)a1, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      sub_241D8C58C();
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = (void *)((char *)a1 + v6);
      uint64_t v8 = (char *)a2 + v6;
      void *v7 = *(void *)((char *)a2 + v6);
      v7[1] = *(void *)((char *)a2 + v6 + 8);
      uint64_t v9 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                  + 20);
      uint64_t v10 = (char *)v7 + v9;
      uint64_t v11 = &v8[v9];
      uint64_t v12 = sub_241DA96C0();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241D8D054(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_241D8D0B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_241D8C58C();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
    uint64_t v10 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                 + 20);
    uint64_t v11 = &v8[v10];
    uint64_t v12 = &v9[v10];
    uint64_t v13 = sub_241DA96C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_241D8D1AC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_241D8D054((uint64_t)a1, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_241D8C58C();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      uint64_t v10 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                   + 20);
      uint64_t v11 = &v8[v10];
      uint64_t v12 = &v9[v10];
      uint64_t v13 = sub_241DA96C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241D8D2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_241D8D2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_241D8D31C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_241D8D32C()
{
  v2[4] = &unk_241DB5300;
  uint64_t result = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_241D8D3D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_241DA96C0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_241D8D4BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_241DA96C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_241D8D534(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_241DA96C0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_241D8D5CC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241DA96C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_241D8D668(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_241DA96C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_241D8D6E4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241DA96C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_241D8D770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241D8D784);
}

uint64_t sub_241D8D784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241D8E088(a1, a2, a3, MEMORY[0x263F06EA8]);
}

uint64_t sub_241D8D79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241D8D7B0);
}

uint64_t sub_241D8D7B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_241D8E168(a1, a2, a3, a4, MEMORY[0x263F06EA8]);
}

uint64_t sub_241D8D7C8()
{
  uint64_t result = sub_241DA96C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_241D8D860(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v12 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v12;
    if (EnumCaseMultiPayload == 1)
    {
      sub_241D8C58C();
      uint64_t v14 = *(int *)(v13 + 48);
      uint64_t v15 = (void *)((char *)v9 + v14);
      uint64_t v16 = (char *)v10 + v14;
      uint64_t v17 = *(void *)((char *)v10 + v14);
      uint64_t v18 = *((void *)v16 + 1);
      void *v15 = v17;
      v15[1] = v18;
      uint64_t v19 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                   + 20);
      unint64_t v28 = &v16[v19];
      uint64_t v29 = (char *)v15 + v19;
      uint64_t v20 = sub_241DA96C0();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(v29, v28, v20);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = *(int *)(a3 + 24);
    uint64_t v24 = (uint64_t *)((char *)v4 + v23);
    double v25 = (uint64_t *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    void *v24 = *v25;
    v24[1] = v26;
  }
  swift_retain();
  return v4;
}

uint64_t sub_241D8D9FC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    sub_241D8C58C();
    uint64_t v7 = v4 + *(int *)(v6 + 48);
    swift_bridgeObjectRelease();
    uint64_t v8 = v7
       + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                + 20);
    uint64_t v9 = sub_241DA96C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }

  return swift_release();
}

void *sub_241D8DADC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v11 = v9[1];
  void *v8 = *v9;
  v8[1] = v11;
  if (EnumCaseMultiPayload == 1)
  {
    sub_241D8C58C();
    uint64_t v13 = *(int *)(v12 + 48);
    uint64_t v14 = (void *)((char *)v8 + v13);
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = *(void *)((char *)v9 + v13);
    uint64_t v17 = *((void *)v15 + 1);
    void *v14 = v16;
    v14[1] = v17;
    uint64_t v18 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                 + 20);
    uint64_t v26 = &v15[v18];
    id v27 = (char *)v14 + v18;
    uint64_t v19 = sub_241DA96C0();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v27, v26, v19);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = v23[1];
  void *v22 = *v23;
  v22[1] = v24;
  swift_retain();
  return a1;
}

void *sub_241D8DC2C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_241D8D054((uint64_t)a1 + v6, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
    type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    void *v7 = *v8;
    v7[1] = v8[1];
    if (EnumCaseMultiPayload == 1)
    {
      sub_241D8C58C();
      uint64_t v11 = *(int *)(v10 + 48);
      uint64_t v12 = (void *)((char *)v7 + v11);
      uint64_t v13 = (char *)v8 + v11;
      *uint64_t v12 = *(void *)((char *)v8 + v11);
      v12[1] = *(void *)((char *)v8 + v11 + 8);
      uint64_t v14 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                   + 20);
      uint64_t v22 = &v13[v14];
      uint64_t v23 = (char *)v12 + v14;
      uint64_t v15 = sub_241DA96C0();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16(v23, v22, v15);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_241D8DDCC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    _OWORD *v7 = *v8;
    sub_241D8C58C();
    uint64_t v11 = *(int *)(v10 + 48);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    *(_OWORD *)((char *)v7 + v11) = *(_OWORD *)((char *)v8 + v11);
    uint64_t v14 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                 + 20);
    uint64_t v15 = &v12[v14];
    uint64_t v16 = &v13[v14];
    uint64_t v17 = sub_241DA96C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_241D8DEF8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (_OWORD *)((char *)a1 + v7);
    uint64_t v9 = (_OWORD *)((char *)a2 + v7);
    sub_241D8D054((uint64_t)a1 + v7, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
    uint64_t v10 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      _OWORD *v8 = *v9;
      sub_241D8C58C();
      uint64_t v12 = *(int *)(v11 + 48);
      uint64_t v13 = (char *)v8 + v12;
      uint64_t v14 = (char *)v9 + v12;
      *(_OWORD *)((char *)v8 + v12) = *(_OWORD *)((char *)v9 + v12);
      uint64_t v15 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                   + 20);
      uint64_t v16 = &v13[v15];
      uint64_t v17 = &v14[v15];
      uint64_t v18 = sub_241DA96C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_241D8E05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241D8E070);
}

uint64_t sub_241D8E070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241D8E088(a1, a2, a3, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
}

uint64_t sub_241D8E088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v5 = *(void *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = a4(0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_241D8E13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241D8E150);
}

uint64_t sub_241D8E150(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_241D8E168(a1, a2, a3, a4, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
}

uint64_t sub_241D8E168(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = a5(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v10 = v8;
    uint64_t v11 = v6 + *(int *)(a4 + 20);
    return v9(v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_241D8E214()
{
  uint64_t result = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionDataSource()
{
  uint64_t result = qword_268D4CD00;
  if (!qword_268D4CD00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D8E30C()
{
  return swift_initClassMetadata2();
}

void sub_241D8E378(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_241D8E404()
{
  sub_241D984C8(0, &qword_268D4D018, (uint64_t)&type metadata for VisionPrescriptionDataSource.ItemsLayout, MEMORY[0x263EFDDF8]);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v30 = v0;
  uint64_t v31 = v1;
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v29 - v2;
  sub_241D98514();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  uint64_t v33 = v5;
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D9870C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  uint64_t v35 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241DAAD50();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D985F4();
  uint64_t v29 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = objc_msgSend(self, sel_defaultCenter);
  sub_241DAAD60();

  sub_241D987A0(&qword_268D4C078, MEMORY[0x263F07CB0]);
  sub_241DAA750();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  id v21 = objc_msgSend(self, sel_currentTraitCollection);
  id v22 = objc_msgSend(v21, sel_preferredContentSizeCategory);
  LOBYTE(v12) = sub_241DAAD70();

  BOOL v36 = (v12 & 1) == 0;
  sub_241DAA620();
  sub_241D98690();
  sub_241D987A0(&qword_268D4D038, (void (*)(uint64_t))sub_241D985F4);
  uint64_t v24 = v29;
  uint64_t v23 = v30;
  sub_241DAA790();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v3, v23);
  sub_241D987A0(&qword_268D4D048, (void (*)(uint64_t))sub_241D98514);
  sub_241D9460C();
  uint64_t v25 = v32;
  sub_241DAA7D0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v25);
  sub_241D987A0(&qword_268D4D050, (void (*)(uint64_t))sub_241D9870C);
  uint64_t v26 = v34;
  uint64_t v27 = sub_241DAA720();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v26);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v24);
  return v27;
}

void sub_241D8E95C(BOOL *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_currentTraitCollection);
  id v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);
  char v4 = sub_241DAAD70();

  *a1 = (v4 & 1) == 0;
}

uint64_t sub_241D8E9E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_241DA97B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = qword_268D4CCD8;
  sub_241D96C88(0, &qword_268D4D010, MEMORY[0x263EFDD90]);
  memset(v17, 0, sizeof(v17));
  swift_allocObject();
  swift_retain();
  *(void *)(v3 + v12) = sub_241DAA600();
  *(void *)(v3 + qword_268D4CCE0) = 0;
  *(void *)(v3 + qword_268D4CCF0) = 0;
  uint64_t v13 = qword_268D4CCF8;
  *(void *)(v4 + v13) = sub_241D8E404();
  *(void *)(v4 + qword_268D4CCD0) = a1;
  *(void *)(v4 + qword_268D4CCE8) = a3;
  id v14 = a1;
  swift_retain();
  swift_release();
  *(void *)&v17[0] = 0;
  *((void *)&v17[0] + 1) = 0xE000000000000000;
  sub_241DAAFD0();
  swift_bridgeObjectRelease();
  strcpy((char *)v17, "MutableArray<");
  HIWORD(v17[0]) = -4864;
  sub_241DA97A0();
  sub_241DA9780();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_241DAAA50();
  swift_bridgeObjectRelease();
  sub_241DAAA50();
  uint64_t v15 = sub_241DA9C40();
  swift_retain();
  sub_241D8ED10(v14, a2);
  swift_release();

  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_241D8EC40(unint64_t *a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_241DAB0A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    sub_241DA695C(a3, v6 != 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_241D8ED10(void *a1, void *a2)
{
  uint64_t v5 = *v2;
  unint64_t v50 = v2;
  uint64_t v54 = v5;
  sub_241D42668(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v61 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D96900();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D96A74();
  uint64_t v53 = v13;
  uint64_t v55 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D96BC0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v56 = v16;
  uint64_t v57 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v51 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D96D1C();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v59 = v19;
  uint64_t v60 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v52 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D96E68();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v62 = v22;
  uint64_t v63 = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v58 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v64 = a2;
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  *(void *)(v26 + 24) = a1;
  sub_241D58000();
  sub_241D9739C(0, &qword_268D4CDF0, (void (*)(uint64_t))sub_241D969C8);
  sub_241D987A0(&qword_268D4C238, (void (*)(uint64_t))sub_241D58000);
  id v27 = a1;
  sub_241DAA730();
  swift_release();
  uint64_t v28 = sub_241D987A0(&qword_268D4CE10, (void (*)(uint64_t))sub_241D96900);
  unint64_t v29 = sub_241D96B4C();
  MEMORY[0x2456393D0](v9, v28, v29);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v50;
  swift_weakInit();
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v30;
  v32[3] = v27;
  uint64_t v33 = v54;
  v32[4] = v54;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_241D96FAC;
  *(void *)(v34 + 24) = v32;
  sub_241D96C88(0, &qword_268D4CE20, MEMORY[0x263EFDCF0]);
  sub_241D987A0(&qword_268D4CE30, (void (*)(uint64_t))sub_241D96A74);
  id v35 = v27;
  BOOL v36 = v51;
  uint64_t v37 = v53;
  sub_241DAA730();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v37);
  uint64_t v38 = sub_241D987A0(&qword_268D4CE48, (void (*)(uint64_t))sub_241D96BC0);
  unint64_t v39 = sub_241D96DF4();
  uint64_t v40 = v52;
  uint64_t v41 = v56;
  MEMORY[0x2456393D0](v56, v38, v39);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v41);
  sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
  id v64 = (id)sub_241DAAD00();
  uint64_t v42 = sub_241DAACE0();
  uint64_t v43 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v61, 1, 1, v42);
  sub_241D987A0(&qword_268D4CE58, (void (*)(uint64_t))sub_241D96D1C);
  sub_241D3772C();
  uint64_t v45 = v58;
  uint64_t v44 = v59;
  sub_241DAA7B0();
  sub_241D96FF0(v43, (uint64_t (*)(void))sub_241D42668);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v44);
  *(void *)(swift_allocObject() + 16) = v33;
  swift_allocObject();
  swift_weakInit();
  sub_241D987A0(&qword_268D4CE60, (void (*)(uint64_t))sub_241D96E68);
  uint64_t v46 = v62;
  uint64_t v47 = sub_241DAA760();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v46);
  *(void *)((char *)v31 + qword_268D4CCE0) = v47;
  return swift_release();
}

uint64_t sub_241D8F524@<X0>(void **a1@<X0>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  sub_241D9657C(0, &qword_268D4CE80, (unint64_t *)&qword_268D4C210, 0x263F0A8E0, MEMORY[0x263EFDDF8]);
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v33 - v7;
  sub_241D980E0();
  uint64_t v10 = v9;
  uint64_t v40 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D981C8();
  uint64_t v14 = v13;
  uint64_t v37 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_5;
  }
  uint64_t v19 = result;
  if (!v17)
  {
    uint64_t result = swift_release();
LABEL_5:
    uint64_t v32 = 0;
    goto LABEL_6;
  }
  id v20 = v17;
  uint64_t v41 = sub_241D91010(a2, v20);
  id v35 = v12;
  uint64_t v21 = v41;
  uint64_t v33 = v41;
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  uint64_t v23 = swift_allocObject();
  BOOL v36 = a3;
  *(void *)(v23 + 16) = v22;
  *(void *)(v23 + 24) = v20;
  sub_241D97308();
  sub_241D987A0(&qword_268D4CEC0, (void (*)(uint64_t))sub_241D97308);
  uint64_t v34 = v10;
  id v24 = v20;
  uint64_t v25 = sub_241DAA810();
  swift_release();
  *(void *)(v19 + qword_268D4CCF0) = v25;
  swift_release();
  uint64_t v41 = v21;
  sub_241D9843C(0, &qword_268D4CFF8, MEMORY[0x263F8E0F8]);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_241DB2C80;
  *(void *)(v26 + 32) = MEMORY[0x263F8EE78];
  sub_241DAA7A0();
  swift_bridgeObjectRelease();
  sub_241D987A0(&qword_268D4D000, (void (*)(uint64_t))sub_241D981C8);
  uint64_t v27 = sub_241DAA720();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v14);
  uint64_t v41 = (uint64_t)v24;
  sub_241D28BF4(0, (unint64_t *)&qword_268D4C210);
  id v28 = v24;
  sub_241DAA620();
  uint64_t v41 = v27;
  sub_241D97C08();
  unint64_t v29 = v35;
  uint64_t v30 = v39;
  sub_241DAA740();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v30);
  sub_241D987A0(&qword_268D4D008, (void (*)(uint64_t))sub_241D980E0);
  uint64_t v31 = v34;
  uint64_t v32 = sub_241DAA720();

  swift_release();
  a3 = v36;
  swift_release();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v29, v31);
LABEL_6:
  *a3 = v32;
  return result;
}

uint64_t sub_241D8FA28(void *a1, unint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v56 = a5;
  uint64_t v55 = a4;
  id v70 = a1;
  sub_241D9843C(0, &qword_268D4CE78, MEMORY[0x263EFDDF8]);
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v63 = (char *)&v53 - v7;
  sub_241D9657C(0, &qword_268D4CE80, (unint64_t *)&qword_268D4C210, 0x263F0A8E0, MEMORY[0x263EFDDF8]);
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v62 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v60 = (char *)&v53 - v9;
  sub_241D97174();
  uint64_t v67 = *(void *)(v10 - 8);
  uint64_t v68 = v10;
  MEMORY[0x270FA5388](v10);
  char v66 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D97534();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v69 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D97604();
  uint64_t v17 = v16;
  uint64_t v57 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D97A14();
  uint64_t v59 = v20;
  uint64_t v58 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D977B0(0, &qword_268D4CF58, &qword_268D4CE28, (uint64_t)&type metadata for PrescriptionAndAttachmentData, MEMORY[0x263F8D8F0]);
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v53 - v26;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return 0;
  }
  unint64_t v29 = (void *)Strong;
  uint64_t v54 = v14;
  if (!(a2 >> 62))
  {
    uint64_t v30 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v30) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v51 = v70;
    uint64_t v71 = (uint64_t)v70;
    uint64_t v72 = 0;
    uint64_t v73 = 0;
    uint64_t v74 = 0;
    sub_241D984C8(0, &qword_268D4CE28, (uint64_t)&type metadata for PrescriptionAndAttachmentData, MEMORY[0x263F8D8F0]);
    id v52 = v51;
    sub_241DAA620();
    sub_241D97D00();
    uint64_t v50 = sub_241DAA720();

    swift_release();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    return v50;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_241DAB0A0();
  if (!result) {
    goto LABEL_10;
  }
LABEL_4:
  uint64_t v53 = v13;
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v32 = (id)MEMORY[0x245639BE0](0, a2);
    goto LABEL_7;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v32 = *(id *)(a2 + 32);
LABEL_7:
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_241D90524(v55, a2);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v29;
    *(void *)(v34 + 24) = v33;
    swift_retain();
    id v56 = v33;
    sub_241DAA590();
    sub_241D97E04(0, &qword_268D4CF10, MEMORY[0x263EFDCF0]);
    uint64_t v55 = v29;
    sub_241D976DC();
    sub_241D979A0();
    sub_241D987A0(&qword_268D4CF18, (void (*)(uint64_t))sub_241D976DC);
    sub_241DAA820();
    swift_release();
    swift_release();
    sub_241D9807C(0, &qword_268D4CF60, (uint64_t (*)(uint64_t))sub_241D97400, MEMORY[0x263F8E0F8]);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_241DB2C80;
    *(void *)(v35 + 32) = MEMORY[0x263F8EE78];
    *(void *)(v35 + 40) = 0;
    sub_241D987A0(&qword_268D4CF50, (void (*)(uint64_t))sub_241D97604);
    sub_241DAA7A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v19, v17);
    sub_241D987A0(&qword_268D4CF68, (void (*)(uint64_t))sub_241D97A14);
    uint64_t v36 = v59;
    uint64_t v37 = sub_241DAA720();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v22, v36);
    uint64_t v38 = v70;
    uint64_t v71 = (uint64_t)v70;
    sub_241D28BF4(0, (unint64_t *)&qword_268D4C210);
    id v39 = v38;
    uint64_t v40 = v60;
    sub_241DAA620();
    sub_241D97C08();
    uint64_t v41 = v62;
    uint64_t v42 = sub_241DAA720();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v41);
    uint64_t v71 = v42;
    unint64_t v76 = a2;
    sub_241D9657C(0, &qword_268D4CDC8, &qword_268D4CDD0, 0x263F0A0D0, MEMORY[0x263F8D488]);
    swift_bridgeObjectRetain();
    uint64_t v43 = v63;
    sub_241DAA620();
    sub_241D97C8C();
    uint64_t v44 = v65;
    uint64_t v45 = sub_241DAA720();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v43, v44);
    uint64_t v75 = v37;
    unint64_t v76 = v45;
    sub_241D97290();
    sub_241D97308();
    sub_241D9739C(0, &qword_268D4CEA0, (void (*)(uint64_t))sub_241D97400);
    sub_241D987A0(&qword_268D4CEB8, (void (*)(uint64_t))sub_241D97290);
    sub_241D987A0(&qword_268D4CEC0, (void (*)(uint64_t))sub_241D97308);
    sub_241D974C0();
    swift_retain();
    uint64_t v46 = v66;
    sub_241DAA4A0();
    sub_241D984C8(0, &qword_268D4CE28, (uint64_t)&type metadata for PrescriptionAndAttachmentData, MEMORY[0x263F8D8F0]);
    sub_241D987A0(&qword_268D4CED8, (void (*)(uint64_t))sub_241D97174);
    uint64_t v47 = v68;
    uint64_t v48 = v69;
    sub_241DAA750();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v47);
    sub_241D987A0(&qword_268D4CF80, (void (*)(uint64_t))sub_241D97534);
    uint64_t v49 = v53;
    uint64_t v50 = sub_241DAA720();
    swift_release();

    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v49);
    return v50;
  }
  __break(1u);
  return result;
}

uint64_t sub_241D90524(void *a1, uint64_t a2)
{
  sub_241D97D84();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a2;
  v10[3] = a1;
  v10[4] = v2;
  sub_241D97E04(0, &qword_268D4CF98, MEMORY[0x263EFDE20]);
  sub_241D97E98();
  swift_bridgeObjectRetain();
  id v11 = a1;
  sub_241DAA670();
  sub_241D987A0(&qword_268D4CFA8, (void (*)(uint64_t))sub_241D97D84);
  uint64_t v12 = sub_241DAA720();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v12;
}

uint64_t sub_241D906C4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = MEMORY[0x263F06F78];
  uint64_t v6 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F8D488];
  sub_241D977B0(0, &qword_268D4CEF0, &qword_268D4CEB0, MEMORY[0x263F06F78], MEMORY[0x263F8D488]);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = (void *)*a1;
  sub_241D984C8(0, &qword_268D4CEB0, v5, v6);
  swift_bridgeObjectRetain();
  sub_241DAA620();
  if (v8[2])
  {
    uint64_t v9 = v8[4];
    unint64_t v10 = v8[5];
    sub_241D41560(v9, v10);
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0xF000000000000000;
  }
  sub_241D9293C(a3, v9, v10);
  sub_241D48CD8(v9, v10);
  sub_241D9780C(0, &qword_268D4CEF8, MEMORY[0x263EFDCF0]);
  sub_241D978A8();
  sub_241D9792C();
  return sub_241DAA480();
}

id sub_241D9086C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v8 = *(id *)a1;
  uint64_t v3 = *(void **)(a1 + 24);
  if (v3)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    uint64_t v4 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
  }
  *a2 = v8;
  a2[1] = v5;
  a2[2] = v4;
  a2[3] = v3;
  id v6 = v3;

  return v8;
}

uint64_t sub_241D908F0()
{
  uint64_t v0 = sub_241DAA2E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA280();
  uint64_t v4 = sub_241DAA2D0();
  os_log_type_t v5 = sub_241DAAC30();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)id v6 = 136315138;
    uint64_t v8 = sub_241DAB1F0();
    uint64_t v11 = sub_241D48854(v8, v9, &v12);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v4, v5, "[%s] vision prescription and attachment stream completed.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v7, -1, -1);
    MEMORY[0x24563A5D0](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_241D90AC8(uint64_t a1)
{
  uint64_t v44 = sub_241DA9C00();
  uint64_t v2 = *(void *)(v44 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v44);
  uint64_t v43 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v38 = (char *)v37 - v5;
  sub_241D97070(0);
  uint64_t v7 = v6;
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v42 = (uint64_t)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v41 = (uint64_t)v37 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v37 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v37 - v15;
  uint64_t v17 = *(void **)a1;
  uint64_t v18 = *(void **)(a1 + 8);
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = *(void **)(a1 + 24);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v37[1] = v7;
    uint64_t v39 = v2;
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v22(v16, 1, 1, v44);
    uint64_t v45 = v17;
    uint64_t v46 = v18;
    uint64_t v47 = v19;
    uint64_t v48 = v20;
    sub_241DAA5C0();
    if (v17)
    {
      id v23 = v17;
      sub_241D5CE1C(v18, v19, v20);
      sub_241D935C4(v23, v18, v19, v20, (uint64_t)v14);

      sub_241D5CEC8((uint64_t)v18, v19, v20);
      sub_241D96FF0((uint64_t)v16, (uint64_t (*)(void))sub_241D97070);
      v22(v14, 0, 1, v44);
      sub_241D9710C((uint64_t)v14, (uint64_t)v16, (uint64_t (*)(void))sub_241D97070);
    }
    sub_241D9807C(0, &qword_268D4CE70, (uint64_t (*)(uint64_t))sub_241D97070, MEMORY[0x263F8E0F8]);
    unint64_t v24 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_241DB2C80;
    uint64_t v26 = v25 + v24;
    sub_241D970A4((uint64_t)v16, v25 + v24, (uint64_t (*)(void))sub_241D97070);
    uint64_t v27 = v41;
    sub_241D970A4(v26, v41, (uint64_t (*)(void))sub_241D97070);
    uint64_t v28 = v42;
    sub_241D9710C(v27, v42, (uint64_t (*)(void))sub_241D97070);
    uint64_t v29 = v39;
    uint64_t v30 = v44;
    uint64_t v31 = (uint64_t)v16;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v28, 1, v44) == 1)
    {
      sub_241D96FF0(v28, (uint64_t (*)(void))sub_241D97070);
    }
    else
    {
      id v32 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
      uint64_t v33 = v38;
      v32(v38, v28, v30);
      v32(v43, (uint64_t)v33, v30);
      unint64_t v34 = MEMORY[0x263F8EE78];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v34 = sub_241D9A380(0, *(void *)(v34 + 16) + 1, 1, v34);
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      if (v36 >= v35 >> 1) {
        unint64_t v34 = sub_241D9A380(v35 > 1, v36 + 1, 1, v34);
      }
      *(void *)(v34 + 16) = v36 + 1;
      v32((char *)(v34+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v36), (uint64_t)v43, v30);
    }
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_241DA9C60();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_241D96FF0(v31, (uint64_t (*)(void))sub_241D97070);
  }
  return result;
}

uint64_t sub_241D91010(void *a1, void *a2)
{
  uint64_t v5 = *v2;
  sub_241D96774();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = v5;
  sub_241D96808();
  sub_241D987A0(&qword_268D4CDD8, (void (*)(uint64_t))sub_241D96808);
  id v12 = a1;
  id v13 = a2;
  sub_241DAA670();
  sub_241D987A0(&qword_268D4CDE0, (void (*)(uint64_t))sub_241D96774);
  uint64_t v14 = sub_241DAA720();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v14;
}

uint64_t sub_241D911E4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  uint64_t v8[3] = a2;
  v8[4] = a3;
  sub_241D96808();
  swift_allocObject();
  id v9 = a1;
  id v10 = a2;
  uint64_t result = sub_241DAA660();
  *a4 = result;
  return result;
}

void sub_241D91284(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = sub_241D96714;
  v11[3] = v10;
  v11[4] = a5;
  v13[4] = sub_241D968F4;
  v13[5] = v11;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  void v13[2] = sub_241D91964;
  void v13[3] = &unk_26F5D1680;
  id v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_getAttachmentsForObject_completion_, a4, v12);
  _Block_release(v12);
}

void sub_241D913AC(uint64_t a1, void *a2, void (*a3)(uint64_t, void), uint64_t a4, uint64_t a5)
{
  uint64_t v55 = a3;
  uint64_t v9 = sub_241DAA2E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v50 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v50 - v17;
  if (a2)
  {
    id v19 = a2;
    sub_241DAA2B0();
    id v20 = a2;
    id v21 = a2;
    uint64_t v22 = sub_241DAA2D0();
    os_log_type_t v23 = sub_241DAAC10();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v57 = v25;
      *(_DWORD *)uint64_t v24 = 136315394;
      uint64_t v53 = a4;
      uint64_t v26 = sub_241DAB1F0();
      uint64_t v56 = sub_241D48854(v26, v27, &v57);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v56 = (uint64_t)a2;
      id v28 = a2;
      sub_241D2B54C(0, (unint64_t *)&qword_268D4C3D0);
      uint64_t v54 = v9;
      uint64_t v29 = sub_241DAA9C0();
      uint64_t v56 = sub_241D48854(v29, v30, &v57);
      sub_241DAAF10();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241D1C000, v22, v23, "[%s] Error fetching attachments associated with vision prescription sample: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v25, -1, -1);
      MEMORY[0x24563A5D0](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v54);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    }
    v55(MEMORY[0x263F8EE78], 0);
  }
  else
  {
    uint64_t v52 = a5;
    sub_241DAA2B0();
    uint64_t v31 = sub_241DAA2D0();
    os_log_type_t v32 = sub_241DAAC30();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v51 = v10;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v54 = v9;
      unint64_t v34 = (uint8_t *)v33;
      uint64_t v35 = swift_slowAlloc();
      uint64_t v53 = a4;
      uint64_t v36 = v35;
      uint64_t v57 = v35;
      *(_DWORD *)unint64_t v34 = 136315138;
      uint64_t v37 = sub_241DAB1F0();
      uint64_t v56 = sub_241D48854(v37, v38, &v57);
      sub_241DAAF10();
      uint64_t v10 = v51;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v31, v32, "[%s] Successfully retrieved HKAttachments associated with vision prescription", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v36, -1, -1);
      uint64_t v39 = v34;
      uint64_t v9 = v54;
      MEMORY[0x24563A5D0](v39, -1, -1);
    }

    uint64_t v40 = *(void (**)(char *, uint64_t))(v10 + 8);
    v40(v18, v9);
    if (a1)
    {
      uint64_t v41 = a1;
    }
    else
    {
      sub_241DAA2B0();
      uint64_t v42 = sub_241DAA2D0();
      uint64_t v43 = sub_241DAAC30();
      if (os_log_type_enabled(v42, (os_log_type_t)v43))
      {
        uint64_t v51 = v10;
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v57 = v45;
        uint64_t v54 = v9;
        *(_DWORD *)uint64_t v44 = 136315138;
        uint64_t v46 = sub_241DAB1F0();
        uint64_t v56 = sub_241D48854(v46, v47, &v57);
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241D1C000, v42, (os_log_type_t)v43, "[%s] HKAttachments were nil. Sending empty attachment array.", v44, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24563A5D0](v45, -1, -1);
        MEMORY[0x24563A5D0](v44, -1, -1);

        uint64_t v48 = v13;
        uint64_t v49 = v54;
      }
      else
      {

        uint64_t v48 = v13;
        uint64_t v49 = v9;
      }
      v40(v48, v49);
      uint64_t v41 = MEMORY[0x263F8EE78];
    }
    v55(v41, 0);
  }
}

uint64_t sub_241D91964(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_241D28BF4(0, &qword_268D4CDD0);
    uint64_t v4 = sub_241DAAB00();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241D91A08@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  uint64_t v8[3] = a2;
  v8[4] = a3;
  sub_241D97E04(0, &qword_268D4CF98, MEMORY[0x263EFDE20]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  id v9 = a2;
  uint64_t result = sub_241DAA660();
  *a4 = result;
  return result;
}

uint64_t sub_241D91AC8(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5)
{
  id v46 = a4;
  uint64_t v47 = a5;
  uint64_t v8 = sub_241DAA830();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_241DAACF0();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_241DAACD0();
  MEMORY[0x270FA5388](v36);
  uint64_t v37 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241DAA850();
  uint64_t v42 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v41 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  uint64_t v35 = v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = MEMORY[0x263F8EE78];
  swift_retain();
  dispatch_group_t v18 = dispatch_group_create();
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_241DAB0A0();
    uint64_t v19 = result;
  }
  else
  {
    uint64_t v19 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v44 = v11;
  uint64_t v45 = v9;
  uint64_t v43 = v14;
  if (!v19)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
    id v28 = v41;
    sub_241DAA840();
    uint64_t aBlock = MEMORY[0x263F8EE78];
    sub_241D987A0(&qword_268D4CFB0, MEMORY[0x263F8F0F8]);
    sub_241D97FFC(0);
    sub_241D987A0(&qword_268D4CFC0, sub_241D97FFC);
    sub_241DAAF60();
    (*(void (**)(char *, void, uint64_t))(v38 + 104))(v39, *MEMORY[0x263F8F130], v40);
    uint64_t v29 = (void *)sub_241DAAD20();
    unint64_t v30 = (void *)swift_allocObject();
    uint64_t v31 = v35;
    void v30[2] = sub_241D96714;
    v30[3] = v31;
    v30[4] = v17;
    uint64_t v53 = sub_241D98070;
    uint64_t v54 = v30;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v50 = 1107296256;
    uint64_t v51 = sub_241D3A278;
    uint64_t v52 = &unk_26F5D18B0;
    os_log_type_t v32 = _Block_copy(&aBlock);
    swift_retain();
    sub_241DAA840();
    uint64_t v48 = MEMORY[0x263F8EE78];
    sub_241D987A0((unint64_t *)&qword_268D4D390, MEMORY[0x263F8F030]);
    sub_241D41CB8();
    sub_241D987A0((unint64_t *)&qword_268D4D3A0, (void (*)(uint64_t))sub_241D41CB8);
    uint64_t v33 = v44;
    sub_241DAAF60();
    sub_241DAACC0();
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v8);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v43);
    swift_release();
    return swift_release();
  }
  if (v19 >= 1)
  {
    uint64_t v34 = v8;
    uint64_t v21 = 0;
    do
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x245639BE0](v21, a3);
      }
      else {
        id v22 = *(id *)(a3 + 8 * v21 + 32);
      }
      os_log_type_t v23 = v22;
      ++v21;
      dispatch_group_enter(v18);
      uint64_t v24 = (void *)swift_allocObject();
      v24[2] = v17;
      v24[3] = v18;
      v24[4] = v47;
      uint64_t v53 = sub_241D97FF0;
      uint64_t v54 = v24;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v50 = 1107296256;
      uint64_t v51 = sub_241D92824;
      uint64_t v52 = &unk_26F5D1860;
      uint64_t v25 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v26 = v18;
      swift_release();
      id v27 = objc_msgSend(v46, sel_getDataForAttachment_completion_, v23, v25);
      _Block_release(v25);
    }
    while (v19 != v21);
    swift_bridgeObjectRelease();
    uint64_t v8 = v34;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_241D921A4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, NSObject *a5, uint64_t a6)
{
  unint64_t v70 = a2;
  uint64_t v11 = sub_241DAA2E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  dispatch_group_t v18 = (char *)&v65 - v17;
  MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v65 - v19;
  if (a3)
  {
    id v21 = a3;
    sub_241DAA2B0();
    id v22 = a3;
    id v23 = a3;
    uint64_t v24 = sub_241DAA2D0();
    os_log_type_t v25 = sub_241DAAC10();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v69 = a5;
      uint64_t v27 = v26;
      uint64_t v28 = swift_slowAlloc();
      v72[0] = v28;
      *(_DWORD *)uint64_t v27 = 136315394;
      uint64_t v29 = sub_241DAB1F0();
      uint64_t v68 = v11;
      uint64_t v71 = sub_241D48854(v29, v30, v72);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      uint64_t v71 = (uint64_t)a3;
      id v31 = a3;
      sub_241D2B54C(0, (unint64_t *)&qword_268D4C3D0);
      uint64_t v32 = sub_241DAA9C0();
      uint64_t v71 = sub_241D48854(v32, v33, v72);
      sub_241DAAF10();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241D1C000, v24, v25, "[%s] Error fetching data associated with attachment: %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v28, -1, -1);
      uint64_t v34 = v27;
      a5 = v69;
      MEMORY[0x24563A5D0](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v68);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    }
  }
  else
  {
    uint64_t v67 = a6;
    sub_241DAA2B0();
    uint64_t v35 = sub_241DAA2D0();
    os_log_type_t v36 = sub_241DAAC30();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v66 = a4;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v68 = v11;
      uint64_t v38 = (uint8_t *)v37;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v69 = a5;
      uint64_t v40 = v39;
      v72[0] = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      uint64_t v65 = v38 + 4;
      uint64_t v41 = sub_241DAB1F0();
      uint64_t v71 = sub_241D48854(v41, v42, v72);
      sub_241DAAF10();
      a4 = v66;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v35, v36, "[%s] Successfully retrieved Data associated with attachment", v38, 0xCu);
      swift_arrayDestroy();
      uint64_t v43 = v40;
      a5 = v69;
      MEMORY[0x24563A5D0](v43, -1, -1);
      uint64_t v44 = v38;
      uint64_t v11 = v68;
      MEMORY[0x24563A5D0](v44, -1, -1);
    }

    uint64_t v45 = *(void (**)(char *, uint64_t))(v12 + 8);
    v45(v20, v11);
    if (v70 >> 60 != 15)
    {
      id v46 = (uint8_t *)(a4 + 16);
      sub_241D41560(a1, v70);
      sub_241DAA2B0();
      uint64_t v47 = sub_241DAA2D0();
      os_log_type_t v48 = sub_241DAAC30();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v68 = v11;
        uint64_t v49 = swift_slowAlloc();
        uint64_t v66 = a1;
        uint64_t v50 = (uint8_t *)v49;
        uint64_t v51 = swift_slowAlloc();
        uint64_t v69 = a5;
        uint64_t v52 = v51;
        v72[0] = v51;
        uint64_t v65 = v46;
        *(_DWORD *)uint64_t v50 = 136315138;
        uint64_t v53 = sub_241DAB1F0();
        uint64_t v71 = sub_241D48854(v53, v54, v72);
        id v46 = v65;
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241D1C000, v47, v48, "[%s] Appending data to data objects array", v50, 0xCu);
        swift_arrayDestroy();
        uint64_t v55 = v52;
        a5 = v69;
        MEMORY[0x24563A5D0](v55, -1, -1);
        uint64_t v56 = v50;
        a1 = v66;
        MEMORY[0x24563A5D0](v56, -1, -1);

        uint64_t v57 = v15;
        uint64_t v58 = v68;
      }
      else
      {

        uint64_t v57 = v15;
        uint64_t v58 = v11;
      }
      v45(v57, v58);
      swift_beginAccess();
      uint64_t v59 = *(void **)v46;
      sub_241D41560(a1, v70);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)id v46 = v59;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v59 = sub_241D9A654(0, v59[2] + 1, 1, v59);
        *(void *)id v46 = v59;
      }
      unint64_t v62 = v59[2];
      unint64_t v61 = v59[3];
      if (v62 >= v61 >> 1)
      {
        uint64_t v59 = sub_241D9A654((void *)(v61 > 1), v62 + 1, 1, v59);
        *(void *)id v46 = v59;
      }
      v59[2] = v62 + 1;
      uint64_t v63 = &v59[2 * v62];
      unint64_t v64 = v70;
      v63[4] = a1;
      uint64_t v63[5] = v64;
      swift_endAccess();
      sub_241D48CD8(a1, v64);
    }
  }
  dispatch_group_leave(a5);
}

uint64_t sub_241D92824(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    uint64_t v4 = (void *)sub_241DA96F0();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_241D48CD8((uint64_t)v4, v8);

  return swift_release();
}

uint64_t sub_241D928D0(void (*a1)(uint64_t, void))
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  a1(v2, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_241D9293C(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = *v3;
  sub_241D964FC();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a2;
  void v13[3] = a3;
  v13[4] = a1;
  v13[5] = v7;
  sub_241D96668(a2, a3);
  sub_241D9780C(0, &qword_268D4CD98, MEMORY[0x263EFDE20]);
  sub_241D965E4();
  id v14 = a1;
  sub_241DAA670();
  sub_241D987A0(&qword_268D4CDB0, (void (*)(uint64_t))sub_241D964FC);
  uint64_t v15 = sub_241DAA720();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v15;
}

uint64_t sub_241D92B08@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  sub_241D9780C(0, &qword_268D4CD98, MEMORY[0x263EFDE20]);
  swift_allocObject();
  sub_241D96668(a1, a2);
  id v11 = a3;
  uint64_t result = sub_241DAA660();
  *a5 = result;
  return result;
}

void sub_241D92BD0(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v67 = a6;
  uint64_t v64 = a3;
  id v65 = a5;
  uint64_t v9 = sub_241DAA260();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241DAA2E0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  uint64_t v66 = v17;
  dispatch_group_t v18 = self;
  swift_retain();
  id v19 = objc_msgSend(v18, sel_sharedGenerator);
  if (a4 >> 60 == 15)
  {
    uint64_t v63 = v14;
    uint64_t v64 = v13;
    swift_release();
    sub_241DAA2B0();
    id v20 = sub_241DAA2D0();
    os_log_type_t v21 = sub_241DAAC30();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      id v65 = v19;
      uint64_t v24 = v23;
      uint64_t aBlock = v23;
      *(_DWORD *)id v22 = 136315138;
      uint64_t v25 = sub_241DAB1F0();
      uint64_t v74 = sub_241D48854(v25, v26, &aBlock);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v20, v21, "[%s] Could not grab attachment or attachment data.", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v27 = v24;
      id v19 = v65;
      MEMORY[0x24563A5D0](v27, -1, -1);
      MEMORY[0x24563A5D0](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v63 + 8))(v16, v64);
    uint64_t aBlock = 0;
    LOBYTE(v69) = 0;
    a1(&aBlock);
  }
  else
  {
    uint64_t v28 = v64;
    unint64_t v29 = a4;
    sub_241D41560(v64, a4);
    sub_241D41560(v28, a4);
    id v30 = objc_msgSend(v65, sel_contentType);
    sub_241DAA230();

    sub_241DAA220();
    id v65 = v19;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    id v31 = self;
    id v32 = objc_msgSend(v31, sel_mainScreen);
    objc_msgSend(v32, sel_bounds);
    CGFloat v34 = v33;
    CGFloat v36 = v35;
    CGFloat v38 = v37;
    CGFloat v40 = v39;

    v75.origin.CGFloat x = v34;
    v75.origin.CGFloat y = v36;
    v75.size.CGFloat width = v38;
    v75.size.CGFloat height = v40;
    double Width = CGRectGetWidth(v75);
    id v42 = objc_msgSend(v31, sel_mainScreen);
    objc_msgSend(v42, sel_bounds);
    CGFloat v44 = v43;
    CGFloat v46 = v45;
    CGFloat v48 = v47;
    CGFloat v50 = v49;

    v76.origin.CGFloat x = v44;
    v76.origin.CGFloat y = v46;
    v76.size.CGFloat width = v48;
    v76.size.CGFloat height = v50;
    double Height = CGRectGetHeight(v76);
    id v52 = objc_msgSend(v31, sel_mainScreen);
    objc_msgSend(v52, sel_scale);
    double v54 = v53;

    id v55 = objc_allocWithZone(MEMORY[0x263F160C8]);
    uint64_t v56 = (void *)sub_241DA96E0();
    uint64_t v57 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    id v58 = objc_msgSend(v55, sel_initWithData_contentType_size_scale_representationTypes_, v56, v57, -1, Width, Height, v54);
    sub_241D48CD8(v28, v29);

    uint64_t v59 = (void *)swift_allocObject();
    uint64_t v60 = v66;
    v59[2] = sub_241D96714;
    v59[3] = v60;
    v59[4] = v67;
    uint64_t v72 = sub_241D96750;
    uint64_t v73 = v59;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v69 = 1107296256;
    unint64_t v70 = sub_241D8E378;
    uint64_t v71 = &unk_26F5D15B8;
    unint64_t v61 = _Block_copy(&aBlock);
    swift_release();
    id v62 = v65;
    objc_msgSend(v65, sel_generateBestRepresentationForRequest_completionHandler_, v58, v61);

    _Block_release(v61);
    sub_241D48CD8(v28, v29);
  }
}

void sub_241D93178(void *a1, void *a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v8 = sub_241DAA2E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v36 - v13;
  if (a2)
  {
    id v15 = a2;
    sub_241DAA2B0();
    id v16 = a2;
    id v17 = a2;
    dispatch_group_t v18 = sub_241DAA2D0();
    os_log_type_t v19 = sub_241DAAC10();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v37 = a4;
      uint64_t v22 = v21;
      uint64_t v40 = v21;
      *(_DWORD *)uint64_t v20 = 136315394;
      CGFloat v38 = a3;
      uint64_t v23 = sub_241DAB1F0();
      uint64_t v39 = sub_241D48854(v23, v24, &v40);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v39 = (uint64_t)a2;
      id v25 = a2;
      sub_241D2B54C(0, (unint64_t *)&qword_268D4C3D0);
      uint64_t v26 = sub_241DAA9C0();
      uint64_t v39 = sub_241D48854(v26, v27, &v40);
      a3 = v38;
      sub_241DAAF10();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241D1C000, v18, v19, "[%s] Error fetching data associated with attachment: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v22, -1, -1);
      MEMORY[0x24563A5D0](v20, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    a3(0, 0);
  }
  else
  {
    sub_241DAA2B0();
    uint64_t v28 = sub_241DAA2D0();
    os_log_type_t v29 = sub_241DAAC30();
    if (os_log_type_enabled(v28, v29))
    {
      id v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v37 = a4;
      uint64_t v32 = v31;
      uint64_t v40 = v31;
      CGFloat v38 = a3;
      *(_DWORD *)id v30 = 136315138;
      v36[1] = v30 + 4;
      uint64_t v33 = sub_241DAB1F0();
      uint64_t v39 = sub_241D48854(v33, v34, &v40);
      a3 = v38;
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v28, v29, "[%s] Successfully retrieved Data associated with attachment", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v32, -1, -1);
      MEMORY[0x24563A5D0](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    if (a1) {
      id v35 = objc_msgSend(a1, sel_UIImage);
    }
    else {
      id v35 = 0;
    }
    a3(v35, 0);
  }
}

uint64_t sub_241D935C4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v66 = a4;
  uint64_t v67 = a3;
  uint64_t v76 = a5;
  uint64_t v7 = sub_241DA97B0();
  uint64_t v74 = *(void *)(v7 - 8);
  uint64_t v75 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v73 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D9807C(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v65 - v10;
  uint64_t v12 = sub_241DA9770();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v77 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = (int *)type metadata accessor for VisionPrescriptionInfoItem(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  dispatch_group_t v18 = (uint64_t *)((char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v78 = (uint64_t)&v65 - v19;
  id v20 = a1;
  id v21 = objc_msgSend(v20, sel_metadata);
  if (!v21)
  {
    long long v80 = 0u;
    long long v81 = 0u;
    goto LABEL_9;
  }
  uint64_t v22 = v21;
  uint64_t v23 = sub_241DAA920();

  uint64_t v24 = sub_241DAA990();
  if (!*(void *)(v23 + 16) || (unint64_t v26 = sub_241DA3428(v24, v25), (v27 & 1) == 0))
  {
    long long v80 = 0u;
    long long v81 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_241D2DA4C(*(void *)(v23 + 56) + 32 * v26, (uint64_t)&v80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v81 + 1))
  {
LABEL_9:
    sub_241D2D994((uint64_t)&v80);
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    uint64_t v28 = sub_241DAB110();
    swift_bridgeObjectRelease();
    BOOL v29 = v28 != 0;
    goto LABEL_11;
  }
LABEL_10:
  BOOL v29 = 1;
LABEL_11:
  BOOL v70 = v29;
  id v30 = (id)HKVisionPrescriptionTypeDetailedLongLocalizedString();
  uint64_t v31 = sub_241DAA990();
  uint64_t v68 = v32;
  uint64_t v69 = v31;

  id v33 = objc_msgSend(v20, sel_dateIssued);
  sub_241DA9750();

  uint64_t v71 = v20;
  id v34 = objc_msgSend(v20, sel_expirationDate);
  id v72 = a2;
  if (v34)
  {
    id v35 = v34;
    sub_241DA9750();

    CGFloat v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v36(v11, 0, 1, v12);
  }
  else
  {
    CGFloat v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v36(v11, 1, 1, v12);
  }
  type metadata accessor for VisionPrescriptionSourceCell(0);
  sub_241D987A0(&qword_268D4CD18, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSourceCell);
  uint64_t *v18 = sub_241DA9A30();
  v18[1] = v37;
  sub_241DA97A0();
  uint64_t v38 = (uint64_t)v18 + v15[8];
  v36((char *)v38, 1, 1, v12);
  uint64_t v39 = v15[9];
  *((unsigned char *)v18 + v39) = 1;
  uint64_t v40 = (uint64_t *)((char *)v18 + v15[6]);
  uint64_t v41 = v68;
  *uint64_t v40 = v69;
  v40[1] = v41;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v18 + v15[7], v77, v12);
  sub_241D961D8((uint64_t)v11, v38);
  *((unsigned char *)v18 + v39) = v70;
  uint64_t v42 = v78;
  sub_241D9710C((uint64_t)v18, v78, type metadata accessor for VisionPrescriptionInfoItem);
  sub_241D963E4(0, &qword_268D4B740, MEMORY[0x263F8E0F8]);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_241DB2C80;
  *(void *)(v43 + 56) = v15;
  *(void *)(v43 + 64) = sub_241D987A0(&qword_268D4CD48, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionInfoItem);
  CGFloat v44 = sub_241D2C600((uint64_t *)(v43 + 32));
  sub_241D970A4(v42, (uint64_t)v44, type metadata accessor for VisionPrescriptionInfoItem);
  uint64_t v79 = v43;
  id v45 = v72;
  if (v72)
  {
    CGFloat v46 = v66;
    uint64_t v47 = v67;
    sub_241D5CE1C(v72, v67, v66);
    uint64_t v48 = qword_268D4B2F0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v49 = v46;
    if (v48 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_241DA95E0();
    uint64_t v77 = v51;
    uint64_t v52 = type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
    uint64_t v53 = swift_allocObject();
    type metadata accessor for VisionPrescriptionViewAttachmentCell(0);
    sub_241D987A0(&qword_268D4BD58, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionViewAttachmentCell);
    id v54 = v49;
    *(void *)(v53 + 16) = sub_241DA9A30();
    *(void *)(v53 + 24) = v55;
    sub_241DA97A0();
    uint64_t v56 = (uint64_t *)(v53 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_title);
    uint64_t v57 = v77;
    *uint64_t v56 = v50;
    v56[1] = (uint64_t)v57;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v53 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_hasPadding) = 1;
    *(void *)(v53 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_attachments) = v45;
    *(void *)(v53 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_data) = v47;
    *(void *)(v53 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_previewImage) = v54;
    unint64_t v59 = *(void *)(v43 + 16);
    unint64_t v58 = *(void *)(v43 + 24);
    if (v59 >= v58 >> 1) {
      uint64_t v43 = (uint64_t)sub_241D9A244((void *)(v58 > 1), v59 + 1, 1, (void *)v43);
    }
    *((void *)&v81 + 1) = v52;
    uint64_t v82 = sub_241D987A0(&qword_268D4BD70, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionViewAttachmentItem);
    *(void *)&long long v80 = v53;
    *(void *)(v43 + 16) = v59 + 1;
    sub_241D35720(&v80, v43 + 40 * v59 + 32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v79 = v43;
  }
  uint64_t v60 = v71;
  uint64_t v61 = sub_241D95900(v71);
  sub_241D98E1C(v61);
  id v62 = sub_241D95BB8(v60);
  sub_241D98E1C((uint64_t)v62);
  uint64_t v63 = v73;
  sub_241DA97A0();
  sub_241DA9780();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v63, v75);
  sub_241DA9BF0();

  return sub_241D96FF0(v78, type metadata accessor for VisionPrescriptionInfoItem);
}

void sub_241D93E58()
{
}

uint64_t sub_241D93E88()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_241D93F08()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241D93FA8()
{
  return type metadata accessor for VisionPrescriptionDataSource();
}

unsigned char *storeEnumTagSinglePayload for VisionPrescriptionDataSource.ItemsLayout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241D9407CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionDataSource.ItemsLayout()
{
  return &type metadata for VisionPrescriptionDataSource.ItemsLayout;
}

void destroy for PrescriptionAndAttachmentData(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void **)(a1 + 24);
  }
}

void *initializeWithCopy for PrescriptionAndAttachmentData(void *a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  *a1 = *(void *)a2;
  uint64_t v5 = a1 + 1;
  uint64_t v7 = a2 + 8;
  uint64_t v6 = *(void *)(a2 + 8);
  id v8 = v4;
  if (v6)
  {
    uint64_t v10 = *(void *)(a2 + 16);
    uint64_t v9 = *(void **)(a2 + 24);
    a1[1] = v6;
    a1[2] = v10;
    a1[3] = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = v9;
  }
  else
  {
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v7;
    v5[2] = *(void *)(v7 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for PrescriptionAndAttachmentData(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = (_OWORD *)(a1 + 8);
  uint64_t v9 = (_OWORD *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v8)
    {
      *(void *)(a1 + 8) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void **)(a2 + 24);
      id v11 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v10;
      id v12 = v10;
    }
    else
    {
      sub_241D94294(a1 + 8);
      uint64_t v15 = *(void *)(a2 + 24);
      _OWORD *v7 = *v9;
      *(void *)(a1 + 24) = v15;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    uint64_t v13 = *(void **)(a2 + 24);
    *(void *)(a1 + 24) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v13;
  }
  else
  {
    long long v16 = *v9;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    _OWORD *v7 = v16;
  }
  return a1;
}

uint64_t sub_241D94294(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for PrescriptionAndAttachmentData(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for PrescriptionAndAttachmentData(uint64_t a1, void *a2)
{
  unsigned int v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[1];
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  if (!v5)
  {
    sub_241D94294(a1 + 8);
LABEL_5:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = a2[3];
    return a1;
  }
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = a2[3];

  return a1;
}

uint64_t getEnumTagSinglePayload for PrescriptionAndAttachmentData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrescriptionAndAttachmentData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrescriptionAndAttachmentData()
{
  return &type metadata for PrescriptionAndAttachmentData;
}

void destroy for PrescriptionAndAttachmentData.AttachmentDataImage(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s21VisionHealthAppPlugin29PrescriptionAndAttachmentDataV19AttachmentDataImageVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unsigned int v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for PrescriptionAndAttachmentData.AttachmentDataImage(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned int v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

__n128 initializeWithTake for PrescriptionAndAttachmentData.AttachmentDataImage(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PrescriptionAndAttachmentData.AttachmentDataImage(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  unsigned int v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for PrescriptionAndAttachmentData.AttachmentDataImage(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrescriptionAndAttachmentData.AttachmentDataImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrescriptionAndAttachmentData.AttachmentDataImage()
{
  return &type metadata for PrescriptionAndAttachmentData.AttachmentDataImage;
}

unint64_t sub_241D9460C()
{
  unint64_t result = qword_268D4CD10;
  if (!qword_268D4CD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CD10);
  }
  return result;
}

uint64_t sub_241D94664(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  id v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    id v5 = sub_241D9A244(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *(void *)uint64_t v3 = v5;
  }
  uint64_t v14 = (uint64_t)&v5[5 * a1 + 4];
  sub_241D2B54C(0, (unint64_t *)&qword_268D4B668);
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v15 = v5[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_28;
  }
  if (v17 < 0)
  {
LABEL_30:
    uint64_t result = sub_241DAB0F0();
    __break(1u);
    return result;
  }
  dispatch_group_t v18 = (char *)(v14 + 40);
  uint64_t v19 = (char *)&v5[5 * a2 + 4];
  if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17]) {
    memmove(v18, v19, 40 * v17);
  }
  uint64_t v20 = v5[2];
  BOOL v16 = __OFADD__(v20, v9);
  uint64_t v21 = v20 + v9;
  if (v16)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v5[2] = v21;
LABEL_20:
  sub_241D3A710(a3, v14);

  return sub_241D9636C(a3);
}

uint64_t sub_241D94824(uint64_t a1, int a2)
{
  uint64_t v3 = sub_241DA97B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = sub_241D3BAF4(a2, 1);
  unint64_t v8 = sub_241D3BAF4(a2, 2);
  if ((v7 & 0x100000000) != 0 && (v8 & 0x100000000) != 0) {
    return MEMORY[0x263F8EE78];
  }
  id v10 = objc_msgSend(self, sel_currentTraitCollection);
  id v11 = objc_msgSend(v10, sel_preferredContentSizeCategory);
  char v12 = sub_241DAAD70();

  sub_241D963E4(0, &qword_268D4B740, MEMORY[0x263F8E0F8]);
  uint64_t v9 = swift_allocObject();
  if (v12)
  {
    *(_OWORD *)(v9 + 16) = xmmword_241DB2C80;
    uint64_t v13 = type metadata accessor for VisionPrescriptionRangeItem(0);
    uint64_t v14 = swift_allocObject();
    type metadata accessor for VisionPrescriptionRangeCell(0);
    sub_241D987A0(&qword_268D4CD28, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionRangeCell);
    *(void *)(v14 + 16) = sub_241DA9A30();
    *(void *)(v14 + 24) = v15;
    sub_241DA97A0();
    uint64_t v16 = v14 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_leftValue;
    uint64_t v17 = v14 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_rightValue;
    *(unsigned char *)(v14 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_prescriptionField) = a2;
    *(_DWORD *)uint64_t v16 = v7;
    *(unsigned char *)(v16 + 4) = BYTE4(v7) & 1;
    *(_DWORD *)uint64_t v17 = v8;
    *(unsigned char *)(v17 + 4) = BYTE4(v8) & 1;
    *(void *)(v9 + 56) = v13;
    *(void *)(v9 + 64) = sub_241D987A0(&qword_268D4CD88, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionRangeItem);
    *(void *)(v9 + 32) = v14;
  }
  else
  {
    *(_OWORD *)(v9 + 16) = xmmword_241DB3F80;
    uint64_t v18 = type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
    uint64_t v19 = sub_241D987A0(&qword_268D4CD38, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleEyeTitleCell);
    uint64_t v60 = v18;
    uint64_t v61 = v19;
    uint64_t v20 = sub_241DA9A30();
    int v63 = a2;
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    sub_241DA97A0();
    uint64_t v24 = sub_241DA9780();
    unint64_t v62 = v7;
    uint64_t v26 = v25;
    uint64_t v56 = *(void (**)(char *, uint64_t))(v4 + 8);
    v56(v6, v3);
    *(void *)(v9 + 56) = &type metadata for VisionPrescriptionSingleEyeTitleItem;
    unint64_t v59 = sub_241D9626C();
    *(void *)(v9 + 64) = v59;
    char v27 = (void *)swift_allocObject();
    *(void *)(v9 + 32) = v27;
    void v27[2] = v21;
    v27[3] = v23;
    v27[4] = v24;
    v27[5] = v26;
    v27[6] = 2;
    type metadata accessor for VisionPrescriptionSingleRangeCell();
    uint64_t v58 = sub_241D987A0(&qword_268D4CD30, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleRangeCell);
    uint64_t v28 = sub_241DA9A30();
    uint64_t v55 = v29;
    sub_241DA97A0();
    uint64_t v30 = sub_241DA9780();
    uint64_t v32 = v31;
    id v33 = v56;
    v56(v6, v3);
    *(void *)(v9 + 96) = &type metadata for VisionPrescriptionSingleRangeItem;
    unint64_t v57 = sub_241D96454();
    *(void *)(v9 + 104) = v57;
    uint64_t v34 = swift_allocObject();
    *(void *)(v9 + 72) = v34;
    uint64_t v35 = v55;
    *(void *)(v34 + 16) = v28;
    *(void *)(v34 + 24) = v35;
    *(void *)(v34 + 32) = v30;
    *(void *)(v34 + 40) = v32;
    *(unsigned char *)(v34 + 48) = v63;
    *(_DWORD *)(v34 + 52) = v8;
    *(unsigned char *)(v34 + 56) = BYTE4(v8) & 1;
    uint64_t v36 = sub_241DA9A30();
    uint64_t v38 = v37;
    sub_241DA97A0();
    uint64_t v39 = sub_241DA9780();
    uint64_t v41 = v40;
    v33(v6, v3);
    unint64_t v42 = v59;
    *(void *)(v9 + 136) = &type metadata for VisionPrescriptionSingleEyeTitleItem;
    *(void *)(v9 + 144) = v42;
    uint64_t v43 = (void *)swift_allocObject();
    *(void *)(v9 + 112) = v43;
    v43[2] = v36;
    v43[3] = v38;
    v43[4] = v39;
    v43[5] = v41;
    uint64_t v43[6] = 1;
    uint64_t v44 = sub_241DA9A30();
    uint64_t v46 = v45;
    sub_241DA97A0();
    uint64_t v47 = sub_241DA9780();
    uint64_t v49 = v48;
    v33(v6, v3);
    unint64_t v50 = v57;
    *(void *)(v9 + 176) = &type metadata for VisionPrescriptionSingleRangeItem;
    *(void *)(v9 + 184) = v50;
    uint64_t v51 = swift_allocObject();
    *(void *)(v9 + 152) = v51;
    *(void *)(v51 + 16) = v44;
    *(void *)(v51 + 24) = v46;
    *(void *)(v51 + 32) = v47;
    *(void *)(v51 + 40) = v49;
    *(unsigned char *)(v51 + 48) = v63;
    char v52 = BYTE4(v62);
    *(_DWORD *)(v51 + 52) = v62;
    *(unsigned char *)(v51 + 56) = v52 & 1;
  }
  return v9;
}

uint64_t sub_241D94D94(uint64_t a1, char a2)
{
  uint64_t v3 = sub_241DA97B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int64_t v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = sub_241D3BAF4(a2, 1);
  unint64_t v8 = sub_241D3BAF4(a2, 2);
  if ((v7 & 0x100000000) != 0 && (v8 & 0x100000000) != 0) {
    return MEMORY[0x263F8EE78];
  }
  id v10 = objc_msgSend(self, sel_currentTraitCollection);
  id v11 = objc_msgSend(v10, sel_preferredContentSizeCategory);
  char v12 = sub_241DAAD70();

  sub_241D963E4(0, &qword_268D4B740, MEMORY[0x263F8E0F8]);
  uint64_t v9 = swift_allocObject();
  if (v12)
  {
    *(_OWORD *)(v9 + 16) = xmmword_241DB2C80;
    uint64_t v13 = sub_241D29288(v7 | ((HIDWORD(v7) & 1) << 32), a2);
    uint64_t v15 = v14;
    uint64_t v16 = sub_241D29288(v8 | ((HIDWORD(v8) & 1) << 32), a2);
    uint64_t v18 = v17;
    uint64_t v19 = sub_241D28E64(a2);
    uint64_t v21 = v20;
    uint64_t v22 = type metadata accessor for VisionPrescriptionFieldItem(0);
    uint64_t v23 = swift_allocObject();
    type metadata accessor for VisionPrescriptionFieldCell(0);
    sub_241D987A0((unint64_t *)&qword_268D4B670, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionFieldCell);
    *(void *)(v23 + 16) = sub_241DA9A30();
    *(void *)(v23 + 24) = v24;
    sub_241DA97A0();
    uint64_t v25 = (uint64_t *)(v23 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_leftValueString);
    uint64_t *v25 = 0;
    v25[1] = 0;
    uint64_t v26 = (uint64_t *)(v23 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_rightValueString);
    uint64_t *v26 = 0;
    v26[1] = 0;
    char v27 = (uint64_t *)(v23 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_title);
    uint64_t *v27 = v19;
    v27[1] = v21;
    uint64_t *v25 = v13;
    v25[1] = v15;
    swift_bridgeObjectRelease();
    uint64_t *v26 = v16;
    v26[1] = v18;
    swift_bridgeObjectRelease();
    *(void *)(v9 + 56) = v22;
    *(void *)(v9 + 64) = sub_241D987A0(&qword_268D4CD70, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionFieldItem);
    *(void *)(v9 + 32) = v23;
  }
  else
  {
    *(_OWORD *)(v9 + 16) = xmmword_241DB3F80;
    uint64_t v28 = type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
    uint64_t v29 = sub_241D987A0(&qword_268D4CD38, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleEyeTitleCell);
    uint64_t v82 = v28;
    uint64_t v83 = v29;
    uint64_t v80 = sub_241DA9A30();
    uint64_t v31 = v30;
    sub_241DA97A0();
    uint64_t v32 = sub_241DA9780();
    uint64_t v34 = v33;
    unint64_t v84 = v7;
    uint64_t v35 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v85 = v4 + 8;
    v35(v6, v3);
    *(void *)(v9 + 56) = &type metadata for VisionPrescriptionSingleEyeTitleItem;
    unint64_t v81 = sub_241D9626C();
    *(void *)(v9 + 64) = v81;
    uint64_t v36 = (void *)swift_allocObject();
    *(void *)(v9 + 32) = v36;
    void v36[2] = v80;
    v36[3] = v31;
    v36[4] = v32;
    v36[5] = v34;
    v36[6] = 2;
    uint64_t v37 = sub_241D28E64(a2);
    uint64_t v76 = v38;
    uint64_t v77 = v37;
    uint64_t v75 = sub_241D29288(v8 | ((HIDWORD(v8) & 1) << 32), a2);
    uint64_t v40 = v39;
    uint64_t v41 = type metadata accessor for VisionPrescriptionSingleFieldCell();
    uint64_t v42 = sub_241D987A0((unint64_t *)&qword_268D4C678, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleFieldCell);
    uint64_t v79 = v41;
    uint64_t v80 = v42;
    uint64_t v73 = sub_241DA9A30();
    uint64_t v44 = v43;
    swift_bridgeObjectRetain();
    sub_241DA97A0();
    uint64_t v45 = sub_241DA9780();
    uint64_t v47 = v46;
    v35(v6, v3);
    uint64_t v74 = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v9 + 96) = &type metadata for VisionPrescriptionSingleFieldItem;
    unint64_t v78 = sub_241D962C8();
    *(void *)(v9 + 104) = v78;
    uint64_t v48 = (void *)swift_allocObject();
    *(void *)(v9 + 72) = v48;
    id v48[2] = v73;
    v48[3] = v44;
    v48[4] = v45;
    v48[5] = v47;
    uint64_t v49 = v76;
    v48[6] = v77;
    v48[7] = v49;
    v48[8] = v75;
    v48[9] = v40;
    uint64_t v50 = sub_241DA9A30();
    uint64_t v52 = v51;
    sub_241DA97A0();
    uint64_t v53 = sub_241DA9780();
    uint64_t v55 = v54;
    v35(v6, v3);
    unint64_t v56 = v81;
    *(void *)(v9 + 136) = &type metadata for VisionPrescriptionSingleEyeTitleItem;
    *(void *)(v9 + 144) = v56;
    unint64_t v57 = (void *)swift_allocObject();
    *(void *)(v9 + 112) = v57;
    v57[2] = v50;
    v57[3] = v52;
    v57[4] = v53;
    v57[5] = v55;
    v57[6] = 1;
    uint64_t v83 = sub_241D28E64(a2);
    uint64_t v59 = v58;
    uint64_t v60 = sub_241D29288(v84 | ((HIDWORD(v84) & 1) << 32), a2);
    uint64_t v62 = v61;
    uint64_t v63 = sub_241DA9A30();
    uint64_t v65 = v64;
    swift_bridgeObjectRetain();
    sub_241DA97A0();
    uint64_t v66 = sub_241DA9780();
    uint64_t v68 = v67;
    v74(v6, v3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v69 = v78;
    *(void *)(v9 + 176) = &type metadata for VisionPrescriptionSingleFieldItem;
    *(void *)(v9 + 184) = v69;
    BOOL v70 = (void *)swift_allocObject();
    *(void *)(v9 + 152) = v70;
    v70[2] = v63;
    v70[3] = v65;
    v70[4] = v66;
    v70[5] = v68;
    v70[6] = v83;
    v70[7] = v59;
    v70[8] = v60;
    v70[9] = v62;
  }
  return v9;
}

uint64_t sub_241D95408(void *a1, int a2)
{
  uint64_t v4 = sub_241DA97B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (!v8) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v9 = (void *)v8;
  id v10 = a1;
  id v11 = objc_msgSend(v9, sel_leftEye);
  unint64_t v12 = (unint64_t)objc_msgSend(v11, sel_prism);

  id v13 = objc_msgSend(v9, sel_rightEye);
  unint64_t v14 = (unint64_t)objc_msgSend(v13, sel_prism);

  if (!(v12 | v14))
  {

    return MEMORY[0x263F8EE78];
  }
  int v53 = a2;
  id v17 = objc_msgSend(self, sel_currentTraitCollection);
  id v18 = objc_msgSend(v17, sel_preferredContentSizeCategory);
  char v19 = sub_241DAAD70();

  sub_241D963E4(0, &qword_268D4B740, MEMORY[0x263F8E0F8]);
  if (v19)
  {
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_241DB2C80;
    id v20 = (id)v12;
    id v21 = (id)v14;
    uint64_t v22 = sub_241D2B274(v53 & 1, (void *)v12, (void *)v14);

    *(void *)(v15 + 56) = type metadata accessor for VisionPrescriptionFieldItem(0);
    *(void *)(v15 + 64) = sub_241D987A0(&qword_268D4CD70, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionFieldItem);
    *(void *)(v15 + 32) = v22;
  }
  else
  {
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_241DB3F80;
    type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
    uint64_t v50 = sub_241D987A0(&qword_268D4CD38, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleEyeTitleCell);
    uint64_t v23 = sub_241DA9A30();
    id v51 = v24;
    sub_241DA97A0();
    uint64_t v25 = sub_241DA9780();
    id v52 = v10;
    uint64_t v27 = v26;
    uint64_t v49 = *(void (**)(char *, uint64_t))(v5 + 8);
    v49(v7, v4);
    *(void *)(v15 + 56) = &type metadata for VisionPrescriptionSingleEyeTitleItem;
    unint64_t v48 = sub_241D9626C();
    *(void *)(v15 + 64) = v48;
    uint64_t v28 = (void *)swift_allocObject();
    *(void *)(v15 + 32) = v28;
    id v29 = v51;
    void v28[2] = v23;
    void v28[3] = v29;
    void v28[4] = v25;
    v28[5] = v27;
    v28[6] = 2;
    id v30 = (id)v14;
    id v51 = v30;
    v53 &= 1u;
    sub_241D66E20(v53, (void *)v14, (uint64_t *)v54);

    *(void *)(v15 + 96) = &type metadata for VisionPrescriptionSingleFieldItem;
    unint64_t v31 = sub_241D962C8();
    *(void *)(v15 + 104) = v31;
    uint64_t v32 = (_OWORD *)swift_allocObject();
    *(void *)(v15 + 72) = v32;
    long long v33 = v54[1];
    v32[1] = v54[0];
    v32[2] = v33;
    long long v34 = v54[3];
    v32[3] = v54[2];
    v32[4] = v34;
    uint64_t v35 = sub_241DA9A30();
    uint64_t v37 = v36;
    sub_241DA97A0();
    uint64_t v38 = sub_241DA9780();
    uint64_t v40 = v39;
    v49(v7, v4);
    unint64_t v41 = v48;
    *(void *)(v15 + 136) = &type metadata for VisionPrescriptionSingleEyeTitleItem;
    *(void *)(v15 + 144) = v41;
    uint64_t v42 = (void *)swift_allocObject();
    *(void *)(v15 + 112) = v42;
    v42[2] = v35;
    v42[3] = v37;
    unsigned char v42[4] = v38;
    void v42[5] = v40;
    v42[6] = 1;
    id v43 = (id)v12;
    sub_241D66E20(v53, (void *)v12, (uint64_t *)v55);

    *(void *)(v15 + 176) = &type metadata for VisionPrescriptionSingleFieldItem;
    *(void *)(v15 + 184) = v31;
    uint64_t v44 = (_OWORD *)swift_allocObject();
    *(void *)(v15 + 152) = v44;
    long long v45 = v55[1];
    v44[1] = v55[0];
    void v44[2] = v45;
    long long v46 = v55[3];
    v44[3] = v55[2];
    v44[4] = v46;
  }
  return v15;
}

uint64_t sub_241D95900(void *a1)
{
  uint64_t v2 = sub_241D94824((uint64_t)a1, 0);
  uint64_t v3 = sub_241D94824((uint64_t)a1, 1);
  sub_241D98E1C(v3);
  uint64_t v4 = sub_241D94824((uint64_t)a1, 2);
  *(void *)&long long v23 = v2;
  sub_241D98E1C(v4);
  uint64_t v5 = sub_241D94D94((uint64_t)a1, 3);
  sub_241D98E1C(v5);
  uint64_t v6 = v2;
  id v7 = objc_msgSend(a1, sel_prescriptionType);
  if (v7 == (id)2)
  {
    uint64_t v8 = sub_241D94D94((uint64_t)a1, 13);
    uint64_t v12 = sub_241D94D94((uint64_t)a1, 14);
  }
  else
  {
    if (v7 != (id)1)
    {
      uint64_t v13 = MEMORY[0x263F8EE78];
      goto LABEL_7;
    }
    uint64_t v8 = sub_241D94D94((uint64_t)a1, 12);
    uint64_t v9 = sub_241D94D94((uint64_t)a1, 11);
    sub_241D98E1C(v9);
    uint64_t v10 = sub_241D94D94((uint64_t)a1, 4);
    sub_241D98E1C(v10);
    uint64_t v11 = sub_241D95408(a1, 1);
    *(void *)&long long v23 = v8;
    sub_241D98E1C(v11);
    uint64_t v12 = sub_241D95408(a1, 0);
  }
  sub_241D98E1C(v12);
  uint64_t v13 = v8;
LABEL_7:
  sub_241D98E1C(v13);
  uint64_t v14 = v6;
  uint64_t v26 = v6;
  if (*(void *)(v6 + 16))
  {
    id v15 = objc_msgSend(self, sel_currentTraitCollection);
    id v16 = objc_msgSend(v15, sel_preferredContentSizeCategory);
    char v17 = sub_241DAAD70();

    if (v17)
    {
      uint64_t v18 = type metadata accessor for VisionPrescriptionColumnTitleItem(0);
      uint64_t v19 = swift_allocObject();
      type metadata accessor for VisionPrescriptionColumnTitleCell(0);
      sub_241D987A0(&qword_268D4CD20, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionColumnTitleCell);
      *(void *)(v19 + 16) = sub_241DA9A30();
      *(void *)(v19 + 24) = v20;
      sub_241DA97A0();
      uint64_t v24 = v18;
      uint64_t v25 = sub_241D987A0(&qword_268D4CD58, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionColumnTitleItem);
      *(void *)&long long v23 = v19;
      sub_241D35720(&v23, (uint64_t)v22);
      sub_241D94664(0, 0, (uint64_t)v22);
      return v26;
    }
  }
  return v14;
}

void *sub_241D95BB8(void *a1)
{
  uint64_t v2 = type metadata accessor for VisionPrescriptionAppClipCodeItem(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (objc_msgSend(a1, sel_prescriptionType) != (id)1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  id v5 = objc_msgSend(a1, sel_metadata);
  if (!v5)
  {
    long long v20 = 0u;
    long long v21 = 0u;
    goto LABEL_12;
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_241DAA920();

  uint64_t v8 = sub_241DAA990();
  if (!*(void *)(v7 + 16) || (unint64_t v10 = sub_241DA3428(v8, v9), (v11 & 1) == 0))
  {
    long long v20 = 0u;
    long long v21 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_241D2DA4C(*(void *)(v7 + 56) + 32 * v10, (uint64_t)&v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v21 + 1))
  {
LABEL_12:
    sub_241D2D994((uint64_t)&v20);
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B610);
  if ((swift_dynamicCast() & 1) == 0) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v23;
  type metadata accessor for VisionPrescriptionAppClipCodeImageCell(0);
  sub_241D987A0(&qword_268D4CD40, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionAppClipCodeImageCell);
  id v13 = v12;
  *uint64_t v4 = sub_241DA9A30();
  v4[1] = v14;
  sub_241DA97A0();
  *(uint64_t *)((char *)v4 + *(int *)(v2 + 24)) = (uint64_t)v13;
  id v15 = sub_241D9A244(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v17 = v15[2];
  unint64_t v16 = v15[3];
  if (v17 >= v16 >> 1) {
    id v15 = sub_241D9A244((void *)(v16 > 1), v17 + 1, 1, v15);
  }
  *((void *)&v21 + 1) = v2;
  uint64_t v22 = sub_241D987A0(&qword_268D4CD50, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionAppClipCodeItem);
  uint64_t v18 = sub_241D2C600((uint64_t *)&v20);
  sub_241D970A4((uint64_t)v4, (uint64_t)v18, type metadata accessor for VisionPrescriptionAppClipCodeItem);
  v15[2] = v17 + 1;
  sub_241D35720(&v20, (uint64_t)&v15[5 * v17 + 4]);
  sub_241D96FF0((uint64_t)v4, type metadata accessor for VisionPrescriptionAppClipCodeItem);

  return v15;
}

uint64_t sub_241D95EB8()
{
  return sub_241DAAC40();
}

uint64_t sub_241D961D8(uint64_t a1, uint64_t a2)
{
  sub_241D9807C(0, &qword_268D4B5B0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_241D9626C()
{
  unint64_t result = qword_268D4CD60;
  if (!qword_268D4CD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CD60);
  }
  return result;
}

uint64_t sub_241D962C0()
{
  return sub_241D964B0(56);
}

unint64_t sub_241D962C8()
{
  unint64_t result = qword_268D4CD68;
  if (!qword_268D4CD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CD68);
  }
  return result;
}

uint64_t sub_241D9631C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_241D9636C(uint64_t a1)
{
  sub_241D963E4(0, &qword_268D4CD78, MEMORY[0x263F8DD68]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241D963E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241D2B54C(255, (unint64_t *)&qword_268D4B668);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_241D96454()
{
  unint64_t result = qword_268D4CD80;
  if (!qword_268D4CD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CD80);
  }
  return result;
}

uint64_t sub_241D964A8()
{
  return sub_241D964B0(57);
}

uint64_t sub_241D964B0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

void sub_241D964FC()
{
  if (!qword_268D4CD90)
  {
    sub_241D9780C(255, &qword_268D4CD98, MEMORY[0x263EFDE20]);
    sub_241D965E4();
    unint64_t v0 = sub_241DAA680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CD90);
    }
  }
}

void sub_241D9657C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241D28BF4(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_241D965E4()
{
  unint64_t result = qword_268D4CDA8;
  if (!qword_268D4CDA8)
  {
    sub_241D9780C(255, &qword_268D4CD98, MEMORY[0x263EFDE20]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CDA8);
  }
  return result;
}

uint64_t sub_241D9665C@<X0>(uint64_t *a1@<X8>)
{
  return sub_241D92B08(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_241D96668(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_241D41560(a1, a2);
  }
  return a1;
}

uint64_t sub_241D96680()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 60 != 15) {
    sub_241D415B8(*(void *)(v0 + 16), v1);
  }

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_241D966D0(void (*a1)(uint64_t *), uint64_t a2)
{
  sub_241D92BD0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_241D966DC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241D96718()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241D96750(void *a1, void *a2)
{
  sub_241D93178(a1, a2, *(void (**)(void, void))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_241D9675C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241D9676C()
{
  return swift_release();
}

void sub_241D96774()
{
  if (!qword_268D4CDB8)
  {
    sub_241D96808();
    sub_241D987A0(&qword_268D4CDD8, (void (*)(uint64_t))sub_241D96808);
    unint64_t v0 = sub_241DAA680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CDB8);
    }
  }
}

void sub_241D96808()
{
  if (!qword_268D4CDC0)
  {
    sub_241D9657C(255, &qword_268D4CDC8, &qword_268D4CDD0, 0x263F0A0D0, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241DAA650();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CDC0);
    }
  }
}

uint64_t sub_241D9689C()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241D968DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_241D911E4(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

void sub_241D968E8(uint64_t a1, uint64_t a2)
{
  sub_241D91284(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_241D968F4(uint64_t a1, void *a2)
{
  sub_241D913AC(a1, a2, *(void (**)(uint64_t, void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_241D96900()
{
  if (!qword_268D4CDE8)
  {
    sub_241D58000();
    sub_241D9739C(255, &qword_268D4CDF0, (void (*)(uint64_t))sub_241D969C8);
    sub_241D987A0(&qword_268D4C238, (void (*)(uint64_t))sub_241D58000);
    unint64_t v0 = sub_241DAA4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CDE8);
    }
  }
}

void sub_241D969C8()
{
  if (!qword_268D4CDF8)
  {
    sub_241D28BF4(255, (unint64_t *)&qword_268D4C210);
    sub_241D9657C(255, &qword_268D4CDC8, &qword_268D4CDD0, 0x263F0A0D0, MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D4CDF8);
    }
  }
}

void sub_241D96A74()
{
  if (!qword_268D4CE00)
  {
    sub_241D9739C(255, &qword_268D4CDF0, (void (*)(uint64_t))sub_241D969C8);
    sub_241D96900();
    sub_241D96B4C();
    sub_241D987A0(&qword_268D4CE10, (void (*)(uint64_t))sub_241D96900);
    unint64_t v0 = sub_241DAA4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CE00);
    }
  }
}

unint64_t sub_241D96B4C()
{
  unint64_t result = qword_268D4CE08;
  if (!qword_268D4CE08)
  {
    sub_241D9739C(255, &qword_268D4CDF0, (void (*)(uint64_t))sub_241D969C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CE08);
  }
  return result;
}

void sub_241D96BC0()
{
  if (!qword_268D4CE18)
  {
    sub_241D96A74();
    sub_241D96C88(255, &qword_268D4CE20, MEMORY[0x263EFDCF0]);
    sub_241D987A0(&qword_268D4CE30, (void (*)(uint64_t))sub_241D96A74);
    unint64_t v0 = sub_241DAA4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CE18);
    }
  }
}

void sub_241D96C88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_241D984C8(255, &qword_268D4CE28, (uint64_t)&type metadata for PrescriptionAndAttachmentData, MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241D96D1C()
{
  if (!qword_268D4CE38)
  {
    sub_241D96C88(255, &qword_268D4CE20, MEMORY[0x263EFDCF0]);
    sub_241D96BC0();
    sub_241D96DF4();
    sub_241D987A0(&qword_268D4CE48, (void (*)(uint64_t))sub_241D96BC0);
    unint64_t v0 = sub_241DAA4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CE38);
    }
  }
}

unint64_t sub_241D96DF4()
{
  unint64_t result = qword_268D4CE40;
  if (!qword_268D4CE40)
  {
    sub_241D96C88(255, &qword_268D4CE20, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CE40);
  }
  return result;
}

void sub_241D96E68()
{
  if (!qword_268D4CE50)
  {
    sub_241D96D1C();
    sub_241D28BF4(255, (unint64_t *)&qword_268D4BC40);
    sub_241D987A0(&qword_268D4CE58, (void (*)(uint64_t))sub_241D96D1C);
    sub_241D3772C();
    unint64_t v0 = sub_241DAA580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CE50);
    }
  }
}

uint64_t sub_241D96F34()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D96F6C()
{
  return sub_241D983E0(MEMORY[0x263F8EED8], 32);
}

uint64_t sub_241D96F88@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241D8F524(a1, *(void **)(v2 + 24), a2);
}

uint64_t sub_241D96F90()
{
  return sub_241D983E0(MEMORY[0x263F8EED8], 40);
}

uint64_t sub_241D96FAC(void *a1, unint64_t a2)
{
  return sub_241D8FA28(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_241D96FB8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_241D96FF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241D97050()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D97060()
{
  return sub_241D908F0();
}

uint64_t sub_241D97068(uint64_t a1)
{
  return sub_241D90AC8(a1);
}

void sub_241D97070(uint64_t a1)
{
}

uint64_t sub_241D970A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241D9710C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_241D97174()
{
  if (!qword_268D4CE88)
  {
    sub_241D97290();
    sub_241D97308();
    sub_241D9739C(255, &qword_268D4CEA0, (void (*)(uint64_t))sub_241D97400);
    sub_241D987A0(&qword_268D4CEB8, (void (*)(uint64_t))sub_241D97290);
    sub_241D987A0(&qword_268D4CEC0, (void (*)(uint64_t))sub_241D97308);
    sub_241D974C0();
    unint64_t v0 = sub_241DAA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CE88);
    }
  }
}

void sub_241D97290()
{
  if (!qword_268D4CE90)
  {
    sub_241D28BF4(255, (unint64_t *)&qword_268D4C210);
    unint64_t v0 = sub_241DAA5A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CE90);
    }
  }
}

void sub_241D97308()
{
  if (!qword_268D4CE98)
  {
    sub_241D9657C(255, &qword_268D4CDC8, &qword_268D4CDD0, 0x263F0A0D0, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241DAA5A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CE98);
    }
  }
}

void sub_241D9739C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241DAA5A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241D97400()
{
  if (!qword_268D4CEA8)
  {
    sub_241D984C8(255, &qword_268D4CEB0, MEMORY[0x263F06F78], MEMORY[0x263F8D488]);
    sub_241D9657C(255, &qword_268D4CDA0, &qword_268D4BD68, 0x263F827E8, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D4CEA8);
    }
  }
}

unint64_t sub_241D974C0()
{
  unint64_t result = qword_268D4CEC8;
  if (!qword_268D4CEC8)
  {
    sub_241D9739C(255, &qword_268D4CEA0, (void (*)(uint64_t))sub_241D97400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CEC8);
  }
  return result;
}

void sub_241D97534()
{
  if (!qword_268D4CED0)
  {
    sub_241D97174();
    sub_241D984C8(255, &qword_268D4CE28, (uint64_t)&type metadata for PrescriptionAndAttachmentData, MEMORY[0x263F8D8F0]);
    sub_241D987A0(&qword_268D4CED8, (void (*)(uint64_t))sub_241D97174);
    unint64_t v0 = sub_241DAA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CED0);
    }
  }
}

void sub_241D97604()
{
  if (!qword_268D4CEE0)
  {
    sub_241D976DC();
    sub_241D97E04(255, &qword_268D4CF10, MEMORY[0x263EFDCF0]);
    sub_241D987A0(&qword_268D4CF18, (void (*)(uint64_t))sub_241D976DC);
    sub_241D979A0();
    unint64_t v0 = sub_241DAA550();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CEE0);
    }
  }
}

void sub_241D976DC()
{
  if (!qword_268D4CEE8)
  {
    sub_241D977B0(255, &qword_268D4CEF0, &qword_268D4CEB0, MEMORY[0x263F06F78], MEMORY[0x263F8D488]);
    sub_241D9780C(255, &qword_268D4CEF8, MEMORY[0x263EFDCF0]);
    sub_241D978A8();
    sub_241D9792C();
    unint64_t v0 = sub_241DAA470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CEE8);
    }
  }
}

void sub_241D977B0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(void, uint64_t))
{
  if (!*a2)
  {
    sub_241D984C8(255, a3, a4, a5);
    unint64_t v6 = sub_241DAA610();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_241D9780C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_241D9657C(255, &qword_268D4CDA0, &qword_268D4BD68, 0x263F827E8, MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_241D978A8()
{
  unint64_t result = qword_268D4CF00;
  if (!qword_268D4CF00)
  {
    sub_241D977B0(255, &qword_268D4CEF0, &qword_268D4CEB0, MEMORY[0x263F06F78], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CF00);
  }
  return result;
}

unint64_t sub_241D9792C()
{
  unint64_t result = qword_268D4CF08;
  if (!qword_268D4CF08)
  {
    sub_241D9780C(255, &qword_268D4CEF8, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CF08);
  }
  return result;
}

unint64_t sub_241D979A0()
{
  unint64_t result = qword_268D4CF20;
  if (!qword_268D4CF20)
  {
    sub_241D97E04(255, &qword_268D4CF10, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CF20);
  }
  return result;
}

void sub_241D97A14()
{
  if (!qword_268D4CF28)
  {
    sub_241D97B00();
    sub_241D97604();
    sub_241D987A0(&qword_268D4CF48, (void (*)(uint64_t))sub_241D97B00);
    sub_241D987A0(&qword_268D4CF50, (void (*)(uint64_t))sub_241D97604);
    unint64_t v0 = sub_241DAA4C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CF28);
    }
  }
}

void sub_241D97B00()
{
  if (!qword_268D4CF30)
  {
    sub_241D97BB0(255);
    sub_241D987A0(&qword_268D4CF40, sub_241D97BB0);
    unint64_t v0 = sub_241DAA560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CF30);
    }
  }
}

void sub_241D97BB0(uint64_t a1)
{
}

uint64_t sub_241D97BE4()
{
  return sub_241D983E0(MEMORY[0x263F8EED8], 32);
}

uint64_t sub_241D97C00(void *a1)
{
  return sub_241D906C4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_241D97C08()
{
  unint64_t result = qword_268D4CF70;
  if (!qword_268D4CF70)
  {
    sub_241D9657C(255, &qword_268D4CE80, (unint64_t *)&qword_268D4C210, 0x263F0A8E0, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CF70);
  }
  return result;
}

unint64_t sub_241D97C8C()
{
  unint64_t result = qword_268D4CF78;
  if (!qword_268D4CF78)
  {
    sub_241D9843C(255, &qword_268D4CE78, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CF78);
  }
  return result;
}

unint64_t sub_241D97D00()
{
  unint64_t result = qword_268D4CF88;
  if (!qword_268D4CF88)
  {
    sub_241D977B0(255, &qword_268D4CF58, &qword_268D4CE28, (uint64_t)&type metadata for PrescriptionAndAttachmentData, MEMORY[0x263F8D8F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CF88);
  }
  return result;
}

void sub_241D97D84()
{
  if (!qword_268D4CF90)
  {
    sub_241D97E04(255, &qword_268D4CF98, MEMORY[0x263EFDE20]);
    sub_241D97E98();
    unint64_t v0 = sub_241DAA680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CF90);
    }
  }
}

void sub_241D97E04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_241D984C8(255, &qword_268D4CEB0, MEMORY[0x263F06F78], MEMORY[0x263F8D488]);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_241D97E98()
{
  unint64_t result = qword_268D4CFA0;
  if (!qword_268D4CFA0)
  {
    sub_241D97E04(255, &qword_268D4CF98, MEMORY[0x263EFDE20]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CFA0);
  }
  return result;
}

uint64_t sub_241D97F0C()
{
  return sub_241D983E0(MEMORY[0x263F8EEA0], 40);
}

uint64_t sub_241D97F28@<X0>(uint64_t *a1@<X8>)
{
  return sub_241D91A08(*(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_241D97F34()
{
  return sub_241D983E0(MEMORY[0x263F8EEA0], 40);
}

uint64_t sub_241D97F50(uint64_t a1, uint64_t a2)
{
  return sub_241D91AC8(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_241D97F5C(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_241D97F9C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D97FD4()
{
  return sub_241D983E0(MEMORY[0x263F8EED8], 40);
}

void sub_241D97FF0(uint64_t a1, unint64_t a2, void *a3)
{
  sub_241D921A4(a1, a2, a3, *(void *)(v3 + 16), *(NSObject **)(v3 + 24), *(void *)(v3 + 32));
}

void sub_241D97FFC(uint64_t a1)
{
}

uint64_t sub_241D98030()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241D98070()
{
  return sub_241D928D0(*(void (**)(uint64_t, void))(v0 + 16));
}

void sub_241D9807C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241D980E0()
{
  if (!qword_268D4CFC8)
  {
    sub_241D9657C(255, &qword_268D4CE80, (unint64_t *)&qword_268D4C210, 0x263F0A8E0, MEMORY[0x263EFDDF8]);
    sub_241D97308();
    sub_241D97C08();
    sub_241D987A0(&qword_268D4CEC0, (void (*)(uint64_t))sub_241D97308);
    unint64_t v0 = sub_241DAA470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CFC8);
    }
  }
}

void sub_241D981C8()
{
  if (!qword_268D4CFD0)
  {
    sub_241D982B4();
    sub_241D97308();
    sub_241D987A0(&qword_268D4CFF0, (void (*)(uint64_t))sub_241D982B4);
    sub_241D987A0(&qword_268D4CEC0, (void (*)(uint64_t))sub_241D97308);
    unint64_t v0 = sub_241DAA4C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CFD0);
    }
  }
}

void sub_241D982B4()
{
  if (!qword_268D4CFD8)
  {
    sub_241D9843C(255, &qword_268D4CFE0, MEMORY[0x263F8D488]);
    sub_241D98350();
    unint64_t v0 = sub_241DAA560();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4CFD8);
    }
  }
}

unint64_t sub_241D98350()
{
  unint64_t result = qword_268D4CFE8;
  if (!qword_268D4CFE8)
  {
    sub_241D9843C(255, &qword_268D4CFE0, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4CFE8);
  }
  return result;
}

uint64_t sub_241D983C4()
{
  return sub_241D983E0(MEMORY[0x263F8EED8], 32);
}

uint64_t sub_241D983E0(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 16));

  return MEMORY[0x270FA0238](v2, a2, 7);
}

uint64_t sub_241D98434(unint64_t *a1)
{
  return sub_241D8EC40(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_241D9843C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_241D9657C(255, &qword_268D4CDC8, &qword_268D4CDD0, 0x263F0A0D0, MEMORY[0x263F8D488]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241D984C8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241D98514()
{
  if (!qword_268D4D020)
  {
    sub_241D984C8(255, &qword_268D4D018, (uint64_t)&type metadata for VisionPrescriptionDataSource.ItemsLayout, MEMORY[0x263EFDDF8]);
    sub_241D985F4();
    sub_241D98690();
    sub_241D987A0(&qword_268D4D038, (void (*)(uint64_t))sub_241D985F4);
    unint64_t v0 = sub_241DAA4C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4D020);
    }
  }
}

void sub_241D985F4()
{
  if (!qword_268D4D028)
  {
    sub_241DAAD50();
    sub_241D987A0(&qword_268D4C078, MEMORY[0x263F07CB0]);
    unint64_t v0 = sub_241DAA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4D028);
    }
  }
}

unint64_t sub_241D98690()
{
  unint64_t result = qword_268D4D030;
  if (!qword_268D4D030)
  {
    sub_241D984C8(255, &qword_268D4D018, (uint64_t)&type metadata for VisionPrescriptionDataSource.ItemsLayout, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4D030);
  }
  return result;
}

void sub_241D9870C()
{
  if (!qword_268D4D040)
  {
    sub_241D98514();
    sub_241D987A0(&qword_268D4D048, (void (*)(uint64_t))sub_241D98514);
    unint64_t v0 = sub_241DAA500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4D040);
    }
  }
}

uint64_t sub_241D987A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryDataSource()
{
  uint64_t result = qword_268D4D0A8;
  if (!qword_268D4D0A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241D98860()
{
  return swift_initClassMetadata2();
}

BOOL sub_241D988EC(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_241D9894C(uint64_t a1)
{
  size_t v2 = *(void *)(a1 + 16);
  int v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    size_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  int v3 = sub_241D99FDC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  size_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = &v3[v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  size_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

uint64_t sub_241D98A98(unint64_t a1)
{
  return sub_241D98AC8(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_241D9A99C);
}

uint64_t sub_241D98AB0(unint64_t a1)
{
  return sub_241D98AC8(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_241D9ABCC);
}

uint64_t sub_241D98AC8(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_241DAB0A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_241DAB0A0();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *size_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x245639BF0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *size_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_241DAB0A0();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_241DAAB10();
}

uint64_t sub_241D98C9C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  int v3 = sub_241D9A11C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  sub_241D36B4C(0, (unint64_t *)&qword_268D4C280);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

uint64_t sub_241D98E1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int v3 = sub_241D9A244(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  sub_241D36B4C(0, (unint64_t *)&qword_268D4B668);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

uint64_t sub_241D98F98(char a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  *(void *)(v4 + qword_268D4D0A0) = 0;
  *(void *)(v4 + qword_268D4D058) = a2;
  *(void *)(v4 + qword_268D4D060) = a3;
  BOOL v8 = a1 != 2;
  uint64_t v9 = *(void *)(a3 + 48);
  swift_retain();
  id v35 = a2;
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_241D41DF8(v35, v8, v9);
  uint64_t v12 = v11;
  swift_release();
  long long v34 = (uint64_t *)(v4 + qword_268D4D068);
  uint64_t *v34 = v10;
  v34[1] = v12;
  uint64_t v13 = *(void *)(a3 + 48);
  type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource();
  swift_allocObject();
  swift_retain();
  uint64_t v14 = sub_241D61560(a1, v13);
  swift_release();
  uint64_t v33 = qword_268D4D070;
  *(void *)(v4 + qword_268D4D070) = v14;
  uint64_t v15 = *(void *)(a3 + 48);
  type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource();
  swift_allocObject();
  swift_retain();
  uint64_t v16 = sub_241D2EB88(0, v8, v15);
  uint64_t v17 = qword_268D4D078;
  *(void *)(v4 + qword_268D4D078) = v16;
  uint64_t v18 = *(void *)(a3 + 48);
  swift_allocObject();
  swift_retain();
  uint64_t v19 = sub_241D2EB88(1, v8, v18);
  uint64_t v20 = qword_268D4D080;
  *(void *)(v4 + qword_268D4D080) = v19;
  uint64_t v21 = *(void *)(a3 + 48);
  swift_allocObject();
  swift_retain();
  uint64_t v22 = sub_241D2EB88(2, v8, v21);
  uint64_t v23 = qword_268D4D088;
  *(void *)(v4 + qword_268D4D088) = v22;
  uint64_t v24 = *(void *)(a3 + 48);
  swift_allocObject();
  swift_retain();
  uint64_t v25 = sub_241D2EB88(3, v8, v24);
  uint64_t v26 = qword_268D4D090;
  *(void *)(v4 + qword_268D4D090) = v25;
  unint64_t v27 = sub_241D9B640(v8, (uint64_t)&unk_26F5CF080, a3);
  *(void *)(v4 + qword_268D4D098) = v27;
  sub_241D50C30(0, (unint64_t *)&qword_268D4B810, (unint64_t *)&qword_268D4C280);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_241DB41B0;
  uint64_t v29 = MEMORY[0x263F440A0];
  *(void *)(v28 + 32) = *(void *)(v4 + v33);
  *(void *)(v28 + 40) = v29;
  *(_OWORD *)(v28 + 48) = *(_OWORD *)v34;
  *(void *)(v28 + 64) = *(void *)(v4 + v17);
  *(void *)(v28 + 72) = v29;
  *(void *)(v28 + 80) = *(void *)(v4 + v20);
  *(void *)(v28 + 88) = v29;
  *(void *)(v28 + 96) = *(void *)(v4 + v23);
  *(void *)(v28 + 104) = v29;
  *(void *)(v28 + 112) = *(void *)(v4 + v26);
  *(void *)(v28 + 120) = v29;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v30 = sub_241D3214C(v27);
  swift_bridgeObjectRelease();
  sub_241D98C9C(v30);
  uint64_t v31 = sub_241DA9F30();
  swift_retain();
  sub_241D99338();
  swift_release();

  swift_release();
  return v31;
}

uint64_t sub_241D99338()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241DAA2E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA280();
  uint64_t v7 = sub_241DAA2D0();
  os_log_type_t v8 = sub_241DAAC30();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v19 = v3;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v20 = v2;
    uint64_t v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = sub_241DAB1F0();
    uint64_t v21 = sub_241D48854(v12, v13, &v22);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v7, v8, "[%s] Creating a stream to observe selected prescription type changes and update the visibility of addtional fields data sources", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v11, -1, -1);
    uint64_t v14 = v10;
    uint64_t v2 = v20;
    MEMORY[0x24563A5D0](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v22 = *(void *)(*(void *)(*(void *)((char *)v1 + qword_268D4D060) + 48) + 16);
  *(void *)(swift_allocObject() + 16) = v2;
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v2;
  sub_241D61F7C();
  sub_241D9B114((unint64_t *)&qword_268D4C578, (void (*)(uint64_t))sub_241D61F7C);
  swift_retain();
  uint64_t v17 = sub_241DAA760();
  swift_release();
  swift_release();
  swift_release();
  *(void *)((char *)v1 + qword_268D4D0A0) = v17;
  return swift_release();
}

void sub_241D99688()
{
}

uint64_t sub_241D996B8()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_241D99778()
{
  uint64_t v0 = sub_241DA9F20();

  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_241D99840()
{
  sub_241D99778();

  return swift_deallocClassInstance();
}

uint64_t sub_241D99870()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryDataSource();
}

uint64_t sub_241D99878()
{
  uint64_t v0 = sub_241DAA2E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DAA280();
  uint64_t v4 = sub_241DAA2D0();
  os_log_type_t v5 = sub_241DAAC30();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)unint64_t v6 = 136315138;
    uint64_t v8 = sub_241DAB1F0();
    uint64_t v11 = sub_241D48854(v8, v9, &v12);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v4, v5, "[%s] prescriptionTypeVisibilityStream completed", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v7, -1, -1);
    MEMORY[0x24563A5D0](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_241D99A50(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v6 = *(void *)(result + qword_268D4D098);
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_241DAB0A0();
      uint64_t v7 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v8 = 0;
        do
        {
          if ((v6 & 0xC000000000000001) != 0)
          {
            uint64_t v9 = MEMORY[0x245639BE0](v8, v6);
          }
          else
          {
            uint64_t v9 = *(void *)(v6 + 8 * v8 + 32);
            swift_retain();
          }
          ++v8;
          uint64_t v10 = v9;
          sub_241D99B98((uint64_t)&v10, v4, a3);
          swift_release();
        }
        while (v7 != v8);
      }
    }
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_241D99B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a3;
  uint64_t v4 = sub_241DAA2E0();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241D9B0AC(0, &qword_268D4D0B8, MEMORY[0x263F43E48]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v38 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = &v34[-v12];
  uint64_t v14 = sub_241DA9B00();
  uint64_t v15 = v14;
  uint64_t v16 = qword_268D4B6F0;
  uint64_t v17 = (void *)MEMORY[0x263F8EE78];
  if (a2 == 2) {
    uint64_t v17 = &unk_26F5CF1B0;
  }
  if (a2 == 1) {
    uint64_t v18 = &unk_26F5CF188;
  }
  else {
    uint64_t v18 = v17;
  }
  BOOL v19 = sub_241D988EC(*(unsigned __int8 *)(v14 + qword_268D4B6F0), (uint64_t)v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = (unsigned int *)MEMORY[0x263F43E40];
  if (!v19) {
    uint64_t v20 = (unsigned int *)MEMORY[0x263F43E38];
  }
  (*(void (**)(unsigned char *, void, uint64_t))(v9 + 104))(v13, *v20, v8);
  sub_241DA9B20();
  sub_241DAA280();
  swift_retain_n();
  swift_retain_n();
  uint64_t v39 = v6;
  uint64_t v21 = sub_241DAA2D0();
  os_log_type_t v22 = sub_241DAAC30();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    int v35 = v23;
    uint64_t v25 = v24;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v43 = v36;
    *(_DWORD *)uint64_t v25 = 136315650;
    uint64_t v26 = sub_241DAB1F0();
    uint64_t v42 = sub_241D48854(v26, v27, &v43);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    LOBYTE(v42) = *(unsigned char *)(v15 + v16);
    uint64_t v28 = sub_241DAA9B0();
    uint64_t v42 = sub_241D48854(v28, v29, &v43);
    sub_241DAAF10();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2080;
    sub_241DA9B10();
    uint64_t v30 = sub_241DAA9B0();
    uint64_t v42 = sub_241D48854(v30, v31, &v43);
    sub_241DAAF10();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v21, (os_log_type_t)v35, "[%s] Setting the visibility of %s data source to %s", (uint8_t *)v25, 0x20u);
    uint64_t v32 = v36;
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v32, -1, -1);
    MEMORY[0x24563A5D0](v25, -1, -1);
    swift_release();
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v40 + 8))(v39, v41);
}

char *sub_241D99FDC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_241D9B530(0, &qword_268D4D0D0);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_241D9AE18(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_241D9A0E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241D9A3B8(a1, a2, a3, a4, &qword_268D4B858, MEMORY[0x263F441F0], MEMORY[0x263F441F0], MEMORY[0x263F441F0]);
}

void *sub_241D9A11C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241D50C30(0, (unint64_t *)&qword_268D4B810, (unint64_t *)&qword_268D4C280);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      unint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241D9AF90(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_241D9A244(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241D50C30(0, &qword_268D4B740, (unint64_t *)&qword_268D4B668);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_241D9B15C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_241D9A380(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241D9A3B8(a1, a2, a3, a4, (unint64_t *)&unk_268D4C310, MEMORY[0x263F44068], MEMORY[0x263F44068], MEMORY[0x263F44068]);
}

uint64_t sub_241D9A3B8(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    BOOL v19 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_241D9B27C(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  BOOL v19 = (void *)swift_allocObject();
  size_t v20 = j__malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_241DAB070();
    __break(1u);
    return result;
  }
  void v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_241D9B2E0(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

void *sub_241D9A654(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241D9B530(0, &qword_268D4D0C8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241D9B43C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_241D9A770(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_241D9A88C(v6, a2, a3);
  return sub_241D9A7D8;
}

uint64_t (*sub_241D9A7DC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_241D9A914(v6, a2, a3);
  return sub_241D9A7D8;
}

void sub_241D9A844(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_241D9A88C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x245639BE0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_241D9A90C;
  }
  __break(1u);
  return result;
}

void sub_241D9A90C(id *a1)
{
}

uint64_t (*sub_241D9A914(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x245639BE0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_241D9A994;
  }
  __break(1u);
  return result;
}

uint64_t sub_241D9A994()
{
  return swift_release();
}

uint64_t sub_241D9A99C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_241DAB0A0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_241DAB0A0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_241D9B27C(0, &qword_268D4D0D8, (uint64_t (*)(uint64_t))sub_241D9B578, MEMORY[0x263F8D488]);
        sub_241D9B5B8();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_241D9A770(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241D9B578();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

uint64_t sub_241D9ABCC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_241DAB0A0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_241DAB0A0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_241D36CEC();
        sub_241D9B114(&qword_268D4D0C0, (void (*)(uint64_t))sub_241D36CEC);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_241D9A7DC(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241D9B0AC(0, &qword_268D4B898, MEMORY[0x263F43E58]);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

char *sub_241D9AE18(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_241DAB0F0();
  __break(1u);
  return result;
}

uint64_t sub_241D9AF00()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D9AF10()
{
  return sub_241D99878();
}

uint64_t sub_241D9AF18()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241D9AF50()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241D9AF88(uint64_t *a1)
{
  return sub_241D99A50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_241D9AF90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_241D36B4C(0, (unint64_t *)&qword_268D4C280);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

void sub_241D9B0AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource();
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F440A0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241D9B114(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241D9B15C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_241D36B4C(0, (unint64_t *)&qword_268D4B668);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

void sub_241D9B27C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241D9B2E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

uint64_t sub_241D9B43C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241DAB0F0();
  __break(1u);
  return result;
}

void sub_241D9B530(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_241DAB130();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_241D9B578()
{
  unint64_t result = qword_268D4B678;
  if (!qword_268D4B678)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4B678);
  }
  return result;
}

unint64_t sub_241D9B5B8()
{
  unint64_t result = qword_268D4D0E0;
  if (!qword_268D4D0E0)
  {
    sub_241D9B27C(255, &qword_268D4D0D8, (uint64_t (*)(uint64_t))sub_241D9B578, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4D0E0);
  }
  return result;
}

uint64_t sub_241D9B640(int a1, uint64_t a2, uint64_t a3)
{
  LODWORD(v5) = a1;
  sub_241D9B0AC(0, &qword_268D4D0B8, MEMORY[0x263F43E48]);
  uint64_t v54 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v53 = (char *)&v51 - v8;
  unint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v66 = MEMORY[0x263F8EE78];
  int64_t v10 = *(void *)(a2 + 16);
  uint64_t v57 = a3;
  int v56 = v5;
  if (v10)
  {
    unint64_t v65 = MEMORY[0x263F8EE78];
    sub_241D357A8(0, v10, 0);
    unint64_t v11 = v65;
    unint64_t v12 = (uint64_t *)(a2 + 32);
    unint64_t v13 = *(void *)(v65 + 16);
    do
    {
      uint64_t v15 = *v12++;
      uint64_t v14 = v15;
      if (v15 == 2) {
        uint64_t v16 = &unk_26F5CF058;
      }
      else {
        uint64_t v16 = (void *)v9;
      }
      if (v14 == 1) {
        uint64_t v17 = &unk_26F5CF030;
      }
      else {
        uint64_t v17 = v16;
      }
      unint64_t v65 = v11;
      unint64_t v18 = *(void *)(v11 + 24);
      int64_t v19 = v13 + 1;
      if (v13 >= v18 >> 1)
      {
        int64_t v59 = v13 + 1;
        sub_241D357A8(v18 > 1, v13 + 1, 1);
        int64_t v19 = v59;
        unint64_t v11 = v65;
      }
      *(void *)(v11 + 16) = v19;
      *(void *)(v11 + 8 * v13 + 32) = v17;
      unint64_t v13 = v19;
      --v10;
    }
    while (v10);
    unint64_t v58 = v11;
    a3 = v57;
    LOBYTE(v5) = v56;
  }
  else
  {
    int64_t v19 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v19)
    {
      unint64_t v21 = MEMORY[0x263F8EE78];
LABEL_43:
      swift_bridgeObjectRelease();
      uint64_t v48 = *(void *)(v21 + 16);
      if (v48)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v48; ++i)
        {
          unint64_t v50 = swift_bridgeObjectRetain();
          sub_241D98AB0(v50);
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return v66;
    }
    unint64_t v58 = MEMORY[0x263F8EE78];
  }
  int64_t v59 = v19;
  unint64_t v65 = v9;
  sub_241D35788(0, v19, 0);
  uint64_t v20 = 0;
  unint64_t v21 = v65;
  unint64_t v55 = v58 + 32;
  uint64_t v22 = (void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  unsigned int v52 = *MEMORY[0x263F43E38];
  while (1)
  {
    uint64_t v61 = v20;
    uint64_t v23 = *(void *)(v55 + 8 * v20);
    uint64_t v24 = *(void *)(v23 + 16);
    uint64_t v62 = v23;
    if (v24) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v31 = v9;
    if (v9 >> 62) {
      goto LABEL_33;
    }
LABEL_26:
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v32) {
      goto LABEL_27;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v39 = v9;
LABEL_38:
    unint64_t v65 = v21;
    unint64_t v5 = *(void *)(v21 + 16);
    unint64_t v45 = *(void *)(v21 + 24);
    int64_t v46 = v59;
    uint64_t v47 = v61;
    if (v5 >= v45 >> 1)
    {
      sub_241D35788(v45 > 1, v5 + 1, 1);
      int64_t v46 = v59;
      unint64_t v21 = v65;
    }
    uint64_t v20 = v47 + 1;
    *(void *)(v21 + 16) = v5 + 1;
    *(void *)(v21 + 8 * v5 + 32) = v39;
    a3 = v57;
    LOBYTE(v5) = v56;
    if (v20 == v46) {
      goto LABEL_43;
    }
  }
  unint64_t v64 = v9;
  swift_bridgeObjectRetain();
  sub_241DAB040();
  uint64_t v25 = (unsigned __int8 *)(v23 + 32);
  do
  {
    int v28 = *v25++;
    int v27 = v28;
    if (v28 == 4)
    {
      uint64_t v30 = *(void *)(a3 + 48);
      type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldPupillaryDistanceDataSource();
      *(void *)(swift_allocObject() + qword_268D4C950) = MEMORY[0x263F8EE88];
      swift_retain_n();
      sub_241D2EB88(4, v5 & 1, v30);
      swift_retain();
      sub_241D7198C(2);
      sub_241D7198C(1);
    }
    else
    {
      if (v27 != 6)
      {
        uint64_t v26 = *(void *)(a3 + 48);
        type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource();
        swift_allocObject();
        swift_retain();
        sub_241D2EB88(v27, v5 & 1, v26);
        goto LABEL_19;
      }
      uint64_t v29 = *(void *)(a3 + 48);
      type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldPrismDataSource();
      *(void *)(swift_allocObject() + qword_268D4BE88) = MEMORY[0x263F8EE88];
      swift_retain_n();
      sub_241D2EB88(6, v5 & 1, v29);
      swift_retain();
      sub_241D4AE98(2);
      sub_241D4AE98(1);
    }
    swift_release();
    swift_release();
LABEL_19:
    sub_241DAB020();
    sub_241DAB050();
    sub_241DAB060();
    sub_241DAB030();
    --v24;
  }
  while (v24);
  unint64_t v31 = v64;
  unint64_t v9 = MEMORY[0x263F8EE78];
  if (!(v64 >> 62)) {
    goto LABEL_26;
  }
LABEL_33:
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_241DAB0A0();
  swift_bridgeObjectRelease();
  if (!v32) {
    goto LABEL_34;
  }
LABEL_27:
  unint64_t v64 = v9;
  uint64_t result = sub_241DAB040();
  if ((v32 & 0x8000000000000000) == 0)
  {
    unint64_t v60 = v21;
    unint64_t v63 = v31;
    if ((v31 & 0xC000000000000001) != 0)
    {
      uint64_t v34 = 0;
      uint64_t v36 = v53;
      uint64_t v35 = v54;
      uint64_t v37 = v52;
      do
      {
        uint64_t v38 = v34 + 1;
        MEMORY[0x245639BE0]();
        (*v22)(v36, v37, v35);
        sub_241D9B0AC(0, &qword_268D4B898, MEMORY[0x263F43E58]);
        swift_allocObject();
        sub_241DA9B30();
        sub_241DAB020();
        sub_241DAB050();
        sub_241DAB060();
        sub_241DAB030();
        uint64_t v34 = v38;
      }
      while (v32 != v38);
    }
    else
    {
      unint64_t v40 = v31 + 32;
      uint64_t v41 = *v22;
      uint64_t v42 = v53;
      uint64_t v43 = v54;
      uint64_t v44 = v52;
      do
      {
        v40 += 8;
        v41(v42, v44, v43);
        sub_241D9B0AC(0, &qword_268D4B898, MEMORY[0x263F43E58]);
        swift_allocObject();
        swift_retain();
        sub_241DA9B30();
        sub_241DAB020();
        sub_241DAB050();
        sub_241DAB060();
        sub_241DAB030();
        --v32;
      }
      while (v32);
    }
    unint64_t v39 = v64;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v9 = MEMORY[0x263F8EE78];
    unint64_t v21 = v60;
    goto LABEL_38;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionAppClipCodeImageCell(uint64_t a1)
{
  return sub_241D2AC88(a1, (uint64_t *)&unk_268D4D140);
}

uint64_t sub_241D9BCE4()
{
  return swift_initClassMetadata2();
}

id sub_241D9BD50()
{
  uint64_t v1 = qword_268D4D110;
  uint64_t v2 = *(void **)(v0 + qword_268D4D110);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_268D4D110);
  }
  else
  {
    id v4 = sub_241D9BDB4(v0);
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_241D9BDB4(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82D60]), sel_init);
  objc_msgSend(v2, sel_setTextAlignment_, 4);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setEditable_, 0);
  id v3 = self;
  id v4 = v2;
  id v5 = objc_msgSend(v3, sel_clearColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  objc_msgSend(v4, sel_setScrollEnabled_, 0);
  id v6 = objc_msgSend(v4, sel_textContainer);
  objc_msgSend(v6, sel_setLineFragmentPadding_, 0.0);

  sub_241D9D8FC(0, (unint64_t *)&qword_268D4D1D0, (uint64_t (*)(uint64_t))sub_241D9DAB0, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241DB2C80;
  uint64_t v8 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 32) = *MEMORY[0x263F81500];
  id v9 = v8;
  id v10 = objc_msgSend(v3, sel_linkColor);
  *(void *)(inited + 64) = sub_241D28BF4(0, &qword_268D4D1E0);
  *(void *)(inited + 40) = v10;
  sub_241D75AEC(inited);
  type metadata accessor for Key(0);
  sub_241D9DB1C();
  unint64_t v11 = (void *)sub_241DAA910();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setLinkTextAttributes_, v11);

  objc_msgSend(v4, sel__setInteractiveTextSelectionDisabled_, 1);
  objc_msgSend(v4, sel_setDelegate_, a1);
  return v4;
}

char *sub_241D9C010(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[qword_268D4D100];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = qword_268D4D108;
  id v11 = objc_allocWithZone(MEMORY[0x263F82828]);
  unint64_t v12 = v4;
  id v13 = objc_msgSend(v11, sel_init);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v13, sel_setContentMode_, 1);
  *(void *)&v4[v10] = v13;
  *(void *)&v12[qword_268D4D110] = 0;
  *(void *)&v12[qword_268D4D118] = 0;
  *(void *)&v12[qword_268D4D120] = 0;
  *(void *)&v12[qword_268D4D128] = 0;
  *(void *)&v12[qword_268D4D130] = 0;
  *(void *)&v12[qword_268D4D138] = 0;

  v19.receiver = v12;
  v19.super_class = (Class)type metadata accessor for VisionPrescriptionAppClipCodeImageCell(0);
  uint64_t v14 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v15 = *(void *)&v14[qword_268D4D108];
  uint64_t v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  id v17 = sub_241D9BD50();
  objc_msgSend(v16, sel_addSubview_, v17);

  sub_241D9C1E4();
  return v16;
}

char *sub_241D9C198(double a1, double a2, double a3, double a4)
{
  return sub_241D9C010(a1, a2, a3, a4);
}

void sub_241D9C1BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_241D9D7E8();
}

void sub_241D9C1E4()
{
  uint64_t v1 = v0;
  id v37 = self;
  sub_241D2B5F0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241DB4810;
  id v3 = *(void **)&v0[qword_268D4D108];
  id v4 = objc_msgSend(v3, sel_topAnchor);
  id v5 = objc_msgSend(v1, sel_topAnchor);
  id v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, 16.0);

  *(void *)(v2 + 32) = v6;
  id v7 = objc_msgSend(v3, sel_leadingAnchor);
  id v8 = objc_msgSend(v1, sel_leadingAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 16.0);

  *(void *)(v2 + 40) = v9;
  id v10 = objc_msgSend(v1, sel_trailingAnchor);
  id v11 = objc_msgSend(v3, sel_trailingAnchor);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, 16.0);

  *(void *)(v2 + 48) = v12;
  id v13 = sub_241D9BD50();
  id v14 = objc_msgSend(v13, sel_topAnchor);

  id v15 = objc_msgSend(v3, sel_bottomAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v2 + 56) = v16;
  id v17 = sub_241D9BD50();
  id v18 = objc_msgSend(v17, sel_leadingAnchor);

  id v19 = objc_msgSend(v1, sel_leadingAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 16.0);

  *(void *)(v2 + 64) = v20;
  id v21 = objc_msgSend(v1, sel_trailingAnchor);
  id v22 = sub_241D9BD50();
  id v23 = objc_msgSend(v22, sel_trailingAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, 16.0);
  *(void *)(v2 + 72) = v24;
  id v25 = objc_msgSend(v1, sel_bottomAnchor);
  id v26 = sub_241D9BD50();
  id v27 = objc_msgSend(v26, sel_bottomAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, 16.0);
  *(void *)(v2 + 80) = v28;
  sub_241DAAB10();
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
  uint64_t v29 = (void *)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v37, sel_activateConstraints_, v29);

  id v30 = objc_msgSend(v3, sel_heightAnchor);
  id v31 = objc_msgSend(v30, sel_constraintEqualToConstant_, 0.0);

  uint64_t v32 = *(void **)&v1[qword_268D4D128];
  *(void *)&v1[qword_268D4D128] = v31;

  id v33 = sub_241D9BD50();
  id v34 = objc_msgSend(v33, sel_heightAnchor);

  id v35 = objc_msgSend(v34, sel_constraintEqualToConstant_, 0.0);
  uint64_t v36 = *(void **)&v1[qword_268D4D138];
  *(void *)&v1[qword_268D4D138] = v35;
}

void sub_241D9C644()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_241DAA2E0();
  uint64_t v71 = *(void *)(v1 - 8);
  uint64_t v72 = v1;
  MEMORY[0x270FA5388](v1);
  id v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241DA95A0();
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v66 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241DA95B0();
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241DA95D0();
  MEMORY[0x270FA5388](v9 - 8);
  id v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241D9D8FC(0, (unint64_t *)&qword_268D4CBE0, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  id v13 = (char *)&v64 - v12;
  sub_241D9D8FC(0, &qword_268D4D1B8, type metadata accessor for VisionPrescriptionAppClipCodeItem, v10);
  MEMORY[0x270FA5388](v14 - 8);
  id v16 = (char *)&v64 - v15;
  uint64_t v17 = type metadata accessor for VisionPrescriptionAppClipCodeItem(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v70 = (uint64_t)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = v0;
  uint64_t v21 = (uint64_t)&v0[qword_268D4D100];
  swift_beginAccess();
  sub_241D2AED8(v21, (uint64_t)v74);
  if (!v74[3])
  {
    sub_241D9D980((uint64_t)v74, (unint64_t *)&qword_268D4BC30, (uint64_t (*)(uint64_t))sub_241D2E674);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_13;
  }
  sub_241D2E674();
  int v22 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, v22 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_13:
    sub_241D9D980((uint64_t)v16, &qword_268D4D1B8, type metadata accessor for VisionPrescriptionAppClipCodeItem);
    sub_241DAA2B0();
    uint64_t v48 = v0;
    uint64_t v49 = sub_241DAA2D0();
    os_log_type_t v50 = sub_241DAAC30();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v73 = v52;
      *(_DWORD *)uint64_t v51 = 136315394;
      uint64_t v53 = sub_241DAB1F0();
      v74[0] = sub_241D48854(v53, v54, &v73);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2080;
      sub_241D2AED8(v21, (uint64_t)v74);
      sub_241D9D8FC(0, (unint64_t *)&qword_268D4BC30, (uint64_t (*)(uint64_t))sub_241D2E674, MEMORY[0x263F8D8F0]);
      uint64_t v55 = sub_241DAA9B0();
      v74[0] = sub_241D48854(v55, v56, &v73);
      sub_241DAAF10();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241D1C000, v49, v50, "[%s] Item was not of type VisionPrescriptionAppClipCodeItem. Item: %s", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v52, -1, -1);
      MEMORY[0x24563A5D0](v51, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v3, v72);
    objc_msgSend(*(id *)&v48[qword_268D4D108], sel_setImage_, 0);
    return;
  }
  uint64_t v23 = v70;
  sub_241D9D9F0((uint64_t)v16, v70);
  id v24 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v24, sel_userInterfaceStyle);

  id v25 = *(void **)(v23 + *(int *)(v17 + 24));
  type metadata accessor for AppClipCodeGenerator();
  id v26 = v25;
  uint64_t v27 = sub_241D21210(v26);
  if (v28 >> 60 == 15)
  {
LABEL_18:

    goto LABEL_19;
  }
  uint64_t v29 = v27;
  unint64_t v30 = v28;
  id v31 = (void *)sub_241DA96E0();
  uint64_t v32 = (void *)CGSVGDocumentCreateFromData();

  if (!v32)
  {
    sub_241D48CD8(v29, v30);
    goto LABEL_18;
  }
  id v33 = objc_msgSend(self, sel__imageWithCGSVGDocument_scale_orientation_, v32, 0, 1.0);

  sub_241D48CD8(v29, v30);
  id v34 = v20;
  if (!v33)
  {
LABEL_19:
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
    sub_241D28BF4(0, (unint64_t *)&unk_268D4D1C0);
    uint64_t v57 = sub_241DA96C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v13, 1, 1, v57);
    (*(void (**)(char *, void, uint64_t))(v64 + 104))(v8, *MEMORY[0x263F06760], v65);
    (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, *MEMORY[0x263F06748], v68);
    sub_241DA95C0();
    unint64_t v58 = (void *)sub_241DAAD40();
    uint64_t v59 = *MEMORY[0x263F814F0];
    sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
    unint64_t v60 = (void *)sub_241DAADA0();
    objc_msgSend(v58, sel_addAttribute_value_range_, v59, v60, 0, objc_msgSend(v58, sel_length));

    uint64_t v61 = *MEMORY[0x263F81500];
    id v62 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v58, sel_addAttribute_value_range_, v61, v62, 0, objc_msgSend(v58, sel_length));

    id v63 = sub_241D9BD50();
    objc_msgSend(v63, sel_setAttributedText_, v58);

    sub_241D9D1A0();
    goto LABEL_22;
  }
  id v35 = *(void **)&v20[qword_268D4D108];
  objc_msgSend(v35, sel_setImage_, v33);
  id v36 = objc_msgSend(v35, sel_image);
  if (!v36)
  {
LABEL_11:

LABEL_22:
    sub_241D9DA54(v70);
    return;
  }
  id v37 = v36;
  objc_msgSend(v36, sel_size);
  double v39 = v38;
  double v41 = v40;

  if (v39 <= 0.0)
  {
    sub_241D9DA54(v70);
  }
  else
  {
    id v42 = objc_msgSend(v20, sel_heightAnchor);
    id v43 = objc_msgSend(v20, sel_widthAnchor);
    id v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_multiplier_, v43, v41 / v39);

    objc_msgSend(v44, sel_setActive_, 1);
    unint64_t v45 = *(void **)&v34[qword_268D4D128];
    if (v45)
    {
      objc_msgSend(v45, sel_setActive_, 0);
      int64_t v46 = *(void **)&v34[qword_268D4D138];
      if (v46)
      {
        objc_msgSend(v46, sel_setActive_, 1);
        objc_msgSend(*(id *)&v34[qword_268D4D130], sel_setActive_, 1);
        id v47 = sub_241D9BD50();
        objc_msgSend(v47, sel_setHidden_, 1);

        objc_msgSend(v35, sel_setHidden_, 0);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_241D9D1A0()
{
  uint64_t v1 = *(void **)(v0 + qword_268D4D130);
  if (v1) {
    objc_msgSend(v1, sel_setActive_, 0);
  }
  id result = *(id *)(v0 + qword_268D4D128);
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(result, sel_setActive_, 1);
  id result = *(id *)(v0 + qword_268D4D138);
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  objc_msgSend(result, sel_setActive_, 0);
  id v3 = sub_241D9BD50();
  objc_msgSend(v3, sel_setHidden_, 0);

  uint64_t v4 = *(void **)(v0 + qword_268D4D108);

  return objc_msgSend(v4, sel_setHidden_, 1);
}

void sub_241D9D264(void *a1, uint64_t a2, void *a3)
{
  v8.receiver = a1;
  v8.super_class = (Class)type metadata accessor for VisionPrescriptionAppClipCodeImageCell(0);
  id v4 = v8.receiver;
  id v5 = a3;
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, v5);
  id v6 = objc_msgSend(v4, sel_traitCollection, v8.receiver, v8.super_class);
  id v7 = objc_msgSend(v6, sel_userInterfaceStyle);

  if (!v5 || v7 != objc_msgSend(v5, sel_userInterfaceStyle)) {
    sub_241D9C644();
  }
}

uint64_t sub_241D9D328(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_241DA96C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  objc_super v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DA9690();
  id v9 = a3;
  id v10 = a1;
  swift_bridgeObjectRetain();
  sub_241DAA9F0();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return 0;
}

void sub_241D9D44C()
{
  sub_241D9D980(v0 + qword_268D4D100, (unint64_t *)&qword_268D4BC30, (uint64_t (*)(uint64_t))sub_241D2E674);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v1 = *(void **)(v0 + qword_268D4D138);
}

id sub_241D9D508()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionAppClipCodeImageCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_241D9D540(uint64_t a1)
{
  sub_241D9D980(a1 + qword_268D4D100, (unint64_t *)&qword_268D4BC30, (uint64_t (*)(uint64_t))sub_241D2E674);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  objc_super v2 = *(void **)(a1 + qword_268D4D138);
}

uint64_t sub_241D9D608()
{
  return type metadata accessor for VisionPrescriptionAppClipCodeImageCell(0);
}

uint64_t sub_241D9D610@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268D4D100;
  swift_beginAccess();
  return sub_241D2AED8(v3, a1);
}

uint64_t sub_241D9D664(uint64_t a1)
{
  uint64_t v3 = v1 + qword_268D4D100;
  swift_beginAccess();
  sub_241D2ADC0(a1, v3);
  swift_endAccess();
  sub_241D9C644();
  return sub_241D9D980(a1, (unint64_t *)&qword_268D4BC30, (uint64_t (*)(uint64_t))sub_241D2E674);
}

void (*sub_241D9D6F0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241D9D750;
}

void sub_241D9D750(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_241D9C644();
  }
}

unint64_t sub_241D9D784()
{
  return 0xD000000000000022;
}

void sub_241D9D7E8()
{
  uint64_t v1 = &v0[qword_268D4D100];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  uint64_t v2 = qword_268D4D108;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setContentMode_, 1);
  *(void *)&v0[v2] = v3;
  *(void *)&v0[qword_268D4D110] = 0;
  *(void *)&v0[qword_268D4D118] = 0;
  *(void *)&v0[qword_268D4D120] = 0;
  *(void *)&v0[qword_268D4D128] = 0;
  *(void *)&v0[qword_268D4D130] = 0;
  *(void *)&v0[qword_268D4D138] = 0;

  sub_241DAB080();
  __break(1u);
}

void sub_241D9D8FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for VisionPrescriptionAppClipCodeItem(uint64_t a1)
{
  return sub_241D2AC88(a1, qword_268D4D1E8);
}

uint64_t sub_241D9D980(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241D9D8FC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241D9D9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisionPrescriptionAppClipCodeItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241D9DA54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VisionPrescriptionAppClipCodeItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241D9DAB0()
{
  if (!qword_268D4CA00)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D4CA00);
    }
  }
}

unint64_t sub_241D9DB1C()
{
  unint64_t result = qword_268D4B4F0;
  if (!qword_268D4B4F0)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D4B4F0);
  }
  return result;
}

uint64_t *sub_241D9DB74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241DA97B0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + v13) = (uint64_t)v14;
    id v15 = v14;
  }
  return v4;
}

void sub_241D9DC7C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_241DA97B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = *(void **)(a1 + *(int *)(a2 + 24));
}

void *sub_241D9DD08(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241DA97B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v13;
  id v14 = v13;
  return a1;
}

void *sub_241D9DDC0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241DA97B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = v11;
  id v13 = v11;

  return a1;
}

_OWORD *sub_241D9DE7C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241DA97B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_241D9DF14(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241DA97B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = *(void **)((char *)a1 + v11);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);

  return a1;
}

uint64_t sub_241D9DFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241D9DFD0);
}

uint64_t sub_241D9DFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_241DA97B0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241D9E080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241D9E094);
}

uint64_t sub_241D9E094(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_241DA97B0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_241D9E13C()
{
  uint64_t result = sub_241DA97B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id VisionPrescriptionAddRecordConfirmationViewController.__allocating_init(visionPrescription:healthStore:pinnedContentManager:)(void *a1, void *a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  id v8 = sub_241DA5154(a1, a2, a3);

  return v8;
}

id sub_241D9E2F8()
{
  return sub_241DA32A8(type metadata accessor for VisionPrescriptionPreviewTableViewCell);
}

id VisionPrescriptionAddRecordConfirmationViewController.init(visionPrescription:healthStore:pinnedContentManager:)(void *a1, void *a2, uint64_t a3)
{
  id v5 = sub_241DA5154(a1, a2, a3);

  return v5;
}

Swift::Void __swiftcall VisionPrescriptionAddRecordConfirmationViewController.viewDidLoad()()
{
  v35.receiver = v0;
  v35.super_class = (Class)type metadata accessor for VisionPrescriptionAddRecordConfirmationViewController();
  objc_msgSendSuper2(&v35, sel_viewDidLoad);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C78]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setTableView_, v1);

  id v2 = objc_msgSend(v0, sel_tableView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v3 = v2;
  objc_msgSend(v2, sel_setAllowsSelection_, 0);

  id v4 = objc_msgSend(v0, sel_tableView);
  if (!v4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v5 = v4;
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_systemBackgroundColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v7);

  id v8 = objc_msgSend(v0, sel_tableView);
  if (!v8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  objc_msgSend(v8, sel_setSeparatorStyle_, 0);

  id v10 = objc_msgSend(v0, sel_tableView);
  if (!v10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v11 = v10;
  objc_msgSend(v10, sel_setDataSource_, v0);

  id v12 = objc_msgSend(v0, sel_tableView);
  if (!v12)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v13 = v12;
  objc_msgSend(v12, sel_setDelegate_, v0);

  id v14 = objc_msgSend(v0, sel_tableView);
  if (!v14)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v15 = v14;
  type metadata accessor for VisionPrescriptionPreviewTableViewCell();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v17 = objc_msgSend(ObjCClassFromMetadata, sel_defaultReuseIdentifier);
  if (!v17)
  {
    sub_241DAA990();
    id v17 = (id)sub_241DAA950();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v15, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v17);

  id v18 = objc_msgSend(v0, sel_headerView);
  objc_msgSend(v18, sel_setAllowFullWidthIcon_, 1);

  id v19 = objc_msgSend(v0, sel_headerView);
  LODWORD(v20) = 1036831949;
  objc_msgSend(v19, sel_setTitleHyphenationFactor_, v20);

  id v21 = objc_msgSend(v0, sel_navigationController);
  objc_msgSend(v21, sel_setNavigationBarHidden_, 1);

  id v22 = objc_msgSend(v0, sel_navigationController);
  if (v22)
  {
    uint64_t v23 = v22;
    objc_msgSend(v22, sel_setModalInPresentation_, 1);
  }
  id v24 = objc_msgSend(self, sel_boldButton);
  id v25 = objc_msgSend(v6, sel_systemBlueColor);
  objc_msgSend(v24, sel_setTintColor_, v25);

  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  id v26 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setTitle_forState_, v26, 0, 0xE000000000000000);

  objc_msgSend(v24, sel_addTarget_action_forControlEvents_, v0, sel_addRecord, 64);
  id v27 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v27, sel_addButton_, v24);

  unint64_t v28 = *(void **)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_addToHealthButton];
  *(void *)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_addToHealthButton] = v24;
  id v29 = v24;

  id v30 = objc_msgSend(self, sel_linkButton);
  sub_241DA95E0();
  id v31 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setTitle_forState_, v31, 0, 0xE000000000000000);

  objc_msgSend(v30, sel_addTarget_action_forControlEvents_, v0, sel_dismissPreview, 64);
  id v32 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v32, sel_addButton_, v30);

  id v33 = objc_msgSend(v0, sel_tableView);
  if (v33)
  {
    id v34 = v33;
    objc_msgSend(v33, sel_reloadData);

    return;
  }
LABEL_21:
  __break(1u);
}

Swift::Void __swiftcall VisionPrescriptionAddRecordConfirmationViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for VisionPrescriptionAddRecordConfirmationViewController();
  objc_msgSendSuper2(&v5, sel_viewWillAppear_, a1);
  id v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    id v4 = v3;
    objc_msgSend(v3, sel_setNavigationBarHidden_, 1);
  }
}

void sub_241D9EA74()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_addToHealthButton];
  if (v1)
  {
    objc_msgSend(v1, sel_showsBusyIndicator);
    id v2 = *(void **)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore];
    if (v2)
    {
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = v0;
      v7[4] = sub_241DA5C1C;
      v7[5] = v3;
      v7[0] = MEMORY[0x263EF8330];
      v7[1] = 1107296256;
      v7[2] = sub_241D344C0;
      v7[3] = &unk_26F5D1BA8;
      id v4 = _Block_copy(v7);
      id v5 = v2;
      uint64_t v6 = v0;
      swift_release();
      objc_msgSend(v5, sel_hk_fetchExistingDemographicInformationWithCompletion_, v4);
      _Block_release(v4);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_241D9EB88(void *a1, char *a2)
{
  id v4 = *(id *)&a2[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_visionPrescription];
  id v5 = objc_msgSend(a1, sel_firstName);
  uint64_t v6 = sub_241DAA990();
  unint64_t v8 = v7;

  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  id v10 = a2;
  sub_241DA0EA4(v4, v6, v8, (uint64_t)sub_241DA5C24, v9);

  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_241D9EC68(char a1, uint64_t a2)
{
  if (a1)
  {
    id v2 = *(void **)(a2
                  + OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_addToHealthButton);
    if (v2)
    {
      objc_msgSend(v2, sel_hidesBusyIndicator);
      sub_241D9F080();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    id v3 = objc_retain(*(id *)(a2
                           + OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_visionPrescription));
    sub_241D9FF70(v3);
  }
}

void sub_241D9ED3C()
{
  id v1 = v0;
  uint64_t v2 = sub_241DAA860();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
  *id v5 = sub_241DAAD00();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  char v6 = sub_241DAA870();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    id v7 = objc_msgSend(v1, sel_presentingViewController);
    if (v7)
    {
      unint64_t v8 = v7;
      objc_msgSend(v7, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_241D9EEE0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241DAA860();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
  uint64_t *v7 = sub_241DAAD00();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  char v8 = sub_241DAA870();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v9 = *(void **)&v2[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore];
  if (!v9)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v10 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionRecordAddedViewController());
  id v11 = sub_241D3C398(v9, a1);
  id v12 = objc_msgSend(v2, sel_navigationController);
  if (v12)
  {
    id v13 = v12;
    objc_msgSend(v12, sel_pushViewController_animated_, v11, 1);
  }
}

void sub_241D9F080()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_241DAA860();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (void *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
  *uint64_t v6 = sub_241DAAD00();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F0E0], v3);
  char v7 = sub_241DAA870();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (qword_268D4B2F0 != -1) {
LABEL_5:
  }
    swift_once();
  sub_241DA95E0();
  sub_241DA95E0();
  char v8 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v8, v9, 1);

  sub_241DA95E0();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = ObjectType;
  id v12 = v1;
  id v13 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_241DA5BDC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_241D344C0;
  aBlock[3] = &unk_26F5D1B58;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  id v15 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v13, 0, v14);
  _Block_release(v14);

  objc_msgSend(v10, sel_addAction_, v15);
  objc_msgSend(v12, sel_presentViewController_animated_completion_, v10, 1, 0);
}

void sub_241D9F49C(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_241DAA2E0();
  MEMORY[0x270FA5388](v3);
  id v4 = objc_msgSend(a2, sel_presentingViewController);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
  char v8 = (void *)sub_241D9F7DC();
  id v6 = objc_msgSend(a2, sel_navigationController);
  if (v6)
  {
    char v7 = v6;
    objc_msgSend(v6, sel_pushViewController_animated_, v8, 1);
  }
}

uint64_t sub_241D9F7DC()
{
  sub_241DA5B10(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_241DAA030();
  uint64_t v4 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_241DA9E30();
  uint64_t v7 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241DA9E20();
  uint64_t result = sub_241DAAC70();
  uint64_t v11 = *(void **)(v0
                 + OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore);
  if (v11)
  {
    id v12 = objc_msgSend(v11, sel_profileIdentifier);
    uint64_t v13 = sub_241DA9A20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 1, 1, v13);
    sub_241DA9AF0();

    sub_241DA5B44((uint64_t)v3, (uint64_t (*)(void))sub_241DA5B10);
    sub_241D3A710(v0+ OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_pinnedContentManager, (uint64_t)v18);
    sub_241DAACA0();
    sub_241DAA010();
    id v14 = objc_msgSend(self, sel_visionPrescriptionType);
    uint64_t v15 = sub_241DA9E10();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241D9FABC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241DAA860();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (void *)((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
  uint64_t *v7 = sub_241DAAD00();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  char v8 = sub_241DAA870();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    if (qword_268D4B2F0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  sub_241DA95E0();
  v18[0] = sub_241DA95E0();
  v18[1] = v9;
  id v10 = objc_msgSend(self, sel_sharedBehavior);
  if (v10)
  {
    uint64_t v11 = v10;
    unsigned int v12 = objc_msgSend(v10, sel_isAppleInternalInstall);

    if (v12)
    {
      sub_241DAAA50();
      sub_241D64024(a1);
      swift_bridgeObjectRelease();
      sub_241DAAA50();
      swift_bridgeObjectRelease();
    }
    uint64_t v13 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    id v14 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v13, v14, 1);

    sub_241DA95E0();
    uint64_t v16 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v16, 0, 0);

    objc_msgSend(v15, sel_addAction_, v17);
    objc_msgSend(v2, sel_presentViewController_animated_completion_, v15, 1, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_241D9FF70(void *a1)
{
  objc_super v35 = a1;
  uint64_t ObjectType = swift_getObjectType();
  sub_241DA59C0(0, &qword_268D4BD18, (uint64_t (*)(uint64_t))sub_241D219B0, MEMORY[0x263EFDE58]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v34 - v5;
  sub_241D219B0();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v36 = v1;
  id v14 = *(void **)(v1
                 + OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore);
  if (v14)
  {
    id v15 = self;
    id v34 = v14;
    id v16 = objc_msgSend(v15, sel_defaultManager);
    id v17 = (objc_class *)type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler();
    id v18 = (char *)objc_allocWithZone(v17);
    id v19 = &v18[OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler__selectedImageURL];
    uint64_t v20 = sub_241DA96C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
    sub_241D43B04((uint64_t)v13, (uint64_t)v10);
    id v21 = v18;
    sub_241DAA690();
    sub_241DA5B44((uint64_t)v13, (uint64_t (*)(void))sub_241D219B0);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v19, v6, v3);
    *(void *)&v21[OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler_fileManager] = v16;
    id v22 = v16;

    v38.receiver = v21;
    v38.super_class = v17;
    id v23 = objc_msgSendSuper2(&v38, sel_init);

    type metadata accessor for VisionPrescriptionManualDataEntryManager();
    id v24 = (void *)swift_allocObject();
    v24[8] = 0;
    id v25 = v34;
    id v26 = v35;
    v24[2] = v34;
    v24[3] = 0;
    uint64_t v27 = MEMORY[0x263F8EE78];
    v24[4] = v26;
    v24[5] = v27;
    type metadata accessor for VisionPrescriptionManualDataEntryContext();
    swift_allocObject();
    id v28 = v25;
    id v29 = v26;
    id v30 = sub_241D6E880(v26, 2, v28);

    v24[6] = v30;
    void v24[7] = v23;
    uint64_t v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v32 = (void *)swift_allocObject();
    v32[2] = v31;
    v32[3] = v29;
    v32[4] = ObjectType;
    id v33 = (char *)v29;
    swift_retain();
    sub_241D7BFB0(v33, (void (*)(uint64_t))sub_241DA5A9C, (uint64_t)v32);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241DA0318(int a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v51 = a4;
  uint64_t v49 = a3;
  uint64_t v48 = sub_241DAA830();
  uint64_t v6 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241DAA850();
  uint64_t v50 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241DAA2E0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x24563A650](a2 + 16);
  if (result)
  {
    id v17 = (void *)result;
    char v18 = a1;
    uint64_t v46 = v9;
    uint64_t v47 = v6;
    if (a1 == 6)
    {
      LODWORD(v45) = a1;
      id v19 = *(void **)(result
                     + OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore);
      if (!v19)
      {
        __break(1u);
        return result;
      }
      uint64_t v20 = swift_allocObject();
      uint64_t v21 = v51;
      *(void *)(v20 + 16) = v51;
      uint64_t v57 = sub_241DA5AB8;
      uint64_t v58 = v20;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v54 = 1107296256;
      uint64_t v55 = sub_241D37888;
      unint64_t v56 = &unk_26F5D1AB8;
      id v22 = _Block_copy(&aBlock);
      id v23 = v19;
      swift_release();
      objc_msgSend(v23, sel_forceCloudSyncWithOptions_completion_, 2, v22);
      _Block_release(v22);

      id v24 = v49;
      uint64_t v25 = v50;
      char v18 = v45;
    }
    else
    {
      sub_241DAA2A0();
      id v26 = sub_241DAA2D0();
      os_log_type_t v27 = sub_241DAAC10();
      int v28 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v29 = swift_slowAlloc();
        int v44 = v28;
        uint64_t v30 = v29;
        uint64_t v45 = swift_slowAlloc();
        uint64_t aBlock = v45;
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v31 = sub_241DAB1F0();
        os_log_t v43 = v26;
        uint64_t v52 = sub_241D48854(v31, v32, &aBlock);
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        LOBYTE(v52) = v18;
        uint64_t v33 = sub_241DAA9B0();
        uint64_t v52 = sub_241D48854(v33, v34, &aBlock);
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        os_log_t v35 = v43;
        _os_log_impl(&dword_241D1C000, v43, (os_log_type_t)v44, "[%s] Failed to save prescription: %s)", (uint8_t *)v30, 0x16u);
        uint64_t v36 = v45;
        swift_arrayDestroy();
        MEMORY[0x24563A5D0](v36, -1, -1);
        MEMORY[0x24563A5D0](v30, -1, -1);

        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        uint64_t v25 = v50;
        uint64_t v21 = v51;
        id v24 = v49;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        id v24 = v49;
        uint64_t v25 = v50;
        uint64_t v21 = v51;
      }
    }
    sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
    id v37 = (void *)sub_241DAAD00();
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v17;
    *(unsigned char *)(v38 + 24) = v18;
    *(void *)(v38 + 32) = v24;
    *(void *)(v38 + 40) = v21;
    uint64_t v57 = sub_241DA5B00;
    uint64_t v58 = v38;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v54 = 1107296256;
    uint64_t v55 = sub_241D3A278;
    unint64_t v56 = &unk_26F5D1B08;
    double v39 = _Block_copy(&aBlock);
    id v40 = v17;
    id v41 = v24;
    swift_release();
    sub_241DAA840();
    uint64_t aBlock = MEMORY[0x263F8EE78];
    sub_241D83064();
    sub_241DA59C0(0, (unint64_t *)&qword_268D4BC50, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_241D3A670();
    uint64_t v42 = v48;
    sub_241DAAF60();
    MEMORY[0x245639900](0, v11, v8, v39);
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v42);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v46);
  }
  return result;
}

uint64_t sub_241DA0934(char a1, void *a2)
{
  v24[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_241DAA2E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_241DAA2A0();
    id v9 = a2;
    id v10 = a2;
    uint64_t v11 = sub_241DAA2D0();
    os_log_type_t v12 = sub_241DAAC10();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v24[0] = v22;
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v14 = sub_241DAB1F0();
      uint64_t v23 = sub_241D48854(v14, v15, v24);
      sub_241DAAF10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2112;
      if (a2)
      {
        id v16 = a2;
        uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v23 = v17;
        sub_241DAAF10();
      }
      else
      {
        uint64_t v23 = 0;
        sub_241DAAF10();
        uint64_t v17 = 0;
      }
      char v18 = v21;
      void *v21 = v17;

      _os_log_impl(&dword_241D1C000, v11, v12, "[%s] Failed to force cloud push: %@)", (uint8_t *)v13, 0x16u);
      sub_241D28890(0, (unint64_t *)&qword_268D4B5E8, (unint64_t *)&qword_268D4D3D0);
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v18, -1, -1);
      uint64_t v19 = v22;
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v19, -1, -1);
      MEMORY[0x24563A5D0](v13, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

void sub_241DA0C2C(uint64_t a1, char a2, void *a3)
{
  uint64_t v6 = sub_241DAA2E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(void **)(a1
                 + OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_addToHealthButton);
  if (v10)
  {
    objc_msgSend(v10, sel_hidesBusyIndicator);
    if (a2 == 6)
    {
      sub_241D9EEE0(a3);
    }
    else
    {
      sub_241DAA2A0();
      uint64_t v11 = sub_241DAA2D0();
      os_log_type_t v12 = sub_241DAAC10();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        uint64_t v22 = v20;
        *(_DWORD *)uint64_t v13 = 136315394;
        uint64_t v14 = sub_241DAB1F0();
        uint64_t v21 = sub_241D48854(v14, v15, &v22);
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2080;
        LOBYTE(v21) = a2;
        uint64_t v16 = sub_241DAA9B0();
        uint64_t v21 = sub_241D48854(v16, v17, &v22);
        sub_241DAAF10();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241D1C000, v11, v12, "[%s] Failed to save VRX: %s)", (uint8_t *)v13, 0x16u);
        uint64_t v18 = v20;
        swift_arrayDestroy();
        MEMORY[0x24563A5D0](v18, -1, -1);
        MEMORY[0x24563A5D0](v13, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_241D9FABC(a2);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_241DA0EA4(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v67 = a4;
  uint64_t v68 = a5;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = sub_241DAA2E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v72 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v63 - v15;
  sub_241DAA2A0();
  swift_bridgeObjectRetain_n();
  unint64_t v17 = sub_241DAA2D0();
  os_log_type_t v18 = sub_241DAAC00();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v70 = v11;
  uint64_t v71 = v12;
  uint64_t v69 = ObjectType;
  uint64_t v66 = a2;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v65 = a1;
    uint64_t v21 = v20;
    uint64_t v63 = swift_slowAlloc();
    *(void *)&long long aBlock = v63;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v22 = sub_241DAB1F0();
    uint64_t v64 = v6;
    uint64_t v77 = sub_241D48854(v22, v23, (uint64_t *)&aBlock);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    if (a3) {
      uint64_t v24 = a2;
    }
    else {
      uint64_t v24 = 0x296C696E28;
    }
    if (a3) {
      unint64_t v25 = a3;
    }
    else {
      unint64_t v25 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v26 = v24;
    uint64_t v12 = v71;
    uint64_t v77 = sub_241D48854(v26, v25, (uint64_t *)&aBlock);
    uint64_t v11 = v70;
    sub_241DAAF10();
    swift_bridgeObjectRelease_n();
    uint64_t v6 = v64;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v17, v18, "[%s] Ensuring uniqueness; firstName: %s", (uint8_t *)v21, 0x16u);
    uint64_t v27 = v63;
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v27, -1, -1);
    uint64_t v28 = v21;
    a1 = v65;
    MEMORY[0x24563A5D0](v28, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v29(v16, v11);
  id v30 = objc_msgSend(a1, sel_metadata);
  uint64_t v31 = (uint64_t *)MEMORY[0x263F0AB88];
  if (!v30)
  {
    long long aBlock = 0u;
    long long v74 = 0u;
LABEL_20:
    sub_241DA5B44((uint64_t)&aBlock, (uint64_t (*)(void))sub_241D2D9F0);
    goto LABEL_21;
  }
  unint64_t v32 = v30;
  uint64_t v65 = (void *)a3;
  uint64_t v33 = sub_241DAA920();

  uint64_t v34 = *v31;
  uint64_t v35 = sub_241DAA990();
  if (*(void *)(v33 + 16) && (unint64_t v37 = sub_241DA3428(v35, v36), (v38 & 1) != 0))
  {
    sub_241D2DA4C(*(void *)(v33 + 56) + 32 * v37, (uint64_t)&aBlock);
  }
  else
  {
    long long aBlock = 0u;
    long long v74 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v74 + 1)) {
    goto LABEL_20;
  }
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B610);
  if (swift_dynamicCast())
  {
    double v39 = (void *)v77;
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x263F8EE88];
    id v41 = objc_msgSend(self, sel_predicateForObjectsWithMetadataKey_, v34);
    uint64_t v72 = *(char **)&v6[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_sampleType];
    uint64_t v42 = (void *)swift_allocObject();
    v42[2] = v40;
    v42[3] = v6;
    int v44 = v65;
    uint64_t v43 = v66;
    unsigned char v42[4] = v39;
    void v42[5] = v43;
    v42[6] = v44;
    v42[7] = a1;
    uint64_t v45 = v68;
    v42[8] = v67;
    v42[9] = v45;
    id v46 = objc_allocWithZone(MEMORY[0x263F0A6E0]);
    uint64_t v75 = sub_241DA553C;
    uint64_t v76 = v42;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v74 = sub_241DA3370;
    *((void *)&v74 + 1) = &unk_26F5D19C8;
    uint64_t v47 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v48 = v6;
    id v49 = v39;
    id v50 = a1;
    swift_retain();
    id v51 = objc_msgSend(v46, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v72, v41, 0, 0, v47);
    _Block_release(v47);
    swift_release();
    uint64_t v52 = *(void **)&v48[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore];
    if (v52)
    {
      objc_msgSend(v52, sel_executeQuery_, v51);

      swift_release();
    }
    else
    {
      __break(1u);
    }
    return;
  }
LABEL_21:
  sub_241DAA2A0();
  uint64_t v53 = sub_241DAA2D0();
  os_log_type_t v54 = sub_241DAAC10();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(void *)&long long aBlock = v56;
    *(_DWORD *)uint64_t v55 = 136315394;
    uint64_t v57 = sub_241DAB1F0();
    uint64_t v77 = sub_241D48854(v57, v58, (uint64_t *)&aBlock);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    uint64_t v59 = sub_241DAA990();
    uint64_t v77 = sub_241D48854(v59, v60, (uint64_t *)&aBlock);
    sub_241DAAF10();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241D1C000, v53, v54, "[%s] Ingested VRX has invalid type for metadata key %s", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24563A5D0](v56, -1, -1);
    MEMORY[0x24563A5D0](v55, -1, -1);

    uint64_t v61 = v72;
    uint64_t v62 = v70;
  }
  else
  {

    uint64_t v61 = v72;
    uint64_t v62 = v11;
  }
  v29(v61, v62);
}

uint64_t sub_241DA1588(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  unint64_t v16 = sub_241DAA830();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v19 = (unint64_t)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_241DAA850();
  uint64_t v109 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v108 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241DA94E0();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    char v50 = 0;
    goto LABEL_96;
  }
  uint64_t v100 = v26;
  uint64_t v101 = v24;
  uint64_t v102 = v23;
  uint64_t v103 = a6;
  if (a2 >> 62) {
    goto LABEL_98;
  }
  uint64_t v27 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v111 = (unint64_t *)(a4 + 16);
    unint64_t v107 = v16;
    uint64_t v106 = v17;
    uint64_t v105 = v20;
    uint64_t v104 = (char *)v19;
    if (!v27)
    {
      swift_bridgeObjectRelease();
LABEL_25:
      if (sub_241DA55F8(a2, v103))
      {
        char v50 = 1;
        goto LABEL_96;
      }
      if (a8) {
        uint64_t v51 = a7;
      }
      else {
        uint64_t v51 = 0;
      }
      unint64_t v52 = 0xE000000000000000;
      if (a8) {
        unint64_t v52 = a8;
      }
      *(void *)&long long aBlock = v51;
      *((void *)&aBlock + 1) = v52;
      swift_bridgeObjectRetain();
      uint64_t v53 = v100;
      sub_241DA94B0();
      sub_241D36B9C();
      a7 = MEMORY[0x263F8D310];
      a2 = sub_241DAAF30();
      unint64_t v19 = (unint64_t)v54;
      (*(void (**)(char *, uint64_t))(v101 + 8))(v53, v102);
      swift_bridgeObjectRelease();
      id v55 = objc_msgSend(a9, sel_metadata);
      id v110 = a9;
      if (v55)
      {
        uint64_t v56 = v55;
        uint64_t v57 = MEMORY[0x263F8D310];
        uint64_t v58 = sub_241DAA920();

        uint64_t v59 = sub_241DAA990();
        if (*(void *)(v58 + 16) && (unint64_t v61 = sub_241DA3428(v59, v60), (v62 & 1) != 0))
        {
          sub_241D2DA4C(*(void *)(v58 + 56) + 32 * v61, (uint64_t)&aBlock);
        }
        else
        {
          long long aBlock = 0u;
          long long v115 = 0u;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)&v115 + 1))
        {
          if (swift_dynamicCast())
          {
            switch(sub_241D4BA7C(*(unint64_t *)&v113[0]))
            {
              case 1u:
                uint64_t v66 = HIBYTE(v19) & 0xF;
                if ((v19 & 0x2000000000000000) == 0) {
                  uint64_t v66 = a2 & 0xFFFFFFFFFFFFLL;
                }
                if (v66)
                {
                  if (qword_268D4B2F0 != -1) {
                    goto LABEL_103;
                  }
                  goto LABEL_66;
                }
                swift_bridgeObjectRelease();
                if (qword_268D4B2F0 != -1) {
                  goto LABEL_104;
                }
                goto LABEL_72;
              case 2u:
                uint64_t v67 = HIBYTE(v19) & 0xF;
                if ((v19 & 0x2000000000000000) == 0) {
                  uint64_t v67 = a2 & 0xFFFFFFFFFFFFLL;
                }
                if (v67)
                {
                  if (qword_268D4B2F0 != -1) {
                    goto LABEL_103;
                  }
                  goto LABEL_66;
                }
                swift_bridgeObjectRelease();
                if (qword_268D4B2F0 != -1) {
                  goto LABEL_104;
                }
                goto LABEL_72;
              case 3u:
                uint64_t v68 = HIBYTE(v19) & 0xF;
                if ((v19 & 0x2000000000000000) == 0) {
                  uint64_t v68 = a2 & 0xFFFFFFFFFFFFLL;
                }
                if (v68)
                {
                  if (qword_268D4B2F0 != -1) {
LABEL_103:
                  }
                    swift_once();
LABEL_66:
                  sub_241DA95E0();
                  sub_241D4A5E8();
                  uint64_t v69 = swift_allocObject();
                  *(_OWORD *)(v69 + 16) = xmmword_241DB2C80;
                  *(void *)(v69 + 56) = v57;
                  *(void *)(v69 + 64) = sub_241D2B59C();
                  *(void *)(v69 + 32) = a2;
                  *(void *)(v69 + 40) = v19;
                  a2 = sub_241DAA960();
                  uint64_t v20 = v70;
                  goto LABEL_49;
                }
                swift_bridgeObjectRelease();
                if (qword_268D4B2F0 != -1) {
                  goto LABEL_104;
                }
                break;
              case 4u:
                goto LABEL_44;
              default:
                swift_bridgeObjectRelease();
                if (qword_268D4B2F0 == -1) {
                  goto LABEL_72;
                }
                goto LABEL_104;
            }
            goto LABEL_72;
          }
LABEL_44:
          uint64_t v63 = HIBYTE(v19) & 0xF;
          if ((v19 & 0x2000000000000000) == 0) {
            uint64_t v63 = a2 & 0xFFFFFFFFFFFFLL;
          }
          if (v63)
          {
            if (qword_268D4B2F0 == -1) {
              goto LABEL_48;
            }
            goto LABEL_100;
          }
          swift_bridgeObjectRelease();
          if (qword_268D4B2F0 != -1) {
LABEL_104:
          }
            swift_once();
LABEL_72:
          a2 = sub_241DA95E0();
          uint64_t v20 = v71;
          goto LABEL_73;
        }
      }
      else
      {
        long long aBlock = 0u;
        long long v115 = 0u;
      }
      sub_241DA5B44((uint64_t)&aBlock, (uint64_t (*)(void))sub_241D2D9F0);
      goto LABEL_44;
    }
    if (v27 >= 1)
    {
      uint64_t v98 = a7;
      unint64_t v99 = a8;
      uint64_t v28 = 0;
      unint64_t v29 = a2 & 0xC000000000000001;
      uint64_t v30 = *MEMORY[0x263F09A80];
      uint64_t v31 = MEMORY[0x263F8EE58] + 8;
      uint64_t v32 = MEMORY[0x263F8D310];
      id v110 = (id)v27;
      while (1)
      {
        if (v29) {
          id v33 = (id)MEMORY[0x245639BE0](v28, a2);
        }
        else {
          id v33 = *(id *)(a2 + 8 * v28 + 32);
        }
        uint64_t v34 = v33;
        id v35 = objc_msgSend(v33, sel_metadata);
        if (v35)
        {
          uint64_t v36 = v35;
          uint64_t v37 = sub_241DAA920();

          uint64_t v38 = sub_241DAA990();
          if (*(void *)(v37 + 16) && (unint64_t v40 = sub_241DA3428(v38, v39), (v41 & 1) != 0))
          {
            sub_241D2DA4C(*(void *)(v37 + 56) + 32 * v40, (uint64_t)&aBlock);
          }
          else
          {
            long long aBlock = 0u;
            long long v115 = 0u;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((void *)&v115 + 1))
          {
            if (swift_dynamicCast())
            {
              unint64_t v42 = v29;
              unint64_t v43 = a2;
              uint64_t v44 = v31;
              uint64_t v45 = v30;
              uint64_t v46 = v32;
              uint64_t v48 = *((void *)&v113[0] + 1);
              uint64_t v47 = *(void *)&v113[0];
              swift_beginAccess();
              uint64_t v49 = v48;
              uint64_t v32 = v46;
              uint64_t v30 = v45;
              uint64_t v31 = v44;
              a2 = v43;
              unint64_t v29 = v42;
              uint64_t v27 = (uint64_t)v110;
              sub_241DA46D0((uint64_t *)v113, v47, v49);
              swift_endAccess();

              swift_bridgeObjectRelease();
            }
            else
            {
            }
            goto LABEL_9;
          }
        }
        else
        {
          long long aBlock = 0u;
          long long v115 = 0u;
        }

        sub_241DA5B44((uint64_t)&aBlock, (uint64_t (*)(void))sub_241D2D9F0);
LABEL_9:
        if (v27 == ++v28)
        {
          swift_bridgeObjectRelease();
          unint64_t v16 = v107;
          uint64_t v17 = v106;
          uint64_t v20 = v105;
          unint64_t v19 = (unint64_t)v104;
          a8 = v99;
          a7 = v98;
          goto LABEL_25;
        }
      }
    }
    __break(1u);
LABEL_100:
    swift_once();
LABEL_48:
    sub_241DA95E0();
    sub_241D4A5E8();
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_241DB2C80;
    *(void *)(v64 + 56) = a7;
    *(void *)(v64 + 64) = sub_241D2B59C();
    *(void *)(v64 + 32) = a2;
    *(void *)(v64 + 40) = v19;
    a2 = sub_241DAA960();
    uint64_t v20 = v65;
LABEL_49:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_73:
    swift_bridgeObjectRetain();
    uint64_t v72 = v111;
    swift_beginAccess();
    a8 = *v72;
    if (!*(void *)(*v72 + 16)) {
      break;
    }
    a7 = 0;
    unint64_t v19 = v20;
    unint64_t v73 = a2;
    while (1)
    {
      sub_241DAB1B0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_241DAAA10();
      uint64_t v74 = sub_241DAB1D0();
      uint64_t v75 = -1 << *(unsigned char *)(a8 + 32);
      unint64_t v16 = v74 & ~v75;
      a4 = a8 + 56;
      if (((*(void *)(a8 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
        goto LABEL_91;
      }
      uint64_t v17 = *(void *)(a8 + 48);
      uint64_t v76 = (void *)(v17 + 16 * v16);
      BOOL v77 = *v76 == v73 && v76[1] == v19;
      if (!v77 && (sub_241DAB160() & 1) == 0)
      {
        uint64_t v78 = ~v75;
        while (1)
        {
          unint64_t v16 = (v16 + 1) & v78;
          if (((*(void *)(a4 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
            break;
          }
          uint64_t v79 = (void *)(v17 + 16 * v16);
          BOOL v80 = *v79 == v73 && v79[1] == v19;
          if (v80 || (sub_241DAB160() & 1) != 0) {
            goto LABEL_88;
          }
        }
LABEL_91:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_94;
      }
LABEL_88:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (__OFADD__(a7++, 1)) {
        break;
      }
      *(void *)&long long aBlock = a2;
      *((void *)&aBlock + 1) = v20;
      swift_bridgeObjectRetain();
      sub_241DAAA50();
      *(void *)&v113[0] = a7;
      sub_241DAB120();
      sub_241DAAA50();
      swift_bridgeObjectRelease();
      unint64_t v19 = *((void *)&aBlock + 1);
      unint64_t v73 = aBlock;
      a8 = *v111;
      if (!*(void *)(*v111 + 16)) {
        goto LABEL_93;
      }
    }
    __break(1u);
LABEL_98:
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_241DAB0A0();
  }
  unint64_t v73 = a2;
  unint64_t v19 = v20;
LABEL_93:
  swift_bridgeObjectRelease();
LABEL_94:
  swift_bridgeObjectRelease();
  id v82 = v110;
  id v83 = objc_msgSend(v110, sel_metadata);
  if (!v83)
  {
    swift_bridgeObjectRelease();
    __break(1u);
    JUMPOUT(0x241DA2524);
  }
  unint64_t v84 = v83;
  uint64_t v85 = MEMORY[0x263F8D310];
  uint64_t v86 = sub_241DAA920();

  uint64_t v87 = sub_241DAA990();
  uint64_t v89 = v88;
  *((void *)&v115 + 1) = v85;
  *(void *)&long long aBlock = v73;
  *((void *)&aBlock + 1) = v19;
  sub_241D28BE4(&aBlock, v113);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v112 = v86;
  sub_241DA3C3C(v113, v87, v89, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v91 = (void *)sub_241DAA910();
  swift_bridgeObjectRelease();
  objc_msgSend(v82, sel__setMetadata_, v91);

  char v50 = 0;
  unint64_t v16 = v107;
  uint64_t v17 = v106;
  uint64_t v20 = v105;
  unint64_t v19 = (unint64_t)v104;
LABEL_96:
  sub_241D28BF4(0, (unint64_t *)&qword_268D4BC40);
  uint64_t v92 = (void *)sub_241DAAD00();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = a10;
  *(void *)(v93 + 24) = a11;
  *(unsigned char *)(v93 + 32) = v50;
  long long v116 = sub_241DA55C8;
  uint64_t v117 = v93;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v115 = sub_241D3A278;
  *((void *)&v115 + 1) = &unk_26F5D1A18;
  uint64_t v94 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  int v95 = v108;
  sub_241DAA840();
  *(void *)&long long aBlock = MEMORY[0x263F8EE78];
  sub_241D83064();
  sub_241DA59C0(0, (unint64_t *)&qword_268D4BC50, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_241D3A670();
  sub_241DAAF60();
  MEMORY[0x245639900](0, v95, v19, v94);
  _Block_release(v94);

  (*(void (**)(unint64_t, unint64_t))(v17 + 8))(v19, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v95, v20);
}

Swift::Int __swiftcall VisionPrescriptionAddRecordConfirmationViewController.numberOfSections(in:)(UITableView *in)
{
  return 1;
}

Swift::Int __swiftcall VisionPrescriptionAddRecordConfirmationViewController.tableView(_:numberOfRowsInSection:)(UITableView *_, Swift::Int numberOfRowsInSection)
{
  return 1;
}

void *VisionPrescriptionAddRecordConfirmationViewController.tableView(_:cellForRowAt:)(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for VisionPrescriptionPreviewTableViewCell();
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultReuseIdentifier);
  if (!v4)
  {
    sub_241DAA990();
    id v4 = (id)sub_241DAA950();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = (void *)sub_241DA9820();
  id v6 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v4, v5);

  uint64_t v37 = swift_dynamicCastClassUnconditional();
  uint64_t v7 = OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_visionPrescription;
  id v8 = objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_visionPrescription), sel_rightEye);
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  if (v8)
  {
    uint64_t v11 = v8;
    id v12 = objc_msgSend(v8, sel_sphere);
    id v13 = objc_msgSend(self, sel_diopterUnit);
    objc_msgSend(v12, sel_doubleValueForUnit_, v13);
    uint64_t v10 = v14;
  }
  id v15 = objc_msgSend(*(id *)(v2 + v7), sel_leftEye);
  if (v15)
  {
    unint64_t v16 = v15;
    id v17 = objc_msgSend(v15, sel_sphere);
    id v18 = objc_msgSend(self, sel_diopterUnit);
    objc_msgSend(v17, sel_doubleValueForUnit_, v18);
    uint64_t v9 = v19;
  }
  uint64_t v20 = *(void **)(v2 + v7);
  id v21 = v6;
  id v22 = objc_msgSend(v20, sel_metadata);
  if (!v22)
  {
    long long v38 = 0u;
    long long v39 = 0u;
    uint64_t v27 = (void *)v37;
    goto LABEL_15;
  }
  uint64_t v23 = v22;
  uint64_t v24 = sub_241DAA920();

  uint64_t v25 = sub_241DAA990();
  uint64_t v27 = (void *)v37;
  if (!*(void *)(v24 + 16) || (unint64_t v28 = sub_241DA3428(v25, v26), (v29 & 1) == 0))
  {
    long long v38 = 0u;
    long long v39 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_241D2DA4C(*(void *)(v24 + 56) + 32 * v28, (uint64_t)&v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v39 + 1))
  {
LABEL_15:
    sub_241DA5B44((uint64_t)&v38, (uint64_t (*)(void))sub_241D2D9F0);
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    uint64_t v30 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v30 = 0;
LABEL_17:
  objc_msgSend(v27, sel_setPrimaryText_, v30);

  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  sub_241D4A5E8();
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_241DB2C60;
  uint64_t v32 = MEMORY[0x263F8D538];
  uint64_t v33 = MEMORY[0x263F8D5B8];
  *(void *)(v31 + 56) = MEMORY[0x263F8D538];
  *(void *)(v31 + 64) = v33;
  *(void *)(v31 + 32) = v10;
  *(void *)(v31 + 96) = v32;
  *(void *)(v31 + 104) = v33;
  *(void *)(v31 + 72) = v9;
  id v34 = v21;
  sub_241DAA9A0();
  swift_bridgeObjectRelease();
  id v35 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setSecondaryText_, v35, 0xE000000000000000);

  return v27;
}

Swift::String_optional __swiftcall VisionPrescriptionAddRecordConfirmationViewController.tableView(_:titleForHeaderInSection:)(UITableView *_, Swift::Int titleForHeaderInSection)
{
  if (titleForHeaderInSection)
  {
    uint64_t v2 = 0;
    uint64_t v3 = 0;
  }
  else
  {
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_241DA95E0();
  }
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

Swift::String_optional __swiftcall VisionPrescriptionAddRecordConfirmationViewController.tableView(_:titleForFooterInSection:)(UITableView *_, Swift::Int titleForFooterInSection)
{
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

double VisionPrescriptionAddRecordConfirmationViewController.tableView(_:estimatedHeightForRowAt:)()
{
  return *MEMORY[0x263F839B8];
}

double VisionPrescriptionAddRecordConfirmationViewController.tableView(_:heightForHeaderInSection:)(uint64_t a1, uint64_t a2)
{
  double result = *MEMORY[0x263F839B8];
  if (!a2) {
    return 10.0;
  }
  return result;
}

double VisionPrescriptionAddRecordConfirmationViewController.tableView(_:heightForFooterInSection:)()
{
  return 0.0;
}

void __swiftcall VisionPrescriptionAddRecordConfirmationViewController.tableView(_:viewForFooterInSection:)(UIView_optional *__return_ptr retstr, UITableView *_, Swift::Int viewForFooterInSection)
{
}

id VisionPrescriptionAddRecordConfirmationViewController.__allocating_init(title:detailText:symbolName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    uint64_t v10 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v11 = 0;
    goto LABEL_6;
  }
  uint64_t v10 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v11 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
LABEL_6:
  id v12 = objc_msgSend(objc_allocWithZone(v6), sel_initWithTitle_detailText_symbolName_, v9, v10, v11);

  return v12;
}

void VisionPrescriptionAddRecordConfirmationViewController.init(title:detailText:symbolName:)()
{
}

id VisionPrescriptionAddRecordConfirmationViewController.__allocating_init(title:detailText:icon:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = v5;
  uint64_t v9 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v10 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = objc_msgSend(objc_allocWithZone(v6), sel_initWithTitle_detailText_icon_, v9, v10, a5);

  return v11;
}

void VisionPrescriptionAddRecordConfirmationViewController.init(title:detailText:icon:)()
{
}

id VisionPrescriptionAddRecordConfirmationViewController.__allocating_init(title:detailText:symbolName:adoptTableViewScrollView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  id v8 = v7;
  id v12 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    id v13 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v14 = 0;
    goto LABEL_6;
  }
  id v13 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v14 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
LABEL_6:
  id v15 = objc_msgSend(objc_allocWithZone(v8), sel_initWithTitle_detailText_symbolName_adoptTableViewScrollView_, v12, v13, v14, a7 & 1);

  return v15;
}

void VisionPrescriptionAddRecordConfirmationViewController.init(title:detailText:symbolName:adoptTableViewScrollView:)()
{
}

id VisionPrescriptionAddRecordConfirmationViewController.__allocating_init(title:detailText:icon:adoptTableViewScrollView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  uint64_t v7 = v6;
  id v11 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  if (a4)
  {
    id v12 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v12 = 0;
  }
  id v13 = objc_msgSend(objc_allocWithZone(v7), sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v11, v12, a5, a6 & 1);

  return v13;
}

void VisionPrescriptionAddRecordConfirmationViewController.init(title:detailText:icon:adoptTableViewScrollView:)()
{
}

id VisionPrescriptionAddRecordConfirmationViewController.__deallocating_deinit()
{
  return sub_241DA32A8(type metadata accessor for VisionPrescriptionAddRecordConfirmationViewController);
}

id sub_241DA32A8(uint64_t (*a1)(void))
{
  v3.receiver  = v1;
  v3.super_class  = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_241DA3370(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_241D28BF4(0, (unint64_t *)&unk_268D4D380);
    uint64_t v5 = sub_241DAAB00();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_241DA3428(uint64_t a1, uint64_t a2)
{
  sub_241DAB1B0();
  sub_241DAAA10();
  uint64_t v4 = sub_241DAB1D0();

  return sub_241DA3F34(a1, a2, v4);
}

unint64_t sub_241DA34A0(unsigned __int8 a1)
{
  sub_241DAB1B0();
  sub_241DAB1C0();
  uint64_t v2 = sub_241DAB1D0();

  return sub_241DA4018(a1, v2);
}

unint64_t sub_241DA350C(uint64_t a1)
{
  sub_241DAA990();
  sub_241DAB1B0();
  sub_241DAAA10();
  uint64_t v2 = sub_241DAB1D0();
  swift_bridgeObjectRelease();

  return sub_241DA40B8(a1, v2);
}

unint64_t sub_241DA35A0(uint64_t a1)
{
  uint64_t v2 = sub_241DAADF0();

  return sub_241DA4230(a1, v2);
}

unint64_t sub_241DA35E8(uint64_t a1)
{
  sub_241DAA990();
  sub_241DAB1B0();
  sub_241DAAA10();
  uint64_t v2 = sub_241DAB1D0();
  swift_bridgeObjectRelease();
  return sub_241DA40B8(a1, v2);
}

uint64_t sub_241DA3678(uint64_t a1, char a2)
{
  objc_super v3 = v2;
  uint64_t v5 = *v2;
  sub_241D78538();
  uint64_t v6 = sub_241DAB0C0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    id v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              objc_super v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v32;
                }
                *(void *)(v5 + 16)  = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      id v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_241D28BE4(v24, v35);
      }
      else
      {
        sub_241D2DA4C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_241DAB1B0();
      sub_241DAAA10();
      uint64_t result = sub_241DAB1D0();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      id v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1]  = v22;
      uint64_t result = (uint64_t)sub_241D28BE4(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *objc_super v3 = v7;
  return result;
}

uint64_t sub_241DA3974(uint64_t a1, char a2)
{
  objc_super v3 = v2;
  uint64_t v5 = *v2;
  sub_241D78478();
  uint64_t result = sub_241DAB0C0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v30) {
          goto LABEL_33;
        }
        unint64_t v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v20 = v31[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                objc_super v3 = v2;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              objc_super v3 = v2;
              *(void *)(v5 + 16)  = 0;
              break;
            }
            unint64_t v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v20 = v31[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      unint64_t v27 = *(void **)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        id v28 = v27;
      }
      sub_241DAB1B0();
      sub_241DAB1C0();
      uint64_t result = sub_241DAB1D0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16)  = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16)  = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *objc_super v3 = v7;
  return result;
}

_OWORD *sub_241DA3C3C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_241DA3428(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_241DA434C();
      goto LABEL_7;
    }
    sub_241DA3678(v15, a4 & 1);
    unint64_t v21 = sub_241DA3428(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_241DAB1A0();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    int64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_241D36E44((uint64_t)v19);
    return sub_241D28BE4(a1, v19);
  }
LABEL_13:
  sub_241DA3EC8(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

void sub_241DA3D90(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_241DA34A0(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_241DA4530();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10)  = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10)  = a2;
    *(void *)(v16[7] + 8 * v10)  = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      id v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_241DA3974(v13, a3 & 1);
  unint64_t v18 = sub_241DA34A0(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_241DAB1A0();
  __break(1u);
}

_OWORD *sub_241DA3EC8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1]  = a3;
  uint64_t result = sub_241D28BE4(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2]  = v10;
  }
  return result;
}

unint64_t sub_241DA3F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_241DAB160() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_241DAB160() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_241DA4018(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_241DA40B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_241DAA990();
    uint64_t v8 = v7;
    if (v6 == sub_241DAA990() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_241DAB160();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_241DAA990();
          uint64_t v15 = v14;
          if (v13 == sub_241DAA990() && v15 == v16) {
            break;
          }
          char v18 = sub_241DAB160();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_241DA4230(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_241D28BF4(0, (unint64_t *)&unk_268D4D370);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_241DAAE00();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_241DAAE00();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

void *sub_241DA434C()
{
  uint64_t v1 = v0;
  sub_241D78538();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241DAB0B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16)  = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_241D2DA4C(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    BOOL v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1]  = v18;
    sub_241D28BE4(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_241DA4530()
{
  uint64_t v1 = v0;
  sub_241D78478();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241DAB0B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16)  = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15)  = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15)  = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_241DA46D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_241DAB1B0();
  swift_bridgeObjectRetain();
  sub_241DAAA10();
  uint64_t v8 = sub_241DAB1D0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_241DAB160() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1  = *v14;
      a1[1]  = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_241DAB160() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_241DA4B5C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1  = a2;
  a1[1]  = a3;
  return 1;
}

uint64_t sub_241DA4880()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_241D54B10();
  uint64_t v3 = sub_241DAAF90();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16)  = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_241DAB1B0();
      sub_241DAAA10();
      uint64_t result = sub_241DAB1D0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1]  = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_241DA4B5C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_241DA4880();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_241DA4CF8();
      goto LABEL_22;
    }
    sub_241DA4EA8();
  }
  uint64_t v11 = *v4;
  sub_241DAB1B0();
  sub_241DAAA10();
  uint64_t result = sub_241DAB1D0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3  = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_241DAB160(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_241DAB190();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3  = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_241DAB160();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1]  = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16)  = v24;
  }
  return result;
}

void *sub_241DA4CF8()
{
  uint64_t v1 = v0;
  sub_241D54B10();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241DAAF80();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16)  = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1]  = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_241DA4EA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_241D54B10();
  uint64_t v3 = sub_241DAAF90();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_241DAB1B0();
    swift_bridgeObjectRetain();
    sub_241DAAA10();
    uint64_t result = sub_241DAB1D0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1]  = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

id sub_241DA5154(void *a1, void *a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_addToHealthButton]  = 0;
  uint64_t v7 = OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore;
  *(void *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore]  = 0;
  uint64_t v8 = OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_profileStore;
  *(void *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_profileStore]  = 0;
  uint64_t v9 = OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_samplePredicate;
  *(void *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_samplePredicate]  = 0;
  *(void *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_visionPrescription]  = a1;
  uint64_t v10 = *(void **)&v3[v7];
  *(void *)&v3[v7]  = a2;
  int64_t v11 = v3;
  id v12 = a1;
  id v13 = a2;

  sub_241D3A710(a3, (uint64_t)&v11[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_pinnedContentManager]);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A620]), sel_initWithHealthStore_, v13);
  unint64_t v15 = *(void **)&v3[v8];
  *(void *)&v3[v8]  = v14;

  sub_241D28BF4(0, (unint64_t *)&unk_268D4D370);
  id v16 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_visionPrescriptionType);
  *(void *)&v11[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_sampleType]  = v16;
  id v17 = objc_msgSend(self, sel_predicateForObjectsWithMetadataKey_, *MEMORY[0x263F0AB88]);
  int64_t v18 = *(void **)&v3[v9];
  *(void *)&v3[v9]  = v17;

  id v19 = (id)HKHealthUIFrameworkBundle();
  uint64_t v20 = (void *)sub_241DAA950();
  id v21 = objc_msgSend(self, sel_imageNamed_inBundle_, v20, v19);

  if (qword_268D4B2F0 != -1) {
    swift_once();
  }
  sub_241DA95E0();
  uint64_t v22 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  sub_241DA95E0();
  unint64_t v23 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  v26.receiver  = v11;
  v26.super_class  = (Class)type metadata accessor for VisionPrescriptionAddRecordConfirmationViewController();
  id v24 = objc_msgSendSuper2(&v26, sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v22, v23, v21, 1, 0xE000000000000000);

  sub_241D36E44(a3);
  return v24;
}

uint64_t type metadata accessor for VisionPrescriptionAddRecordConfirmationViewController()
{
  return self;
}

uint64_t type metadata accessor for VisionPrescriptionPreviewTableViewCell()
{
  return self;
}

uint64_t sub_241DA54A4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241DA54DC()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_241DA553C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_241DA1588(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void **)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72));
}

uint64_t sub_241DA5578(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32)  = *(void *)(a2 + 32);
  *(void *)(a1 + 40)  = v2;
  return swift_retain();
}

uint64_t sub_241DA5588()
{
  return swift_release();
}

uint64_t sub_241DA5590()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 33, 7);
}

uint64_t sub_241DA55C8()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_241DA55F8(unint64_t a1, uint64_t a2)
{
  *(void *)&long long v24 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_241DAB0A0();
    uint64_t v3 = result;
    if (!result) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_19;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x245639BE0](i, a1);
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x2456396D0]();
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241DAAB20();
        }
        sub_241DAAB30();
        sub_241DAAB10();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (uint64_t j = 0; j != v3; ++j)
    {
      uint64_t v7 = *(void **)(a1 + 8 * j + 32);
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x2456396D0](v7);
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241DAAB20();
        }
        sub_241DAAB30();
        sub_241DAAB10();
      }
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  uint64_t v8 = v24;
  if ((unint64_t)v24 >> 62) {
    goto LABEL_40;
  }
  uint64_t v9 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v9)
  {
    uint64_t v10 = 4;
    while (1)
    {
      id v11 = (v8 & 0xC000000000000001) != 0 ? (id)MEMORY[0x245639BE0](v10 - 4, v8) : *(id *)(v8 + 8 * v10);
      id v12 = v11;
      uint64_t v13 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      id v14 = objc_msgSend(v11, sel_metadata);
      if (!v14)
      {
        long long v24 = 0u;
        long long v25 = 0u;
LABEL_23:

        sub_241DA5B44((uint64_t)&v24, (uint64_t (*)(void))sub_241D2D9F0);
        goto LABEL_24;
      }
      unint64_t v15 = v14;
      uint64_t v16 = sub_241DAA920();

      uint64_t v17 = sub_241DAA990();
      if (*(void *)(v16 + 16) && (unint64_t v19 = sub_241DA3428(v17, v18), (v20 & 1) != 0))
      {
        sub_241D2DA4C(*(void *)(v16 + 56) + 32 * v19, (uint64_t)&v24);
      }
      else
      {
        long long v24 = 0u;
        long long v25 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*((void *)&v25 + 1)) {
        goto LABEL_23;
      }
      sub_241D28BF4(0, (unint64_t *)&qword_268D4B610);
      if (swift_dynamicCast())
      {
        unsigned int v21 = objc_msgSend(v23, sel_isEqualToData_, a2);

        if (v21)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {
      }
LABEL_24:
      ++v10;
      if (v13 == v9) {
        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_241DAB0A0();
    swift_bridgeObjectRelease();
  }
LABEL_41:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_241DA59C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241DA5A24()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241DA5A5C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241DA5A9C(int a1)
{
  return sub_241DA0318(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_241DA5AA8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241DA5AB8(char a1, void *a2)
{
  return sub_241DA0934(a1, a2);
}

uint64_t sub_241DA5AC0()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_241DA5B00()
{
  sub_241DA0C2C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_241DA5B10(uint64_t a1)
{
}

uint64_t sub_241DA5B44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241DA5BA4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241DA5BDC(uint64_t a1)
{
  sub_241D9F49C(a1, *(void **)(v1 + 16));
}

uint64_t sub_241DA5BE4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241DA5C1C(void *a1)
{
  return sub_241D9EB88(a1, *(char **)(v1 + 16));
}

void sub_241DA5C24(char a1)
{
  sub_241D9EC68(a1, *(void *)(v1 + 16));
}

uint64_t sub_241DA5C58(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241DAA1F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 24)  = 0;
  sub_241DA98F0();
  swift_allocObject();
  *(void *)(v1 + 32)  = sub_241DA98E0();
  uint64_t v8 = v1 + OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionAnalyticsContext_demographicsData;
  uint64_t v9 = sub_241DA9ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)(v2 + 16)  = a1;
  sub_241DAA210();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F44A08], v4);
  sub_241D3A5E4();
  id v10 = a1;
  sub_241DAAD00();
  v13[1]  = sub_241DAA200();
  swift_allocObject();
  swift_weakInit();
  sub_241DA7244(&qword_268D4D428, MEMORY[0x263F44A18]);
  uint64_t v11 = sub_241DAA810();

  swift_release();
  swift_release();
  *(void *)(v2 + 24)  = v11;
  swift_release();
  return v2;
}

uint64_t sub_241DA5E8C()
{
  sub_241D6C0E8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v7[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    swift_retain();
    sub_241DA98C0();
    swift_release();
    uint64_t v5 = sub_241DA9ED0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = v4 + OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionAnalyticsContext_demographicsData;
    swift_beginAccess();
    sub_241DA718C((uint64_t)v2, v6);
    swift_endAccess();
    swift_retain();
    sub_241DA98D0();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_241DA5FD4(void *a1, uint64_t a2, void (*a3)(char *))
{
  unint64_t v23 = a3;
  sub_241D6C0E8();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = sub_241DA9590();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = sub_241DA9ED0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(a1, sel_dateOfBirthComponents);
  sub_241DA9580();

  id v16 = objc_msgSend(a1, sel_biologicalSexObject);
  objc_msgSend(v16, sel_biologicalSex);

  sub_241DA9EC0();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v18 = Strong;
    swift_retain();
    sub_241DA98C0();
    swift_release();
    unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v19(v9, v14, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    sub_241DA7128((uint64_t)v9, (uint64_t)v7);
    uint64_t v20 = v18 + OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionAnalyticsContext_demographicsData;
    swift_beginAccess();
    sub_241DA718C((uint64_t)v7, v20);
    swift_endAccess();
    swift_retain();
    sub_241DA98D0();
    swift_release();
    swift_release();
  }
  else
  {
    unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  }
  v19(v9, v14, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  v23(v9);
  sub_241D6C140((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_241DA6314(int a1, uint64_t a2, uint64_t a3, int a4)
{
  sub_241D6C0E8();
  uint64_t v8 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v32 - v12;
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v32 - v14;
  uint64_t v37 = sub_241DA9ED0();
  uint64_t v16 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16)  = a1;
  *(void *)(v19 + 24)  = a2;
  *(void *)(v19 + 32)  = a3;
  *(unsigned char *)(v19 + 40)  = a4;
  uint64_t v38 = a3;
  swift_bridgeObjectRetain_n();
  if (HKImproveHealthAndActivityAnalyticsAllowed())
  {
    uint64_t v20 = (uint64_t)v13;
    uint64_t v32 = v18;
    int v33 = a1;
    uint64_t v34 = a2;
    int v35 = a4;
    uint64_t v21 = v36;
    sub_241DA98C0();
    uint64_t v22 = v21 + OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionAnalyticsContext_demographicsData;
    swift_beginAccess();
    sub_241D54E7C(v22, (uint64_t)v15);
    uint64_t v23 = v37;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v37) == 1)
    {
      sub_241D6C140((uint64_t)v15);
      sub_241DA98D0();
      long long v24 = *(void **)(v21 + 16);
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      objc_super v26 = (void *)swift_allocObject();
      _OWORD v26[2] = v25;
      v26[3]  = sub_241DA7228;
      v26[4]  = v19;
      aBlock[4]  = sub_241DA728C;
      aBlock[5]  = v26;
      aBlock[0]  = MEMORY[0x263EF8330];
      aBlock[1]  = 1107296256;
      aBlock[2]  = sub_241D344C0;
      aBlock[3]  = &unk_26F5D1CE8;
      BOOL v27 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v24, sel_hk_fetchExistingDemographicInformationWithCompletion_, v27);
      _Block_release(v27);
    }
    else
    {
      int64_t v29 = v32;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v32, v15, v23);
      sub_241DA98D0();
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v20, v29, v23);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v23);
      sub_241D54E7C(v20, (uint64_t)v10);
      type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent();
      swift_allocObject();
      uint64_t v30 = v38;
      swift_bridgeObjectRetain();
      aBlock[0]  = sub_241D6B878((uint64_t)v10, v33, v34, v30, v35);
      sub_241DA7244(&qword_268D4D420, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent);
      sub_241DA9900();
      swift_release();
      sub_241D6C140(v20);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v29, v23);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v13, 1, 1, v37);
    sub_241D54E7C((uint64_t)v13, (uint64_t)v10);
    type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent();
    swift_allocObject();
    uint64_t v28 = v38;
    swift_bridgeObjectRetain();
    aBlock[0]  = sub_241D6B878((uint64_t)v10, a1, a2, v28, a4);
    sub_241DA7244(&qword_268D4D420, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent);
    sub_241DA9900();
    swift_release();
    sub_241D6C140((uint64_t)v13);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_241DA6828(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  sub_241D6C0E8();
  MEMORY[0x270FA5388]();
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D54E7C(a1, (uint64_t)v11);
  type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v13[1]  = sub_241D6B878((uint64_t)v11, a2, a3, a4, a5);
  sub_241DA7244(&qword_268D4D420, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent);
  sub_241DA9900();
  return swift_release();
}

uint64_t sub_241DA695C(void *a1, int a2)
{
  uint64_t v3 = v2;
  sub_241D6C0E8();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = &v28[-v11];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v28[-v13];
  uint64_t v15 = sub_241DA9ED0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = &v28[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16)  = a1;
  uint64_t v30 = v19;
  *(unsigned char *)(v19 + 24)  = a2;
  id v20 = a1;
  if (HKImproveHealthAndActivityAnalyticsAllowed())
  {
    int v29 = a2;
    sub_241DA98C0();
    uint64_t v21 = v3 + OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionAnalyticsContext_demographicsData;
    swift_beginAccess();
    sub_241D54E7C(v21, (uint64_t)v14);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      sub_241D6C140((uint64_t)v14);
      sub_241DA98D0();
      uint64_t v22 = *(void **)(v3 + 16);
      uint64_t v23 = swift_allocObject();
      swift_weakInit();
      long long v24 = (void *)swift_allocObject();
      uint64_t v24[2] = v23;
      v24[3]  = sub_241DA70BC;
      v24[4]  = v30;
      aBlock[4]  = sub_241DA7104;
      aBlock[5]  = v24;
      aBlock[0]  = MEMORY[0x263EF8330];
      aBlock[1]  = 1107296256;
      aBlock[2]  = sub_241D344C0;
      aBlock[3]  = &unk_26F5D1C70;
      uint64_t v25 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v22, sel_hk_fetchExistingDemographicInformationWithCompletion_, v25);
      _Block_release(v25);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v18, v14, v15);
      sub_241DA98D0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16))(v12, v18, v15);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      sub_241D54E7C((uint64_t)v12, (uint64_t)v9);
      id v26 = v20;
      aBlock[0]  = sub_241D54704((uint64_t)v9, v26, v29 & 1);
      type metadata accessor for VisionPrescriptionSampleAnalyticsEvent();
      sub_241DA7244(&qword_268D4D418, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSampleAnalyticsEvent);
      sub_241DA9900();
      swift_release();
      sub_241D6C140((uint64_t)v12);
      (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
    sub_241D54E7C((uint64_t)v12, (uint64_t)v9);
    aBlock[0]  = sub_241D54704((uint64_t)v9, v20, a2 & 1);
    type metadata accessor for VisionPrescriptionSampleAnalyticsEvent();
    sub_241DA7244(&qword_268D4D418, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSampleAnalyticsEvent);
    sub_241DA9900();
    swift_release();
    sub_241D6C140((uint64_t)v12);
  }

  return swift_release();
}

uint64_t sub_241DA6E00(uint64_t a1, void *a2, char a3)
{
  sub_241D6C0E8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241D54E7C(a1, (uint64_t)v8);
  v10[1]  = sub_241D54704((uint64_t)v8, a2, a3);
  type metadata accessor for VisionPrescriptionSampleAnalyticsEvent();
  sub_241DA7244(&qword_268D4D418, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSampleAnalyticsEvent);
  sub_241DA9900();
  return swift_release();
}

uint64_t sub_241DA6EFC()
{
  swift_release();
  swift_release();
  sub_241D6C140(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionAnalyticsContext_demographicsData);

  return swift_deallocClassInstance();
}

uint64_t sub_241DA6F78()
{
  return type metadata accessor for VisionPrescriptionAnalyticsContext();
}

uint64_t type metadata accessor for VisionPrescriptionAnalyticsContext()
{
  uint64_t result = qword_268D4D408;
  if (!qword_268D4D408) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241DA6FCC()
{
  sub_241D6C0E8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_241DA7084()
{
  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_241DA70BC(uint64_t a1)
{
  return sub_241DA6E00(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_241DA70C8()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241DA7104(void *a1)
{
  return sub_241DA5FD4(a1, *(void *)(v1 + 16), *(void (**)(char *))(v1 + 24));
}

uint64_t sub_241DA7110(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32)  = *(void *)(a2 + 32);
  *(void *)(a1 + 40)  = v2;
  return swift_retain();
}

uint64_t sub_241DA7120()
{
  return swift_release();
}

uint64_t sub_241DA7128(uint64_t a1, uint64_t a2)
{
  sub_241D6C0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241DA718C(uint64_t a1, uint64_t a2)
{
  sub_241D6C0E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_241DA71F0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t sub_241DA7228(uint64_t a1)
{
  return sub_241DA6828(a1, *(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_241DA723C()
{
  return sub_241DA5E8C();
}

uint64_t sub_241DA7244(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionSingleRangeCell()
{
  uint64_t result = qword_268D4D460;
  if (!qword_268D4D460) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241DA72E4()
{
  return swift_initClassMetadata2();
}

id sub_241DA734C()
{
  uint64_t v1 = qword_268D4D448;
  uint64_t v2 = *(void **)(v0 + qword_268D4D448);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_268D4D448);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
    uint64_t v6 = (void *)sub_241DAADA0();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setTextAlignment_, 4);
    id v7 = objc_msgSend(self, sel_tertiaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    if (qword_268D4B2F0 != -1) {
      swift_once();
    }
    sub_241DA95E0();
    uint64_t v8 = (void *)sub_241DAA950();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v8, 0xE000000000000000);

    uint64_t v9 = *(void **)(v4 + v1);
    *(void *)(v4 + v1)  = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_241DA7564(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  id v10 = &v4[qword_268D4D430];
  *(_OWORD *)id v10 = 0u;
  *((_OWORD *)v10 + 1)  = 0u;
  *((void *)v10 + 4)  = 0;
  uint64_t v11 = qword_268D4D438;
  id v12 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v13 = v5;
  id v14 = objc_msgSend(v12, sel_init);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  uint64_t v15 = (void *)sub_241DAADA0();
  objc_msgSend(v14, sel_setFont_, v15);

  objc_msgSend(v14, sel_setTextAlignment_, 4);
  objc_msgSend(v14, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(void *)&v5[v11]  = v14;
  uint64_t v16 = qword_268D4D440;
  id v17 = objc_allocWithZone((Class)type metadata accessor for RangeView());
  id v18 = RangeView.init(range:value:)(0.0, 1.0, 0.0);
  objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v13[v16]  = v18;
  *(void *)&v13[qword_268D4D448]  = 0;
  *(void *)&v13[qword_268D4D450]  = 0;
  *(void *)&v13[qword_268D4D458]  = 0;

  v21.receiver  = v13;
  v21.super_class  = (Class)type metadata accessor for VisionPrescriptionSingleRangeCell();
  id v19 = objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  sub_241DA779C();

  return v19;
}

id sub_241DA7750(double a1, double a2, double a3, double a4)
{
  return sub_241DA7564(a1, a2, a3, a4);
}

void sub_241DA7774(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_241DA86C0();
}

void sub_241DA779C()
{
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  id v1 = objc_msgSend(v0, sel_contentView);
  uint64_t v2 = *(void **)&v0[qword_268D4D438];
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = objc_msgSend(v0, (SEL)&off_2650F7298);
  uint64_t v4 = *(void **)&v0[qword_268D4D440];
  objc_msgSend(v3, sel_addSubview_, v4);

  id v5 = objc_msgSend(v0, (SEL)&off_2650F7298);
  id v6 = sub_241DA734C();
  objc_msgSend(v5, sel_addSubview_, v6);

  id v7 = objc_msgSend(v0, (SEL)&off_2650F7298);
  id v8 = objc_msgSend(v7, sel_bottomAnchor);

  id v9 = objc_msgSend(v4, (SEL)&off_2650F7620 + 5);
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, 20.0);

  id v11 = objc_msgSend(v0, (SEL)&off_2650F7298);
  id v12 = objc_msgSend(v11, (SEL)&off_2650F7620 + 5);

  id v13 = sub_241DA734C();
  id v14 = objc_msgSend(v13, (SEL)&off_2650F7620 + 5);

  id v15 = objc_msgSend(v12, (SEL)&off_2650F7300 + 7, v14, 20.0);
  uint64_t v16 = *(void **)&v0[qword_268D4D450];
  *(void *)&v0[qword_268D4D450]  = v10;
  id v17 = v10;

  id v18 = *(void **)&v0[qword_268D4D458];
  *(void *)&v0[qword_268D4D458]  = v15;
  id v59 = v15;

  id v58 = self;
  sub_241D2B5F0();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16)  = xmmword_241DB5700;
  id v20 = objc_msgSend(v2, sel_topAnchor);
  id v21 = objc_msgSend(v0, (SEL)&off_2650F7298);
  id v22 = objc_msgSend(v21, (SEL)&off_2650F7530 + 3);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, 9.0);
  *(void *)(v19 + 32)  = v23;
  id v24 = objc_msgSend(v2, sel_leadingAnchor);
  id v25 = objc_msgSend(v0, (SEL)&off_2650F7298);
  id v26 = objc_msgSend(v25, (SEL)&off_2650F7238 + 2);

  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26, 16.0);
  *(void *)(v19 + 40)  = v27;
  id v28 = objc_msgSend(v0, (SEL)&off_2650F7298);
  id v29 = objc_msgSend(v28, sel_trailingAnchor);

  id v30 = objc_msgSend(v2, byte_2650F7494);
  id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v30, 16.0);

  *(void *)(v19 + 48)  = v31;
  id v32 = objc_msgSend(v4, sel_topAnchor);
  id v33 = objc_msgSend(v2, sel_bottomAnchor);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, 7.0);

  *(void *)(v19 + 56)  = v34;
  *(void *)(v19 + 64)  = v17;
  id v57 = v17;
  id v35 = objc_msgSend(v4, sel_leadingAnchor);
  id v36 = objc_msgSend(v0, sel_contentView);
  id v37 = objc_msgSend(v36, sel_leadingAnchor);

  id v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v37, 16.0);
  *(void *)(v19 + 72)  = v38;
  id v39 = objc_msgSend(v0, sel_contentView);
  id v40 = objc_msgSend(v39, sel_trailingAnchor);

  id v41 = objc_msgSend(v4, sel_trailingAnchor);
  id v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v41, 16.0);

  *(void *)(v19 + 80)  = v42;
  id v43 = sub_241DA734C();
  id v44 = objc_msgSend(v43, sel_topAnchor);

  id v45 = objc_msgSend(v2, sel_bottomAnchor);
  id v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v45, 7.0);

  *(void *)(v19 + 88)  = v46;
  id v47 = sub_241DA734C();
  id v48 = objc_msgSend(v47, sel_leadingAnchor);

  id v49 = objc_msgSend(v0, sel_contentView);
  id v50 = objc_msgSend(v49, sel_leadingAnchor);

  id v51 = objc_msgSend(v48, (SEL)&off_2650F7300 + 7, v50, 16.0);
  *(void *)(v19 + 96)  = v51;
  id v52 = objc_msgSend(v0, sel_contentView);
  id v53 = objc_msgSend(v52, sel_trailingAnchor);

  id v54 = sub_241DA734C();
  id v55 = objc_msgSend(v54, sel_trailingAnchor);

  id v56 = objc_msgSend(v53, (SEL)&off_2650F7300 + 7, v55, 16.0);
  *(void *)(v19 + 104)  = v56;
  sub_241DAAB10();
  sub_241D28BF4(0, (unint64_t *)&qword_268D4B678);
  id v60 = (id)sub_241DAAAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v58, sel_activateConstraints_, v60);
}

void sub_241DA7ED4()
{
  uint64_t v1 = v0 + qword_268D4D430;
  swift_beginAccess();
  sub_241D2AED8(v1, (uint64_t)v21);
  if (!v22)
  {
    sub_241D2AE50((uint64_t)v21);
    goto LABEL_8;
  }
  sub_241D2E674();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    id v9 = *(void **)(v0 + qword_268D4D438);
    id v10 = (void *)sub_241DAA950();
    objc_msgSend(v9, sel_setText_, v10);

LABEL_11:
    id v11 = sub_241DA734C();
    objc_msgSend(v11, sel_setHidden_, 0);

    objc_msgSend(*(id *)(v0 + qword_268D4D440), sel_setHidden_, 1);
    objc_msgSend(*(id *)(v0 + qword_268D4D458), sel_setActive_, 1);
    objc_msgSend(*(id *)(v0 + qword_268D4D450), sel_setActive_, 0);
    return;
  }
  uint64_t v2 = *(void **)(v0 + qword_268D4D438);
  sub_241D28E64(v18);
  id v3 = (void *)sub_241DAA950();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v3);

  id v4 = sub_241D1F440(v18);
  if (!v4)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  id v5 = v4;
  id v6 = sub_241D3A9E4(v18);
  if (!v6)
  {

    goto LABEL_10;
  }
  id v7 = v6;
  if (v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v8 = sub_241DA734C();
    objc_msgSend(v8, sel_setHidden_, 0);

    objc_msgSend(*(id *)(v0 + qword_268D4D440), sel_setHidden_, 1);
    objc_msgSend(*(id *)(v0 + qword_268D4D458), sel_setActive_, 1);
    objc_msgSend(*(id *)(v0 + qword_268D4D450), sel_setActive_, 0);
LABEL_14:

    return;
  }
  id v12 = objc_msgSend(v5, sel_minimum);
  objc_msgSend(v12, sel_doubleValueForUnit_, v7);
  double v14 = v13;

  id v15 = objc_msgSend(v5, sel_maximum);
  objc_msgSend(v15, sel_doubleValueForUnit_, v7);
  double v17 = v16;

  if (v14 <= v17)
  {
    sub_241DA82D8(v14, v17, v19);
    sub_241DA81D0(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
}

id sub_241DA81D0(unsigned __int8 a1)
{
  uint64_t v2 = *(char **)(v1 + qword_268D4D440);
  id v3 = &v2[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits];
  if (a1 > 1u)
  {
    swift_beginAccess();
    *(void *)id v3 = 0;
    objc_msgSend(v2, sel_setNeedsDisplay);
    id v5 = &v2[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
    swift_beginAccess();
    *id v5 = 0;
  }
  else
  {
    swift_beginAccess();
    *(void *)id v3 = 2;
    objc_msgSend(v2, sel_setNeedsDisplay);
    id v4 = &v2[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
    swift_beginAccess();
    *id v4 = 1;
  }
  return objc_msgSend(v2, sel_setNeedsDisplay);
}

id sub_241DA82D8(double a1, double a2, double a3)
{
  id v7 = *(char **)(v3 + qword_268D4D440);
  objc_msgSend(v7, sel_setHidden_, 0);
  id v8 = sub_241DA734C();
  objc_msgSend(v8, sel_setHidden_, 1);

  id v9 = (double *)&v7[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  swift_beginAccess();
  *id v9 = a1;
  v9[1]  = a2;
  uint64_t v10 = OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value;
  double v11 = *(double *)&v7[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value];
  if (v11 < a1 || v11 > a2)
  {
    if (v11 <= a1) {
      double v11 = a1;
    }
    if (v11 > a2) {
      double v11 = a2;
    }
    *(double *)&v7[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value]  = v11;
  }
  objc_msgSend(v7, sel_setNeedsDisplay);
  double v13 = *v9;
  if (*v9 < a3) {
    double v13 = a3;
  }
  if (v9[1] < v13) {
    double v13 = v9[1];
  }
  *(double *)&v7[v10]  = v13;
  objc_msgSend(v7, sel_setNeedsDisplay);
  objc_msgSend(*(id *)(v3 + qword_268D4D458), sel_setActive_, 0);
  return objc_msgSend(*(id *)(v3 + qword_268D4D450), sel_setActive_, 1);
}

void sub_241DA841C()
{
  sub_241D2AE50(v0 + qword_268D4D430);

  uint64_t v1 = *(void **)(v0 + qword_268D4D458);
}

id sub_241DA849C()
{
  v2.receiver  = v0;
  v2.super_class  = (Class)type metadata accessor for VisionPrescriptionSingleRangeCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_241DA84D4(uint64_t a1)
{
  sub_241D2AE50(a1 + qword_268D4D430);

  objc_super v2 = *(void **)(a1 + qword_268D4D458);
}

uint64_t sub_241DA8560()
{
  return type metadata accessor for VisionPrescriptionSingleRangeCell();
}

uint64_t sub_241DA8568@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_268D4D430;
  swift_beginAccess();
  return sub_241D2AED8(v3, a1);
}

uint64_t sub_241DA85BC(uint64_t a1)
{
  uint64_t v3 = v1 + qword_268D4D430;
  swift_beginAccess();
  sub_241D2ADC0(a1, v3);
  swift_endAccess();
  sub_241DA7ED4();
  return sub_241D2AE50(a1);
}

void (*sub_241DA862C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24)  = v1;
  swift_beginAccess();
  return sub_241DA868C;
}

void sub_241DA868C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_241DA7ED4();
  }
}

void sub_241DA86C0()
{
  uint64_t v1 = v0;
  objc_super v2 = &v0[qword_268D4D430];
  *(_OWORD *)objc_super v2 = 0u;
  *((_OWORD *)v2 + 1)  = 0u;
  *((void *)v2 + 4)  = 0;
  uint64_t v3 = qword_268D4D438;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241D28BF4(0, (unint64_t *)&unk_268D4BC70);
  id v5 = (void *)sub_241DAADA0();
  objc_msgSend(v4, sel_setFont_, v5);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(void *)&v1[v3]  = v4;
  uint64_t v6 = qword_268D4D440;
  id v7 = objc_allocWithZone((Class)type metadata accessor for RangeView());
  id v8 = RangeView.init(range:value:)(0.0, 1.0, 0.0);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v6]  = v8;
  *(void *)&v1[qword_268D4D448]  = 0;
  *(void *)&v1[qword_268D4D450]  = 0;
  *(void *)&v1[qword_268D4D458]  = 0;

  sub_241DAB080();
  __break(1u);
}

uint64_t initializeWithCopy for VisionPrescriptionSingleRangeItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1  = *(void *)a2;
  *(void *)(a1 + 8)  = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16)  = *(void *)(a2 + 16);
  *(void *)(a1 + 24)  = v4;
  *(unsigned char *)(a1 + 32)  = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36)  = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40)  = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VisionPrescriptionSingleRangeItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1  = *(void *)a2;
  *(void *)(a1 + 8)  = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16)  = *(void *)(a2 + 16);
  *(void *)(a1 + 24)  = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32)  = *(unsigned char *)(a2 + 32);
  int v4 = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40)  = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 36)  = v4;
  return a1;
}

__n128 initializeWithTake for VisionPrescriptionSingleRangeItem(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25)  = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1  = result;
  *(_OWORD *)(a1 + 16)  = v3;
  return result;
}

uint64_t assignWithTake for VisionPrescriptionSingleRangeItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1  = *(void *)a2;
  *(void *)(a1 + 8)  = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16)  = *(void *)(a2 + 16);
  *(void *)(a1 + 24)  = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32)  = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36)  = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40)  = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionSingleRangeItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2)  = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionSingleRangeItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24)  = 0u;
    *(_OWORD *)(result + 8)  = 0u;
    *(unsigned char *)(result + 40)  = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41)  = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8)  = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41)  = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionSingleRangeItem()
{
  return &type metadata for VisionPrescriptionSingleRangeItem;
}

void sub_241DA8A6C(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_241DAAF10();
  *a1  = v7;
  id v8 = *a2;
  if (*a2)
  {
    void *v8 = v6;
    *a2  = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_241DA8B24(void *a1, uint64_t a2)
{
  uint64_t v45 = a2;
  uint64_t v3 = sub_241DAA2E0();
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  MEMORY[0x270FA5388](v4);
  id v43 = (char *)&v43 - v5;
  uint64_t v44 = sub_241DAA030();
  uint64_t v6 = *(void *)(v44 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v44);
  id v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  double v11 = (char *)&v43 - v10;
  uint64_t v47 = sub_241DAA040();
  uint64_t v46 = *(void *)(v47 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v47);
  double v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  double v16 = (char *)&v43 - v15;
  double v17 = a1;
  id v18 = objc_msgSend(a1, sel_identifier);
  uint64_t v19 = sub_241DAA990();
  uint64_t v21 = v20;

  if (v19 == 0xD000000000000022 && v21 == 0x8000000241DB2370)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    type metadata accessor for VisionPrescriptionDataTypeDetailConfigurationProvider();
    swift_initStackObject();
    sub_241D6F8E0(v17);
    uint64_t v23 = v45;
    uint64_t v49 = sub_241DA9F50();
    id v24 = v17;
    id v25 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    id v26 = v11;
    id v27 = v11;
    uint64_t v28 = v44;
    v25(v26, v23, v44);
    objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionRoomViewController());
    v25(v9, (uint64_t)v27, v28);
    id v29 = v24;
    uint64_t v30 = sub_241DAA0F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v27, v28);
    swift_release();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v47);
    return v30;
  }
  char v22 = sub_241DAB160();
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_5;
  }
  uint64_t v54 = 0;
  memset(v53, 0, sizeof(v53));
  sub_241DA92BC((uint64_t)v53, (uint64_t)&v50);
  if (v51)
  {
    sub_241D35720(&v50, (uint64_t)v52);
    sub_241D5CF1C(v52, v52[3]);
    sub_241DAA180();
    uint64_t v39 = v45;
    sub_241DA9F50();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v39, v44);
    objc_allocWithZone((Class)sub_241DAA100());
    id v40 = v17;
    uint64_t v30 = sub_241DAA0F0();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v47);
    sub_241DA9388((uint64_t)v53);
    sub_241D36E44((uint64_t)v52);
  }
  else
  {
    sub_241DA9388((uint64_t)&v50);
    id v32 = v43;
    sub_241DAA2B0();
    id v33 = v17;
    id v34 = sub_241DAA2D0();
    os_log_type_t v35 = sub_241DAAC10();
    if (os_log_type_enabled(v34, v35))
    {
      id v36 = (uint8_t *)swift_slowAlloc();
      id v37 = (void *)swift_slowAlloc();
      *(_DWORD *)id v36 = 138412290;
      v52[0]  = v33;
      id v38 = v33;
      sub_241DAAF10();
      *id v37 = v33;

      _os_log_impl(&dword_241D1C000, v34, v35, "[VisionAppPluginAppDelegate] No custom detail view controller or configuration provided for %@", v36, 0xCu);
      sub_241DA93E4();
      swift_arrayDestroy();
      MEMORY[0x24563A5D0](v37, -1, -1);
      MEMORY[0x24563A5D0](v36, -1, -1);
    }
    else
    {
    }
    uint64_t v42 = v48;
    uint64_t v41 = v49;

    (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v41);
    sub_241DA9388((uint64_t)v53);
    return 0;
  }
  return v30;
}

uint64_t sub_241DA92BC(uint64_t a1, uint64_t a2)
{
  sub_241DA9320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_241DA9320()
{
  if (!qword_268D4D470)
  {
    sub_241D2B54C(255, &qword_268D4D478);
    unint64_t v0 = sub_241DAAEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4D470);
    }
  }
}

uint64_t sub_241DA9388(uint64_t a1)
{
  sub_241DA9320();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241DA93E4()
{
  if (!qword_268D4B5E8)
  {
    sub_241DA943C();
    unint64_t v0 = sub_241DAAEF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D4B5E8);
    }
  }
}

unint64_t sub_241DA943C()
{
  unint64_t result = qword_268D4D3D0;
  if (!qword_268D4D3D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D4D3D0);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_241DA94A0()
{
  return MEMORY[0x270EEE0D0]();
}

uint64_t sub_241DA94B0()
{
  return MEMORY[0x270EEE188]();
}

uint64_t sub_241DA94C0()
{
  return MEMORY[0x270EEE1C8]();
}

uint64_t sub_241DA94D0()
{
  return MEMORY[0x270EEE208]();
}

uint64_t sub_241DA94E0()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_241DA94F0()
{
  return MEMORY[0x270EEE360]();
}

uint64_t sub_241DA9500()
{
  return MEMORY[0x270EEE388]();
}

uint64_t sub_241DA9510()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_241DA9520()
{
  return MEMORY[0x270EEE3F0]();
}

uint64_t sub_241DA9530()
{
  return MEMORY[0x270EEE408]();
}

uint64_t sub_241DA9540()
{
  return MEMORY[0x270EEE410]();
}

uint64_t sub_241DA9550()
{
  return MEMORY[0x270EEE4B0]();
}

uint64_t sub_241DA9560()
{
  return MEMORY[0x270EEE518]();
}

uint64_t sub_241DA9570()
{
  return MEMORY[0x270EEE610]();
}

uint64_t sub_241DA9580()
{
  return MEMORY[0x270EEE760]();
}

uint64_t sub_241DA9590()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_241DA95A0()
{
  return MEMORY[0x270EEEC10]();
}

uint64_t sub_241DA95B0()
{
  return MEMORY[0x270EEEC18]();
}

uint64_t sub_241DA95C0()
{
  return MEMORY[0x270EEEC20]();
}

uint64_t sub_241DA95D0()
{
  return MEMORY[0x270EEEC28]();
}

uint64_t sub_241DA95E0()
{
  return MEMORY[0x270EEEEC0]();
}

uint64_t sub_241DA95F0()
{
  return MEMORY[0x270EEEF48]();
}

uint64_t sub_241DA9600()
{
  return MEMORY[0x270FA1638]();
}

uint64_t sub_241DA9610()
{
  return MEMORY[0x270EEEFF8]();
}

uint64_t sub_241DA9620()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_241DA9630()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_241DA9640()
{
  return MEMORY[0x270EEFC88]();
}

uint64_t sub_241DA9650()
{
  return MEMORY[0x270EEFCA0]();
}

uint64_t sub_241DA9660()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_241DA9670()
{
  return MEMORY[0x270FA1650]();
}

uint64_t sub_241DA9680()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_241DA9690()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_241DA96A0()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_241DA96B0()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_241DA96C0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_241DA96D0()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_241DA96E0()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_241DA96F0()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_241DA9700()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_241DA9710()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_241DA9720()
{
  return MEMORY[0x270F31BC8]();
}

uint64_t sub_241DA9730()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_241DA9740()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_241DA9750()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_241DA9760()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_241DA9770()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_241DA9780()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_241DA9790()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_241DA97A0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_241DA97B0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_241DA97C0()
{
  return MEMORY[0x270EF0EE0]();
}

uint64_t sub_241DA97D0()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_241DA97E0()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_241DA97F0()
{
  return MEMORY[0x270EF1100]();
}

uint64_t sub_241DA9800()
{
  return MEMORY[0x270EF1350]();
}

uint64_t sub_241DA9810()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_241DA9820()
{
  return MEMORY[0x270EF16E0]();
}

uint64_t sub_241DA9830()
{
  return MEMORY[0x270EF1700]();
}

uint64_t sub_241DA9840()
{
  return MEMORY[0x270F816E8]();
}

uint64_t sub_241DA9850()
{
  return MEMORY[0x270F816F8]();
}

uint64_t sub_241DA9860()
{
  return MEMORY[0x270F81700]();
}

uint64_t sub_241DA9870()
{
  return MEMORY[0x270F81740]();
}

uint64_t sub_241DA9880()
{
  return MEMORY[0x270EF1738]();
}

uint64_t sub_241DA9890()
{
  return MEMORY[0x270EE57F8]();
}

uint64_t sub_241DA98A0()
{
  return MEMORY[0x270F32640]();
}

uint64_t sub_241DA98B0()
{
  return MEMORY[0x270F36178]();
}

uint64_t sub_241DA98C0()
{
  return MEMORY[0x270F36280]();
}

uint64_t sub_241DA98D0()
{
  return MEMORY[0x270F36288]();
}

uint64_t sub_241DA98E0()
{
  return MEMORY[0x270F36290]();
}

uint64_t sub_241DA98F0()
{
  return MEMORY[0x270F36298]();
}

uint64_t sub_241DA9900()
{
  return MEMORY[0x270F31E68]();
}

uint64_t sub_241DA9910()
{
  return MEMORY[0x270F32170]();
}

uint64_t sub_241DA9920()
{
  return MEMORY[0x270F321E0]();
}

uint64_t sub_241DA9930()
{
  return MEMORY[0x270F321E8]();
}

uint64_t sub_241DA9940()
{
  return MEMORY[0x270F32210]();
}

uint64_t sub_241DA9950()
{
  return MEMORY[0x270F32218]();
}

uint64_t sub_241DA9960()
{
  return MEMORY[0x270F32228]();
}

uint64_t sub_241DA9970()
{
  return MEMORY[0x270F32230]();
}

uint64_t sub_241DA9990()
{
  return MEMORY[0x270F322E8]();
}

uint64_t sub_241DA99A0()
{
  return MEMORY[0x270F322F8]();
}

uint64_t sub_241DA99B0()
{
  return MEMORY[0x270F32470]();
}

uint64_t sub_241DA99C0()
{
  return MEMORY[0x270F32780]();
}

uint64_t sub_241DA99D0()
{
  return MEMORY[0x270F328A8]();
}

uint64_t sub_241DA99E0()
{
  return MEMORY[0x270F328B8]();
}

uint64_t sub_241DA99F0()
{
  return MEMORY[0x270F32970]();
}

uint64_t sub_241DA9A00()
{
  return MEMORY[0x270F32978]();
}

uint64_t sub_241DA9A10()
{
  return MEMORY[0x270F32BD0]();
}

uint64_t sub_241DA9A20()
{
  return MEMORY[0x270F32BE0]();
}

uint64_t sub_241DA9A30()
{
  return MEMORY[0x270F32BE8]();
}

uint64_t sub_241DA9A40()
{
  return MEMORY[0x270F32C10]();
}

uint64_t sub_241DA9A50()
{
  return MEMORY[0x270F32C18]();
}

uint64_t sub_241DA9A60()
{
  return MEMORY[0x270F32C20]();
}

uint64_t sub_241DA9A70()
{
  return MEMORY[0x270F32C90]();
}

uint64_t sub_241DA9A80()
{
  return MEMORY[0x270F32C98]();
}

uint64_t sub_241DA9A90()
{
  return MEMORY[0x270F32CA0]();
}

uint64_t sub_241DA9AA0()
{
  return MEMORY[0x270F32D60]();
}

uint64_t sub_241DA9AB0()
{
  return MEMORY[0x270F32D68]();
}

uint64_t sub_241DA9AC0()
{
  return MEMORY[0x270F32D80]();
}

uint64_t sub_241DA9AD0()
{
  return MEMORY[0x270F32DA0]();
}

uint64_t sub_241DA9AE0()
{
  return MEMORY[0x270F32DA8]();
}

uint64_t sub_241DA9AF0()
{
  return MEMORY[0x270F32FD0]();
}

uint64_t sub_241DA9B00()
{
  return MEMORY[0x270F32FE0]();
}

uint64_t sub_241DA9B10()
{
  return MEMORY[0x270F33000]();
}

uint64_t sub_241DA9B20()
{
  return MEMORY[0x270F33008]();
}

uint64_t sub_241DA9B30()
{
  return MEMORY[0x270F33020]();
}

uint64_t sub_241DA9B40()
{
  return MEMORY[0x270F33088]();
}

uint64_t sub_241DA9B50()
{
  return MEMORY[0x270F33090]();
}

uint64_t sub_241DA9B60()
{
  return MEMORY[0x270F330A8]();
}

uint64_t sub_241DA9B70()
{
  return MEMORY[0x270F330B0]();
}

uint64_t sub_241DA9B80()
{
  return MEMORY[0x270F332B0]();
}

uint64_t sub_241DA9B90()
{
  return MEMORY[0x270F33358]();
}

uint64_t sub_241DA9BA0()
{
  return MEMORY[0x270F33360]();
}

uint64_t sub_241DA9BB0()
{
  return MEMORY[0x270F333D0]();
}

uint64_t sub_241DA9BC0()
{
  return MEMORY[0x270F333D8]();
}

uint64_t sub_241DA9BD0()
{
  return MEMORY[0x270F333E0]();
}

uint64_t sub_241DA9BE0()
{
  return MEMORY[0x270F33528]();
}

uint64_t sub_241DA9BF0()
{
  return MEMORY[0x270F33530]();
}

uint64_t sub_241DA9C00()
{
  return MEMORY[0x270F33538]();
}

uint64_t sub_241DA9C10()
{
  return MEMORY[0x270F33540]();
}

uint64_t sub_241DA9C20()
{
  return MEMORY[0x270F33548]();
}

uint64_t sub_241DA9C30()
{
  return MEMORY[0x270F33608]();
}

uint64_t sub_241DA9C40()
{
  return MEMORY[0x270F33630]();
}

uint64_t sub_241DA9C50()
{
  return MEMORY[0x270F33638]();
}

uint64_t sub_241DA9C60()
{
  return MEMORY[0x270F33640]();
}

uint64_t sub_241DA9C70()
{
  return MEMORY[0x270F33678]();
}

uint64_t sub_241DA9C80()
{
  return MEMORY[0x270F33690]();
}

uint64_t sub_241DA9C90()
{
  return MEMORY[0x270F33698]();
}

uint64_t sub_241DA9CA0()
{
  return MEMORY[0x270F336B8]();
}

uint64_t sub_241DA9CB0()
{
  return MEMORY[0x270F33748]();
}

uint64_t sub_241DA9CC0()
{
  return MEMORY[0x270F337A0]();
}

uint64_t sub_241DA9CD0()
{
  return MEMORY[0x270F337A8]();
}

uint64_t sub_241DA9CE0()
{
  return MEMORY[0x270F337B0]();
}

uint64_t sub_241DA9CF0()
{
  return MEMORY[0x270F337B8]();
}

uint64_t sub_241DA9D00()
{
  return MEMORY[0x270F337C0]();
}

uint64_t sub_241DA9D10()
{
  return MEMORY[0x270F337D8]();
}

uint64_t sub_241DA9D20()
{
  return MEMORY[0x270F337E8]();
}

uint64_t sub_241DA9D30()
{
  return MEMORY[0x270F337F0]();
}

uint64_t sub_241DA9D40()
{
  return MEMORY[0x270F337F8]();
}

uint64_t sub_241DA9D50()
{
  return MEMORY[0x270F33800]();
}

uint64_t sub_241DA9D60()
{
  return MEMORY[0x270F33898]();
}

uint64_t sub_241DA9D70()
{
  return MEMORY[0x270F338A0]();
}

uint64_t sub_241DA9D80()
{
  return MEMORY[0x270F338A8]();
}

uint64_t sub_241DA9D90()
{
  return MEMORY[0x270F338B0]();
}

uint64_t sub_241DA9DA0()
{
  return MEMORY[0x270F338C0]();
}

uint64_t sub_241DA9DB0()
{
  return MEMORY[0x270F338C8]();
}

uint64_t sub_241DA9DC0()
{
  return MEMORY[0x270F338D0]();
}

uint64_t sub_241DA9DD0()
{
  return MEMORY[0x270F338D8]();
}

uint64_t sub_241DA9DE0()
{
  return MEMORY[0x270F338E8]();
}

uint64_t sub_241DA9DF0()
{
  return MEMORY[0x270F338F8]();
}

uint64_t sub_241DA9E00()
{
  return MEMORY[0x270F33900]();
}

uint64_t sub_241DA9E10()
{
  return MEMORY[0x270F33960]();
}

uint64_t sub_241DA9E20()
{
  return MEMORY[0x270F33968]();
}

uint64_t sub_241DA9E30()
{
  return MEMORY[0x270F33970]();
}

uint64_t sub_241DA9E40()
{
  return MEMORY[0x270F339A0]();
}

uint64_t sub_241DA9E50()
{
  return MEMORY[0x270F339C0]();
}

uint64_t sub_241DA9E60()
{
  return MEMORY[0x270F339C8]();
}

uint64_t sub_241DA9E70()
{
  return MEMORY[0x270F339D0]();
}

uint64_t sub_241DA9E80()
{
  return MEMORY[0x270F33AA0]();
}

uint64_t sub_241DA9E90()
{
  return MEMORY[0x270F33AA8]();
}

uint64_t sub_241DA9EA0()
{
  return MEMORY[0x270F33AC0]();
}

uint64_t sub_241DA9EB0()
{
  return MEMORY[0x270F33AC8]();
}

uint64_t sub_241DA9EC0()
{
  return MEMORY[0x270F33AD0]();
}

uint64_t sub_241DA9ED0()
{
  return MEMORY[0x270F33AD8]();
}

uint64_t sub_241DA9EE0()
{
  return MEMORY[0x270F33B40]();
}

uint64_t sub_241DA9EF0()
{
  return MEMORY[0x270F33B48]();
}

uint64_t sub_241DA9F00()
{
  return MEMORY[0x270F33BC8]();
}

uint64_t sub_241DA9F10()
{
  return MEMORY[0x270F33C50]();
}

uint64_t sub_241DA9F20()
{
  return MEMORY[0x270F33C58]();
}

uint64_t sub_241DA9F30()
{
  return MEMORY[0x270F33C60]();
}

uint64_t sub_241DA9F40()
{
  return MEMORY[0x270F33C68]();
}

uint64_t sub_241DA9F50()
{
  return MEMORY[0x270F33CC0]();
}

uint64_t sub_241DA9F60()
{
  return MEMORY[0x270F33CC8]();
}

uint64_t sub_241DA9F70()
{
  return MEMORY[0x270F33CD8]();
}

uint64_t sub_241DA9F80()
{
  return MEMORY[0x270F33D38]();
}

uint64_t sub_241DA9F90()
{
  return MEMORY[0x270F33DD8]();
}

uint64_t sub_241DA9FA0()
{
  return MEMORY[0x270F33E18]();
}

uint64_t sub_241DA9FB0()
{
  return MEMORY[0x270F33E28]();
}

uint64_t sub_241DA9FC0()
{
  return MEMORY[0x270F33E58]();
}

uint64_t sub_241DA9FD0()
{
  return MEMORY[0x270F33E60]();
}

uint64_t sub_241DA9FE0()
{
  return MEMORY[0x270F33E70]();
}

uint64_t sub_241DA9FF0()
{
  return MEMORY[0x270F33E78]();
}

uint64_t sub_241DAA000()
{
  return MEMORY[0x270F33E80]();
}

uint64_t sub_241DAA010()
{
  return MEMORY[0x270F33ED8]();
}

uint64_t sub_241DAA020()
{
  return MEMORY[0x270F33EE0]();
}

uint64_t sub_241DAA030()
{
  return MEMORY[0x270F33F00]();
}

uint64_t sub_241DAA040()
{
  return MEMORY[0x270F33F08]();
}

uint64_t sub_241DAA050()
{
  return MEMORY[0x270F33F78]();
}

uint64_t sub_241DAA060()
{
  return MEMORY[0x270F33F80]();
}

uint64_t sub_241DAA070()
{
  return MEMORY[0x270F33FA0]();
}

uint64_t sub_241DAA080()
{
  return MEMORY[0x270F33FB0]();
}

uint64_t sub_241DAA090()
{
  return MEMORY[0x270F33FB8]();
}

uint64_t sub_241DAA0A0()
{
  return MEMORY[0x270F33FC0]();
}

uint64_t sub_241DAA0B0()
{
  return MEMORY[0x270F33FC8]();
}

uint64_t sub_241DAA0C0()
{
  return MEMORY[0x270F33FD0]();
}

uint64_t sub_241DAA0D0()
{
  return MEMORY[0x270F33FD8]();
}

uint64_t sub_241DAA0E0()
{
  return MEMORY[0x270F34008]();
}

uint64_t sub_241DAA0F0()
{
  return MEMORY[0x270F34010]();
}

uint64_t sub_241DAA100()
{
  return MEMORY[0x270F34038]();
}

uint64_t sub_241DAA110()
{
  return MEMORY[0x270F342A8]();
}

uint64_t sub_241DAA120()
{
  return MEMORY[0x270F342C0]();
}

uint64_t sub_241DAA130()
{
  return MEMORY[0x270F342C8]();
}

uint64_t sub_241DAA140()
{
  return MEMORY[0x270F342D0]();
}

uint64_t sub_241DAA150()
{
  return MEMORY[0x270F343F0]();
}

uint64_t sub_241DAA160()
{
  return MEMORY[0x270F34480]();
}

uint64_t sub_241DAA170()
{
  return MEMORY[0x270F344A0]();
}

uint64_t sub_241DAA180()
{
  return MEMORY[0x270F34648]();
}

uint64_t sub_241DAA190()
{
  return MEMORY[0x270F34650]();
}

uint64_t sub_241DAA1A0()
{
  return MEMORY[0x270F34730]();
}

uint64_t sub_241DAA1B0()
{
  return MEMORY[0x270F34740]();
}

uint64_t sub_241DAA1C0()
{
  return MEMORY[0x270F34778]();
}

uint64_t sub_241DAA1D0()
{
  return MEMORY[0x270F34970]();
}

uint64_t sub_241DAA1E0()
{
  return MEMORY[0x270F34998]();
}

uint64_t sub_241DAA1F0()
{
  return MEMORY[0x270F35060]();
}

uint64_t sub_241DAA200()
{
  return MEMORY[0x270F35068]();
}

uint64_t sub_241DAA210()
{
  return MEMORY[0x270F35078]();
}

uint64_t sub_241DAA220()
{
  return MEMORY[0x270FA16A8]();
}

uint64_t sub_241DAA230()
{
  return MEMORY[0x270FA17A0]();
}

uint64_t sub_241DAA240()
{
  return MEMORY[0x270FA17B8]();
}

uint64_t sub_241DAA250()
{
  return MEMORY[0x270FA1868]();
}

uint64_t sub_241DAA260()
{
  return MEMORY[0x270FA1938]();
}

uint64_t sub_241DAA270()
{
  return MEMORY[0x270FA1948]();
}

uint64_t sub_241DAA280()
{
  return MEMORY[0x270F36E38]();
}

uint64_t sub_241DAA290()
{
  return MEMORY[0x270F36E78]();
}

uint64_t sub_241DAA2A0()
{
  return MEMORY[0x270F36E90]();
}

uint64_t sub_241DAA2B0()
{
  return MEMORY[0x270F36E98]();
}

uint64_t sub_241DAA2C0()
{
  return MEMORY[0x270F36EB0]();
}

uint64_t sub_241DAA2D0()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_241DAA2E0()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_241DAA2F0()
{
  return MEMORY[0x270F81950]();
}

uint64_t sub_241DAA300()
{
  return MEMORY[0x270F81958]();
}

uint64_t sub_241DAA310()
{
  return MEMORY[0x270F81960]();
}

uint64_t sub_241DAA320()
{
  return MEMORY[0x270F81978]();
}

uint64_t sub_241DAA330()
{
  return MEMORY[0x270F81990]();
}

uint64_t sub_241DAA340()
{
  return MEMORY[0x270F819A8]();
}

uint64_t sub_241DAA350()
{
  return MEMORY[0x270F819B0]();
}

uint64_t sub_241DAA360()
{
  return MEMORY[0x270F819B8]();
}

uint64_t sub_241DAA370()
{
  return MEMORY[0x270F819D0]();
}

uint64_t sub_241DAA380()
{
  return MEMORY[0x270F81CE8]();
}

uint64_t sub_241DAA390()
{
  return MEMORY[0x270F81D10]();
}

uint64_t sub_241DAA3A0()
{
  return MEMORY[0x270F81D48]();
}

uint64_t sub_241DAA3B0()
{
  return MEMORY[0x270F81D58]();
}

uint64_t sub_241DAA3C0()
{
  return MEMORY[0x270F81D68]();
}

uint64_t sub_241DAA3D0()
{
  return MEMORY[0x270F81DB8]();
}

uint64_t sub_241DAA3E0()
{
  return MEMORY[0x270F81DC8]();
}

uint64_t sub_241DAA3F0()
{
  return MEMORY[0x270F81DF0]();
}

uint64_t sub_241DAA400()
{
  return MEMORY[0x270F81E50]();
}

uint64_t sub_241DAA410()
{
  return MEMORY[0x270F81E68]();
}

uint64_t sub_241DAA420()
{
  return MEMORY[0x270F81E88]();
}

uint64_t sub_241DAA430()
{
  return MEMORY[0x270F81EA0]();
}

uint64_t sub_241DAA440()
{
  return MEMORY[0x270F81EB0]();
}

uint64_t sub_241DAA450()
{
  return MEMORY[0x270F81ED8]();
}

uint64_t sub_241DAA460()
{
  return MEMORY[0x270F81EE0]();
}

uint64_t sub_241DAA470()
{
  return MEMORY[0x270EE3840]();
}

uint64_t sub_241DAA480()
{
  return MEMORY[0x270EE3848]();
}

uint64_t sub_241DAA490()
{
  return MEMORY[0x270EE3850]();
}

uint64_t sub_241DAA4A0()
{
  return MEMORY[0x270EE3858]();
}

uint64_t sub_241DAA4B0()
{
  return MEMORY[0x270EE3880]();
}

uint64_t sub_241DAA4C0()
{
  return MEMORY[0x270EE38B0]();
}

uint64_t sub_241DAA4D0()
{
  return MEMORY[0x270EE3900]();
}

uint64_t sub_241DAA4E0()
{
  return MEMORY[0x270EE3908]();
}

uint64_t sub_241DAA4F0()
{
  return MEMORY[0x270F32508]();
}

uint64_t sub_241DAA500()
{
  return MEMORY[0x270EE3930]();
}

uint64_t sub_241DAA510()
{
  return MEMORY[0x270EE3950]();
}

uint64_t sub_241DAA520()
{
  return MEMORY[0x270EE3968]();
}

uint64_t sub_241DAA530()
{
  return MEMORY[0x270EE3988]();
}

uint64_t sub_241DAA540()
{
  return MEMORY[0x270EE39A8]();
}

uint64_t sub_241DAA550()
{
  return MEMORY[0x270EE3A48]();
}

uint64_t sub_241DAA560()
{
  return MEMORY[0x270EE3A90]();
}

uint64_t sub_241DAA570()
{
  return MEMORY[0x270EE3AD0]();
}

uint64_t sub_241DAA580()
{
  return MEMORY[0x270EE3AD8]();
}

uint64_t sub_241DAA590()
{
  return MEMORY[0x270EE3B50]();
}

uint64_t sub_241DAA5A0()
{
  return MEMORY[0x270EE3B60]();
}

uint64_t sub_241DAA5B0()
{
  return MEMORY[0x270EE3B98]();
}

uint64_t sub_241DAA5C0()
{
  return MEMORY[0x270EE3C88]();
}

uint64_t sub_241DAA5D0()
{
  return MEMORY[0x270EE3C98]();
}

uint64_t sub_241DAA5E0()
{
  return MEMORY[0x270EE3CA0]();
}

uint64_t sub_241DAA5F0()
{
  return MEMORY[0x270EE3CA8]();
}

uint64_t sub_241DAA600()
{
  return MEMORY[0x270EE3CB8]();
}

uint64_t sub_241DAA610()
{
  return MEMORY[0x270EE3D38]();
}

uint64_t sub_241DAA620()
{
  return MEMORY[0x270EE3D40]();
}

uint64_t sub_241DAA630()
{
  return MEMORY[0x270EE3D50]();
}

uint64_t sub_241DAA640()
{
  return MEMORY[0x270EE3D58]();
}

uint64_t sub_241DAA650()
{
  return MEMORY[0x270EE3D68]();
}

uint64_t sub_241DAA660()
{
  return MEMORY[0x270EE3D78]();
}

uint64_t sub_241DAA670()
{
  return MEMORY[0x270EE3D98]();
}

uint64_t sub_241DAA680()
{
  return MEMORY[0x270EE3DA0]();
}

uint64_t sub_241DAA690()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t sub_241DAA6A0()
{
  return MEMORY[0x270EE3DB0]();
}

uint64_t sub_241DAA6B0()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_241DAA6C0()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_241DAA6D0()
{
  return MEMORY[0x270EE3DF0]();
}

uint64_t sub_241DAA6E0()
{
  return MEMORY[0x270F32510]();
}

uint64_t sub_241DAA6F0()
{
  return MEMORY[0x270F32518]();
}

uint64_t sub_241DAA700()
{
  return MEMORY[0x270F34CD8]();
}

uint64_t sub_241DAA710()
{
  return MEMORY[0x270EE3E00]();
}

uint64_t sub_241DAA720()
{
  return MEMORY[0x270EE3E08]();
}

uint64_t sub_241DAA730()
{
  return MEMORY[0x270EE3E18]();
}

uint64_t sub_241DAA740()
{
  return MEMORY[0x270EE3E50]();
}

uint64_t sub_241DAA750()
{
  return MEMORY[0x270EE3E78]();
}

uint64_t sub_241DAA760()
{
  return MEMORY[0x270EE3E98]();
}

uint64_t sub_241DAA770()
{
  return MEMORY[0x270EE3EA0]();
}

uint64_t sub_241DAA780()
{
  return MEMORY[0x270EE3EC0]();
}

uint64_t sub_241DAA790()
{
  return MEMORY[0x270EE3F08]();
}

uint64_t sub_241DAA7A0()
{
  return MEMORY[0x270EE3F68]();
}

uint64_t sub_241DAA7B0()
{
  return MEMORY[0x270EE3F78]();
}

uint64_t sub_241DAA7C0()
{
  return MEMORY[0x270EE3FB0]();
}

uint64_t sub_241DAA7D0()
{
  return MEMORY[0x270EE3FD8]();
}

uint64_t sub_241DAA7E0()
{
  return MEMORY[0x270EE3FE0]();
}

uint64_t sub_241DAA7F0()
{
  return MEMORY[0x270EE3FE8]();
}

uint64_t sub_241DAA800()
{
  return MEMORY[0x270EE3FF0]();
}

uint64_t sub_241DAA810()
{
  return MEMORY[0x270EE4008]();
}

uint64_t sub_241DAA820()
{
  return MEMORY[0x270EE4030]();
}

uint64_t sub_241DAA830()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_241DAA840()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_241DAA850()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_241DAA860()
{
  return MEMORY[0x270FA0BA8]();
}

uint64_t sub_241DAA870()
{
  return MEMORY[0x270FA0BF0]();
}

uint64_t sub_241DAA880()
{
  return MEMORY[0x270F37F50]();
}

uint64_t sub_241DAA890()
{
  return MEMORY[0x270EFA360]();
}

uint64_t sub_241DAA8A0()
{
  return MEMORY[0x270EFA378]();
}

uint64_t sub_241DAA8B0()
{
  return MEMORY[0x270EFA380]();
}

uint64_t sub_241DAA8C0()
{
  return MEMORY[0x270EFA398]();
}

uint64_t sub_241DAA8D0()
{
  return MEMORY[0x270EFA3C8]();
}

uint64_t sub_241DAA8E0()
{
  return MEMORY[0x270EFA3E0]();
}

uint64_t sub_241DAA8F0()
{
  return MEMORY[0x270EFA488]();
}

uint64_t sub_241DAA900()
{
  return MEMORY[0x270EFA4B8]();
}

uint64_t sub_241DAA910()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_241DAA920()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_241DAA930()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_241DAA940()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_241DAA950()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_241DAA960()
{
  return MEMORY[0x270EF19B8]();
}

uint64_t sub_241DAA970()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_241DAA980()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_241DAA990()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_241DAA9A0()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_241DAA9B0()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_241DAA9C0()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_241DAA9D0()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_241DAA9E0()
{
  return MEMORY[0x270F9D668]();
}

uint64_t sub_241DAA9F0()
{
  return MEMORY[0x270F32530]();
}

uint64_t sub_241DAAA00()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_241DAAA10()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_241DAAA20()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_241DAAA30()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_241DAAA40()
{
  return MEMORY[0x270F9D788]();
}

uint64_t sub_241DAAA50()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_241DAAA60()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_241DAAA70()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_241DAAA80()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_241DAAA90()
{
  return MEMORY[0x270F9D808]();
}

uint64_t sub_241DAAAA0()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_241DAAAB0()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_241DAAAC0()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_241DAAAD0()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_241DAAAE0()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_241DAAAF0()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_241DAAB00()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_241DAAB10()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_241DAAB20()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_241DAAB30()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_241DAAB40()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_241DAAB50()
{
  return MEMORY[0x270EF1C18]();
}

uint64_t sub_241DAAB60()
{
  return MEMORY[0x270EF1C48]();
}

uint64_t sub_241DAAB70()
{
  return MEMORY[0x270F34D10]();
}

uint64_t sub_241DAAB80()
{
  return MEMORY[0x270EE5888]();
}

uint64_t sub_241DAAB90()
{
  return MEMORY[0x270F35138]();
}

uint64_t sub_241DAABA0()
{
  return MEMORY[0x270F35148]();
}

uint64_t sub_241DAABB0()
{
  return MEMORY[0x270F35150]();
}

uint64_t sub_241DAABC0()
{
  return MEMORY[0x270F35188]();
}

uint64_t sub_241DAABD0()
{
  return MEMORY[0x270F35198]();
}

uint64_t sub_241DAABE0()
{
  return MEMORY[0x270F351B0]();
}

uint64_t sub_241DAABF0()
{
  return MEMORY[0x270F351C8]();
}

uint64_t sub_241DAAC00()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_241DAAC10()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_241DAAC20()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_241DAAC30()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_241DAAC40()
{
  return MEMORY[0x270F34D40]();
}

uint64_t sub_241DAAC50()
{
  return MEMORY[0x270F34D48]();
}

uint64_t sub_241DAAC60()
{
  return MEMORY[0x270F34D50]();
}

uint64_t sub_241DAAC70()
{
  return MEMORY[0x270F34D60]();
}

uint64_t sub_241DAAC80()
{
  return MEMORY[0x270F34D78]();
}

uint64_t sub_241DAAC90()
{
  return MEMORY[0x270F34D80]();
}

uint64_t sub_241DAACA0()
{
  return MEMORY[0x270F34D88]();
}

uint64_t sub_241DAACB0()
{
  return MEMORY[0x270EF34B0]();
}

uint64_t sub_241DAACC0()
{
  return MEMORY[0x270FA0C20]();
}

uint64_t sub_241DAACD0()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_241DAACE0()
{
  return MEMORY[0x270FA0CD0]();
}

uint64_t sub_241DAACF0()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_241DAAD00()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_241DAAD10()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_241DAAD20()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_241DAAD30()
{
  return MEMORY[0x270F38150]();
}

uint64_t sub_241DAAD40()
{
  return MEMORY[0x270EF1FB8]();
}

uint64_t sub_241DAAD50()
{
  return MEMORY[0x270EF2010]();
}

uint64_t sub_241DAAD60()
{
  return MEMORY[0x270EF2020]();
}

uint64_t sub_241DAAD70()
{
  return MEMORY[0x270F826A8]();
}

uint64_t sub_241DAAD80()
{
  return MEMORY[0x270EFA518]();
}

uint64_t sub_241DAAD90()
{
  return MEMORY[0x270EFA520]();
}

uint64_t sub_241DAADA0()
{
  return MEMORY[0x270F34E68]();
}

uint64_t sub_241DAADB0()
{
  return MEMORY[0x270F828A8]();
}

uint64_t sub_241DAADC0()
{
  return MEMORY[0x270F34E70]();
}

uint64_t sub_241DAADD0()
{
  return MEMORY[0x270F828C8]();
}

uint64_t sub_241DAADE0()
{
  return MEMORY[0x270EF2170]();
}

uint64_t sub_241DAADF0()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_241DAAE00()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_241DAAE10()
{
  return MEMORY[0x270EF21A8]();
}

uint64_t sub_241DAAE20()
{
  return MEMORY[0x270F82960]();
}

uint64_t sub_241DAAE30()
{
  return MEMORY[0x270F82978]();
}

uint64_t sub_241DAAE40()
{
  return MEMORY[0x270F82998]();
}

uint64_t sub_241DAAE50()
{
  return MEMORY[0x270F829B0]();
}

uint64_t sub_241DAAE60()
{
  return MEMORY[0x270F829B8]();
}

uint64_t sub_241DAAE70()
{
  return MEMORY[0x270F829D8]();
}

uint64_t sub_241DAAE80()
{
  return MEMORY[0x270F82A78]();
}

uint64_t sub_241DAAE90()
{
  return MEMORY[0x270F82AD0]();
}

uint64_t sub_241DAAEA0()
{
  return MEMORY[0x270F82B00]();
}

uint64_t sub_241DAAEB0()
{
  return MEMORY[0x270F82B58]();
}

uint64_t sub_241DAAEC0()
{
  return MEMORY[0x270F82B60]();
}

uint64_t sub_241DAAED0()
{
  return MEMORY[0x270F9E3A0]();
}

uint64_t sub_241DAAEE0()
{
  return MEMORY[0x270F9E3B0]();
}

uint64_t sub_241DAAEF0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_241DAAF00()
{
  return MEMORY[0x270F9E510]();
}

uint64_t sub_241DAAF10()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_241DAAF20()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_241DAAF30()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_241DAAF40()
{
  return MEMORY[0x270EF2560]();
}

uint64_t sub_241DAAF50()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_241DAAF60()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_241DAAF70()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_241DAAF80()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_241DAAF90()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_241DAAFA0()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_241DAAFB0()
{
  return MEMORY[0x270F9E978]();
}

uint64_t sub_241DAAFC0()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_241DAAFD0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_241DAAFE0()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_241DAAFF0()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_241DAB000()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_241DAB010()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_241DAB020()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_241DAB030()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_241DAB040()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_241DAB050()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_241DAB060()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_241DAB070()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_241DAB080()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_241DAB090()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_241DAB0A0()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_241DAB0B0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_241DAB0C0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_241DAB0D0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_241DAB0E0()
{
  return MEMORY[0x270F9F0B8]();
}

uint64_t sub_241DAB0F0()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_241DAB110()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_241DAB120()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_241DAB130()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_241DAB140()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_241DAB150()
{
  return MEMORY[0x270F9F7C8]();
}

uint64_t sub_241DAB160()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_241DAB170()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_241DAB180()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_241DAB190()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_241DAB1A0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_241DAB1B0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_241DAB1C0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_241DAB1D0()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_241DAB1E0()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_241DAB1F0()
{
  return MEMORY[0x270FA0128]();
}

uint64_t ACCBakerCreate()
{
  return MEMORY[0x270F084C0]();
}

void CGContextAddEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextDrawPath(CGContextRef c, CGPathDrawingMode mode)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x270EE71A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x270EE7218]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t CGSVGDocumentCreateFromData()
{
  return MEMORY[0x270F23418]();
}

uint64_t HKDateFormatterFromTemplate()
{
  return MEMORY[0x270F381B8]();
}

uint64_t HKHealthUIFrameworkBundle()
{
  return MEMORY[0x270F38250]();
}

uint64_t HKImproveHealthAndActivityAnalyticsAllowed()
{
  return MEMORY[0x270EF3710]();
}

uint64_t HKLocalizedStringForDateAndTemplate()
{
  return MEMORY[0x270F38268]();
}

uint64_t HKVisionLeftRightShortLocalizedString()
{
  return MEMORY[0x270F383C0]();
}

uint64_t HKVisionPrescriptionGenerateGlassesPrescriptionSample()
{
  return MEMORY[0x270F383C8]();
}

uint64_t HKVisionPrescriptionImageOnlyLocalizedString()
{
  return MEMORY[0x270F383D0]();
}

uint64_t HKVisionPrescriptionSupportedImageUTTypeIdentifiers()
{
  return MEMORY[0x270F383D8]();
}

uint64_t HKVisionPrescriptionTypeDetailedLongLocalizedString()
{
  return MEMORY[0x270F383E0]();
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x270EF2C48]();
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x270F82D70]();
}

void UIGraphicsPopContext(void)
{
}

void UIGraphicsPushContext(CGContextRef context)
{
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x270FA0170]();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x270ED9340]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x270FA0270]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x270FA0350]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x270FA0358]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getFunctionTypeMetadata()
{
  return MEMORY[0x270FA0380]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}