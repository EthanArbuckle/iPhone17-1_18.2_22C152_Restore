void sub_241BA8878(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_241BA88DC(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_241CDBF50())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x245637160](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = objc_msgSend(v4, sel_profileIdentifier);
      v8 = (void *)sub_241CDB4D0();
      v9 = (void *)sub_241CD73C0();

      if (v7)
      {
        if (v9)
        {
          sub_241A313AC(0, (unint64_t *)&qword_268D42A90);
          id v10 = v7;
          char v11 = sub_241CDBB60();

          if (v11) {
            goto LABEL_17;
          }
          id v7 = v5;
        }
        else
        {
        }
      }
      else
      {
        if (!v9)
        {
LABEL_17:
          swift_bridgeObjectRelease();
          return v5;
        }

        id v7 = v9;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_20:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_241BA8A98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241BA8878(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241BA8B08(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v36 = sub_241CD75A0();
  uint64_t v3 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  v34 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  v35 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35A8C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v33 - v6;
  uint64_t v33 = sub_241CD7EC0();
  sub_241A35A8C(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v8 = sub_241CD73B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_241CEC2D0;
  unint64_t v13 = v12 + v11;
  v14 = *(void (**)(unint64_t, void, uint64_t))(v9 + 104);
  v14(v13, *MEMORY[0x263F45520], v8);
  v14(v13 + v10, *MEMORY[0x263F45538], v8);
  v14(v13 + 2 * v10, *MEMORY[0x263F454D0], v8);
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_241CEB710;
  *(void *)(v15 + 32) = objc_msgSend(self, sel_activitySummaryType);
  uint64_t v38 = v15;
  sub_241CDB2E0();
  uint64_t v16 = v38;
  uint64_t v17 = sub_241CD6810();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  sub_241A31064(0, &qword_26B030940);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_241CEB730;
  v19 = (void *)sub_241CD8C30();
  uint64_t v20 = sub_241CDB4D0();

  *(void *)(v18 + 32) = v20;
  v21 = (void *)MEMORY[0x2456331C0](v12, v16, v7, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241BA9FD8((uint64_t)v7, &qword_26B038F10, v34);
  uint64_t v22 = sub_241BA8F90(a1, v21, v37);
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v33 = v22;
    v34 = (uint64_t (*)(uint64_t))v21;
    v26 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
    uint64_t v24 = v3 + 16;
    v25 = v26;
    unint64_t v27 = v22 + ((*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64));
    uint64_t v28 = *(void *)(v24 + 56);
    uint64_t v30 = (uint64_t)v35;
    uint64_t v29 = v36;
    while (1)
    {
      v25(v30, v27, v29);
      uint64_t v31 = sub_241BA96C4(v30, v37);
      (*(void (**)(uint64_t, uint64_t))(v24 - 8))(v30, v29);
      if (v31 != 2) {
        break;
      }
      v27 += v28;
      if (!--v23)
      {

        goto LABEL_7;
      }
    }

    swift_bridgeObjectRelease();
  }
  else
  {

LABEL_7:
    swift_bridgeObjectRelease();
    return 2;
  }
  return v31;
}

uint64_t sub_241BA8F90(uint64_t a1, void *a2, uint64_t a3)
{
  v32[1] = a3;
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD75A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v32 - v11;
  sub_241CD7EC0();
  unint64_t v13 = (void *)MEMORY[0x2456331E0]();
  id v33 = a2;
  objc_msgSend(v13, sel_setPredicate_, a2);
  id v14 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v15 = (void *)sub_241CDB090();
  id v16 = objc_msgSend(v14, sel_initWithKey_ascending_, v15, 0);

  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_241CEB710;
  *(void *)(v17 + 32) = v16;
  v38[0] = v17;
  sub_241CDB2E0();
  sub_241BAA048();
  id v18 = v16;
  v19 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setSortDescriptors_, v19);

  sub_241CD8C10();
  sub_241A311E0(v38, v38[3]);
  uint64_t v20 = (void *)sub_241CD7260();
  id v36 = v13;
  unint64_t v21 = sub_241CDB990();

  sub_241A31190((uint64_t)v38);
  if (!(v21 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();

    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_241CDBF50();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_17;
  }
LABEL_3:
  v38[0] = MEMORY[0x263F8EE78];
  uint64_t result = sub_241A5223C(0, v22 & ~(v22 >> 63), 0);
  if ((v22 & 0x8000000000000000) == 0)
  {
    id v33 = v18;
    uint64_t v24 = v38[0];
    if ((v21 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v22; ++i)
      {
        MEMORY[0x245637160](i, v21);
        sub_241CD7420();
        v38[0] = v24;
        unint64_t v27 = *(void *)(v24 + 16);
        unint64_t v26 = *(void *)(v24 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_241A5223C(v26 > 1, v27 + 1, 1);
          uint64_t v24 = v38[0];
        }
        *(void *)(v24 + 16) = v27 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v27, v12, v6);
      }
    }
    else
    {
      uint64_t v28 = (id *)(v21 + 32);
      do
      {
        id v29 = *v28;
        sub_241CD7420();
        v38[0] = v24;
        unint64_t v31 = *(void *)(v24 + 16);
        unint64_t v30 = *(void *)(v24 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_241A5223C(v30 > 1, v31 + 1, 1);
          uint64_t v24 = v38[0];
        }
        *(void *)(v24 + 16) = v31 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v31, v10, v6);
        ++v28;
        --v22;
      }
      while (v22);
    }

    swift_bridgeObjectRelease();
    return v24;
  }
  __break(1u);
  return result;
}

uint64_t sub_241BA96C4(uint64_t a1, uint64_t a2)
{
  v33[1] = a2;
  uint64_t v3 = sub_241CD75A0();
  uint64_t v34 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  sub_241BA9EA0();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35A8C(0, &qword_26B0308B8, MEMORY[0x263F46A80], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v33 - v14;
  uint64_t v16 = sub_241CD7590();
  if (v17 >> 60 != 15)
  {
    uint64_t v28 = v16;
    unint64_t v29 = v17;
    sub_241CD6710();
    swift_allocObject();
    sub_241CD6700();
    sub_241CD9C20();
    sub_241BA9F34(&qword_26B0308C0, MEMORY[0x263F47090]);
    sub_241CD66F0();
    sub_241CD9C00();
    sub_241CD8940();
    sub_241BA9F7C((uint64_t)v12);
    uint64_t v30 = sub_241CD97B0();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v15, 1, v30) != 1)
    {
      uint64_t v26 = sub_241CD97A0();
      swift_release();
      swift_release();
      sub_241A54FC8(v28, v29);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v30);
      return v26;
    }
    swift_release();
    swift_release();
    sub_241A54FC8(v28, v29);
    sub_241BA9FD8((uint64_t)v15, &qword_26B0308B8, MEMORY[0x263F46A80]);
    return 2;
  }
  sub_241CDA130();
  uint64_t v18 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v5, a1, v3);
  v19 = sub_241CDA190();
  os_log_type_t v20 = sub_241CDB650();
  if (!os_log_type_enabled(v19, v20))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v36);
    return 2;
  }
  uint64_t v21 = swift_slowAlloc();
  v33[0] = swift_slowAlloc();
  uint64_t v38 = v33[0];
  *(_DWORD *)uint64_t v21 = 136315395;
  uint64_t v22 = sub_241CDC270();
  uint64_t v37 = sub_241A33FE4(v22, v23, &v38);
  sub_241CDBBF0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v21 + 12) = 2081;
  sub_241BA9F34(&qword_268D430E8, MEMORY[0x263F45630]);
  uint64_t v24 = sub_241CDC0D0();
  uint64_t v37 = sub_241A33FE4(v24, v25, &v38);
  sub_241CDBBF0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  _os_log_impl(&dword_241A23000, v19, v20, "%s No available user data in plugin feed item. %{private}s", (uint8_t *)v21, 0x16u);
  uint64_t v26 = 2;
  uint64_t v27 = v33[0];
  swift_arrayDestroy();
  MEMORY[0x245637F20](v27, -1, -1);
  MEMORY[0x245637F20](v21, -1, -1);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v36);
  return v26;
}

void sub_241BA9EA0()
{
  if (!qword_26B0385C0)
  {
    sub_241CD97C0();
    sub_241BA9F34(&qword_26B0385D8, MEMORY[0x263F46A88]);
    unint64_t v0 = sub_241CD8950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0385C0);
    }
  }
}

uint64_t sub_241BA9F34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BA9F7C(uint64_t a1)
{
  sub_241BA9EA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241BA9FD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A35A8C(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_241BAA048()
{
  unint64_t result = qword_26B038848;
  if (!qword_26B038848)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B038848);
  }
  return result;
}

uint64_t SummaryModelGenerationRequest.hkType.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD77C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  uint64_t v8 = sub_241CD7770();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

unint64_t SummaryModelGenerationRequest.logDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD77C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  unint64_t v9 = 0xD000000000000016;
  unint64_t v10 = 0x8000000241CE2420;
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  AnchoredTypeState.logDescription.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t SummaryModelQueryOutput.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = MEMORY[0x270FA5388](*(void *)(a2 - 8));
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v6;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, a2) == 1)
  {
    uint64_t v9 = sub_241CDBBD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    unint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v10(a3, 1, 1, a2);
  }
  else
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
    v12(v8, a1, a2);
    v12(a3, (uint64_t)v8, a2);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, a2);
  }
}

unint64_t AnchoredTypeState.logDescription.getter()
{
  sub_241A35AF0(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v2 = v1;
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_241CD7AF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v24 = v0;
  sub_241CD7790();
  uint64_t v15 = (void *)sub_241CD7AD0();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v14, v8);
  uint64_t v25 = v2;
  if (v15)
  {
    id v17 = objc_msgSend(v15, sel_dateInterval);
    if (v17)
    {
      uint64_t v18 = v17;
      sub_241CD67A0();

      uint64_t v19 = sub_241CD6810();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 0, 1, v19);
    }
    else
    {
      uint64_t v20 = sub_241CD6810();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
    }
    sub_241CDBBB0();

    sub_241B74724((uint64_t)v7);
  }
  unint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  unint64_t v27 = 0xD000000000000013;
  unint64_t v28 = 0x8000000241CE2460;
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CD7790();
  uint64_t v21 = (void *)sub_241CD7AE0();
  v16(v12, v8);
  uint64_t v26 = v21;
  sub_241A35AF0(0, &qword_26B034D78, (uint64_t (*)(uint64_t))sub_241BAA8D4, MEMORY[0x263F8D8F0]);
  sub_241CDBBB0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CD77A0();
  sub_241CDBBB0();
  sub_241B74724((uint64_t)v5);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v27;
}

unint64_t sub_241BAA8D4()
{
  unint64_t result = qword_26B030380;
  if (!qword_26B030380)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B030380);
  }
  return result;
}

uint64_t sub_241BAA924()
{
  return sub_241CD7770();
}

uint64_t sub_241BAA94C()
{
  sub_241A35AF0(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_241CEB730;
  uint64_t v1 = (void *)sub_241CD7770();
  sub_241CDB470();

  return v0;
}

uint64_t sub_241BAAA50(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  v65 = a3;
  uint64_t v66 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void **)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = &v53[-v10];
  uint64_t v12 = sub_241CD7740();
  uint64_t v60 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = &v53[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v63 = sub_241CDA1A0();
  *(void *)&long long v67 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v16 = &v53[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v68 = sub_241CD79A0();
  uint64_t v61 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v18 = &v53[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v58 = a5;
  uint64_t v59 = a4;
  uint64_t v19 = v60;
  sub_241BAB3A4(v65, (uint64_t)v18);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 16))(v14, v66, v12);
  v65 = v9;
  uint64_t v66 = AssociatedTypeWitness;
  uint64_t v20 = (void (*)(unsigned char *, uint64_t, uint64_t))v9[2];
  v62 = v11;
  v20(v11, a1, AssociatedTypeWitness);
  v64 = v16;
  uint64_t v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB670();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    v57 = v18;
    uint64_t v25 = v24;
    uint64_t v56 = swift_slowAlloc();
    v70[0] = v56;
    *(_DWORD *)uint64_t v25 = 136315650;
    os_log_t v55 = v21;
    uint64_t v26 = sub_241CDC270();
    uint64_t v69 = sub_241A33FE4(v26, v27, v70);
    int v54 = v23;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    unint64_t v28 = (void *)sub_241CD76E0();
    uint64_t v29 = sub_241CD73E0();
    uint64_t v30 = v14;
    unint64_t v32 = v31;

    uint64_t v69 = sub_241A33FE4(v29, v32, v70);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v30, v12);
    *(_WORD *)(v25 + 22) = 2080;
    uint64_t v33 = v66;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v35 = v62;
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(v33, AssociatedConformanceWitness);
    uint64_t v69 = sub_241A33FE4(v36, v37, v70);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*((void (**)(unsigned char *, uint64_t))v65 + 1))(v35, v33);
    os_log_t v38 = v55;
    _os_log_impl(&dword_241A23000, v55, (os_log_type_t)v54, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v25, 0x20u);
    uint64_t v39 = v56;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v39, -1, -1);
    uint64_t v40 = v25;
    uint64_t v18 = v57;
    MEMORY[0x245637F20](v40, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v14, v12);
    (*((void (**)(unsigned char *, uint64_t))v65 + 1))(v62, v66);
  }
  (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v64, v63);
  v41 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A35AF0(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v42 = sub_241CD7C30();
  uint64_t v43 = *(void *)(v42 - 8);
  unint64_t v44 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v45 = swift_allocObject();
  long long v67 = xmmword_241CEB730;
  *(_OWORD *)(v45 + 16) = xmmword_241CEB730;
  v46 = (uint64_t *)(v45 + v44);
  sub_241A35AF0(0, &qword_26B034F38, MEMORY[0x263F45738], v41);
  uint64_t v47 = v61;
  unint64_t v48 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = v67;
  unint64_t v50 = v49 + v48;
  uint64_t v51 = v68;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v47 + 16))(v50, v18, v68);
  uint64_t *v46 = v49;
  (*(void (**)(uint64_t *, void, uint64_t))(v43 + 104))(v46, *MEMORY[0x263F45880], v42);
  (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v18, v51);
  return v45;
}

uint64_t sub_241BAB0F8()
{
  return sub_241CD7770();
}

uint64_t sub_241BAB120()
{
  sub_241A35AF0(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_241CEB730;
  uint64_t v1 = (void *)sub_241CD7770();
  sub_241CDB470();

  return v0;
}

uint64_t SummaryModelGenerationRequest.hkTypeSharingAuthorizationIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  if ((*(uint64_t (**)(void))(a2 + 40))())
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  char v4 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_5:
    sub_241A35AF0(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
    sub_241CD9350();
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_241CEB730;
    uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    sub_241CDB470();

    return v5;
  }
  return MEMORY[0x263F8EE78];
}

id sub_241BAB3A4@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  v18[1] = a2;
  id v19 = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35AF0(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v18 - v4;
  sub_241A35AF0(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v2);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v18 - v7;
  uint64_t v9 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v9 - 8);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  uint64_t v12 = swift_checkMetadataState();
  v11(v12, AssociatedConformanceWitness);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(v12, AssociatedConformanceWitness);
  sub_241A33460();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_241CEB710;
  *(void *)(v13 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v12, AssociatedConformanceWitness);
  uint64_t v20 = v13;
  sub_241CDB2E0();
  id result = objc_msgSend(v19, sel_data);
  if (result)
  {
    uint64_t v15 = result;
    sub_241CD6AE0();

    sub_241CD7960();
    sub_241CD6F40();
    uint64_t v16 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
    sub_241CD6DC0();
    uint64_t v17 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 0, 1, v17);
    return (id)sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static SummaryModelGenerating.logPrefix(_:_:)()
{
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  sub_241CDC270();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  uint64_t v0 = (void *)sub_241CD76E0();
  sub_241CD73E0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return 91;
}

uint64_t sub_241BAB820()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_241BAB89C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_241BAB9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_241BABA9C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_241BABB94(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

void *sub_241BABD00(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_241BABDF8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

uint64_t sub_241BABF64(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_241BAC104(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x241BAC340);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          uint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_241BAC368(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 48))(a1, 1);
}

uint64_t sub_241BAC398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 56))(a1, a2, 1);
}

uint64_t type metadata accessor for SummaryModelQueryOutput()
{
  return sub_241A91234();
}

uint64_t sub_241BAC3F4()
{
  return sub_241CD7770();
}

uint64_t sub_241BAC41C()
{
  sub_241A35AF0(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_241CEB730;
  unint64_t v1 = (void *)sub_241CD7770();
  sub_241CDB470();

  return v0;
}

uint64_t sub_241BAC520()
{
  return sub_241CD7770();
}

uint64_t sub_241BAC570@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v60 = a2;
  int v55 = a1;
  uint64_t v4 = sub_241CD6ED0();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  MEMORY[0x270FA5388](v4);
  int v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A72DB8(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  int v54 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v49 = (char *)v47 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unsigned int v14 = (char *)v47 - v13;
  MEMORY[0x270FA5388](v12);
  int v16 = (char *)v47 - v15;
  uint64_t v17 = sub_241CD6D00();
  uint64_t v18 = *(void **)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v56 = (char *)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v53 = (char *)v47 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v57 = (char *)v47 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  unint64_t v27 = (char *)v47 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v59 = (char *)v47 - v28;
  uint64_t v29 = sub_241CD9FA0();
  uint64_t v31 = v30;
  if (v29 == sub_241CD9FA0() && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v33 = sub_241CDC100();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
    {
LABEL_7:
      uint64_t v35 = sub_241CD6810();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(a3, v61, v35);
    }
  }
  unint64_t v48 = v6;
  uint64_t v58 = a3;
  sub_241CD67E0();
  sub_241CD6C20();
  v52 = (void (*)(char *, uint64_t))v18[1];
  v52(v27, v17);
  uint64_t v34 = (unsigned int (*)(char *, uint64_t, uint64_t))v18[6];
  if (v34(v16, 1, v17) == 1)
  {
    sub_241A9A4DC((uint64_t)v16);
    a3 = v58;
    goto LABEL_7;
  }
  v47[0] = v18[4];
  v47[1] = v18 + 4;
  ((void (*)(char *, char *, uint64_t))v47[0])(v59, v16, v17);
  unint64_t v37 = v57;
  sub_241CD67B0();
  if ((v55 & 1) == 0) {
    goto LABEL_11;
  }
  sub_241CD6C20();
  if (v34(v14, 1, v17) == 1)
  {
    sub_241A9A4DC((uint64_t)v14);
LABEL_11:
    sub_241CD67B0();
    uint64_t v38 = (uint64_t)v54;
    sub_241CD6C20();
    uint64_t v39 = v52;
    v52(v27, v17);
    if (v34((char *)v38, 1, v17) == 1)
    {
      sub_241A9A4DC(v38);
    }
    else
    {
      v39(v37, v17);
      ((void (*)(char *, uint64_t, uint64_t))v47[0])(v37, v38, v17);
    }
    uint64_t v40 = v37;
    goto LABEL_15;
  }
  uint64_t v43 = v53;
  ((void (*)(char *, char *, uint64_t))v47[0])(v53, v14, v17);
  sub_241BACBD8();
  if (sub_241CDB050())
  {
    uint64_t v39 = v52;
    v52(v43, v17);
    uint64_t v40 = v57;
  }
  else
  {
    uint64_t v44 = v50;
    uint64_t v45 = v48;
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v48, *MEMORY[0x263F07830], v51);
    uint64_t v46 = (uint64_t)v49;
    sub_241CD6E70();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v51);
    uint64_t v39 = v52;
    v52(v53, v17);
    if (v34((char *)v46, 1, v17) == 1)
    {
      sub_241A9A4DC(v46);
      uint64_t v40 = v57;
    }
    else
    {
      uint64_t v40 = v57;
      v39(v57, v17);
      ((void (*)(char *, uint64_t, uint64_t))v47[0])(v40, v46, v17);
    }
  }
LABEL_15:
  v41 = (void (*)(char *, char *, uint64_t))v18[2];
  uint64_t v42 = v59;
  v41(v27, v59, v17);
  v41(v56, v40, v17);
  sub_241CD67C0();
  v39(v40, v17);
  return ((uint64_t (*)(char *, uint64_t))v39)(v42, v17);
}

unint64_t sub_241BACBD8()
{
  unint64_t result = qword_26B02E8D8;
  if (!qword_26B02E8D8)
  {
    sub_241CD6D00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B02E8D8);
  }
  return result;
}

id sub_241BACC30(char *a1, void *a2, uint64_t a3, char *a4, void *a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  int v220 = a8;
  uint64_t v210 = a7;
  uint64_t v211 = a6;
  v238 = a5;
  v245 = a4;
  v246 = a1;
  v231 = a2;
  sub_241BB27B0(0, &qword_26B035590, MEMORY[0x263F44300]);
  MEMORY[0x270FA5388](v10 - 8);
  v219 = (char *)&v208 - v11;
  uint64_t v12 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (id *)((char *)&v208 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v208 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  v233 = (id *)((char *)&v208 - v20);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v232 = (char *)&v208 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v226 = (uint64_t)&v208 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v225 = (uint64_t)&v208 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v214 = (uint64_t)&v208 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v212 = (uint64_t)&v208 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v215 = (uint64_t)&v208 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v213 = (uint64_t)&v208 - v33;
  uint64_t v34 = sub_241CDA1A0();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v243 = v34;
  uint64_t v244 = v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v242 = (char *)&v208 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v234 = (char *)&v208 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v227 = (char *)&v208 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  v222 = (char *)&v208 - v43;
  MEMORY[0x270FA5388](v42);
  v221 = (char *)&v208 - v44;
  uint64_t v223 = sub_241CD8A80();
  uint64_t v218 = *(void *)(v223 - 8);
  uint64_t v45 = MEMORY[0x270FA5388](v223);
  v217 = (char *)&v208 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  uint64_t v224 = (uint64_t)&v208 - v47;
  sub_241A68508(0);
  MEMORY[0x270FA5388](v48 - 8);
  os_log_t v230 = (os_log_t)((char *)&v208 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v240 = sub_241CD6810();
  v229 = *(char **)(v240 - 8);
  uint64_t v50 = MEMORY[0x270FA5388](v240);
  v216 = (char *)&v208 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v50);
  v239 = (char *)&v208 - v52;
  sub_241BAE6A8(0);
  MEMORY[0x270FA5388](v53 - 8);
  int v55 = (char *)&v208 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BAE6C8(0);
  v236 = *(NSObject **)(v56 - 8);
  uint64_t v237 = v56;
  uint64_t v57 = MEMORY[0x270FA5388](v56);
  v228 = (char *)&v208 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v57);
  uint64_t v235 = (uint64_t)&v208 - v59;
  uint64_t v60 = sub_241CD6F50();
  MEMORY[0x270FA5388](v60 - 8);
  sub_241BB27B0(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v61 - 8);
  uint64_t v62 = sub_241CD6DE0();
  uint64_t v63 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  v65 = (char *)&v208 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_241CD6EE0();
  uint64_t v67 = MEMORY[0x270FA5388](v66);
  v71 = (char *)&v208 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v69)
  {
    sub_241CDA0F0();
    sub_241BB257C(a3, (uint64_t)v18, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    sub_241BB257C(a3, (uint64_t)v15, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    v84 = v246;
    v85 = sub_241CDA190();
    os_log_type_t v86 = sub_241CDB670();
    int v87 = v86;
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v88 = swift_slowAlloc();
      v246 = (char *)swift_slowAlloc();
      v249 = v246;
      *(_DWORD *)uint64_t v88 = 136315394;
      uint64_t v89 = sub_241AE0298((uint64_t)v84, v18[8]);
      uint64_t v247 = sub_241A33FE4(v89, v90, (uint64_t *)&v249);
      LODWORD(v245) = v87;
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      sub_241BB197C((uint64_t)v18, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      *(_WORD *)(v88 + 12) = 2080;
      id v91 = objc_msgSend(v15[2], sel_sensitiveLoggingIdentifier);
      uint64_t v92 = sub_241CDB0D0();
      unint64_t v94 = v93;

      uint64_t v247 = sub_241A33FE4(v92, v94, (uint64_t *)&v249);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BB197C((uint64_t)v15, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      _os_log_impl(&dword_241A23000, v85, (os_log_type_t)v245, "%s: %s HKCodableChartSharableModel model was nil", (uint8_t *)v88, 0x16u);
      v95 = v246;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v95, -1, -1);
      MEMORY[0x245637F20](v88, -1, -1);
    }
    else
    {

      sub_241BB197C((uint64_t)v18, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      sub_241BB197C((uint64_t)v15, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    }

    v114 = *(void (**)(char *, uint64_t))(v244 + 8);
    v115 = v242;
    goto LABEL_18;
  }
  v241 = v71;
  uint64_t v208 = v67;
  uint64_t v209 = v68;
  v72 = v69;
  v73 = self;
  v74 = v72;
  id result = objc_msgSend(v73, sel_sharedInstanceForHealthStore_, v246);
  if (result)
  {
    v76 = result;
    v242 = v74;
    uint64_t v77 = a3;
    id v78 = objc_msgSend(result, sel_displayTypeForObjectType_, *(void *)(a3 + 16));

    if (v78)
    {
      v234 = (char *)a9;
      (*(void (**)(char *, void, uint64_t))(v63 + 104))(v65, *MEMORY[0x263F07740], v62);
      uint64_t v79 = v77;
      uint64_t v80 = (uint64_t)v241;
      sub_241CD6DF0();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v62);
      sub_241CD6E80();
      sub_241CD6E90();
      sub_241CD6EB0();
      sub_241CD6EC0();
      v234 = (char *)v79;
      v81 = (unsigned char *)v79;
      v82 = v55;
      sub_241BAEA80(v246, v81, v78, (uint64_t)v238, v80, (uint64_t)v55);
      uint64_t v83 = v237;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v236[6].isa)(v55, 1, v237) == 1)
      {
        (*(void (**)(char *, uint64_t))(v209 + 8))(v241, v208);

        sub_241BB197C((uint64_t)v55, (uint64_t (*)(void))sub_241BAE6A8);
        return 0;
      }
      v238 = v78;
      uint64_t v116 = *(int *)(v83 + 48);
      v117 = v229;
      v236 = *((void *)v229 + 4);
      uint64_t v118 = v235;
      v119 = v55;
      uint64_t v120 = v240;
      ((void (*)(uint64_t, char *, uint64_t))v236)(v235, v119, v240);
      v121 = *(void **)&v82[v116];
      *(void *)(v118 + v116) = v121;
      uint64_t v122 = *(int *)(v83 + 48);
      v123 = *((void *)v117 + 2);
      v124 = v228;
      ((void (*)(char *, uint64_t, uint64_t))v123)(v228, v118, v120);
      *(void *)&v124[v122] = v121;
      v125 = (id *)*((void *)v117 + 1);
      v232 = v117 + 8;
      v233 = v125;
      ((void (*)(char *, uint64_t))v125)(v124, v120);
      uint64_t v126 = v118;
      v127 = v246;
      ((void (*)(char *, uint64_t, uint64_t))v123)(v124, v126, v120);
      v128 = v239;
      ((void (*)(char *, char *, uint64_t))v236)(v239, v124, v120);
      uint64_t v129 = type metadata accessor for ChartModelParsing();
      v236 = v123;
      uint64_t v237 = v129;
      v130 = (void *)*((void *)v234 + 2);
      os_log_t v131 = v230;
      v228 = v117 + 16;
      ((void (*)(os_log_t, char *, uint64_t))v123)(v230, v128, v120);
      (*((void (**)(os_log_t, void, uint64_t, uint64_t))v117 + 7))(v131, 0, 1, v120);
      v132 = v242;
      v133 = v127;
      v134 = (char *)sub_241AD8044(v127, v130, v121, (uint64_t)v131, v245, v231, (uint64_t)v241);
      uint64_t v136 = v135;
      v245 = v132;

      sub_241BB197C((uint64_t)v131, (uint64_t (*)(void))sub_241A68508);
      if (v134)
      {
        uint64_t v137 = *((void *)v134 + 2);
        if (v137)
        {
          int v138 = sub_241BAE830(v136);
          if (v138 != 3)
          {
            int v181 = v138;
            sub_241BB19DC(v138, (uint64_t)v134, v238, (uint64_t)v121, v231);
            uint64_t v182 = (uint64_t)v234;
            v183 = (void *)*((void *)v234 + 2);
            LODWORD(v242) = v181;
            sub_241BAFC04(v183, (uint64_t)v134, v181, v210, v211, v224);
            v184 = v221;
            sub_241CDA0F0();
            uint64_t v185 = v213;
            sub_241BB257C(v182, v213, type metadata accessor for SnidgetFeedItemGeneratorRequest);
            uint64_t v186 = v215;
            sub_241BB257C(v182, v215, type metadata accessor for SnidgetFeedItemGeneratorRequest);
            v187 = v133;
            swift_bridgeObjectRetain_n();
            v188 = v187;
            v189 = sub_241CDA190();
            os_log_type_t v190 = sub_241CDB670();
            int v191 = v190;
            if (os_log_type_enabled(v189, v190))
            {
              uint64_t v192 = swift_slowAlloc();
              LODWORD(v231) = v191;
              uint64_t v193 = v192;
              uint64_t v237 = swift_slowAlloc();
              v249 = (char *)v237;
              *(_DWORD *)uint64_t v193 = 136315650;
              uint64_t v194 = sub_241AE0298((uint64_t)v188, *(unsigned __int8 *)(v185 + 8));
              v246 = v134;
              uint64_t v247 = sub_241A33FE4(v194, v195, (uint64_t *)&v249);
              v229 = &v248;
              sub_241CDBBF0();

              swift_bridgeObjectRelease();
              os_log_t v230 = v189;
              sub_241BB197C(v185, type metadata accessor for SnidgetFeedItemGeneratorRequest);
              *(_WORD *)(v193 + 12) = 2080;
              id v196 = objc_msgSend(*(id *)(v186 + 16), sel_sensitiveLoggingIdentifier);
              uint64_t v197 = sub_241CDB0D0();
              unint64_t v199 = v198;

              uint64_t v247 = sub_241A33FE4(v197, v199, (uint64_t *)&v249);
              sub_241CDBBF0();
              swift_bridgeObjectRelease();
              sub_241BB197C(v186, type metadata accessor for SnidgetFeedItemGeneratorRequest);
              *(_WORD *)(v193 + 22) = 2048;
              swift_bridgeObjectRelease();
              uint64_t v247 = v137;
              sub_241CDBBF0();
              swift_bridgeObjectRelease();
              os_log_t v200 = v230;
              _os_log_impl(&dword_241A23000, v230, (os_log_type_t)v231, "%s: Creating chart view model for %s with %ld points", (uint8_t *)v193, 0x20u);
              uint64_t v201 = v237;
              swift_arrayDestroy();
              MEMORY[0x245637F20](v201, -1, -1);
              MEMORY[0x245637F20](v193, -1, -1);

              (*(void (**)(char *, uint64_t))(v244 + 8))(v221, v243);
            }
            else
            {

              swift_bridgeObjectRelease();
              sub_241BB197C(v185, type metadata accessor for SnidgetFeedItemGeneratorRequest);
              sub_241BB197C(v186, type metadata accessor for SnidgetFeedItemGeneratorRequest);

              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v244 + 8))(v184, v243);
            }
            ((void (*)(char *, char *, uint64_t))v236)(v216, v239, v240);
            uint64_t v203 = v218;
            (*(void (**)(char *, uint64_t, uint64_t))(v218 + 16))(v217, v224, v223);
            id v204 = *((id *)v234 + 2);
            id v205 = objc_msgSend(v204, sel_description);
            sub_241CDB0D0();

            v206 = v219;
            sub_241CD8A90();
            uint64_t v207 = sub_241CD8AA0();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v207 - 8) + 56))(v206, 0, 1, v207);
            sub_241CD8AB0();
            swift_allocObject();
            uint64_t v202 = sub_241CD8A50();

            (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v224, v223);
            ((void (*)(char *, uint64_t))v233)(v239, v240);
            sub_241BB197C(v235, (uint64_t (*)(void))sub_241BAE6C8);
            (*(void (**)(char *, uint64_t))(v209 + 8))(v241, v208);
            return (id)v202;
          }
          v139 = v222;
          sub_241CDA0F0();
          uint64_t v140 = (uint64_t)v234;
          uint64_t v141 = v212;
          sub_241BB257C((uint64_t)v234, v212, type metadata accessor for SnidgetFeedItemGeneratorRequest);
          uint64_t v142 = v214;
          sub_241BB257C(v140, v214, type metadata accessor for SnidgetFeedItemGeneratorRequest);
          v143 = v133;
          swift_bridgeObjectRetain();
          v144 = sub_241CDA190();
          os_log_type_t v145 = sub_241CDB650();
          int v146 = v145;
          if (!os_log_type_enabled(v144, v145))
          {
            swift_bridgeObjectRelease_n();

            sub_241BB197C(v142, type metadata accessor for SnidgetFeedItemGeneratorRequest);
            sub_241BB197C(v141, type metadata accessor for SnidgetFeedItemGeneratorRequest);

            v160 = *(void (**)(char *, uint64_t))(v244 + 8);
            v180 = v139;
            goto LABEL_27;
          }
          uint64_t v147 = swift_slowAlloc();
          LODWORD(v237) = v146;
          uint64_t v148 = v147;
          v242 = (char *)swift_slowAlloc();
          v249 = v242;
          *(_DWORD *)uint64_t v148 = 136315650;
          uint64_t v149 = sub_241AE0298((uint64_t)v143, *(unsigned __int8 *)(v141 + 8));
          v246 = v134;
          uint64_t v247 = sub_241A33FE4(v149, v150, (uint64_t *)&v249);
          v236 = v144;
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          sub_241BB197C(v141, type metadata accessor for SnidgetFeedItemGeneratorRequest);
          *(_WORD *)(v148 + 12) = 2080;
          id v151 = objc_msgSend(*(id *)(v142 + 16), sel_sensitiveLoggingIdentifier);
          uint64_t v152 = v142;
          uint64_t v153 = sub_241CDB0D0();
          unint64_t v155 = v154;

          uint64_t v247 = sub_241A33FE4(v153, v155, (uint64_t *)&v249);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241BB197C(v152, type metadata accessor for SnidgetFeedItemGeneratorRequest);
          *(_WORD *)(v148 + 22) = 2080;
          uint64_t v247 = v136;
          type metadata accessor for HKDisplayTypeChartStyle(0);
          uint64_t v156 = sub_241CDB120();
          uint64_t v247 = sub_241A33FE4(v156, v157, (uint64_t *)&v249);
          sub_241CDBBF0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v158 = v236;
          _os_log_impl(&dword_241A23000, v236, (os_log_type_t)v237, "%s: %s unsupported chart style requested %s", (uint8_t *)v148, 0x20u);
          v159 = v242;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v159, -1, -1);
          MEMORY[0x245637F20](v148, -1, -1);

          v160 = *(void (**)(char *, uint64_t))(v244 + 8);
          v161 = &v250;
LABEL_22:
          v180 = (char *)*(v161 - 32);
LABEL_27:
          v160(v180, v243);
          goto LABEL_28;
        }
        swift_bridgeObjectRelease();
      }
      v163 = v227;
      sub_241CDA0F0();
      uint64_t v164 = (uint64_t)v234;
      uint64_t v165 = v225;
      sub_241BB257C((uint64_t)v234, v225, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      uint64_t v166 = v226;
      sub_241BB257C(v164, v226, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      v167 = v133;
      v168 = sub_241CDA190();
      os_log_type_t v169 = sub_241CDB670();
      int v170 = v169;
      if (!os_log_type_enabled(v168, v169))
      {

        sub_241BB197C(v166, type metadata accessor for SnidgetFeedItemGeneratorRequest);
        sub_241BB197C(v165, type metadata accessor for SnidgetFeedItemGeneratorRequest);

        (*(void (**)(char *, uint64_t))(v244 + 8))(v163, v243);
LABEL_28:
        ((void (*)(char *, uint64_t))v233)(v239, v240);
        sub_241BB197C(v235, (uint64_t (*)(void))sub_241BAE6C8);
        v114 = *(void (**)(char *, uint64_t))(v209 + 8);
        v115 = v241;
        uint64_t v162 = v208;
        goto LABEL_29;
      }
      uint64_t v171 = swift_slowAlloc();
      LODWORD(v242) = v170;
      uint64_t v172 = v171;
      v246 = (char *)swift_slowAlloc();
      v249 = v246;
      *(_DWORD *)uint64_t v172 = 136315394;
      uint64_t v173 = sub_241AE0298((uint64_t)v167, *(unsigned __int8 *)(v165 + 8));
      uint64_t v247 = sub_241A33FE4(v173, v174, (uint64_t *)&v249);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      sub_241BB197C(v165, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      *(_WORD *)(v172 + 12) = 2080;
      id v175 = objc_msgSend(*(id *)(v166 + 16), sel_sensitiveLoggingIdentifier);
      uint64_t v176 = sub_241CDB0D0();
      unint64_t v178 = v177;

      uint64_t v247 = sub_241A33FE4(v176, v178, (uint64_t *)&v249);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BB197C(v166, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      _os_log_impl(&dword_241A23000, v168, (os_log_type_t)v242, "%s: %s Chart model didn't have any chart points for the expected time range", (uint8_t *)v172, 0x16u);
      v179 = v246;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v179, -1, -1);
      MEMORY[0x245637F20](v172, -1, -1);

      v160 = *(void (**)(char *, uint64_t))(v244 + 8);
      v161 = &v251;
      goto LABEL_22;
    }
    uint64_t v96 = (uint64_t)v234;
    sub_241CDA0F0();
    uint64_t v97 = (uint64_t)v232;
    sub_241BB257C(v77, (uint64_t)v232, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    uint64_t v98 = v77;
    v99 = v233;
    sub_241BB257C(v98, (uint64_t)v233, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    v100 = v246;
    v101 = sub_241CDA190();
    os_log_type_t v102 = sub_241CDB650();
    int v103 = v102;
    if (os_log_type_enabled(v101, v102))
    {
      uint64_t v104 = swift_slowAlloc();
      LODWORD(v245) = v103;
      uint64_t v105 = v104;
      v246 = (char *)swift_slowAlloc();
      v249 = v246;
      *(_DWORD *)uint64_t v105 = 136315394;
      uint64_t v106 = sub_241AE0298((uint64_t)v100, *(unsigned __int8 *)(v97 + 8));
      uint64_t v247 = sub_241A33FE4(v106, v107, (uint64_t *)&v249);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      sub_241BB197C(v97, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      *(_WORD *)(v105 + 12) = 2080;
      id v108 = objc_msgSend(v99[2], sel_sensitiveLoggingIdentifier);
      uint64_t v109 = (uint64_t)v99;
      uint64_t v110 = sub_241CDB0D0();
      unint64_t v112 = v111;

      uint64_t v247 = sub_241A33FE4(v110, v112, (uint64_t *)&v249);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BB197C(v109, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      _os_log_impl(&dword_241A23000, v101, (os_log_type_t)v245, "%s: %s Unable to find displayType", (uint8_t *)v105, 0x16u);
      v113 = v246;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v113, -1, -1);
      MEMORY[0x245637F20](v105, -1, -1);

      v114 = *(void (**)(char *, uint64_t))(v244 + 8);
      v115 = v234;
    }
    else
    {

      sub_241BB197C(v97, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      sub_241BB197C((uint64_t)v99, type metadata accessor for SnidgetFeedItemGeneratorRequest);

      v114 = *(void (**)(char *, uint64_t))(v244 + 8);
      v115 = (char *)v96;
    }
LABEL_18:
    uint64_t v162 = v243;
LABEL_29:
    v114(v115, v162);
    return 0;
  }
  __break(1u);
  return result;
}

void sub_241BAE6A8(uint64_t a1)
{
}

void sub_241BAE6C8(uint64_t a1)
{
}

uint64_t sub_241BAE704(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_241A520C8(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = *(void *)(sub_241CD84A0() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      sub_241CD8480();
      uint64_t v8 = v7;
      unint64_t v10 = *(void *)(v12 + 16);
      unint64_t v9 = *(void *)(v12 + 24);
      if (v10 >= v9 >> 1) {
        sub_241A520C8(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v12 + 16) = v10 + 1;
      *(void *)(v12 + 8 * v10 + 32) = v8;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_241BAE830(uint64_t a1)
{
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1 - 1;
  if (unint64_t)(a1 - 1) < 9 && ((0x10Du >> v6)) {
    return byte_241CF0F50[v6];
  }
  sub_241CDA0F0();
  uint64_t v7 = sub_241CDA190();
  os_log_type_t v8 = sub_241CDB670();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v14 = sub_241A33FE4(0xD000000000000017, 0x8000000241CE24C0, &v15);
    sub_241CDBBF0();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v14 = a1;
    type metadata accessor for HKDisplayTypeChartStyle(0);
    uint64_t v11 = sub_241CDB120();
    uint64_t v14 = sub_241A33FE4(v11, v12, &v15);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v7, v8, "%s: %s Unsupported chart style", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v10, -1, -1);
    MEMORY[0x245637F20](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 3;
}

uint64_t sub_241BAEA80@<X0>(void *a1@<X0>, unsigned char *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v156 = a4;
  uint64_t v157 = a5;
  id v154 = a3;
  uint64_t v169 = a6;
  v171[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v166 = (char *)&v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v149 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  v163 = (char *)&v149 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v159 = (uint64_t)&v149 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v165 = (char *)&v149 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v160 = (char *)&v149 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v153 = (uint64_t)&v149 - v22;
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v167 = v23;
  uint64_t v168 = v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v149 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v164 = (char *)&v149 - v29;
  MEMORY[0x270FA5388](v28);
  v161 = (char *)&v149 - v30;
  sub_241A68508(0);
  MEMORY[0x270FA5388](v31 - 8);
  os_log_t v158 = (char *)&v149 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_241CD6810();
  uint64_t v155 = *(void *)(v162 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v162);
  uint64_t v152 = (char *)&v149 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  id v151 = (char *)&v149 - v35;
  sub_241BB2790(0);
  MEMORY[0x270FA5388](v36 - 8);
  uint64_t v38 = (char *)&v149 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_241CD9DB0();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  unint64_t v150 = (char *)&v149 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v149 - v43;
  uint64_t v45 = (void *)*((void *)a2 + 2);
  sub_241CDB4A0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
  {
    sub_241BB197C((uint64_t)v38, (uint64_t (*)(void))sub_241BB2790);
    sub_241CDA0F0();
    sub_241BB257C((uint64_t)a2, (uint64_t)v13, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    uint64_t v46 = (uint64_t)a2;
    uint64_t v47 = (id *)v166;
    sub_241BB257C(v46, (uint64_t)v166, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    id v48 = a1;
    uint64_t v49 = sub_241CDA190();
    os_log_type_t v50 = sub_241CDB670();
    int v51 = v50;
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v52 = swift_slowAlloc();
      LODWORD(v164) = v51;
      uint64_t v53 = v52;
      uint64_t v165 = (char *)swift_slowAlloc();
      v171[0] = v165;
      *(_DWORD *)uint64_t v53 = 136315394;
      uint64_t v54 = sub_241AE0298((uint64_t)v48, v13[8]);
      uint64_t v170 = sub_241A33FE4(v54, v55, (uint64_t *)v171);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      sub_241BB197C((uint64_t)v13, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      *(_WORD *)(v53 + 12) = 2080;
      id v56 = objc_msgSend(v47[2], sel_sensitiveLoggingIdentifier);
      uint64_t v57 = sub_241CDB0D0();
      unint64_t v59 = v58;

      uint64_t v170 = sub_241A33FE4(v57, v59, (uint64_t *)v171);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BB197C((uint64_t)v47, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      _os_log_impl(&dword_241A23000, v49, (os_log_type_t)v164, "%s: %s does not have a swift chart diagram configuration.", (uint8_t *)v53, 0x16u);
      uint64_t v60 = v165;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v60, -1, -1);
      MEMORY[0x245637F20](v53, -1, -1);
    }
    else
    {

      sub_241BB197C((uint64_t)v13, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      sub_241BB197C((uint64_t)v47, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    }

    (*(void (**)(char *, uint64_t))(v168 + 8))(v27, v167);
    goto LABEL_34;
  }
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  uint64_t v149 = v39;
  v61(v44, v38, v39);
  int v62 = a2[8];
  uint64_t v63 = v44;
  if (v62 == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v64 = (uint64_t)v165;
    goto LABEL_9;
  }
  char v65 = sub_241CDC100();
  swift_bridgeObjectRelease();
  uint64_t v64 = (uint64_t)v165;
  if (v65)
  {
LABEL_9:
    uint64_t v66 = (char *)sub_241CD9DA0();
    uint64_t v165 = v63;
    uint64_t v166 = v66;
    if ((v67 & 1) == 0) {
      goto LABEL_10;
    }
LABEL_18:
    uint64_t v80 = v164;
    sub_241CDA0F0();
    sub_241BB257C((uint64_t)a2, v64, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    uint64_t v81 = v159;
    sub_241BB257C((uint64_t)a2, v159, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    v82 = v163;
    sub_241BB257C((uint64_t)a2, (uint64_t)v163, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    id v83 = a1;
    v84 = sub_241CDA190();
    os_log_type_t v85 = sub_241CDB670();
    int v86 = v85;
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v87 = swift_slowAlloc();
      LODWORD(v162) = v86;
      uint64_t v88 = v87;
      uint64_t v166 = (char *)swift_slowAlloc();
      v171[0] = v166;
      *(_DWORD *)uint64_t v88 = 136315650;
      uint64_t v89 = sub_241AE0298((uint64_t)v83, *(unsigned __int8 *)(v64 + 8));
      uint64_t v170 = sub_241A33FE4(v89, v90, (uint64_t *)v171);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      sub_241BB197C(v64, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      *(_WORD *)(v88 + 12) = 2080;
      id v91 = objc_msgSend(*(id *)(v81 + 16), sel_sensitiveLoggingIdentifier);
      uint64_t v92 = sub_241CDB0D0();
      unint64_t v94 = v93;

      uint64_t v170 = sub_241A33FE4(v92, v94, (uint64_t *)v171);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BB197C(v81, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      *(_WORD *)(v88 + 22) = 2080;
      v95 = v163;
      if (v163[8]) {
        uint64_t v96 = 0x676E6972616873;
      }
      else {
        uint64_t v96 = 0x7972616D697270;
      }
      uint64_t v170 = sub_241A33FE4(v96, 0xE700000000000000, (uint64_t *)v171);
      sub_241CDBBF0();
      sub_241BB197C((uint64_t)v95, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      _os_log_impl(&dword_241A23000, v84, (os_log_type_t)v162, "%s: %s does not have a configuration for the requested audience %s", (uint8_t *)v88, 0x20u);
      uint64_t v97 = v166;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v97, -1, -1);
      MEMORY[0x245637F20](v88, -1, -1);

      (*(void (**)(char *, uint64_t))(v168 + 8))(v164, v167);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v165, v149);
      goto LABEL_34;
    }

    sub_241BB197C((uint64_t)v82, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    sub_241BB197C(v81, type metadata accessor for SnidgetFeedItemGeneratorRequest);

    sub_241BB197C(v64, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v80, v167);
    goto LABEL_33;
  }
  id v78 = (char *)sub_241CD9D90();
  uint64_t v165 = v63;
  uint64_t v166 = v78;
  if (v79) {
    goto LABEL_18;
  }
LABEL_10:
  v163 = a2;
  id v68 = objc_msgSend(v154, sel_behavior);
  id v69 = objc_msgSend(v68, sel_preferredCalendarDayAlignment);

  uint64_t v70 = *MEMORY[0x263F09BE0];
  id v71 = objc_allocWithZone(MEMORY[0x263F0A658]);
  id v72 = v45;
  id v73 = objc_msgSend(v71, sel_initWithIdentifier_, v70);
  if (v73)
  {
    v74 = v73;
    sub_241B4EBF0();
    id v75 = v72;
    char v76 = sub_241CDBB60();

    if (v166 == (char *)5) {
      id v77 = 0;
    }
    else {
      id v77 = v69;
    }
    if (v76) {
      id v69 = v77;
    }
  }
  else
  {
  }
  uint64_t v98 = (uint64_t)v160;
  uint64_t v99 = (uint64_t)v158;
  id v100 = objc_allocWithZone(MEMORY[0x263F46940]);
  v101 = (void *)sub_241CD6C60();
  os_log_type_t v102 = (char *)objc_msgSend(v100, sel_initWithQueryAlignment_fromEndDate_, v69, v101);

  int v103 = (void *)sub_241CD6E40();
  v171[0] = 0;
  uint64_t v164 = v102;
  id v104 = objc_msgSend(v102, sel_dateIntervalForTimeScope_withGregorianCalendar_error_, v166, v103, v171);

  id v105 = v171[0];
  if (v104)
  {
    uint64_t v106 = v98;
    unint64_t v107 = v152;
    sub_241CD67A0();
    id v108 = v105;

    uint64_t v109 = v155;
    uint64_t v110 = *(void (**)(uint64_t, char *, uint64_t))(v155 + 32);
    unint64_t v111 = v107;
    uint64_t v98 = v106;
    uint64_t v112 = v162;
    v110(v99, v111, v162);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v109 + 56))(v99, 0, 1, v112);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v99, 1, v112) != 1)
    {
      v113 = v151;
      v110((uint64_t)v151, (char *)v99, v112);
      if (v62)
      {
        v114 = v150;
        v115 = v165;
        uint64_t v116 = v149;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v150, v165, v149);
      }
      else
      {
        char v138 = sub_241CDC100();
        v114 = v150;
        v115 = v165;
        uint64_t v116 = v149;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v150, v165, v149);
        if ((v138 & 1) == 0)
        {

          v144 = *(void (**)(char *, uint64_t))(v40 + 8);
          v144(v114, v116);
          v144(v115, v116);
LABEL_42:
          sub_241BAE6C8(0);
          uint64_t v146 = v145;
          uint64_t v147 = *(int *)(v145 + 48);
          uint64_t v148 = v169;
          v110(v169, v113, v162);
          *(void *)(v148 + v147) = v166;
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v146 - 8) + 56))(v148, 0, 1, v146);
        }
      }
      uint64_t v139 = sub_241CD9DA0();
      char v141 = v140;

      uint64_t v142 = *(void (**)(char *, uint64_t))(v40 + 8);
      v142(v114, v116);
      v142(v115, v116);
      if ((v141 & 1) == 0)
      {
        uint64_t v143 = (uint64_t)v166;
        if (v139 == 5) {
          uint64_t v143 = 4;
        }
        uint64_t v166 = (char *)v143;
      }
      goto LABEL_42;
    }
  }
  else
  {
    id v117 = v171[0];
    uint64_t v118 = (void *)sub_241CD6A40();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56))(v99, 1, 1, v162);
  }
  sub_241BB197C(v99, (uint64_t (*)(void))sub_241A68508);
  v119 = v161;
  sub_241CDA0F0();
  uint64_t v120 = v163;
  uint64_t v121 = v153;
  sub_241BB257C((uint64_t)v163, v153, type metadata accessor for SnidgetFeedItemGeneratorRequest);
  sub_241BB257C((uint64_t)v120, v98, type metadata accessor for SnidgetFeedItemGeneratorRequest);
  id v122 = a1;
  v123 = sub_241CDA190();
  os_log_type_t v124 = sub_241CDB650();
  int v125 = v124;
  if (!os_log_type_enabled(v123, v124))
  {

    sub_241BB197C(v98, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    sub_241BB197C(v121, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v119, v167);
LABEL_33:
    (*(void (**)(char *, uint64_t))(v40 + 8))(v165, v149);
    goto LABEL_34;
  }
  uint64_t v126 = swift_slowAlloc();
  LODWORD(v162) = v125;
  uint64_t v127 = v126;
  v163 = (unsigned char *)swift_slowAlloc();
  v171[0] = v163;
  *(_DWORD *)uint64_t v127 = 136315650;
  uint64_t v128 = sub_241AE0298((uint64_t)v122, *(unsigned __int8 *)(v121 + 8));
  uint64_t v170 = sub_241A33FE4(v128, v129, (uint64_t *)v171);
  sub_241CDBBF0();

  swift_bridgeObjectRelease();
  sub_241BB197C(v121, type metadata accessor for SnidgetFeedItemGeneratorRequest);
  *(_WORD *)(v127 + 12) = 2080;
  id v130 = objc_msgSend(*(id *)(v98 + 16), sel_sensitiveLoggingIdentifier);
  uint64_t v131 = sub_241CDB0D0();
  uint64_t v132 = v98;
  unint64_t v134 = v133;

  uint64_t v170 = sub_241A33FE4(v131, v134, (uint64_t *)v171);
  sub_241CDBBF0();
  swift_bridgeObjectRelease();
  sub_241BB197C(v132, type metadata accessor for SnidgetFeedItemGeneratorRequest);
  *(_WORD *)(v127 + 22) = 2048;
  uint64_t v170 = (uint64_t)v166;
  sub_241CDBBF0();
  _os_log_impl(&dword_241A23000, v123, (os_log_type_t)v162, "%s: %s there is no remote date interval for requested timescope %ld", (uint8_t *)v127, 0x20u);
  uint64_t v135 = v163;
  swift_arrayDestroy();
  MEMORY[0x245637F20](v135, -1, -1);
  MEMORY[0x245637F20](v127, -1, -1);

  (*(void (**)(char *, uint64_t))(v168 + 8))(v161, v167);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v165, v149);
LABEL_34:
  sub_241BAE6C8(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v169, 1, 1, v136);
}

uint64_t sub_241BAFC04@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v201 = a5;
  uint64_t v188 = a4;
  int v179 = a3;
  uint64_t v196 = a2;
  id v192 = a1;
  uint64_t v199 = a6;
  sub_241BB2444(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v189 = (uint64_t)&v153 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD8A60();
  uint64_t v200 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v172 = (char *)&v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v170 = (char *)&v153 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v177 = (char *)&v153 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v160 = (char *)&v153 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v180 = (char *)&v153 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v197 = (char *)&v153 - v19;
  uint64_t v165 = sub_241CDA1A0();
  uint64_t v164 = *(void *)(v165 - 8);
  MEMORY[0x270FA5388](v165);
  unint64_t v174 = (char *)&v153 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_241CD6810();
  uint64_t v184 = *(void *)(v185 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v185);
  uint64_t v159 = (char *)&v153 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  v183 = (char *)&v153 - v23;
  uint64_t v202 = sub_241CD84A0();
  uint64_t v186 = *(void *)(v202 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v202);
  uint64_t v193 = (char *)&v153 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v153 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  v161 = (char *)&v153 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v162 = (char *)&v153 - v31;
  sub_241BB2464();
  uint64_t v33 = MEMORY[0x270FA5388](v32 - 8);
  uint64_t v168 = (uint64_t)&v153 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v176 = (uint64_t)&v153 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v158 = (uint64_t)&v153 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v171 = (char *)&v153 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v169 = (uint64_t)&v153 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v178 = (uint64_t)&v153 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v46 = (char *)&v153 - v45;
  uint64_t v47 = sub_241CD6D00();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  v163 = (char *)&v153 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v49);
  uint64_t v52 = (char *)&v153 - v51;
  sub_241A72DB8(0);
  uint64_t v54 = MEMORY[0x270FA5388](v53 - 8);
  uint64_t v166 = (uint64_t)&v153 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v175 = (uint64_t)&v153 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v157 = (char *)&v153 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v167 = (uint64_t)&v153 - v61;
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  uint64_t v187 = (uint64_t)&v153 - v63;
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  uint64_t v66 = (char *)&v153 - v65;
  MEMORY[0x270FA5388](v64);
  char v67 = *(void (**)(void))(v48 + 56);
  uint64_t v198 = (uint64_t)&v153 - v68;
  v67();
  sub_241BB257C(v201, (uint64_t)v46, (uint64_t (*)(void))sub_241BB2464);
  sub_241BB24F4(0, (unint64_t *)&qword_26B031FE0, sub_241A72DB8, (void (*)(uint64_t))sub_241A412E8);
  uint64_t v70 = (uint64_t (**)(char *, uint64_t))(*(void *)(v69 - 8) + 48);
  os_log_type_t v190 = *v70;
  uint64_t v191 = v69;
  unint64_t v195 = v70;
  int v71 = v190(v46, 1);
  uint64_t v194 = v48 + 56;
  uint64_t v182 = v48;
  if (v71 == 1)
  {
    sub_241BB197C((uint64_t)v46, (uint64_t (*)(void))sub_241BB2464);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v67)(v66, 1, 1, v47);
    id v72 = v67;
  }
  else
  {
    sub_241BB25E4((uint64_t)v46, (uint64_t)v66, (uint64_t (*)(void))sub_241A72DB8);
    id v72 = v67;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v66, 1, v47) != 1)
    {
      uint64_t v181 = v8;
      uint64_t v82 = v182;
      id v83 = *(void (**)(uint64_t, char *, uint64_t))(v182 + 32);
      uint64_t v155 = v182 + 32;
      id v154 = v83;
      v83((uint64_t)v52, v66, v47);
      uint64_t v73 = v196;
      uint64_t v84 = *(void *)(v196 + 16);
      uint64_t v173 = v47;
      if (v84)
      {
        uint64_t v156 = v72;
        os_log_type_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v186 + 16);
        uint64_t v86 = v196 + ((*(unsigned __int8 *)(v186 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v186 + 80));
        uint64_t v87 = (void (**)(char *, uint64_t))(v186 + 8);
        uint64_t v88 = *(void *)(v186 + 72);
        swift_bridgeObjectRetain();
        uint64_t v89 = v202;
        while (1)
        {
          v85(v28, v86, v89);
          if (sub_241BB13BC((uint64_t)v28, (uint64_t)v52)) {
            break;
          }
          uint64_t v89 = v202;
          (*v87)(v28, v202);
          v86 += v88;
          if (!--v84)
          {
            uint64_t v73 = v196;
            swift_bridgeObjectRelease();
            uint64_t v47 = v173;
            id v72 = v156;
            uint64_t v82 = v182;
            goto LABEL_11;
          }
        }
        uint64_t v100 = v196;
        swift_bridgeObjectRelease();
        uint64_t v101 = v186 + 32;
        os_log_type_t v102 = *(void (**)(char *, char *, uint64_t))(v186 + 32);
        int v103 = v161;
        uint64_t v104 = v202;
        v102(v161, v28, v202);
        id v105 = v162;
        v102(v162, v103, v104);
        uint64_t v106 = v183;
        sub_241CD8460();
        uint64_t v107 = v187;
        sub_241CD67E0();
        (*(void (**)(char *, uint64_t))(v184 + 8))(v106, v185);
        (*(void (**)(char *, uint64_t))(v101 - 24))(v105, v104);
        uint64_t v73 = v100;
        uint64_t v75 = v198;
        sub_241BB197C(v198, (uint64_t (*)(void))sub_241A72DB8);
        uint64_t v47 = v173;
        (*(void (**)(char *, uint64_t))(v182 + 8))(v52, v173);
        id v72 = v156;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v156)(v107, 0, 1, v47);
        sub_241BB25E4(v107, v75, (uint64_t (*)(void))sub_241A72DB8);
        uint64_t v74 = v200;
        uint64_t v8 = v181;
      }
      else
      {
LABEL_11:
        unint64_t v90 = v174;
        sub_241CDA0F0();
        id v91 = v163;
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v163, v52, v47);
        uint64_t v92 = v47;
        unint64_t v93 = sub_241CDA190();
        os_log_type_t v94 = sub_241CDB640();
        if (os_log_type_enabled(v93, v94))
        {
          uint64_t v95 = swift_slowAlloc();
          v183 = (char *)swift_slowAlloc();
          v205[0] = (uint64_t)v183;
          *(_DWORD *)uint64_t v95 = 136315394;
          uint64_t v203 = sub_241A33FE4(0xD00000000000001DLL, 0x8000000241CE24A0, v205);
          sub_241CDBBF0();
          *(_WORD *)(v95 + 12) = 2080;
          uint64_t v96 = sub_241CD6BE0();
          uint64_t v203 = sub_241A33FE4(v96, v97, v205);
          uint64_t v73 = v196;
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          uint64_t v98 = v173;
          (*(void (**)(char *, uint64_t))(v82 + 8))(v91, v173);
          _os_log_impl(&dword_241A23000, v93, v94, "[%s]: Requested date %s does not fall within the charts points.", (uint8_t *)v95, 0x16u);
          uint64_t v99 = v183;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v99, -1, -1);
          MEMORY[0x245637F20](v95, -1, -1);

          (*(void (**)(char *, uint64_t))(v164 + 8))(v174, v165);
          uint64_t v75 = v198;
          sub_241BB197C(v198, (uint64_t (*)(void))sub_241A72DB8);
          uint64_t v8 = v181;
          uint64_t v74 = v200;
          uint64_t v47 = v98;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v82 + 8))(v91, v92);
          (*(void (**)(char *, uint64_t))(v164 + 8))(v90, v165);
          uint64_t v75 = v198;
          sub_241BB197C(v198, (uint64_t (*)(void))sub_241A72DB8);
          uint64_t v8 = v181;
          uint64_t v74 = v200;
          uint64_t v47 = v92;
        }
        v154(v75, v52, v47);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v72)(v75, 0, 1, v47);
      }
      goto LABEL_16;
    }
  }
  sub_241BB197C((uint64_t)v66, (uint64_t (*)(void))sub_241A72DB8);
  uint64_t v73 = v196;
  uint64_t v74 = v200;
  uint64_t v75 = v198;
  if (*(void *)(v196 + 16))
  {
    uint64_t v76 = v198;
    id v77 = v72;
    uint64_t v78 = v196;
    char v79 = v183;
    sub_241CD8460();
    uint64_t v80 = v187;
    sub_241CD67E0();
    uint64_t v81 = v79;
    uint64_t v73 = v78;
    id v72 = v77;
    uint64_t v75 = v76;
    uint64_t v74 = v200;
    (*(void (**)(char *, uint64_t))(v184 + 8))(v81, v185);
    sub_241BB197C(v76, (uint64_t (*)(void))sub_241A72DB8);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v77)(v80, 0, 1, v47);
    sub_241BB25E4(v80, v76, (uint64_t (*)(void))sub_241A72DB8);
  }
LABEL_16:
  uint64_t v108 = v189;
  sub_241BB257C(v188, v189, (uint64_t (*)(void))sub_241BB2444);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v108, 1, v8) == 1)
  {
    sub_241BB197C(v108, (uint64_t (*)(void))sub_241BB2444);
    uint64_t v109 = *(void (**)(char *, void, uint64_t))(v74 + 104);
    if (v179 > 1u)
    {
      v109(v172, *MEMORY[0x263F442E8], v8);
      sub_241BB257C(v75, v166, (uint64_t (*)(void))sub_241A72DB8);
      uint64_t v113 = v168;
      sub_241BB257C(v201, v168, (uint64_t (*)(void))sub_241BB2464);
      int v114 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v190)(v113, 1, v191);
      v115 = (uint64_t (*)(void))sub_241BB2464;
      if (v114 != 1) {
        v115 = (uint64_t (*)(void))sub_241A72DB8;
      }
      sub_241BB197C(v113, v115);
      id v125 = v192;
    }
    else
    {
      v109(v170, *MEMORY[0x263F442E0], v8);
      sub_241BB257C(v75, v187, (uint64_t (*)(void))sub_241A72DB8);
      id v110 = v192;
    }
    sub_241CD8A70();
    return sub_241BB197C(v75, (uint64_t (*)(void))sub_241A72DB8);
  }
  uint64_t v173 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v197, v108, v8);
  unint64_t v111 = v180;
  (*(void (**)(char *, void, uint64_t))(v74 + 104))(v180, *MEMORY[0x263F442E0], v8);
  sub_241BB2748(&qword_26B032128, MEMORY[0x263F442F0]);
  sub_241CDB260();
  sub_241CDB260();
  uint64_t v156 = v72;
  if (v205[0] == v203 && v205[1] == v204) {
    char v112 = 1;
  }
  else {
    char v112 = sub_241CDC100();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v196 = *(void *)(v74 + 8);
  ((void (*)(char *, uint64_t))v196)(v111, v8);
  uint64_t v116 = v178;
  sub_241BB257C(v201, v178, (uint64_t (*)(void))sub_241BB2464);
  uint64_t v117 = v202;
  uint64_t v181 = v8;
  if ((v112 & 1) == 0)
  {
    v123 = (uint64_t (*)(void))sub_241BB2464;
    uint64_t v124 = v116;
LABEL_49:
    sub_241BB197C(v124, v123);
    goto LABEL_50;
  }
  uint64_t v118 = v169;
  sub_241BB25E4(v116, v169, (uint64_t (*)(void))sub_241BB2464);
  uint64_t v120 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v190;
  uint64_t v119 = v191;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v190)(v118, 1, v191) == 1)
  {
    sub_241BB197C(v118, (uint64_t (*)(void))sub_241BB2464);
    uint64_t v121 = v167;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v156)(v167, 1, 1, v173);
    uint64_t v122 = (uint64_t)v171;
  }
  else
  {
    uint64_t v121 = v167;
    sub_241BB25E4(v118, v167, (uint64_t (*)(void))sub_241A72DB8);
    int v126 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v182 + 48))(v121, 1, v173);
    uint64_t v122 = (uint64_t)v171;
    if (v126 != 1)
    {
      v123 = (uint64_t (*)(void))sub_241A72DB8;
      uint64_t v124 = v121;
      goto LABEL_49;
    }
  }
  sub_241BB197C(v121, (uint64_t (*)(void))sub_241A72DB8);
  sub_241BB257C(v201, v122, (uint64_t (*)(void))sub_241BB2464);
  if (v120(v122, 1, v119) == 1)
  {
    v123 = (uint64_t (*)(void))sub_241BB2464;
    uint64_t v124 = v122;
    goto LABEL_49;
  }
  uint64_t v127 = v122 + *(int *)(v119 + 48);
  double v128 = *(double *)v127;
  char v129 = *(unsigned char *)(v127 + 8);
  sub_241BB197C(v122, (uint64_t (*)(void))sub_241A72DB8);
  if ((v129 & 1) != 0 || (uint64_t v130 = *(void *)(v73 + 16)) == 0)
  {
LABEL_50:
    uint64_t v143 = v181;
    (*(void (**)(char *, char *, uint64_t))(v200 + 16))(v177, v197, v181);
    uint64_t v75 = v198;
    sub_241BB257C(v198, v175, (uint64_t (*)(void))sub_241A72DB8);
    uint64_t v146 = v176;
    sub_241BB257C(v201, v176, (uint64_t (*)(void))sub_241BB2464);
    int v149 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v190)(v146, 1, v191);
    uint64_t v148 = (uint64_t (*)(void))sub_241BB2464;
    if (v149 != 1) {
      uint64_t v148 = (uint64_t (*)(void))sub_241A72DB8;
    }
    goto LABEL_52;
  }
  uint64_t v131 = v73;
  uint64_t v132 = *(void (**)(char *, uint64_t, uint64_t))(v186 + 16);
  unint64_t v133 = (void (**)(char *, uint64_t))(v186 + 8);
  uint64_t v134 = *(void *)(v186 + 72);
  uint64_t v135 = v131
       + ((*(unsigned __int8 *)(v186 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v186 + 80))
       + v134 * (v130 - 1);
  uint64_t v136 = -v134;
  v132(v193, v135, v117);
  while (1)
  {
    double v138 = COERCE_DOUBLE(sub_241CD8490());
    char v140 = v139;
    sub_241CD8480();
    if (v140)
    {
      BOOL v142 = v141 == v128;
    }
    else
    {
      if (v141 > v128)
      {
        uint64_t v137 = v202;
        (*v133)(v193, v202);
        goto LABEL_39;
      }
      BOOL v142 = v128 <= v138;
    }
    uint64_t v137 = v202;
    (*v133)(v193, v202);
    if (v142) {
      break;
    }
LABEL_39:
    v135 += v136;
    if (!--v130) {
      goto LABEL_50;
    }
    v132(v193, v135, v137);
  }
  uint64_t v143 = v181;
  (*(void (**)(char *, char *, uint64_t))(v200 + 16))(v160, v197, v181);
  v144 = v159;
  sub_241CD8460();
  uint64_t v145 = v157;
  sub_241CD67E0();
  (*(void (**)(char *, uint64_t))(v184 + 8))(v144, v185);
  ((void (*)(char *, void, uint64_t, uint64_t))v156)(v145, 0, 1, v173);
  uint64_t v146 = v158;
  sub_241BB257C(v201, v158, (uint64_t (*)(void))sub_241BB2464);
  int v147 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v190)(v146, 1, v191);
  uint64_t v148 = (uint64_t (*)(void))sub_241BB2464;
  if (v147 != 1) {
    uint64_t v148 = (uint64_t (*)(void))sub_241A72DB8;
  }
  uint64_t v75 = v198;
LABEL_52:
  unint64_t v150 = (void (*)(char *, uint64_t))v196;
  sub_241BB197C(v146, v148);
  id v151 = v192;
  sub_241CD8A70();
  v150(v197, v143);
  return sub_241BB197C(v75, (uint64_t (*)(void))sub_241A72DB8);
}

uint64_t sub_241BB13BC(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = a2;
  sub_241BB264C();
  uint64_t v56 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v48 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v49 = (char *)v46 - v5;
  uint64_t v6 = sub_241CD6D00();
  uint64_t v57 = *(void (**)(char *, uint64_t))(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v53 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)v46 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v46 - v11;
  uint64_t v13 = sub_241CD6810();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v46 - v18;
  sub_241BB26B4();
  uint64_t v55 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v52 = (uint64_t)v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v50 = (char *)v46 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v51 = (uint64_t)v46 - v25;
  sub_241CD8460();
  sub_241CD67E0();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v19, v13);
  sub_241CD8460();
  sub_241CD67B0();
  v26(v17, v13);
  uint64_t v27 = sub_241BB2748((unint64_t *)&qword_26B02E8D0, MEMORY[0x263F07490]);
  uint64_t v47 = v12;
  uint64_t result = sub_241CDB030();
  if (result)
  {
    uint64_t v30 = v48;
    uint64_t v29 = v49;
    uint64_t v31 = v56;
    uint64_t v32 = &v49[*(int *)(v56 + 48)];
    v46[1] = v27;
    uint64_t v33 = v6;
    uint64_t v34 = v57;
    uint64_t v35 = (void (*)(char *, char *, uint64_t))*((void *)v57 + 4);
    v35(v49, v47, v33);
    v46[0] = v32;
    v35(v32, v58, v33);
    uint64_t v36 = &v30[*(int *)(v31 + 48)];
    uint64_t v37 = (char *)*((void *)v34 + 2);
    uint64_t v47 = (char *)v34 + 16;
    uint64_t v58 = v37;
    ((void (*)(char *, char *, uint64_t))v37)(v30, v29, v33);
    ((void (*)(char *, char *, uint64_t))v37)(v36, v32, v33);
    uint64_t v38 = (uint64_t)v50;
    v35(v50, v30, v33);
    uint64_t v39 = (void (*)(char *, uint64_t))*((void *)v57 + 1);
    v39(v36, v33);
    uint64_t v40 = &v30[*(int *)(v56 + 48)];
    v35(v30, v29, v33);
    v35(v40, (char *)v46[0], v33);
    v35((char *)(v38 + *(int *)(v55 + 36)), v40, v33);
    uint64_t v57 = v39;
    v39(v30, v33);
    uint64_t v41 = v51;
    sub_241BB25E4(v38, v51, (uint64_t (*)(void))sub_241BB26B4);
    uint64_t v42 = v54;
    LOBYTE(v29) = sub_241CDB030();
    uint64_t v43 = v53;
    ((void (*)(char *, uint64_t, uint64_t))v58)(v53, v42, v33);
    uint64_t v44 = v52;
    sub_241BB257C(v41, v52, (uint64_t (*)(void))sub_241BB26B4);
    if (v29) {
      char v45 = sub_241CDB010();
    }
    else {
      char v45 = 0;
    }
    sub_241BB197C(v44, (uint64_t (*)(void))sub_241BB26B4);
    v57(v43, v33);
    sub_241BB197C(v41, (uint64_t (*)(void))sub_241BB26B4);
    return v45 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241BB197C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_241BB19DC(int a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v102 = a5;
  uint64_t v103 = a4;
  uint64_t v8 = sub_241CD84A0();
  uint64_t v106 = *(void *)(v8 - 8);
  uint64_t v107 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v95 - v12;
  uint64_t v14 = sub_241CDA1A0();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)v95 - v19;
  int64_t v21 = *(void *)(a2 + 16);
  if (v21)
  {
    id v105 = v11;
    uint64_t v98 = v18;
    uint64_t v99 = v17;
    uint64_t v100 = v16;
    int v97 = a1;
    uint64_t v22 = sub_241BAE704(a2);
    *(double *)&uint64_t v23 = COERCE_DOUBLE(sub_241A4DE24(v22));
    char v25 = v24;
    swift_bridgeObjectRelease();
    id v101 = a3;
    if ((v25 & 1) == 0)
    {
      double v26 = *(double *)&v23;
LABEL_14:
      uint64_t v109 = MEMORY[0x263F8EE78];
      sub_241A520C8(0, v21, 0);
      uint64_t v43 = v107;
      uint64_t v44 = *(void (**)(char *, unint64_t, uint64_t))(v106 + 16);
      unint64_t v45 = a2 + ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80));
      uint64_t v104 = *(void *)(v106 + 72);
      v106 += 16;
      uint64_t v46 = (void (**)(char *, uint64_t))(v106 - 8);
      do
      {
        v44(v13, v45, v43);
        uint64_t v47 = sub_241CD8490();
        char v49 = v48;
        uint64_t v50 = v105;
        v44(v105, (unint64_t)v13, v43);
        if (v49)
        {
          sub_241CD8480();
          uint64_t v51 = v52;
        }
        else
        {
          uint64_t v51 = v47;
        }
        uint64_t v53 = v50;
        uint64_t v54 = *v46;
        uint64_t v55 = v107;
        (*v46)(v53, v107);
        v54(v13, v55);
        uint64_t v56 = v109;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_241A520C8(0, *(void *)(v56 + 16) + 1, 1);
          uint64_t v56 = v109;
        }
        unint64_t v58 = *(void *)(v56 + 16);
        unint64_t v57 = *(void *)(v56 + 24);
        if (v58 >= v57 >> 1)
        {
          sub_241A520C8(v57 > 1, v58 + 1, 1);
          uint64_t v56 = v109;
        }
        *(void *)(v56 + 16) = v58 + 1;
        *(void *)(v56 + 8 * v58 + 32) = v51;
        v45 += v104;
        --v21;
      }
      while (v21);
      *(double *)&uint64_t v59 = COERCE_DOUBLE(sub_241A4E2E0(v56));
      id v61 = v60;
      swift_release();
      if ((v61 & 1) == 0)
      {
        double v62 = *(double *)&v59;
        id v63 = v101;
        uint64_t v64 = &selRef_setValueClamped_;
        uint64_t v65 = &off_2650F5000;
        goto LABEL_34;
      }
      uint64_t v65 = &off_2650F5000;
      id v63 = v101;
      id v66 = objc_msgSend(v101, sel_chartingRules);
      uint64_t v64 = &selRef_setValueClamped_;
      id v67 = objc_msgSend(v66, sel_axisScalingRule);

      uint64_t v68 = v98;
      if (v67)
      {
        if (objc_msgSend(v67, sel_respondsToSelector_, sel_yAxisBounds))
        {
          id v61 = objc_msgSend(v67, sel_yAxisBounds);
          id v69 = objc_msgSend(v61, sel_maxValue);

          if (v69)
          {
            objc_msgSend(v69, sel_doubleValue);
            double v62 = v70;

            swift_unknownObjectRelease();
            goto LABEL_34;
          }
        }
        swift_unknownObjectRelease();
      }
      sub_241CDA0F0();
      id v61 = v63;
      int v71 = sub_241CDA190();
      os_log_type_t v72 = sub_241CDB650();
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v73 = swift_slowAlloc();
        uint64_t v107 = swift_slowAlloc();
        uint64_t v109 = v107;
        *(_DWORD *)uint64_t v73 = 136315394;
        uint64_t v108 = sub_241A33FE4(0xD00000000000001DLL, 0x8000000241CE24A0, &v109);
        sub_241CDBBF0();
        *(_WORD *)(v73 + 12) = 2080;
        uint64_t v106 = v73 + 14;
        id v74 = objc_msgSend(v61, sel_description);
        uint64_t v75 = sub_241CDB0D0();
        unint64_t v77 = v76;

        uint64_t v64 = &selRef_setValueClamped_;
        uint64_t v65 = &off_2650F5000;
        uint64_t v108 = sub_241A33FE4(v75, v77, &v109);
        id v63 = v101;
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v71, v72, "[%s]: Y-Axis Max for %s unable to be found", (uint8_t *)v73, 0x16u);
        id v61 = (id)v107;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v61, -1, -1);
        MEMORY[0x245637F20](v73, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v98, v100);
      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v68, v100);
      }
      double v62 = 100.0;
LABEL_34:
      id v78 = [v63 (SEL)v65[484]];
      id v79 = [v78 v64[135]];

      if (v79)
      {
        id v80 = objc_msgSend(v102, sel_unitForChartingDisplayType_, v63);
        if (v80)
        {
          uint64_t v81 = v80;
          if (objc_msgSend(v79, sel_respondsToSelector_, sel_setUnit_)) {
            objc_msgSend(v79, sel_setUnit_, v81);
          }
        }
        uint64_t v82 = (void *)sub_241CDB330();
        id v83 = (void *)sub_241CDB330();
        id v78 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v82, v83);

        id v61 = objc_msgSend(v79, sel_yValueRangeForRange_zoomLevel_, v78, v103);
        id v84 = objc_msgSend(v61, sel_minValue);
        if (v84)
        {
          os_log_type_t v85 = v84;
          objc_msgSend(v84, sel_doubleValue);
          double v26 = v86;
        }
        id v87 = objc_msgSend(v61, sel_maxValue);
        if (v87)
        {
          uint64_t v88 = v87;
          objc_msgSend(v87, sel_doubleValue);
          double v62 = v89;
        }
        uint64_t v90 = sub_241CD8A30();
        uint64_t v92 = v91;
        if (v90 == sub_241CD8A30() && v92 == v93)
        {
          swift_bridgeObjectRelease_n();
          double v26 = 0.0;
LABEL_50:
          swift_unknownObjectRelease();

          if (v26 > v62) {
            __break(1u);
          }
          return;
        }
      }
      else
      {
        if (v26 <= v62) {
          return;
        }
        __break(1u);
      }
      char v94 = sub_241CDC100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v94) {
        double v26 = 0.0;
      }
      goto LABEL_50;
    }
    id v27 = objc_msgSend(a3, sel_chartingRules);
    id v28 = objc_msgSend(v27, sel_axisScalingRule);

    if (v28)
    {
      if (objc_msgSend(v28, sel_respondsToSelector_, sel_yAxisBounds))
      {
        id v29 = objc_msgSend(v28, sel_yAxisBounds);
        id v30 = objc_msgSend(v29, sel_minValue);

        if (v30)
        {
          objc_msgSend(v30, sel_doubleValue);
          double v26 = v31;

          swift_unknownObjectRelease();
          goto LABEL_14;
        }
      }
      swift_unknownObjectRelease();
    }
    sub_241CDA0F0();
    id v32 = a3;
    uint64_t v33 = sub_241CDA190();
    os_log_type_t v34 = sub_241CDB650();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      int v96 = v35;
      uint64_t v37 = v36;
      uint64_t v104 = swift_slowAlloc();
      uint64_t v109 = v104;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v108 = sub_241A33FE4(0xD00000000000001DLL, 0x8000000241CE24A0, &v109);
      v95[1] = &v109;
      sub_241CDBBF0();
      *(_WORD *)(v37 + 12) = 2080;
      id v38 = objc_msgSend(v32, sel_description, v37 + 14);
      uint64_t v39 = sub_241CDB0D0();
      unint64_t v41 = v40;

      uint64_t v108 = sub_241A33FE4(v39, v41, &v109);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v33, (os_log_type_t)v96, "[%s]: Y-Axis Min for %s unable to be found", (uint8_t *)v37, 0x16u);
      uint64_t v42 = v104;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v42, -1, -1);
      MEMORY[0x245637F20](v37, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v99 + 8))(v20, v100);
    double v26 = 0.0;
    goto LABEL_14;
  }
}

void sub_241BB2444(uint64_t a1)
{
}

void sub_241BB2464()
{
  if (!qword_26B031FE8)
  {
    sub_241BB24F4(255, (unint64_t *)&qword_26B031FE0, sub_241A72DB8, (void (*)(uint64_t))sub_241A412E8);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031FE8);
    }
  }
}

void sub_241BB24F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_241BB257C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241BB25E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_241BB264C()
{
  if (!qword_26B031FD8)
  {
    sub_241CD6D00();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B031FD8);
    }
  }
}

void sub_241BB26B4()
{
  if (!qword_26B034D08)
  {
    sub_241CD6D00();
    sub_241BB2748((unint64_t *)&qword_26B02E8D0, MEMORY[0x263F07490]);
    unint64_t v0 = sub_241CDB3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034D08);
    }
  }
}

uint64_t sub_241BB2748(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241BB2790(uint64_t a1)
{
}

void sub_241BB27B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SharableModelActivityChartItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  unint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for SharableModelActivityChartItem(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for SharableModelActivityChartItem(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for SharableModelActivityChartItem(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharableModelActivityChartItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharableModelActivityChartItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharableModelActivityChartItem()
{
  return &type metadata for SharableModelActivityChartItem;
}

uint64_t sub_241BB29BC()
{
  return sub_241CD83D0();
}

id sub_241BB29F4()
{
  id v0 = objc_msgSend(self, sel_activitySummaryType);

  return v0;
}

id sub_241BB2A3C()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

id sub_241BB2A64(void *a1, uint64_t a2)
{
  return sub_241BB2B68(a1, a2, *(void **)(v2 + 8), *(unsigned char *)(v2 + 16));
}

uint64_t sub_241BB2A78()
{
  return sub_241CDB7A0();
}

unint64_t sub_241BB2AB0()
{
  id v0 = objc_msgSend(self, sel_activitySummaryType);
  id v1 = objc_msgSend(v0, sel_identifier);

  sub_241CDB0D0();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return 0xD00000000000001FLL;
}

id sub_241BB2B68(void *a1, uint64_t a2, void *a3, char a4)
{
  sub_241A72DB8(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD6D00();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = 0;
  if (!objc_msgSend(a3, sel_hasChartModel)) {
    return v15;
  }
  id v16 = objc_msgSend(a3, sel_chartModel);
  if (!v16) {
    return 0;
  }
  uint64_t v17 = v16;
  if (!a2)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_8;
  }
  sub_241CD8370();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_8:
    sub_241CD6CF0();
    sub_241A9A4DC((uint64_t)v10);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
LABEL_9:
  if ((a4 & 1) != 0 || a4 == 2) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = 6;
  }
  id v20 = objc_msgSend(a1, sel_healthStore);
  id v21 = objc_msgSend(v20, sel_viewControllerFactory);

  uint64_t v22 = (void *)sub_241CD6C60();
  id v15 = objc_msgSend(v21, sel_createActivityChartForActivityMoveMode_displayDate_activityOptions_chartSharableModel_, 1, v22, v19, v17);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v15;
}

uint64_t sub_241BB2DF0()
{
  return sub_241CDB7A0();
}

uint64_t sub_241BB2E28()
{
  if (qword_26B038428 != -1) {
    swift_once();
  }
  return sub_241CD69E0();
}

uint64_t sub_241BB2ECC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241BB2EFC(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*sub_241BB2F34())()
{
  return nullsub_1;
}

uint64_t sub_241BB2F54()
{
  return sub_241CD83D0();
}

unint64_t sub_241BB2F88()
{
  return sub_241BB4C0C();
}

uint64_t sub_241BB2FB0(uint64_t a1, void *a2)
{
  return sub_241BB3808(a2);
}

uint64_t sub_241BB2FFC()
{
  if (qword_26B038428 != -1) {
    swift_once();
  }
  return sub_241CD69E0();
}

uint64_t sub_241BB309C(uint64_t a1, void *a2)
{
  return sub_241BB420C(a2);
}

uint64_t sub_241BB30DC()
{
  return sub_241CD86B0();
}

void sub_241BB3120(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_241B5489C(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_241CEB720;
  id v5 = objc_msgSend(self, sel_activitySummaryType);
  id v6 = objc_msgSend(v5, sel_identifier);

  uint64_t v7 = sub_241CDB0D0();
  uint64_t v9 = v8;

  *(void *)(v4 + 32) = v7;
  *(void *)(v4 + 40) = v9;
  *(void *)(v4 + 48) = 0xD000000000000010;
  *(void *)(v4 + 56) = 0x8000000241CE2500;
  uint64_t v10 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  id v11 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v11)
  {
    uint64_t v12 = sub_241CDB0D0();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  *(void *)a2 = 0xD000000000000010;
  *(void *)(a2 + 8) = 0x8000000241CE2500;
  *(unsigned char *)(a2 + 16) = a1;
  *(void *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v14;
}

void sub_241BB3274(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_241B5489C(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_241CEB720;
  id v5 = objc_msgSend(self, sel_activitySummaryType);
  id v6 = objc_msgSend(v5, sel_identifier);

  uint64_t v7 = sub_241CDB0D0();
  uint64_t v9 = v8;

  *(void *)(v4 + 32) = v7;
  *(void *)(v4 + 40) = v9;
  *(void *)(v4 + 48) = 0x65766F4D776F6853;
  *(void *)(v4 + 56) = 0xEF736574756E694DLL;
  uint64_t v10 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  id v11 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v11)
  {
    uint64_t v12 = sub_241CDB0D0();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  *(void *)a2 = 0x65766F4D776F6853;
  *(void *)(a2 + 8) = 0xEF736574756E694DLL;
  *(unsigned char *)(a2 + 16) = a1;
  *(void *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v14;
}

ValueMetadata *_s37ActivityShowMoveMinutesDataSourceItemVMa()
{
  return &_s37ActivityShowMoveMinutesDataSourceItemVN;
}

uint64_t _s37ActivityShowMoveMinutesDataSourceItemVwxx_0()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s37ActivityShowMoveMinutesDataSourceItemVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s37ActivityShowMoveMinutesDataSourceItemVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s37ActivityShowMoveMinutesDataSourceItemVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s37ActivityShowMoveMinutesDataSourceItemVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_241BB358C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s38ActivityShowActiveEnergyDataSourceItemVMa()
{
  return &_s38ActivityShowActiveEnergyDataSourceItemVN;
}

uint64_t sub_241BB35E4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_241BB370C(a1, a2, a3, (uint64_t (*)(void))sub_241AFB510, (uint64_t (*)(void))sub_241BB3624, (uint64_t (*)(void))sub_241BB3678);
}

unint64_t sub_241BB3624()
{
  unint64_t result = qword_268D430F0;
  if (!qword_268D430F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D430F0);
  }
  return result;
}

unint64_t sub_241BB3678()
{
  unint64_t result = qword_268D430F8;
  if (!qword_268D430F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D430F8);
  }
  return result;
}

uint64_t sub_241BB36CC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_241BB370C(a1, a2, a3, (uint64_t (*)(void))sub_241AFB5C0, (uint64_t (*)(void))sub_241BB3760, (uint64_t (*)(void))sub_241BB37B4);
}

uint64_t sub_241BB370C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_241BB3760()
{
  unint64_t result = qword_268D43100;
  if (!qword_268D43100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43100);
  }
  return result;
}

unint64_t sub_241BB37B4()
{
  unint64_t result = qword_268D43108;
  if (!qword_268D43108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43108);
  }
  return result;
}

uint64_t sub_241BB3808(void *a1)
{
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  double v70 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v77 = (char *)&v66 - v7;
  uint64_t v8 = sub_241CD8C50();
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v75 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v66 - v11;
  uint64_t v13 = sub_241CD8C60();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v83 = *(_OWORD *)v1;
  LODWORD(v74) = v1[16];
  sub_241BB4D18((uint64_t)(v1 + 24), (uint64_t)v82);
  id v17 = objc_msgSend(a1, sel_resolvedHealthStore);
  if (v17)
  {
    uint64_t v18 = v17;
    unint64_t v77 = v1;
    uint64_t v72 = v14;
    uint64_t v73 = v13;
    uint64_t v68 = v4;
    uint64_t v69 = v3;
    uint64_t v19 = self;
    id v20 = objc_msgSend(v19, sel_activitySummaryType);
    id v21 = objc_msgSend(v19, (SEL)&selRef_sampleType);
    sub_241BB4D98();
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_241CEB720;
    *(void *)(v22 + 56) = &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent;
    *(void *)(v22 + 64) = sub_241ABE778();
    *(void *)(v22 + 32) = 2;
    *(unsigned char *)(v22 + 40) = 0;
    *(void *)(v22 + 96) = &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent;
    *(void *)(v22 + 104) = sub_241ABE8D8();
    *(void *)(v22 + 72) = v21;
    *(void *)(v22 + 80) = 2;
    uint64_t v23 = v8;
    *(unsigned char *)(v22 + 88) = 0;
    sub_241CD8BB0();

    sub_241CDB7B0();
    id v24 = v18;
    char v25 = a1;
    sub_241CDB7D0();
    id v71 = v24;
    sub_241CD8C20();
    sub_241CD8B50();
    uint64_t v26 = v76;
    id v27 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
    id v28 = v12;
    uint64_t v74 = v23;
    v27(v75, v12, v23);
    swift_retain();
    id v29 = objc_msgSend(v19, sel_activitySummaryType);
    id v30 = objc_allocWithZone((Class)sub_241CD8CE0());
    double v31 = (void *)sub_241CD8CC0();
    uint64_t v32 = v26;
    uint64_t v33 = v16;
    if (qword_26B038428 != -1) {
      swift_once();
    }
    sub_241CD69E0();
    sub_241CD8CD0();
    id v78 = &unk_26F5DCBC8;
    uint64_t v34 = swift_dynamicCastObjCProtocolConditional();
    if (v34)
    {
      uint64_t v35 = v34;
      long long v36 = *((_OWORD *)v77 + 1);
      v80[0] = *(_OWORD *)v77;
      v80[1] = v36;
      uint64_t v81 = *((void *)v77 + 4);
      id v37 = v31;
      sub_241BB4DF0((uint64_t)&v83);
      sub_241BB4DF0((uint64_t)v82);
      objc_msgSend(v25, sel_showAdaptively_sender_, v35, sub_241CDC150());

      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      id v51 = objc_msgSend(v25, sel_navigationController);
      if (v51)
      {
        uint64_t v52 = v51;
        objc_msgSend(v51, sel_pushViewController_animated_, v31, 1);

        swift_release();
      }
      else
      {
        uint64_t v53 = v70;
        sub_241CDA120();
        id v54 = v31;
        uint64_t v55 = sub_241CDA190();
        os_log_type_t v56 = sub_241CDB650();
        if (os_log_type_enabled(v55, v56))
        {
          uint64_t v57 = swift_slowAlloc();
          uint64_t v75 = (char *)swift_slowAlloc();
          *(void *)&v80[0] = v75;
          *(_DWORD *)uint64_t v57 = 136315394;
          uint64_t v79 = sub_241A33FE4(0xD000000000000025, 0x8000000241CF1040, (uint64_t *)v80);
          unint64_t v77 = v33;
          sub_241CDBBF0();
          *(_WORD *)(v57 + 12) = 2080;
          uint64_t v66 = v57 + 14;
          id v58 = v54;
          id v59 = objc_msgSend(v58, sel_description);
          uint64_t v60 = sub_241CDB0D0();
          id v67 = v28;
          uint64_t v61 = v60;
          double v62 = v53;
          unint64_t v64 = v63;

          uint64_t v79 = sub_241A33FE4(v61, v64, (uint64_t *)v80);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241A23000, v55, v56, "[%s]: Unable to handle tap of detail item: %s", (uint8_t *)v57, 0x16u);
          uint64_t v65 = v75;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v65, -1, -1);
          MEMORY[0x245637F20](v57, -1, -1);

          swift_release();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v62, v69);
          (*(void (**)(char *, uint64_t))(v76 + 8))(v67, v74);
          return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v77, v73);
        }

        swift_release();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v53, v69);
      }
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v74);
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v33, v73);
  }
  else
  {
    sub_241CDA120();
    id v38 = a1;
    uint64_t v39 = sub_241CDA190();
    os_log_type_t v40 = sub_241CDB650();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v69 = v3;
      uint64_t v42 = v41;
      uint64_t v43 = v4;
      uint64_t v44 = swift_slowAlloc();
      *(void *)&v80[0] = v44;
      *(_DWORD *)uint64_t v42 = 136315394;
      uint64_t v79 = sub_241A33FE4(0xD000000000000025, 0x8000000241CF1040, (uint64_t *)v80);
      sub_241CDBBF0();
      *(_WORD *)(v42 + 12) = 2080;
      uint64_t v76 = v42 + 14;
      id v45 = v38;
      id v46 = objc_msgSend(v45, sel_description);
      uint64_t v47 = sub_241CDB0D0();
      unint64_t v49 = v48;

      uint64_t v79 = sub_241A33FE4(v47, v49, (uint64_t *)v80);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v39, v40, "%s No resolved health store available in %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v44, -1, -1);
      MEMORY[0x245637F20](v42, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v77, v69);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v77, v3);
    }
  }
}

uint64_t sub_241BB420C(void *a1)
{
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  double v70 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v77 = (char *)&v66 - v7;
  uint64_t v8 = sub_241CD8C50();
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v75 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v66 - v11;
  uint64_t v13 = sub_241CD8C60();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v83 = *(_OWORD *)v1;
  LODWORD(v74) = v1[16];
  sub_241BB4D18((uint64_t)(v1 + 24), (uint64_t)v82);
  id v17 = objc_msgSend(a1, sel_resolvedHealthStore);
  if (v17)
  {
    uint64_t v18 = v17;
    unint64_t v77 = v1;
    uint64_t v72 = v14;
    uint64_t v73 = v13;
    uint64_t v68 = v4;
    uint64_t v69 = v3;
    uint64_t v19 = self;
    id v20 = objc_msgSend(v19, sel_activitySummaryType);
    id v21 = objc_msgSend(v19, (SEL)&selRef_sampleType);
    sub_241BB4D98();
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_241CEB720;
    *(void *)(v22 + 56) = &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent;
    *(void *)(v22 + 64) = sub_241ABE778();
    *(void *)(v22 + 32) = 1;
    *(unsigned char *)(v22 + 40) = 0;
    *(void *)(v22 + 96) = &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent;
    *(void *)(v22 + 104) = sub_241ABE8D8();
    *(void *)(v22 + 72) = v21;
    *(void *)(v22 + 80) = 1;
    uint64_t v23 = v8;
    *(unsigned char *)(v22 + 88) = 0;
    sub_241CD8BB0();

    sub_241CDB7B0();
    id v24 = v18;
    char v25 = a1;
    sub_241CDB7D0();
    id v71 = v24;
    sub_241CD8C20();
    sub_241CD8B50();
    uint64_t v26 = v76;
    id v27 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
    id v28 = v12;
    uint64_t v74 = v23;
    v27(v75, v12, v23);
    swift_retain();
    id v29 = objc_msgSend(v19, sel_activitySummaryType);
    id v30 = objc_allocWithZone((Class)sub_241CD8CE0());
    double v31 = (void *)sub_241CD8CC0();
    uint64_t v32 = v26;
    uint64_t v33 = v16;
    if (qword_26B038428 != -1) {
      swift_once();
    }
    sub_241CD69E0();
    sub_241CD8CD0();
    id v78 = &unk_26F5DCBC8;
    uint64_t v34 = swift_dynamicCastObjCProtocolConditional();
    if (v34)
    {
      uint64_t v35 = v34;
      long long v36 = *((_OWORD *)v77 + 1);
      v80[0] = *(_OWORD *)v77;
      v80[1] = v36;
      uint64_t v81 = *((void *)v77 + 4);
      id v37 = v31;
      sub_241BB4DF0((uint64_t)&v83);
      sub_241BB4DF0((uint64_t)v82);
      objc_msgSend(v25, sel_showAdaptively_sender_, v35, sub_241CDC150());

      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      id v51 = objc_msgSend(v25, sel_navigationController);
      if (v51)
      {
        uint64_t v52 = v51;
        objc_msgSend(v51, sel_pushViewController_animated_, v31, 1);

        swift_release();
      }
      else
      {
        uint64_t v53 = v70;
        sub_241CDA120();
        id v54 = v31;
        uint64_t v55 = sub_241CDA190();
        os_log_type_t v56 = sub_241CDB650();
        if (os_log_type_enabled(v55, v56))
        {
          uint64_t v57 = swift_slowAlloc();
          uint64_t v75 = (char *)swift_slowAlloc();
          *(void *)&v80[0] = v75;
          *(_DWORD *)uint64_t v57 = 136315394;
          uint64_t v79 = sub_241A33FE4(0xD000000000000026, 0x8000000241CF1070, (uint64_t *)v80);
          unint64_t v77 = v33;
          sub_241CDBBF0();
          *(_WORD *)(v57 + 12) = 2080;
          uint64_t v66 = v57 + 14;
          id v58 = v54;
          id v59 = objc_msgSend(v58, sel_description);
          uint64_t v60 = sub_241CDB0D0();
          id v67 = v28;
          uint64_t v61 = v60;
          double v62 = v53;
          unint64_t v64 = v63;

          uint64_t v79 = sub_241A33FE4(v61, v64, (uint64_t *)v80);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241A23000, v55, v56, "[%s]: Unable to handle tap of detail item: %s", (uint8_t *)v57, 0x16u);
          uint64_t v65 = v75;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v65, -1, -1);
          MEMORY[0x245637F20](v57, -1, -1);

          swift_release();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v62, v69);
          (*(void (**)(char *, uint64_t))(v76 + 8))(v67, v74);
          return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v77, v73);
        }

        swift_release();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v53, v69);
      }
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v74);
    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v33, v73);
  }
  else
  {
    sub_241CDA120();
    id v38 = a1;
    uint64_t v39 = sub_241CDA190();
    os_log_type_t v40 = sub_241CDB650();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v69 = v3;
      uint64_t v42 = v41;
      uint64_t v43 = v4;
      uint64_t v44 = swift_slowAlloc();
      *(void *)&v80[0] = v44;
      *(_DWORD *)uint64_t v42 = 136315394;
      uint64_t v79 = sub_241A33FE4(0xD000000000000026, 0x8000000241CF1070, (uint64_t *)v80);
      sub_241CDBBF0();
      *(_WORD *)(v42 + 12) = 2080;
      uint64_t v76 = v42 + 14;
      id v45 = v38;
      id v46 = objc_msgSend(v45, sel_description);
      uint64_t v47 = sub_241CDB0D0();
      unint64_t v49 = v48;

      uint64_t v79 = sub_241A33FE4(v47, v49, (uint64_t *)v80);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v39, v40, "%s No resolved health store available in %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v44, -1, -1);
      MEMORY[0x245637F20](v42, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v77, v69);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v77, v3);
    }
  }
}

unint64_t sub_241BB4C0C()
{
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  id v0 = objc_msgSend(self, sel_activitySummaryType);
  id v1 = objc_msgSend(v0, sel_identifier);

  sub_241CDB0D0();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return 0xD000000000000018;
}

uint64_t sub_241BB4D18(uint64_t a1, uint64_t a2)
{
  sub_241B5489C(0, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241BB4D98()
{
  if (!qword_268D43110)
  {
    sub_241ABE880();
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43110);
    }
  }
}

uint64_t sub_241BB4DF0(uint64_t a1)
{
  return a1;
}

id sub_241BB4E38(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A5D1DC();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v44 - v14;
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (!v16)
  {
    sub_241CDA140();
    id v32 = a1;
    uint64_t v33 = sub_241CDA190();
    os_log_type_t v34 = sub_241CDB650();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(void *)&v47[0] = v45;
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v36 = sub_241CDC270();
      uint64_t v46 = v7;
      uint64_t v49 = sub_241A33FE4(v36, v37, (uint64_t *)v47);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      v44[1] = v35 + 14;
      id v38 = v32;
      id v39 = objc_msgSend(v38, sel_description);
      uint64_t v40 = sub_241CDB0D0();
      unint64_t v42 = v41;

      uint64_t v49 = sub_241A33FE4(v40, v42, (uint64_t *)v47);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v33, v34, "[%s]: Unsupported sample type: %s", (uint8_t *)v35, 0x16u);
      uint64_t v43 = v45;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v43, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v6);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return 0;
  }
  uint64_t v17 = v16;
  sub_241A313AC(0, &qword_268D421F0);
  id v18 = a1;
  uint64_t v19 = (void *)sub_241A4F420(v17);
  uint64_t v20 = a2
      + *(int *)(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0) + 32);
  uint64_t v21 = sub_241CD9ED0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v20, v21);
  uint64_t v22 = *MEMORY[0x263F46C78];
  uint64_t v23 = sub_241CD9970();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v15, v22, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v15, 0, 1, v23);
  id v25 = a3;
  id result = objc_msgSend(v19, sel_data);
  if (result)
  {
    id v27 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v28 = sub_241CD6AE0();
    unint64_t v30 = v29;

    sub_241A5D234((uint64_t)v15, (uint64_t)v13);
    uint64_t v48 = 0;
    memset(v47, 0, sizeof(v47));
    id v31 = sub_241A54648(v28, v30, 9, (uint64_t)v13, (uint64_t)v25, 0, (uint64_t)v47);

    sub_241A37374(v28, v30);
    sub_241A5D298((uint64_t)v15);

    return v31;
  }
  __break(1u);
  return result;
}

uint64_t sub_241BB5324()
{
  return type metadata accessor for GAD7AssessmentCurrentValueSummarySharableModelGenerator();
}

uint64_t type metadata accessor for GAD7AssessmentCurrentValueSummarySharableModelGenerator()
{
  uint64_t result = qword_26B034528;
  if (!qword_26B034528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241BB5378(uint64_t a1)
{
  if (a1 != 10) {
    return 0;
  }
  swift_unknownObjectRetain();
  return v1;
}

uint64_t sub_241BB5468(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BB97CC(0, &qword_268D42F30, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = sub_241CD6AC0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_notification);
  sub_241CDB6E0();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    uint64_t v25 = v3;
    uint64_t v26 = v2;
    sub_241BB9BF4((uint64_t)v8);
    sub_241CDA160();
    id v14 = a1;
    uint64_t v15 = sub_241CDA190();
    os_log_type_t v16 = sub_241CDB650();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      id v18 = (void *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v29 = v24;
      *(_DWORD *)uint64_t v17 = 136446466;
      uint64_t v19 = sub_241CDC270();
      uint64_t v28 = sub_241A33FE4(v19, v20, &v29);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2114;
      id v21 = objc_msgSend(v14, sel_notification);
      uint64_t v28 = (uint64_t)v21;
      sub_241CDBBF0();
      *id v18 = v21;

      _os_log_impl(&dword_241A23000, v15, v16, "%{public}s Cannot access URL for %{public}@", (uint8_t *)v17, 0x16u);
      sub_241BB9C80(0, (unint64_t *)&qword_26B038850, (uint64_t)qword_26B038448, 0x263F8C6D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_241A313AC);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v18, -1, -1);
      uint64_t v22 = v24;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v22, -1, -1);
      MEMORY[0x245637F20](v17, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_241BB8144((uint64_t)v12);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void sub_241BB58B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthStore;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthStore);
  if (v3
    || (id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init),
        uint64_t v5 = *(void **)(v1 + v2),
        *(void *)(v1 + v2) = v4,
        v5,
        (uint64_t v3 = *(void **)(v1 + v2)) != 0))
  {
    uint64_t v6 = OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingNotificationSyncStore;
    id v17 = v3;
    if (*(void *)(v1 + OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingNotificationSyncStore))
    {
      id v7 = v3;
    }
    else
    {
      sub_241CDB0D0();
      id v8 = objc_allocWithZone(MEMORY[0x263F0A580]);
      id v9 = v17;
      uint64_t v10 = (void *)sub_241CDB090();
      swift_bridgeObjectRelease();
      id v11 = objc_msgSend(v8, sel_initWithClientIdentifier_healthStore_, v10, v9);

      uint64_t v12 = *(void **)(v1 + v6);
      *(void *)(v1 + v6) = v11;
    }
    uint64_t v13 = OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingAlertsNotificationContentStateManager;
    if (!*(void *)(v1
                    + OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingAlertsNotificationContentStateManager))
    {
      sub_241CD7320();
      id v14 = v17;
      *(void *)(v1 + v13) = sub_241CD7300();
      swift_release();
    }
    uint64_t v15 = OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_trendsNotificationContentStateManager;
    if (*(void *)(v1 + OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_trendsNotificationContentStateManager))
    {
    }
    else
    {
      sub_241CD7320();
      id v16 = v17;
      *(void *)(v1 + v15) = sub_241CD7300();

      swift_release();
    }
  }
}

uint64_t sub_241BB5AD0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v39 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA160();
  id v14 = sub_241CDA190();
  os_log_type_t v15 = sub_241CDB670();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v40 = ObjectType;
  uint64_t v41 = a3;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    unint64_t v37 = a1;
    uint64_t v18 = v17;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v43 = v36;
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v19 = sub_241CDC270();
    uint64_t v38 = v5;
    uint64_t v42 = sub_241A33FE4(v19, v20, &v43);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v42 = sub_241A33FE4(0xD000000000000060, 0x8000000241CE26F0, &v43);
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v14, v15, "%{public}s %s running", (uint8_t *)v18, 0x16u);
    uint64_t v21 = v36;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v21, -1, -1);
    uint64_t v22 = v18;
    a1 = v37;
    MEMORY[0x245637F20](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v39);
  id v23 = objc_msgSend(a1, sel_actionIdentifier);
  uint64_t v24 = sub_241CDB0D0();
  uint64_t v26 = v25;

  if (v24 == sub_241CDB0D0() && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v31 = v40;
    uint64_t v30 = v41;
  }
  else
  {
    char v29 = sub_241CDC100();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = v40;
    uint64_t v30 = v41;
    if ((v29 & 1) == 0) {
      sub_241BB5468(a1);
    }
  }
  uint64_t v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v33 = (void *)swift_allocObject();
  void v33[2] = v32;
  v33[3] = a1;
  v33[4] = v30;
  v33[5] = a4;
  v33[6] = v31;
  swift_retain();
  id v34 = a1;
  swift_retain();
  sub_241BB68E0(v34, a2, (uint64_t)sub_241BB968C, (uint64_t)v33);
  swift_release();
  return swift_release();
}

uint64_t sub_241BB5F1C()
{
  return sub_241BB9E7C(&qword_26B0369F0, (void (*)(uint64_t))type metadata accessor for SummariesAppDelegate);
}

void sub_241BB5F64(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v29 = sub_241CDA1A0();
  uint64_t v8 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1 + 16;
  sub_241CDA160();
  uint64_t v12 = sub_241CDA190();
  os_log_type_t v13 = sub_241CDB670();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v27 = a3;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = a4;
    os_log_type_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    v31[0] = v16;
    uint64_t v26 = a2;
    *(_DWORD *)os_log_type_t v15 = 136315138;
    uint64_t v17 = sub_241CDC270();
    uint64_t v30 = sub_241A33FE4(v17, v18, v31);
    a2 = v26;
    a3 = v27;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v12, v13, "%s About to send dismiss instruction", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v16, -1, -1);
    uint64_t v19 = v15;
    a4 = v28;
    MEMORY[0x245637F20](v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v29);
  swift_beginAccess();
  uint64_t v20 = MEMORY[0x245638000](v11);
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    swift_beginAccess();
    uint64_t v22 = MEMORY[0x245638000](v11);
    if (v22)
    {
      id v23 = (void *)v22;
      uint64_t v24 = *(void **)(v22 + OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingNotificationSyncStore);
      id v25 = v24;
    }
    else
    {
      uint64_t v24 = 0;
    }
    sub_241BB61E8(a2, v24, a3, a4);
  }
}

uint64_t sub_241BB61E8(void *a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  id v67 = a3;
  id v64 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v63 = sub_241CD6D00();
  uint64_t v7 = *(void *)(v63 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v63);
  double v70 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v58 - v10;
  uint64_t v12 = sub_241CDA1A0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v66 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v58 - v16;
  sub_241CDA160();
  unint64_t v18 = sub_241CDA190();
  os_log_type_t v19 = sub_241CDB670();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v61 = a2;
  uint64_t v62 = v7;
  id v71 = v11;
  uint64_t v65 = ObjectType;
  uint64_t v68 = v13;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    aBlock[0] = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v23 = sub_241CDC270();
    uint64_t v72 = sub_241A33FE4(v23, v24, aBlock);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v72 = sub_241A33FE4(0xD000000000000050, 0x8000000241CE27E0, aBlock);
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v18, v19, "%s %s running", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v22, -1, -1);
    MEMORY[0x245637F20](v21, -1, -1);

    uint64_t v25 = v68;
  }
  else
  {

    uint64_t v25 = v13;
  }
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t))(v25 + 8);
  uint64_t v27 = v26(v17, v12);
  uint64_t v28 = v12;
  if (v69[OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_shouldDismissNotificationsUrgently] != 1) {
    return v67(v27);
  }
  id v29 = objc_msgSend(v64, sel_notification);
  id v30 = objc_msgSend(v29, sel_request);

  id v31 = objc_msgSend(v30, sel_identifier);
  uint64_t v32 = (void *)sub_241CDB0D0();
  unint64_t v34 = v33;

  sub_241CD6CF0();
  sub_241CDB350();
  sub_241CD6C50();
  id v35 = objc_allocWithZone(MEMORY[0x263F0A560]);
  swift_bridgeObjectRetain();
  uint64_t v36 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  unint64_t v37 = (void *)sub_241CD6C60();
  uint64_t v69 = objc_msgSend(v35, sel_initWithAction_categoryIdentifier_expirationDate_, 1, v36, v37);

  uint64_t v38 = v66;
  sub_241CDA160();
  swift_bridgeObjectRetain_n();
  uint64_t v39 = sub_241CDA190();
  os_log_type_t v40 = sub_241CDB670();
  BOOL v41 = os_log_type_enabled(v39, v40);
  uint64_t v60 = a4;
  id v64 = v32;
  if (v41)
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v59 = v28;
    uint64_t v43 = v42;
    uint64_t v44 = swift_slowAlloc();
    aBlock[0] = v44;
    *(_DWORD *)uint64_t v43 = 136446466;
    uint64_t v45 = sub_241CDC270();
    uint64_t v72 = sub_241A33FE4(v45, v46, aBlock);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_241A33FE4((uint64_t)v32, v34, aBlock);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_241A23000, v39, v40, "%{public}s Sending dismiss instruction for %s)", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v44, -1, -1);
    MEMORY[0x245637F20](v43, -1, -1);

    uint64_t v47 = v66;
    uint64_t v48 = v59;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v47 = v38;
    uint64_t v48 = v28;
  }
  v26(v47, v48);
  uint64_t v51 = v62;
  uint64_t v50 = v63;
  uint64_t v52 = v61;
  uint64_t v53 = v69;
  if (v61)
  {
    id v54 = (void *)swift_allocObject();
    v54[2] = v64;
    v54[3] = v34;
    uint64_t v55 = v60;
    v54[4] = v67;
    v54[5] = v55;
    v54[6] = v65;
    aBlock[4] = (uint64_t)sub_241BB9BCC;
    aBlock[5] = (uint64_t)v54;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_241BB80CC;
    aBlock[3] = (uint64_t)&unk_26F5C4A38;
    os_log_type_t v56 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v52, sel_sendNotificationInstruction_completion_, v53, v56);
    _Block_release(v56);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v57 = *(void (**)(char *, uint64_t))(v51 + 8);
  v57(v70, v50);
  return ((uint64_t (*)(char *, uint64_t))v57)(v71, v50);
}

uint64_t sub_241BB68E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v53 = a1;
  uint64_t v54 = a3;
  uint64_t ObjectType = swift_getObjectType();
  sub_241BB969C();
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v44 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CDA1A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v42 - v16;
  sub_241CDA160();
  unint64_t v18 = sub_241CDA190();
  os_log_type_t v19 = sub_241CDB670();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v52 = ObjectType;
  uint64_t v47 = v5;
  uint64_t v43 = a2;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v51 = v11;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v50 = v12;
    uint64_t v24 = v23;
    v55[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v49 = v15;
    uint64_t v25 = sub_241CDC270();
    uint64_t v56 = sub_241A33FE4(v25, v26, v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v56 = sub_241A33FE4(0xD000000000000054, 0x8000000241CE2760, v55);
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v18, v19, "%s %s running", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v24;
    uint64_t v12 = v50;
    MEMORY[0x245637F20](v27, -1, -1);
    uint64_t v28 = v22;
    uint64_t v11 = v51;
    MEMORY[0x245637F20](v28, -1, -1);
  }

  uint64_t v48 = *(void (**)(char *, uint64_t))(v12 + 8);
  v48(v17, v11);
  id v29 = objc_msgSend(v53, sel_notification);
  id v30 = objc_msgSend(v29, sel_request);

  id v31 = objc_msgSend(v30, sel_content);
  id v32 = objc_msgSend(v31, sel_userInfo);

  unint64_t v33 = sub_241CDAF90();
  unint64_t v34 = sub_241B5A440(v33);
  uint64_t v35 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v35);
  *(&v42 - 2) = v43;
  uint64_t v36 = sub_241AFEF74((void *(*)(uint64_t *__return_ptr, uint64_t))sub_241BB97B0, (uint64_t)(&v42 - 4), v34);
  swift_bridgeObjectRelease();
  v55[0] = v36;
  sub_241BB9730();
  sub_241BB97CC(0, &qword_268D43210, (uint64_t (*)(uint64_t))sub_241BB9730, MEMORY[0x263F8D488]);
  sub_241BB9E7C(&qword_268D43208, (void (*)(uint64_t))sub_241BB9730);
  sub_241BB9830();
  unint64_t v37 = v44;
  sub_241CDA4C0();
  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = v54;
  v38[3] = a4;
  uint64_t v39 = v52;
  void v38[4] = v52;
  *(void *)(swift_allocObject() + 16) = v39;
  sub_241BB9E7C(&qword_268D43220, (void (*)(uint64_t))sub_241BB969C);
  swift_retain();
  uint64_t v40 = v46;
  sub_241CDA740();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v40);
  swift_beginAccess();
  sub_241CDA520();
  swift_endAccess();

  return swift_release();
}

uint64_t sub_241BB7170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_241CD7E10();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  sub_241BB9914();
  uint64_t v22 = *(void *)(v10 - 8);
  uint64_t v23 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BB99C0(a2, (uint64_t)v24);
  uint64_t v13 = v25;
  if (v25)
  {
    BOOL v20 = a3;
    sub_241A311E0(v24, v25);
    uint64_t v21 = v3;
    uint64_t v26 = sub_241CD7D80();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_241BB9AE0;
    *(void *)(v16 + 24) = v15;
    sub_241A97D54();
    sub_241BB9E7C((unint64_t *)&qword_26B02EA70, (void (*)(uint64_t))sub_241A97D54);
    sub_241CDA710();
    a3 = v20;
    swift_release();
    swift_release();
    sub_241A31190((uint64_t)v24);
    sub_241BB9E7C((unint64_t *)&unk_268D43230, (void (*)(uint64_t))sub_241BB9914);
    uint64_t v17 = v23;
    uint64_t v13 = sub_241CDA6D0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v12, v17);
  }
  else
  {
    uint64_t result = sub_241BB9584((uint64_t)v24);
  }
  *a3 = v13;
  return result;
}

uint64_t sub_241BB7488(void **a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = *a1;
  if (v13)
  {
    id v14 = v13;
    sub_241CDA160();
    id v15 = v13;
    id v16 = v13;
    uint64_t v17 = sub_241CDA190();
    os_log_type_t v18 = sub_241CDB650();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v35 = a3;
      uint64_t v21 = v20;
      uint64_t v38 = v20;
      *(_DWORD *)uint64_t v19 = 136446466;
      uint64_t v36 = a2;
      uint64_t v22 = sub_241CDC270();
      uint64_t v37 = sub_241A33FE4(v22, v23, &v38);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      uint64_t v37 = (uint64_t)v13;
      id v24 = v13;
      sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
      uint64_t v25 = sub_241CDB130();
      uint64_t v37 = sub_241A33FE4(v25, v26, &v38);
      a2 = v36;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241A23000, v17, v18, "%{public}s Could not acknowledge notification: %{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v21, -1, -1);
      MEMORY[0x245637F20](v19, -1, -1);
    }
    else
    {
    }
    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    sub_241CDA160();
    uint64_t v27 = sub_241CDA190();
    os_log_type_t v28 = sub_241CDB670();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v35 = a3;
      id v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v38 = v30;
      uint64_t v36 = a2;
      *(_DWORD *)id v29 = 136446210;
      uint64_t v31 = sub_241CDC270();
      uint64_t v37 = sub_241A33FE4(v31, v32, &v38);
      a2 = v36;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v27, v28, "%{public}s Acknowledged all notifiable content state", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v30, -1, -1);
      MEMORY[0x245637F20](v29, -1, -1);
    }

    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return a2(v33);
}

uint64_t sub_241BB7880(uint64_t a1)
{
  uint64_t v2 = sub_241CD7E10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA160();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v10 = sub_241CDA190();
  os_log_type_t v11 = sub_241CDB670();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v23 = v7;
    uint64_t v13 = v12;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v25 = v21;
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v14 = sub_241CDC270();
    uint64_t v24 = sub_241A33FE4(v14, v15, &v25);
    uint64_t v22 = v6;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v16 = sub_241CD7E00();
    uint64_t v24 = sub_241A33FE4(v16, v17, &v25);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl(&dword_241A23000, v10, v11, "%{public}s Updated notification content state to %s", (uint8_t *)v13, 0x16u);
    uint64_t v18 = v21;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v18, -1, -1);
    MEMORY[0x245637F20](v13, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_241BB7B90(int a1, void *a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(void), uint64_t a6)
{
  LODWORD(v47) = a1;
  uint64_t v11 = sub_241CDA1A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v50 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v41 - v15;
  sub_241CDA160();
  swift_bridgeObjectRetain_n();
  unint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  LODWORD(v46) = v18;
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v49 = v12;
  uint64_t v45 = a3;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v44 = a2;
    uint64_t v21 = v20;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v52 = v43;
    *(_DWORD *)uint64_t v21 = 136446722;
    uint64_t v48 = a5;
    uint64_t v22 = sub_241CDC270();
    unint64_t v42 = a4;
    uint64_t v51 = sub_241A33FE4(v22, v23, &v52);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    a4 = v42;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_241A33FE4(a3, a4, &v52);
    a5 = v48;
    uint64_t v12 = v49;
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 22) = 1024;
    LODWORD(v51) = v47 & 1;
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v17, (os_log_type_t)v46, "%{public}s Sent dismiss instruction for %s successfully: %{BOOL}d", (uint8_t *)v21, 0x1Cu);
    uint64_t v24 = v43;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v24, -1, -1);
    uint64_t v25 = v21;
    a2 = v44;
    MEMORY[0x245637F20](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v26 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  uint64_t v27 = v26(v16, v11);
  if (a2)
  {
    id v28 = a2;
    sub_241CDA160();
    swift_bridgeObjectRetain();
    id v29 = a2;
    swift_bridgeObjectRetain();
    id v30 = a2;
    uint64_t v31 = sub_241CDA190();
    os_log_type_t v32 = sub_241CDB650();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v52 = v46;
      *(_DWORD *)uint64_t v33 = 136446722;
      uint64_t v48 = a5;
      uint64_t v34 = sub_241CDC270();
      uint64_t v51 = sub_241A33FE4(v34, v35, &v52);
      uint64_t v47 = a6;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_241A33FE4(v45, a4, &v52);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 22) = 2082;
      uint64_t v51 = (uint64_t)a2;
      id v36 = a2;
      sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
      uint64_t v37 = sub_241CDB130();
      uint64_t v51 = sub_241A33FE4(v37, v38, &v52);
      a5 = v48;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241A23000, v31, v32, "%{public}s Unable to send dismiss instruction for %s. %{public}s", (uint8_t *)v33, 0x20u);
      uint64_t v39 = v46;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v39, -1, -1);
      MEMORY[0x245637F20](v33, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v27 = v26(v50, v11);
  }
  return a5(v27);
}

void sub_241BB80CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_241BB8144(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_241CD6AC0();
  uint64_t v53 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v53 + 64);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v51 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v43 - v5;
  uint64_t v7 = sub_241CDA1A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v43 - v12;
  id v14 = objc_msgSend(self, sel_sharedApplication);
  id v15 = objc_msgSend(v14, sel_connectedScenes);

  sub_241A313AC(0, &qword_268D43240);
  sub_241BB9CDC();
  uint64_t v16 = sub_241CDB370();

  unint64_t v17 = (void *)sub_241A4CE70(v16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    id v49 = v17;
    uint64_t v50 = v8;
    sub_241CDA160();
    os_log_type_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
    v18(v6, a1, v2);
    BOOL v19 = sub_241CDA190();
    os_log_type_t v20 = sub_241CDB670();
    int v48 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v46 = v18;
      uint64_t v47 = a1;
      uint64_t v22 = v21;
      uint64_t v44 = swift_slowAlloc();
      aBlock[0] = v44;
      *(_DWORD *)uint64_t v22 = 136446466;
      uint64_t v23 = sub_241CDC270();
      uint64_t v45 = v7;
      uint64_t v55 = sub_241A33FE4(v23, v24, aBlock);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      sub_241BB9E7C((unint64_t *)&unk_268D43250, MEMORY[0x263F06EA8]);
      uint64_t v25 = sub_241CDC0D0();
      uint64_t v55 = sub_241A33FE4(v25, v26, aBlock);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v6, v2);
      _os_log_impl(&dword_241A23000, v19, (os_log_type_t)v48, "%{public}s Opening %{public}s", (uint8_t *)v22, 0x16u);
      uint64_t v27 = v44;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v27, -1, -1);
      uint64_t v28 = v22;
      os_log_type_t v18 = v46;
      a1 = v47;
      MEMORY[0x245637F20](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v45);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v53 + 8))(v6, v2);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v7);
    }
    id v36 = (void *)sub_241CD6A90();
    uint64_t v37 = v51;
    v18(v51, a1, v2);
    uint64_t v38 = v53;
    unint64_t v39 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    uint64_t v40 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v40 + v39, v37, v2);
    *(void *)(v40 + ((v3 + v39 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    aBlock[4] = (uint64_t)sub_241BB9DE0;
    aBlock[5] = v40;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_241BB8B20;
    aBlock[3] = (uint64_t)&unk_26F5C4A88;
    uint64_t v41 = _Block_copy(aBlock);
    swift_release();
    id v42 = v49;
    objc_msgSend(v49, sel_openURL_options_completionHandler_, v36, 0, v41);
    _Block_release(v41);
  }
  else
  {
    sub_241CDA160();
    id v29 = sub_241CDA190();
    os_log_type_t v30 = sub_241CDB650();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = v7;
      uint64_t v33 = swift_slowAlloc();
      aBlock[0] = v33;
      *(_DWORD *)uint64_t v31 = 136446210;
      uint64_t v34 = sub_241CDC270();
      uint64_t v55 = sub_241A33FE4(v34, v35, aBlock);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v29, v30, "%{public}s Can not find connected scene. Something is really wrong!", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v33, -1, -1);
      MEMORY[0x245637F20](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v32);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
  }
}

uint64_t sub_241BB87D8(char a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD6AC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) == 0)
  {
    sub_241CDA160();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    uint64_t v13 = sub_241CDA190();
    os_log_type_t v14 = sub_241CDB650();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v26 = v8;
      uint64_t v17 = v16;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v28 = v25;
      *(_DWORD *)uint64_t v17 = 136446466;
      int v24 = v15;
      uint64_t v18 = sub_241CDC270();
      uint64_t v27 = sub_241A33FE4(v18, v19, &v28);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      sub_241BB9E7C((unint64_t *)&unk_268D43250, MEMORY[0x263F06EA8]);
      uint64_t v20 = sub_241CDC0D0();
      uint64_t v27 = sub_241A33FE4(v20, v21, &v28);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl(&dword_241A23000, v13, (os_log_type_t)v24, "%{public}s Could not open %{public}s", (uint8_t *)v17, 0x16u);
      uint64_t v22 = v25;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v22, -1, -1);
      MEMORY[0x245637F20](v17, -1, -1);

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v26);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
    }
  }
  return result;
}

uint64_t sub_241BB8B20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_241BB8B74()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241BB8BAC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_241BB8BBC(uint64_t (*a1)(void), uint64_t a2)
{
  swift_getObjectType();
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA160();
  uint64_t v8 = sub_241CDA190();
  os_log_type_t v9 = sub_241CDB670();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v17 = a1;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = a2;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t v13 = sub_241CDC270();
    uint64_t v18 = sub_241A33FE4(v13, v14, &v19);
    a1 = v17;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v8, v9, "%{public}s Received notification in foreground mode", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v12, -1, -1);
    MEMORY[0x245637F20](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return a1(26);
}

uint64_t sub_241BB8DC4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v43 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v36 - v9;
  id v11 = objc_msgSend(a1, sel_notification);
  id v12 = objc_msgSend(v11, sel_request);

  id v13 = objc_msgSend(v12, sel_identifier);
  uint64_t v44 = sub_241CDB0D0();
  unint64_t v15 = v14;

  unint64_t v39 = a1;
  id v16 = objc_msgSend(a1, sel_actionIdentifier);
  uint64_t v17 = sub_241CDB0D0();
  unint64_t v19 = v18;

  sub_241CDA160();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_241CDA190();
  os_log_type_t v21 = sub_241CDB670();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v42 = v17;
  uint64_t v38 = ObjectType;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v41 = a2;
    uint64_t v24 = v23;
    uint64_t v37 = swift_slowAlloc();
    *(void *)&long long v48 = v37;
    *(_DWORD *)uint64_t v24 = 136446978;
    uint64_t v25 = sub_241CDC270();
    uint64_t v51 = sub_241A33FE4(v25, v26, (uint64_t *)&v48);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    uint64_t v51 = sub_241A33FE4(0xD00000000000003BLL, 0x8000000241CE26B0, (uint64_t *)&v48);
    sub_241CDBBF0();
    *(_WORD *)(v24 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v27 = v44;
    uint64_t v51 = sub_241A33FE4(v44, v15, (uint64_t *)&v48);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 32) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_241A33FE4(v17, v19, (uint64_t *)&v48);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_241A23000, v20, v21, "%{public}s %{public}s notification: %s action: %{public}s", (uint8_t *)v24, 0x2Au);
    uint64_t v28 = v37;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v28, -1, -1);
    uint64_t v29 = v24;
    a2 = v41;
    MEMORY[0x245637F20](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v47);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v47);
    uint64_t v27 = v44;
  }
  char v30 = sub_241CC0BA8(v27, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = v40;
  sub_241BB58B4();
  if (v30) {
    uint64_t v32 = &OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_trendsNotificationContentStateManager;
  }
  else {
    uint64_t v32 = &OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingAlertsNotificationContentStateManager;
  }
  uint64_t v33 = *v32;
  if (*(void *)(v31 + *v32)
    && (swift_retain(), sub_241CD7310(), swift_release(), (uint64_t v34 = *(void *)(v31 + v33)) != 0))
  {
    *((void *)&v49 + 1) = sub_241CD7320();
    uint64_t v50 = sub_241BB9E7C(&qword_26B031AA0, MEMORY[0x263F454B0]);
    *(void *)&long long v48 = v34;
  }
  else
  {
    uint64_t v50 = 0;
    long long v48 = 0u;
    long long v49 = 0u;
  }
  swift_retain();
  sub_241BB5AD0(v39, (uint64_t)&v48, a2, v45);
  return sub_241BB9584((uint64_t)&v48);
}

uint64_t sub_241BB9584(uint64_t a1)
{
  sub_241BB9C80(0, &qword_268D431E0, (uint64_t)&unk_268D431E8, MEMORY[0x263F45990], (void (*)(uint64_t, uint64_t, uint64_t))sub_241A35FBC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241BB960C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241BB9644()
{
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_241BB968C()
{
  sub_241BB5F64(*(void *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

void sub_241BB969C()
{
  if (!qword_268D431F8)
  {
    sub_241BB9730();
    sub_241BB9E7C(&qword_268D43208, (void (*)(uint64_t))sub_241BB9730);
    unint64_t v0 = sub_241CDA4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D431F8);
    }
  }
}

void sub_241BB9730()
{
  if (!qword_268D43200)
  {
    sub_241CD7E10();
    sub_241A35FBC(255, (unint64_t *)&qword_26B038870);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43200);
    }
  }
}

uint64_t sub_241BB97B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241BB7170(a1, *(void *)(v2 + 16), a2);
}

void sub_241BB97CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_241BB9830()
{
  unint64_t result = qword_268D43218;
  if (!qword_268D43218)
  {
    sub_241BB97CC(255, &qword_268D43210, (uint64_t (*)(uint64_t))sub_241BB9730, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43218);
  }
  return result;
}

uint64_t sub_241BB98B8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241BB98F0(void **a1)
{
  return sub_241BB7488(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_241BB98FC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241BB990C(uint64_t a1)
{
  return sub_241BB7880(a1);
}

void sub_241BB9914()
{
  if (!qword_268D43228)
  {
    sub_241A97D54();
    sub_241CD7E10();
    sub_241BB9E7C((unint64_t *)&qword_26B02EA70, (void (*)(uint64_t))sub_241A97D54);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43228);
    }
  }
}

uint64_t sub_241BB99C0(uint64_t a1, uint64_t a2)
{
  sub_241BB9C80(0, &qword_268D431E0, (uint64_t)&unk_268D431E8, MEMORY[0x263F45990], (void (*)(uint64_t, uint64_t, uint64_t))sub_241A35FBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241BB9A50()
{
  uint64_t v1 = sub_241CD7E10();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_241BB9AE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_241CD7E10();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, v3);
}

uint64_t sub_241BB9B54()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241BB9B8C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_241BB9BCC(int a1, void *a2)
{
  return sub_241BB7B90(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(uint64_t (**)(void))(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_241BB9BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241BB9BEC()
{
  return swift_release();
}

uint64_t sub_241BB9BF4(uint64_t a1)
{
  sub_241BB97CC(0, &qword_268D42F30, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241BB9C80(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_241CDBBD0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_241BB9CDC()
{
  unint64_t result = qword_268D43248;
  if (!qword_268D43248)
  {
    sub_241A313AC(255, &qword_268D43240);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43248);
  }
  return result;
}

uint64_t sub_241BB9D44()
{
  uint64_t v1 = sub_241CD6AC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241BB9DE0(char a1)
{
  uint64_t v3 = *(void *)(sub_241CD6AC0() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_241BB87D8(a1, v4);
}

uint64_t sub_241BB9E7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BB9EC4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t type metadata accessor for DataTypeDetailWorkoutDetailDisclosureDataSource(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_268D43260);
}

uint64_t sub_241BB9F04()
{
  return sub_241BBA43C();
}

unint64_t sub_241BB9F10()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_241BB9F30()
{
  uint64_t v0 = sub_241CD8BC0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_241CD8BD0();
  uint64_t v7 = &type metadata for WorkoutsDataTypeDetailConfigurationProvider.ShowAdditionalItemsComponent;
  unint64_t v8 = sub_241BBB94C();
  sub_241CD8BF0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F44380], v0);
  sub_241CD8C60();
  sub_241CD90C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_241A31190((uint64_t)v6);
}

uint64_t sub_241BBA098(uint64_t a1, void *a2)
{
  uint64_t v3 = (char *)objc_allocWithZone((Class)type metadata accessor for WorkoutSampleDetailViewController(0));
  *(void *)&v3[qword_268D42CA0] = a2;
  type metadata accessor for WorkoutSampleDetailCompoundDataSource(0);
  uint64_t v4 = swift_allocObject();
  type metadata accessor for DataTypeDetailWorkoutRouteDataSource(0);
  swift_allocObject();
  id v5 = a2;
  swift_retain();
  uint64_t v6 = sub_241BBA5EC((uint64_t)v5);
  uint64_t v7 = qword_268D42CA8;
  *(void *)(v4 + qword_268D42CA8) = v6;
  type metadata accessor for DataTypeDetailWorkoutEffortDataSource(0);
  swift_allocObject();
  id v8 = v5;
  uint64_t v9 = sub_241BBABA0((uint64_t)v8);

  uint64_t v10 = qword_268D42CB0;
  *(void *)(v4 + qword_268D42CB0) = v9;
  type metadata accessor for DataTypeDetailWorkoutEstimatedEffortDataSource(0);
  swift_allocObject();
  id v11 = v8;
  uint64_t v12 = sub_241BBB160((uint64_t)v11);

  uint64_t v13 = qword_268D42CB8;
  *(void *)(v4 + qword_268D42CB8) = v12;
  swift_release();
  sub_241AF8F78();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_241CEC2D0;
  uint64_t v15 = MEMORY[0x263F440A0];
  *(void *)(v14 + 32) = *(void *)(v4 + v7);
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = *(void *)(v4 + v10);
  *(void *)(v14 + 56) = v15;
  *(void *)(v14 + 64) = *(void *)(v4 + v13);
  *(void *)(v14 + 72) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241CD8AE0();
  id v16 = (void *)sub_241CD9200();
  memset(v18, 0, sizeof(v18));
  sub_241CDB7E0();

  return sub_241A78794((uint64_t)v18);
}

uint64_t sub_241BBA268()
{
  return sub_241BBA478();
}

void sub_241BBA280()
{
}

void sub_241BBA2A8()
{
}

uint64_t sub_241BBA2D0()
{
  sub_241CD8EE0();

  return swift_deallocClassInstance();
}

uint64_t sub_241BBA300()
{
  return type metadata accessor for DataTypeDetailWorkoutDetailDisclosureDataSource(0);
}

uint64_t type metadata accessor for DataTypeDetailWorkoutRouteDataSource(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_268D43270);
}

uint64_t sub_241BBA328()
{
  return sub_241BBA43C();
}

void sub_241BBA334()
{
}

void sub_241BBA35C()
{
}

uint64_t sub_241BBA384()
{
  return type metadata accessor for DataTypeDetailWorkoutRouteDataSource(0);
}

uint64_t type metadata accessor for DataTypeDetailWorkoutEffortDataSource(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_268D43280);
}

uint64_t sub_241BBA3AC()
{
  return sub_241BBA43C();
}

void sub_241BBA3B8()
{
}

void sub_241BBA3E0()
{
}

uint64_t sub_241BBA408()
{
  return type metadata accessor for DataTypeDetailWorkoutEffortDataSource(0);
}

uint64_t type metadata accessor for DataTypeDetailWorkoutEstimatedEffortDataSource(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_268D43290);
}

uint64_t sub_241BBA430()
{
  return sub_241BBA43C();
}

uint64_t sub_241BBA43C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241BBA478()
{
  uint64_t v0 = sub_241CD8910();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD88F0();
  sub_241CD8AC0();
  uint64_t v4 = sub_241CD8900();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_241BBA56C()
{
}

void sub_241BBA594()
{
}

void sub_241BBA5BC()
{
}

uint64_t sub_241BBA5E4()
{
  return type metadata accessor for DataTypeDetailWorkoutEstimatedEffortDataSource(0);
}

uint64_t sub_241BBA5EC(uint64_t a1)
{
  v12[1] = a1;
  uint64_t v15 = sub_241CD6D70();
  uint64_t v14 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v13 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  sub_241CD69E0();
  long long v20 = xmmword_241CEB720;
  sub_241CD8270();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_workoutRouteType);
  sub_241CD8250();

  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_workoutRouteType);
  sub_241CD8260();

  swift_bridgeObjectRelease();
  sub_241BBB760((uint64_t)&v21, (uint64_t)v19);
  sub_241BBB7E0((uint64_t)v19, (uint64_t)&v16);
  if (v17)
  {
    sub_241A5598C(&v16, (uint64_t)v18);
    sub_241A5598C(v18, (uint64_t)&v16);
    id v5 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v5 = sub_241AF7FEC(0, v5[2] + 1, 1, v5);
    }
    unint64_t v7 = v5[2];
    unint64_t v6 = v5[3];
    if (v7 >= v6 >> 1) {
      id v5 = sub_241AF7FEC((void *)(v6 > 1), v7 + 1, 1, v5);
    }
    v5[2] = v7 + 1;
    sub_241A5598C(&v16, (uint64_t)&v5[5 * v7 + 4]);
  }
  else
  {
    sub_241BBB860((uint64_t)&v16);
    id v5 = (void *)MEMORY[0x263F8EE78];
  }
  sub_241BBB760((uint64_t)&v22, (uint64_t)v19);
  sub_241BBB7E0((uint64_t)v19, (uint64_t)&v16);
  if (v17)
  {
    sub_241A5598C(&v16, (uint64_t)v18);
    sub_241A5598C(v18, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v5 = sub_241AF7FEC(0, v5[2] + 1, 1, v5);
    }
    unint64_t v9 = v5[2];
    unint64_t v8 = v5[3];
    if (v9 >= v8 >> 1) {
      id v5 = sub_241AF7FEC((void *)(v8 > 1), v9 + 1, 1, v5);
    }
    v5[2] = v9 + 1;
    sub_241A5598C(&v16, (uint64_t)&v5[5 * v9 + 4]);
  }
  else
  {
    sub_241BBB860((uint64_t)&v16);
  }
  sub_241BBC754(0, &qword_268D432A0, MEMORY[0x263F8D8F0]);
  swift_arrayDestroy();
  sub_241BBB8D8(0, &qword_268D432A8, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_241CD87D0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
  uint64_t v10 = v13;
  sub_241CD6D60();
  sub_241CD6D20();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v15);
  sub_241CD87C0();
  return sub_241CD8EB0();
}

uint64_t sub_241BBABA0(uint64_t a1)
{
  v12[1] = a1;
  uint64_t v15 = sub_241CD6D70();
  uint64_t v14 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v13 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  v12[0] = sub_241CD69E0();
  long long v20 = xmmword_241CEB720;
  sub_241CD8270();
  sub_241BBB720();
  id v2 = (id)*MEMORY[0x263F09F60];
  id v3 = (void *)MEMORY[0x245636A00]();
  sub_241CD8250();

  swift_bridgeObjectRelease();
  id v4 = (void *)MEMORY[0x245636A00](v2);
  sub_241CD8260();

  swift_bridgeObjectRelease();
  sub_241BBB760((uint64_t)&v21, (uint64_t)v19);
  sub_241BBB7E0((uint64_t)v19, (uint64_t)&v16);
  if (v17)
  {
    sub_241A5598C(&v16, (uint64_t)v18);
    sub_241A5598C(v18, (uint64_t)&v16);
    id v5 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v5 = sub_241AF7FEC(0, v5[2] + 1, 1, v5);
    }
    unint64_t v7 = v5[2];
    unint64_t v6 = v5[3];
    if (v7 >= v6 >> 1) {
      id v5 = sub_241AF7FEC((void *)(v6 > 1), v7 + 1, 1, v5);
    }
    v5[2] = v7 + 1;
    sub_241A5598C(&v16, (uint64_t)&v5[5 * v7 + 4]);
  }
  else
  {
    sub_241BBB860((uint64_t)&v16);
    id v5 = (void *)MEMORY[0x263F8EE78];
  }
  sub_241BBB760((uint64_t)&v22, (uint64_t)v19);
  sub_241BBB7E0((uint64_t)v19, (uint64_t)&v16);
  if (v17)
  {
    sub_241A5598C(&v16, (uint64_t)v18);
    sub_241A5598C(v18, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v5 = sub_241AF7FEC(0, v5[2] + 1, 1, v5);
    }
    unint64_t v9 = v5[2];
    unint64_t v8 = v5[3];
    if (v9 >= v8 >> 1) {
      id v5 = sub_241AF7FEC((void *)(v8 > 1), v9 + 1, 1, v5);
    }
    v5[2] = v9 + 1;
    sub_241A5598C(&v16, (uint64_t)&v5[5 * v9 + 4]);
  }
  else
  {
    sub_241BBB860((uint64_t)&v16);
  }
  sub_241BBC754(0, &qword_268D432A0, MEMORY[0x263F8D8F0]);
  swift_arrayDestroy();
  sub_241BBB8D8(0, &qword_268D432A8, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_241CD87D0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
  uint64_t v10 = v13;
  sub_241CD6D60();
  sub_241CD6D20();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v15);
  sub_241CD87C0();
  return sub_241CD8EB0();
}

uint64_t sub_241BBB160(uint64_t a1)
{
  v12[1] = a1;
  uint64_t v15 = sub_241CD6D70();
  uint64_t v14 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v13 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  v12[0] = sub_241CD69E0();
  long long v20 = xmmword_241CEB720;
  sub_241CD8270();
  sub_241BBB720();
  id v2 = (id)*MEMORY[0x263F09E08];
  id v3 = (void *)MEMORY[0x245636A00]();
  sub_241CD8250();

  swift_bridgeObjectRelease();
  id v4 = (void *)MEMORY[0x245636A00](v2);
  sub_241CD8260();

  swift_bridgeObjectRelease();
  sub_241BBB760((uint64_t)&v21, (uint64_t)v19);
  sub_241BBB7E0((uint64_t)v19, (uint64_t)&v16);
  if (v17)
  {
    sub_241A5598C(&v16, (uint64_t)v18);
    sub_241A5598C(v18, (uint64_t)&v16);
    id v5 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v5 = sub_241AF7FEC(0, v5[2] + 1, 1, v5);
    }
    unint64_t v7 = v5[2];
    unint64_t v6 = v5[3];
    if (v7 >= v6 >> 1) {
      id v5 = sub_241AF7FEC((void *)(v6 > 1), v7 + 1, 1, v5);
    }
    v5[2] = v7 + 1;
    sub_241A5598C(&v16, (uint64_t)&v5[5 * v7 + 4]);
  }
  else
  {
    sub_241BBB860((uint64_t)&v16);
    id v5 = (void *)MEMORY[0x263F8EE78];
  }
  sub_241BBB760((uint64_t)&v22, (uint64_t)v19);
  sub_241BBB7E0((uint64_t)v19, (uint64_t)&v16);
  if (v17)
  {
    sub_241A5598C(&v16, (uint64_t)v18);
    sub_241A5598C(v18, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v5 = sub_241AF7FEC(0, v5[2] + 1, 1, v5);
    }
    unint64_t v9 = v5[2];
    unint64_t v8 = v5[3];
    if (v9 >= v8 >> 1) {
      id v5 = sub_241AF7FEC((void *)(v8 > 1), v9 + 1, 1, v5);
    }
    v5[2] = v9 + 1;
    sub_241A5598C(&v16, (uint64_t)&v5[5 * v9 + 4]);
  }
  else
  {
    sub_241BBB860((uint64_t)&v16);
  }
  sub_241BBC754(0, &qword_268D432A0, MEMORY[0x263F8D8F0]);
  swift_arrayDestroy();
  sub_241BBB8D8(0, &qword_268D432A8, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_241CD87D0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
  uint64_t v10 = v13;
  sub_241CD6D60();
  sub_241CD6D20();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v15);
  sub_241CD87C0();
  return sub_241CD8EB0();
}

unint64_t sub_241BBB720()
{
  unint64_t result = qword_26B030398;
  if (!qword_26B030398)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B030398);
  }
  return result;
}

uint64_t sub_241BBB760(uint64_t a1, uint64_t a2)
{
  sub_241BBC754(0, &qword_268D432A0, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241BBB7E0(uint64_t a1, uint64_t a2)
{
  sub_241BBC754(0, &qword_268D432A0, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241BBB860(uint64_t a1)
{
  sub_241BBC754(0, &qword_268D432A0, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241BBB8D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for WorkoutsDataTypeDetailConfigurationProvider()
{
  return &type metadata for WorkoutsDataTypeDetailConfigurationProvider;
}

unint64_t sub_241BBB94C()
{
  unint64_t result = qword_268D432B0;
  if (!qword_268D432B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D432B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutsDataTypeDetailConfigurationProvider.ShowAdditionalItemsComponent()
{
  return &type metadata for WorkoutsDataTypeDetailConfigurationProvider.ShowAdditionalItemsComponent;
}

uint64_t sub_241BBB9B0(void *a1)
{
  uint64_t v63 = a1;
  uint64_t v1 = sub_241CD6D70();
  uint64_t v65 = *(void *)(v1 - 8);
  uint64_t v66 = v1;
  MEMORY[0x270FA5388](v1);
  id v64 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_241CD90E0();
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v58 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_241CD8870();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v57 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241BBB8D8(0, &qword_268D432B8, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v52 = (char *)&v44 - v7;
  sub_241BBB8D8(0, &qword_268D432C0, MEMORY[0x263F81DF8], v5);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v46 = (char *)&v44 - v9;
  uint64_t v48 = sub_241CDA1F0();
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  id v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CDA1B0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_241CD8970();
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v56 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_241CDA230();
  uint64_t v54 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  unint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_241CDA260();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  sub_241CDA250();
  uint64_t v50 = v22;
  sub_241CDA240();
  sub_241CDA220();
  id v23 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
  sub_241CDA210();
  v69[3] = v19;
  v69[4] = MEMORY[0x263F81F20];
  uint64_t v49 = v19;
  uint64_t v24 = sub_241A25BC8(v69);
  uint64_t v51 = v20;
  (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 16))(v24, v22, v19);
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241BBB8D8(0, &qword_268D432C8, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  sub_241CDA200();
  unint64_t v26 = v18;
  uint64_t v45 = v18;
  uint64_t v27 = swift_allocObject();
  long long v67 = xmmword_241CEB730;
  *(_OWORD *)(v27 + 16) = xmmword_241CEB730;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F81DE8], v12);
  uint64_t v28 = sub_241CDA1C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v46, 1, 1, v28);
  sub_241CDA1E0();
  sub_241CDA1D0();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v48);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v29 = swift_allocObject();
  char v30 = v63;
  *(void *)(v29 + 16) = v63;
  uint64_t v31 = v54;
  uint64_t v32 = v52;
  uint64_t v33 = v26;
  uint64_t v34 = v68;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v52, v33, v68);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v34);
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v57, *MEMORY[0x263F440E0], v55);
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v58, *MEMORY[0x263F446D0], v61);
  id v35 = v30;
  uint64_t v36 = v56;
  sub_241CD8960();
  sub_241BBB8D8(0, &qword_268D432A8, MEMORY[0x263F44068], v25);
  sub_241CD87D0();
  *(_OWORD *)(swift_allocObject() + 16) = v67;
  sub_241BBC754(0, (unint64_t *)&qword_26B030B48, MEMORY[0x263F8E0F8]);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = v67;
  uint64_t v38 = v62;
  *(void *)(v37 + 56) = v62;
  *(void *)(v37 + 64) = sub_241BBC7C8();
  unint64_t v39 = sub_241A25BC8((uint64_t *)(v37 + 32));
  uint64_t v40 = v60;
  (*(void (**)(uint64_t *, char *, uint64_t))(v60 + 16))(v39, v36, v38);
  uint64_t v41 = v64;
  sub_241CD6D60();
  sub_241CD6D20();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v41, v66);
  sub_241CD87C0();
  uint64_t v42 = sub_241CD8EB0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v36, v38);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v45, v68);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v49);
  return v42;
}

uint64_t sub_241BBC4CC(uint64_t a1)
{
  uint64_t v2 = sub_241CD8C50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD8C40();
  uint64_t v6 = sub_241CD84C0();
  uint64_t v8 = v7;
  if (v6 == sub_241CD84C0() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
LABEL_12:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  char v10 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if (v10) {
    goto LABEL_12;
  }
  sub_241CD8C40();
  uint64_t v11 = sub_241CD84C0();
  uint64_t v13 = v12;
  if (v11 == sub_241CD84C0() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  char v16 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v16) {
    return 0;
  }
  uint64_t v17 = (void *)sub_241CD8C30();
  type metadata accessor for DataTypeDetailWorkoutDetailDisclosureDataSource(0);
  swift_allocObject();
  uint64_t v18 = sub_241BBB9B0(v17);

  return v18;
}

uint64_t sub_241BBC714()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241BBC74C(uint64_t a1)
{
  return sub_241BBA098(a1, *(void **)(v1 + 16));
}

void sub_241BBC754(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241AF8FE4(255, (unint64_t *)&qword_26B030960);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_241BBC7C8()
{
  unint64_t result = qword_268D432D0;
  if (!qword_268D432D0)
  {
    sub_241CD8970();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D432D0);
  }
  return result;
}

void sub_241BBC824()
{
  *(void *)&v0[OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthStore] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingAlertsNotificationContentStateManager] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_trendsNotificationContentStateManager] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingNotificationSyncStore] = 0;
  uint64_t v1 = self;
  uint64_t v2 = v0;
  id v3 = objc_msgSend(v1, sel_sharedBehavior);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_features);

    if (v5)
    {
      uint64_t v6 = OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_shouldDismissNotificationsUrgently;
      unsigned __int8 v7 = objc_msgSend(v5, sel_urgentNotificationDismiss);

      v2[v6] = v7;
      *(void *)&v2[OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_cancellables] = MEMORY[0x263F8EE88];

      v8.receiver = v2;
      v8.super_class = (Class)type metadata accessor for SummariesAppDelegate();
      objc_msgSendSuper2(&v8, sel_init);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_241BBC958()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummariesAppDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SummariesAppDelegate()
{
  return self;
}

uint64_t sub_241BBCA2C(uint64_t a1, uint64_t a2)
{
  return sub_241BBD694(&qword_26B0369F0, a2, (void (*)(uint64_t))type metadata accessor for SummariesAppDelegate);
}

id sub_241BBCA74()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

uint64_t sub_241BBCAA8@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  uint64_t v2 = sub_241CD73B0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  objc_super v8 = (char *)&v25 - v7;
  uint64_t v9 = sub_241CD7EB0();
  uint64_t v10 = sub_241A4CE9C(v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    uint64_t v30 = a1;
    sub_241BBD694(&qword_268D43308, v11, (void (*)(uint64_t))type metadata accessor for SummariesAppDelegate);
    uint64_t v12 = sub_241CD8F80();
    uint64_t v28 = v13;
    uint64_t v29 = v12;
    uint64_t v27 = sub_241CD8FA0();
    char v14 = sub_241CDB450();
    uint64_t v15 = (unsigned int *)MEMORY[0x263F454F8];
    if ((v14 & 1) == 0) {
      uint64_t v15 = (unsigned int *)MEMORY[0x263F454D0];
    }
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v8, *v15, v2);
    if (sub_241CD7E70())
    {
      uint64_t v26 = sub_241CD9360();
      swift_release();
    }
    else
    {
      uint64_t v26 = 0;
    }
    uint64_t v19 = sub_241CD7EB0();
    uint64_t v25 = sub_241A4CE9C(v19);
    swift_bridgeObjectRelease();
    sub_241CD7E90();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    sub_241BBD3AC();
    uint64_t v20 = *(void *)(sub_241CD9350() - 8);
    unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_241CEB730;
    *(void *)(v22 + v21) = v10;
    (*(void (**)(void))(v20 + 104))();
    uint64_t v23 = v30;
    sub_241CD9120();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    uint64_t v24 = sub_241CD9130();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
  }
  else
  {
    uint64_t v16 = sub_241CD9130();
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    return v17(a1, 1, 1, v16);
  }
}

uint64_t sub_241BBCE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v45 = sub_241CD73B0();
  uint64_t v3 = *(void *)(v45 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v45);
  uint64_t v43 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v36 - v6;
  uint64_t v8 = sub_241CD9350();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (void *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_241CD81C0();
  char v14 = v13;
  uint64_t v15 = *(void (**)(void *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v44 = a1;
  v15(v11, a1, v8);
  if ((*(unsigned int (**)(void *, uint64_t))(v9 + 88))(v11, v8) != *MEMORY[0x263F44A40])
  {
    (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
LABEL_11:
    uint64_t v35 = sub_241CD9130();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v46, 1, 1, v35);
  }
  if (v14) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = v12;
  }
  (*(void (**)(void *, uint64_t))(v9 + 96))(v11, v8);
  uint64_t v17 = (void *)*v11;
  id v18 = objc_msgSend(self, sel_displayTypeForObjectType_wheelchairUse_, *v11, v16);
  if (!v18)
  {

    goto LABEL_11;
  }
  uint64_t v19 = v18;
  char v20 = sub_241CDB450();
  uint64_t v21 = v3;
  uint64_t v37 = v3;
  uint64_t v22 = (unsigned int *)MEMORY[0x263F454F8];
  if ((v20 & 1) == 0) {
    uint64_t v22 = (unsigned int *)MEMORY[0x263F454D0];
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v7, *v22, v45);
  type metadata accessor for SummariesAppDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v41 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v42 = v17;
  id v24 = objc_msgSend(v19, sel_localization);
  id v25 = objc_msgSend(v24, sel_displayName);

  uint64_t v26 = sub_241CDB0D0();
  uint64_t v39 = v27;
  uint64_t v40 = v26;

  id v28 = objc_msgSend(v19, sel_displayCategory);
  id v38 = objc_msgSend(v28, sel_largeListIcon);

  v36[1] = objc_msgSend(v19, sel_displayCategory);
  uint64_t v29 = v45;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v43, v7, v45);
  sub_241BBD3AC();
  unint64_t v30 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_241CEB730;
  v15((void *)(v31 + v30), v44, v8);
  uint64_t v32 = v46;
  sub_241CD9120();

  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v29);
  uint64_t v33 = sub_241CD9130();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
}

uint64_t sub_241BBD30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241BBCE74(a1, a2);
}

uint64_t sub_241BBD328()
{
  uint64_t v0 = type metadata accessor for SummariesInternalSettingsView();
  MEMORY[0x270FA5388](v0 - 8);
  sub_241AA5B04((uint64_t)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241BBD5FC();
  id v3 = objc_allocWithZone(v2);
  return sub_241CDAAC0();
}

void sub_241BBD3AC()
{
  if (!qword_26B034F68)
  {
    sub_241CD9350();
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034F68);
    }
  }
}

void sub_241BBD404(uint64_t a1)
{
  uint64_t v2 = sub_241CD9350();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void **)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((*(unsigned int (**)(void **, uint64_t))(v3 + 88))(v5, v2) != *MEMORY[0x263F44A40])
  {
    (*(void (**)(void **, uint64_t))(v3 + 8))(v5, v2);
    return;
  }
  (*(void (**)(void **, uint64_t))(v3 + 96))(v5, v2);
  uint64_t v6 = *v5;
  if (sub_241CDB450())
  {
    uint64_t v7 = (void *)sub_241CD7400();
    sub_241CA1EFC(v6);
LABEL_10:

    return;
  }
  id v8 = objc_msgSend(self, sel_sharedBehavior);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_features);

    if (v10)
    {
      unsigned int v11 = objc_msgSend(v10, sel_snidgets);

      uint64_t v7 = (void *)sub_241CD7400();
      if (v11) {
        sub_241CA21A0(v6, (uint64_t)v7, 1);
      }
      else {
        sub_241CA21A8(v6, (uint64_t)v7, 1);
      }
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_241BBD5FC()
{
  if (!qword_268D43310)
  {
    type metadata accessor for SummariesInternalSettingsView();
    sub_241BBD694(&qword_268D43318, 255, (void (*)(uint64_t))type metadata accessor for SummariesInternalSettingsView);
    unint64_t v0 = sub_241CDAAD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43310);
    }
  }
}

uint64_t sub_241BBD694(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BBD6DC(uint64_t a1)
{
  uint64_t v33 = a1;
  uint64_t v32 = sub_241CD79A0();
  uint64_t v3 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B033770 != -1) {
    swift_once();
  }
  uint64_t v5 = (uint64_t)off_26B033760;
  unint64_t v34 = (unint64_t)off_26B033760 & 0xC000000000000001;
  if (((unint64_t)off_26B033760 & 0xC000000000000001) == 0)
  {
    uint64_t v6 = *((void *)off_26B033760 + 2);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_8;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  if ((uint64_t)off_26B033760 < 0) {
    LOBYTE(v1) = (_BYTE)off_26B033760;
  }
  else {
    LOBYTE(v1) = off_26B033760 & 0xF8;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_241CDBD00();
  if (!v6) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v40 = (void *)MEMORY[0x263F8EE78];
  uint64_t v7 = &v40;
  sub_241A51FD8(0, v6 & ~(v6 >> 63), 0);
  if (v34)
  {
    uint64_t v8 = sub_241CDBCA0();
    char v10 = 1;
  }
  else
  {
    uint64_t v8 = sub_241BBE51C(v5);
    char v10 = v12 & 1;
  }
  uint64_t v37 = v8;
  uint64_t v38 = v9;
  char v39 = v10;
  if (v6 < 0)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    sub_241A55980((uint64_t)v7, v2, v1);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v13 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v5 < 0) {
      uint64_t v13 = v5;
    }
    uint64_t v30 = v3;
    uint64_t v31 = v13;
    uint64_t v29 = v3 + 32;
    do
    {
      while (1)
      {
        uint64_t v2 = v38;
        uint64_t v23 = v5;
        sub_241BBE1BC(v37, v38, v39, v5, (unint64_t *)&qword_26B038440);
        id v25 = v24;
        v36[0] = v24;
        sub_241BBDC2C(v36, v33, v35);

        uint64_t v7 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_241A51FD8(0, v7[2] + 1, 1);
          uint64_t v7 = v40;
        }
        unint64_t v27 = v7[2];
        unint64_t v26 = v7[3];
        unint64_t v1 = v27 + 1;
        if (v27 >= v26 >> 1)
        {
          sub_241A51FD8(v26 > 1, v27 + 1, 1);
          uint64_t v7 = v40;
        }
        v7[2] = v1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v27, v35, v32);
        uint64_t v40 = v7;
        if (v34) {
          break;
        }
        uint64_t v14 = v37;
        uint64_t v15 = v38;
        char v16 = v39;
        int64_t v17 = sub_241BBE0B0(v37, v38, v39, v23);
        uint64_t v19 = v18;
        char v21 = v20;
        uint64_t v5 = v23;
        sub_241A55980(v14, v15, v16);
        uint64_t v37 = v17;
        uint64_t v38 = v19;
        char v22 = v21 & 1;
        uint64_t v3 = v30;
        char v39 = v22;
        if (!--v6) {
          goto LABEL_27;
        }
      }
      if ((v39 & 1) == 0) {
        goto LABEL_29;
      }
      uint64_t v5 = v23;
      if (sub_241CDBCC0()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_241BBE42C();
      id v28 = (void (*)(void **, void))sub_241CDB3A0();
      sub_241CDBD70();
      v28(v36, 0);
      --v6;
    }
    while (v6);
LABEL_27:
    sub_241A55980(v37, v38, v39);
    swift_bridgeObjectRelease();
    return (uint64_t)v40;
  }
  return result;
}

uint64_t sub_241BBDAA4()
{
  sub_241A310AC(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CF16B0;
  *(void *)(inited + 32) = objc_msgSend(self, sel_activitySummaryType);
  sub_241A313AC(0, (unint64_t *)&qword_26B030390);
  *(void *)(inited + 40) = MEMORY[0x2456369F0]((id)*MEMORY[0x263F09240]);
  sub_241A313AC(0, (unint64_t *)&qword_26B030398);
  *(void *)(inited + 48) = MEMORY[0x245636A00]((id)*MEMORY[0x263F09BE8]);
  *(void *)(inited + 56) = MEMORY[0x245636A00]((id)*MEMORY[0x263F09BC8]);
  sub_241CDB2E0();
  if (inited >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = (void *)MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_241C69200(inited);
  uint64_t v2 = v1;
LABEL_6:
  uint64_t result = swift_bridgeObjectRelease();
  off_26B033760 = v2;
  return result;
}

void sub_241BBDC2C(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241BBE4B8(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - v7;
  sub_241BBE4B8(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v5);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v23 - v10;
  uint64_t v12 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v13 = *a1;
  sub_241A313AC(0, (unint64_t *)&qword_26B030410);
  id v25 = sub_241A51A74(a2);
  id v14 = objc_msgSend(v25, sel_data);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = sub_241CD6AE0();
    unint64_t v23 = v17;
    uint64_t v24 = v16;
  }
  else
  {
    unint64_t v23 = 0xC000000000000000;
    uint64_t v24 = 0;
  }
  unint64_t v27 = 0xD000000000000012;
  unint64_t v28 = 0x8000000241CE2F00;
  id v18 = objc_msgSend(v13, sel_identifier, v23, v24);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241BBE4B8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
  sub_241CDB470();
  sub_241A310AC(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_241CEB710;
  *(void *)(v19 + 32) = v13;
  unint64_t v27 = v19;
  sub_241CDB2E0();
  id v20 = v13;
  sub_241CD7960();
  sub_241CD6F40();
  uint64_t v21 = sub_241CD6F50();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 0, 1, v21);
  sub_241CD6DC0();
  uint64_t v22 = sub_241CD6DD0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 0, 1, v22);
  sub_241CD7920();
}

uint64_t sub_241BBE04C(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_241CDBF50();
  swift_bridgeObjectRelease();
  return v2;
}

int64_t sub_241BBE0B0(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_241BBE194(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_241BBE1A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_241BBE1BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v8 = a4;
      }
      else {
        uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x245637060](a1, a2, v8);
      sub_241A313AC(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_241CDBCE0() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_241CDBCF0();
  sub_241A313AC(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v18;
  swift_unknownObjectRelease();
  uint64_t v9 = sub_241CDBB50();
  uint64_t v10 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v9 & ~v10;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v11 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v12 = sub_241CDBB60();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v7 = (v7 + 1) & v13;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_26;
      }
      id v14 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v15 = sub_241CDBB60();
    }
    while ((v15 & 1) == 0);
  }

LABEL_20:
  uint64_t v16 = *(void **)(*(void *)(a4 + 48) + 8 * v7);

  id v17 = v16;
}

void sub_241BBE42C()
{
  if (!qword_268D43320)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B038440);
    sub_241AD5E58();
    unint64_t v0 = sub_241CDB3B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43320);
    }
  }
}

void sub_241BBE4A0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_241BBE4B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241BBE51C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

unint64_t sub_241BBE5A4(void *a1)
{
  uint64_t v2 = sub_241CD7520();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BBEBEC();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB730;
  if (qword_26B033770 != -1) {
    swift_once();
  }
  if (sub_241AFF118(a1, (uint64_t)off_26B033760))
  {
    unint64_t v20 = 0xD000000000000012;
    unint64_t v21 = 0x8000000241CE2F00;
    id v7 = objc_msgSend(a1, sel_identifier);
    sub_241CDB0D0();

    sub_241CDB180();
    swift_bridgeObjectRelease();
    unint64_t v9 = v20;
    unint64_t v8 = v21;
    *(void *)(inited + 32) = v20;
    *(void *)(inited + 40) = v8;
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_241AF7104(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      unint64_t v10 = sub_241AF7104((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    v10[2] = v12 + 1;
    uint64_t v13 = &v10[2 * v12];
    v13[4] = v9;
    v13[5] = v8;
  }
  else
  {
    *(void *)(inited + 32) = 0;
    *(void *)(inited + 40) = 0;
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  swift_release();
  int64_t v14 = v10[2];
  if (v14)
  {
    unint64_t v20 = MEMORY[0x263F8EE78];
    sub_241A52028(0, v14, 0);
    unint64_t v15 = v20;
    uint64_t v16 = v10 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_241CD7510();
      unint64_t v20 = v15;
      unint64_t v18 = *(void *)(v15 + 16);
      unint64_t v17 = *(void *)(v15 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_241A52028(v17 > 1, v18 + 1, 1);
        unint64_t v15 = v20;
      }
      v16 += 2;
      *(void *)(v15 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v18, v5, v2);
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v15;
}

uint64_t sub_241BBE894()
{
  if (qword_26B033770 != -1) {
    swift_once();
  }
  unint64_t v0 = off_26B033760;
  unint64_t v1 = (unint64_t)off_26B033760 & 0xC000000000000001;
  if (((unint64_t)off_26B033760 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_241CDBD00();
    if (v2) {
      goto LABEL_5;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x263F8EE78];
LABEL_23:
    uint64_t v28 = sub_241C6A09C(v6);
    swift_bridgeObjectRelease();
    return v28;
  }
  uint64_t v2 = *((void *)off_26B033760 + 2);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v35 = MEMORY[0x263F8EE78];
  sub_241A521D8(0, v2 & ~(v2 >> 63), 0);
  if (v1)
  {
    uint64_t result = sub_241CDBCA0();
    char v5 = 1;
  }
  else
  {
    uint64_t result = sub_241BBE51C((uint64_t)v0);
    char v5 = v7 & 1;
  }
  uint64_t v32 = result;
  uint64_t v33 = v4;
  char v34 = v5;
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v8 = (unint64_t *)&qword_26B038440;
    uint64_t v29 = v0;
    do
    {
      while (1)
      {
        sub_241BBE1BC(v32, v33, v34, (uint64_t)v0, v8);
        uint64_t v19 = v18;
        unint64_t v30 = 0xD000000000000012;
        unint64_t v31 = 0x8000000241CE2F00;
        id v20 = objc_msgSend(v18, sel_identifier);
        sub_241CDB0D0();

        sub_241CDB180();
        swift_bridgeObjectRelease();
        unint64_t v21 = v30;
        unint64_t v22 = v31;
        uint64_t v23 = v35;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = sub_241A521D8(0, *(void *)(v23 + 16) + 1, 1);
          uint64_t v23 = v35;
        }
        unint64_t v25 = *(void *)(v23 + 16);
        unint64_t v24 = *(void *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          uint64_t result = sub_241A521D8(v24 > 1, v25 + 1, 1);
          uint64_t v23 = v35;
        }
        *(void *)(v23 + 16) = v25 + 1;
        unint64_t v26 = v23 + 16 * v25;
        *(void *)(v26 + 32) = v21;
        *(void *)(v26 + 40) = v22;
        if (v1) {
          break;
        }
        uint64_t v9 = v32;
        uint64_t v10 = v33;
        char v11 = v34;
        int64_t v12 = sub_241BBE0B0(v32, v33, v34, (uint64_t)v0);
        uint64_t v13 = v8;
        uint64_t v15 = v14;
        char v17 = v16;
        sub_241A55980(v9, v10, v11);
        uint64_t v32 = v12;
        uint64_t v33 = v15;
        unint64_t v8 = v13;
        unint64_t v1 = 0;
        unint64_t v0 = v29;
        char v34 = v17 & 1;
        if (!--v2) {
          goto LABEL_22;
        }
      }
      if ((v34 & 1) == 0) {
        goto LABEL_25;
      }
      if (sub_241CDBCC0()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_241BBE42C();
      unint64_t v27 = (void (*)(unint64_t *, void))sub_241CDB3A0();
      sub_241CDBD70();
      v27(&v30, 0);
      --v2;
    }
    while (v2);
LABEL_22:
    sub_241A55980(v32, v33, v34);
    swift_bridgeObjectRelease();
    uint64_t v6 = v35;
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_241BBEBEC()
{
  if (!qword_26B031F38)
  {
    sub_241A310AC(255, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031F38);
    }
  }
}

uint64_t sub_241BBEC68(void *a1, uint64_t a2, void (*a3)(void *, uint64_t), uint64_t a4)
{
  char v5 = v4;
  uint64_t v9 = sub_241CD6D00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_endDate);
  sub_241CD6CB0();

  swift_retain();
  id v14 = a1;
  swift_retain();
  sub_241BC15AC(v12, 0, v5, (uint64_t)v5, v14, a3, a4);
  swift_release();

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_241BBEDB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  MEMORY[0x270FA5388](v2);
  char v34 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_241CD6ED0();
  uint64_t v4 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD6EE0();
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BC12A0(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v10 - 8);
  int64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = sub_241CD6D00();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v31 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v32 = (char *)&v31 - v20;
  uint64_t v21 = sub_241CD6810();
  uint64_t v41 = *(void *)(v21 - 8);
  uint64_t v42 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD6770();
  switch(sub_241CD9CD0())
  {
    case 1u:
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(a1, v23, v42);
      break;
    case 2u:
      uint64_t v40 = a1;
      sub_241CD6EA0();
      uint64_t v25 = v37;
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F07870], v37);
      sub_241CD67E0();
      sub_241CD6E70();
      unint64_t v31 = *(void (**)(char *, uint64_t))(v14 + 8);
      v31(v19, v13);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        sub_241BC1550((uint64_t)v12, &qword_26B0385B8, MEMORY[0x263F07490]);
        unint64_t v26 = v34;
        sub_241CDA0F0();
        unint64_t v27 = sub_241CDA190();
        os_log_type_t v28 = sub_241CDB650();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v29 = 0;
          _os_log_impl(&dword_241A23000, v27, v28, "Unable to get 6 days before start of day today", v29, 2u);
          MEMORY[0x245637F20](v29, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v36);
        uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v40, v23, v42);
      }
      else
      {
        unint64_t v30 = v32;
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v32, v12, v13);
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v30, v13);
        sub_241CD67B0();
        sub_241CD67C0();
        v31(v30, v13);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v23, v42);
      }
      break;
    default:
      sub_241CDBF10();
      __break(1u);
      JUMPOUT(0x241BBF444);
  }
  return result;
}

unint64_t sub_241BBF458(void *a1)
{
  id v1 = objc_msgSend(a1, sel_statistics);
  sub_241A313AC(0, (unint64_t *)&qword_26B038E68);
  unint64_t v2 = sub_241CDB2C0();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  unint64_t result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    id v5 = (id)MEMORY[0x245637160](result, v2);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v2 + 8 * result + 32);
LABEL_8:
    uint64_t v3 = (uint64_t)v5;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_241BBF554(uint64_t a1, void *a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_241CD68F0();
  uint64_t v61 = *(void *)(v10 - 8);
  uint64_t v62 = v10;
  MEMORY[0x270FA5388](v10);
  int64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CD6D00();
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_241CD6810();
  uint64_t v64 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v5 + qword_26B041200;
  uint64_t v20 = *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28);
  uint64_t v63 = v19;
  uint64_t v21 = *(void **)(v19 + v20);
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  if (v22)
  {
    uint64_t v54 = v22;
    uint64_t v56 = a3;
    uint64_t v57 = v16;
    uint64_t v58 = a4;
    uint64_t v23 = *(void (**)(uint64_t))(*(void *)v5 + 176);
    id v52 = v21;
    v23(a1);
    unint64_t v24 = self;
    uint64_t v25 = (void *)sub_241CD6790();
    id v26 = objc_msgSend(v24, sel_predicateForSamplesWithinDateInterval_options_, v25, 0);

    id v55 = v26;
    uint64_t v53 = v18;
    if (a2)
    {
      sub_241A33460();
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_241CEDF90;
      *(void *)(v27 + 32) = v26;
      *(void *)(v27 + 40) = a2;
      aBlock[0] = v27;
      sub_241CDB2E0();
      sub_241A313AC(0, (unint64_t *)&qword_26B030370);
      id v28 = v26;
      id v29 = a2;
      id v30 = v28;
      id v31 = v29;
      uint64_t v32 = (void *)sub_241CDB2A0();
      swift_bridgeObjectRelease();
      id v33 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v32);
    }
    else
    {
      id v33 = v26;
    }
    sub_241CD9CC0();
    uint64_t v36 = sub_241CDB8F0();
    id v37 = v52;
    id v52 = v37;
    id v38 = v33;
    uint64_t v39 = v53;
    sub_241CD67B0();
    sub_241CD9CD0();
    sub_241CD9980();
    id v40 = objc_allocWithZone(MEMORY[0x263F0A7E0]);
    uint64_t v41 = (void *)sub_241CD6C60();
    uint64_t v42 = (void *)sub_241CD6890();
    uint64_t v43 = v40;
    uint64_t v44 = v38;
    id v51 = v38;
    id v45 = objc_msgSend(v43, sel_initWithSampleType_samplePredicate_options_anchorDate_intervalComponents_, v54, v38, v36, v41, v42);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v62);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v15, v60);
    uint64_t v46 = (void *)sub_241CD6790();
    objc_msgSend(v45, sel_setDateInterval_, v46);

    uint64_t v47 = (void *)swift_allocObject();
    uint64_t v48 = v58;
    _OWORD v47[2] = v56;
    v47[3] = v48;
    v47[4] = v5;
    aBlock[4] = sub_241BC152C;
    aBlock[5] = v47;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241BC0A40;
    aBlock[3] = &unk_26F5C4B68;
    uint64_t v49 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_241B5557C((uint64_t)sub_241BC152C);
    swift_release();
    objc_msgSend(v45, sel_setInitialResultsHandler_, v49);
    _Block_release(v49);
    swift_release();
    objc_msgSend(*(id *)(v63 + 16), sel_executeQuery_, v45);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v39, v57);
  }
  else
  {
    sub_241A3F000();
    sub_241BC14E0((unint64_t *)&qword_268D42190, (void (*)(uint64_t))sub_241A3F000);
    char v34 = (void *)swift_allocError();
    unsigned char *v35 = 0;
    a3(v34, 1);
  }
}

uint8_t *sub_241BBFB80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)sub_241CDA1A0();
  uint64_t v7 = *(v6 - 1);
  id v102 = v6;
  uint64_t v103 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (uint8_t *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v100 = (char *)&v91 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v91 = (char *)&v91 - v13;
  sub_241BC12A0(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v92 = (char *)&v91 - v15;
  uint64_t v16 = sub_241CD9970();
  uint64_t v98 = *(void *)(v16 - 8);
  uint64_t v99 = v16;
  MEMORY[0x270FA5388](v16);
  int v97 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CD6D00();
  uint64_t v94 = *(void *)(v18 - 8);
  uint64_t v95 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  MEMORY[0x270FA5388](v19);
  uint64_t v93 = (char *)&v91 - v20;
  sub_241BC12A0(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v91 - v22;
  sub_241BC12A0(0, &qword_26B0321B0, MEMORY[0x263F46B90]);
  MEMORY[0x270FA5388](v24 - 8);
  id v26 = (char *)&v91 - v25;
  uint64_t v104 = sub_241CD9840();
  uint64_t v27 = *(void *)(v104 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v104);
  id v30 = (char *)&v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  id v101 = (char *)&v91 - v31;
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v3 + 192);
  uint64_t v96 = a2;
  id v105 = (void *)v32(a1, a2);
  if (!v105)
  {
    sub_241CDA0F0();
    swift_retain_n();
    uint64_t v36 = v10;
    id v37 = sub_241CDA190();
    os_log_type_t v38 = sub_241CDB660();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      id v105 = (void *)swift_slowAlloc();
      *(void *)&v106[0] = v105;
      *(_DWORD *)uint64_t v36 = 136315138;
      uint64_t v104 = (uint64_t)(v36 + 4);
      id v39 = objc_msgSend(*(id *)(v3+ qword_26B041200+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)), sel_identifier);
      uint64_t v40 = sub_241CDB0D0();
      unint64_t v42 = v41;

      uint64_t v108 = sub_241A33FE4(v40, v42, (uint64_t *)v106);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v37, v38, "Unexpectedly received an empty statistics collection for %s when it had a sample within that date interval", v36, 0xCu);
      uint64_t v43 = v105;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v43, -1, -1);
      MEMORY[0x245637F20](v36, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(uint8_t *, id))(v103 + 8))(v10, v102);
    sub_241AB90B4();
    swift_allocError();
    *unint64_t v77 = 1;
    swift_willThrow();
    return v36;
  }
  id v33 = (char *)(v3 + qword_26B0411F0);
  uint64_t v34 = sub_241CD9CC0();
  uint64_t v35 = v104;
  if (*(void *)(v34 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v26, v34 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80)), v104);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v26, 0, 1, v35);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v26, 1, 1, v104);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1, v35) == 1)
  {
    sub_241BC1550((uint64_t)v26, &qword_26B0321B0, MEMORY[0x263F46B90]);
    uint64_t v44 = (uint8_t *)v100;
    sub_241CDA0F0();
    swift_retain_n();
    uint64_t v36 = v44;
    id v45 = sub_241CDA190();
    os_log_type_t v46 = sub_241CDB660();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v104 = v47;
      *(_DWORD *)uint64_t v36 = 136315138;
      *(void *)&v106[0] = v47;
      id v101 = (char *)(v36 + 4);
      id v48 = objc_msgSend(*(id *)(v3+ qword_26B041200+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)), sel_identifier);
      uint64_t v49 = sub_241CDB0D0();
      unint64_t v51 = v50;

      uint64_t v108 = sub_241A33FE4(v49, v51, (uint64_t *)v106);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v45, v46, "Unexpectedly no statistics options for %s", v36, 0xCu);
      uint64_t v52 = v104;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v52, -1, -1);
      MEMORY[0x245637F20](v36, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(uint8_t *, id))(v103 + 8))(v44, v102);
    sub_241AB90B4();
    swift_allocError();
    unsigned char *v53 = 2;
    swift_willThrow();

    return v36;
  }
  uint64_t v54 = v35;
  uint64_t v100 = v33;
  id v55 = v101;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v101, v26, v54);
  uint64_t v56 = v105;
  id v57 = sub_241BC12F4(v105);
  if (!v57)
  {
    id v78 = v91;
    sub_241CDA0F0();
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v30, v55, v54);
    swift_retain_n();
    uint64_t v79 = sub_241CDA190();
    os_log_type_t v80 = sub_241CDB660();
    int v81 = v80;
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v82 = swift_slowAlloc();
      uint64_t v99 = swift_slowAlloc();
      *(void *)&v106[0] = v99;
      *(_DWORD *)uint64_t v82 = 136315394;
      LODWORD(v98) = v81;
      uint64_t v83 = sub_241CD9830();
      uint64_t v108 = sub_241A33FE4(v83, v84, (uint64_t *)v106);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      uint64_t v100 = *(char **)(v27 + 8);
      ((void (*)(char *, uint64_t))v100)(v30, v54);
      *(_WORD *)(v82 + 12) = 2080;
      id v85 = objc_msgSend(*(id *)(v3+ qword_26B041200+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)), sel_identifier);
      uint64_t v86 = sub_241CDB0D0();
      unint64_t v88 = v87;

      uint64_t v108 = sub_241A33FE4(v86, v88, (uint64_t *)v106);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v79, (os_log_type_t)v98, "Unexpectedly no %s statistic for %s", (uint8_t *)v82, 0x16u);
      uint64_t v36 = (uint8_t *)v99;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      MEMORY[0x245637F20](v82, -1, -1);

      (*(void (**)(char *, id))(v103 + 8))(v91, v102);
      sub_241AB90B4();
      swift_allocError();
      *double v89 = 3;
      swift_willThrow();

      ((void (*)(char *, uint64_t))v100)(v101, v104);
    }
    else
    {
      uint64_t v36 = *(uint8_t **)(v27 + 8);
      ((void (*)(char *, uint64_t))v36)(v30, v54);

      swift_release_n();
      (*(void (**)(char *, id))(v103 + 8))(v78, v102);
      sub_241AB90B4();
      swift_allocError();
      *uint64_t v90 = 3;
      swift_willThrow();

      ((void (*)(char *, uint64_t))v36)(v55, v54);
    }
    return v36;
  }
  uint64_t v103 = v27;
  uint64_t v58 = v57;
  sub_241A313AC(0, &qword_26B034E48);
  id v59 = objc_msgSend(v56, sel_startDate);
  uint64_t v60 = (uint64_t)v93;
  sub_241CD6CB0();

  id v61 = objc_msgSend(v56, sel_endDate);
  sub_241CD6CB0();

  sub_241CD67C0();
  uint64_t v62 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v23, 0, 1, v62);
  id v63 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v23, (uint64_t)objc_msgSend(v56, sel_dataCount), 0);
  sub_241A313AC(0, &qword_26B034E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16))(v60, v96, v95);
  id v102 = v58;
  id v64 = HKCodableSummaryQuantityValue.init(quantity:date:)(v102, v60);
  uint64_t v65 = sub_241CD9D00();
  uint64_t v66 = v97;
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v97, v100, v65);
  uint64_t v67 = v98;
  uint64_t v68 = v99;
  (*(void (**)(char *, void, uint64_t))(v98 + 104))(v66, *MEMORY[0x263F46C30], v99);
  id v69 = v63;
  double v70 = v64;
  unint64_t result = (uint8_t *)objc_msgSend(v64, sel_data);
  if (result)
  {
    uint64_t v72 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v73 = sub_241CD6AE0();
    unint64_t v75 = v74;

    uint64_t v76 = (uint64_t)v92;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v92, v66, v68);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v76, 0, 1, v68);
    uint64_t v107 = 0;
    memset(v106, 0, sizeof(v106));
    uint64_t v36 = (uint8_t *)sub_241A54648(v73, v75, 14, v76, (uint64_t)v69, 0, (uint64_t)v106);

    sub_241A37374(v73, v75);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v68);

    (*(void (**)(char *, uint64_t))(v103 + 8))(v101, v104);
    return v36;
  }
  __break(1u);
  return result;
}

void sub_241BC0A40(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(v10, a3, a4);
  swift_release();
}

void sub_241BC0AE0(void *a1, char a2, uint64_t a3, void *a4, void (*a5)(void *, uint64_t))
{
  uint64_t v10 = sub_241CD6D00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v16 = a1;
    a5(a1, 1);
    sub_241A960B8(a1);
  }
  else
  {
    id v14 = a1;
    id v15 = objc_msgSend(a4, sel_endDate);
    sub_241CD6CB0();

    uint64_t v17 = (void *)(*(uint64_t (**)(id, char *))(*(void *)a3 + 184))(v14, v13);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    id v18 = v17;
    a5(v17, 0);
    sub_241A960B8(a1);
  }
}

void sub_241BC0D10(uint64_t a1, void *a2, void *a3, void (*a4)(void *, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    id v14 = a3;
    a4(a3, 1);
    id v15 = a3;
LABEL_4:

    return;
  }
  if (a2)
  {
    id v34 = a2;
    a4(a2, 0);
    id v15 = v34;
    goto LABEL_4;
  }
  sub_241CDA0F0();
  swift_retain_n();
  id v16 = sub_241CDA190();
  os_log_type_t v17 = sub_241CDB660();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    LODWORD(v34) = v18;
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v33 = v20;
    uint64_t v31 = v19;
    os_log_t v32 = v16;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v36 = v20;
    v30[1] = v19 + 4;
    id v21 = objc_msgSend(*(id *)(a6+ qword_26B041200+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)), sel_identifier);
    uint64_t v22 = sub_241CDB0D0();
    unint64_t v24 = v23;

    uint64_t v35 = sub_241A33FE4(v22, v24, &v36);
    sub_241CDBBF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    id v26 = v31;
    os_log_t v25 = v32;
    _os_log_impl(&dword_241A23000, v32, (os_log_type_t)v34, "Unexpectedly received a nil statistics collection for %s when it had a sample within that date interval", v31, 0xCu);
    uint64_t v27 = v33;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v27, -1, -1);
    MEMORY[0x245637F20](v26, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_241AB90B4();
  uint64_t v28 = (void *)swift_allocError();
  *uint64_t v29 = 0;
  a4(v28, 1);
}

uint64_t sub_241BC105C()
{
  uint64_t v1 = v0 + qword_26B0411F0;
  uint64_t v2 = sub_241CD9D00();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_241BC10C8()
{
  sub_241A3F384(v0 + qword_26B041200);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_26B0411F0;
  uint64_t v4 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StatisticsCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B031D50;
  if (!qword_26B031D50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241BC1210()
{
  uint64_t result = sub_241CD9D00();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_241BC12A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id sub_241BC12F4(void *a1)
{
  uint64_t v2 = sub_241CD9840();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F46B78], v2);
  sub_241BC14E0(&qword_26B0321A8, MEMORY[0x263F46B90]);
  sub_241CDB260();
  sub_241CDB260();
  if (v8[2] == v8[0] && v8[3] == v8[1])
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return objc_msgSend(a1, sel_mostRecentQuantity);
  }
  char v6 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6) {
    return objc_msgSend(a1, sel_mostRecentQuantity);
  }
  return (id)sub_241CDB4C0();
}

uint64_t sub_241BC14E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241BC152C(uint64_t a1, void *a2, void *a3)
{
  sub_241BC0D10(a1, a2, a3, *(void (**)(void *, uint64_t))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_241BC1538(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241BC1548()
{
  return swift_release();
}

uint64_t sub_241BC1550(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241BC12A0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241BC15AC(void *a1, void *a2, void *a3, uint64_t a4, void *a5, void (*a6)(void *, uint64_t), uint64_t a7)
{
  id v58 = a1;
  id v59 = a2;
  uint64_t v12 = sub_241CD68F0();
  uint64_t v63 = *(void *)(v12 - 8);
  uint64_t v64 = v12;
  MEMORY[0x270FA5388](v12);
  id v61 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_241CD6D00();
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  id v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_241CD6810();
  uint64_t v66 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  int v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  v19[4] = a6;
  v19[5] = a7;
  uint64_t v20 = (uint64_t)a3 + qword_26B041200;
  uint64_t v21 = *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28);
  uint64_t v65 = v20;
  uint64_t v22 = *(void **)(v20 + v21);
  self;
  uint64_t v23 = swift_dynamicCastObjCClass();
  if (v23)
  {
    uint64_t v56 = v23;
    uint64_t v57 = v16;
    unint64_t v24 = *(void (**)(id))(*(void *)a3 + 176);
    swift_retain();
    id v25 = a5;
    swift_retain();
    id v54 = v22;
    v24(v58);
    id v26 = self;
    uint64_t v27 = (void *)sub_241CD6790();
    id v28 = objc_msgSend(v26, sel_predicateForSamplesWithinDateInterval_options_, v27, 0);

    uint64_t v29 = v59;
    id v58 = v28;
    id v55 = v18;
    if (v59)
    {
      sub_241A33460();
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_241CEDF90;
      *(void *)(v30 + 32) = v28;
      *(void *)(v30 + 40) = v29;
      aBlock[0] = v30;
      sub_241CDB2E0();
      sub_241A313AC(0, (unint64_t *)&qword_26B030370);
      id v31 = v28;
      id v32 = v29;
      id v33 = v31;
      id v34 = v32;
      uint64_t v35 = (void *)sub_241CDB2A0();
      swift_bridgeObjectRelease();
      id v36 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v35);
    }
    else
    {
      id v36 = v28;
    }
    sub_241CD9CC0();
    uint64_t v42 = sub_241CDB8F0();
    id v43 = v54;
    id v44 = v36;
    id v59 = a3;
    id v45 = v55;
    sub_241CD67B0();
    sub_241CD9CD0();
    os_log_type_t v46 = v61;
    sub_241CD9980();
    id v47 = objc_allocWithZone(MEMORY[0x263F0A7E0]);
    id v48 = (void *)sub_241CD6C60();
    uint64_t v49 = (void *)sub_241CD6890();
    id v50 = objc_msgSend(v47, sel_initWithSampleType_samplePredicate_options_anchorDate_intervalComponents_, v56, v44, v42, v48, v49);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v46, v64);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v62);
    unint64_t v51 = (void *)sub_241CD6790();
    objc_msgSend(v50, sel_setDateInterval_, v51);

    uint64_t v52 = (void *)swift_allocObject();
    v52[2] = sub_241BC1C9C;
    v52[3] = v19;
    v52[4] = v59;
    aBlock[4] = sub_241BC1E54;
    aBlock[5] = v52;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241BC0A40;
    aBlock[3] = &unk_26F5C4BE0;
    uint64_t v53 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_241B5557C((uint64_t)sub_241BC1E54);
    swift_release();
    objc_msgSend(v50, sel_setInitialResultsHandler_, v53);
    _Block_release(v53);
    swift_release();
    objc_msgSend(*(id *)(v65 + 16), sel_executeQuery_, v50);

    (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v57);
    return swift_release();
  }
  else
  {
    sub_241A3F000();
    sub_241BC14E0((unint64_t *)&qword_268D42190, (void (*)(uint64_t))sub_241A3F000);
    id v37 = (void *)swift_allocError();
    *os_log_type_t v38 = 0;
    swift_retain();
    id v39 = a5;
    swift_retain();
    id v40 = v37;
    a6(v37, 1);

    return swift_release();
  }
}

uint64_t sub_241BC1C54()
{
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_241BC1C9C(void *a1, char a2)
{
  sub_241BC0AE0(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void (**)(void *, uint64_t))(v2 + 32));
}

uint64_t sub_241BC1CB0()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

unsigned char *storeEnumTagSinglePayload for StatisticsCurrentValueSharableModelStep.StatisticsProcessingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241BC1DBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatisticsCurrentValueSharableModelStep.StatisticsProcessingError()
{
  return &type metadata for StatisticsCurrentValueSharableModelStep.StatisticsProcessingError;
}

unint64_t sub_241BC1DF8()
{
  unint64_t result = qword_268D43328;
  if (!qword_268D43328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43328);
  }
  return result;
}

void sub_241BC1E58()
{
  qword_26B040FC0 = (uint64_t)&unk_26F5C03A8;
}

uint64_t sub_241BC1E6C()
{
  sub_241CD73A0();
  swift_allocObject();
  uint64_t result = sub_241CD7390();
  qword_268D43330 = result;
  return result;
}

unint64_t sub_241BC1EAC()
{
  unint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = (void *)sub_241CDB090();
  id v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_241CDBC50();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_241A786D4((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    sub_241BC3AA8();
    if (swift_dynamicCast()) {
      return v5;
    }
  }
  else
  {
    sub_241A78794((uint64_t)v7);
  }
  return sub_241B59370(MEMORY[0x263F8EE78]);
}

uint64_t sub_241BC1F98(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v72 = *v1;
  uint64_t v73 = a1;
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v74 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  unint64_t v75 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v68 = (char *)&v65 - v6;
  uint64_t v7 = sub_241CD6EE0();
  uint64_t v71 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BC3A04(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v70 = (uint64_t)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v65 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v18 = sub_241CD6D00();
  uint64_t v76 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  id v69 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v65 - v21;
  sub_241CD80E0();
  sub_241CD80D0();
  char v23 = sub_241CD80C0();
  uint64_t result = swift_release();
  if ((v23 & 1) == 0) {
    return result;
  }
  uint64_t v67 = v3;
  if (qword_268D41F60 != -1) {
    swift_once();
  }
  sub_241CD7370();
  uint64_t v25 = sub_241BC29F0();
  uint64_t v27 = v26;
  unint64_t v28 = sub_241BC1EAC();
  if (*(void *)(v28 + 16) && (unint64_t v29 = sub_241C0B22C(v25, v27), (v30 & 1) != 0))
  {
    uint64_t v31 = v76;
    (*(void (**)(char *, unint64_t, uint64_t))(v76 + 16))(v17, *(void *)(v28 + 56) + *(void *)(v76 + 72) * v29, v18);
    id v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56);
    id v33 = v17;
    uint64_t v34 = 0;
  }
  else
  {
    uint64_t v31 = v76;
    id v32 = *(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56);
    id v33 = v17;
    uint64_t v34 = 1;
  }
  uint64_t v65 = v32;
  v32(v33, v34, 1, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v66(v17, 1, v18) == 1)
  {
    sub_241BC3994((uint64_t)v17, &qword_26B0385B8, MEMORY[0x263F07490]);
LABEL_14:
    id v45 = v75;
    sub_241CDA140();
    swift_retain_n();
    os_log_type_t v46 = sub_241CDA190();
    os_log_type_t v47 = sub_241CDB630();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      unint64_t v77 = v49;
      *(_DWORD *)uint64_t v48 = 136315394;
      unint64_t v78 = v72;
      swift_getMetatypeMetadata();
      uint64_t v50 = sub_241CDB120();
      unint64_t v78 = sub_241A33FE4(v50, v51, (uint64_t *)&v77);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      unint64_t v78 = (unint64_t)v2;
      type metadata accessor for TrendGenerationAnalyticsEvent();
      swift_retain();
      uint64_t v52 = sub_241CDB120();
      unint64_t v78 = sub_241A33FE4(v52, v53, (uint64_t *)&v77);
      sub_241CDBBF0();
      swift_release_n();
      uint64_t v31 = v76;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v46, v47, "[%s]: Submitting analytics for trend: %s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      MEMORY[0x245637F20](v48, -1, -1);

      (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v67);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v45, v67);
    }
    unint64_t v78 = (unint64_t)v2;
    type metadata accessor for TrendGenerationAnalyticsEvent();
    sub_241BC3A68(&qword_268D43348);
    sub_241CD7F50();
    uint64_t v54 = sub_241BC29F0();
    uint64_t v56 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v15, v73, v18);
    v65(v15, 0, 1, v18);
    unint64_t v78 = sub_241BC1EAC();
    if (v66(v15, 1, v18) == 1)
    {
      uint64_t v57 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
      sub_241BC3994((uint64_t)v15, &qword_26B0385B8, MEMORY[0x263F07490]);
      uint64_t v58 = v70;
      sub_241BC2C04(v54, v56, v70);
      swift_bridgeObjectRelease();
      sub_241BC3994(v58, &qword_26B0385B8, v57);
    }
    else
    {
      uint64_t v59 = (uint64_t)v69;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v69, v15, v18);
      uint64_t v60 = v78;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v77 = v60;
      unint64_t v78 = 0x8000000000000000;
      sub_241B5980C(v59, v54, v56, isUniquelyReferenced_nonNull_native);
      unint64_t v78 = v77;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v62 = (void *)v2[10];
    uint64_t v63 = (void *)sub_241CDAF70();
    swift_bridgeObjectRelease();
    uint64_t v64 = (void *)sub_241CDB090();
    objc_msgSend(v62, sel_setObject_forKey_, v63, v64);

    return sub_241CD7380();
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v22, v17, v18);
  sub_241CD6EA0();
  char v35 = sub_241CD6E10();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v9, v7);
  if ((v35 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v18);
    goto LABEL_14;
  }
  id v36 = v68;
  sub_241CDA140();
  swift_retain_n();
  id v37 = sub_241CDA190();
  os_log_type_t v38 = sub_241CDB630();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    unint64_t v77 = v40;
    *(_DWORD *)uint64_t v39 = 136315394;
    unint64_t v78 = v72;
    swift_getMetatypeMetadata();
    uint64_t v41 = sub_241CDB120();
    unint64_t v78 = sub_241A33FE4(v41, v42, (uint64_t *)&v77);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2080;
    unint64_t v78 = (unint64_t)v2;
    type metadata accessor for TrendGenerationAnalyticsEvent();
    swift_retain();
    uint64_t v43 = sub_241CDB120();
    unint64_t v78 = sub_241A33FE4(v43, v44, (uint64_t *)&v77);
    sub_241CDBBF0();
    swift_release_n();
    uint64_t v31 = v76;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v37, v38, "[%s]: Analytics already submitted today for trend: %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v40, -1, -1);
    MEMORY[0x245637F20](v39, -1, -1);

    (*(void (**)(char *, uint64_t))(v74 + 8))(v68, v67);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v36, v67);
  }
  sub_241CD7380();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v22, v18);
}

uint64_t sub_241BC29F0()
{
  uint64_t v1 = v0;
  id v2 = *(id *)(v0 + 16);
  id v3 = objc_msgSend(v2, sel_description);
  uint64_t v4 = sub_241CDB0D0();

  sub_241CDB180();
  id v5 = *(id *)(v1 + 24);
  id v6 = objc_msgSend(v5, sel_description);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v4;
}

id *sub_241BC2AC4()
{
  return v0;
}

uint64_t sub_241BC2B24()
{
  sub_241BC2AC4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TrendGenerationAnalyticsEvent()
{
  return self;
}

unint64_t sub_241BC2B80()
{
  return 0xD000000000000025;
}

uint64_t sub_241BC2B9C()
{
  return sub_241BC3A68(&qword_268D43338);
}

uint64_t sub_241BC2BD0()
{
  return sub_241BC3A68(&qword_268D43340);
}

uint64_t sub_241BC2C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_241C0B22C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_241B0866C();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = sub_241CD6D00();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a3, v12 + *(void *)(v20 + 72) * v8, v13);
    sub_241BC2DAC(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_241CD6D00();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

unint64_t sub_241BC2DAC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_241CDBC80();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_241CDC1D0();
        swift_bridgeObjectRetain();
        sub_241CDB170();
        uint64_t v9 = sub_241CDC200();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(sub_241CD6D00() - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_241BC2FBC(uint64_t a1)
{
  uint64_t v2 = sub_241CD6D00();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v31 - v6;
  uint64_t v8 = sub_241CD6EE0();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD68F0();
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v34 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  sub_241BC3A04(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v14 - 8);
  int64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = sub_241CD6810();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BC3914(a1, (uint64_t)v16, &qword_26B038F10, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_241BC3994((uint64_t)v16, &qword_26B038F10, MEMORY[0x263F062D0]);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    id v33 = v10;
    sub_241CD6EA0();
    sub_241BC3A04(0, &qword_26B034F18, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
    uint64_t v22 = sub_241CD6ED0();
    uint64_t v23 = *(void *)(v22 - 8);
    unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v25 + v24, *MEMORY[0x263F07870], v22);
    sub_241C69E8C(v25);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_241CD67E0();
    sub_241CD67B0();
    uint64_t v26 = v34;
    uint64_t v32 = v17;
    uint64_t v27 = v33;
    sub_241CD6E20();
    swift_bridgeObjectRelease();
    uint64_t v28 = v40;
    unint64_t v29 = *(void (**)(char *, uint64_t))(v39 + 8);
    v29(v5, v40);
    v29(v7, v28);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v38);
    uint64_t v21 = sub_241CD68A0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v36);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v32);
  }
  return v21;
}

void *sub_241BC34FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, int a8, char a9, char a10, uint64_t a11)
{
  uint64_t v12 = v11;
  v29[1] = a5;
  sub_241BC3A04(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v29 - v19;
  uint64_t result = objc_msgSend(a1, sel_identifier);
  if (result)
  {
    int v30 = a8;
    v29[0] = a7;
    void v12[2] = result;
    uint64_t v31 = a4;
    sub_241BC3914(a4, (uint64_t)v20, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    uint64_t v22 = sub_241CD98D0();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) == 1)
    {
      sub_241BC3994((uint64_t)v20, &qword_26B0321C0, MEMORY[0x263F46BE0]);
      sub_241BC3A68(&qword_26B02F170);
      sub_241CD8050();
    }
    else
    {
      sub_241CD98C0();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    }
    uint64_t v24 = sub_241CDB090();
    swift_bridgeObjectRelease();
    v12[5] = v24;
    sub_241CD9FA0();
    uint64_t v25 = sub_241CDB090();
    swift_bridgeObjectRelease();
    v12[3] = v25;
    if (qword_26B02F168 != -1) {
      swift_once();
    }
    sub_241BC3A68(&qword_26B02F170);
    v12[4] = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, sub_241CD8030());
    if (a6) {
      id v26 = (id)sub_241CD8040();
    }
    else {
      id v26 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, sub_241CD8030());
    }
    v12[6] = v26;
    if (v30) {
      id v27 = (id)sub_241CD8040();
    }
    else {
      id v27 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, sub_241CD8030());
    }
    v12[7] = v27;
    v12[8] = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, a9 & 1);
    id v28 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, a10 & 1);
    sub_241BC3994(v31, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    v12[9] = v28;
    v12[10] = a11;
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241BC3914(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241BC3A04(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241BC3994(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241BC3A04(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241BC3A04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241BC3A68(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TrendGenerationAnalyticsEvent();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241BC3AA8()
{
  if (!qword_26B034BF0)
  {
    sub_241CD6D00();
    unint64_t v0 = sub_241CDAFB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034BF0);
    }
  }
}

uint64_t sub_241BC3B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241BC3B24);
}

uint64_t sub_241BC3B24(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241BC3BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241BC3BE8);
}

void *sub_241BC3BE8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031EA8;
  if (!qword_26B031EA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241BC3CDC()
{
  return sub_241BC3DE0((unint64_t *)&qword_26B0320F0);
}

void sub_241BC3D10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241BC3FAC(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241BC3DAC()
{
  return sub_241BC3DE0((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241BC3DE0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BC3D10(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241BC3FAC((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241BC3FAC(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BC3EC4()
{
  return sub_241BC3FAC(&qword_26B0385F8, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
}

uint64_t sub_241BC3F0C()
{
  return sub_241BC3FAC(&qword_26B032B60, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
}

uint64_t sub_241BC3F54(uint64_t a1)
{
  uint64_t result = sub_241BC3FAC(&qword_26B037F30, (void (*)(uint64_t))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241BC3FAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BC3FF4()
{
  return sub_241BC4094(&qword_26B0383E0, (unint64_t *)&unk_26B0383E8, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241BC4044()
{
  return sub_241BC4094(&qword_26B032E30, (unint64_t *)&unk_26B032E38, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241BC4094(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BC40D8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241BC40D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241BC3D10(255, &qword_26B032118, MEMORY[0x263F44150]);
    v9[0] = v6;
    v9[1] = &type metadata for SnidgetLevelChartView;
    v9[2] = sub_241A3F5B0();
    v9[3] = sub_241A91BE8();
    v9[4] = sub_241BC3DE0((unint64_t *)&qword_26B0320F0);
    v9[5] = sub_241BC3DE0((unint64_t *)&qword_26B0320E0);
    v9[6] = sub_241BC3FAC(&qword_26B0385F8, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
    v9[7] = sub_241BC3FAC(&qword_26B032B60, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
    unint64_t v7 = a3(a1, v9);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241BC4248(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v4 = (uint64_t)v3;
  uint64_t v180 = a2;
  uint64_t v181 = a3;
  uint64_t v6 = type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v184 = (char *)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v152 - v9);
  uint64_t v11 = sub_241CDA1A0();
  uint64_t v182 = *(void *)(v11 - 8);
  v183 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v185 = (char *)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35A38(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v13 - 8);
  int v179 = (char *)&v152 - v14;
  uint64_t v15 = sub_241CD6D00();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v168 = (char *)&v152 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35A38(0, &qword_26B038880, MEMORY[0x263F45770]);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  unint64_t v177 = (char *)&v152 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v169 = (char *)&v152 - v20;
  uint64_t v21 = type metadata accessor for SnidgetFeedItemMetadata(0);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v178 = (char *)&v152 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v170 = (char *)&v152 - v24;
  sub_241A35A38(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v167 = (char *)&v152 - v26;
  sub_241A35A38(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v176 = (char *)&v152 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v164 = (char *)&v152 - v30;
  uint64_t v162 = sub_241CDA090();
  uint64_t v161 = *(void *)(v162 - 8);
  MEMORY[0x270FA5388](v162);
  uint64_t v159 = (uint64_t)&v152 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_241CD7F90();
  uint64_t v158 = *(void *)(v160 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v160);
  uint64_t v157 = (char *)&v152 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v156 = (char *)&v152 - v34;
  uint64_t v155 = sub_241CD80F0();
  uint64_t v154 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  uint64_t v153 = (char *)&v152 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35A38(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v37 = MEMORY[0x270FA5388](v36 - 8);
  uint64_t v166 = (uint64_t)&v152 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v165 = (char *)&v152 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v172 = (uint64_t)&v152 - v42;
  MEMORY[0x270FA5388](v41);
  unint64_t v44 = (char *)&v152 - v43;
  uint64_t v173 = sub_241CD69B0();
  uint64_t v175 = *(void *)(v173 - 8);
  uint64_t v45 = MEMORY[0x270FA5388](v173);
  v163 = (char *)&v152 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  uint64_t v171 = (char *)&v152 - v47;
  uint64_t v48 = self;
  uint64_t v49 = (void *)*v3;
  id v50 = objc_msgSend(v48, sel_sharedInstanceForHealthStore_, *v3);
  if (!v50)
  {
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v51 = v50;
  unint64_t v174 = (char *)v3 + *(int *)(v6 + 20);
  id v52 = objc_msgSend(v50, sel_displayTypeForObjectType_, *((void *)v174 + 2));

  id v187 = v52;
  if (v52)
  {
    unint64_t v53 = a1;
    id v54 = v186;
    sub_241ADF9D8(a1);
    if (v54)
    {

      return;
    }
    uint64_t v68 = v55;
    if (!v55) {
      goto LABEL_20;
    }
    if (!objc_msgSend(v55, sel_hasQuantity)
      || !objc_msgSend(v68, sel_hasClassificationRawValue)
      || !objc_msgSend(v68, sel_hasLevelViewDataConfiguration))
    {
      goto LABEL_19;
    }
    id v69 = objc_msgSend(v68, sel_quantity);
    if (v69)
    {
      uint64_t v70 = v69;
      unsigned int v71 = objc_msgSend(v69, sel_hasDateData);

      if (v71)
      {
        id v72 = objc_msgSend(v68, sel_quantity);
        if (v72)
        {
          uint64_t v73 = v72;
          unsigned int v74 = objc_msgSend(v72, sel_hasValue);

          if (v74)
          {
            uint64_t v185 = 0;
            id v186 = v68;
            unint64_t v75 = *(void **)&v174[*(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32)];
            type metadata accessor for SnidgetStringBuilder();
            uint64_t inited = swift_initStackObject();
            *(void *)(inited + 16) = v49;
            unint64_t v77 = self;
            uint64_t v184 = v75;
            id v78 = v49;
            uint64_t v79 = inited;
            id v80 = objc_msgSend(v77, sel_sharedInstanceForHealthStore_, v78);
            *(void *)(inited + 32) = v80;
            if (v75)
            {
              id v81 = v184;
            }
            else
            {
              id v94 = v80;
              id v81 = objc_msgSend(v94, sel_createHKUnitPreferenceController);
            }
            *(void *)(v79 + 24) = v81;
            id v95 = objc_msgSend(self, sel_localizedTitleForClassification_, objc_msgSend(v186, sel_classificationRawValue));
            uint64_t v96 = v173;
            if (v95)
            {
              int v97 = v95;
              sub_241CDB0D0();

              SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
              swift_bridgeObjectRelease();
              uint64_t v98 = v175;
              uint64_t v99 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v175 + 56);
              v99(v44, 0, 1, v96);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v44, 1, v96) != 1)
              {
                v183 = v99;
                (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v171, v44, v96);
                uint64_t v182 = v79;
                sub_241BC57B4(v53, v172);
                id v100 = objc_msgSend(v186, sel_levelViewDataConfiguration);
                if (v100)
                {
                  id v101 = v100;
                  id v102 = objc_msgSend(v187, sel_objectType);
                  uint64_t v103 = v153;
                  sub_241CD8100();
                  uint64_t v104 = v154;
                  id v105 = v156;
                  uint64_t v106 = v155;
                  (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v156, v103, v155);
                  uint64_t v107 = v158;
                  uint64_t v108 = v160;
                  (*(void (**)(char *, void, uint64_t))(v158 + 104))(v105, *MEMORY[0x263F43630], v160);
                  uint64_t v109 = v159;
                  LevelView.DataConfiguration.init(codable:)(v101, v159);
                  id v110 = v103;
                  uint64_t v96 = v173;
                  (*(void (**)(char *, uint64_t))(v104 + 8))(v110, v106);
                  unint64_t v111 = *(void (**)(char *, char *, uint64_t))(v107 + 32);
                  char v112 = v157;
                  v111(v157, v105, v108);
                  type metadata accessor for SnidgetLevelChartView.ViewModel();
                  uint64_t v113 = (char *)swift_allocObject();
                  (*(void (**)(char *, uint64_t, uint64_t))(v161 + 32))(&v113[OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration], v109, v162);
                  uint64_t v184 = v113;
                  v111(&v113[OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor], v112, v108);
                }
                else
                {
                  uint64_t v184 = 0;
                }
                id v125 = objc_msgSend(v186, sel_quantity);
                if (v125)
                {
                  int v126 = v125;
                  sub_241CD89A0();
                  sub_241A3A9CC();
                  uint64_t v128 = *(int *)(v127 + 48);
                  objc_msgSend(v126, sel_dateData);
                  id v129 = (id)HKDecodeDateForValue();
                  uint64_t v130 = v164;
                  sub_241CD6CB0();

                  v130[v128] = 0;
                  uint64_t v131 = *MEMORY[0x263F43F18];
                  uint64_t v132 = sub_241CD8610();
                  uint64_t v133 = *(void *)(v132 - 8);
                  (*(void (**)(char *, uint64_t, uint64_t))(v133 + 104))(v130, v131, v132);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
                  id v187 = v187;
                  uint64_t v178 = (unsigned char *)sub_241CD8990();
                  v183(v165, 1, 1, v96);
                  (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v163, v171, v96);
                  sub_241AD163C(v172, v166);
                  v188[0] = 0x5F74656764696E53;
                  v188[1] = 0xE800000000000000;
                  id v134 = *((id *)v174 + 2);
                  id v135 = objc_msgSend(v134, sel_description);
                  sub_241CDB0D0();

                  sub_241CDB180();
                  swift_bridgeObjectRelease();
                  uint64_t v136 = v167;
                  sub_241CD8E50();
                  swift_bridgeObjectRelease();
                  uint64_t v137 = sub_241CD8E70();
                  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v136, 0, 1, v137);
                  sub_241CD8FF0();
                  swift_allocObject();
                  uint64_t v138 = sub_241CD8FE0();
                  id v139 = v184;
                  swift_retain();
                  id v140 = v186;
                  id v141 = objc_msgSend(v186, sel_quantity);
                  if (v141)
                  {
                    BOOL v142 = v141;
                    objc_msgSend(v141, sel_dateData);
                    id v143 = (id)HKDecodeDateForValue();
                    sub_241CD6CB0();

                    uint64_t v144 = (uint64_t)v169;
                    sub_241CD79D0();
                    uint64_t v145 = sub_241CD7A10();
                    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v144, 0, 1, v145);
                    uint64_t v146 = sub_241CD6810();
                    uint64_t v147 = (uint64_t)v179;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 56))(v179, 1, 1, v146);
                    uint64_t v148 = v180;
                    swift_bridgeObjectRetain();
                    int v149 = v170;
                    sub_241B4A1A8(1, v144, v148, v147, v170);

                    swift_release();
                    swift_release();
                    unint64_t v150 = v181;
                    *uint64_t v181 = v178;
                    v150[1] = v138;
                    v150[2] = v139;
                    sub_241A919AC(0);
                    sub_241B853D0((uint64_t)v149, (uint64_t)v150 + *(int *)(v151 + 52));
                    sub_241AD16D0(v172);
                    (*(void (**)(char *, uint64_t))(v175 + 8))(v171, v96);
                    return;
                  }
                  goto LABEL_37;
                }
LABEL_36:
                swift_release();
                __break(1u);
LABEL_37:
                swift_release();
                __break(1u);
                return;
              }
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v175 + 56))(v44, 1, 1, v173);
            }
            sub_241AD16D0((uint64_t)v44);
            uint64_t v114 = sub_241CD7A10();
            uint64_t v115 = (uint64_t)v177;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v177, 1, 1, v114);
            uint64_t v116 = sub_241CD6810();
            uint64_t v117 = (uint64_t)v179;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v179, 1, 1, v116);
            uint64_t v118 = v180;
            swift_bridgeObjectRetain();
            uint64_t v119 = v178;
            sub_241B4A1A8(0, v115, v118, v117, v178);
            sub_241CD89A0();
            uint64_t v120 = sub_241CD8610();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v176, 1, 1, v120);
            id v121 = v187;
            uint64_t v122 = sub_241CD8990();
            sub_241A919AC(0);
            uint64_t v124 = v181;
            sub_241BC5AFC((uint64_t)v119, (uint64_t)v181 + *(int *)(v123 + 52), type metadata accessor for SnidgetFeedItemMetadata);

            swift_release();
            v124[1] = 0;
            v124[2] = 0;
            uint64_t *v124 = v122;
            sub_241BC5B64((uint64_t)v119, type metadata accessor for SnidgetFeedItemMetadata);
            return;
          }
          goto LABEL_19;
        }
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
LABEL_19:

LABEL_20:
      uint64_t v83 = sub_241CD7A10();
      uint64_t v84 = (uint64_t)v177;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v177, 1, 1, v83);
      uint64_t v85 = sub_241CD6810();
      uint64_t v86 = (uint64_t)v179;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v179, 1, 1, v85);
      uint64_t v87 = v180;
      swift_bridgeObjectRetain();
      unint64_t v88 = v178;
      sub_241B4A1A8(0, v84, v87, v86, v178);
      sub_241CD89A0();
      uint64_t v89 = sub_241CD8610();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v176, 1, 1, v89);
      id v90 = v187;
      uint64_t v91 = sub_241CD8990();
      sub_241A919AC(0);
      uint64_t v93 = v181;
      sub_241BC5AFC((uint64_t)v88, (uint64_t)v181 + *(int *)(v92 + 52), type metadata accessor for SnidgetFeedItemMetadata);

      v93[1] = 0;
      v93[2] = 0;
      *uint64_t v93 = v91;
      sub_241BC5B64((uint64_t)v88, type metadata accessor for SnidgetFeedItemMetadata);
      return;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v56 = v185;
  sub_241CDA0F0();
  sub_241BC5AFC(v4, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
  uint64_t v57 = v184;
  sub_241BC5AFC(v4, (uint64_t)v184, (uint64_t (*)(void))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
  uint64_t v58 = sub_241CDA190();
  os_log_type_t v59 = sub_241CDB650();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = swift_slowAlloc();
    id v187 = (id)swift_slowAlloc();
    v188[0] = (uint64_t)v187;
    *(_DWORD *)uint64_t v60 = 136315394;
    uint64_t v61 = sub_241AE03B0(*v10, *((unsigned __int8 *)v10 + *(int *)(v6 + 20) + 8));
    uint64_t v189 = sub_241A33FE4(v61, v62, v188);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241BC5B64((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
    *(_WORD *)(v60 + 12) = 2080;
    id v63 = objc_msgSend(*(id *)&v57[*(int *)(v6 + 20) + 16], sel_sensitiveLoggingIdentifier);
    uint64_t v64 = sub_241CDB0D0();
    unint64_t v66 = v65;

    uint64_t v189 = sub_241A33FE4(v64, v66, v188);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241BC5B64((uint64_t)v184, (uint64_t (*)(void))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
    _os_log_impl(&dword_241A23000, v58, v59, "[%s]: unable to find display type: %s", (uint8_t *)v60, 0x16u);
    id v67 = v187;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v67, -1, -1);
    MEMORY[0x245637F20](v60, -1, -1);

    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v182 + 8))(v185, v183);
  }
  else
  {
    sub_241BC5B64((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
    sub_241BC5B64((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);

    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v182 + 8))(v56, v183);
  }
  sub_241A41340();
  swift_allocError();
  unsigned char *v82 = 0;
  swift_willThrow();
}

void sub_241BC57B4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CD6810();
  uint64_t v8 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_hasSupplementaryValue))
  {
    uint64_t v11 = a2;
    id v12 = objc_msgSend(a1, sel_supplementaryValue);
    if (!v12)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v13 = v12;
    unsigned int v14 = objc_msgSend(v12, sel_hasDateInterval);

    a2 = v11;
    if (v14)
    {
      id v15 = objc_msgSend(a1, sel_supplementaryValue);
      if (v15)
      {
        uint64_t v16 = v15;
        id v17 = objc_msgSend(v15, sel_dateInterval);

        if (v17)
        {
          sub_241CDB920();

          SnidgetStringBuilder.makeDateRangeSupplementaryAttributedString(dateRange:)((uint64_t)v10, v11);
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
          return;
        }
        goto LABEL_13;
      }
LABEL_12:
      __break(1u);
LABEL_13:
      __break(1u);
      return;
    }
  }
  sub_241CDA0F0();
  uint64_t v18 = sub_241CDA190();
  os_log_type_t v19 = sub_241CDB650();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_241A23000, v18, v19, "Current value model for walking steadiness does not have a supplementary value", v20, 2u);
    MEMORY[0x245637F20](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v21 = sub_241CD69B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a2, 1, 1, v21);
}

uint64_t sub_241BC5AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241BC5AFC(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241BC5AD8(uint64_t a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_241BC5AFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241BC5B64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241BC60B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a4;
  uint64_t v8 = sub_241CD6D00();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  sub_241B3DE68();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v24 = v11;
  uint64_t v25 = v12;
  MEMORY[0x270FA5388](v11);
  unsigned int v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v4;
  *((void *)v16 + 3) = a1;
  *((void *)v16 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v16[v15], (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)&v16[(v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8] = v23;
  sub_241B3DF54();
  swift_allocObject();
  id v17 = v4;
  id v18 = a1;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_241CDA610();
  os_log_type_t v19 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDE08];
  sub_241BCB53C(0, (unint64_t *)&qword_26B032840, MEMORY[0x263EFDE08]);
  sub_241BCBF34(&qword_26B038998, (void (*)(uint64_t))sub_241B3DF54);
  sub_241BCB640(&qword_26B038990, (unint64_t *)&qword_26B032840, v19);
  sub_241CDA750();
  swift_release();
  sub_241BCBF34(&qword_26B038938, (void (*)(uint64_t))sub_241B3DE68);
  uint64_t v20 = v24;
  uint64_t v21 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v20);
  return v21;
}

void sub_241BC63F8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_241BC6484(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v7 = v6;
  uint64_t v46 = *MEMORY[0x263EF8340];
  id v13 = objc_msgSend(a1, sel_identifier);
  uint64_t v14 = sub_241CDB0D0();
  uint64_t v16 = v15;

  if (v14 == sub_241CDB0D0() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  char v19 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_12:
    id v30 = objc_msgSend(v7, sel_healthStore);
    id aBlock = 0;
    id v31 = objc_msgSend(v30, sel_activityMoveModeWithError_, &aBlock);

    if (v31)
    {
      id v32 = aBlock;
      uint64_t v33 = (uint64_t)objc_msgSend(v31, sel_activityMoveMode);
    }
    else
    {
      id v34 = aBlock;
      uint64_t v35 = (void *)sub_241CD6A40();

      swift_willThrow();
      uint64_t v33 = 1;
    }
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = a5;
    *(void *)(v36 + 24) = a6;
    unint64_t v44 = sub_241BCB8FC;
    uint64_t v45 = v36;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v41 = 1107296256;
    uint64_t v42 = sub_241BC63F8;
    uint64_t v43 = &unk_26F5C4E30;
    uint64_t v37 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    objc_msgSend(v7, sel_encodeActivityChartDataForActivityMoveMode_completion_, v33, v37);
    _Block_release(v37);
    goto LABEL_16;
  }
  uint64_t v39 = a4;
  id v20 = objc_msgSend(a1, sel_identifier);
  sub_241CDB0D0();

  uint64_t v21 = *(void *)(a2 + 16);
  unint64_t v22 = MEMORY[0x263F8EE78];
  if (v21)
  {
    id aBlock = (id)MEMORY[0x263F8EE78];
    sub_241CDBE80();
    uint64_t v23 = (uint64_t *)(a2 + 32);
    do
    {
      uint64_t v24 = *v23++;
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v24);
      sub_241CDBE60();
      sub_241CDBE90();
      sub_241CDBEA0();
      sub_241CDBE70();
      --v21;
    }
    while (v21);
    unint64_t v22 = (unint64_t)aBlock;
  }
  sub_241C6A2F0(v22);
  swift_bridgeObjectRelease();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a5;
  *(void *)(v25 + 24) = a6;
  swift_retain();
  uint64_t v26 = (void *)sub_241CDB090();
  sub_241A313AC(0, (unint64_t *)&qword_26B0304E8);
  sub_241A7A5B0();
  uint64_t v27 = (void *)sub_241CDB360();
  uint64_t v28 = (void *)sub_241CD6C60();
  unint64_t v44 = sub_241BCB8FC;
  uint64_t v45 = v25;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v41 = 1107296256;
  uint64_t v42 = sub_241BC63F8;
  uint64_t v43 = &unk_26F5C4DE0;
  uint64_t v29 = _Block_copy(&aBlock);
  swift_retain();
  objc_msgSend(v7, sel_encodeChartQueryDataForTypeIdentifier_forTimeScopes_timeScopeReferenceDate_audience_completionHandler_, v26, v27, v28, v39, v29);
  _Block_release(v29);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_16:
  swift_release();
  return swift_release();
}

uint64_t sub_241BC68F0(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_241BC6930@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0F0();
  id v8 = a1;
  id v9 = a1;
  uint64_t v10 = sub_241CDA190();
  os_log_type_t v11 = sub_241CDB650();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    v21[0] = v4;
    uint64_t v13 = v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v22 = sub_241A313AC(0, (unint64_t *)&qword_26B038E78);
    sub_241BCB838();
    v21[1] = a2;
    uint64_t v15 = sub_241CDB120();
    uint64_t v22 = sub_241A33FE4(v15, v16, &v23);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v22 = (uint64_t)a1;
    id v17 = a1;
    sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
    uint64_t v18 = sub_241CDB130();
    uint64_t v22 = sub_241A33FE4(v18, v19, &v23);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v10, v11, "[%s]: error when creating chart data: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v14, -1, -1);
    MEMORY[0x245637F20](v13, -1, -1);

    (*(void (**)(char *, void))(v5 + 8))(v7, v21[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_241BCB5D8(0, (unint64_t *)&qword_26B034DF0, &qword_26B030428, 0x263F46498, MEMORY[0x263F8D8F0]);
  return sub_241CDA5E0();
}

uint64_t sub_241BC6C34(void *a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v44 = a2;
  sub_241BCAC68(0, &qword_268D43350, MEMORY[0x263EFDE08]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  os_log_type_t v11 = (char *)&v38 - v10;
  uint64_t v12 = sub_241CDA1A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0F0();
  swift_bridgeObjectRetain();
  id v16 = a4;
  id v17 = a1;
  swift_bridgeObjectRetain();
  id v18 = v16;
  id v19 = a1;
  id v20 = sub_241CDA190();
  os_log_type_t v21 = sub_241CDB650();
  int v45 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v43 = v9;
    uint64_t v23 = v22;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v47 = v40;
    *(_DWORD *)uint64_t v23 = 136446979;
    uint64_t v42 = v12;
    sub_241BC96EC();
    uint64_t v24 = sub_241CDC270();
    uint64_t v41 = v13;
    uint64_t v46 = sub_241A33FE4(v24, v25, &v47);
    os_log_t v39 = v20;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_241A33FE4(v44, a3, &v47);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 22) = 2081;
    id v26 = objc_msgSend(v18, sel_identifier);
    uint64_t v27 = sub_241CDB0D0();
    uint64_t v44 = v8;
    unint64_t v29 = v28;

    uint64_t v46 = sub_241A33FE4(v27, v29, &v47);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 32) = 2082;
    uint64_t v46 = (uint64_t)a1;
    id v30 = a1;
    sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
    uint64_t v31 = sub_241CDB130();
    uint64_t v46 = sub_241A33FE4(v31, v32, &v47);
    uint64_t v8 = v44;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    os_log_t v33 = v39;
    _os_log_impl(&dword_241A23000, v39, (os_log_type_t)v45, "%{public}s %{public}s %{private}s Error: %{public}s", (uint8_t *)v23, 0x2Au);
    uint64_t v34 = v40;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v34, -1, -1);
    uint64_t v35 = v23;
    uint64_t v9 = v43;
    MEMORY[0x245637F20](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v42);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  sub_241A35FBC(0, &qword_26B032058);
  sub_241CDA5E0();
  sub_241BCACE8();
  uint64_t v36 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v36;
}

void *sub_241BC70E0(uint64_t a1, int a2, void *a3)
{
  id v113 = a3;
  int v94 = a2;
  id v105 = (id)*v3;
  LODWORD(v124) = a2 & 1;
  sub_241BC9614();
  uint64_t v119 = v5;
  uint64_t v118 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v117 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v111 = v9;
  char v112 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BC9A18();
  uint64_t v109 = v10;
  uint64_t v106 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v103 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BC9BF8();
  id v110 = v12;
  uint64_t v107 = *((void *)v12 - 1);
  MEMORY[0x270FA5388](v12);
  uint64_t v104 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BC96EC();
  uint64_t v116 = v14;
  uint64_t v115 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v114 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_241CD6EE0();
  uint64_t v98 = *(void (***)(void, uint64_t))(v99 - 8);
  MEMORY[0x270FA5388](v99);
  int v97 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_241CD73B0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v96 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v95 = (uint64_t)&v90 - v22;
  uint64_t v93 = sub_241CD7650();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v91 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_241CD7690();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v128 = v24;
  uint64_t v129 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  id v102 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v123 = (char *)&v90 - v28;
  id v108 = self;
  id v29 = objc_msgSend(v108, sel_activitySummaryType);
  uint64_t v127 = v3;
  uint64_t v120 = v8;
  id v30 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v125 = v7;
  uint64_t v101 = v8 + 16;
  id v100 = v30;
  v30((char *)v3 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_context, a1, v7);
  uint64_t v126 = a1;
  id v121 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  id v122 = v29;
  *(void *)(inited + 32) = v29;
  uint64_t v131 = inited;
  sub_241CDB2E0();
  sub_241A35B54(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v32 = *(void *)(v18 + 72);
  unint64_t v33 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  if (v94)
  {
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_241CEB730;
    uint64_t v35 = *(void (**)(unint64_t, void, uint64_t))(v19 + 104);
    v35(v34 + v33, *MEMORY[0x263F454D0], v17);
  }
  else
  {
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_241CEB720;
    uint64_t v35 = *(void (**)(unint64_t, void, uint64_t))(v19 + 104);
    v35(v34 + v33, *MEMORY[0x263F45520], v17);
    v35(v34 + v33 + v32, *MEMORY[0x263F45538], v17);
  }
  id v36 = v121;
  id v37 = v122;
  sub_241C5D74C(v34);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v38 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v38);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v92 + 104))(v91, *MEMORY[0x263F45690], v93);
  os_log_t v39 = v123;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  uint64_t v40 = v96;
  v35((unint64_t)v96, *MEMORY[0x263F45500], v17);
  uint64_t v41 = (void (*)(uint64_t *, void))sub_241CD7660();
  uint64_t v42 = v95;
  sub_241C5A0BC(v95, v40);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v42, v17);
  v41(&v131, 0);
  uint64_t v43 = v127;
  uint64_t v96 = *(char **)(v129 + 16);
  uint64_t v44 = v39;
  ((void (*)(char *, char *, uint64_t))v96)((char *)v127 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_domain, v39, v128);
  id v45 = objc_msgSend(objc_allocWithZone((Class)sub_241CD8110()), sel_init);
  *(void *)((char *)v43 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_calendarCache) = v45;
  uint64_t v46 = v43;
  id v47 = v45;
  id v121 = v47;
  uint64_t v48 = v126;
  sub_241CD76B0();
  sub_241A311E0(&v131, v132);
  uint64_t v49 = (void *)sub_241CD75B0();
  id v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46780]), sel_initWithHealthStore_, v49);

  sub_241A31190((uint64_t)&v131);
  id v51 = objc_msgSend(v47, sel_currentCalendar);
  id v52 = v97;
  sub_241CD6E50();

  id v53 = objc_allocWithZone(MEMORY[0x263F466D8]);
  id v54 = (void *)sub_241CD6E40();
  uint64_t v55 = (void *)sub_241CDB090();
  id v56 = objc_msgSend(v53, sel_initWithCalendar_queryIdentifier_, v54, v55);

  ((void (**)(char *, uint64_t))v98)[1](v52, v99);
  objc_msgSend(v50, sel_setSleepDataSourceProvider_, v56);

  *(void *)((char *)v46 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_chartFactory) = v50;
  uint64_t v98 = (void (**)(void, uint64_t))v50;
  sub_241BCA0B0(v48, (char)v124);
  uint64_t v58 = v57;
  uint64_t v99 = v57;
  sub_241CD76B0();
  sub_241A311E0(&v131, v132);
  os_log_type_t v59 = (void *)sub_241CD75B0();
  id v60 = sub_241BC8170((uint64_t)v59);
  id v105 = v60;

  sub_241A31190((uint64_t)&v131);
  uint64_t v130 = (uint64_t)v60;
  uint64_t v131 = v58;
  sub_241BC9AE4();
  sub_241BCB9EC(0, &qword_26B032750);
  sub_241BCBF34(&qword_26B02EA28, (void (*)(uint64_t))sub_241BC9AE4);
  sub_241BC9B90();
  uint64_t v61 = v103;
  sub_241CDA700();
  sub_241CD7700();
  unint64_t v62 = v104;
  uint64_t v63 = v109;
  sub_241CDA330();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v61, v63);
  sub_241BCBF34(&qword_26B032518, (void (*)(uint64_t))sub_241BC9BF8);
  uint64_t v64 = v110;
  uint64_t v65 = sub_241CDA660();
  (*(void (**)(char *, void))(v107 + 8))(v62, v64);
  uint64_t v130 = v65;
  sub_241CD7730();
  unint64_t v66 = v102;
  uint64_t v67 = v128;
  ((void (*)(char *, char *, uint64_t))v96)(v102, v44, v128);
  sub_241BC9904();
  sub_241BCBF34(&qword_26B032728, (void (*)(uint64_t))sub_241BC9904);
  uint64_t v68 = sub_241CDA680();
  id v69 = *(void (**)(void, void))(v129 + 8);
  v129 += 8;
  id v110 = v69;
  v69(v66, v67);
  sub_241A31190((uint64_t)&v131);
  swift_release();
  uint64_t v131 = v68;
  uint64_t v70 = v112;
  uint64_t v71 = v125;
  v100(v112, v48, v125);
  uint64_t v72 = v120;
  unint64_t v73 = (*(unsigned __int8 *)(v120 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
  uint64_t v74 = v73 + v111;
  unint64_t v75 = (v73 + v111) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v76 = swift_allocObject();
  id v77 = v113;
  *(void *)(v76 + 16) = v113;
  (*(void (**)(unint64_t, char *, uint64_t))(v72 + 32))(v76 + v73, v70, v71);
  *(unsigned char *)(v76 + v74) = (_BYTE)v124;
  id v78 = v98;
  *(void *)(v75 + v76 + 8) = v98;
  uint64_t v79 = swift_allocObject();
  *(void *)(v79 + 16) = sub_241BCAB04;
  *(void *)(v79 + 24) = v76;
  id v124 = v78;
  id v113 = v77;
  sub_241CDA4F0();
  sub_241BCAC68(0, &qword_26B032680, MEMORY[0x263EFDCF0]);
  sub_241BC9890();
  id v80 = v114;
  sub_241CDA7B0();
  swift_release();
  swift_release();
  id v81 = objc_msgSend(v108, sel_activitySummaryType);
  uint64_t v82 = (void *)swift_allocObject();
  v82[2] = 0xD000000000000028;
  v82[3] = 0x8000000241CE3240;
  v82[4] = v81;
  sub_241BCBF34(&qword_26B032588, (void (*)(uint64_t))sub_241BC96EC);
  id v83 = v81;
  uint64_t v84 = v117;
  uint64_t v85 = v116;
  sub_241CDA750();
  swift_release();
  sub_241BCBF34(&qword_26B0324F8, (void (*)(uint64_t))sub_241BC9614);
  uint64_t v86 = v119;
  uint64_t v87 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v118 + 8))(v84, v86);

  (*(void (**)(char *, uint64_t))(v115 + 8))(v80, v85);
  uint64_t v131 = v87;
  uint64_t v88 = sub_241CDA6D0();

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v126, v125);
  swift_release();
  v110(v123, v128);
  uint64_t result = v127;
  *(void *)((char *)v127 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_publisher) = v88;
  return result;
}

id sub_241BC8170(uint64_t a1)
{
  uint64_t v40 = a1;
  uint64_t v1 = sub_241CDB4F0();
  uint64_t v41 = *(void *)(v1 - 8);
  uint64_t v42 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BCB91C();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v44 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BCBA64();
  uint64_t v52 = v6;
  uint64_t v49 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v45 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BCBB00();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v8);
  id v50 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_241CDB4E0();
  uint64_t v10 = *(void *)(v51 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v51);
  os_log_t v39 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v43 = (char *)&v37 - v13;
  id v14 = objc_msgSend(self, sel__predicateForObjectsFromAppleWatches);
  sub_241A313AC(0, (unint64_t *)&qword_26B038E58);
  id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_activityCacheType);
  if (result)
  {
    uint64_t v16 = result;
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, result, v14);

    sub_241A33460();
    id v38 = v14;
    uint64_t v18 = swift_allocObject();
    long long v55 = xmmword_241CEB710;
    *(_OWORD *)(v18 + 16) = xmmword_241CEB710;
    *(void *)(v18 + 32) = v17;
    uint64_t v56 = v18;
    sub_241CDB2E0();
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v55;
    sub_241A313AC(0, (unint64_t *)&qword_26B038848);
    swift_getKeyPath();
    id v20 = v17;
    *(void *)(v19 + 32) = sub_241CDB790();
    uint64_t v56 = v19;
    sub_241CDB2E0();
    uint64_t v21 = v43;
    sub_241CDB500();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = v55;
    *(void *)(v22 + 32) = v20;
    uint64_t v56 = v22;
    sub_241CDB2E0();
    *(void *)&long long v55 = v20;
    sub_241CDB520();
    swift_bridgeObjectRelease();
    sub_241BCBF34(&qword_26B034D38, MEMORY[0x263F44AB8]);
    uint64_t v23 = v42;
    uint64_t v24 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v3, v23);
    uint64_t v56 = v24;
    uint64_t v25 = v39;
    uint64_t v26 = v21;
    uint64_t v27 = v51;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v21, v51);
    unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v29 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v29 + v28, v25, v27);
    sub_241CDA4F0();
    sub_241BCB9EC(0, (unint64_t *)&qword_26B0327C0);
    sub_241BCB5D8(0, (unint64_t *)&unk_26B034CB0, &qword_26B0304D8, 0x263F0A6B8, MEMORY[0x263F8D488]);
    sub_241A725E0();
    sub_241BCBF34(&qword_26B034D30, MEMORY[0x263F44AA8]);
    id v30 = v44;
    sub_241CDA7C0();
    swift_release();
    swift_release();
    *(void *)(swift_allocObject() + 16) = v46;
    sub_241BCBF34(&qword_26B0325A8, (void (*)(uint64_t))sub_241BCB91C);
    uint64_t v31 = v45;
    uint64_t v32 = v48;
    sub_241CDA710();
    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v32);
    sub_241BCBF34(&qword_26B032430, (void (*)(uint64_t))sub_241BCBA64);
    unint64_t v33 = v50;
    uint64_t v34 = v52;
    sub_241CDA800();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v34);
    sub_241BCBF34(&qword_26B032338, (void (*)(uint64_t))sub_241BCBB00);
    uint64_t v35 = v54;
    uint64_t v36 = sub_241CDA6D0();

    (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v35);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v26, v27);
    return (id)v36;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241BC8994(unint64_t a1, int a2, void *a3, uint64_t a4, int a5, void *a6)
{
  id v42 = a6;
  int v39 = a5;
  int v40 = a2;
  sub_241BCAD5C();
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v43 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v38);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CD7740();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v38 - v18;
  sub_241A35B54(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v38 - v21;
  sub_241BC8EB8(a3, (uint64_t)&v38 - v21);
  sub_241BCAE6C(0, &qword_26B034F48, MEMORY[0x263F8E0F8]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_241CEB720;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v41 = a4;
  v24(v19, a4, v13);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_241CDBF50();
    uint64_t v25 = result;
    if (!result) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v25)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      char v28 = v39 & 1;
      sub_241BCAEDC((uint64_t)v22, (uint64_t)&v12[*(int *)(v38 + 28)]);
      *(void *)uint64_t v12 = v25;
      v12[8] = v28;
      v12[9] = v40 & 1;
      uint64_t v29 = type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator(0);
      swift_allocObject();
      id v30 = sub_241BFA2BC((uint64_t)v19, (uint64_t)v12);
      *(void *)(v23 + 56) = v29;
      *(void *)(v23 + 64) = sub_241BCBF34(&qword_26B02EAD8, (void (*)(uint64_t))type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator);
      *(void *)(v23 + 32) = v30;
      v24(v17, v41, v13);
      uint64_t v31 = type metadata accessor for ActivityChartSharableModelGenerator();
      uint64_t v32 = (uint64_t *)swift_allocObject();
      id v33 = v42;
      uint64_t v34 = sub_241BCAF70((uint64_t)v17, (uint64_t)v33, v32);

      *(void *)(v23 + 96) = v31;
      *(void *)(v23 + 104) = sub_241BCBF34(&qword_26B033C58, (void (*)(uint64_t))type metadata accessor for ActivityChartSharableModelGenerator);
      *(void *)(v23 + 72) = v34;
      uint64_t v46 = v23;
      sub_241BCAE6C(0, &qword_26B034C30, MEMORY[0x263F8D488]);
      sub_241BCADF8();
      uint64_t v35 = v43;
      sub_241CDB250();
      swift_bridgeObjectRelease();
      sub_241BCBF34(&qword_26B038948, (void (*)(uint64_t))sub_241BCAD5C);
      uint64_t v36 = v45;
      uint64_t v37 = sub_241CDA6D0();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v36);
      sub_241BCBD84((uint64_t)v22, &qword_26B0385B8, MEMORY[0x263F07490]);
      return v37;
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v27 = (id)MEMORY[0x245637160](0, a1);
    goto LABEL_6;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v27 = *(id *)(a1 + 32);
LABEL_6:
    uint64_t v25 = (uint64_t)v27;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_241BC8EB8(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_241A35B54(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17 - v5;
  id v7 = objc_msgSend(self, sel_sharedBehavior);
  if (!v7)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v7, sel_features);

  if (!v9)
  {
LABEL_12:
    __break(1u);
    return;
  }
  unsigned int v10 = objc_msgSend(v9, sel_pauseRings);

  if (v10)
  {
    id v11 = objc_msgSend(a1, sel_resumeDate);
    if (v11)
    {
      uint64_t v12 = v11;
      sub_241CD6CB0();

      uint64_t v13 = sub_241CD6D00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 0, 1, v13);
    }
    else
    {
      uint64_t v16 = sub_241CD6D00();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
    }
    sub_241B3BE44((uint64_t)v6, a2);
  }
  else
  {
    uint64_t v14 = sub_241CD6D00();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    v15(a2, 1, 1, v14);
  }
}

void sub_241BC90D8(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_endDate);
  sub_241CD6CB0();
}

uint64_t sub_241BC9138@<X0>(unint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  sub_241CDA140();
  swift_bridgeObjectRetain_n();
  id v9 = sub_241CDA190();
  os_log_type_t v10 = sub_241CDB670();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v28 = v25;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v12 = sub_241CDC270();
    uint64_t v14 = sub_241A33FE4(v12, v13, &v28);
    uint64_t v26 = v4;
    uint64_t v27 = v14;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    v24[1] = v11 + 14;
    uint64_t v15 = sub_241A313AC(0, &qword_26B0304D8);
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = MEMORY[0x245636610](v16, v15);
    uint64_t v18 = a2;
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_241A33FE4(v17, v20, &v28);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    a2 = v18;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v9, v10, "[%s] Found activity cache from a watch source: %s", (uint8_t *)v11, 0x16u);
    uint64_t v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v21, -1, -1);
    MEMORY[0x245637F20](v11, -1, -1);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v26);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_241CDBF50();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *a2 = v23 != 0;
  return result;
}

uint64_t sub_241BC9420()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_context;
  uint64_t v4 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241BC9534()
{
  return type metadata accessor for ActivitySummaryModelGeneratorPipeline();
}

uint64_t type metadata accessor for ActivitySummaryModelGeneratorPipeline()
{
  uint64_t result = qword_26B02F400;
  if (!qword_26B02F400) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241BC9588()
{
  return swift_retain();
}

uint64_t sub_241BC959C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_241BC9614()
{
  if (!qword_26B032500)
  {
    sub_241BC96EC();
    sub_241BCAC68(255, &qword_26B032680, MEMORY[0x263EFDCF0]);
    sub_241BCBF34(&qword_26B032588, (void (*)(uint64_t))sub_241BC96EC);
    sub_241BC9890();
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032500);
    }
  }
}

void sub_241BC96EC()
{
  if (!qword_26B032590)
  {
    sub_241BC97D8();
    sub_241BC9904();
    sub_241BCBF34(&qword_26B0322F8, (void (*)(uint64_t))sub_241BC97D8);
    sub_241BCBF34(&qword_26B032728, (void (*)(uint64_t))sub_241BC9904);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032590);
    }
  }
}

void sub_241BC97D8()
{
  if (!qword_26B032300)
  {
    sub_241BCAC68(255, &qword_26B032680, MEMORY[0x263EFDCF0]);
    sub_241A35FBC(255, (unint64_t *)&qword_26B038870);
    sub_241BC9890();
    unint64_t v0 = sub_241CDA3B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032300);
    }
  }
}

unint64_t sub_241BC9890()
{
  unint64_t result = qword_26B02E9F8;
  if (!qword_26B02E9F8)
  {
    sub_241BCAC68(255, &qword_26B032680, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B02E9F8);
  }
  return result;
}

void sub_241BC9904()
{
  if (!qword_26B032730)
  {
    sub_241BC9984();
    sub_241A35FBC(255, (unint64_t *)&qword_26B038870);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032730);
    }
  }
}

void sub_241BC9984()
{
  if (!qword_26B034CA0)
  {
    sub_241BCB5D8(255, &qword_26B034C98, &qword_26B034D98, 0x263F0A090, MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B034CA0);
    }
  }
}

void sub_241BC9A18()
{
  if (!qword_26B032280)
  {
    sub_241BC9AE4();
    sub_241BCB9EC(255, &qword_26B032750);
    sub_241BCBF34(&qword_26B02EA28, (void (*)(uint64_t))sub_241BC9AE4);
    sub_241BC9B90();
    unint64_t v0 = sub_241CDA340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032280);
    }
  }
}

void sub_241BC9AE4()
{
  if (!qword_26B032738)
  {
    sub_241BCB5D8(255, &qword_26B034C98, &qword_26B034D98, 0x263F0A090, MEMORY[0x263F8D488]);
    sub_241A35FBC(255, (unint64_t *)&qword_26B038870);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032738);
    }
  }
}

unint64_t sub_241BC9B90()
{
  unint64_t result = qword_26B02EA40;
  if (!qword_26B02EA40)
  {
    sub_241BCB9EC(255, &qword_26B032750);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B02EA40);
  }
  return result;
}

void sub_241BC9BF8()
{
  if (!qword_26B032520)
  {
    sub_241BC9A18();
    sub_241BCBF34(&qword_26B032278, (void (*)(uint64_t))sub_241BC9A18);
    unint64_t v0 = sub_241CDA460();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032520);
    }
  }
}

uint64_t sub_241BC9C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[1] = a3;
  uint64_t v5 = sub_241CD6D00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BCB440();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(self, sel_activitySummaryType);
  sub_241CD6CF0();
  uint64_t v15 = sub_241BC60B0(v14, MEMORY[0x263F8EE78], (uint64_t)v8, 1);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v22[5] = v15;
  sub_241CD7730();
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_241BCB53C(0, &qword_26B032788, MEMORY[0x263EFDCF0]);
  sub_241BCB640((unint64_t *)&qword_26B038978, &qword_26B032788, v16);
  uint64_t v17 = sub_241CDA680();
  sub_241A31190((uint64_t)v22);
  swift_release();
  v22[0] = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = a4;
  sub_241A35B54(0, &qword_26B034C38, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
  sub_241CDA710();
  swift_release();
  swift_release();
  sub_241BCBF34(&qword_26B038928, (void (*)(uint64_t))sub_241BCB440);
  uint64_t v19 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v19;
}

uint64_t sub_241BC9FC8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_241BCB8BC;
  *(void *)(v14 + 24) = v13;
  swift_retain();
  sub_241BC6484(a4, a5, a6, a7, (uint64_t)sub_241B3F788, v14);

  return swift_release();
}

uint64_t sub_241BCA0A8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241BC6930(*a1, a2);
}

void sub_241BCA0B0(uint64_t a1, char a2)
{
  int v2 = a2 & 1;
  sub_241BCBBEC();
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v51 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BCBC98();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_241CDB4F0();
  uint64_t v55 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v52 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_241CDB540();
  uint64_t v62 = *(void *)(v60 - 8);
  uint64_t v8 = *(void *)(v62 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v60);
  uint64_t v49 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v63 = (char *)&v48 - v10;
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35B54(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (void (*)(char *, uint64_t))((char *)&v48 - v14);
  sub_241A35B54(0, &qword_26B038F10, MEMORY[0x263F062D0], v12);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v19 = sub_241CD6810();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD76C0();
  LODWORD(v61) = sub_241CD7CA0();
  id v23 = objc_msgSend(self, sel_activitySummaryType);
  uint64_t v24 = sub_241CD9970();
  (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v15, 1, 1, v24);
  LODWORD(v50) = v2;
  sub_241A31D18(v23, v2, v15, (uint64_t)v18);

  sub_241BCBD84((uint64_t)v15, (unint64_t *)&qword_26B0321F0, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_241BCBD84((uint64_t)v18, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v25 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    sub_241CD9D20();
    uint64_t v25 = (void *)sub_241CD9D10();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  sub_241CD76B0();
  sub_241A311E0(v64, v65);
  uint64_t v26 = (void *)sub_241CD75B0();
  sub_241A31190((uint64_t)v64);
  sub_241CD76B0();
  sub_241A311E0(v64, v65);
  uint64_t v27 = (void *)sub_241CD75B0();
  uint64_t v28 = v63;
  sub_241CDB580();

  sub_241A31190((uint64_t)v64);
  uint64_t v29 = v62;
  if ((v61 & 1) == 0)
  {
    sub_241BCBF34(&qword_26B034D48, MEMORY[0x263F44AF8]);
    uint64_t v36 = v60;
    sub_241CDA6D0();

    goto LABEL_8;
  }
  id v61 = v25;
  sub_241A313AC(0, (unint64_t *)&qword_26B038E58);
  id v30 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_activityCacheType);
  if (v30)
  {
    uint64_t v31 = v30;
    id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v30, 0);

    sub_241A33460();
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_241CEB710;
    *(void *)(v33 + 32) = v32;
    v64[0] = v33;
    sub_241CDB2E0();
    v64[0] = 0xD000000000000026;
    v64[1] = 0x8000000241CE3290;
    id v50 = v32;
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v34 = v52;
    sub_241CDB520();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = v49;
    uint64_t v36 = v60;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v49, v28, v60);
    unint64_t v37 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v38 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v38 + v37, v35, v36);
    sub_241BCBF34(&qword_26B034D38, MEMORY[0x263F44AB8]);
    int v39 = v26;
    int v40 = v51;
    uint64_t v41 = v57;
    sub_241CDA710();
    swift_release();
    uint64_t v42 = sub_241BCBF34(&qword_26B032490, (void (*)(uint64_t))sub_241BCBBEC);
    uint64_t v43 = sub_241BCBF34(&qword_26B034D48, MEMORY[0x263F44AF8]);
    uint64_t v44 = v56;
    uint64_t v45 = v54;
    MEMORY[0x245635A00](v54, v42, v43);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v45);
    sub_241BCBF34(&qword_26B032318, (void (*)(uint64_t))sub_241BCBC98);
    uint64_t v46 = v59;
    sub_241CDA6D0();

    uint64_t v47 = v44;
    uint64_t v28 = v63;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v46);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v34, v41);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v36);
    return;
  }

  __break(1u);
}

uint64_t sub_241BCAA1C()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v6 + v0;
  unint64_t v8 = v6 + 16;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v8, v5);
}

uint64_t sub_241BCAB04(unint64_t a1, int a2)
{
  uint64_t v5 = *(void *)(sub_241CD7740() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  unint64_t v8 = *(void **)(v2 + 16);
  int v9 = *(unsigned __int8 *)(v2 + v7);
  uint64_t v10 = *(void **)((v7 & 0xFFFFFFFFFFFFFFF8) + v2 + 8);

  return sub_241BC8994(a1, a2, v8, v2 + v6, v9, v10);
}

uint64_t sub_241BCABB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_241BCABF4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241BCAC34@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_241BC6C34(*a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
  *a2 = result;
  return result;
}

void sub_241BCAC68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241A35FBC(255, &qword_26B032058);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_241BCACE8()
{
  unint64_t result = qword_268D43358;
  if (!qword_268D43358)
  {
    sub_241BCAC68(255, &qword_268D43350, MEMORY[0x263EFDE08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43358);
  }
  return result;
}

void sub_241BCAD5C()
{
  if (!qword_26B0325B8)
  {
    sub_241BCAE6C(255, &qword_26B034C30, MEMORY[0x263F8D488]);
    sub_241BCADF8();
    unint64_t v0 = sub_241CDA4A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0325B8);
    }
  }
}

unint64_t sub_241BCADF8()
{
  unint64_t result = qword_26B038E48;
  if (!qword_26B038E48)
  {
    sub_241BCAE6C(255, &qword_26B034C30, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B038E48);
  }
  return result;
}

void sub_241BCAE6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241A35FBC(255, &qword_26B032058);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241BCAEDC(uint64_t a1, uint64_t a2)
{
  sub_241A35B54(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_241BCAF70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v42 = *a3;
  uint64_t v43 = a2;
  uint64_t v5 = sub_241CD7650();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  int v39 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD73B0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v32 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v33 = (uint64_t)&v31 - v11;
  uint64_t v12 = sub_241CD7690();
  uint64_t v37 = *(void *)(v12 - 8);
  uint64_t v38 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v34 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (char *)a3 + OBJC_IVAR____TtC9Summaries35ActivityChartSharableModelGenerator_generatorContext;
  uint64_t v15 = sub_241CD7740();
  uint64_t v35 = a1;
  uint64_t v36 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a1, v15);
  id v31 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = objc_msgSend(self, sel_activitySummaryType);
  uint64_t v44 = inited;
  sub_241CDB2E0();
  sub_241A35B54(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_241CEB730;
  uint64_t v20 = *(void (**)(unint64_t, void, uint64_t))(v8 + 104);
  v20(v19 + v18, *MEMORY[0x263F454D0], v7);
  uint64_t v21 = sub_241C5D74C(v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v44 = v21;
  uint64_t v22 = v32;
  v20((unint64_t)v32, *MEMORY[0x263F45500], v7);
  uint64_t v23 = v33;
  sub_241C5A0BC(v33, v22);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v23, v7);
  id v24 = v31;
  unint64_t v25 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v25);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v39, *MEMORY[0x263F45690], v41);
  uint64_t v26 = v34;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t)a3 + OBJC_IVAR____TtC9Summaries35ActivityChartSharableModelGenerator_domain;
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))((uint64_t)a3 + OBJC_IVAR____TtC9Summaries35ActivityChartSharableModelGenerator_domain, v26, v38);
  uint64_t v28 = v35;
  uint64_t v29 = sub_241BC9C8C(v35, v43, v27, v42);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v28, v36);
  a3[2] = v29;
  return a3;
}

void sub_241BCB440()
{
  if (!qword_26B0323F0)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_241BCB53C(255, &qword_26B032788, MEMORY[0x263EFDCF0]);
    sub_241A35B54(255, &qword_26B034C38, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    sub_241BCB640((unint64_t *)&qword_26B038978, &qword_26B032788, v0);
    unint64_t v1 = sub_241CDA3E0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B0323F0);
    }
  }
}

void sub_241BCB53C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_241BCB5D8(255, (unint64_t *)&qword_26B034DF0, &qword_26B030428, 0x263F46498, MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241BCB5D8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241A313AC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241BCB640(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BCB53C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BCB684()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241BCB694@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241AB752C(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_241BCB69C()
{
  uint64_t v1 = sub_241CD6D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241BCB784(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_241CD6D00() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = *(void **)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241BC9FC8(a1, a2, v2 + 16, v7, v8, v2 + v6, v9);
}

unint64_t sub_241BCB838()
{
  unint64_t result = qword_268D43360;
  if (!qword_268D43360)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B038E78);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D43360);
  }
  return result;
}

uint64_t sub_241BCB884()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241BCB8BC(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_241BCB8FC(uint64_t a1, uint64_t a2)
{
  return sub_241B3E808(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_241BCB904(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241BCB914()
{
  return swift_release();
}

void sub_241BCB91C()
{
  if (!qword_26B0325B0)
  {
    sub_241CDB4E0();
    sub_241BCB9EC(255, (unint64_t *)&qword_26B0327C0);
    sub_241BCBF34(&qword_26B034D30, MEMORY[0x263F44AA8]);
    sub_241A725E0();
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0325B0);
    }
  }
}

void sub_241BCB9EC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_241A35FBC(255, (unint64_t *)&qword_26B038870);
    unint64_t v3 = sub_241CDA510();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_241BCBA64()
{
  if (!qword_26B032438)
  {
    sub_241BCB91C();
    sub_241BCBF34(&qword_26B0325A8, (void (*)(uint64_t))sub_241BCB91C);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032438);
    }
  }
}

void sub_241BCBB00()
{
  if (!qword_26B032340)
  {
    sub_241BCBA64();
    sub_241BCBF34(&qword_26B032430, (void (*)(uint64_t))sub_241BCBA64);
    unint64_t v0 = sub_241CDA3D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032340);
    }
  }
}

char *sub_241BCBB94()
{
  return sel_endDate;
}

uint64_t sub_241BCBBA4()
{
  return sub_241BCBE0C(MEMORY[0x263F44AA8]);
}

uint64_t sub_241BCBBBC@<X0>(uint64_t a1@<X8>)
{
  return sub_241BCBEBC(MEMORY[0x263F44AA8], a1);
}

uint64_t sub_241BCBBD4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241BCBBE4@<X0>(unint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_241BC9138(a1, a2);
}

void sub_241BCBBEC()
{
  if (!qword_26B032498)
  {
    sub_241CDB4F0();
    sub_241CDB540();
    sub_241BCBF34(&qword_26B034D38, MEMORY[0x263F44AB8]);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032498);
    }
  }
}

void sub_241BCBC98()
{
  if (!qword_26B032320)
  {
    sub_241CDB540();
    sub_241BCBBEC();
    sub_241BCBF34(&qword_26B034D48, MEMORY[0x263F44AF8]);
    sub_241BCBF34(&qword_26B032490, (void (*)(uint64_t))sub_241BCBBEC);
    unint64_t v0 = sub_241CDA3C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032320);
    }
  }
}

uint64_t sub_241BCBD84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A35B54(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241BCBDF4()
{
  return sub_241BCBE0C(MEMORY[0x263F44AF8]);
}

uint64_t sub_241BCBE0C(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t sub_241BCBEA4@<X0>(uint64_t a1@<X8>)
{
  return sub_241BCBEBC(MEMORY[0x263F44AF8], a1);
}

uint64_t sub_241BCBEBC@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return v6(a2, v7, v4);
}

uint64_t sub_241BCBF34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BCBF94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v12[0] = a2;
  uint64_t v4 = sub_241CDB8B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CDB890();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_241CDAE10();
  MEMORY[0x270FA5388](v9 - 8);
  sub_241BCFB74(a1, a2, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v10 = *(int *)(type metadata accessor for AlertFeedItemStep() + 20);
  sub_241A313AC(0, &qword_26B0303B8);
  sub_241CDAE00();
  v12[1] = MEMORY[0x263F8EE78];
  sub_241BCC698(&qword_26B036898, MEMORY[0x263F8F0F8]);
  sub_241BCFD80(0, &qword_26B0367F0, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  sub_241AC6F3C();
  sub_241CDBC70();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F130], v4);
  uint64_t result = sub_241CDB8C0();
  *(void *)(v12[0] + v10) = result;
  return result;
}

uint64_t type metadata accessor for AlertFeedItemStep()
{
  uint64_t result = qword_26B037DE8;
  if (!qword_26B037DE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_241BCC284(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    uint64_t v3 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    uint64_t v8 = (void *)a2[2];
    *a1 = v5;
    a1[1] = v7;
    a1[2] = v8;
    uint64_t v56 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
    uint64_t v9 = v56[6];
    uint64_t v10 = (char *)v3 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *((unsigned char *)v3 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v12 = _s8WorkPlanVMa();
    uint64_t v13 = *(int *)(v12 + 20);
    uint64_t v54 = &v11[v13];
    uint64_t v55 = &v10[v13];
    uint64_t v14 = sub_241CD95E0();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_unknownObjectRetain();
    id v16 = v8;
    v15(v55, v54, v14);
    uint64_t v17 = v12;
    uint64_t v18 = *(int *)(v12 + 24);
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = sub_241CD78F0();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_241A727F4(0);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = *(int *)(v17 + 28);
    unint64_t v25 = &v10[v24];
    uint64_t v26 = &v11[v24];
    sub_241AC7534();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = *(int *)(v17 + 32);
    uint64_t v29 = &v10[v28];
    id v30 = &v11[v28];
    sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
    {
      sub_241B67D9C(0);
      memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
    }
    uint64_t v35 = v56[7];
    uint64_t v36 = *(void **)((char *)a2 + v35);
    *(void *)((char *)v3 + v35) = v36;
    uint64_t v37 = v56[8];
    uint64_t v38 = (char *)v3 + v37;
    int v39 = (char *)a2 + v37;
    long long v40 = *(_OWORD *)((char *)a2 + v37 + 24);
    *(_OWORD *)((char *)v3 + v37 + 24) = v40;
    uint64_t v41 = v40;
    uint64_t v42 = **(void (***)(char *, char *, uint64_t))(v40 - 8);
    id v43 = v36;
    v42(v38, v39, v41);
    *(_OWORD *)((char *)v3 + v56[9]) = *(_OWORD *)((char *)a2 + v56[9]);
    uint64_t v44 = v56[10];
    uint64_t v45 = *(void **)((char *)a2 + v44);
    *(void *)((char *)v3 + v44) = v45;
    uint64_t v46 = v56[11];
    uint64_t v47 = *(void **)((char *)a2 + v46);
    *(void *)((char *)v3 + v46) = v47;
    uint64_t v48 = *(int *)(a3 + 20);
    uint64_t v49 = *(void **)((char *)a2 + v48);
    *(void *)((char *)v3 + v48) = v49;
    swift_unknownObjectRetain();
    id v50 = v45;
    id v51 = v47;
    id v52 = v49;
  }
  return v3;
}

uint64_t sub_241BCC698(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241BCC6E0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241A313AC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241BCC748(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();

  int v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = a1 + v4[6];
  uint64_t v6 = (int *)_s8WorkPlanVMa();
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v5 + v6[6];
  uint64_t v10 = sub_241CD78F0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v5 + v6[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v5 + v6[8];
  sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }

  sub_241A31190(a1 + v4[8]);
  swift_unknownObjectRelease();

  uint64_t v18 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_241BCC9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  int v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  id v52 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = v52[6];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(a2 + v5);
  uint64_t v8 = (int *)_s8WorkPlanVMa();
  uint64_t v9 = v8[5];
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v7 + v9;
  uint64_t v12 = sub_241CD95E0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_unknownObjectRetain();
  id v14 = v4;
  v13(v10, v11, v12);
  uint64_t v15 = v8[6];
  uint64_t v16 = (void *)(v6 + v15);
  uint64_t v17 = (const void *)(v7 + v15);
  uint64_t v18 = sub_241CD78F0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_241A727F4(0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = v8[7];
  uint64_t v22 = v6 + v21;
  uint64_t v23 = v7 + v21;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = v8[8];
  uint64_t v26 = (void *)(v6 + v25);
  uint64_t v27 = (const void *)(v7 + v25);
  sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v28))
  {
    sub_241B67D9C(0);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v26, v27, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
  }
  uint64_t v32 = v52[7];
  uint64_t v33 = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = v33;
  uint64_t v34 = v52[8];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  long long v37 = *(_OWORD *)(a2 + v34 + 24);
  *(_OWORD *)(a1 + v34 + 24) = v37;
  uint64_t v38 = v37;
  int v39 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
  id v40 = v33;
  v39(v35, v36, v38);
  *(_OWORD *)(a1 + v52[9]) = *(_OWORD *)(a2 + v52[9]);
  uint64_t v41 = v52[10];
  uint64_t v42 = *(void **)(a2 + v41);
  *(void *)(a1 + v41) = v42;
  uint64_t v43 = v52[11];
  uint64_t v44 = *(void **)(a2 + v43);
  *(void *)(a1 + v43) = v44;
  uint64_t v45 = *(int *)(a3 + 20);
  uint64_t v46 = *(void **)(a2 + v45);
  *(void *)(a1 + v45) = v46;
  swift_unknownObjectRetain();
  id v47 = v42;
  id v48 = v44;
  id v49 = v46;
  return a1;
}

void *sub_241BCCD74(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v5;
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  uint64_t v62 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v9 = v62[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v64 = a2;
  uint64_t v11 = (char *)a2 + v9;
  *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  uint64_t v12 = _s8WorkPlanVMa();
  uint64_t v13 = *(int *)(v12 + 20);
  id v14 = &v10[v13];
  uint64_t v15 = &v11[v13];
  uint64_t v16 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v61 = v12;
  uint64_t v17 = *(int *)(v12 + 24);
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  uint64_t v20 = sub_241CD78F0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    sub_241A727F4(0);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  uint64_t v26 = *(int *)(v61 + 28);
  uint64_t v27 = &v10[v26];
  uint64_t v28 = &v11[v26];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  uint64_t v30 = *(int *)(v61 + 32);
  uint64_t v31 = &v10[v30];
  uint64_t v32 = &v11[v30];
  sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v34 = v33;
  uint64_t v35 = *(void *)(v33 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v31, 1, v33);
  int v38 = v36(v32, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v31, v32, v34);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v34);
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    sub_241B67D9C(0);
    memcpy(v31, v32, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v31, v32, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
LABEL_13:
  uint64_t v40 = v62[7];
  uint64_t v41 = *(void **)((char *)v64 + v40);
  uint64_t v42 = *(void **)((char *)a1 + v40);
  *(void *)((char *)a1 + v40) = v41;
  id v43 = v41;

  sub_241AC8320((void *)((char *)a1 + v62[8]), (void *)((char *)v64 + v62[8]));
  uint64_t v44 = v62[9];
  uint64_t v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (void *)((char *)v64 + v44);
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v45[1] = v47;
  uint64_t v48 = v62[10];
  id v49 = *(void **)((char *)v64 + v48);
  id v50 = *(void **)((char *)a1 + v48);
  *(void *)((char *)a1 + v48) = v49;
  id v51 = v49;

  uint64_t v52 = v62[11];
  uint64_t v53 = *(void **)((char *)v64 + v52);
  uint64_t v54 = *(void **)((char *)a1 + v52);
  *(void *)((char *)a1 + v52) = v53;
  id v55 = v53;

  uint64_t v56 = *(int *)(a3 + 20);
  uint64_t v57 = *(void **)((char *)v64 + v56);
  uint64_t v58 = *(void **)((char *)a1 + v56);
  *(void *)((char *)a1 + v56) = v57;
  id v59 = v57;

  return a1;
}

uint64_t sub_241BCD1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)_s8WorkPlanVMa();
  uint64_t v10 = v9[5];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = (void *)(v7 + v14);
  uint64_t v16 = (const void *)(v8 + v14);
  uint64_t v17 = sub_241CD78F0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_241A727F4(0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = v9[7];
  uint64_t v21 = v7 + v20;
  uint64_t v22 = v8 + v20;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = v9[8];
  uint64_t v25 = (void *)(v7 + v24);
  uint64_t v26 = (const void *)(v8 + v24);
  sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_241B67D9C(0);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
  uint64_t v31 = v5[8];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  long long v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  *(void *)(a1 + v5[10]) = *(void *)(a2 + v5[10]);
  *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_241BCD540(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v6 = a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[1] = v5;
  a1[2] = v6;

  uint64_t v57 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v8 = v57[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v56 = a2;
  uint64_t v10 = (char *)a2 + v8;
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  uint64_t v11 = (int *)_s8WorkPlanVMa();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v9[v12];
  uint64_t v14 = &v10[v12];
  uint64_t v15 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  uint64_t v19 = sub_241CD78F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    sub_241A727F4(0);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_7:
  uint64_t v25 = v11[7];
  uint64_t v26 = &v9[v25];
  uint64_t v27 = &v10[v25];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  uint64_t v29 = v11[8];
  uint64_t v30 = &v9[v29];
  uint64_t v31 = &v10[v29];
  sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v33 = v32;
  uint64_t v34 = *(void *)(v32 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v30, 1, v32);
  int v37 = v35(v31, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v30, v31, v33);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v33);
    goto LABEL_12;
  }
  if (v37)
  {
LABEL_12:
    sub_241B67D9C(0);
    memcpy(v30, v31, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v30, v31, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
LABEL_13:
  uint64_t v39 = v57[7];
  uint64_t v40 = *(void **)((char *)a1 + v39);
  *(void *)((char *)a1 + v39) = *(void *)((char *)v56 + v39);

  uint64_t v41 = v57[8];
  uint64_t v42 = (char *)a1 + v41;
  id v43 = (char *)v56 + v41;
  sub_241A31190((uint64_t)a1 + v41);
  long long v44 = *((_OWORD *)v43 + 1);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v44;
  *((void *)v42 + 4) = *((void *)v43 + 4);
  uint64_t v45 = v57[9];
  uint64_t v46 = (void *)((char *)a1 + v45);
  uint64_t v47 = (void *)((char *)v56 + v45);
  uint64_t v48 = v47[1];
  void *v46 = *v47;
  swift_unknownObjectRelease();
  v46[1] = v48;
  uint64_t v49 = v57[10];
  id v50 = *(void **)((char *)a1 + v49);
  *(void *)((char *)a1 + v49) = *(void *)((char *)v56 + v49);

  uint64_t v51 = v57[11];
  uint64_t v52 = *(void **)((char *)a1 + v51);
  *(void *)((char *)a1 + v51) = *(void *)((char *)v56 + v51);

  uint64_t v53 = *(int *)(a3 + 20);
  uint64_t v54 = *(void **)((char *)a1 + v53);
  *(void *)((char *)a1 + v53) = *(void *)((char *)v56 + v53);

  return a1;
}

uint64_t sub_241BCD9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241BCD9C0);
}

uint64_t sub_241BCD9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_241BCDA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241BCDA94);
}

uint64_t sub_241BCDA94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_241BCDB50()
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241BCDBE8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v150 = a2;
  uint64_t v151 = a3;
  uint64_t v152 = a1;
  sub_241AABAD0();
  uint64_t v125 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v126 = (uint64_t)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = type metadata accessor for AlertFeedItemStep() - 8;
  MEMORY[0x270FA5388](v149);
  uint64_t v130 = (uint64_t)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v128 = *(void *)(v8 - 8);
  uint64_t v129 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v131 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v135 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v136 = v11;
  uint64_t v137 = (uint64_t)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = (void *)sub_241CD75A0();
  uint64_t v134 = *(v145 - 1);
  MEMORY[0x270FA5388](v145);
  uint64_t v127 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29620(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v132 = (uint64_t)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v146 = ((char *)&v125 - v16);
  sub_241BCFD80(0, &qword_26B037DC0, (uint64_t (*)(uint64_t))sub_241A727F4, MEMORY[0x263EFDDF8]);
  uint64_t v144 = v17;
  uint64_t v148 = *(void (***)(void, void))(v17 - 8);
  MEMORY[0x270FA5388](v17);
  BOOL v142 = (char *)&v125 - v18;
  sub_241BCF824(0, &qword_26B0380D8, (uint64_t (*)(uint64_t))sub_241A727F4, MEMORY[0x263EFDEA0]);
  id v143 = v19;
  uint64_t v147 = *((void *)v19 - 1);
  MEMORY[0x270FA5388](v19);
  id v141 = (uint64_t *)((char *)&v125 - v20);
  sub_241A727F4(0);
  uint64_t v140 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v138 = (uint64_t)&v125 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v125 - v24;
  uint64_t v26 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v125 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v30 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v31 = v30[7];
  uint64_t v32 = *(void **)(v4 + v31);
  *(void *)(inited + 32) = v32;
  *(void *)&long long v166 = inited;
  sub_241CDB2E0();
  unint64_t v33 = v166;
  swift_storeEnumTagMultiPayload();
  id v34 = v32;
  uint64_t v139 = sub_241B7417C(v33, (uint64_t)v28, 1);
  uint64_t v158 = v35;
  swift_bridgeObjectRelease();
  sub_241BCFD04((uint64_t)v28, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  int v36 = *(void **)(v4 + 16);
  int v37 = *(void **)(v4 + v31);
  swift_getObjectType();
  id v157 = v36;
  id v156 = v37;
  id v155 = (id)sub_241CD7230();
  uint64_t v38 = (void *)sub_241CD7230();
  id v39 = objc_allocWithZone(MEMORY[0x263F0A7F8]);
  id v154 = objc_msgSend(v39, sel_initWithHealthStore_, v38, v125);

  uint64_t v40 = *(void **)(v4 + v30[11]);
  uint64_t v41 = v30[9];
  uint64_t v42 = v4 + v30[6];
  uint64_t v43 = v42 + *(int *)(_s8WorkPlanVMa() + 24);
  long long v153 = *(_OWORD *)(v4 + v41);
  sub_241BCF928(v43, (uint64_t)v25, (uint64_t (*)(void))sub_241A727F4);
  long long v44 = *(void **)(v4 + *(int *)(v149 + 28));
  sub_241BCF928((uint64_t)v25, v138, (uint64_t (*)(void))sub_241A727F4);
  id v45 = v40;
  uint64_t v149 = v153;
  swift_unknownObjectRetain();
  id v46 = v44;
  uint64_t v47 = v142;
  sub_241CDA5D0();
  sub_241A3DA64();
  uint64_t v48 = v141;
  uint64_t v49 = v144;
  sub_241CDA590();
  ((void (**)(char *, uint64_t))v148)[1](v47, v49);
  sub_241BCF8A0();
  id v50 = v143;
  uint64_t v51 = v48;
  uint64_t v52 = sub_241CDA6D0();
  BOOL v142 = v25;
  sub_241BCFD04((uint64_t)v25, (uint64_t (*)(void))sub_241A727F4);
  (*(void (**)(void *, int *))(v147 + 8))(v51, v50);
  id v54 = v156;
  id v53 = v157;
  *(void *)&long long v166 = v157;
  *((void *)&v166 + 1) = v156;
  *(void *)&long long v167 = v155;
  *((void *)&v167 + 1) = v154;
  *(_OWORD *)&v168[8] = v153;
  uint64_t v147 = v52;
  uint64_t v148 = (void (**)(void, void))v45;
  *(void *)uint64_t v168 = v45;
  *(void *)&v168[24] = v139;
  *(void *)&long long v169 = v158;
  *((void *)&v169 + 1) = v52;
  id v170 = v46;
  id v143 = v30;
  uint64_t v55 = v4 + v30[8];
  sub_241A37260(v55, (uint64_t)v163);
  uint64_t v56 = v53;
  uint64_t v57 = (void *)sub_241CDB4D0();
  uint64_t v144 = sub_241CA1EFC(v54);
  *(void *)&long long v153 = v58;

  id v59 = objc_msgSend(v56, sel_profileIdentifier);
  id v60 = objc_msgSend(v59, sel_type);

  if (v60 == (id)1)
  {
    id v133 = v46;
    uint64_t v61 = v152;
    uint64_t v62 = sub_241CD78F0();
    uint64_t v63 = (uint64_t)v142;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v142, 1, 1, v62);
    uint64_t v64 = v146;
    sub_241BA66D8(v63, 0, (uint64_t)v146);
    sub_241BCFD04(v63, (uint64_t (*)(void))sub_241A727F4);
    uint64_t v65 = v132;
    sub_241BCF928((uint64_t)v64, v132, (uint64_t (*)(void))sub_241A29620);
    if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v134 + 48))(v65, 1, v145) == 1)
    {
      sub_241BCFD04(v65, (uint64_t (*)(void))sub_241A29620);
      sub_241A311E0(v163, v164);
      sub_241A31064(0, (unint64_t *)&qword_26B038860);
      uint64_t v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = xmmword_241CEB730;
      uint64_t v67 = v153;
      *(void *)(v66 + 32) = v144;
      *(void *)(v66 + 40) = v67;
      uint64_t v68 = v137;
      sub_241BCF928(v61, v137, type metadata accessor for SummariesFullProfileExecutor.StepResult);
      unint64_t v69 = (*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
      uint64_t v70 = swift_allocObject();
      uint64_t v71 = v151;
      *(void *)(v70 + 16) = v150;
      *(void *)(v70 + 24) = v71;
      sub_241BCFB74(v68, v70 + v69, type metadata accessor for SummariesFullProfileExecutor.StepResult);
      swift_retain();
      sub_241CD7640();

      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v72 = (uint64_t)v146;
      unint64_t v73 = (uint64_t (*)(void))sub_241A29620;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v77 = v134;
      id v78 = v127;
      uint64_t v79 = v145;
      (*(void (**)(char *, uint64_t, void *))(v134 + 32))(v127, v65, v145);
      *(void *)&long long v153 = v165;
      sub_241A311E0(v163, v164);
      sub_241BCFD80(0, &qword_26B038858, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
      unint64_t v80 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      uint64_t v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = xmmword_241CEB730;
      (*(void (**)(unint64_t, char *, void *))(v77 + 16))(v81 + v80, v78, v79);
      uint64_t v82 = v61;
      uint64_t v83 = v137;
      sub_241BCF928(v82, v137, type metadata accessor for SummariesFullProfileExecutor.StepResult);
      unint64_t v84 = (*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
      uint64_t v85 = swift_allocObject();
      uint64_t v86 = v151;
      *(void *)(v85 + 16) = v150;
      *(void *)(v85 + 24) = v86;
      sub_241BCFB74(v83, v85 + v84, type metadata accessor for SummariesFullProfileExecutor.StepResult);
      swift_retain();
      sub_241CD7620();

      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, void *))(v77 + 8))(v78, v145);
      unint64_t v73 = (uint64_t (*)(void))sub_241A29620;
      uint64_t v72 = (uint64_t)v146;
    }
    goto LABEL_9;
  }
  uint64_t v74 = v46;
  uint64_t v75 = v152;
  if (*(void *)(v152 + 16) == 1 || (uint64_t v76 = *(void **)(v152 + 24)) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v87 = v126;
    sub_241BCF928(v75, v126, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
    v150(v87);

    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    unint64_t v73 = (uint64_t (*)(void))sub_241AABAD0;
    uint64_t v72 = v87;
LABEL_9:
    sub_241BCFD04(v72, v73);
    return sub_241A31190((uint64_t)v163);
  }
  uint64_t v145 = v76;
  unint64_t v88 = (unint64_t)sub_241A76680(v145);
  uint64_t v89 = v131;
  sub_241CDA0F0();
  uint64_t v90 = v130;
  sub_241BCF928(v4, v130, (uint64_t (*)(void))type metadata accessor for AlertFeedItemStep);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v91 = sub_241CDA190();
  int v92 = sub_241CDB670();
  uint64_t v146 = v91;
  BOOL v93 = os_log_type_enabled(v91, (os_log_type_t)v92);
  id v133 = v74;
  if (v93)
  {
    uint64_t v94 = swift_slowAlloc();
    id v141 = (void *)swift_slowAlloc();
    BOOL v142 = (char *)swift_slowAlloc();
    v160[0] = (uint64_t)v142;
    *(_DWORD *)uint64_t v94 = 136315907;
    *(void *)&v159[0] = sub_241A33FE4(0xD000000000000011, 0x8000000241CF19D0, v160);
    sub_241CDBBF0();
    *(_WORD *)(v94 + 12) = 2049;
    uint64_t v140 = v55;
    LODWORD(v139) = v92;
    if (v88 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v95 = sub_241CDBF50();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v95 = *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v96 = v144;
    swift_bridgeObjectRelease();
    *(void *)&v159[0] = v95;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v94 + 22) = 2081;
    unint64_t v97 = v153;
    swift_bridgeObjectRetain();
    *(void *)&v159[0] = sub_241A33FE4(v96, v97, v160);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v94 + 32) = 2114;
    uint64_t v98 = v130;
    uint64_t v99 = *(void **)(v130 + v143[7]);
    *(void *)&v159[0] = v99;
    id v100 = v99;
    sub_241CDBBF0();
    uint64_t v101 = v141;
    *id v141 = v99;
    uint64_t v102 = v98;
    uint64_t v103 = v96;
    sub_241BCFD04(v102, (uint64_t (*)(void))type metadata accessor for AlertFeedItemStep);
    uint64_t v104 = v146;
    _os_log_impl(&dword_241A23000, v146, (os_log_type_t)v139, "%s: Generating feed item for %{private}ld notification samples with identifier %{private}s for type: %{public}@", (uint8_t *)v94, 0x2Au);
    sub_241BCC6E0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v101, -1, -1);
    id v105 = v142;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v105, -1, -1);
    MEMORY[0x245637F20](v94, -1, -1);

    (*(void (**)(char *, uint64_t))(v128 + 8))(v131, v129);
    uint64_t v75 = v152;
    uint64_t v55 = v140;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_241BCFD04(v90, (uint64_t (*)(void))type metadata accessor for AlertFeedItemStep);

    (*(void (**)(char *, uint64_t))(v128 + 8))(v89, v129);
    uint64_t v103 = v144;
  }
  sub_241A37260(v55, (uint64_t)v160);
  uint64_t v146 = v161;
  uint64_t v152 = v162;
  uint64_t v144 = (uint64_t)sub_241A311E0(v160, (uint64_t)v161);
  uint64_t v106 = v153;
  uint64_t v107 = sub_241CD7810();
  BOOL v142 = v108;
  id v143 = (int *)v107;
  id v141 = v109;
  LODWORD(v140) = v110;
  sub_241A37260((uint64_t)v163, (uint64_t)v159);
  uint64_t v111 = v137;
  sub_241BCF928(v75, v137, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  unint64_t v112 = (*(unsigned __int8 *)(v135 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
  unint64_t v113 = (v136 + v112 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v114 = swift_allocObject();
  long long v115 = *(_OWORD *)&v168[16];
  *(_OWORD *)(v114 + 48) = *(_OWORD *)v168;
  *(_OWORD *)(v114 + 64) = v115;
  *(_OWORD *)(v114 + 80) = v169;
  id v116 = v170;
  long long v117 = v167;
  *(_OWORD *)(v114 + 16) = v166;
  *(_OWORD *)(v114 + 32) = v117;
  *(void *)(v114 + 96) = v116;
  *(void *)(v114 + 104) = v88;
  sub_241A5598C(v159, v114 + 112);
  uint64_t v118 = v151;
  *(void *)(v114 + 152) = v150;
  *(void *)(v114 + 160) = v118;
  sub_241BCFB74(v111, v114 + v112, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  uint64_t v119 = (uint64_t *)(v114 + v113);
  uint64_t *v119 = v103;
  v119[1] = v106;
  swift_retain();
  id v157 = v157;
  id v156 = v156;
  id v155 = v155;
  id v154 = v154;
  *(void *)&long long v153 = v148;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v120 = v133;
  id v122 = v142;
  id v121 = v143;
  uint64_t v123 = v141;
  sub_241CD7630();

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  sub_241BCFC9C(v121, v122, v123, v140);
  swift_release();

  sub_241A31190((uint64_t)v160);
  return sub_241A31190((uint64_t)v163);
}

uint64_t sub_241BCEEA8(uint64_t a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v39 = a9;
  unint64_t v40 = a4;
  uint64_t v15 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v36 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v36 + 64);
  MEMORY[0x270FA5388](v15 - 8);
  sub_241A29620(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v33 - v21;
  if (a2)
  {
    uint64_t v27 = sub_241CD75A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v22, 1, 1, v27);
  }
  else
  {
    uint64_t v34 = a8;
    uint64_t v35 = a3;
    uint64_t v23 = *(void *)(a1 + 16);
    uint64_t v24 = sub_241CD75A0();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = v25;
    if (v23)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v22, a1 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80)), v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v22, 0, 1, v24);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v22, 1, 1, v24);
    }
    a8 = v34;
  }
  sub_241BCF928((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(void))sub_241A29620);
  sub_241A37260(v37, (uint64_t)v42);
  sub_241BCF928(a8, (uint64_t)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
  unint64_t v28 = (*(unsigned __int8 *)(v36 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v29 = swift_allocObject();
  sub_241A5598C(v42, v29 + 16);
  *(void *)(v29 + 56) = v38;
  *(void *)(v29 + 64) = a7;
  sub_241BCFB74((uint64_t)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  uint64_t v30 = (void *)(v29 + ((v16 + v28 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v30 = v39;
  v30[1] = a10;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_241A6C570((uint64_t)v20, v40);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_241BCFF7C;
  *(void *)(v31 + 24) = v29;
  sub_241BD0064();
  sub_241BCC698(&qword_26B02E9F0, (void (*)(uint64_t))sub_241BD0064);
  swift_retain();
  sub_241CDA6A0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_241BCFD04((uint64_t)v20, (uint64_t (*)(void))sub_241A29620);
  return sub_241BCFD04((uint64_t)v22, (uint64_t (*)(void))sub_241A29620);
}

uint64_t sub_241BCF29C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v30 = a6;
  uint64_t v32 = a5;
  uint64_t v33 = a3;
  uint64_t v11 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v31 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29620(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_241CD75A0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BCF928(a1, (uint64_t)v16, (uint64_t (*)(void))sub_241A29620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_241BCFD04((uint64_t)v16, (uint64_t (*)(void))sub_241A29620);
    sub_241A311E0(a2, a2[3]);
    sub_241A31064(0, (unint64_t *)&qword_26B038860);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_241CEB730;
    *(void *)(v21 + 32) = v30;
    *(void *)(v21 + 40) = a7;
    sub_241BCF928(v32, (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
    unint64_t v22 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v33;
    *(void *)(v23 + 24) = a4;
    sub_241BCFB74((uint64_t)v13, v23 + v22, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_241CD7640();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    uint64_t v25 = a2[3];
    uint64_t v30 = a2[4];
    sub_241A311E0(a2, v25);
    sub_241BCFD80(0, &qword_26B038858, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
    unint64_t v26 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, char *, uint64_t))(v18 + 16))(v27 + v26, v20, v17);
    sub_241BCF928(v32, (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
    unint64_t v28 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v33;
    *(void *)(v29 + 24) = a4;
    sub_241BCFB74((uint64_t)v13, v29 + v28, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_retain();
    sub_241CD7620();
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

uint64_t sub_241BCF718(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  sub_241AABAD0();
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = (uint64_t *)((char *)&v13 - v9);
  if (a1)
  {
    *uint64_t v10 = a1;
    swift_storeEnumTagMultiPayload();
    id v11 = a1;
  }
  else
  {
    sub_241BCF928(a4, (uint64_t)&v13 - v9, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
  }
  a2(v10);
  return sub_241BCFD04((uint64_t)v10, (uint64_t (*)(void))sub_241AABAD0);
}

void sub_241BCF824(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_241A3DA64();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_241BCF8A0()
{
  unint64_t result = qword_26B0380D0;
  if (!qword_26B0380D0)
  {
    sub_241BCF824(255, &qword_26B0380D8, (uint64_t (*)(uint64_t))sub_241A727F4, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0380D0);
  }
  return result;
}

uint64_t sub_241BCF928(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241BCF990()
{
  uint64_t v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 168) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  sub_241A31190((uint64_t)(v0 + 14));
  swift_release();
  uint64_t v5 = (id *)((char *)v0 + v3);
  uint64_t v6 = *(id *)((char *)v0 + v3);
  if (v6 != (void *)1)
  {
  }
  id v7 = v5[2];
  if (v7 != (id)1)
  {
  }
  unint64_t v8 = (char *)v5 + *(int *)(v1 + 28);
  uint64_t v9 = sub_241CD6EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_241BCFB74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241BCFBDC(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  unint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_241BCEEA8(a1, v4, v2 + 16, *(void *)(v2 + 104), v2 + 112, *(void *)(v2 + 152), *(void *)(v2 + 160), v7, *v8, v8[1]);
}

void sub_241BCFC9C(void *a1, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRelease();
    a1 = a3;
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    if (a4 != 1) {
      return;
    }
    goto LABEL_6;
  }
LABEL_7:

  sub_241AAB0DC(a1);
}

uint64_t sub_241BCFD04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241BCFD68(uint64_t a1)
{
  return sub_241BD0240(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_241BCEEA4);
}

void sub_241BCFD80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241BCFDE8()
{
  uint64_t v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_241A31190(v0 + 16);
  swift_release();
  uint64_t v5 = v0 + v3;
  unint64_t v6 = *(void **)(v0 + v3);
  if (v6 != (void *)1)
  {
  }
  uint64_t v7 = *(void **)(v5 + 16);
  if (v7 != (void *)1)
  {
  }
  uint64_t v8 = v5 + *(int *)(v1 + 28);
  uint64_t v9 = sub_241CD6EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_241BCFF7C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1[7];
  uint64_t v6 = v1[8];
  uint64_t v7 = (uint64_t)v1 + v4;
  uint64_t v8 = (void *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  return sub_241BCF29C(a1, v1 + 2, v5, v6, v7, v9, v10);
}

uint64_t sub_241BD0024()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241BD005C(uint64_t a1)
{
  return sub_241A6EE8C(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_241BD0064()
{
  if (!qword_26B032648)
  {
    sub_241A29620(255);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032648);
    }
  }
}

uint64_t sub_241BD00D4()
{
  uint64_t v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void **)(v0 + v3);
  if (v6 != (void *)1)
  {
  }
  uint64_t v7 = *(void **)(v5 + 16);
  if (v7 != (void *)1)
  {
  }
  uint64_t v8 = v5 + *(int *)(v1 + 28);
  uint64_t v9 = sub_241CD6EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241BD0240(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6, v7);
}

uint64_t sub_241BD02C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  uint64_t v34 = a1;
  uint64_t v5 = sub_241CD9ED0();
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v30 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v27 = (uint64_t)&v27 - v10;
  uint64_t v11 = sub_241CD97E0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = sub_241CD9D00();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v27 - v17;
  uint64_t v19 = v2 + qword_26B041390;
  uint64_t v28 = sub_241CD9EA0();
  uint64_t v20 = *(void *)(v28 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, a2, v28);
  swift_retain();
  sub_241CD9E60();
  sub_241CD9E80();
  sub_241CD9E70();
  sub_241CD9E90();
  sub_241CD9CE0();
  swift_release();
  uint64_t v21 = v27;
  sub_241A7A618(v34, v27);
  unint64_t v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v22(v16, v18, v12);
  v22((char *)(v3 + qword_26B0411F0), v16, v12);
  uint64_t v23 = v30;
  sub_241A7A618(v21, v30);
  uint64_t v24 = v31;
  sub_241CD9EC0();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v16, v12);
  sub_241A3F384(v21);
  sub_241A7A6EC(v23, v3 + qword_26B041200);
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v3 + qword_26B0411F8, v24, v33);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v29, v28);
  sub_241A3F384(v34);
  v25(v18, v12);
  return v3;
}

unint64_t sub_241BD069C(void *a1, uint64_t a2)
{
  uint64_t v72 = a2;
  uint64_t v4 = (void *)sub_241CDA1A0();
  uint64_t v74 = (void (**)(char *, id))*(v4 - 1);
  id v75 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_241CD6D00();
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v70 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BD13B8(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v78 = (uint64_t)&v67 - v12;
  sub_241BD13B8(0, &qword_26B032050, MEMORY[0x263F45780]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v76 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v67 - v16;
  uint64_t v18 = sub_241CD9840();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = objc_msgSend(a1, sel_statistics);
  sub_241A313AC(0, (unint64_t *)&qword_26B038E68);
  unint64_t v23 = sub_241CDB2C0();

  if (!(v23 >> 62))
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v24) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    sub_241CDA0F0();
    uint64_t v57 = v77;
    swift_retain_n();
    uint64_t v58 = sub_241CDA190();
    os_log_type_t v59 = sub_241CDB660();
    if (os_log_type_enabled(v58, v59))
    {
      id v60 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      *(void *)&v79[0] = v78;
      *(_DWORD *)id v60 = 136315138;
      uint64_t v76 = (char *)(v60 + 4);
      id v61 = objc_msgSend(*(id *)(v57+ qword_26B041200+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)), sel_identifier);
      uint64_t v62 = sub_241CDB0D0();
      unint64_t v64 = v63;

      uint64_t v81 = sub_241A33FE4(v62, v64, (uint64_t *)v79);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v58, v59, "Unexpectedly received an empty statistics collection for %s when it had a sample within that date interval", v60, 0xCu);
      uint64_t v65 = v78;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v65, -1, -1);
      MEMORY[0x245637F20](v60, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    v74[1](v6, v75);
    sub_241AB90B4();
    swift_allocError();
    *uint64_t v66 = 1;
    swift_willThrow();
    return (unint64_t)v6;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_241CDBF50();
  swift_bridgeObjectRelease();
  if (!v24) {
    goto LABEL_15;
  }
LABEL_3:
  unint64_t result = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v73 = v2;
  uint64_t v68 = v11;
  if ((v23 & 0xC000000000000001) != 0)
  {
LABEL_21:
    unint64_t v26 = (char *)MEMORY[0x245637160](result, v23);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (result >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v26 = (char *)*(id *)(v23 + 8 * result + 32);
LABEL_8:
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void (**)(char *, void, uint64_t))(v19 + 104);
  v28(v21, *MEMORY[0x263F46B68], v18);
  uint64_t v29 = (void *)sub_241CDB4C0();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v19 + 8);
  v30(v21, v18);
  if (!v29)
  {
    sub_241CD7A80();
    uint64_t v47 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v17, 0, 1, v47);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v48 = sub_241CD9970();
    uint64_t v49 = v78;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v78, 1, 1, v48);
    id v50 = (void (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v51 = (uint64_t)v76;
    sub_241A3305C((uint64_t)v17, (uint64_t)v76, &qword_26B032050, MEMORY[0x263F45780]);
    uint64_t v6 = (char *)sub_241A53EB0(0, 0xF000000000000000, 11, v49, v51, 0, 0);
    sub_241A32B28((uint64_t)v17, &qword_26B032050, v50);

    return (unint64_t)v6;
  }
  v28(v21, *MEMORY[0x263F46B60], v18);
  id v31 = v29;
  uint64_t v32 = (void *)sub_241CDB4C0();
  v30(v21, v18);
  if (!v32)
  {

    sub_241CD7A80();
    uint64_t v52 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v17, 0, 1, v52);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v53 = sub_241CD9970();
    uint64_t v54 = v78;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v78, 1, 1, v53);
    uint64_t v55 = (void (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v56 = (uint64_t)v76;
    sub_241A3305C((uint64_t)v17, (uint64_t)v76, &qword_26B032050, MEMORY[0x263F45780]);
    uint64_t v6 = (char *)sub_241A53EB0(0, 0xF000000000000000, 11, v54, v56, 0, 0);
    sub_241A32B28((uint64_t)v17, &qword_26B032050, v55);

    return (unint64_t)v6;
  }
  uint64_t v76 = v27;
  sub_241A313AC(0, &qword_26B034E70);
  uint64_t v33 = (uint64_t)v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v70, v72, v71);
  uint64_t v74 = v32;
  id v75 = v31;
  id v34 = sub_241A4F5C4(v31, v74, v33);
  uint64_t v35 = v77 + qword_26B041390;
  uint64_t v36 = sub_241CD9EA0();
  uint64_t v37 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v68, v35, v36);
  uint64_t v38 = *MEMORY[0x263F46C68];
  uint64_t v39 = sub_241CD9970();
  uint64_t v40 = *(void *)(v39 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 104))(v37, v38, v39);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  unint64_t result = (unint64_t)objc_msgSend(v34, sel_data);
  if (result)
  {
    uint64_t v41 = (void *)result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v42 = sub_241CD6AE0();
    unint64_t v44 = v43;

    id v45 = (void (*)(uint64_t))MEMORY[0x263F46CA8];
    uint64_t v46 = v78;
    sub_241A3305C(v37, v78, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    uint64_t v80 = 0;
    memset(v79, 0, sizeof(v79));
    uint64_t v6 = (char *)sub_241A54648(v42, v44, 10, v46, 0, 0, (uint64_t)v79);
    sub_241A37374(v42, v44);

    sub_241A32B28(v37, (unint64_t *)&qword_26B0321F0, v45);
    return (unint64_t)v6;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_241BD112C()
{
  uint64_t v1 = v0 + qword_26B041390;
  uint64_t v2 = sub_241CD9EA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_241BD1198()
{
  sub_241A3F384(v0 + qword_26B041200);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_26B0411F0;
  uint64_t v4 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + qword_26B041390;
  uint64_t v6 = sub_241CD9EA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MostRecentRangeStatisticsCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B037F68;
  if (!qword_26B037F68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241BD1328()
{
  uint64_t result = sub_241CD9EA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_241BD13B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241BD140C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241BD1420);
}

uint64_t sub_241BD1420(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241BD14D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241BD14E4);
}

void *sub_241BD14E4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AudiogramSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031D08;
  if (!qword_26B031D08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241BD15D8()
{
  return sub_241BD1640(&qword_26B037D78, sub_241BD1620);
}

void sub_241BD1620(uint64_t a1)
{
}

uint64_t sub_241BD1640(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BD1688()
{
  return sub_241BD1640(&qword_26B0320B8, MEMORY[0x263F44058]);
}

uint64_t sub_241BD16D0()
{
  return sub_241BD17D4((unint64_t *)&qword_26B037D68);
}

void sub_241BD1704(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD90B0();
    uint64_t v7 = sub_241BD1640(&qword_26B037D98, MEMORY[0x263F446B8]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241BD17A0()
{
  return sub_241BD17D4((unint64_t *)&qword_26B037D60);
}

uint64_t sub_241BD17D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BD1704(255, &qword_26B037D70, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44698];
    sub_241BD1640(&qword_26B037D90, MEMORY[0x263F44698]);
    sub_241BD1640(&qword_26B037D88, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BD18B8()
{
  return sub_241BD1640(&qword_26B0385C8, MEMORY[0x263F44308]);
}

uint64_t sub_241BD1900()
{
  return sub_241BD1640(&qword_26B032140, MEMORY[0x263F44308]);
}

uint64_t sub_241BD1948(uint64_t a1)
{
  uint64_t result = sub_241BD1640(&qword_26B037E60, (void (*)(uint64_t))type metadata accessor for AudiogramSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241BD19A0()
{
  return sub_241BD1640(&qword_268D43368, sub_241BD19E8);
}

void sub_241BD19E8(uint64_t a1)
{
}

uint64_t sub_241BD1A08()
{
  return sub_241BD1640(&qword_26B037E10, sub_241BD1A50);
}

void sub_241BD1A50(uint64_t a1)
{
}

void sub_241BD1A70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241BD1620(255);
    uint64_t v15 = v6;
    uint64_t v7 = sub_241CD86F0();
    uint64_t v8 = sub_241BD1640(&qword_26B037D78, sub_241BD1620);
    uint64_t v9 = sub_241BD1640(&qword_26B0320B8, MEMORY[0x263F44058]);
    uint64_t v10 = sub_241BD17D4((unint64_t *)&qword_26B037D68);
    uint64_t v11 = sub_241BD17D4((unint64_t *)&qword_26B037D60);
    uint64_t v12 = (void (*)(uint64_t))MEMORY[0x263F44308];
    v16[0] = v15;
    v16[1] = v7;
    v16[2] = v8;
    v16[3] = v9;
    v16[4] = v10;
    v16[5] = v11;
    v16[6] = sub_241BD1640(&qword_26B0385C8, MEMORY[0x263F44308]);
    v16[7] = sub_241BD1640(&qword_26B032140, v12);
    unint64_t v13 = a3(a1, v16);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

void sub_241BD1C2C(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v104 = a2;
  id v105 = a3;
  uint64_t v7 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v99 = (char *)v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241BD4094(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v103 = (char *)v89 - v11;
  sub_241BD4094(0, &qword_26B038880, MEMORY[0x263F45770], v9);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v102 = (char *)v89 - v13;
  sub_241BD4094(0, &qword_26B0320B0, MEMORY[0x263F43F20], v9);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v101 = (char *)v89 - v15;
  uint64_t v16 = sub_241CDAE50();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_241CD6D00();
  uint64_t v97 = *(void *)(v17 - 8);
  uint64_t v98 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v96 = (char *)v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  id v100 = (char *)v89 - v20;
  uint64_t v21 = self;
  id v22 = (void *)*v5;
  id v23 = objc_msgSend(v21, sel_sharedInstanceForHealthStore_, *v5);
  if (!v23)
  {
    __break(1u);
    return;
  }
  uint64_t v24 = v23;
  uint64_t v25 = (char *)v5 + *(int *)(type metadata accessor for AudiogramSnidgetFeedItemModelProvider() + 20);
  id v26 = objc_msgSend(v24, sel_displayTypeForObjectType_, *((void *)v25 + 2));

  if (!v26)
  {
    sub_241A3A824();
    swift_allocError();
    swift_willThrow();
    return;
  }
  sub_241ADF758(a1);
  if (v4)
  {

    return;
  }
  uint64_t v28 = v27;
  if (!v27)
  {
LABEL_11:
    uint64_t v37 = sub_241CD7A10();
    uint64_t v38 = (uint64_t)v102;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v102, 1, 1, v37);
    uint64_t v39 = sub_241CD6810();
    uint64_t v40 = (uint64_t)v103;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v103, 1, 1, v39);
    uint64_t v41 = v104;
    swift_bridgeObjectRetain();
    uint64_t v42 = v99;
    sub_241B4A1A8(0, v38, v41, v40, v99);
    sub_241CD89A0();
    uint64_t v43 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v101, 1, 1, v43);
    id v44 = v26;
    uint64_t v45 = sub_241CD8990();
    sub_241A9395C(0);
    uint64_t v47 = v105;
    sub_241BD57E4((uint64_t)v42, (uint64_t)v105 + *(int *)(v46 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v47[1] = 0;
    _OWORD v47[2] = 0;
    *uint64_t v47 = v45;
    sub_241BD5080((uint64_t)v42, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  uint64_t v29 = (void *)sub_241BD2708();
  if (!v29)
  {

    goto LABEL_11;
  }
  id v93 = v29;
  id v94 = v26;
  id v91 = v28;
  id v30 = objc_msgSend(v29, sel_startDate);
  sub_241CD6CB0();

  id v31 = *(void **)&v25[*(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32)];
  type metadata accessor for SnidgetStringBuilder();
  uint64_t inited = (void *)swift_initStackObject();
  inited[2] = v22;
  uint64_t v33 = self;
  id v95 = v31;
  id v34 = v22;
  id v35 = objc_msgSend(v33, sel_sharedInstanceForHealthStore_, v34);
  inited[4] = v35;
  id v90 = v35;
  if (v31)
  {
    id v36 = v95;
  }
  else
  {
    id v48 = v35;
    id v36 = objc_msgSend(v48, sel_createHKUnitPreferenceController);
  }
  id v95 = v36;
  inited[3] = v36;
  uint64_t v106 = MEMORY[0x263F8EE78];
  id v92 = (id)sub_241BD1640(&qword_26B037DD0, MEMORY[0x263F462E0]);
  uint64_t v49 = (uint64_t (*)(uint64_t))MEMORY[0x263F462E0];
  sub_241BD4094(0, &qword_26B038030, MEMORY[0x263F462E0], MEMORY[0x263F8D488]);
  sub_241BD56D8(&qword_26B038038, &qword_26B038030, v49);
  id v50 = v34;
  id v51 = v93;
  uint64_t v52 = (uint64_t)inited;
  sub_241CDBC70();
  id v53 = objc_allocWithZone((Class)sub_241CDAEA0());
  id v93 = v50;
  uint64_t v54 = (void *)sub_241CDAE90();
  uint64_t v55 = v51;
  uint64_t v56 = v94;
  sub_241BD2D04(v51, v52, (uint64_t)v54, (uint64_t)v94);
  if (v57 == 1)
  {
    uint64_t v58 = sub_241CD7A10();
    uint64_t v59 = (uint64_t)v102;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v102, 1, 1, v58);
    uint64_t v60 = sub_241CD6810();
    uint64_t v61 = (uint64_t)v103;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v103, 1, 1, v60);
    uint64_t v62 = v104;
    swift_bridgeObjectRetain();
    unint64_t v63 = v99;
    sub_241B4A1A8(0, v59, v62, v61, v99);
    sub_241CD89A0();
    uint64_t v64 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v101, 1, 1, v64);
    id v65 = v56;
    uint64_t v66 = sub_241CD8990();
    sub_241A9395C(0);
    uint64_t v68 = v105;
    sub_241BD57E4((uint64_t)v63, (uint64_t)v105 + *(int *)(v67 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    swift_release();
    v68[1] = 0;
    v68[2] = 0;
    *uint64_t v68 = v66;
    sub_241BD5080((uint64_t)v63, type metadata accessor for SnidgetFeedItemMetadata);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v100, v98);
  }
  else
  {
    uint64_t v69 = v57;
    v89[1] = sub_241CD89A0();
    sub_241A3A9CC();
    uint64_t v71 = *(int *)(v70 + 48);
    id v92 = v51;
    uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
    uint64_t v73 = v101;
    v72(v101, v100, v98);
    v73[v71] = 0;
    uint64_t v74 = *MEMORY[0x263F43F18];
    uint64_t v75 = sub_241CD8610();
    uint64_t v99 = v54;
    uint64_t v76 = v75;
    uint64_t v77 = *(void *)(v75 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 104))(v73, v74, v75);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v73, 0, 1, v76);
    id v78 = v56;
    uint64_t v101 = (char *)sub_241CD8990();
    uint64_t v79 = v100;
    uint64_t v80 = v98;
    v72(v96, v100, v98);
    swift_retain();
    uint64_t v81 = (uint64_t)v102;
    sub_241CD79D0();
    uint64_t v82 = sub_241CD7A10();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 0, 1, v82);
    uint64_t v83 = sub_241CD6810();
    uint64_t v84 = (uint64_t)v103;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v103, 1, 1, v83);
    sub_241A9395C(0);
    uint64_t v87 = v104;
    uint64_t v86 = (char **)v105;
    unint64_t v88 = (char *)v105 + *(int *)(v85 + 52);
    swift_bridgeObjectRetain();
    sub_241B4A1A8(1, v81, v87, v84, v88);

    sub_241A93440(v69);
    *uint64_t v86 = v101;
    v86[1] = (char *)v69;
    v86[2] = 0;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v79, v80);
  }
}

uint64_t sub_241BD2708()
{
  unint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = (unint64_t *)sub_241CDA1A0();
  uint64_t v4 = *(v3 - 1);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD6D00();
  unint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v28 - v12;
  id v14 = objc_msgSend(v1, sel_sensitivityPoints);
  if (!v14) {
    return (uint64_t)v14;
  }
  uint64_t v34 = ObjectType;
  unint64_t v35 = 0;
  sub_241A313AC(0, &qword_26B030478);
  sub_241CDB2B0();

  unint64_t v15 = v35;
  if (!v35) {
    return 0;
  }
  if (!objc_msgSend(v1, sel_hasTimestampData))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v33 = v11;
  if (v15 >> 62) {
    goto LABEL_17;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v16)
  {
LABEL_18:
    swift_bridgeObjectRelease();
LABEL_19:
    objc_msgSend(v1, sel_timestampData);
    id v21 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    objc_msgSend(v1, sel_timestampData);
    id v22 = (id)HKDecodeDateForValue();
    id v23 = v33;
    sub_241CD6CB0();

    sub_241A313AC(0, &qword_26B030418);
    uint64_t v24 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    uint64_t v25 = (void *)sub_241CD6C60();
    id v26 = (void *)sub_241CD6C60();
    id v14 = objc_msgSend(self, sel_audiogramSampleWithSensitivityPoints_startDate_endDate_device_metadata_, v24, v25, v26, 0, 0);

    uint64_t v27 = *(void (**)(char *, uint64_t))(v8 + 8);
    v27(v23, v7);
    v27(v13, v7);
    return (uint64_t)v14;
  }
  while (1)
  {
    unint64_t v28 = v8;
    uint64_t v29 = v7;
    id v31 = v3;
    uint64_t v32 = v6;
    uint64_t v30 = v4;
    unint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t v3 = &v35;
    uint64_t result = sub_241CDBE80();
    if (v16 < 0) {
      break;
    }
    uint64_t v18 = 0;
    uint64_t v4 = 0;
    unint64_t v8 = v15 & 0xC000000000000001;
    while (v16 != v18)
    {
      if (v8) {
        id v19 = (id)MEMORY[0x245637160](v18, v15);
      }
      else {
        id v19 = *(id *)(v15 + 8 * v18 + 32);
      }
      uint64_t v20 = v19;
      uint64_t v6 = (char *)sub_241BD40F8();
      ++v18;

      uint64_t v3 = &v35;
      sub_241CDBE60();
      uint64_t v7 = *(void *)(v35 + 16);
      sub_241CDBE90();
      sub_241CDBEA0();
      sub_241CDBE70();
      if (v16 == v18)
      {
        swift_bridgeObjectRelease();
        unint64_t v8 = v28;
        uint64_t v7 = v29;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (!v16) {
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

void sub_241BD2D04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_241CD9090();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (void *)((char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_241BD2F68(a1);
  if (!v11) {
    return;
  }
  uint64_t v12 = v11;
  v19[1] = a4;
  id v13 = objc_msgSend(self, sel_sharedBehavior);
  if (!v13)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v14 = v13;
  id v15 = objc_msgSend(v13, sel_features);

  if (!v15)
  {
LABEL_11:
    __break(1u);
    return;
  }
  unsigned int v16 = objc_msgSend(v15, sel_yodel);

  if (v16
    && ((id v17 = objc_msgSend(a1, sel_averageLeftEarSensitivity),
         v17,
         v17)
     || (id v18 = objc_msgSend(a1, sel_averageRightEarSensitivity),
         v18,
         v18)))
  {
    *uint64_t v10 = sub_241BD3508((uint64_t)a1, a2);
    (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F44688], v7);
    sub_241CD90A0();
    swift_allocObject();
    sub_241CD9080();
    swift_release();
  }
  else
  {
    *uint64_t v10 = v12;
    (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F44690], v7);
    sub_241CD90A0();
    swift_allocObject();
    sub_241CD9080();
  }
}

uint64_t sub_241BD2F68(void *a1)
{
  uint64_t v40 = a1;
  uint64_t v1 = sub_241CDA1A0();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v38 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241BD4094(0, &qword_26B031AD8, MEMORY[0x263F44508], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v39 = (char *)&v35 - v5;
  uint64_t v42 = (void *)sub_241CD69B0();
  uint64_t v6 = *(v42 - 1);
  MEMORY[0x270FA5388](v42);
  uint64_t v43 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BD4094(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828], v3);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v41 = (char *)&v35 - v12;
  id v13 = (void *)sub_241CD8EF0();
  id v14 = (void *)sub_241CD8F10();
  uint64_t v15 = sub_241CD8F10();
  if (qword_26B032A38 != -1) {
    swift_once();
  }
  id v16 = v13;
  id v17 = v14;
  id v18 = v16;
  id v19 = v17;
  uint64_t v20 = (void *)sub_241CDAE60();

  id v21 = (id)sub_241CDAE70();
  id v22 = (void *)v15;
  if (v20)
  {
    id v23 = *(void (**)(char *, uint64_t, uint64_t, void *))(v6 + 56);
    uint64_t v24 = 1;
    v23(v41, 1, 1, v42);
    id v25 = v20;
    sub_241CD69D0();
    if (v21)
    {
      id v21 = v21;
      sub_241CD69D0();
      uint64_t v24 = 0;
    }
    v23(v11, v24, 1, v42);
    id v26 = v39;
    sub_241BD3854(v40);
    uint64_t v27 = sub_241CD8E70();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
    sub_241CD8FF0();
    swift_allocObject();
    uint64_t v28 = sub_241CD8FE0();
  }
  else
  {
    uint64_t v43 = v19;
    uint64_t v29 = v38;
    sub_241CDA150();
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB660();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v45 = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v42 = v18;
      uint64_t v44 = sub_241A33FE4(0xD000000000000025, 0x8000000241CF1A40, &v45);
      sub_241CDBBF0();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v44 = sub_241A33FE4(0xD000000000000040, 0x8000000241CE33B0, &v45);
      sub_241CDBBF0();
      _os_log_impl(&dword_241A23000, v30, v31, "[%s] %s: Primary string found nil when creating standard model.", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v33, -1, -1);
      MEMORY[0x245637F20](v32, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v37);
    return 0;
  }
  return v28;
}

uint64_t sub_241BD3508(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = (void *)a1;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241BD4094(0, &qword_26B031AD8, MEMORY[0x263F44508], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - v5;
  sub_241BD4094(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828], v3);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - v11;
  id v13 = (void *)sub_241CD8EF0();
  id v14 = (void *)sub_241CD8F10();
  uint64_t v15 = sub_241CDAE80();

  if (v15)
  {
    sub_241CD69D0();
    uint64_t v16 = sub_241CD69B0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 0, 1, v16);
  }
  else
  {
    uint64_t v17 = sub_241CD69B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 1, 1, v17);
  }
  id v18 = (void *)sub_241CD8EF0();
  id v19 = (void *)sub_241CD8F10();
  uint64_t v20 = sub_241CDAE80();

  if (v20)
  {
    sub_241CD69D0();
    uint64_t v21 = sub_241CD69B0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 0, 1, v21);
  }
  else
  {
    uint64_t v22 = sub_241CD69B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 1, 1, v22);
  }
  id v23 = v27;
  uint64_t v24 = sub_241BD51E8((uint64_t)v27, a2, (uint64_t)v12, (uint64_t)v10);
  sub_241AD16D0((uint64_t)v10);
  sub_241AD16D0((uint64_t)v12);
  sub_241BD3854(v23);
  uint64_t v25 = sub_241CD8E70();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v6, 0, 1, v25);
  sub_241CD9060();
  return v24;
}

uint64_t sub_241BD3854(void *a1)
{
  id v3 = *(id *)(v1 + *(int *)(type metadata accessor for AudiogramSnidgetFeedItemModelProvider() + 20) + 16);
  id v4 = objc_msgSend(v3, sel_description, 0x5F74656764696E53);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(a1, sel_averageLeftEarSensitivity);
  if (v5)
  {
    uint64_t v6 = v5;
    objc_msgSend(v5, sel__value);
  }
  id v7 = objc_msgSend(a1, sel_averageRightEarSensitivity);
  if (v7)
  {
    uint64_t v8 = v7;
    objc_msgSend(v7, sel__value);
  }
  sub_241CD8E60();

  return swift_bridgeObjectRelease();
}

id sub_241BD39A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v2 = type metadata accessor for AudiogramSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v2);
  id v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CDA1A0();
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  MEMORY[0x270FA5388](v5);
  id v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241BD4094(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v41 - v10;
  sub_241BD4094(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v41 - v13;
  sub_241BD4094(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v41 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
  if (result)
  {
    uint64_t v22 = result;
    id v23 = objc_msgSend(result, sel_displayTypeForObjectType_, *(void *)((char *)v1 + *(int *)(v2 + 20) + 16));

    if (v23)
    {
      uint64_t v24 = sub_241CD7A10();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 1, 1, v24);
      uint64_t v25 = sub_241CD6810();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 1, 1, v25);
      sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
      sub_241CD89A0();
      uint64_t v26 = sub_241CD8610();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 1, 1, v26);
      id v27 = v23;
      uint64_t v28 = sub_241CD8990();
      sub_241A9395C(0);
      uint64_t v30 = v29;
      os_log_type_t v31 = v44;
      sub_241BD57E4((uint64_t)v20, (uint64_t)v44 + *(int *)(v29 + 52), type metadata accessor for SnidgetFeedItemMetadata);

      v31[1] = 0;
      v31[2] = 0;
      *os_log_type_t v31 = v28;
      sub_241BD5080((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
      return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v31, 0, 1, v30);
    }
    else
    {
      sub_241CDA0F0();
      sub_241BD57E4((uint64_t)v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AudiogramSnidgetFeedItemModelProvider);
      uint64_t v32 = sub_241CDA190();
      os_log_type_t v33 = sub_241CDB650();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v46 = v41;
        *(_DWORD *)uint64_t v34 = 136446466;
        uint64_t v45 = sub_241A33FE4(0xD000000000000025, 0x8000000241CF1A40, &v46);
        sub_241CDBBF0();
        *(_WORD *)(v34 + 12) = 2080;
        id v35 = objc_msgSend(*(id *)&v4[*(int *)(v2 + 20) + 16], sel_sensitiveLoggingIdentifier);
        uint64_t v36 = sub_241CDB0D0();
        unint64_t v38 = v37;

        uint64_t v45 = sub_241A33FE4(v36, v38, &v46);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        sub_241BD5080((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AudiogramSnidgetFeedItemModelProvider);
        _os_log_impl(&dword_241A23000, v32, v33, "[%{public}s]: No display type could be found for %s", (uint8_t *)v34, 0x16u);
        uint64_t v39 = v41;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v39, -1, -1);
        MEMORY[0x245637F20](v34, -1, -1);
      }
      else
      {
        sub_241BD5080((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AudiogramSnidgetFeedItemModelProvider);
      }

      (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v43);
      sub_241A9395C(0);
      return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v44, 1, 1, v40);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241BD4034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241BD57E4(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241BD406C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_241BD4094(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_241BD40F8()
{
  swift_getObjectType();
  uint64_t v2 = sub_241CD6A60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(v0, sel_hasFrequency))
  {
    *(void *)&long long v28 = 0;
    *((void *)&v28 + 1) = 0xE000000000000000;
    sub_241CDBE00();
    uint64_t v9 = sub_241CDC270();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    *(void *)&long long v28 = v9;
    *((void *)&v28 + 1) = v11;
    sub_241CDB180();
    unint64_t v13 = *((void *)&v28 + 1);
    id v12 = (id)v28;
    sub_241BD573C();
    swift_allocError();
    *id v14 = __PAIR128__(v13, (unint64_t)v12);
    swift_willThrow();
    return v12;
  }
  uint64_t v23 = v3;
  id v24 = v0;
  id result = objc_msgSend(v0, sel_tests);
  if (result)
  {
    unint64_t v30 = MEMORY[0x263F8EE78];
    id v7 = result;
    sub_241CDBAE0();
    id v22 = v7;

    sub_241BD1640(&qword_26B02E8C0, MEMORY[0x263F06DC0]);
    sub_241CDBBE0();
    while (v29)
    {
      sub_241A54AA0(&v28, v27);
      sub_241A340B8((uint64_t)v27, (uint64_t)v25);
      sub_241A313AC(0, &qword_26B031F30);
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v26 = 0;
      }
      uint64_t v8 = sub_241A31190((uint64_t)v27);
      if (v26)
      {
        MEMORY[0x2456365D0](v8);
        if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241CDB2F0();
        }
        sub_241CDB310();
        sub_241CDB2E0();
      }
      sub_241CDBBE0();
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v2);
    unint64_t v15 = v30;

    id result = objc_msgSend(v24, sel_frequency);
    if (!result) {
      goto LABEL_32;
    }
    uint64_t v16 = result;
    uint64_t v17 = (void *)sub_241CDB860();

    if (v15 >> 62) {
      goto LABEL_27;
    }
    uint64_t v18 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18)
    {
      while (1)
      {
        *(void *)&long long v28 = MEMORY[0x263F8EE78];
        id result = (id)sub_241CDBE80();
        if (v18 < 0) {
          break;
        }
        uint64_t v19 = 0;
        while (v18 != v19)
        {
          if ((v15 & 0xC000000000000001) != 0) {
            id v20 = (id)MEMORY[0x245637160](v19, v15);
          }
          else {
            id v20 = *(id *)(v15 + 8 * v19 + 32);
          }
          uint64_t v21 = v20;
          sub_241BD4C74();

          if (v1)
          {
            id v12 = (id)v28;
            swift_bridgeObjectRelease();

            swift_release();
            return v12;
          }
          ++v19;
          sub_241CDBE60();
          sub_241CDBE90();
          sub_241CDBEA0();
          sub_241CDBE70();
          if (v18 == v19) {
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_27:
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_241CDBF50();
        swift_bridgeObjectRelease();
        if (!v18) {
          goto LABEL_28;
        }
      }
      __break(1u);
      goto LABEL_31;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    sub_241A313AC(0, &qword_26B030418);
    id v12 = sub_241BD50E0((uint64_t)v17);

    return v12;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

unint64_t sub_241BD4594(void *a1)
{
  uint64_t v2 = sub_241CDAE40();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v26 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v26 - v6;
  char v8 = sub_241BD49E0(1, a1);
  char v9 = sub_241BD49E0(0, a1);
  char v10 = v9;
  if (v8)
  {
    uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x263F46290];
    sub_241BD4094(0, &qword_26B0380B8, MEMORY[0x263F46290], MEMORY[0x263F8E0F8]);
    uint64_t v12 = *(void *)(v3 + 72);
    unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_241CEB720;
    sub_241CDAE30();
    sub_241CDAE20();
    uint64_t v27 = v14;
    sub_241BD1640(&qword_26B037DC8, MEMORY[0x263F46290]);
    sub_241BD4094(0, &qword_26B038020, v11, MEMORY[0x263F8D488]);
    sub_241BD56D8(&qword_26B038028, &qword_26B038020, v11);
    sub_241CDBC70();
    unint64_t v15 = sub_241AF7DE0(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v17 = *(void *)(v15 + 16);
    unint64_t v16 = *(void *)(v15 + 24);
    if (v17 >= v16 >> 1) {
      unint64_t v15 = sub_241AF7DE0(v16 > 1, v17 + 1, 1, v15);
    }
    *(void *)(v15 + 16) = v17 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v13 + v17 * v12, v7, v2);
    if (v10) {
      goto LABEL_8;
    }
LABEL_7:
    if (*(void *)(v15 + 16)) {
      return v15;
    }
    goto LABEL_8;
  }
  unint64_t v15 = MEMORY[0x263F8EE78];
  if ((v9 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_8:
  uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x263F46290];
  sub_241BD4094(0, &qword_26B0380B8, MEMORY[0x263F46290], MEMORY[0x263F8E0F8]);
  uint64_t v19 = *(void *)(v3 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_241CEB730;
  sub_241CDAE20();
  uint64_t v27 = v21;
  sub_241BD1640(&qword_26B037DC8, MEMORY[0x263F46290]);
  sub_241BD4094(0, &qword_26B038020, v18, MEMORY[0x263F8D488]);
  sub_241BD56D8(&qword_26B038028, &qword_26B038020, v18);
  id v22 = v26;
  sub_241CDBC70();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v15 = sub_241AF7DE0(0, *(void *)(v15 + 16) + 1, 1, v15);
  }
  unint64_t v24 = *(void *)(v15 + 16);
  unint64_t v23 = *(void *)(v15 + 24);
  if (v24 >= v23 >> 1) {
    unint64_t v15 = sub_241AF7DE0(v23 > 1, v24 + 1, 1, v15);
  }
  *(void *)(v15 + 16) = v24 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v20 + v24 * v19, v22, v2);
  return v15;
}

uint64_t sub_241BD49E0(int a1, id a2)
{
  uint64_t v3 = v2;
  id v6 = objc_msgSend(v3, sel_sensitivityPoints);
  sub_241A313AC(0, &qword_26B030418);
  unint64_t v7 = sub_241CDB2C0();

  if (v7 >> 62) {
    goto LABEL_24;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = sub_241CDBF50())
  {
    uint64_t v9 = 0;
    unint64_t v23 = v7;
    unint64_t v24 = v7 & 0xC000000000000001;
    unint64_t v21 = v7 + 32;
    uint64_t v22 = v8;
    while (1)
    {
      id v10 = v24 ? (id)MEMORY[0x245637160](v9, v7) : *(id *)(v21 + 8 * v9);
      id v11 = v10;
      if (__OFADD__(v9++, 1)) {
        break;
      }
      id v13 = objc_msgSend(v10, sel_tests);
      sub_241A313AC(0, &qword_26B031F20);
      unint64_t v7 = sub_241CDB2C0();

      uint64_t v25 = v11;
      if (v7 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v14 = sub_241CDBF50();
        swift_bridgeObjectRelease();
        if (v14)
        {
LABEL_11:
          uint64_t v15 = 4;
          while (1)
          {
            id v16 = (v7 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x245637160](v15 - 4, v7)
                : *(id *)(v7 + 8 * v15);
            unint64_t v17 = v16;
            uint64_t v18 = v15 - 3;
            if (__OFADD__(v15 - 4, 1)) {
              break;
            }
            if (objc_msgSend(v16, sel_side) == a2 && ((objc_msgSend(v17, sel_masked) ^ a1) & 1) == 0)
            {
              swift_bridgeObjectRelease_n();

              uint64_t v19 = 1;
              goto LABEL_26;
            }

            ++v15;
            if (v18 == v14) {
              goto LABEL_4;
            }
          }
          __break(1u);
          break;
        }
      }
      else
      {
        uint64_t v14 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v14) {
          goto LABEL_11;
        }
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

      unint64_t v7 = v23;
      if (v9 == v22) {
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
  }
LABEL_25:
  uint64_t v19 = 0;
LABEL_26:
  swift_bridgeObjectRelease_n();
  return v19;
}

id sub_241BD4C74()
{
  uint64_t v1 = v0;
  v23[2] = *(id *)MEMORY[0x263EF8340];
  swift_getObjectType();
  if (!objc_msgSend(v0, sel_hasSensitivity)
    || !objc_msgSend(v0, sel_hasType)
    || !objc_msgSend(v0, sel_hasSide))
  {
    sub_241CDBE00();
    uint64_t v15 = (void *)sub_241CDC270();
    id v12 = v16;
    swift_bridgeObjectRelease();
    v23[0] = v15;
    v23[1] = v12;
    sub_241CDB180();
    sub_241BD5790();
    swift_allocError();
    *unint64_t v17 = v15;
    v17[1] = v12;
    swift_willThrow();
    return v12;
  }
  id v2 = objc_msgSend(v0, sel_type);
  id v3 = objc_msgSend(v0, sel_side);
  id result = objc_msgSend(v0, sel_sensitivity);
  if (result)
  {
    uint64_t v5 = result;
    id v6 = (void *)sub_241CDB860();

    id v7 = objc_msgSend(v1, sel_masked);
    if (!objc_msgSend(v1, sel_hasClampingRange))
    {
      id v13 = 0;
      goto LABEL_12;
    }
    id v22 = v2;
    id result = objc_msgSend(v1, sel_clampingRange);
    if (result)
    {
      uint64_t v8 = result;
      id v9 = sub_241BD4FAC(result, (SEL *)&selRef_hasUpperBound, (SEL *)&selRef_upperBound);
      id v10 = sub_241BD4FAC(v8, (SEL *)&selRef_hasLowerBound, (SEL *)&selRef_lowerBound);
      v23[0] = 0;
      id v11 = objc_msgSend(self, sel_clampingRangeWithLowerBound_upperBound_error_, v10, v9, v23);
      id v12 = v23[0];
      if (v11)
      {
        id v13 = v11;
        id v14 = v23[0];

        id v2 = v22;
LABEL_12:
        id v18 = objc_allocWithZone(MEMORY[0x263F0A110]);
        v23[0] = 0;
        id v19 = objc_msgSend(v18, sel_initWithSensitivity_type_masked_side_clampingRange_error_, v6, v2, v7, v3, v13, v23);
        if (v19)
        {
          id v12 = v19;
          id v20 = v23[0];
        }
        else
        {
          id v12 = v23[0];
          sub_241CD6A40();

          swift_willThrow();
        }

        return v12;
      }
      id v21 = v23[0];
      sub_241CD6A40();

      swift_willThrow();
      return v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_241BD4FAC(void *a1, SEL *a2, SEL *a3)
{
  if (![a1 *a2]) {
    return 0;
  }
  id result = [a1 *a3];
  if (result)
  {
    id v6 = result;
    id v7 = (void *)sub_241CDB860();

    id v8 = objc_msgSend(self, sel_decibelHearingLevelUnit);
    objc_msgSend(v7, sel_doubleValueForUnit_, v8);

    sub_241A313AC(0, (unint64_t *)&qword_26B0304E8);
    return (id)sub_241CDBB30();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241BD5080(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_241BD50E0(uint64_t a1)
{
  v7[1] = *(id *)MEMORY[0x263EF8340];
  sub_241A313AC(0, &qword_26B031F20);
  id v2 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  v7[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sensitivityPointWithFrequency_tests_error_, a1, v2, v7);

  if (v3)
  {
    id v4 = v7[0];
  }
  else
  {
    id v5 = v7[0];
    sub_241CD6A40();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_241BD51E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a4;
  uint64_t v30 = a2;
  uint64_t v31 = a1;
  sub_241BD4094(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  id v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_241CD69B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v27 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  long long v28 = (char *)&v26 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v26 - v18;
  MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v26 - v20;
  sub_241AD163C(a3, (uint64_t)v10);
  id v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v23 = v22(v10, 1, v11);
  uint64_t v26 = v19;
  if (v23 == 1)
  {
    sub_241AD16D0((uint64_t)v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v21, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v21, v11);
    if (qword_26B038428 != -1) {
      swift_once();
    }
    sub_241CD69E0();
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    sub_241BD4594(0);
    sub_241CD9050();
    swift_allocObject();
    sub_241CD9040();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
  }
  sub_241AD163C(v29, (uint64_t)v8);
  if (v22(v8, 1, v11) == 1)
  {
    sub_241AD16D0((uint64_t)v8);
  }
  else
  {
    unint64_t v24 = v27;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v27, v8, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v26, v24, v11);
    if (qword_26B038428 != -1) {
      swift_once();
    }
    sub_241CD69E0();
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    sub_241BD4594((void *)1);
    sub_241CD9050();
    swift_allocObject();
    sub_241CD9040();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
  }
  sub_241CD9070();
  swift_allocObject();
  return sub_241CD9030();
}

uint64_t sub_241BD56D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BD4094(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241BD573C()
{
  unint64_t result = qword_268D43378;
  if (!qword_268D43378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43378);
  }
  return result;
}

unint64_t sub_241BD5790()
{
  unint64_t result = qword_268D43380;
  if (!qword_268D43380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43380);
  }
  return result;
}

uint64_t sub_241BD57E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

ValueMetadata *_s20SensitivityTestErrorVMa()
{
  return &_s20SensitivityTestErrorVN;
}

ValueMetadata *_s21SensitivityPointErrorVMa()
{
  return &_s21SensitivityPointErrorVN;
}

uint64_t sub_241BD5880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241BD5894);
}

uint64_t sub_241BD5894(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241BD5944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241BD5958);
}

void *sub_241BD5958(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for BloodPressureSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031D70;
  if (!qword_26B031D70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241BD5A4C()
{
  return sub_241BD5D64(&qword_26B0320B8, MEMORY[0x263F44058]);
}

uint64_t sub_241BD5A94()
{
  return sub_241BD5B98((unint64_t *)&qword_26B0320F0);
}

void sub_241BD5AC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241BD5D64(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241BD5B64()
{
  return sub_241BD5B98((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241BD5B98(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BD5AC8(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    id v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241BD5D64((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241BD5D64(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BD5C7C()
{
  return sub_241BD5D64(&qword_26B0385C8, MEMORY[0x263F44308]);
}

uint64_t sub_241BD5CC4()
{
  return sub_241BD5D64(&qword_26B032140, MEMORY[0x263F44308]);
}

uint64_t sub_241BD5D0C(uint64_t a1)
{
  uint64_t result = sub_241BD5D64(&qword_26B037E98, (void (*)(uint64_t))type metadata accessor for BloodPressureSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241BD5D64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BD5DAC()
{
  return sub_241BD5E4C(&qword_26B0383F8, &qword_26B038400, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241BD5DFC()
{
  return sub_241BD5E4C(&qword_26B032E48, &qword_26B032E50, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241BD5E4C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BD5E90(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241BD5E90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241BD5AC8(255, &qword_26B032118, MEMORY[0x263F44150]);
    uint64_t v15 = v6;
    uint64_t v7 = sub_241CD86F0();
    unint64_t v8 = sub_241A3F5B0();
    uint64_t v9 = sub_241BD5D64(&qword_26B0320B8, MEMORY[0x263F44058]);
    uint64_t v10 = sub_241BD5B98((unint64_t *)&qword_26B0320F0);
    uint64_t v11 = sub_241BD5B98((unint64_t *)&qword_26B0320E0);
    uint64_t v12 = (void (*)(uint64_t))MEMORY[0x263F44308];
    v16[0] = v15;
    v16[1] = v7;
    v16[2] = v8;
    v16[3] = v9;
    v16[4] = v10;
    v16[5] = v11;
    v16[6] = sub_241BD5D64(&qword_26B0385C8, MEMORY[0x263F44308]);
    v16[7] = sub_241BD5D64(&qword_26B032140, v12);
    unint64_t v13 = a3(a1, v16);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

void sub_241BD6038(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = v4;
  uint64_t v207 = a3;
  id v192 = a2;
  uint64_t v208 = a4;
  uint64_t v8 = type metadata accessor for BloodPressureSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v8);
  uint64_t v197 = (uint64_t *)((char *)&v178 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (void *)sub_241CDA1A0();
  uint64_t v199 = (void (**)(void, void))*(v10 - 1);
  id v200 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v198 = (char *)&v178 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v203 = (char *)&v178 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35BB8(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v14 - 8);
  v206 = (char *)&v178 - v15;
  sub_241A35BB8(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v16 - 8);
  id v205 = (char *)&v178 - v17;
  sub_241A35BB8(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v18 - 8);
  id v187 = (char *)&v178 - v19;
  uint64_t v183 = sub_241CD69B0();
  uint64_t v182 = *(void *)(v183 - 8);
  MEMORY[0x270FA5388](v183);
  id v186 = (char *)&v178 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35BB8(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v185 = (char *)&v178 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v184 = (char *)&v178 - v24;
  sub_241A35BB8(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v204 = (char *)&v178 - v26;
  sub_241A35BB8(0, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v191 = (char *)&v178 - v28;
  sub_241A35BB8(0, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
  MEMORY[0x270FA5388](v29 - 8);
  os_log_type_t v190 = (char *)&v178 - v30;
  uint64_t v195 = sub_241CD6EE0();
  uint64_t v193 = *(void *)(v195 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v195);
  uint64_t v188 = (char *)&v178 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v178 - v33;
  uint64_t v196 = sub_241CD6D00();
  uint64_t v201 = *(void *)(v196 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v196);
  uint64_t v189 = (char *)&v178 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v194 = (char *)&v178 - v37;
  unint64_t v38 = self;
  uint64_t v39 = *v4;
  id v40 = objc_msgSend(v38, sel_sharedInstanceForHealthStore_, *v4);
  if (!v40)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v41 = v40;
  uint64_t v202 = (uint64_t)v4 + *(int *)(v8 + 24);
  id v42 = objc_msgSend(v40, sel_displayTypeForObjectType_, *(void *)(v202 + 16));

  uint64_t v209 = v42;
  if (!v42)
  {
    sub_241A3A824();
    swift_allocError();
    swift_willThrow();
    return;
  }
  sub_241ADF818(a1);
  if (v5)
  {

    return;
  }
  uint64_t v44 = v43;
  if (!v43)
  {
LABEL_21:
    uint64_t v98 = sub_241CD7A10();
    uint64_t v99 = (uint64_t)v205;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v205, 1, 1, v98);
    uint64_t v100 = sub_241CD6810();
    uint64_t v101 = (uint64_t)v206;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v206, 1, 1, v100);
    uint64_t v102 = v207;
    swift_bridgeObjectRetain();
    uint64_t v103 = v203;
    sub_241B4A1A8(0, v99, v102, v101, v203);
    sub_241CD89A0();
    uint64_t v104 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v204, 1, 1, v104);
    id v105 = v209;
    uint64_t v106 = sub_241CD8990();
    sub_241A3A878();
    id v108 = v208;
    sub_241BD7A30((uint64_t)v103, (uint64_t)v208 + *(int *)(v107 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v108[1] = 0;
    v108[2] = 0;
    *id v108 = v106;
    uint64_t v109 = (uint64_t)v103;
LABEL_22:
    sub_241BD7974(v109, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  if (!objc_msgSend(v43, sel_hasSystolicValue)
    || !objc_msgSend(v44, sel_hasDiastolicValue)
    || !objc_msgSend(v44, sel_hasTimestampData))
  {

    goto LABEL_21;
  }
  id v180 = v44;
  uint64_t v179 = 0;
  uint64_t v45 = *(void **)(v202 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
  type metadata accessor for SnidgetStringBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v39;
  id v178 = self;
  id v47 = v45;
  id v48 = v39;
  id v49 = objc_msgSend(v178, sel_sharedInstanceForHealthStore_, v48);
  uint64_t v181 = (id *)inited;
  *(void *)(inited + 32) = v49;
  if (!v45)
  {
    id v50 = v49;
    id v47 = objc_msgSend(v50, sel_createHKUnitPreferenceController);
  }
  v181[3] = v47;
  id v51 = objc_msgSend(v47, sel_unitForChartingDisplayType_, v209);
  if (!v51)
  {
    id v121 = v198;
    sub_241CDA0F0();
    id v122 = v197;
    sub_241BD7A30((uint64_t)v4, (uint64_t)v197, (uint64_t (*)(void))type metadata accessor for BloodPressureSnidgetFeedItemModelProvider);
    uint64_t v123 = sub_241CDA190();
    os_log_type_t v124 = sub_241CDB650();
    if (os_log_type_enabled(v123, v124))
    {
      uint64_t v125 = (uint8_t *)swift_slowAlloc();
      uint64_t v126 = swift_slowAlloc();
      *(_DWORD *)uint64_t v125 = 136315138;
      v210[0] = v126;
      uint64_t v127 = sub_241AE035C(*v122, *((unsigned __int8 *)v122 + *(int *)(v8 + 24) + 8));
      v210[11] = sub_241A33FE4(v127, v128, v210);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BD7974((uint64_t)v122, (uint64_t (*)(void))type metadata accessor for BloodPressureSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_241A23000, v123, v124, "[%s]:Could not get preferredUnit for blood pressure when it should be in the preferences dictionary on init", v125, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v126, -1, -1);
      MEMORY[0x245637F20](v125, -1, -1);
    }
    else
    {
      sub_241BD7974((uint64_t)v122, (uint64_t (*)(void))type metadata accessor for BloodPressureSnidgetFeedItemModelProvider);
    }

    ((void (**)(char *, id))v199)[1](v121, v200);
    uint64_t v129 = v207;
    uint64_t v130 = v208;
    uint64_t v132 = (uint64_t)v205;
    uint64_t v131 = (uint64_t)v206;
    id v133 = v180;
    uint64_t v134 = v203;
    uint64_t v135 = sub_241CD7A10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v132, 1, 1, v135);
    uint64_t v136 = sub_241CD6810();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v131, 1, 1, v136);
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v132, v129, v131, v134);
    sub_241CD89A0();
    uint64_t v137 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v204, 1, 1, v137);
    uint64_t v138 = v209;
    uint64_t v139 = sub_241CD8990();
    sub_241A3A878();
    sub_241BD7A30((uint64_t)v134, (uint64_t)v130 + *(int *)(v140 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    swift_release();
    v130[1] = 0;
    v130[2] = 0;
    uint64_t *v130 = v139;
    uint64_t v109 = (uint64_t)v134;
    goto LABEL_22;
  }
  uint64_t v52 = v51;
  id v53 = objc_msgSend(v180, sel_diastolicValue);
  if (!v53) {
    goto LABEL_31;
  }
  uint64_t v54 = v53;
  uint64_t v55 = (void *)sub_241CDB860();

  uint64_t v56 = v209;
  uint64_t v57 = SnidgetStringBuilder.makeSafeDouble(displayType:quantity:preferredUnit:)(v209, v55, v52);
  LOBYTE(v54) = v58;

  if (v54)
  {
LABEL_23:
    uint64_t v110 = sub_241CD7A10();
    uint64_t v111 = (uint64_t)v205;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v205, 1, 1, v110);
    uint64_t v112 = sub_241CD6810();
    uint64_t v113 = (uint64_t)v206;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v206, 1, 1, v112);
    uint64_t v114 = v207;
    swift_bridgeObjectRetain();
    long long v115 = v203;
    sub_241B4A1A8(0, v111, v114, v113, v203);
    sub_241CD89A0();
    uint64_t v116 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v204, 1, 1, v116);
    id v117 = v56;
    uint64_t v118 = sub_241CD8990();
    sub_241A3A878();
    id v120 = v208;
    sub_241BD7A30((uint64_t)v115, (uint64_t)v208 + *(int *)(v119 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    swift_release();
    v120[1] = 0;
    v120[2] = 0;
    *id v120 = v118;
    uint64_t v109 = (uint64_t)v115;
    goto LABEL_22;
  }
  id v59 = objc_msgSend(v180, sel_systolicValue);
  if (!v59)
  {
LABEL_32:
    __break(1u);
    return;
  }
  uint64_t v60 = v59;
  uint64_t v61 = (void *)sub_241CDB860();

  uint64_t v56 = v209;
  uint64_t v62 = SnidgetStringBuilder.makeSafeDouble(displayType:quantity:preferredUnit:)(v209, v61, v52);
  char v64 = v63;

  if (v64) {
    goto LABEL_23;
  }
  double v65 = *(double *)&v57;
  double v66 = *(double *)&v62;
  uint64_t v67 = self;
  id v68 = v52;
  id v69 = objc_msgSend(v67, sel_quantityWithUnit_doubleValue_, v68, v66);
  id v70 = objc_msgSend(v67, sel_quantityWithUnit_doubleValue_, v68, v65);
  uint64_t v199 = (void (**)(void, void))v68;

  objc_msgSend(v180, sel_timestampData);
  id v71 = (id)HKDecodeDateForValue();
  uint64_t v72 = v194;
  sub_241CD6CB0();

  id v73 = objc_allocWithZone(MEMORY[0x263F463F0]);
  uint64_t v74 = (void *)sub_241CD6C60();
  id v200 = objc_msgSend(v73, sel_initWithSystolicValue_diastolicValue_date_, v69, v70, v74);

  uint64_t v75 = *(char **)(v201 + 8);
  v201 += 8;
  uint64_t v198 = v75;
  ((void (*)(char *, uint64_t))v75)(v72, v196);
  id v76 = v181[3];
  uint64_t v77 = (void *)sub_241CD8EF0();
  id v78 = (void *)sub_241CD8F10();
  sub_241CD6EA0();
  id v79 = objc_allocWithZone(MEMORY[0x263F466D0]);
  uint64_t v80 = (void *)sub_241CD6E40();
  id v81 = objc_msgSend(v79, sel_initWithCalendar_, v80);

  uint64_t v82 = v34;
  id v83 = v200;
  uint64_t v193 = *(void *)(v193 + 8);
  ((void (*)(char *, uint64_t))v193)(v82, v195);
  uint64_t v84 = (uint64_t *)objc_msgSend(v83, sel_attributedStringWithDisplayType_unitController_valueFont_unitFont_dateCache_, v56, v76, v77, v78, v81);

  uint64_t v197 = v84;
  if (v84)
  {
    uint64_t v85 = *v6;
    uint64_t v86 = v6[1];
    objc_msgSend(v180, sel_timestampData);
    id v87 = (id)HKDecodeDateForValue();
    unint64_t v88 = v189;
    sub_241CD6CB0();

    sub_241A3A71C();
    uint64_t v90 = (uint64_t)v190;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v190, 1, 1, v89);
    uint64_t v91 = sub_241CD8A60();
    uint64_t v92 = (uint64_t)v191;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v191, 1, 1, v91);
    uint64_t v93 = (uint64_t)v188;
    sub_241CD6EA0();
    id v94 = v85;
    uint64_t v95 = v202;
    uint64_t v96 = v179;
    uint64_t v97 = (char *)sub_241BACC30(v94, v86, v202, v192, v88, v90, v92, 0, v93);
    uint64_t v179 = v96;
    if (v96)
    {

      swift_release();
      ((void (*)(uint64_t, uint64_t))v193)(v93, v195);
      sub_241BD79D4(v92, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
      sub_241BD79D4(v90, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
      ((void (*)(void *, uint64_t))v198)(v88, v196);
    }
    else
    {
      id v192 = v97;
      ((void (*)(uint64_t, uint64_t))v193)(v93, v195);
      sub_241BD79D4(v92, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
      sub_241BD79D4(v90, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
      ((void (*)(void *, uint64_t))v198)(v88, v196);
      sub_241CD89A0();
      sub_241A3A9CC();
      uint64_t v153 = *(int *)(v152 + 48);
      uint64_t v203 = v56;
      objc_msgSend(v180, sel_timestampData);
      id v154 = (id)HKDecodeDateForValue();
      id v155 = v204;
      sub_241CD6CB0();

      v155[v153] = 0;
      uint64_t v156 = *MEMORY[0x263F43F18];
      uint64_t v157 = sub_241CD8610();
      uint64_t v158 = *(void *)(v157 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v158 + 104))(v155, v156, v157);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(v155, 0, 1, v157);
      uint64_t v209 = (void *)sub_241CD8990();
      uint64_t v159 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v182 + 56);
      uint64_t v160 = v183;
      v159(v184, 1, 1, v183);
      uint64_t v204 = v197;
      sub_241CD69D0();
      v159(v185, 1, 1, v160);
      v210[0] = 0x5F74656764696E53;
      v210[1] = 0xE800000000000000;
      id v161 = *(id *)(v95 + 16);
      id v162 = objc_msgSend(v161, sel_description);
      sub_241CDB0D0();

      sub_241CDB180();
      swift_bridgeObjectRelease();
      v163 = v187;
      sub_241CD8E60();
      swift_bridgeObjectRelease();
      uint64_t v164 = sub_241CD8E70();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v164 - 8) + 56))(v163, 0, 1, v164);
      sub_241CD8FF0();
      swift_allocObject();
      uint64_t v165 = sub_241CD8FE0();
      long long v166 = v192;
      swift_retain();
      id v167 = v180;
      objc_msgSend(v180, sel_timestampData);
      id v168 = (id)HKDecodeDateForValue();
      sub_241CD6CB0();

      uint64_t v169 = (uint64_t)v205;
      sub_241CD79D0();
      uint64_t v170 = sub_241CD7A10();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v170 - 8) + 56))(v169, 0, 1, v170);
      uint64_t v171 = sub_241CD6810();
      uint64_t v172 = (uint64_t)v206;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 56))(v206, 1, 1, v171);
      sub_241A3A878();
      uint64_t v175 = v207;
      unint64_t v174 = v208;
      uint64_t v176 = (char *)v208 + *(int *)(v173 + 52);
      swift_bridgeObjectRetain();
      sub_241B4A1A8(1, v169, v175, v172, v176);

      swift_release();
      unint64_t v177 = v181;
      swift_setDeallocating();

      *unint64_t v174 = (uint64_t)v209;
      v174[1] = v165;
      v174[2] = (uint64_t)v166;
    }
  }
  else
  {
    uint64_t v141 = sub_241CD7A10();
    uint64_t v142 = (uint64_t)v205;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 56))(v205, 1, 1, v141);
    uint64_t v143 = sub_241CD6810();
    uint64_t v144 = (uint64_t)v206;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v206, 1, 1, v143);
    uint64_t v145 = v207;
    swift_bridgeObjectRetain();
    uint64_t v146 = v203;
    sub_241B4A1A8(0, v142, v145, v144, v203);
    sub_241CD89A0();
    uint64_t v147 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v147 - 8) + 56))(v204, 1, 1, v147);
    id v148 = v56;
    uint64_t v149 = sub_241CD8990();
    sub_241A3A878();
    uint64_t v151 = v208;
    sub_241BD7A30((uint64_t)v146, (uint64_t)v208 + *(int *)(v150 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    swift_release();
    v151[1] = 0;
    v151[2] = 0;
    *uint64_t v151 = v149;
    sub_241BD7974((uint64_t)v146, type metadata accessor for SnidgetFeedItemMetadata);
  }
}

uint64_t sub_241BD7918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241BD7A30(v2 + *(int *)(a1 + 24), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241BD7950(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_241BD7974(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241BD79D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241A35BB8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241BD7A30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *MostRecentSampleSnidgetStringBuilder.__allocating_init(healthStore:unitPreferenceController:)(void *a1, id a2)
{
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = a1;
  uint64_t v5 = self;
  id v6 = a1;
  id v7 = objc_msgSend(v5, sel_sharedInstanceForHealthStore_, v6);
  v4[4] = v7;
  if (!a2)
  {
    id v8 = v7;
    a2 = objc_msgSend(v8, sel_createHKUnitPreferenceController);
  }
  v4[3] = a2;
  return v4;
}

void MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleQuantityPrimaryAttributedString(displayType:quantity:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v7 = *(void **)(v3 + 24);
  id v8 = objc_msgSend(v7, sel_unitForChartingDisplayType_, a1);
  if (!v8) {
    goto LABEL_8;
  }
  uint64_t v9 = v8;
  uint64_t v10 = SnidgetStringBuilder.makeSafeDouble(displayType:quantity:preferredUnit:)(a1, a2, v8);
  if (v11)
  {

LABEL_8:
    uint64_t v19 = sub_241CD69B0();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    uint64_t v21 = v19;
    uint64_t v22 = a3;
    uint64_t v23 = 1;
LABEL_12:
    v20(v22, v23, 1, v21);
    return;
  }
  double v12 = *(double *)&v10;
  id v13 = objc_msgSend(a1, sel_presentation);
  id v14 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v12);
  id v15 = objc_msgSend(v13, sel_adjustedValueForDaemonValue_, v14);

  id v16 = objc_msgSend(a1, sel_hk_valueFormatterForUnit_, v9);
  id v17 = objc_msgSend(a1, sel_displayTypeIdentifier);
  if (v17 == (id)90 || v17 == (id)124 || v17 == (id)237) {
    uint64_t v18 = sub_241CD8EF0();
  }
  else {
    uint64_t v18 = sub_241CD8F00();
  }
  uint64_t v24 = (void *)v18;
  id v25 = v15;
  id v30 = v24;
  uint64_t v26 = (void *)sub_241CD8F10();
  id v27 = objc_msgSend(v16, sel_attributedStringFromValue_displayType_unitController_valueFont_unitFont_, v25, a1, v7, v30, v26);

  if (v27)
  {
    sub_241CD69D0();

    uint64_t v28 = sub_241CD69B0();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
    uint64_t v21 = v28;
    uint64_t v22 = a3;
    uint64_t v23 = 0;
    goto LABEL_12;
  }
  uint64_t v29 = sub_241CD69B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a3, 1, 1, v29);
}

uint64_t MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleSupplementaryString(supplementaryLabelConfiguration:supplementaryLabelInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = a1;
  uint64_t v37 = a5;
  int v7 = a3 & 1;
  sub_241BD8B70(0, &qword_26B0321B0, MEMORY[0x263F46B90]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v34 - v9;
  sub_241AE39A4();
  uint64_t v12 = v11 - 8;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v34 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v34 - v19;
  uint64_t v21 = (char *)&v34 + *(int *)(v12 + 56) - v19;
  *(void *)uint64_t v20 = a2;
  v20[8] = v7;
  sub_241A4145C(a4, (uint64_t)v21);
  uint64_t v22 = *MEMORY[0x263F46B40];
  uint64_t v23 = sub_241CD9840();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v10, v22, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v10, 0, 1, v23);
  uint64_t v25 = (uint64_t)v10;
  uint64_t v26 = (uint64_t)&v18[*(int *)(v12 + 56)];
  uint64_t v27 = v35;
  *(void *)uint64_t v18 = v35;
  v18[8] = v7;
  sub_241A4145C((uint64_t)v21, v26);
  *(void *)id v15 = v27;
  v15[8] = v7;
  uint64_t v28 = (uint64_t)&v15[*(int *)(v12 + 56)];
  sub_241A4145C(v26, v28);
  sub_241CD57BC(v36, v25, v28, v27, v7);
  if (v29)
  {
    uint64_t v30 = v37;
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    sub_241BD8AB4((uint64_t)v15);
    uint64_t v31 = sub_241CD69B0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
  else
  {
    sub_241BD8AB4((uint64_t)v15);
    uint64_t v32 = sub_241CD69B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v37, 1, 1, v32);
  }
  sub_241BD8B10(v25, (uint64_t)&qword_26B0321B0, MEMORY[0x263F46B90], (uint64_t (*)(void))sub_241BD8B70);
  sub_241BD8AB4((uint64_t)v20);
  return sub_241BD8B10(v26, (uint64_t)&qword_26B038F10, MEMORY[0x263F062D0], (uint64_t (*)(void))sub_241BD8B70);
}

void MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleCategoryValuePrimaryAttributedString(displayType:categoryValue:metadata:)(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>, double a4@<D0>)
{
  sub_241BD8B70(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = sub_241CD69B0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BD84E4(a1, a2, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v23(v15, v11, v12);
    v23(a3, v15, v12);
LABEL_10:
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a3, 0, 1, v12);
    return;
  }
  sub_241BD8B10((uint64_t)v11, (uint64_t)&qword_26B031FB8, MEMORY[0x263F06828], (uint64_t (*)(void))sub_241BD8B70);
  id v16 = objc_msgSend(self, sel_countUnit);
  id v17 = objc_msgSend(a1, sel_presentation);
  id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a4);
  id v19 = objc_msgSend(v17, sel_adjustedValueForDaemonValue_, v18);

  id v20 = objc_msgSend(a1, sel_hk_valueFormatterForUnit_, v16);
  id v21 = objc_msgSend(a1, sel_displayTypeIdentifier);
  if (v21 == (id)90 || v21 == (id)124 || v21 == (id)237) {
    uint64_t v22 = sub_241CD8EF0();
  }
  else {
    uint64_t v22 = sub_241CD8F00();
  }
  uint64_t v24 = (void *)v22;
  uint64_t v25 = *(void *)(v4 + 24);
  id v26 = v19;
  id v27 = v24;
  uint64_t v28 = (void *)sub_241CD8F10();
  id v29 = objc_msgSend(v20, sel_attributedStringFromValue_displayType_unitController_valueFont_unitFont_, v26, a1, v25, v27, v28);

  if (v29)
  {
    sub_241CD69D0();

    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(a3, 1, 1, v12);
}

void sub_241BD84E4(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (char *)objc_msgSend(a1, sel_displayTypeIdentifier);
  if ((unint64_t)(v5 - 262) < 4)
  {
    id v6 = (void *)sub_241CDB090();
    id v7 = (id)HKUILocalizedString();

    if (v7)
    {
LABEL_3:
      sub_241CDB0D0();

      SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_241CD69B0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a3, 0, 1, v8);
      return;
    }
    goto LABEL_21;
  }
  if (v5 == (char *)97)
  {
LABEL_8:
    uint64_t v9 = sub_241CDB0D0();
    if (a2[2] && (unint64_t v11 = sub_241C0B22C(v9, v10), (v12 & 1) != 0))
    {
      sub_241A340B8(a2[7] + 32 * v11, (uint64_t)&v17);
      swift_bridgeObjectRelease();
      if (*((void *)&v18 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v13 = (void *)sub_241CDB090();
          swift_bridgeObjectRelease();
          id v7 = (id)HKUILocalizedString();

          if (v7) {
            goto LABEL_3;
          }
          __break(1u);
          goto LABEL_14;
        }
LABEL_19:
        id v16 = (void *)sub_241CDB090();
        id v7 = (id)HKUILocalizedString();

        if (v7) {
          goto LABEL_3;
        }
        __break(1u);
LABEL_21:
        __break(1u);
        return;
      }
    }
    else
    {
      long long v17 = 0u;
      long long v18 = 0u;
      swift_bridgeObjectRelease();
    }
    sub_241BD8B10((uint64_t)&v17, (uint64_t)&qword_26B035010, MEMORY[0x263F8EE58] + 8, (uint64_t (*)(void))sub_241A94320);
    goto LABEL_19;
  }
  if (v5 == (char *)96)
  {
    a2 = (void *)sub_241CDB090();
    id v7 = (id)HKUILocalizedString();

    if (v7) {
      goto LABEL_3;
    }
    __break(1u);
    goto LABEL_8;
  }
LABEL_14:
  uint64_t v14 = sub_241CD69B0();
  id v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);

  v15(a3, 1, 1, v14);
}

void *MostRecentSampleSnidgetStringBuilder.__allocating_init(healthStore:unitPreferenceController:viewControllerFactory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

void *MostRecentSampleSnidgetStringBuilder.init(healthStore:unitPreferenceController:viewControllerFactory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

void *MostRecentSampleSnidgetStringBuilder.init(healthStore:unitPreferenceController:)(void *a1, id a2)
{
  v2[2] = a1;
  uint64_t v5 = self;
  id v6 = a1;
  id v7 = objc_msgSend(v5, sel_sharedInstanceForHealthStore_, v6);
  v2[4] = v7;
  if (!a2)
  {
    id v8 = v7;
    a2 = objc_msgSend(v8, sel_createHKUnitPreferenceController);
  }
  v2[3] = a2;
  return v2;
}

void *MostRecentSampleSnidgetStringBuilder.__allocating_init(healthStore:)(void *a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = a1;
  uint64_t v3 = self;
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_sharedInstanceForHealthStore_, v4);
  v2[4] = v5;
  id v6 = v5;
  id v7 = objc_msgSend(v6, sel_createHKUnitPreferenceController);

  v2[3] = v7;
  return v2;
}

void *MostRecentSampleSnidgetStringBuilder.init(healthStore:)(void *a1)
{
  v1[2] = a1;
  uint64_t v3 = self;
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_sharedInstanceForHealthStore_, v4);
  v1[4] = v5;
  id v6 = v5;
  id v7 = objc_msgSend(v6, sel_createHKUnitPreferenceController);

  v1[3] = v7;
  return v1;
}

id *MostRecentSampleSnidgetStringBuilder.deinit()
{
  return v0;
}

uint64_t MostRecentSampleSnidgetStringBuilder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_241BD8AB4(uint64_t a1)
{
  sub_241AE39A4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241BD8B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_241BD8B70(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for MostRecentSampleSnidgetStringBuilder()
{
  return self;
}

uint64_t sub_241BD8BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v61 = a3;
  id v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35C0C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v74 = (char *)v57 - v9;
  uint64_t v10 = sub_241CD6810();
  uint64_t v75 = *(void *)(v10 - 8);
  uint64_t v76 = v10;
  MEMORY[0x270FA5388](v10);
  id v73 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_241CD6ED0();
  uint64_t v63 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  double v65 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CD6EE0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35C0C(0, &qword_26B0385B8, MEMORY[0x263F07490], v7);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  char v64 = (char *)v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  id v21 = (char *)v57 - v20;
  uint64_t v22 = sub_241CD6D00();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  id v71 = (char *)v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  id v70 = (char *)v57 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  id v29 = (char *)v57 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v78 = a1;
  uint64_t v79 = v30;
  uint64_t v31 = *(void (**)(void))(v30 + 16);
  uint64_t v77 = (char *)v57 - v32;
  uint64_t v68 = v30 + 16;
  id v69 = v31;
  v31();
  uint64_t v72 = a2;
  sub_241CD9CF0();
  uint64_t v33 = sub_241CD9FA0();
  uint64_t v35 = v34;
  if (v33 == sub_241CD9FA0() && v35 == v36)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_5;
  }
  char v37 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v37)
  {
LABEL_5:
    uint64_t v67 = a4;
    sub_241CD6EA0();
    sub_241CD6C20();
    uint64_t v38 = v14 + 8;
    uint64_t v39 = *(void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v40 = v13;
    v39(v16, v13);
    uint64_t v41 = v79;
    id v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
    if (v42((uint64_t)v21, 1, v22) == 1)
    {
      sub_241BD9430((uint64_t)v21, &qword_26B0385B8, MEMORY[0x263F07490]);
    }
    else
    {
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
      v57[1] = v41 + 32;
      v57[0] = v43;
      v43(v29, v21, v22);
      sub_241CD6EA0();
      uint64_t v44 = *MEMORY[0x263F07830];
      uint64_t v60 = v42;
      uint64_t v45 = v63;
      uint64_t v46 = v65;
      uint64_t v47 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 104))(v65, v44, v66);
      uint64_t v59 = v38;
      uint64_t v48 = (uint64_t)v64;
      char v58 = v39;
      sub_241CD6E70();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
      v58(v16, v40);
      id v49 = *(void (**)(char *, uint64_t))(v79 + 8);
      v49(v29, v22);
      if (v60(v48, 1, v22) == 1)
      {
        sub_241BD9430(v48, &qword_26B0385B8, MEMORY[0x263F07490]);
      }
      else
      {
        id v50 = v77;
        v49(v77, v22);
        ((void (*)(char *, uint64_t, uint64_t))v57[0])(v50, v48, v22);
      }
    }
  }
  sub_241CD9CF0();
  uint64_t v51 = (uint64_t)v74;
  uint64_t v52 = v77;
  sub_241CD9F70();
  uint64_t v54 = v75;
  uint64_t v53 = v76;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v51, 1, v76) == 1)
  {
    sub_241BD9430(v51, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v81 = 0;
    unint64_t v82 = 0xE000000000000000;
    sub_241CDBE00();
    sub_241CDB180();
    uint64_t v80 = v61;
    swift_getMetatypeMetadata();
    sub_241CDB120();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    uint64_t v80 = v62;
    sub_241CDB120();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t result = sub_241CDBF10();
    __break(1u);
  }
  else
  {
    uint64_t v55 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v73, v51, v53);
    sub_241CD67E0();
    ((void (*)(char *, uint64_t, uint64_t))v69)(v71, v78, v22);
    sub_241CD67C0();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);
    return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v52, v22);
  }
  return result;
}

uint64_t sub_241BD9430(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A35C0C(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241BD94A0()
{
  uint64_t v0 = sub_241CD6D00();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  MEMORY[0x270FA5388](v5);
  sub_241CD67E0();
  sub_241CD67B0();
  sub_241CD6C50();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return sub_241CD67C0();
}

uint64_t sub_241BD95E0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *, char *, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v48 = a6;
  id v49 = a4;
  id v53 = a1;
  uint64_t v54 = a5;
  uint64_t v52 = a3;
  id v6 = (void *)sub_241CDA1A0();
  uint64_t v55 = (void *)*(v6 - 1);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD6D00();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35C0C(0, &qword_26B0321B0, MEMORY[0x263F46B90], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v45 - v13;
  uint64_t v15 = sub_241CD9840();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v45 - v19;
  uint64_t v21 = sub_241CD9CC0();
  if (*(void *)(v21 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v14, v21 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_241BD9430((uint64_t)v14, &qword_26B0321B0, MEMORY[0x263F46B90]);
    sub_241CDA0F0();
    unint64_t v22 = v54;
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_241CDA190();
    os_log_type_t v24 = sub_241CDB650();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = v55;
    if (v25)
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      aBlock[0] = v28;
      *(_DWORD *)uint64_t v27 = 136315394;
      id v53 = v6;
      uint64_t v57 = v48;
      swift_getMetatypeMetadata();
      uint64_t v29 = sub_241CDB120();
      uint64_t v57 = sub_241A33FE4(v29, v30, aBlock);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_241A33FE4((uint64_t)v49, v22, aBlock);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v23, v24, "[%s]: Statistic trend request without statistics option: %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v28, -1, -1);
      MEMORY[0x245637F20](v27, -1, -1);

      ((void (*)(char *, id))v26[1])(v8, v53);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      ((void (*)(char *, void *))v26[1])(v8, v6);
    }
    return MEMORY[0x263F8EE78];
  }
  else
  {
    id v49 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v49(v20, v14, v15);
    uint64_t v31 = swift_allocObject();
    uint64_t v48 = v31;
    *(void *)(v31 + 16) = MEMORY[0x263F8EE78];
    uint64_t v55 = (void *)(v31 + 16);
    uint64_t v47 = v20;
    sub_241CD67E0();
    uint64_t v54 = sub_241CD6C60();
    uint64_t v46 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v32 = v51;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v50 + 8);
    v33(v11, v51);
    sub_241CD67B0();
    uint64_t v34 = (void *)sub_241CD6C60();
    v33(v11, v32);
    uint64_t v36 = v46;
    uint64_t v35 = v47;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v46, v47, v15);
    unint64_t v37 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v38 = (v17 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = swift_allocObject();
    v49((char *)(v39 + v37), v36, v15);
    *(void *)(v39 + v38) = v48;
    aBlock[4] = (uint64_t)sub_241B66B7C;
    aBlock[5] = v39;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_241B669D8;
    aBlock[3] = (uint64_t)&unk_26F5C5158;
    uint64_t v40 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v41 = (void *)v54;
    objc_msgSend(v53, sel_enumerateStatisticsFromDate_toDate_withBlock_, v54, v34, v40);
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v15);
    id v42 = v55;
    swift_beginAccess();
    uint64_t v43 = *v42;
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v43;
}

uint64_t sub_241BD9CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void *a6, uint64_t a7, unint64_t a8)
{
  uint64_t v191 = a7;
  uint64_t v192 = a4;
  uint64_t v190 = a1;
  uint64_t v183 = sub_241CD9B80();
  uint64_t v175 = *(char **)(v183 - 8);
  MEMORY[0x270FA5388](v183 - 8);
  uint64_t v176 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35C0C(0, &qword_26B032228, MEMORY[0x263F47050], MEMORY[0x263F8D8F0]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v189 = (char *)&v162 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v177 = (uint64_t)&v162 - v18;
  sub_241A35C0C(0, &qword_26B032218, MEMORY[0x263F47048], v14);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v179 = (char *)&v162 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  id v178 = (char *)&v162 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v181 = (uint64_t)&v162 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v180 = (uint64_t)&v162 - v26;
  uint64_t v27 = sub_241CDA1A0();
  uint64_t v28 = *(void (***)(char *, uint64_t))(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v188 = (char *)&v162 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v162 - v33;
  unint64_t v35 = *(void *)(a3 + 16);
  uint64_t v193 = (char *)v28;
  uint64_t v185 = v37;
  unint64_t v186 = v36;
  if (v35 < 2)
  {
    if (!v35)
    {
      uint64_t v53 = sub_241CD9B40();
      uint64_t v54 = *(void *)(v53 - 8);
      uint64_t v55 = *(char **)(v54 + 56);
      uint64_t v192 = v54 + 56;
      uint64_t v193 = v55;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v55)(v190, 1, 1, v53);
      uint64_t v56 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v193;
      return v56(a2, 1, 1, v53);
    }
  }
  else
  {
    sub_241CDA180();
    swift_bridgeObjectRetain_n();
    uint64_t v184 = a6;
    id v38 = a6;
    swift_bridgeObjectRetain_n();
    id v39 = v38;
    uint64_t v40 = sub_241CDA190();
    os_log_type_t v41 = sub_241CDB650();
    int v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v43 = swift_slowAlloc();
      LODWORD(v172) = v42;
      uint64_t v44 = v43;
      uint64_t v171 = swift_slowAlloc();
      uint64_t v195 = (char *)v171;
      *(_DWORD *)uint64_t v44 = 136315650;
      uint64_t v187 = v27;
      os_log_t v170 = v40;
      swift_bridgeObjectRetain();
      uint64_t v194 = sub_241A33FE4(v191, a8, (uint64_t *)&v195);
      uint64_t v174 = a3;
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 12) = 2080;
      uint64_t v169 = v44 + 14;
      uint64_t v45 = a2;
      id v46 = objc_msgSend(v39, sel_sensitiveLoggingIdentifier);
      uint64_t v47 = sub_241CDB0D0();
      unint64_t v48 = a5;
      unint64_t v50 = v49;

      a2 = v45;
      uint64_t v194 = sub_241A33FE4(v47, v50, (uint64_t *)&v195);
      uint64_t v27 = v187;
      sub_241CDBBF0();

      a5 = v48;
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v194 = sub_241A33FE4(v192, v48, (uint64_t *)&v195);
      uint64_t v28 = (void (**)(char *, uint64_t))v193;
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      os_log_t v51 = v170;
      _os_log_impl(&dword_241A23000, v170, (os_log_type_t)v172, "%s_%s: too many models returned for unique identifier %s", (uint8_t *)v44, 0x20u);
      uint64_t v52 = v171;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v52, -1, -1);
      MEMORY[0x245637F20](v44, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v28[1](v34, v27);
    a6 = v184;
  }
  sub_241CD79A0();
  uint64_t v58 = sub_241CD7970();
  unint64_t v60 = v59;
  id v61 = objc_allocWithZone(MEMORY[0x263F465E8]);
  uint64_t v62 = (void *)sub_241CD6AD0();
  sub_241A37374(v58, v60);
  id v63 = objc_msgSend(v61, sel_initWithData_, v62);

  if (!v63)
  {
    uint64_t v68 = v185;
    sub_241CDA180();
    swift_bridgeObjectRetain_n();
    id v69 = a6;
    swift_bridgeObjectRetain_n();
    id v70 = v69;
    id v71 = sub_241CDA190();
    os_log_type_t v72 = sub_241CDB650();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v189 = (char *)swift_slowAlloc();
      uint64_t v195 = v189;
      *(_DWORD *)uint64_t v73 = 136315650;
      uint64_t v182 = a2;
      swift_bridgeObjectRetain();
      uint64_t v194 = sub_241A33FE4(v191, a8, (uint64_t *)&v195);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v73 + 12) = 2080;
      id v74 = objc_msgSend(v70, sel_sensitiveLoggingIdentifier);
      uint64_t v187 = v27;
      id v75 = v74;
      uint64_t v76 = sub_241CDB0D0();
      unint64_t v78 = v77;

      uint64_t v194 = sub_241A33FE4(v76, v78, (uint64_t *)&v195);
      a2 = v182;
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v194 = sub_241A33FE4(v192, a5, (uint64_t *)&v195);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v71, v72, "%s_%s: Unable to decode summary data from model for unique identifier: %s", (uint8_t *)v73, 0x20u);
      uint64_t v79 = v189;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v79, -1, -1);
      MEMORY[0x245637F20](v73, -1, -1);

      (*((void (**)(uint64_t, uint64_t))v193 + 1))(v185, v187);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      (*((void (**)(uint64_t, uint64_t))v193 + 1))(v68, v27);
    }
    goto LABEL_17;
  }
  char v64 = v63;
  unsigned int v65 = objc_msgSend(v63, sel_hasKindRawValue);
  uint64_t v182 = a2;
  if (!v65 || (id v66 = objc_msgSend(v63, sel_kindRawValue)) == 0)
  {
LABEL_30:
    unint64_t v100 = v186;
    sub_241CDA180();
    swift_bridgeObjectRetain_n();
    id v101 = a6;
    swift_bridgeObjectRetain_n();
    id v102 = v64;
    id v103 = v101;
    id v104 = v102;
    id v105 = sub_241CDA190();
    int v106 = sub_241CDB650();
    if (os_log_type_enabled(v105, (os_log_type_t)v106))
    {
      LODWORD(v189) = v106;
      uint64_t v187 = v27;
      uint64_t v107 = swift_slowAlloc();
      uint64_t v188 = (char *)swift_slowAlloc();
      uint64_t v195 = v188;
      *(_DWORD *)uint64_t v107 = 136315906;
      swift_bridgeObjectRetain();
      uint64_t v194 = sub_241A33FE4(v191, a8, (uint64_t *)&v195);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v107 + 12) = 2080;
      id v108 = objc_msgSend(v103, sel_sensitiveLoggingIdentifier);
      uint64_t v109 = sub_241CDB0D0();
      unint64_t v111 = v110;

      uint64_t v194 = sub_241A33FE4(v109, v111, (uint64_t *)&v195);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v107 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v194 = sub_241A33FE4(v192, a5, (uint64_t *)&v195);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v107 + 32) = 2080;
      if (objc_msgSend(v104, sel_hasKindRawValue)
        && (id v112 = objc_msgSend(v104, sel_kindRawValue)) != 0)
      {
        uint64_t v113 = v112;
        sub_241CDB0D0();

        char v114 = _sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0();
      }
      else
      {
        char v114 = 4;
      }
      uint64_t v154 = v187;
      id v155 = v188;
      os_log_type_t v156 = v189;
      LOBYTE(v194) = v114;
      sub_241A94320(0, &qword_268D43388);
      uint64_t v157 = sub_241CDB120();
      uint64_t v194 = sub_241A33FE4(v157, v158, (uint64_t *)&v195);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v105, v156, "%s_%s: Incorrect model kind for uniqueIdentifier %s: %s", (uint8_t *)v107, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v155, -1, -1);
      MEMORY[0x245637F20](v107, -1, -1);

      (*((void (**)(unint64_t, uint64_t))v193 + 1))(v186, v154);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      (*((void (**)(unint64_t, uint64_t))v193 + 1))(v100, v27);
    }
    uint64_t v159 = sub_241CD9B40();
    uint64_t v160 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56);
    v160(v190, 1, 1, v159);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v160)(v182, 1, 1, v159);
  }
  uint64_t v67 = v66;
  sub_241CDB0D0();

  switch(_sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0())
  {
    case 2u:
      swift_bridgeObjectRelease();
      break;
    case 4u:
      goto LABEL_30;
    default:
      char v82 = sub_241CDC100();
      swift_bridgeObjectRelease();
      if ((v82 & 1) == 0) {
        goto LABEL_30;
      }
      break;
  }
  id v165 = v64;
  id v83 = objc_msgSend(v64, sel_contentData);
  if (v83)
  {
    uint64_t v84 = sub_241CD6AE0();
    unint64_t v86 = v85;

    id v83 = (id)sub_241CD6AD0();
    sub_241A37374(v84, v86);
  }
  id v87 = v188;
  id v88 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46650]), sel_initWithData_, v83);

  if (!v88)
  {

LABEL_17:
    uint64_t v80 = sub_241CD9B40();
    uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56);
    v81(v190, 1, 1, v80);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v81)(a2, 1, 1, v80);
  }
  uint64_t v89 = sub_241CD9B40();
  uint64_t v90 = *(void *)(v89 - 8);
  uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
  uint64_t v92 = v90 + 56;
  v91(v180, 1, 1, v89);
  uint64_t v169 = v89;
  id v167 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v91;
  uint64_t v166 = v92;
  v91(v181, 1, 1, v89);
  id v162 = v88;
  id v93 = objc_msgSend(v88, sel_trendValues);
  if (!v93
    || (id v94 = v93,
        uint64_t v195 = 0,
        sub_241A313AC(0, &qword_26B0303F8),
        sub_241CDB2B0(),
        v94,
        (unint64_t v96 = (unint64_t)v195) == 0))
  {
    swift_bridgeObjectRelease();
    unint64_t v96 = MEMORY[0x263F8EE78];
  }
  uint64_t v97 = (uint64_t)v189;
  if (v96 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v98 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v98) {
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t v98 = *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v98)
    {
LABEL_28:
      if (v98 < 1)
      {
        __break(1u);
        JUMPOUT(0x241BDB47CLL);
      }
      uint64_t v99 = 0;
      unint64_t v186 = v96 & 0xC000000000000001;
      os_log_t v170 = (os_log_t)(v175 + 48);
      uint64_t v164 = (void (**)(char *, uint64_t, uint64_t))(v175 + 16);
      v163 = (void (**)(char *, uint64_t))(v175 + 8);
      uint64_t v175 = v193 + 8;
      *(void *)&long long v95 = 136315906;
      long long v172 = v95;
      uint64_t v171 = MEMORY[0x263F8EE58] + 8;
      uint64_t v193 = (char *)v96;
      uint64_t v187 = v27;
      unint64_t v168 = a8;
      uint64_t v184 = a6;
      uint64_t v185 = v98;
      unint64_t v173 = a5;
      do
      {
        if (v186) {
          id v115 = (id)MEMORY[0x245637160](v99, v96);
        }
        else {
          id v115 = *(id *)(v96 + 8 * v99 + 32);
        }
        uint64_t v116 = v115;
        if (!objc_msgSend(v115, sel_hasCoveredDateRangeRawValue)) {
          goto LABEL_46;
        }
        id v117 = objc_msgSend(v116, sel_coveredDateRangeRawValue);
        if (!v117) {
          goto LABEL_46;
        }
        uint64_t v118 = v117;
        uint64_t v119 = sub_241CDB0D0();
        uint64_t v121 = v120;

        int v122 = MEMORY[0x2456352D0](v119, v121);
        if (v122 == 5)
        {
          HKCodableSummaryTrendValue.engineOutput.getter(v97);
          uint64_t v149 = v183;
          if (((uint64_t (*)(uint64_t, uint64_t, uint64_t))v170->isa)(v97, 1, v183))
          {
            uint64_t v150 = v181;
            sub_241BD9430(v181, &qword_26B032218, MEMORY[0x263F47048]);

            sub_241BD9430(v97, &qword_26B032228, MEMORY[0x263F47050]);
            uint64_t v151 = (uint64_t)v179;
            v167(v179, 1, 1, v169);
          }
          else
          {
            uint64_t v153 = v176;
            (*v164)(v176, v97, v149);
            sub_241BD9430(v97, &qword_26B032228, MEMORY[0x263F47050]);
            uint64_t v151 = (uint64_t)v179;
            sub_241CD9B70();

            (*v163)(v153, v149);
            uint64_t v150 = v181;
            sub_241BD9430(v181, &qword_26B032218, MEMORY[0x263F47048]);
          }
          unint64_t v96 = (unint64_t)v193;
          sub_241BDFA58(v151, v150, &qword_26B032218, MEMORY[0x263F47048]);
          id v87 = v188;
          uint64_t v97 = (uint64_t)v189;
          goto LABEL_36;
        }
        uint64_t v123 = v183;
        id v87 = v188;
        if (v122 == 4)
        {
          uint64_t v124 = v177;
          HKCodableSummaryTrendValue.engineOutput.getter(v177);
          if (((uint64_t (*)(uint64_t, uint64_t, uint64_t))v170->isa)(v124, 1, v123))
          {
            uint64_t v125 = v180;
            sub_241BD9430(v180, &qword_26B032218, MEMORY[0x263F47048]);

            sub_241BD9430(v124, &qword_26B032228, MEMORY[0x263F47050]);
            uint64_t v126 = (uint64_t)v178;
            v167(v178, 1, 1, v169);
          }
          else
          {
            uint64_t v152 = v176;
            (*v164)(v176, v124, v123);
            sub_241BD9430(v124, &qword_26B032228, MEMORY[0x263F47050]);
            uint64_t v126 = (uint64_t)v178;
            sub_241CD9B70();

            (*v163)(v152, v123);
            uint64_t v125 = v180;
            sub_241BD9430(v180, &qword_26B032218, MEMORY[0x263F47048]);
          }
          sub_241BDFA58(v126, v125, &qword_26B032218, MEMORY[0x263F47048]);
          id v87 = v188;
        }
        else
        {
LABEL_46:
          sub_241CDA180();
          swift_bridgeObjectRetain_n();
          id v127 = a6;
          swift_bridgeObjectRetain_n();
          id v128 = v116;
          id v129 = v127;
          id v130 = v128;
          uint64_t v131 = sub_241CDA190();
          uint64_t v132 = v87;
          os_log_type_t v133 = sub_241CDB670();
          if (os_log_type_enabled(v131, v133))
          {
            uint64_t v134 = swift_slowAlloc();
            uint64_t v174 = swift_slowAlloc();
            uint64_t v195 = (char *)v174;
            *(_DWORD *)uint64_t v134 = v172;
            swift_bridgeObjectRetain();
            *(void *)(v134 + 4) = sub_241A33FE4(v191, a8, (uint64_t *)&v195);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v134 + 12) = 2080;
            id v135 = objc_msgSend(v129, sel_sensitiveLoggingIdentifier);
            uint64_t v136 = sub_241CDB0D0();
            unint64_t v138 = v137;

            *(void *)(v134 + 14) = sub_241A33FE4(v136, v138, (uint64_t *)&v195);
            unint64_t v139 = v173;
            swift_bridgeObjectRelease();
            *(_WORD *)(v134 + 22) = 2080;
            swift_bridgeObjectRetain();
            *(void *)(v134 + 24) = sub_241A33FE4(v192, v139, (uint64_t *)&v195);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v134 + 32) = 2080;
            if (objc_msgSend(v130, sel_hasCoveredDateRangeRawValue)
              && (id v140 = objc_msgSend(v130, sel_coveredDateRangeRawValue)) != 0)
            {
              uint64_t v141 = v140;
              uint64_t v142 = sub_241CDB0D0();
              uint64_t v144 = v143;

              char v145 = MEMORY[0x2456352D0](v142, v144);
            }
            else
            {
              char v145 = 6;
            }
            a6 = v184;
            LOBYTE(v194) = v145;
            sub_241A94320(0, &qword_268D426F0);
            uint64_t v146 = sub_241CDB120();
            *(void *)(v134 + 34) = sub_241A33FE4(v146, v147, (uint64_t *)&v195);

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_241A23000, v131, v133, "%s_%s: found unexpected covered date range for unique id %s: %s", (uint8_t *)v134, 0x2Au);
            uint64_t v148 = v174;
            swift_arrayDestroy();
            MEMORY[0x245637F20](v148, -1, -1);
            MEMORY[0x245637F20](v134, -1, -1);

            uint64_t v27 = v187;
            id v87 = v188;
            (*(void (**)(char *, uint64_t))v175)(v188, v187);
            a8 = v168;
            uint64_t v97 = (uint64_t)v189;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();

            (*(void (**)(char *, uint64_t))v175)(v132, v27);
            uint64_t v97 = (uint64_t)v189;
            id v87 = v132;
          }
        }
        unint64_t v96 = (unint64_t)v193;
LABEL_36:
        ++v99;
      }
      while (v185 != v99);
    }
  }
  swift_bridgeObjectRelease();

  id v161 = (uint64_t (*)(uint64_t))MEMORY[0x263F47048];
  sub_241BDFA58(v180, v190, &qword_26B032218, MEMORY[0x263F47048]);
  return sub_241BDFA58(v181, v182, &qword_26B032218, v161);
}

uint64_t sub_241BDB490(uint64_t a1, void *a2, uint64_t a3, void *a4, NSObject *a5, uint64_t a6, uint64_t a7, uint64_t a8, int *a9, uint64_t a10, unint64_t a11)
{
  uint64_t v225 = (void *)a7;
  uint64_t v209 = a5;
  uint64_t v195 = a4;
  id v214 = a2;
  uint64_t v202 = a1;
  unint64_t v13 = a11;
  uint64_t v224 = a10;
  uint64_t v208 = a9;
  uint64_t v213 = sub_241CD6D00();
  uint64_t v201 = *(void *)(v213 - 8);
  MEMORY[0x270FA5388](v213);
  id v200 = (char *)&v183 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x263F47048];
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35C0C(0, &qword_26B032218, MEMORY[0x263F47048], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v199 = (uint64_t)&v183 - v18;
  sub_241BDFB34();
  uint64_t v222 = v19;
  uint64_t v206 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v198 = (char *)&v183 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v212 = (uint64_t (*)(uint64_t))sub_241CD9B00();
  int v220 = (char *)*((void *)v212 - 1);
  uint64_t v21 = MEMORY[0x270FA5388](v212);
  uint64_t v194 = (char *)&v183 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v185 = (char *)&v183 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v193 = (uint64_t)&v183 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v187 = (char *)&v183 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v211 = (int *)((char *)&v183 - v30);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v189 = (char *)&v183 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v196 = (unint64_t *)((char *)&v183 - v33);
  sub_241A35C0C(0, &qword_26B032228, MEMORY[0x263F47050], v16);
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  uint64_t v197 = (uint64_t)&v183 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v186 = (uint64_t)&v183 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v188 = (char *)&v183 - v40;
  MEMORY[0x270FA5388](v39);
  uint64_t v223 = (uint64_t)&v183 - v41;
  int v42 = (uint64_t (*)(uint64_t))sub_241CDA1A0();
  uint64_t v217 = *((void *)v42 - 1);
  uint64_t v218 = v42;
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  uint64_t v190 = (char *)&v183 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v191 = (char *)&v183 - v46;
  MEMORY[0x270FA5388](v45);
  v216 = (void (*)(uint64_t *, uint64_t (*)(uint64_t)))((char *)&v183 - v47);
  sub_241A558EC();
  uint64_t v226 = v48;
  uint64_t v49 = *((void *)v48 - 1);
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v52 = (char *)&v183 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v50);
  uint64_t v54 = (char *)&v183 - v53;
  sub_241BDFC08(0, &qword_26B032210, &qword_26B032218, v15);
  uint64_t v56 = MEMORY[0x270FA5388](v55);
  uint64_t v205 = (uint64_t)&v183 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v203 = (uint64_t)&v183 - v59;
  uint64_t v204 = MEMORY[0x270FA5388](v58);
  id v61 = (void (*)(unsigned char *, uint64_t, uint64_t))((char *)&v183 + *(int *)(v204 + 48) - v60);
  v221 = (void (*)(unsigned char *, uint64_t, uint64_t))((char *)&v183 - v60);
  sub_241BDFC84(a6, (uint64_t)&v183 - v60, &qword_26B032218, v15);
  uint64_t v207 = v61;
  sub_241BDFC84((uint64_t)v225, (uint64_t)v61, &qword_26B032218, v15);
  uint64_t v62 = (unint64_t *)MEMORY[0x263F8EE78];
  v228 = (unint64_t *)MEMORY[0x263F8EE78];
  id v63 = *(NSObject **)(a3 + 16);
  swift_bridgeObjectRetain();
  v219 = (void (*)())a3;
  unint64_t v210 = a11;
  uint64_t v192 = v63;
  if (v63)
  {
    uint64_t v64 = *(unsigned __int8 *)(v49 + 80);
    uint64_t v65 = *(void *)(v49 + 72);
    uint64_t v225 = (void *)((v64 + 32) & ~v64);
    uint64_t v66 = (uint64_t)v225 + a3;
    uint64_t v67 = (unint64_t *)MEMORY[0x263F8EE78];
    uint64_t v68 = v63;
    do
    {
      sub_241BDF994(v66, (uint64_t)v54, (uint64_t (*)(void))sub_241A558EC);
      if (v54[v226[12] + 8])
      {
        sub_241BDF9FC((uint64_t)v54);
      }
      else
      {
        sub_241BDF83C((uint64_t)v54, (uint64_t)v52);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_241A523BC(0, v67[2] + 1, 1);
        }
        uint64_t v67 = v228;
        unint64_t v70 = v228[2];
        unint64_t v69 = v228[3];
        if (v70 >= v69 >> 1)
        {
          sub_241A523BC(v69 > 1, v70 + 1, 1);
          uint64_t v67 = v228;
        }
        v67[2] = v70 + 1;
        sub_241BDF83C((uint64_t)v52, (uint64_t)v225 + (void)v67 + v70 * v65);
      }
      v66 += v65;
      uint64_t v68 = ((char *)v68 - 1);
    }
    while (v68);
    uint64_t v62 = v228;
    unint64_t v13 = v210;
  }
  swift_bridgeObjectRelease();
  id v71 = (uint64_t *)v216;
  sub_241CDA180();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v72 = v208;
  swift_retain_n();
  uint64_t v73 = v72;
  id v74 = sub_241CDA190();
  os_log_type_t v75 = sub_241CDB670();
  int v76 = v75;
  BOOL v77 = os_log_type_enabled(v74, v75);
  uint64_t v225 = v62;
  uint64_t v226 = v73;
  if (v77)
  {
    uint64_t v78 = swift_slowAlloc();
    uint64_t v208 = (int *)swift_slowAlloc();
    v228 = (unint64_t *)v208;
    *(_DWORD *)uint64_t v78 = 136315906;
    swift_bridgeObjectRetain();
    v227 = sub_241A33FE4(v224, v13, (uint64_t *)&v228);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v78 + 12) = 2080;
    id v79 = objc_msgSend(v73, sel_sensitiveLoggingIdentifier);
    LODWORD(v184) = v76;
    uint64_t v80 = v73;
    id v81 = v79;
    uint64_t v82 = sub_241CDB0D0();
    unint64_t v84 = v83;

    v227 = sub_241A33FE4(v82, v84, (uint64_t *)&v228);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v78 + 22) = 2048;
    unint64_t v85 = v62[2];
    swift_release();
    v227 = v85;
    sub_241CDBBF0();
    swift_release();
    *(_WORD *)(v78 + 32) = 2048;
    unint64_t v13 = v210;
    swift_bridgeObjectRelease();
    v227 = v192;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v74, (os_log_type_t)v184, "%s_%s: Computing trends with data for %ld days based on %ld total days", (uint8_t *)v78, 0x2Au);
    unint64_t v86 = v208;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v86, -1, -1);
    MEMORY[0x245637F20](v78, -1, -1);

    id v87 = *(void (**)(uint64_t *, uint64_t (*)(uint64_t)))(v217 + 8);
    v87((uint64_t *)v216, v218);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    id v87 = *(void (**)(uint64_t *, uint64_t (*)(uint64_t)))(v217 + 8);
    v87(v71, v218);
  }
  uint64_t v89 = v222;
  uint64_t v88 = v223;
  uint64_t v90 = v211;
  uint64_t v91 = v212;
  uint64_t v92 = (uint64_t)v220;
  id v93 = v209;
  uint64_t v94 = v224;
  if (v209[2].isa && (unint64_t v95 = sub_241C0B70C(4), (v96 & 1) != 0))
  {
    v216 = v87;
    uint64_t v97 = *(void (**)(char *, char *, uint64_t (*)(uint64_t)))(v92 + 16);
    uint64_t v98 = v189;
    v97(v189, (char *)v93[7].isa + *(void *)(v92 + 72) * v95, v91);
    uint64_t v99 = (uint64_t)v196;
    (*(void (**)(unint64_t *, char *, uint64_t (*)(uint64_t)))(v92 + 32))(v196, v98, v91);
    unint64_t v100 = v191;
    sub_241CDA180();
    v97((char *)v90, (char *)v99, v91);
    swift_bridgeObjectRetain_n();
    uint64_t v208 = v226;
    id v101 = sub_241CDA190();
    os_log_type_t v102 = sub_241CDB630();
    uint64_t v192 = v101;
    LODWORD(v189) = v102;
    if (os_log_type_enabled(v101, v102))
    {
      uint64_t v103 = swift_slowAlloc();
      uint64_t v184 = (unint64_t *)swift_slowAlloc();
      v228 = v184;
      *(_DWORD *)uint64_t v103 = 136315650;
      unint64_t v104 = v13;
      swift_bridgeObjectRetain();
      v227 = sub_241A33FE4(v224, v13, (uint64_t *)&v228);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v103 + 12) = 2080;
      id v105 = v208;
      id v106 = objc_msgSend(v208, sel_sensitiveLoggingIdentifier, v103 + 14);
      uint64_t v107 = sub_241CDB0D0();
      unint64_t v109 = v108;

      uint64_t v110 = v107;
      uint64_t v91 = v212;
      v227 = sub_241A33FE4(v110, v109, (uint64_t *)&v228);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v103 + 22) = 2080;
      unint64_t v111 = v211;
      v97(v187, (char *)v211, v91);
      uint64_t v112 = sub_241CDB120();
      v227 = sub_241A33FE4(v112, v113, (uint64_t *)&v228);
      uint64_t v89 = v222;
      uint64_t v94 = v224;
      sub_241CDBBF0();
      unint64_t v13 = v104;
      swift_bridgeObjectRelease();
      char v114 = (void (*)(int *, uint64_t (*)(uint64_t)))*((void *)v220 + 1);
      v114(v111, v91);
      id v115 = v192;
      _os_log_impl(&dword_241A23000, v192, (os_log_type_t)v189, "%s_%s: Retrieved month parameters=%s", (uint8_t *)v103, 0x20u);
      uint64_t v116 = v184;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v116, -1, -1);
      MEMORY[0x245637F20](v103, -1, -1);

      v216((uint64_t *)v191, v218);
      id v117 = v195;
      uint64_t v118 = (uint64_t)v188;
    }
    else
    {
      uint64_t v143 = v208;

      swift_bridgeObjectRelease_n();
      char v114 = *(void (**)(int *, uint64_t (*)(uint64_t)))(v92 + 8);
      v114(v90, v91);

      v216((uint64_t *)v100, v218);
      id v117 = v195;
      uint64_t v118 = (uint64_t)v188;
      uint64_t v94 = v224;
    }
    uint64_t v144 = (uint64_t)v196;
    char v145 = v221;
    uint64_t v146 = v215;
    sub_241BDD854(v117, (void (*)(unsigned char *, uint64_t))v219, 4, (uint64_t)v196, v221, v208, v94, v13, v118);
    if (v146)
    {
      swift_release();
      v114((int *)v144, v91);
      return sub_241BDFAD8((uint64_t)v145, &qword_26B032210, &qword_26B032218, MEMORY[0x263F47048]);
    }
    uint64_t v215 = 0;
    uint64_t v92 = (uint64_t)v220;
    v114((int *)v144, v91);
    uint64_t v153 = sub_241CD9B80();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56))(v118, 0, 1, v153);
    uint64_t v88 = v223;
    sub_241BDFA58(v118, v223, &qword_26B032228, MEMORY[0x263F47050]);
    id v93 = v209;
    id v87 = v216;
    if (!v209[2].isa) {
      goto LABEL_31;
    }
  }
  else
  {
    uint64_t v119 = sub_241CD9B80();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v88, 1, 1, v119);
    if (!v93[2].isa)
    {
LABEL_31:
      uint64_t v154 = v89;
      uint64_t v155 = sub_241CD9B80();
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 56))(v214, 1, 1, v155);
      goto LABEL_32;
    }
  }
  unint64_t v120 = sub_241C0B70C(5);
  if ((v121 & 1) == 0) {
    goto LABEL_31;
  }
  v216 = v87;
  int v122 = *(void (**)(char *, char *, uint64_t (*)(uint64_t)))(v92 + 16);
  uint64_t v123 = v185;
  v122(v185, (char *)v93[7].isa + *(void *)(v92 + 72) * v120, v91);
  uint64_t v124 = v193;
  (*(void (**)(uint64_t, char *, uint64_t (*)(uint64_t)))(v92 + 32))(v193, v123, v91);
  uint64_t v125 = v190;
  sub_241CDA180();
  v122(v194, (char *)v124, v91);
  swift_bridgeObjectRetain_n();
  uint64_t v211 = v226;
  uint64_t v126 = sub_241CDA190();
  os_log_type_t v127 = sub_241CDB630();
  uint64_t v209 = v126;
  LODWORD(v208) = v127;
  if (os_log_type_enabled(v126, v127))
  {
    uint64_t v128 = swift_slowAlloc();
    uint64_t v196 = (unint64_t *)swift_slowAlloc();
    v228 = v196;
    *(_DWORD *)uint64_t v128 = 136315650;
    unint64_t v129 = v13;
    swift_bridgeObjectRetain();
    v227 = sub_241A33FE4(v94, v13, (uint64_t *)&v228);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v128 + 12) = 2080;
    uint64_t v192 = (v128 + 14);
    id v130 = v211;
    id v131 = objc_msgSend(v211, sel_sensitiveLoggingIdentifier);
    uint64_t v132 = sub_241CDB0D0();
    unint64_t v134 = v133;

    uint64_t v135 = v132;
    uint64_t v91 = v212;
    v227 = sub_241A33FE4(v135, v134, (uint64_t *)&v228);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v128 + 22) = 2080;
    uint64_t v136 = v194;
    v122(v187, v194, v91);
    uint64_t v137 = sub_241CDB120();
    v227 = sub_241A33FE4(v137, v138, (uint64_t *)&v228);
    uint64_t v89 = v222;
    uint64_t v94 = v224;
    sub_241CDBBF0();
    unint64_t v13 = v129;
    swift_bridgeObjectRelease();
    unint64_t v139 = (void (*)(char *, uint64_t (*)(uint64_t)))*((void *)v220 + 1);
    v139(v136, v91);
    id v140 = v209;
    _os_log_impl(&dword_241A23000, v209, (os_log_type_t)v208, "%s_%s: Retrieved half year parameters=%s", (uint8_t *)v128, 0x20u);
    uint64_t v141 = (uint64_t)v196;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v141, -1, -1);
    MEMORY[0x245637F20](v128, -1, -1);

    uint64_t v142 = v190;
  }
  else
  {
    unint64_t v147 = v211;

    swift_bridgeObjectRelease_n();
    unint64_t v139 = *(void (**)(char *, uint64_t (*)(uint64_t)))(v92 + 8);
    v139(v194, v91);

    uint64_t v142 = v125;
  }
  v216((uint64_t *)v142, v218);
  uint64_t v148 = v186;
  uint64_t v149 = v193;
  uint64_t v150 = v215;
  sub_241BDD854(v195, (void (*)(unsigned char *, uint64_t))v219, 5, v193, v207, v211, v94, v13, v186);
  uint64_t v151 = v148;
  char v145 = v221;
  if (v150)
  {
    swift_release();
    v139((char *)v149, v91);
    sub_241BD9430(v223, &qword_26B032228, MEMORY[0x263F47050]);
    return sub_241BDFAD8((uint64_t)v145, &qword_26B032210, &qword_26B032218, MEMORY[0x263F47048]);
  }
  uint64_t v154 = v89;
  uint64_t v215 = 0;
  v139((char *)v149, v91);
  uint64_t v182 = sub_241CD9B80();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v182 - 8) + 56))(v151, 0, 1, v182);
  sub_241BDFA58(v151, (uint64_t)v214, &qword_26B032228, MEMORY[0x263F47050]);
  uint64_t v88 = v223;
LABEL_32:
  sub_241A35C0C(0, &qword_26B034F78, (uint64_t (*)(uint64_t))sub_241BDFB34, MEMORY[0x263F8E0F8]);
  v219 = *(void (**)())(v206 + 72);
  unint64_t v156 = (*(unsigned __int8 *)(v206 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80);
  uint64_t v157 = swift_allocObject();
  uint64_t v224 = v157;
  *(_OWORD *)(v157 + 16) = xmmword_241CEB720;
  uint64_t v158 = v157 + v156;
  uint64_t v159 = *(int *)(v154 + 48);
  uint64_t v217 = v158 + *(int *)(v154 + 64);
  uint64_t v218 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
  sub_241BDFC84(v88, v158, &qword_26B032228, MEMORY[0x263F47050]);
  *(unsigned char *)(v158 + v159) = 4;
  uint64_t v160 = v204;
  uint64_t v161 = v203;
  int v220 = (char *)(v203 + *(int *)(v204 + 48));
  uint64_t v162 = (uint64_t)v220;
  v163 = (uint64_t (*)(uint64_t))MEMORY[0x263F47048];
  uint64_t v164 = v221;
  sub_241BDFC84((uint64_t)v221, v203, &qword_26B032218, MEMORY[0x263F47048]);
  id v165 = v207;
  sub_241BDFC84((uint64_t)v207, v162, &qword_26B032218, v163);
  sub_241BDFA58(v161, v217, &qword_26B032218, v163);
  uint64_t v217 = v158;
  uint64_t v166 = (uint64_t (*)(uint64_t))((char *)v219 + v158);
  uint64_t v167 = *(int *)(v154 + 48);
  v219 = (void (*)())((char *)v166 + *(int *)(v154 + 64));
  sub_241BDFC84((uint64_t)v214, (uint64_t)v166, &qword_26B032228, v218);
  uint64_t v218 = v166;
  *((unsigned char *)v166 + v167) = 5;
  uint64_t v168 = v205;
  uint64_t v169 = v205 + *(int *)(v160 + 48);
  sub_241BDFC84((uint64_t)v164, v205, &qword_26B032218, v163);
  sub_241BDFC84((uint64_t)v165, v169, &qword_26B032218, v163);
  sub_241BDFA58(v169, (uint64_t)v219, &qword_26B032218, v163);
  sub_241BD9430(v168, &qword_26B032218, v163);
  uint64_t result = sub_241BD9430((uint64_t)v220, &qword_26B032218, v163);
  if (*(void *)(v224 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v216 = (void (*)(uint64_t *, uint64_t (*)(uint64_t)))v225[2];
    os_log_t v170 = v216;
    uint64_t v171 = (uint64_t)v198;
    int v220 = &v198[*(int *)(v222 + 64)];
    uint64_t v172 = (uint64_t)v220;
    uint64_t v173 = *(int *)(v222 + 48);
    uint64_t v222 = v173;
    uint64_t v174 = self;
    id v214 = v174;
    v219 = sub_241BDFB34;
    sub_241BDF994(v217, v171, (uint64_t (*)(void))sub_241BDFB34);
    LODWORD(v173) = *(unsigned __int8 *)(v171 + v173);
    uint64_t v212 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
    uint64_t v175 = v197;
    sub_241BDFA58(v171, v197, &qword_26B032228, MEMORY[0x263F47050]);
    uint64_t v176 = (uint64_t (*)(uint64_t))MEMORY[0x263F47048];
    uint64_t v177 = v199;
    sub_241BDFA58(v172, v199, &qword_26B032218, MEMORY[0x263F47048]);
    id v178 = objc_msgSend(v174, sel_standardUserDefaults);
    sub_241BDE01C(v226, v177, v175, v173, (uint64_t)v170, v178);

    uint64_t v179 = (uint64_t)v200;
    sub_241CD6CF0();
    sub_241BC1F98(v179);
    swift_release();
    uint64_t v217 = *(void *)(v201 + 8);
    ((void (*)(uint64_t, uint64_t))v217)(v179, v213);
    sub_241BD9430(v177, &qword_26B032218, v176);
    uint64_t v180 = v212;
    sub_241BD9430(v175, &qword_26B032228, v212);
    sub_241BDF994((uint64_t)v218, v171, (uint64_t (*)(void))v219);
    LODWORD(v222) = *(unsigned __int8 *)(v171 + v222);
    sub_241BDFA58(v171, v175, &qword_26B032228, v180);
    sub_241BDFA58((uint64_t)v220, v177, &qword_26B032218, v176);
    id v181 = objc_msgSend(v214, sel_standardUserDefaults);
    sub_241BDE01C(v226, v177, v175, v222, (uint64_t)v216, v181);

    sub_241CD6CF0();
    sub_241BC1F98(v179);
    swift_release();
    ((void (*)(uint64_t, uint64_t))v217)(v179, v213);
    sub_241BD9430(v177, &qword_26B032218, v176);
    sub_241BD9430(v175, &qword_26B032228, v180);
    swift_bridgeObjectRelease();
    swift_release();
    sub_241BDFAD8((uint64_t)v221, &qword_26B032210, &qword_26B032218, v176);
    return sub_241BDFA58(v223, v202, &qword_26B032228, v180);
  }
  return result;
}

id sub_241BDCD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241A558EC();
  uint64_t v97 = *((void *)v6 - 1);
  uint64_t v98 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v86 - v10;
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
  unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35C0C(0, &qword_26B032228, MEMORY[0x263F47050], MEMORY[0x263F8D8F0]);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v92 = (uint64_t)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v90 = (uint64_t)&v86 - v17;
  sub_241A35C0C(0, &qword_26B0321D0, MEMORY[0x263F46C00], v13);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v89 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v86 - v21;
  sub_241BDFC08(0, &qword_26B032220, &qword_26B032228, v12);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v91 = (uint64_t)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v93 = (uint64_t)&v86 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (void (**)(uint64_t, uint64_t))((char *)&v86 - v29);
  uint64_t v95 = MEMORY[0x270FA5388](v28);
  uint64_t v96 = (uint64_t)&v86 - v31;
  uint64_t v32 = (char *)&v86 + *(int *)(v95 + 48) - v31;
  sub_241BDFC84(a1, (uint64_t)&v86 - v31, &qword_26B032228, v12);
  uint64_t v94 = v32;
  sub_241BDFC84(a2, (uint64_t)v32, &qword_26B032228, v12);
  uint64_t v33 = *(void *)(a3 + 16);
  unint64_t v34 = MEMORY[0x263F8EE78];
  if (!v33)
  {
LABEL_6:
    uint64_t v47 = (uint64_t)v30 + *(int *)(v95 + 48);
    unint64_t v48 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
    sub_241BDFC84(v96, (uint64_t)v30, &qword_26B032228, MEMORY[0x263F47050]);
    sub_241BDFC84((uint64_t)v94, v47, &qword_26B032228, v48);
    uint64_t v49 = v90;
    sub_241BDFA58((uint64_t)v30, v90, &qword_26B032228, v48);
    uint64_t v50 = sub_241CD9B80();
    uint64_t v51 = *(char **)(v50 - 8);
    uint64_t v52 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)v51 + 6);
    int v53 = v52(v49, 1, v50);
    id v87 = (void (**)(uint64_t, uint64_t))v51;
    uint64_t v88 = (char *)v34;
    uint64_t v97 = v50;
    uint64_t v98 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v52;
    if (v53 == 1)
    {
      uint64_t v54 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
      sub_241BD9430(v47, &qword_26B032228, MEMORY[0x263F47050]);
      sub_241BD9430(v49, &qword_26B032228, v54);
      uint64_t v55 = sub_241CD9940();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v22, 1, 1, v55);
    }
    else
    {
      sub_241CD9B50();
      (*((void (**)(uint64_t, uint64_t))v51 + 1))(v49, v50);
      sub_241BD9430(v47, &qword_26B032228, MEMORY[0x263F47050]);
      uint64_t v56 = sub_241CD9940();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v22, 1, v56) != 1)
      {
        sub_241BD9430((uint64_t)v22, &qword_26B0321D0, MEMORY[0x263F46C00]);
        swift_bridgeObjectRetain();
        unint64_t v57 = v34;
LABEL_11:
        uint64_t v58 = sub_241A313AC(0, &qword_26B0303F8);
        uint64_t v59 = v95;
        uint64_t v60 = v96;
        uint64_t v61 = v93;
        uint64_t v62 = v93 + *(int *)(v95 + 48);
        id v63 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
        sub_241BDFC84(v96, v93, &qword_26B032228, MEMORY[0x263F47050]);
        uint64_t v64 = (uint64_t)v94;
        sub_241BDFC84((uint64_t)v94, v62, &qword_26B032228, v63);
        uint64_t v90 = v58;
        id v65 = HKCodableSummaryTrendValue.init(engineOutput:coveredDateRange:dataPresencePoints:)(v61, 4, v57);
        sub_241BD9430(v62, &qword_26B032228, v63);
        uint64_t v66 = v91;
        uint64_t v67 = v91 + *(int *)(v59 + 48);
        sub_241BDFC84(v60, v91, &qword_26B032228, v63);
        sub_241BDFC84(v64, v67, &qword_26B032228, v63);
        uint64_t v68 = v92;
        sub_241BDFA58(v67, v92, &qword_26B032228, v63);
        uint64_t v69 = v97;
        if (v98(v68, 1, v97) == 1)
        {
          unint64_t v70 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
          sub_241BD9430(v66, &qword_26B032228, MEMORY[0x263F47050]);
          sub_241BD9430(v68, &qword_26B032228, v70);
          uint64_t v71 = sub_241CD9940();
          uint64_t v72 = (uint64_t)v89;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v89, 1, 1, v71);
          unint64_t v73 = MEMORY[0x263F8EE78];
        }
        else
        {
          uint64_t v72 = (uint64_t)v89;
          sub_241CD9B50();
          v87[1](v68, v69);
          sub_241BD9430(v66, &qword_26B032228, MEMORY[0x263F47050]);
          uint64_t v74 = sub_241CD9940();
          int v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 48))(v72, 1, v74);
          unint64_t v73 = MEMORY[0x263F8EE78];
          unint64_t v76 = (unint64_t)v88;
          if (v75 != 1)
          {
            BOOL v77 = v65;
            goto LABEL_16;
          }
        }
        BOOL v77 = v65;
        swift_bridgeObjectRelease();
        unint64_t v76 = MEMORY[0x263F8EE78];
LABEL_16:
        sub_241BD9430(v72, &qword_26B0321D0, MEMORY[0x263F46C00]);
        uint64_t v78 = v93;
        uint64_t v79 = v93 + *(int *)(v95 + 48);
        uint64_t v80 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
        sub_241BDFC84(v96, v93, &qword_26B032228, MEMORY[0x263F47050]);
        sub_241BDFC84((uint64_t)v94, v79, &qword_26B032228, v80);
        id v81 = HKCodableSummaryTrendValue.init(engineOutput:coveredDateRange:dataPresencePoints:)(v79, 5, v76);
        sub_241BD9430(v78, &qword_26B032228, v80);
        unint64_t v99 = v73;
        id v82 = v77;
        id v83 = v81;
        MEMORY[0x2456365D0]();
        if (*(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241CDB2F0();
        }
        sub_241CDB310();
        sub_241CDB2E0();
        id v84 = v83;
        MEMORY[0x2456365D0]();
        if (*(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241CDB2F0();
        }
        sub_241CDB310();
        sub_241CDB2E0();
        unint64_t v85 = v99;

        sub_241BDFAD8(v96, &qword_26B032220, &qword_26B032228, MEMORY[0x263F47050]);
        return (id)v85;
      }
    }
    sub_241BD9430((uint64_t)v22, &qword_26B0321D0, MEMORY[0x263F46C00]);
    unint64_t v57 = MEMORY[0x263F8EE78];
    goto LABEL_11;
  }
  id v87 = v30;
  uint64_t v88 = v22;
  unint64_t v99 = MEMORY[0x263F8EE78];
  sub_241CDBE80();
  uint64_t v35 = a3 + ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80));
  uint64_t v97 = *(void *)(v97 + 72);
  while (1)
  {
    sub_241BDF994(v35, (uint64_t)v11, (uint64_t (*)(void))sub_241A558EC);
    uint64_t v36 = *((int *)v98 + 12);
    uint64_t v37 = &v9[v36];
    uint64_t v38 = &v11[v36];
    uint64_t v39 = sub_241CD6810();
    uint64_t v40 = *(void *)(v39 - 8);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v9, v11, v39);
    uint64_t v41 = *(void *)v38;
    int v42 = v38[8];
    *(void *)uint64_t v37 = v41;
    v37[8] = v42;
    id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46678]), sel_init);
    if (!result) {
      break;
    }
    uint64_t v44 = result;
    sub_241A313AC(0, &qword_26B0303E8);
    id v45 = v44;
    uint64_t v46 = (void *)sub_241CDB930();
    objc_msgSend(v45, sel_setDateInterval_, v46);

    objc_msgSend(v45, sel_setDataPresent_, v42 ^ 1u);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v39);
    sub_241BDF9FC((uint64_t)v11);
    sub_241CDBE60();
    sub_241CDBE90();
    sub_241CDBEA0();
    sub_241CDBE70();
    v35 += v97;
    if (!--v33)
    {
      unint64_t v34 = v99;
      uint64_t v30 = v87;
      uint64_t v22 = v88;
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_241BDD854@<X0>(void *a1@<X0>, void (*a2)(unsigned char *, uint64_t)@<X1>, int a3@<W2>, uint64_t a4@<X3>, void (*a5)(unsigned char *, uint64_t, uint64_t)@<X4>, void *a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>)
{
  unint64_t v91 = a8;
  id v81 = a6;
  uint64_t v82 = a7;
  uint64_t v88 = a4;
  uint64_t v89 = a5;
  int v83 = a3;
  id v87 = a2;
  uint64_t v92 = sub_241CD9B80();
  uint64_t v86 = *(void *)(v92 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v92);
  unint64_t v13 = &v73[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = &v73[-v15];
  MEMORY[0x270FA5388](v14);
  id v84 = &v73[-v17];
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = &v73[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v20);
  unint64_t v85 = &v73[-v23];
  sub_241A311E0(a1, a1[3]);
  uint64_t v24 = v90;
  uint64_t result = sub_241CD9C50();
  if (!v24)
  {
    unint64_t v76 = v13;
    BOOL v77 = v16;
    uint64_t v90 = 0;
    uint64_t v79 = v22;
    uint64_t v80 = v19;
    uint64_t v78 = v18;
    sub_241CDA180();
    uint64_t v26 = v86;
    uint64_t v27 = (unsigned char *)(v86 + 16);
    uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v86 + 16);
    uint64_t v88 = a9;
    v28(v84, a9, v92);
    swift_bridgeObjectRetain_n();
    id v29 = v81;
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB670();
    int v32 = v31;
    BOOL v33 = os_log_type_enabled(v30, v31);
    uint64_t v89 = v28;
    if (v33)
    {
      uint64_t v34 = swift_slowAlloc();
      os_log_t v75 = v30;
      uint64_t v35 = v34;
      id v81 = (id)swift_slowAlloc();
      uint64_t v94 = (uint64_t)v81;
      *(_DWORD *)uint64_t v35 = 136315906;
      unint64_t v36 = v91;
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_241A33FE4(v82, v36, &v94);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      int v74 = v32;
      *(_WORD *)(v35 + 12) = 2080;
      id v37 = objc_msgSend(v29, sel_sensitiveLoggingIdentifier);
      uint64_t v38 = v27;
      uint64_t v39 = sub_241CDB0D0();
      unint64_t v41 = v40;

      uint64_t v42 = v39;
      uint64_t v27 = v38;
      uint64_t v93 = sub_241A33FE4(v42, v41, &v94);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 22) = 2080;
      uint64_t v43 = sub_241CD9FA0();
      uint64_t v93 = sub_241A33FE4(v43, v44, &v94);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 32) = 2080;
      id v45 = v84;
      uint64_t v46 = sub_241C13954();
      uint64_t v93 = sub_241A33FE4(v46, v47, &v94);
      uint64_t v28 = v89;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      id v87 = *(void (**)(unsigned char *, uint64_t))(v86 + 8);
      v87(v45, v92);
      os_log_t v48 = v75;
      _os_log_impl(&dword_241A23000, v75, (os_log_type_t)v74, "%s_%s: trend engine returned result for %s (summarized): %s", (uint8_t *)v35, 0x2Au);
      id v49 = v81;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      id v87 = *(void (**)(unsigned char *, uint64_t))(v26 + 8);
      v87(v84, v92);
    }
    uint64_t v50 = *(void (**)(unsigned char *, uint64_t))(v80 + 8);
    uint64_t v51 = v78;
    v50(v85, v78);
    uint64_t v52 = v79;
    int v53 = v77;
    sub_241CDA180();
    v28(v53, v88, v92);
    swift_bridgeObjectRetain_n();
    id v54 = v29;
    uint64_t v55 = v53;
    uint64_t v56 = sub_241CDA190();
    unint64_t v57 = v27;
    os_log_type_t v58 = sub_241CDB670();
    if (os_log_type_enabled(v56, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      unint64_t v85 = v57;
      uint64_t v60 = v59;
      uint64_t v88 = swift_slowAlloc();
      uint64_t v94 = v88;
      *(_DWORD *)uint64_t v60 = 136315906;
      unint64_t v61 = v91;
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_241A33FE4(v82, v61, &v94);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v60 + 12) = 2080;
      id v62 = objc_msgSend(v54, sel_sensitiveLoggingIdentifier);
      uint64_t v63 = sub_241CDB0D0();
      unint64_t v65 = v64;

      uint64_t v93 = sub_241A33FE4(v63, v65, &v94);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 22) = 2080;
      uint64_t v66 = sub_241CD9FA0();
      uint64_t v93 = sub_241A33FE4(v66, v67, &v94);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 32) = 2080;
      uint64_t v68 = v77;
      uint64_t v69 = v92;
      v89(v76, (uint64_t)v77, v92);
      uint64_t v70 = sub_241CDB140();
      uint64_t v93 = sub_241A33FE4(v70, v71, &v94);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      v87(v68, v69);
      _os_log_impl(&dword_241A23000, v56, v58, "%s_%s: results for %s: %s", (uint8_t *)v60, 0x2Au);
      uint64_t v72 = v88;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v72, -1, -1);
      MEMORY[0x245637F20](v60, -1, -1);

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v80 + 8))(v79, v78);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v87(v55, v92);

      return ((uint64_t (*)(unsigned char *, uint64_t))v50)(v52, v51);
    }
  }
  return result;
}

void *sub_241BDE01C(void *a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, void *a6)
{
  id v152 = a6;
  id v153 = a1;
  uint64_t v155 = a5;
  unsigned int v154 = a4;
  uint64_t v162 = a3;
  uint64_t v147 = a2;
  id v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35C0C(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v156 = (char *)&v137 - v8;
  sub_241A35C0C(0, &qword_26B032218, MEMORY[0x263F47048], v6);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v146 = (uint64_t)&v137 - v10;
  sub_241A35C0C(0, &qword_26B032208, MEMORY[0x263F47040], v6);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v157 = (char *)&v137 - v12;
  sub_241A35C0C(0, &qword_26B0321B8, MEMORY[0x263F46BC8], v6);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  id v140 = (char *)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v139 = (char *)&v137 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v137 = (char *)&v137 - v18;
  sub_241A35C0C(0, &qword_26B0321C8, MEMORY[0x263F46BF8], v6);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v143 = (char *)&v137 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v137 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v161 = (uint64_t)&v137 - v25;
  uint64_t v160 = sub_241CD9910();
  uint64_t v158 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  uint64_t v27 = (char *)&v137 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
  sub_241A35C0C(0, &qword_26B032228, MEMORY[0x263F47050], v6);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  uint64_t v144 = (char *)&v137 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v149 = (char *)&v137 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  unint64_t v36 = (char *)&v137 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v137 - v37;
  sub_241A35C0C(0, &qword_26B0321D0, MEMORY[0x263F46C00], v6);
  uint64_t v40 = MEMORY[0x270FA5388](v39 - 8);
  uint64_t v142 = (char *)&v137 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v141 = (char *)&v137 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  unint64_t v138 = (char *)&v137 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  os_log_t v48 = (char *)&v137 - v47;
  MEMORY[0x270FA5388](v46);
  uint64_t v50 = (char *)&v137 - v49;
  sub_241A35C0C(0, &qword_26B038F10, MEMORY[0x263F062D0], v6);
  uint64_t v52 = MEMORY[0x270FA5388](v51 - 8);
  id v54 = (char *)&v137 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v52);
  uint64_t v56 = (char *)&v137 - v55;
  sub_241BDFC84(v162, (uint64_t)v38, &qword_26B032228, v28);
  uint64_t v57 = sub_241CD9B80();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v164 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  uint64_t v165 = v58 + 48;
  int v59 = v164(v38, 1, v57);
  uint64_t v163 = v57;
  uint64_t v159 = v58;
  if (v59 == 1)
  {
    uint64_t v60 = &qword_26B032228;
    unint64_t v61 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
    uint64_t v62 = (uint64_t)v38;
LABEL_5:
    sub_241BD9430(v62, v60, v61);
    uint64_t v65 = sub_241CD6810();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v56, 1, 1, v65);
    goto LABEL_7;
  }
  sub_241CD9B10();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v57);
  uint64_t v63 = sub_241CD9940();
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v50, 1, v63) == 1)
  {
    uint64_t v60 = &qword_26B0321D0;
    unint64_t v61 = (uint64_t (*)(uint64_t))MEMORY[0x263F46C00];
    uint64_t v62 = (uint64_t)v50;
    goto LABEL_5;
  }
  sub_241CD9930();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v50, v63);
  sub_241CD9900();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v27, v160);
  uint64_t v66 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v56, 0, 1, v66);
LABEL_7:
  uint64_t v68 = v161;
  uint64_t v67 = v162;
  uint64_t v151 = sub_241BC2FBC((uint64_t)v56);
  int v150 = v69;
  sub_241BD9430((uint64_t)v56, &qword_26B038F10, MEMORY[0x263F062D0]);
  sub_241BDFC84(v67, (uint64_t)v36, &qword_26B032228, MEMORY[0x263F47050]);
  uint64_t v70 = v163;
  if (v164(v36, 1, v163) == 1)
  {
    sub_241BD9430((uint64_t)v36, &qword_26B032228, MEMORY[0x263F47050]);
LABEL_11:
    uint64_t v73 = v158;
    uint64_t v74 = v160;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56))(v68, 1, 1, v160);
    goto LABEL_16;
  }
  sub_241CD9B10();
  (*(void (**)(char *, uint64_t))(v159 + 8))(v36, v70);
  uint64_t v71 = sub_241CD9940();
  uint64_t v72 = *(void *)(v71 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v48, 1, v71) == 1)
  {
    sub_241BD9430((uint64_t)v48, &qword_26B0321D0, MEMORY[0x263F46C00]);
    uint64_t v70 = v163;
    goto LABEL_11;
  }
  uint64_t v75 = sub_241CD9920();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v48, v71);
  uint64_t v73 = v158;
  uint64_t v74 = v160;
  if (*(void *)(v75 + 16))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v158 + 16))(v68, v75 + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80)), v160);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v68, 0, 1, v74);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 56))(v68, 1, 1, v160);
  }
  swift_bridgeObjectRelease();
  uint64_t v70 = v163;
LABEL_16:
  sub_241BDFC84(v68, (uint64_t)v24, &qword_26B0321C8, MEMORY[0x263F46BF8]);
  unint64_t v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
  if (v76(v24, 1, v74) == 1)
  {
    sub_241BD9430((uint64_t)v24, &qword_26B0321C8, MEMORY[0x263F46BF8]);
    uint64_t v77 = sub_241CD6810();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v54, 1, 1, v77);
  }
  else
  {
    sub_241CD9900();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v24, v74);
    uint64_t v78 = sub_241CD6810();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v54, 0, 1, v78);
  }
  uint64_t v148 = sub_241BC2FBC((uint64_t)v54);
  int v145 = v79;
  sub_241BD9430((uint64_t)v54, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v80 = v146;
  sub_241BDFC84(v147, v146, &qword_26B032218, MEMORY[0x263F47048]);
  uint64_t v81 = sub_241CD9B40();
  uint64_t v82 = *(void *)(v81 - 8);
  int v83 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81);
  uint64_t v84 = (uint64_t)v149;
  if (v83 == 1)
  {
    unint64_t v85 = &qword_26B032218;
    uint64_t v86 = (uint64_t (*)(uint64_t))MEMORY[0x263F47048];
  }
  else
  {
    sub_241CD9B30();
    uint64_t v87 = (uint64_t)v157;
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v81);
    uint64_t v88 = sub_241CD9B20();
    uint64_t v89 = *(void *)(v88 - 8);
    int v90 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88);
    uint64_t v91 = (uint64_t)v156;
    if (v90 == 1)
    {
      sub_241BD9430(v87, &qword_26B032208, MEMORY[0x263F47040]);
      uint64_t v92 = 0;
      uint64_t v93 = 0;
      goto LABEL_27;
    }
    uint64_t v80 = (uint64_t)v138;
    sub_241CD9B10();
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v87, v88);
    uint64_t v94 = sub_241CD9940();
    uint64_t v95 = *(void *)(v94 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v80, 1, v94) != 1)
    {
      unint64_t v111 = v137;
      sub_241CD98A0();
      uint64_t v112 = (uint64_t)v111;
      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v80, v94);
      uint64_t v113 = sub_241CD9890();
      uint64_t v114 = *(void *)(v113 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113) == 1)
      {
        sub_241BD9430(v112, &qword_26B0321B8, MEMORY[0x263F46BC8]);
        uint64_t v92 = 0;
        uint64_t v93 = 0;
      }
      else
      {
        uint64_t v92 = sub_241CD9850();
        uint64_t v93 = v136;
        (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v112, v113);
      }
      uint64_t v68 = v161;
      uint64_t v70 = v163;
      goto LABEL_26;
    }
    unint64_t v85 = &qword_26B0321D0;
    uint64_t v86 = (uint64_t (*)(uint64_t))MEMORY[0x263F46C00];
  }
  sub_241BD9430(v80, v85, v86);
  uint64_t v92 = 0;
  uint64_t v93 = 0;
LABEL_26:
  uint64_t v91 = (uint64_t)v156;
LABEL_27:
  sub_241BDFC84(v67, v84, &qword_26B032228, MEMORY[0x263F47050]);
  if (v164((char *)v84, 1, v70) != 1)
  {
    unint64_t v99 = v141;
    sub_241CD9B10();
    uint64_t v100 = (uint64_t)v99;
    (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v84, v70);
    uint64_t v101 = sub_241CD9940();
    uint64_t v102 = *(void *)(v101 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101) == 1)
    {
      sub_241BD9430(v100, &qword_26B0321D0, MEMORY[0x263F46C00]);
      uint64_t v96 = 0;
      uint64_t v97 = 0;
    }
    else
    {
      uint64_t v103 = v139;
      sub_241CD98A0();
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v100, v101);
      uint64_t v104 = (uint64_t)v103;
      uint64_t v105 = sub_241CD9890();
      uint64_t v106 = *(void *)(v105 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105) == 1)
      {
        sub_241BD9430(v104, &qword_26B0321B8, MEMORY[0x263F46BC8]);
        uint64_t v96 = 0;
        uint64_t v97 = 0;
      }
      else
      {
        uint64_t v96 = sub_241CD9850();
        uint64_t v97 = v115;
        (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
      }
      uint64_t v68 = v161;
    }
    uint64_t v67 = v162;
    if (v93) {
      goto LABEL_29;
    }
LABEL_45:
    uint64_t v109 = (uint64_t)v143;
    uint64_t v110 = v160;
    if (v97)
    {
      swift_bridgeObjectRelease();
      char v98 = 1;
    }
    else
    {
      char v98 = 0;
    }
    uint64_t v108 = (uint64_t)v144;
    goto LABEL_49;
  }
  sub_241BD9430(v84, &qword_26B032228, MEMORY[0x263F47050]);
  uint64_t v96 = 0;
  uint64_t v97 = 0;
  if (!v93) {
    goto LABEL_45;
  }
LABEL_29:
  if (v97)
  {
    if (v92 == v96 && v93 == v97)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v98 = 0;
    }
    else
    {
      char v107 = sub_241CDC100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v98 = v107 ^ 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    char v98 = 1;
  }
  uint64_t v108 = (uint64_t)v144;
  uint64_t v109 = (uint64_t)v143;
  uint64_t v110 = v160;
LABEL_49:
  sub_241BDFC84(v68, v109, &qword_26B0321C8, MEMORY[0x263F46BF8]);
  if (v76((char *)v109, 1, v110) == 1)
  {
    sub_241BD9430(v109, &qword_26B0321C8, MEMORY[0x263F46BF8]);
    uint64_t v116 = sub_241CD98D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v91, 1, 1, v116);
  }
  else
  {
    sub_241CD98F0();
    (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v109, v110);
  }
  uint64_t v117 = v159;
  sub_241BDFC84(v67, v108, &qword_26B032228, MEMORY[0x263F47050]);
  uint64_t v118 = v163;
  if (v164((char *)v108, 1, v163) == 1)
  {
    uint64_t v119 = &qword_26B032228;
    unint64_t v120 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
    uint64_t v121 = v108;
  }
  else
  {
    int v122 = v142;
    sub_241CD9B10();
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v108, v118);
    uint64_t v123 = sub_241CD9940();
    uint64_t v124 = *(void *)(v123 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123) == 1)
    {
      uint64_t v119 = &qword_26B0321D0;
      unint64_t v120 = (uint64_t (*)(uint64_t))MEMORY[0x263F46C00];
      uint64_t v121 = (uint64_t)v122;
    }
    else
    {
      uint64_t v125 = v140;
      sub_241CD98A0();
      uint64_t v126 = (uint64_t)v125;
      (*(void (**)(char *, uint64_t))(v124 + 8))(v122, v123);
      uint64_t v127 = sub_241CD9890();
      uint64_t v128 = *(void *)(v127 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127) != 1)
      {
        char v129 = sub_241CD9860();
        (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v126, v127);
        goto LABEL_59;
      }
      uint64_t v119 = &qword_26B0321B8;
      unint64_t v120 = (uint64_t (*)(uint64_t))MEMORY[0x263F46BC8];
      uint64_t v121 = v126;
    }
  }
  sub_241BD9430(v121, v119, v120);
  char v129 = 0;
LABEL_59:
  int v130 = v145 & 1;
  char v131 = v150 & 1;
  type metadata accessor for TrendGenerationAnalyticsEvent();
  swift_allocObject();
  id v132 = v152;
  id v133 = v153;
  unint64_t v134 = sub_241BC34FC(v133, v154, v155, v91, v151, v131, v148, v130, v98 & 1, v129 & 1, (uint64_t)v132);

  sub_241BD9430(v161, &qword_26B0321C8, MEMORY[0x263F46BF8]);
  return v134;
}

uint64_t sub_241BDF4FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v30[1] = a3;
  sub_241A558EC();
  uint64_t v7 = v6;
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD6D00();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_241CD6810();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (unint64_t *)(a4 + 16);
  id v17 = objc_msgSend(a1, sel_startDate);
  sub_241CD6CB0();

  id v18 = objc_msgSend(a1, sel_endDate);
  sub_241CD6CB0();

  sub_241CD67C0();
  uint64_t v19 = (void *)sub_241CDB4C0();
  uint64_t v20 = v19;
  if (v19)
  {
    objc_msgSend(v19, sel__value);
    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v22 = 0;
  }
  BOOL v23 = v20 == 0;
  uint64_t v24 = &v9[*(int *)(v7 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v15, v12);
  *(void *)uint64_t v24 = v22;
  v24[8] = v23;
  swift_beginAccess();
  unint64_t v25 = *v16;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v16 = v25;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v25 = sub_241AF8084(0, *(void *)(v25 + 16) + 1, 1, v25);
    *uint64_t v16 = v25;
  }
  unint64_t v28 = *(void *)(v25 + 16);
  unint64_t v27 = *(void *)(v25 + 24);
  if (v28 >= v27 >> 1)
  {
    unint64_t v25 = sub_241AF8084(v27 > 1, v28 + 1, 1, v25);
    *uint64_t v16 = v25;
  }
  *(void *)(v25 + 16) = v28 + 1;
  sub_241BDF83C((uint64_t)v9, v25+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v28);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_241BDF83C(uint64_t a1, uint64_t a2)
{
  sub_241A558EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241BDF8A0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241BDF8D8()
{
  uint64_t v1 = sub_241CD9840();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241BDF97C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241BDF98C()
{
  return swift_release();
}

uint64_t sub_241BDF994(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241BDF9FC(uint64_t a1)
{
  sub_241A558EC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241BDFA58(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A35C0C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_241BDFAD8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241BDFC08(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_241BDFB34()
{
  if (!qword_26B032230)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
    sub_241A35C0C(255, &qword_26B032228, MEMORY[0x263F47050], MEMORY[0x263F8D8F0]);
    sub_241A35C0C(255, &qword_26B032218, MEMORY[0x263F47048], v0);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v2) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26B032230);
    }
  }
}

void sub_241BDFC08(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_241A35C0C(255, a3, a4, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_241BDFC84(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A35C0C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241BDFD04@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = sub_241CD7740();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a1) = *a1;
  (*(void (**)(char *, uint64_t))(v11 + 16))(v10, a2);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3D168]), sel_initWithHealthStore_, *(void *)(a3 + 16));
  uint64_t v13 = type metadata accessor for ActivitySummaryModelGeneratorPipeline();
  swift_allocObject();
  uint64_t v14 = sub_241BC70E0((uint64_t)v10, (int)a1, v12);
  a4[3] = v13;
  uint64_t result = sub_241A27D9C(&qword_26B02F3F8, (void (*)(uint64_t))type metadata accessor for ActivitySummaryModelGeneratorPipeline);
  a4[4] = result;
  *a4 = v14;
  return result;
}

uint64_t sub_241BDFE78()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SummariesHealthPluginDelegate()
{
  return self;
}

uint64_t sub_241BDFEDC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v20 = sub_241A313AC(0, &qword_26B034D70);
  uint64_t v21 = &off_26F5C3A28;
  *(void *)&long long v19 = a4;
  id v10 = objc_msgSend(a3, sel_profileIdentifier);
  id v11 = objc_msgSend(v10, sel_type);

  if (v11 == (id)2)
  {
    type metadata accessor for SummariesHealthPluginDelegate();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v13 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    id v14 = objc_msgSend(v13, sel_bundleIdentifier);

    if (v14)
    {
      uint64_t v15 = sub_241CDB0D0();
      uint64_t v17 = v16;

      a5[2] = a1;
      a5[3] = a2;
      a5[4] = a3;
      sub_241A5598C(&v19, (uint64_t)(a5 + 5));
      a5[10] = v15;
      a5[11] = v17;
      return (uint64_t)a5;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = sub_241CDBF10();
  __break(1u);
  return result;
}

void sub_241BE0060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = self;
  swift_bridgeObjectRetain();
  id v11 = objc_msgSend(v10, sel_sharedBehavior);
  if (!v11)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v12 = v11;
  id v13 = objc_msgSend(v11, sel_features);

  if (!v13)
  {
LABEL_11:
    __break(1u);
    return;
  }
  unsigned int v14 = objc_msgSend(v13, sel_summaryOrchestration);

  if (v14)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v27[1] = a2;
    sub_241A36064(0, (unint64_t *)&qword_26B034F30, &qword_26B032038);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_241CEB730;
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v16(v9, a1, v6);
    uint64_t v17 = *(void **)(a3 + 16);
    uint64_t v18 = type metadata accessor for SummaryAlertFeedItemGeneratorPipeline();
    swift_allocObject();
    id v19 = v17;
    uint64_t v20 = sub_241B6EBBC((uint64_t)v9, v19);

    *(void *)(v15 + 56) = v18;
    *(void *)(v15 + 64) = sub_241A27D9C(&qword_26B02F4D0, (void (*)(uint64_t))type metadata accessor for SummaryAlertFeedItemGeneratorPipeline);
    *(void *)(v15 + 32) = v20;
    uint64_t v31 = (void *)v15;
    uint64_t v21 = sub_241A27DE4(a1);
    sub_241AFFE24(v21);
    v16(v9, a1, v6);
    uint64_t v22 = type metadata accessor for WheelchairSettingGeneratorPipeline();
    swift_allocObject();
    BOOL v23 = sub_241C96B04((uint64_t)v9);
    uint64_t v24 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v24 = sub_241AF80CC(0, v24[2] + 1, 1, v24);
    }
    unint64_t v26 = v24[2];
    unint64_t v25 = v24[3];
    if (v26 >= v25 >> 1) {
      uint64_t v24 = sub_241AF80CC((void *)(v25 > 1), v26 + 1, 1, v24);
    }
    uint64_t v29 = v22;
    uint64_t v30 = sub_241A27D9C(&qword_268D43390, (void (*)(uint64_t))type metadata accessor for WheelchairSettingGeneratorPipeline);
    *(void *)&long long v28 = v23;
    void v24[2] = v26 + 1;
    sub_241A5598C(&v28, (uint64_t)&v24[5 * v26 + 4]);
    swift_bridgeObjectRelease();
  }
}

void sub_241BE03B8(uint64_t a1)
{
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = self;
  swift_bridgeObjectRetain();
  id v7 = objc_msgSend(v6, sel_sharedBehavior);
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v7, sel_features);

  if (!v9)
  {
LABEL_11:
    __break(1u);
    return;
  }
  unsigned int v10 = objc_msgSend(v9, sel_summaryOrchestration);

  if (v10)
  {
    sub_241CDA0F0();
    id v11 = sub_241CDA190();
    os_log_type_t v12 = sub_241CDB670();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v20 = v14;
      uint64_t v18 = v2;
      *(_DWORD *)id v13 = 136315138;
      uint64_t v15 = sub_241CDC270();
      uint64_t v19 = sub_241A33FE4(v15, v16, &v20);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v11, v12, "[%s]: Returning no feed item pipelines for tinker profile since orchestration handles generation for it", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v14, -1, -1);
      MEMORY[0x245637F20](v13, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_241A27DE4(a1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_241BE068C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a1;
  uint64_t v25 = a3;
  uint64_t v5 = sub_241CD7740();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[3] = &type metadata for DiskSummaryModelConfigurationProvider;
  v30[4] = sub_241BE0C9C();
  v30[0] = a2;
  sub_241A36064(0, (unint64_t *)&qword_26B034F58, &qword_26B032068);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_241CEB720;
  unsigned int v10 = sub_241A311E0(v30, (uint64_t)&type metadata for DiskSummaryModelConfigurationProvider);
  uint64_t v11 = type metadata accessor for SummariesSharableModelGeneratorPipeline();
  os_log_type_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v13 = v12(v8, a1, v5);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, void *, ValueMetadata *))(v16 + 16))(v15, v10, &type metadata for DiskSummaryModelConfigurationProvider);
  uint64_t v17 = *v15;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_241BE100C((uint64_t)v8, v17);
  swift_bridgeObjectRelease();
  *(void *)(v9 + 56) = v11;
  *(void *)(v9 + 64) = sub_241A27D9C(&qword_26B0389A0, (void (*)(uint64_t))type metadata accessor for SummariesSharableModelGeneratorPipeline);
  *(void *)(v9 + 32) = v18;
  uint64_t v19 = v24;
  v12(v8, v24, v5);
  uint64_t v20 = sub_241A974E0((uint64_t)v8);
  *(void *)(v9 + 96) = type metadata accessor for WheelchairSettingModelGeneratorPipeline();
  *(void *)(v9 + 104) = sub_241A27D9C(&qword_26B02F720, (void (*)(uint64_t))type metadata accessor for WheelchairSettingModelGeneratorPipeline);
  *(void *)(v9 + 72) = v20;
  uint64_t v29 = v9;
  uint64_t v27 = v19;
  uint64_t v28 = v25;
  uint64_t v21 = sub_241A42D74((void (*)(long long *__return_ptr, char *))sub_241BE13B0, (uint64_t)v26, (uint64_t)&unk_26F5C0560);
  sub_241AFFFE0(v21);
  uint64_t v22 = v29;
  sub_241A31190((uint64_t)v30);
  return v22;
}

uint64_t sub_241BE0994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a1;
  uint64_t v25 = a3;
  uint64_t v5 = sub_241CD7740();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[3] = &type metadata for DiskSummaryModelConfigurationProvider;
  v26[4] = sub_241BE0C9C();
  v26[0] = a2;
  sub_241A36064(0, (unint64_t *)&qword_26B034F58, &qword_26B032068);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_241CEB720;
  unsigned int v10 = sub_241A311E0(v26, (uint64_t)&type metadata for DiskSummaryModelConfigurationProvider);
  uint64_t v11 = type metadata accessor for SummariesSharableModelGeneratorPipeline();
  os_log_type_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v13 = v12(v8, a1, v5);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, void *, ValueMetadata *))(v16 + 16))(v15, v10, &type metadata for DiskSummaryModelConfigurationProvider);
  uint64_t v17 = *v15;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_241BE100C((uint64_t)v8, v17);
  swift_bridgeObjectRelease();
  *(void *)(v9 + 56) = v11;
  *(void *)(v9 + 64) = sub_241A27D9C(&qword_26B0389A0, (void (*)(uint64_t))type metadata accessor for SummariesSharableModelGeneratorPipeline);
  *(void *)(v9 + 32) = v18;
  v12(v8, v24, v5);
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3D168]), sel_initWithHealthStore_, *(void *)(v25 + 16));
  uint64_t v20 = type metadata accessor for ActivitySummaryModelGeneratorPipeline();
  swift_allocObject();
  uint64_t v21 = sub_241BC70E0((uint64_t)v8, 0, v19);
  *(void *)(v9 + 96) = v20;
  *(void *)(v9 + 104) = sub_241A27D9C(&qword_26B02F3F8, (void (*)(uint64_t))type metadata accessor for ActivitySummaryModelGeneratorPipeline);
  *(void *)(v9 + 72) = v21;
  sub_241A31190((uint64_t)v26);
  return v9;
}

unint64_t sub_241BE0C9C()
{
  unint64_t result = qword_26B033F78;
  if (!qword_26B033F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033F78);
  }
  return result;
}

uint64_t sub_241BE0CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v22[0] = a6;
  v22[1] = a5;
  v22[2] = a4;
  uint64_t v24 = a3;
  uint64_t v25 = sub_241CD7740();
  uint64_t v8 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  unsigned int v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CD7690();
  uint64_t v11 = *(void *)(v23 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v23);
  uint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v22 - v15;
  sub_241A5D2F4(a2, (uint64_t)v22 - v15);
  sub_241A313AC(0, &qword_26B030850);
  sub_241CDB8E0();
  sub_241A27D9C(&qword_26B0328C8, (void (*)(uint64_t))type metadata accessor for SummariesSharableModelGeneratorPipeline);
  uint64_t v17 = sub_241CD8220();
  swift_release();
  uint64_t v18 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v25);
  uint64_t v19 = v23;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v23);
  type metadata accessor for SummariesSharableModelGeneratorPipeline();
  swift_allocObject();
  uint64_t v20 = sub_241A5D8B8((uint64_t)v10, (uint64_t)v14, v17);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v19);
  return v20;
}

uint64_t sub_241BE100C(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v40 = sub_241CD7740();
  uint64_t v4 = *(void *)(v40 - 8);
  uint64_t v41 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v40);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v6;
  uint64_t v46 = sub_241CD7690();
  uint64_t v7 = *(void *)(v46 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v46);
  uint64_t v45 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v49 = (char *)&v33 - v10;
  uint64_t v47 = a1;
  sub_241A5D2F4(a2, (uint64_t)&v33 - v10);
  os_log_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v12 = a1;
  uint64_t v13 = v40;
  v48(v6, v12, v40);
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v39((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11, v46);
  uint64_t v14 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v42 = v7;
  uint64_t v43 = v4;
  uint64_t v15 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = (v14 + 16) & ~v14;
  uint64_t v17 = (v41 + v15 + v16) & ~v15;
  uint64_t v41 = v17 + v8;
  uint64_t v18 = v17;
  uint64_t v36 = v17;
  uint64_t v37 = v16;
  uint64_t v38 = v14 | v15 | 7;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v19 + v16;
  uint64_t v35 = v19;
  uint64_t v21 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  uint64_t v22 = (uint64_t)v34;
  v21(v20, v34, v13);
  uint64_t v23 = v19 + v18;
  uint64_t v24 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  unint64_t v26 = v45;
  uint64_t v25 = v46;
  v24(v23, v45, v46);
  v48((char *)v22, v47, v13);
  uint64_t v27 = v26;
  uint64_t v28 = v25;
  v39(v27, v49, v25);
  uint64_t v29 = swift_allocObject();
  v21(v29 + v37, (char *)v22, v13);
  v24(v29 + v36, v45, v28);
  uint64_t v30 = v47;
  v48((char *)v22, v47, v13);
  uint64_t v31 = sub_241BE0CF0(v22, v44, (uint64_t)sub_241BE13D4, v35, (uint64_t)sub_241BE160C, v29);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v30, v13);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v49, v28);
  return v31;
}

uint64_t sub_241BE13B0@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  return sub_241BDFD04(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_241BE13D4(uint64_t a1, uint64_t a2)
{
  sub_241CD7740();
  sub_241CD7690();

  return sub_241A5D6A8(a1, a2);
}

uint64_t sub_241BE14BC()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_241CD7690();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_241BE160C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241CD7740();
  sub_241CD7690();

  return sub_241A5D798(a1, a2, a3);
}

void sub_241BE16F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_241CD96A0();
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v92 = (char *)v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v93 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v82 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v82 - v17;
  id v19 = objc_msgSend(self, sel_sharedBehavior);
  if (!v19)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v20 = v19;
  id v21 = objc_msgSend(v19, sel_features);

  if (!v21)
  {
LABEL_30:
    __break(1u);
    return;
  }
  unsigned int v22 = objc_msgSend(v21, sel_summaryOrchestration);

  if (v22)
  {
    uint64_t v88 = a4;
    uint64_t v89 = a3;
    swift_getObjectType();
    uint64_t v23 = swift_conformsToProtocol2();
    if (v23) {
      uint64_t v24 = v23;
    }
    else {
      uint64_t v24 = 0;
    }
    if (v23) {
      uint64_t v25 = a1;
    }
    else {
      uint64_t v25 = 0;
    }
    if (v25)
    {
      swift_getObjectType();
      uint64_t v26 = *(void *)(v24 + 8);
      swift_unknownObjectRetain();
      uint64_t v27 = (void *)sub_241CD7240();
      if (v27)
      {
        uint64_t v28 = v27;
        id v29 = objc_msgSend(v27, sel_profileIdentifier);
        if ((char *)objc_msgSend(v29, sel_type) - 1 > (char *)2)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v30 = *(void *)(v26 + 8);
          sub_241CD93F0();
          id v31 = v29;
          uint64_t v32 = sub_241CDA190();
          os_log_type_t v33 = sub_241CDB670();
          int v34 = v33;
          unint64_t v85 = v32;
          BOOL v35 = os_log_type_enabled(v32, v33);
          uint64_t v86 = v30;
          id v87 = v31;
          if (v35)
          {
            uint64_t v36 = (uint8_t *)swift_slowAlloc();
            uint64_t v84 = swift_slowAlloc();
            *(void *)&long long v94 = v84;
            v82[0] = v36;
            *(_DWORD *)uint64_t v36 = 136446210;
            v82[1] = v36 + 4;
            id v37 = v31;
            id v38 = objc_msgSend(v37, sel_description);
            int v83 = v34;
            id v39 = v38;
            uint64_t v40 = sub_241CDB0D0();
            unint64_t v42 = v41;

            v97[0] = sub_241A33FE4(v40, v42, (uint64_t *)&v94);
            sub_241CDBBF0();

            swift_bridgeObjectRelease();
            uint64_t v43 = v85;
            uint64_t v44 = v82[0];
            _os_log_impl(&dword_241A23000, v85, (os_log_type_t)v83, "Returning Summaries input signals for %{public}s", v82[0], 0xCu);
            uint64_t v45 = v84;
            swift_arrayDestroy();
            MEMORY[0x245637F20](v45, -1, -1);
            MEMORY[0x245637F20](v44, -1, -1);
          }
          else
          {
          }
          (*(void (**)(char *, uint64_t))(v93 + 8))(v18, v10);
          uint64_t v58 = v88;
          sub_241A36064(0, &qword_26B036970, &qword_26B035078);
          uint64_t v59 = swift_allocObject();
          *(_OWORD *)(v59 + 16) = xmmword_241CEB8E0;
          uint64_t v60 = type metadata accessor for AfibBurdenAnalysisDateInputSingal.ObserverShim();
          swift_allocObject();
          uint64_t v61 = v89;
          swift_unknownObjectRetain();
          id v62 = v28;
          uint64_t v63 = sub_241BF7134((uint64_t)v62);
          uint64_t v95 = v60;
          uint64_t v96 = &off_26F5C5680;
          *(void *)&long long v94 = v63;
          uint64_t v64 = type metadata accessor for AfibBurdenAnalysisDateInputSingal();
          uint64_t v65 = swift_allocObject();
          swift_retain();
          sub_241CD9690();
          uint64_t v66 = (void *)(v65 + OBJC_IVAR____TtC9Summaries33AfibBurdenAnalysisDateInputSingal_observer);
          *uint64_t v66 = v61;
          v66[1] = v58;
          sub_241A5598C(&v94, v65 + OBJC_IVAR____TtC9Summaries33AfibBurdenAnalysisDateInputSingal_observerShim);
          swift_release();
          *(void *)(v59 + 56) = v64;
          *(void *)(v59 + 64) = sub_241A27D9C(&qword_26B036320, (void (*)(uint64_t))type metadata accessor for AfibBurdenAnalysisDateInputSingal);
          *(void *)(v59 + 32) = v65;
          sub_241A9986C();
          uint64_t v68 = v67;
          swift_unknownObjectRetain();
          uint64_t v69 = sub_241CD7D30();
          swift_unknownObjectRelease();
          *(void *)(v59 + 96) = v68;
          *(void *)(v59 + 104) = sub_241A27D9C(&qword_26B035568, (void (*)(uint64_t))sub_241A9986C);
          *(void *)(v59 + 72) = v69;
          sub_241A99970();
          uint64_t v71 = v70;
          swift_unknownObjectRetain();
          uint64_t v72 = sub_241CD7D10();
          swift_unknownObjectRelease();
          *(void *)(v59 + 136) = v71;
          *(void *)(v59 + 144) = sub_241A27D9C(&qword_26B035558, (void (*)(uint64_t))sub_241A99970);
          *(void *)(v59 + 112) = v72;
          sub_241BE2EC0();
          uint64_t v74 = v73;
          swift_unknownObjectRetain();
          uint64_t v75 = sub_241CD7D50();
          swift_unknownObjectRelease();
          *(void *)(v59 + 176) = v74;
          *(void *)(v59 + 184) = sub_241A27D9C((unint64_t *)&qword_26B035570, (void (*)(uint64_t))sub_241BE2EC0);
          *(void *)(v59 + 152) = v75;
          if (qword_26B035628 != -1) {
            swift_once();
          }
          uint64_t v76 = v91;
          uint64_t v77 = sub_241A55850(v91, (uint64_t)qword_26B035608);
          (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v92, v77, v76);
          sub_241A313AC(0, (unint64_t *)&qword_26B0303A0);
          swift_unknownObjectRetain();
          sub_241CDB6D0();
          sub_241CD7CE0();
          sub_241CD7CD0();
          sub_241BE2FC4();
          int v79 = v78;
          id v80 = objc_allocWithZone(v78);
          uint64_t v81 = sub_241CD96D0();
          *(void *)(v59 + 216) = v79;
          *(void *)(v59 + 224) = sub_241A27D9C(&qword_26B035630, (void (*)(uint64_t))sub_241BE2FC4);
          *(void *)(v59 + 192) = v81;
          swift_unknownObjectRelease();
        }
      }
      else
      {
        sub_241CD93F0();
        swift_unknownObjectRetain_n();
        uint64_t v52 = sub_241CDA190();
        os_log_type_t v53 = sub_241CDB670();
        if (os_log_type_enabled(v52, v53))
        {
          id v54 = (uint8_t *)swift_slowAlloc();
          uint64_t v55 = swift_slowAlloc();
          v97[0] = v55;
          *(_DWORD *)id v54 = 136315138;
          uint64_t v92 = (char *)(v54 + 4);
          *(void *)&long long v94 = v25;
          *((void *)&v94 + 1) = v24;
          sub_241AF8FE4(0, &qword_268D433A0);
          swift_unknownObjectRetain();
          uint64_t v56 = sub_241CDB120();
          *(void *)&long long v94 = sub_241A33FE4(v56, v57, v97);
          sub_241CDBBF0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241A23000, v52, v53, "Summaries plugin cannot perform work without a health store, ignoring context: %s", v54, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v55, -1, -1);
          MEMORY[0x245637F20](v54, -1, -1);
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v93 + 8))(v16, v10);
        swift_unknownObjectRelease();
      }
    }
    else
    {
      sub_241CD93F0();
      swift_unknownObjectRetain_n();
      uint64_t v46 = sub_241CDA190();
      os_log_type_t v47 = sub_241CDB670();
      if (os_log_type_enabled(v46, v47))
      {
        os_log_t v48 = (uint8_t *)swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        v97[0] = v49;
        *(_DWORD *)os_log_t v48 = 136315138;
        *(void *)&long long v94 = a1;
        *((void *)&v94 + 1) = a2;
        sub_241AF8FE4(0, &qword_268D43398);
        swift_unknownObjectRetain();
        uint64_t v50 = sub_241CDB120();
        *(void *)&long long v94 = sub_241A33FE4(v50, v51, v97);
        sub_241CDBBF0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v46, v47, "Summaries plugin cannot perform work without a HealthPlatformOrchestrationContext, ignoring context: %s", v48, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245637F20](v49, -1, -1);
        MEMORY[0x245637F20](v48, -1, -1);
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v93 + 8))(v13, v10);
    }
  }
}

void sub_241BE2254(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v83 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v83 - v12;
  id v14 = objc_msgSend(self, sel_sharedBehavior);
  if (!v14)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v15 = v14;
  id v16 = objc_msgSend(v14, sel_features);

  if (!v16)
  {
LABEL_33:
    __break(1u);
    return;
  }
  unsigned int v17 = objc_msgSend(v16, sel_summaryOrchestration);

  if (v17)
  {
    uint64_t v90 = v5;
    swift_getObjectType();
    uint64_t v18 = swift_conformsToProtocol2();
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    if (v18) {
      uint64_t v20 = a1;
    }
    else {
      uint64_t v20 = 0;
    }
    if (v20)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      id v21 = (void *)sub_241CD7240();
      if (v21)
      {
        id v88 = v21;
        id v22 = objc_msgSend(v21, sel_profileIdentifier);
        sub_241CD93F0();
        id v23 = v22;
        uint64_t v24 = sub_241CDA190();
        os_log_type_t v25 = sub_241CDB670();
        BOOL v26 = os_log_type_enabled(v24, v25);
        uint64_t v89 = a1;
        uint64_t v86 = v20;
        uint64_t v87 = v19;
        if (v26)
        {
          uint64_t v27 = (uint8_t *)swift_slowAlloc();
          uint64_t v85 = swift_slowAlloc();
          uint64_t v91 = v85;
          *(_DWORD *)uint64_t v27 = 136446210;
          int v83 = v27 + 4;
          id v28 = v23;
          id v29 = objc_msgSend(v28, sel_description);
          uint64_t v30 = sub_241CDB0D0();
          uint64_t v84 = v4;
          id v31 = v23;
          uint64_t v32 = v30;
          unint64_t v34 = v33;

          uint64_t v35 = v32;
          id v23 = v31;
          uint64_t v95 = sub_241A33FE4(v35, v34, &v91);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241A23000, v24, v25, "Returning Summaries executors for %{public}s", v27, 0xCu);
          uint64_t v36 = v85;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v36, -1, -1);
          MEMORY[0x245637F20](v27, -1, -1);

          (*(void (**)(char *, uint64_t))(v90 + 8))(v13, v84);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v90 + 8))(v13, v4);
        }
        id v49 = objc_msgSend(v23, sel_type);
        if (v49 == (id)3)
        {
          sub_241A36064(0, &qword_26B036990, &qword_26B035660);
          uint64_t v64 = swift_allocObject();
          *(_OWORD *)(v64 + 16) = xmmword_241CEB730;
          uint64_t v93 = &type metadata for SummariesFullProfileExecutor.StepFactory;
          long long v94 = &off_26F5C2760;
          type metadata accessor for SummariesFullProfileExecutor();
          uint64_t v65 = (void *)swift_allocObject();
          uint64_t v66 = sub_241B0F300((uint64_t)&v91, (uint64_t)&type metadata for SummariesFullProfileExecutor.StepFactory);
          MEMORY[0x270FA5388](v66);
          (*(void (**)(void))(v67 + 16))();
          v65[8] = &type metadata for SummariesFullProfileExecutor.StepFactory;
          v65[9] = &off_26F5C2760;
          uint64_t v68 = v87;
          id v69 = v88;
          v65[2] = v86;
          v65[3] = v68;
          v65[4] = v69;
          swift_unknownObjectRetain();
          id v70 = v69;
          sub_241A31190((uint64_t)&v91);
          uint64_t v71 = sub_241A27D9C(&qword_26B035718, (void (*)(uint64_t))type metadata accessor for SummariesFullProfileExecutor);
          *(void *)(v64 + 32) = v65;
          *(void *)(v64 + 40) = v71;
          swift_unknownObjectRelease();

          return;
        }
        if (v49 == (id)2)
        {
          sub_241A36064(0, &qword_26B036990, &qword_26B035660);
          uint64_t v50 = swift_allocObject();
          *(_OWORD *)(v50 + 16) = xmmword_241CEB720;
          uint64_t v93 = &type metadata for SummariesFullProfileExecutor.StepFactory;
          long long v94 = &off_26F5C2760;
          type metadata accessor for SummariesFullProfileExecutor();
          uint64_t v72 = (void *)swift_allocObject();
          uint64_t v73 = sub_241B0F300((uint64_t)&v91, (uint64_t)&type metadata for SummariesFullProfileExecutor.StepFactory);
          MEMORY[0x270FA5388](v73);
          (*(void (**)(void))(v74 + 16))();
          v72[8] = &type metadata for SummariesFullProfileExecutor.StepFactory;
          v72[9] = &off_26F5C2760;
          uint64_t v75 = v86;
          uint64_t v55 = v23;
          uint64_t v77 = v87;
          id v76 = v88;
          v72[2] = v86;
          v72[3] = v77;
          v72[4] = v76;
          swift_unknownObjectRetain();
          id v78 = v76;
          sub_241A31190((uint64_t)&v91);
          uint64_t v79 = sub_241A27D9C(&qword_26B035718, (void (*)(uint64_t))type metadata accessor for SummariesFullProfileExecutor);
          *(void *)(v50 + 32) = v72;
          *(void *)(v50 + 40) = v79;
          type metadata accessor for WheelchairSettingSummarySharingExecutor();
          id v80 = (void *)swift_allocObject();
          id v81 = v78;
          swift_unknownObjectRetain();
          id v60 = v81;
          uint64_t v61 = sub_241BDFEDC(v75, v77, v60, (uint64_t)v60, v80);
          id v62 = (unint64_t *)&unk_268D433A8;
          uint64_t v63 = type metadata accessor for WheelchairSettingSummarySharingExecutor;
          goto LABEL_29;
        }
        if (v49 == (id)1)
        {
          sub_241A36064(0, &qword_26B036990, &qword_26B035660);
          uint64_t v50 = swift_allocObject();
          *(_OWORD *)(v50 + 16) = xmmword_241CEB720;
          uint64_t v93 = &type metadata for SummariesFullProfileExecutor.StepFactory;
          long long v94 = &off_26F5C2760;
          type metadata accessor for SummariesFullProfileExecutor();
          unint64_t v51 = (void *)swift_allocObject();
          uint64_t v52 = sub_241B0F300((uint64_t)&v91, (uint64_t)&type metadata for SummariesFullProfileExecutor.StepFactory);
          MEMORY[0x270FA5388](v52);
          (*(void (**)(void))(v53 + 16))();
          v51[8] = &type metadata for SummariesFullProfileExecutor.StepFactory;
          v51[9] = &off_26F5C2760;
          uint64_t v54 = v86;
          uint64_t v55 = v23;
          uint64_t v57 = v87;
          id v56 = v88;
          v51[2] = v86;
          v51[3] = v57;
          v51[4] = v56;
          swift_unknownObjectRetain();
          id v58 = v56;
          sub_241A31190((uint64_t)&v91);
          uint64_t v59 = sub_241A27D9C(&qword_26B035718, (void (*)(uint64_t))type metadata accessor for SummariesFullProfileExecutor);
          *(void *)(v50 + 32) = v51;
          *(void *)(v50 + 40) = v59;
          type metadata accessor for WheelchairSettingModelExecutor();
          swift_allocObject();
          swift_unknownObjectRetain();
          id v60 = v58;
          uint64_t v61 = (uint64_t)sub_241B3C188(v54, v57, v60);
          id v62 = &qword_26B035D30;
          uint64_t v63 = type metadata accessor for WheelchairSettingModelExecutor;
LABEL_29:
          uint64_t v82 = sub_241A27D9C(v62, (void (*)(uint64_t))v63);
          *(void *)(v50 + 48) = v61;
          *(void *)(v50 + 56) = v82;
          swift_unknownObjectRelease();

          return;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        sub_241CD93F0();
        swift_unknownObjectRetain_n();
        uint64_t v43 = sub_241CDA190();
        os_log_type_t v44 = sub_241CDB670();
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = (uint8_t *)swift_slowAlloc();
          uint64_t v46 = swift_slowAlloc();
          uint64_t v95 = v46;
          *(_DWORD *)uint64_t v45 = 136315138;
          id v88 = v45 + 4;
          uint64_t v91 = v20;
          uint64_t v92 = v19;
          sub_241AF8FE4(0, &qword_268D433A0);
          swift_unknownObjectRetain();
          uint64_t v47 = sub_241CDB120();
          uint64_t v91 = sub_241A33FE4(v47, v48, &v95);
          sub_241CDBBF0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241A23000, v43, v44, "Summaries plugin cannot perform work without a health store, ignoring context: %s", v45, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v46, -1, -1);
          MEMORY[0x245637F20](v45, -1, -1);
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v90 + 8))(v11, v4);
        swift_unknownObjectRelease();
      }
    }
    else
    {
      sub_241CD93F0();
      swift_unknownObjectRetain_n();
      id v37 = sub_241CDA190();
      os_log_type_t v38 = sub_241CDB670();
      if (os_log_type_enabled(v37, v38))
      {
        id v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t v95 = v40;
        *(_DWORD *)id v39 = 136315138;
        uint64_t v91 = a1;
        uint64_t v92 = a2;
        sub_241AF8FE4(0, &qword_268D43398);
        swift_unknownObjectRetain();
        uint64_t v41 = sub_241CDB120();
        uint64_t v91 = sub_241A33FE4(v41, v42, &v95);
        sub_241CDBBF0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v37, v38, "Summaries plugin cannot perform work without a HealthPlatformOrchestrationContext, ignoring context: %s", v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245637F20](v40, -1, -1);
        MEMORY[0x245637F20](v39, -1, -1);
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v90 + 8))(v8, v4);
    }
  }
}

void sub_241BE2EC0()
{
  if (!qword_26B035578)
  {
    type metadata accessor for HKWheelchairUse(255);
    sub_241A27D9C(&qword_26B036870, type metadata accessor for HKWheelchairUse);
    sub_241A27D9C(&qword_26B036860, type metadata accessor for HKWheelchairUse);
    sub_241A27D9C(&qword_26B036868, type metadata accessor for HKWheelchairUse);
    unint64_t v0 = sub_241CD7D70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035578);
    }
  }
}

void sub_241BE2FC4()
{
  if (!qword_26B035090)
  {
    unint64_t v0 = sub_241CD96E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035090);
    }
  }
}

uint64_t sub_241BE303C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241BE3050);
}

uint64_t sub_241BE3050(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241BE3100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241BE3114);
}

void *sub_241BE3114(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SleepSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031CF8;
  if (!qword_26B031CF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241BE320C()
{
  return sub_241BE3358((unint64_t *)&qword_26B0320F0);
}

void sub_241BE3240(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241BE32DC(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241BE32DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BE3324()
{
  return sub_241BE3358((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241BE3358(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BE3240(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241BE32DC((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241BE32DC(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BE343C()
{
  return sub_241BE32DC(&qword_26B032E78, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
}

uint64_t sub_241BE3484()
{
  return sub_241BE32DC(&qword_26B032E70, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
}

uint64_t sub_241BE34CC(uint64_t a1)
{
  uint64_t result = sub_241BE32DC(&qword_26B037E50, (void (*)(uint64_t))type metadata accessor for SleepSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241BE3524()
{
  return sub_241BE35C4(&qword_26B0383D0, &qword_26B0383D8, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241BE3574()
{
  return sub_241BE35C4(&qword_26B032E20, &qword_26B032E28, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241BE35C4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BE3608(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241BE3608(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241BE3240(255, &qword_26B032118, MEMORY[0x263F44150]);
    v9[0] = v6;
    v9[1] = &type metadata for SleepSnidgetViewContainer;
    v9[2] = sub_241A3F5B0();
    v9[3] = sub_241A92B10();
    v9[4] = sub_241BE3358((unint64_t *)&qword_26B0320F0);
    v9[5] = sub_241BE3358((unint64_t *)&qword_26B0320E0);
    v9[6] = sub_241BE32DC(&qword_26B032E78, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
    v9[7] = sub_241BE32DC(&qword_26B032E70, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
    unint64_t v7 = a3(a1, v9);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241BE3778(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v206 = a3;
  uint64_t v190 = a2;
  uint64_t v207 = a4;
  uint64_t v6 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v176 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for SleepSnidgetFeedItemModelProvider();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v208 = (uint64_t)&v176 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v14 = (uint64_t *)((char *)&v176 - v13);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v180 = (uint64_t)&v176 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v179 = (uint64_t *)((char *)&v176 - v17);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v209 = *(void (***)(void *, void))(v18 - 8);
  uint64_t v210 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  id v21 = (char *)&v176 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  id v181 = (char *)&v176 - v22;
  sub_241BE63A8(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v205 = (char *)&v176 - v24;
  sub_241BE63A8(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v193 = (char *)&v176 - v26;
  uint64_t v201 = sub_241CD69B0();
  uint64_t v199 = *(void *)(v201 - 8);
  MEMORY[0x270FA5388](v201);
  uint64_t v192 = (char *)&v176 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BE63A8(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v203 = (char *)&v176 - v29;
  uint64_t v189 = sub_241CD6EE0();
  uint64_t v187 = *(void *)(v189 - 8);
  MEMORY[0x270FA5388](v189);
  uint64_t v185 = (char *)&v176 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = sub_241CD6D00();
  uint64_t v184 = *(void *)(v186 - 8);
  MEMORY[0x270FA5388](v186);
  uint64_t v194 = (char *)&v176 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BE63FC(0, &qword_26B031A98, &qword_26B031A90, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
  uint64_t v33 = MEMORY[0x270FA5388](v32 - 8);
  uint64_t v183 = (uint64_t)&v176 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v188 = (uint64_t)&v176 - v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v198 = (uint64_t)&v176 - v37;
  sub_241BE63A8(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v39 = MEMORY[0x270FA5388](v38 - 8);
  uint64_t v204 = (uint64_t)&v176 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v182 = (char *)&v176 - v42;
  MEMORY[0x270FA5388](v41);
  uint64_t v197 = (uint64_t)&v176 - v43;
  sub_241BE63A8(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v45 = MEMORY[0x270FA5388](v44 - 8);
  uint64_t v191 = (char *)&v176 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v196 = (uint64_t)&v176 - v48;
  MEMORY[0x270FA5388](v47);
  uint64_t v200 = (uint64_t)&v176 - v49;
  uint64_t v50 = self;
  unint64_t v51 = (void *)*v4;
  id v52 = objc_msgSend(v50, sel_sharedInstanceForHealthStore_, *v4);
  if (!v52)
  {
    __break(1u);
    return;
  }
  uint64_t v53 = v52;
  uint64_t v202 = v9;
  uint64_t v195 = (char *)v4 + v9[5];
  uint64_t v54 = (char *)objc_msgSend(v52, sel_displayTypeForObjectType_, *((void *)v195 + 2));

  uint64_t v212 = v54;
  if (!v54)
  {
    sub_241CDA0F0();
    sub_241BE68F8((uint64_t)v4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
    uint64_t v58 = v208;
    sub_241BE68F8((uint64_t)v4, v208, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
    uint64_t v59 = sub_241CDA190();
    os_log_type_t v60 = sub_241CDB650();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = swift_slowAlloc();
      uint64_t v212 = v21;
      uint64_t v62 = v61;
      uint64_t v211 = (void (*)(uint64_t))swift_slowAlloc();
      v213[0] = (uint64_t)v211;
      *(_DWORD *)uint64_t v62 = 136315394;
      uint64_t v63 = v202;
      uint64_t v64 = sub_241AE0324(*v14, *((unsigned __int8 *)v14 + v202[5] + 8));
      uint64_t v214 = sub_241A33FE4(v64, v65, v213);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BE6594((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      *(_WORD *)(v62 + 12) = 2080;
      uint64_t v207 = v62 + 14;
      id v66 = objc_msgSend(*(id *)(v58 + v63[5] + 16), sel_sensitiveLoggingIdentifier);
      uint64_t v67 = v58;
      uint64_t v68 = sub_241CDB0D0();
      unint64_t v70 = v69;

      uint64_t v214 = sub_241A33FE4(v68, v70, v213);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BE6594(v67, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_241A23000, v59, v60, "[%s]: unable to find display type: %s", (uint8_t *)v62, 0x16u);
      uint64_t v71 = v211;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v71, -1, -1);
      MEMORY[0x245637F20](v62, -1, -1);

      v209[1](v212, v210);
    }
    else
    {
      sub_241BE6594((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      sub_241BE6594(v58, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);

      v209[1](v21, v210);
    }
    sub_241A41340();
    swift_allocError();
    unsigned char *v95 = 0;
    swift_willThrow();
    return;
  }
  uint64_t v55 = (uint64_t)v4;
  id v56 = v211;
  sub_241ADF6D8(a1);
  if (v56)
  {

    return;
  }
  uint64_t v72 = v57;
  if (!v57)
  {
LABEL_20:
    uint64_t v96 = sub_241CD7A10();
    uint64_t v97 = (uint64_t)v205;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v205, 1, 1, v96);
    uint64_t v98 = sub_241CD6810();
    uint64_t v99 = v204;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v204, 1, 1, v98);
    uint64_t v100 = v206;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v97, v100, v99, v8);
    sub_241CD89A0();
    uint64_t v101 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v203, 1, 1, v101);
    uint64_t v102 = v212;
    uint64_t v103 = sub_241CD8990();
    sub_241A92964(0);
    uint64_t v105 = (void *)v207;
    sub_241BE68F8((uint64_t)v8, v207 + *(int *)(v104 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v105[1] = 0;
    v105[2] = 0;
    *uint64_t v105 = v103;
    sub_241BE6594((uint64_t)v8, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  if (!objc_msgSend(v57, sel_hasInBedDuration)
    || !objc_msgSend(v72, sel_hasEndOfSleepTimeIntervalSinceReferenceDate))
  {

    goto LABEL_20;
  }
  uint64_t v178 = 0;
  uint64_t v211 = (void (*)(uint64_t))v72;
  uint64_t v73 = *(void **)&v195[*(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32)];
  type metadata accessor for SnidgetStringBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v51;
  uint64_t v75 = self;
  id v76 = v73;
  uint64_t v77 = inited;
  id v78 = v51;
  id v79 = objc_msgSend(v75, sel_sharedInstanceForHealthStore_, v78);
  *(void *)(v77 + 32) = v79;
  if (!v73)
  {
    id v80 = v79;
    id v76 = objc_msgSend(v80, sel_createHKUnitPreferenceController);
  }
  uint64_t v82 = v200;
  uint64_t v81 = v201;
  uint64_t v83 = v199;

  *(void *)(v77 + 24) = v76;
  uint64_t v86 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56);
  uint64_t v84 = v83 + 56;
  uint64_t v85 = v86;
  v86(v82, 1, 1, v81);
  uint64_t v87 = v211;
  unsigned int v88 = objc_msgSend(v211, sel_hasAsleepDuration);
  uint64_t v208 = v77;
  uint64_t v177 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v86;
  if (v88 && (objc_msgSend(v87, sel_asleepDuration), v89 > 2.22507386e-308))
  {
    if (qword_26B038428 != -1) {
      swift_once();
    }
    sub_241CD69E0();
    uint64_t v90 = v196;
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    uint64_t v91 = (void (*)(uint64_t))MEMORY[0x263F06828];
    sub_241BE65F4(v82, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    v85(v90, 0, 1, v201);
    sub_241BE66E0(v90, v82, (unint64_t *)&qword_26B031FB8, v91);
    objc_msgSend(v87, sel_asleepDuration);
    double v93 = v92;
    id v94 = objc_msgSend(v212, sel_presentation);
  }
  else
  {
    if (qword_26B038428 != -1) {
      swift_once();
    }
    sub_241CD69E0();
    uint64_t v106 = v196;
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    char v107 = (void (*)(uint64_t))MEMORY[0x263F06828];
    sub_241BE65F4(v82, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    v85(v106, 0, 1, v201);
    sub_241BE66E0(v106, v82, (unint64_t *)&qword_26B031FB8, v107);
    objc_msgSend(v87, sel_inBedDuration);
    double v93 = v108;
    id v94 = objc_msgSend(v212, sel_presentation);
  }
  id v109 = v94;
  id v110 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v93);
  id v111 = objc_msgSend(v109, sel_adjustedValueForDaemonValue_, v110);

  uint64_t v112 = (void *)sub_241CD8EF0();
  uint64_t v113 = (void *)sub_241CD8F10();
  uint64_t v114 = (void (**)(void *, void))(id)HKTimePeriodStringWithFonts();

  if (v114)
  {
    uint64_t v209 = v114;
    id v176 = v111;
    uint64_t v199 = v84;
    uint64_t v115 = sub_241CD6810();
    uint64_t v116 = *(void *)(v115 - 8);
    uint64_t v117 = v116;
    uint64_t v118 = v197;
    uint64_t v202 = *(int **)(v116 + 56);
    id v181 = (char *)(v116 + 56);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v202)(v197, 1, 1, v115);
    objc_msgSend(v87, sel_endOfSleepTimeIntervalSinceReferenceDate);
    id v119 = (id)HKDecodeDateForValue();
    uint64_t v120 = (uint64_t)v194;
    sub_241CD6CB0();

    uint64_t v121 = (uint64_t)v185;
    sub_241CD6EA0();
    uint64_t v122 = v198;
    sub_241BE5190(v190, v212, v120, v121, v198);
    (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v121, v189);
    (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v120, v186);
    sub_241BE65F4(v118, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v123 = v188;
    sub_241BE6650(v122, v188);
    sub_241BE67B8(0, &qword_26B031A90, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
    uint64_t v125 = v124;
    uint64_t v126 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 48);
    if (v126(v123, 1, v124) == 1)
    {
      sub_241BE683C(v123, &qword_26B031A98, &qword_26B031A90, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
      uint64_t v127 = 0;
    }
    else
    {
      uint64_t v127 = *(void *)(v123 + *(int *)(v125 + 48));
      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v123, v115);
    }
    uint64_t v146 = v203;
    uint64_t v147 = v183;
    sub_241BE6650(v198, v183);
    unsigned int v148 = v126(v147, 1, v125);
    uint64_t v210 = v127;
    if (v148 == 1)
    {
      swift_retain();
      sub_241BE683C(v147, &qword_26B031A98, &qword_26B031A90, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
      uint64_t v149 = 1;
      int v150 = v211;
      uint64_t v151 = (uint64_t)v182;
    }
    else
    {
      swift_retain();
      swift_release();
      uint64_t v151 = (uint64_t)v182;
      (*(void (**)(char *, uint64_t, uint64_t))(v117 + 32))(v182, v147, v115);
      uint64_t v149 = 0;
      int v150 = v211;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v202)(v151, v149, 1, v115);
    uint64_t v211 = (void (*)(uint64_t))MEMORY[0x263F062D0];
    sub_241BE66E0(v151, v197, &qword_26B038F10, MEMORY[0x263F062D0]);
    sub_241CD89A0();
    sub_241A3A9CC();
    uint64_t v153 = *(int *)(v152 + 48);
    uint64_t v202 = v212;
    objc_msgSend(v150, sel_endOfSleepTimeIntervalSinceReferenceDate);
    id v154 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    v146[v153] = 0;
    uint64_t v155 = *MEMORY[0x263F43F18];
    uint64_t v156 = sub_241CD8610();
    uint64_t v157 = *(void *)(v156 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v157 + 104))(v146, v155, v156);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v146, 0, 1, v156);
    uint64_t v203 = (char *)sub_241CD8990();
    uint64_t v212 = (char *)MEMORY[0x263F06828];
    sub_241BE674C(v200, v196, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    uint64_t v209 = v209;
    sub_241CD69D0();
    v177(v191, 1, 1, v201);
    v213[0] = 0x5F74656764696E53;
    v213[1] = 0xE800000000000000;
    id v158 = *((id *)v195 + 2);
    id v159 = objc_msgSend(v158, sel_description);
    sub_241CDB0D0();
    uint64_t v160 = v150;

    sub_241CDB180();
    swift_bridgeObjectRelease();
    objc_msgSend(v150, sel_asleepDuration);
    uint64_t v161 = v193;
    sub_241CD8E60();
    swift_bridgeObjectRelease();
    uint64_t v162 = sub_241CD8E70();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v162 - 8) + 56))(v161, 0, 1, v162);
    sub_241CD8FF0();
    swift_allocObject();
    uint64_t v201 = sub_241CD8FE0();
    objc_msgSend(v150, sel_endOfSleepTimeIntervalSinceReferenceDate);
    id v163 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v164 = (uint64_t)v205;
    sub_241CD79D0();
    uint64_t v165 = sub_241CD7A10();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v165 - 8) + 56))(v164, 0, 1, v165);
    uint64_t v166 = v197;
    uint64_t v167 = v204;
    uint64_t v168 = v211;
    sub_241BE674C(v197, v204, &qword_26B038F10, v211);
    sub_241A92964(0);
    uint64_t v171 = v206;
    os_log_t v170 = (void *)v207;
    uint64_t v172 = (unsigned char *)(v207 + *(int *)(v169 + 52));
    swift_bridgeObjectRetain();
    sub_241B4A1A8(1, v164, v171, v167, v172);
    swift_release();

    uint64_t v173 = v210;
    swift_release();

    uint64_t v174 = v201;
    *os_log_t v170 = v203;
    v170[1] = v174;
    v170[2] = v173;
    sub_241BE683C(v198, &qword_26B031A98, &qword_26B031A90, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
    sub_241BE65F4(v166, &qword_26B038F10, v168);
    sub_241BE65F4(v200, (unint64_t *)&qword_26B031FB8, (void (*)(uint64_t))v212);
  }
  else
  {
    uint64_t v128 = v181;
    sub_241CDA0F0();
    char v129 = v179;
    sub_241BE68F8(v55, (uint64_t)v179, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
    uint64_t v130 = v55;
    uint64_t v131 = v180;
    sub_241BE68F8(v130, v180, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
    id v132 = sub_241CDA190();
    os_log_type_t v133 = sub_241CDB650();
    if (os_log_type_enabled(v132, v133))
    {
      uint64_t v134 = swift_slowAlloc();
      uint64_t v207 = swift_slowAlloc();
      v213[0] = v207;
      *(_DWORD *)uint64_t v134 = 136315394;
      uint64_t v135 = v202;
      uint64_t v136 = sub_241AE0324(*v129, *((unsigned __int8 *)v129 + v202[5] + 8));
      id v176 = v111;
      uint64_t v214 = sub_241A33FE4(v136, v137, v213);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BE6594((uint64_t)v129, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      *(_WORD *)(v134 + 12) = 2080;
      uint64_t v206 = v134 + 14;
      uint64_t v138 = v131;
      id v139 = objc_msgSend(*(id *)(v131 + v135[5] + 16), sel_sensitiveLoggingIdentifier);
      uint64_t v140 = sub_241CDB0D0();
      unint64_t v142 = v141;

      uint64_t v143 = v140;
      uint64_t v87 = v211;
      uint64_t v214 = sub_241A33FE4(v143, v142, v213);
      sub_241CDBBF0();
      uint64_t v82 = v200;
      swift_bridgeObjectRelease();
      uint64_t v144 = v138;
      id v111 = v176;
      sub_241BE6594(v144, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_241A23000, v132, v133, "[%s]: unable to create primary string for: %s", (uint8_t *)v134, 0x16u);
      uint64_t v145 = v207;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v145, -1, -1);
      MEMORY[0x245637F20](v134, -1, -1);

      v209[1](v181, v210);
    }
    else
    {
      sub_241BE6594((uint64_t)v129, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      sub_241BE6594(v131, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);

      v209[1](v128, v210);
    }
    sub_241A41340();
    swift_allocError();
    *uint64_t v175 = 0;
    swift_willThrow();

    swift_release();
    sub_241BE65F4(v82, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  }
}

unint64_t sub_241BE5190@<X0>(uint64_t a1@<X1>, void *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v120 = a4;
  uint64_t v121 = a3;
  uint64_t v124 = a2;
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v130 = *(void (***)(unint64_t, uint64_t))(v8 - 8);
  uint64_t v131 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  unint64_t v129 = (unint64_t)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v116 = (char *)&v107 - v11;
  uint64_t v12 = type metadata accessor for SleepSnidgetFeedItemModelProvider();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v125 = (uint64_t *)((char *)&v107 - v17);
  MEMORY[0x270FA5388](v16);
  uint64_t v112 = (char *)&v107 - v18;
  sub_241BE63FC(0, &qword_26B031A88, &qword_26B031A80, type metadata accessor for HKTimeScope);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v122 = (uint64_t)&v107 - v20;
  sub_241BE63A8(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v123 = (char *)&v107 - v22;
  uint64_t v23 = sub_241CD6810();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v126 = v23;
  uint64_t v127 = v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  id v111 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v113 = (char *)&v107 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v114 = (char *)&v107 - v29;
  uint64_t v30 = sub_241CD6D00();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v118 = v30;
  uint64_t v119 = v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v128 = (char *)&v107 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_241CD6F50();
  MEMORY[0x270FA5388](v33 - 8);
  sub_241BE63A8(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v34 - 8);
  uint64_t v35 = sub_241CD6DE0();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v107 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_241CD6EE0();
  uint64_t v40 = MEMORY[0x270FA5388](v39);
  uint64_t v44 = (char *)&v107 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = a5;
  if (!a1)
  {
LABEL_9:
    unint64_t v61 = v129;
    sub_241CDA0F0();
    sub_241BE68F8((uint64_t)v5, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
    uint64_t v62 = sub_241CDA190();
    os_log_type_t v63 = sub_241CDB640();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = 136315138;
      v134[0] = v65;
      uint64_t v66 = sub_241AE0324(*v15, *((unsigned __int8 *)v15 + *(int *)(v12 + 20) + 8));
      uint64_t v133 = sub_241A33FE4(v66, v67, v134);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BE6594((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_241A23000, v62, v63, "[%s]: unable to find sleep summaries for the chart model.", v64, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v65, -1, -1);
      MEMORY[0x245637F20](v64, -1, -1);
    }
    else
    {
      sub_241BE6594((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
    }

    v130[1](v61, v131);
    sub_241BE67B8(0, &qword_26B031A90, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v132, 1, 1, v68);
  }
  uint64_t v45 = (uint64_t)v44;
  uint64_t v108 = v41;
  uint64_t v109 = v40;
  uint64_t v46 = v12;
  uint64_t v47 = *(int *)(v12 + 20);
  uint64_t v117 = v5;
  id v110 = (char *)v5 + v47;
  char v48 = *((unsigned char *)v5 + v47 + 8);
  id v115 = v42;
  if (v48)
  {
    uint64_t v49 = &selRef_hasMonthData;
    uint64_t v50 = &selRef_monthData;
  }
  else
  {
    uint64_t v49 = &selRef_hasWeekData;
    uint64_t v50 = &selRef_weekData;
  }
  uint64_t v51 = sub_241BE6458((SEL *)v49, (SEL *)v50);
  uint64_t v12 = v46;
  if (!v51)
  {

    uint64_t v5 = v117;
    goto LABEL_9;
  }
  unint64_t v129 = v51;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v38, *MEMORY[0x263F07740], v35);
  sub_241CD6DF0();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  sub_241CD6E80();
  sub_241CD6E90();
  sub_241CD6EB0();
  sub_241CD6EC0();
  id v52 = (void *)sub_241CD6C60();
  uint64_t v53 = (void *)sub_241CD6E40();
  id v54 = objc_msgSend(v52, sel_hk_sleepDayMidnightWithCalendar_, v53);

  uint64_t v55 = (uint64_t)v128;
  sub_241CD6CB0();

  id v56 = v117;
  uint64_t v57 = v122;
  sub_241BAEA80(*v117, v110, v124, v55, v45, v122);
  sub_241BE67B8(0, &qword_26B031A80, type metadata accessor for HKTimeScope);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v57, 1, v58) == 1)
  {
    sub_241BE683C(v57, &qword_26B031A88, &qword_26B031A80, type metadata accessor for HKTimeScope);
    uint64_t v59 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v123, 1, 1, v126);
    os_log_type_t v60 = v125;
LABEL_14:
    swift_bridgeObjectRelease();
    sub_241BE65F4(v59, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v75 = v116;
    sub_241CDA0F0();
    sub_241BE68F8((uint64_t)v56, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
    id v76 = sub_241CDA190();
    os_log_type_t v77 = sub_241CDB670();
    if (os_log_type_enabled(v76, v77))
    {
      id v78 = (uint8_t *)swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      *(_DWORD *)id v78 = 136315138;
      v134[0] = v79;
      uint64_t v80 = sub_241AE0324(*v60, *((unsigned __int8 *)v60 + *(int *)(v12 + 20) + 8));
      uint64_t v133 = sub_241A33FE4(v80, v81, v134);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BE6594((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_241A23000, v76, v77, "[%s]: Unable to make chart dateInterval for sleep.", v78, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v79, -1, -1);
      MEMORY[0x245637F20](v78, -1, -1);

      v130[1]((unint64_t)v75, v131);
      (*(void (**)(char *, uint64_t))(v119 + 8))(v128, v118);
    }
    else
    {

      sub_241BE6594((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      v130[1]((unint64_t)v75, v131);
      (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v55, v118);
    }
    uint64_t v82 = v132;
    sub_241BE67B8(0, &qword_26B031A90, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v82, 1, 1, v83);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v108 + 8))(v45, v109);
  }
  uint64_t v71 = v126;
  uint64_t v70 = v127;
  uint64_t v73 = v127 + 32;
  uint64_t v72 = *(void (***)(unint64_t, uint64_t))(v127 + 32);
  uint64_t v59 = (uint64_t)v123;
  ((void (*)(char *, uint64_t, uint64_t))v72)(v123, v57, v126);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v59, 0, 1, v71);
  int v74 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v59, 1, v71);
  os_log_type_t v60 = v125;
  if (v74 == 1) {
    goto LABEL_14;
  }
  uint64_t v84 = v72;
  uint64_t v85 = v114;
  uint64_t v130 = v84;
  uint64_t v131 = v73;
  uint64_t v86 = ((uint64_t (*)(char *, uint64_t, uint64_t))v84)(v114, v59, v71);
  MEMORY[0x270FA5388](v86);
  *(&v107 - 2) = (uint64_t)v85;
  *(&v107 - 1) = v45;
  uint64_t v87 = v70;
  unint64_t v88 = sub_241A78C70((uint64_t (*)(id *))sub_241BE6898, (uint64_t)(&v107 - 4), v129);
  type metadata accessor for SleepSnidgetViewContainer.ViewModel();
  uint64_t v89 = swift_allocObject();
  sub_241BE68B8();
  swift_bridgeObjectRetain();
  sub_241CDAEF0();
  uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  uint64_t v91 = v113;
  v90(v113, v85, v71);
  if (v88 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v92 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v92 = *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v93 = v132;
  uint64_t v94 = (uint64_t)v112;
  if (!v92)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v55, v118);
    goto LABEL_33;
  }
  unint64_t result = v92 - 1;
  if (__OFSUB__(v92, 1))
  {
    __break(1u);
    goto LABEL_40;
  }
  if ((v88 & 0xC000000000000001) != 0)
  {
LABEL_40:
    id v95 = (id)MEMORY[0x245637160](result, v88);
    goto LABEL_26;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v95 = *(id *)(v88 + 8 * result + 32);
LABEL_26:
    uint64_t v96 = v95;
    swift_bridgeObjectRelease();
    unsigned __int8 v97 = objc_msgSend(v96, sel_hasSleepStageData);
    sub_241BE68F8((uint64_t)v117, v94, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
    if (v97)
    {
      if ((*(unsigned char *)(v94 + *(int *)(v12 + 20) + 8) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_241BE6594(v94, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
LABEL_35:
        id v100 = objc_msgSend(v96, sel_dateInterval);
        uint64_t v101 = v111;
        sub_241CD67A0();

        uint64_t v102 = *(void (**)(char *, uint64_t))(v127 + 8);
        v102(v91, v71);
        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v55, v118);
        v102(v114, v71);
        uint64_t v103 = v101;
        uint64_t v99 = v130;
        ((void (*)(char *, char *, uint64_t))v130)(v91, v103, v71);
        goto LABEL_36;
      }
      char v98 = sub_241CDC100();
      swift_bridgeObjectRelease();
      sub_241BE6594(v94, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      if (v98) {
        goto LABEL_35;
      }
    }
    else
    {
      sub_241BE6594(v94, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
    }
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v55, v118);

LABEL_33:
    (*(void (**)(char *, uint64_t))(v127 + 8))(v114, v71);
    uint64_t v99 = v130;
LABEL_36:
    sub_241BE67B8(0, &qword_26B031A90, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
    uint64_t v105 = v104;
    uint64_t v106 = *(int *)(v104 + 48);
    ((void (*)(uint64_t, char *, uint64_t))v99)(v93, v91, v71);
    *(void *)(v93 + v106) = v89;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v93, 0, 1, v105);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v108 + 8))(v45, v109);
  }
  __break(1u);
  return result;
}

id sub_241BE6210(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_241CD6EE0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v10 = (void *)sub_241CD6790();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  uint64_t v11 = (void *)sub_241CD6E40();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v12 = objc_msgSend(v9, sel_hk_overlapsMidnightBasedDateInterval_gregorianCalendar_, v10, v11);

  return v12;
}

uint64_t sub_241BE634C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241BE68F8(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241BE6384(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_241BE63A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241BE63FC(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_241BE67B8(255, a3, a4);
    unint64_t v5 = sub_241CDBBD0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241BE6458(SEL *a1, SEL *a2)
{
  if (![v2 *a1]) {
    return 0;
  }
  id v4 = [v2 *a2];
  if (!v4) {
    return 0;
  }
  unint64_t v5 = v4;
  if (!objc_msgSend(v4, sel_hasQueryDataObject)) {
    goto LABEL_9;
  }
  id v6 = objc_msgSend(v5, sel_queryDataObject);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_241CD6AE0();
    unint64_t v10 = v9;

    uint64_t v11 = (void *)sub_241CD6AD0();
    sub_241A37374(v8, v10);
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46558]), sel_initWithData_, v11);

  if (!v12)
  {
LABEL_9:

    return 0;
  }
  id v13 = objc_msgSend(v12, sel_daySummariesWithSourceTimeZone_, 0);
  sub_241BE68B8();
  uint64_t v14 = sub_241CDB2C0();

  return v14;
}

uint64_t sub_241BE6594(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241BE65F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241BE63A8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241BE6650(uint64_t a1, uint64_t a2)
{
  sub_241BE63FC(0, &qword_26B031A98, &qword_26B031A90, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241BE66E0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241BE63A8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_241BE674C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241BE63A8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_241BE67B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_241CD6810();
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_241BE683C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241BE63FC(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_241BE6898(void **a1)
{
  return (unint64_t)sub_241BE6210(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

unint64_t sub_241BE68B8()
{
  unint64_t result = qword_26B02E800;
  if (!qword_26B02E800)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B02E800);
  }
  return result;
}

uint64_t sub_241BE68F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_241BE6960(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v25 = *v2;
  uint64_t v26 = a2;
  uint64_t v23 = sub_241CD7650();
  uint64_t v5 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_241CD7690();
  uint64_t v8 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  unint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (char *)v2 + OBJC_IVAR____TtC9Summaries26WheelchairSettingGenerator_context;
  uint64_t v12 = sub_241CD7740();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  uint64_t v27 = a1;
  uint64_t v14 = (void *)sub_241CD76E0();
  uint64_t v15 = qword_26B033770;
  id v16 = v14;
  if (v15 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F45688], v23);
  swift_bridgeObjectRetain();
  sub_241CD7680();

  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries26WheelchairSettingGenerator_domain, v10, v24);
  uint64_t v18 = v26;
  uint64_t v17 = v27;
  uint64_t v19 = sub_241BE6C60(v27, v26);
  uint64_t v20 = sub_241CD79A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v18, v20);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v12);
  *(void *)((char *)v3 + OBJC_IVAR____TtC9Summaries26WheelchairSettingGenerator_publisher) = v19;
  return v3;
}

uint64_t sub_241BE6C60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v4 = sub_241CD7740();
  uint64_t v22 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD79A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BE848C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  uint64_t v27 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v24, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v4);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v16 = (v9 + *(unsigned __int8 *)(v5 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v17 = (v6 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v15, v10, v7);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v18 + v16, v23, v22);
  *(void *)(v18 + v17) = v3;
  sub_241BE8520();
  sub_241BE88A0(&qword_268D433D0, (void (*)(uint64_t))sub_241BE8520);
  sub_241CDA620();
  sub_241BE88A0(qword_268D433D8, (void (*)(uint64_t))sub_241BE848C);
  uint64_t v19 = v26;
  uint64_t v20 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v19);
  return v20;
}

uint64_t sub_241BE6FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0F0();
  uint64_t v14 = sub_241CDA190();
  os_log_type_t v15 = sub_241CDB670();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v30 = a5;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v29 = a3;
    unint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    v27[1] = a2;
    uint64_t v19 = v18;
    uint64_t v31 = v18;
    uint64_t v28 = a1;
    *(_DWORD *)unint64_t v17 = 136446210;
    uint64_t v32 = a4;
    swift_getMetatypeMetadata();
    uint64_t v20 = sub_241CDB120();
    uint64_t v32 = sub_241A33FE4(v20, v21, &v31);
    a1 = v28;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v14, v15, "[%{public}s] Starting generation feed item change publisher", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v19, -1, -1);
    uint64_t v22 = v17;
    a3 = v29;
    MEMORY[0x245637F20](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v23 = sub_241BE7238();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  v27[-2] = a1;
  v27[-1] = a3;
  if ((v25 & 1) == 0)
  {
    uint64_t v32 = v24;
    sub_241BE8840((void **)&v32);
  }
  sub_241BE8588();
  return sub_241CDA5E0();
}

uint64_t sub_241BE7238()
{
  uint64_t v0 = sub_241CDA1A0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v66 = v0;
  uint64_t v67 = v1;
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = &v60[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = &v60[-v6];
  MEMORY[0x270FA5388](v5);
  os_log_type_t v63 = &v60[-v8];
  sub_241A72428(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = &v60[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v60[-v13];
  uint64_t v15 = sub_241CD7AB0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = &v60[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v17);
  uint64_t v65 = &v60[-v20];
  uint64_t v21 = sub_241CD7970();
  unint64_t v23 = v22;
  id v24 = objc_allocWithZone(MEMORY[0x263F46698]);
  uint64_t v68 = v21;
  unint64_t v69 = v23;
  char v25 = (void *)sub_241CD6AD0();
  id v26 = objc_msgSend(v24, sel_initWithData_, v25);

  if (!v26)
  {
    sub_241CDA0F0();
    uint64_t v34 = sub_241CDA190();
    os_log_type_t v35 = sub_241CDB650();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v70 = v37;
      *(_DWORD *)uint64_t v36 = 136446210;
      os_log_t v71 = v64;
      swift_getMetatypeMetadata();
      uint64_t v38 = sub_241CDB120();
      os_log_t v71 = (os_log_t)sub_241A33FE4(v38, v39, &v70);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v34, v35, "[%{public}s] Unable to decode HKCodableWheelchairSetting", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v37, -1, -1);
      MEMORY[0x245637F20](v36, -1, -1);

      sub_241A37374(v68, v69);
      (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v4, v66);
      return 0;
    }
    sub_241A37374(v68, v69);

    (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v4, v66);
    return 0;
  }
  sub_241BE8860();
  sub_241BE88A0(&qword_26B030408, (void (*)(uint64_t))sub_241BE8860);
  sub_241CD8A10();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_241A3F30C((uint64_t)v14);
    sub_241CDA0F0();
    uint64_t v27 = sub_241CDA190();
    os_log_type_t v28 = sub_241CDB650();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v70 = v30;
      *(_DWORD *)uint64_t v29 = 136446210;
      os_log_t v71 = v64;
      swift_getMetatypeMetadata();
      uint64_t v31 = sub_241CDB120();
      os_log_t v71 = (os_log_t)sub_241A33FE4(v31, v32, &v70);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v27, v28, "[%{public}s] Wheelchair sharable model does not have a version", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v30, -1, -1);
      MEMORY[0x245637F20](v29, -1, -1);

      sub_241A37374(v68, v69);
      (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v7, v66);
      return 0;
    }
    sub_241A37374(v68, v69);

    (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v7, v66);
    return 0;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v65, v14, v15);
  if (qword_26B030400 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_241A55850(v15, (uint64_t)qword_26B041128);
  uint64_t v41 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16);
  v41(v12, v40, v15);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
  char v42 = sub_241CD7A70();
  sub_241A3F30C((uint64_t)v12);
  if ((v42 & 1) == 0)
  {
    uint64_t v44 = v63;
    sub_241CDA0F0();
    v41(v19, (uint64_t)v65, v15);
    uint64_t v45 = sub_241CDA190();
    os_log_type_t v46 = sub_241CDB670();
    int v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v48 = swift_slowAlloc();
      int v61 = v47;
      uint64_t v49 = v48;
      uint64_t v62 = swift_slowAlloc();
      uint64_t v70 = v62;
      *(_DWORD *)uint64_t v49 = 136446722;
      os_log_t v71 = v64;
      swift_getMetatypeMetadata();
      os_log_t v64 = v45;
      uint64_t v50 = sub_241CDB120();
      os_log_t v71 = (os_log_t)sub_241A33FE4(v50, v51, &v70);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2082;
      sub_241BE88A0(&qword_26B02E8F8, MEMORY[0x263F45780]);
      uint64_t v52 = sub_241CDC0D0();
      os_log_t v71 = (os_log_t)sub_241A33FE4(v52, v53, &v70);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      id v54 = *(void (**)(unsigned char *, uint64_t))(v16 + 8);
      v54(v19, v15);
      *(_WORD *)(v49 + 22) = 2082;
      uint64_t v55 = sub_241CDC0D0();
      os_log_t v71 = (os_log_t)sub_241A33FE4(v55, v56, &v70);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      os_log_t v57 = v64;
      _os_log_impl(&dword_241A23000, v64, (os_log_type_t)v61, "[%{public}s] Wheelchair sharable model %{public}s is incompatible with currentCodeVersion %{public}s", (uint8_t *)v49, 0x20u);
      uint64_t v58 = v62;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v58, -1, -1);
      MEMORY[0x245637F20](v49, -1, -1);

      sub_241A37374(v68, v69);
      (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v63, v66);
      v54(v65, v15);
    }
    else
    {

      uint64_t v59 = *(void (**)(unsigned char *, uint64_t))(v16 + 8);
      v59(v19, v15);
      sub_241A37374(v68, v69);
      (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v44, v66);
      v59(v65, v15);
    }
    return 0;
  }
  if (objc_msgSend(v26, sel_hasIsUsingWheelchair))
  {
    unsigned int v43 = objc_msgSend(v26, sel_isUsingWheelchair);

    sub_241A37374(v68, v69);
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v65, v15);
    if (v43) {
      return 2;
    }
    else {
      return 1;
    }
  }
  else
  {

    sub_241A37374(v68, v69);
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v65, v15);
    return 0;
  }
}

uint64_t sub_241BE7BE4(void **a1)
{
  uint64_t v1 = *a1;
  sub_241CD76B0();
  sub_241A311E0(v4, v4[3]);
  uint64_t v2 = (void *)sub_241CD75B0();
  sub_241BE7C74(v1, v2);

  return sub_241A31190((uint64_t)v4);
}

uint64_t sub_241BE7C74(void *a1, void *a2)
{
  uint64_t v3 = v2;
  v56[1] = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_241CD6D70();
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v49 - v13;
  id v55 = 0;
  if (objc_msgSend(a2, sel__setWheelchairUse_error_, a1, &v55))
  {
    id v15 = v55;
    sub_241CDA0F0();
    id v16 = a2;
    uint64_t v17 = sub_241CDA190();
    os_log_type_t v18 = sub_241CDB670();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v51 = v9;
      uint64_t v20 = v19;
      uint64_t v50 = swift_slowAlloc();
      id v55 = v3;
      v56[0] = v50;
      *(_DWORD *)uint64_t v20 = 136446722;
      swift_getMetatypeMetadata();
      uint64_t v21 = sub_241CDB120();
      id v55 = (id)sub_241A33FE4(v21, v22, v56);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      id v55 = a1;
      type metadata accessor for HKWheelchairUse(0);
      uint64_t v23 = sub_241CDB120();
      id v55 = (id)sub_241A33FE4(v23, v24, v56);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2082;
      id v25 = objc_msgSend(v16, sel_profileIdentifier);
      id v26 = objc_msgSend(v25, sel_identifier);

      sub_241CD6D50();
      uint64_t v27 = sub_241CD6D20();
      unint64_t v29 = v28;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v8, v53);
      id v55 = (id)sub_241A33FE4(v27, v29, v56);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v17, v18, "[%{public}s] Successfully set wheelchair use to %s for profile %{public}s", (uint8_t *)v20, 0x20u);
      uint64_t v30 = v50;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v30, -1, -1);
      MEMORY[0x245637F20](v20, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v14, v51);
    }

    int v47 = *(uint64_t (**)(char *, uint64_t))(v54 + 8);
    uint64_t v48 = v14;
  }
  else
  {
    id v32 = v55;
    uint64_t v33 = (void *)sub_241CD6A40();

    swift_willThrow();
    sub_241CDA0F0();
    id v34 = a2;
    os_log_type_t v35 = sub_241CDA190();
    os_log_type_t v36 = sub_241CDB650();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v51 = v9;
      uint64_t v38 = v37;
      uint64_t v50 = swift_slowAlloc();
      id v55 = v3;
      v56[0] = v50;
      *(_DWORD *)uint64_t v38 = 136446466;
      swift_getMetatypeMetadata();
      uint64_t v39 = sub_241CDB120();
      id v55 = (id)sub_241A33FE4(v39, v40, v56);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      id v41 = objc_msgSend(v34, sel_profileIdentifier, v38 + 14);
      id v42 = objc_msgSend(v41, sel_identifier);

      sub_241CD6D50();
      uint64_t v43 = sub_241CD6D20();
      unint64_t v45 = v44;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v8, v53);
      id v55 = (id)sub_241A33FE4(v43, v45, v56);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v35, v36, "[%{public}s] Failed to set wheelchair use for profile %{public}s", (uint8_t *)v38, 0x16u);
      uint64_t v46 = v50;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v46, -1, -1);
      MEMORY[0x245637F20](v38, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v12, v51);
    }

    int v47 = *(uint64_t (**)(char *, uint64_t))(v54 + 8);
    uint64_t v48 = v12;
  }
  return v47(v48, v9);
}

uint64_t sub_241BE82B8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries26WheelchairSettingGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries26WheelchairSettingGenerator_context;
  uint64_t v4 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_241BE83AC()
{
  return type metadata accessor for WheelchairSettingGenerator();
}

uint64_t type metadata accessor for WheelchairSettingGenerator()
{
  uint64_t result = qword_268D433B8;
  if (!qword_268D433B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241BE8400()
{
  return swift_retain();
}

uint64_t sub_241BE8414@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries26WheelchairSettingGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_241BE848C()
{
  if (!qword_268D433C8)
  {
    sub_241BE8520();
    sub_241BE88A0(&qword_268D433D0, (void (*)(uint64_t))sub_241BE8520);
    unint64_t v0 = sub_241CDA630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D433C8);
    }
  }
}

void sub_241BE8520()
{
  if (!qword_26B032830)
  {
    sub_241BE8588();
    unint64_t v0 = sub_241CDA5F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032830);
    }
  }
}

void sub_241BE8588()
{
  if (!qword_26B034C28)
  {
    unint64_t v0 = sub_241CDB320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034C28);
    }
  }
}

uint64_t sub_241BE85E0()
{
  uint64_t v1 = sub_241CD79A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x270FA0238](v0, v11, v10);
}

uint64_t sub_241BE873C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_241CD79A0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_241CD7740() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241BE6FAC(v8, v1 + v4, v1 + v7, v9, a1);
}

uint64_t sub_241BE8840(void **a1)
{
  return sub_241BE7BE4(a1);
}

unint64_t sub_241BE8860()
{
  unint64_t result = qword_26B030410;
  if (!qword_26B030410)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B030410);
  }
  return result;
}

uint64_t sub_241BE88A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_241BE88E8(void *a1, void *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    id v25 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    uint64_t v8 = (void *)a2[2];
    *a1 = v5;
    a1[1] = v7;
    a1[2] = v8;
    uint64_t v67 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
    uint64_t v9 = v67[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v65 = a2;
    unint64_t v11 = (char *)a2 + v9;
    *uint64_t v10 = *((unsigned char *)a2 + v9);
    uint64_t v12 = (int *)_s8WorkPlanVMa();
    uint64_t v13 = v12[5];
    uint64_t v14 = &v10[v13];
    id v15 = &v11[v13];
    uint64_t v16 = sub_241CD95E0();
    uint64_t v17 = *(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_unknownObjectRetain();
    id v18 = v8;
    v17(v14, v15, v16);
    uint64_t v19 = v12[6];
    uint64_t v20 = &v10[v19];
    uint64_t v21 = &v11[v19];
    uint64_t v22 = sub_241CD78F0();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      sub_241BE8E58(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v26 = v12[7];
    uint64_t v27 = &v10[v26];
    unint64_t v28 = &v11[v26];
    sub_241AC7534();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    uint64_t v30 = v12[8];
    uint64_t v31 = &v10[v30];
    id v32 = &v11[v30];
    sub_241AC75E4();
    uint64_t v34 = v33;
    uint64_t v35 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v33))
    {
      sub_241BE8E58(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
      memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v35 + 16))(v31, v32, v34);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
    }
    id v25 = a1;
    uint64_t v37 = v67[7];
    uint64_t v38 = *(void **)((char *)v65 + v37);
    *(void *)((char *)a1 + v37) = v38;
    uint64_t v39 = v67[8];
    unint64_t v40 = (char *)a1 + v39;
    id v41 = (char *)v65 + v39;
    long long v42 = *(_OWORD *)((char *)v65 + v39 + 24);
    *(_OWORD *)((char *)a1 + v39 + 24) = v42;
    uint64_t v43 = v42;
    unint64_t v44 = **(void (***)(char *, char *, uint64_t))(v42 - 8);
    id v45 = v38;
    v44(v40, v41, v43);
    *(_OWORD *)((char *)a1 + v67[9]) = *(_OWORD *)((char *)v65 + v67[9]);
    uint64_t v46 = v67[10];
    int v47 = *(void **)((char *)v65 + v46);
    *(void *)((char *)a1 + v46) = v47;
    uint64_t v48 = v67[11];
    uint64_t v49 = *(void **)((char *)v65 + v48);
    *(void *)((char *)a1 + v48) = v49;
    uint64_t v50 = *(int *)(a3 + 20);
    uint64_t v51 = (char *)a1 + v50;
    uint64_t v52 = (char *)v65 + v50;
    long long v53 = *(_OWORD *)((char *)v65 + v50 + 24);
    *(_OWORD *)(v51 + 24) = v53;
    uint64_t v54 = v53;
    id v55 = **(void (***)(char *, char *, uint64_t))(v53 - 8);
    swift_unknownObjectRetain();
    id v56 = v47;
    id v57 = v49;
    v55(v51, v52, v54);
    uint64_t v58 = *(int *)(a3 + 24);
    uint64_t v59 = (char *)a1 + v58;
    os_log_type_t v60 = (char *)v65 + v58;
    uint64_t v61 = sub_241CD9A30();
    uint64_t v62 = *(void *)(v61 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
    {
      sub_241BE8EBC(0);
      memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
    }
  }
  return v25;
}

void sub_241BE8E58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241BE8EBC(uint64_t a1)
{
}

uint64_t sub_241BE8EF0(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();

  int v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = a1 + v4[6];
  uint64_t v6 = (int *)_s8WorkPlanVMa();
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v5 + v6[6];
  uint64_t v10 = sub_241CD78F0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v5 + v6[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v5 + v6[8];
  sub_241AC75E4();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }

  sub_241A31190(a1 + v4[8]);
  swift_unknownObjectRelease();

  sub_241A31190(a1 + *(int *)(a2 + 20));
  uint64_t v18 = a1 + *(int *)(a2 + 24);
  uint64_t v19 = sub_241CD9A30();
  uint64_t v22 = *(void *)(v19 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v18, 1, v19);
  if (!result)
  {
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
    return v21(v18, v19);
  }
  return result;
}

uint64_t sub_241BE91CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  uint64_t v61 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v6 = v61[6];
  uint64_t v63 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)_s8WorkPlanVMa();
  uint64_t v10 = v9[5];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = sub_241CD95E0();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_unknownObjectRetain();
  id v15 = v5;
  v14(v11, v12, v13);
  uint64_t v16 = v9[6];
  uint64_t v17 = (void *)(v7 + v16);
  uint64_t v18 = (const void *)(v8 + v16);
  uint64_t v19 = sub_241CD78F0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_241BE8E58(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v22 = v9[7];
  uint64_t v23 = v7 + v22;
  uint64_t v24 = v8 + v22;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  uint64_t v26 = v9[8];
  uint64_t v27 = (void *)(v7 + v26);
  unint64_t v28 = (const void *)(v8 + v26);
  sub_241AC75E4();
  uint64_t v30 = v29;
  uint64_t v31 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v29))
  {
    sub_241BE8E58(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
    memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v27, v28, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
  }
  uint64_t v33 = v61[7];
  uint64_t v34 = *(void **)(a2 + v33);
  *(void *)(a1 + v33) = v34;
  uint64_t v35 = v61[8];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  long long v38 = *(_OWORD *)(a2 + v35 + 24);
  *(_OWORD *)(a1 + v35 + 24) = v38;
  uint64_t v39 = v38;
  unint64_t v40 = **(void (***)(uint64_t, uint64_t, uint64_t))(v38 - 8);
  id v41 = v34;
  v40(v36, v37, v39);
  *(_OWORD *)(a1 + v61[9]) = *(_OWORD *)(a2 + v61[9]);
  uint64_t v42 = v61[10];
  uint64_t v43 = *(void **)(a2 + v42);
  *(void *)(v63 + v42) = v43;
  uint64_t v44 = v61[11];
  id v45 = *(void **)(a2 + v44);
  *(void *)(v63 + v44) = v45;
  uint64_t v46 = *(int *)(a3 + 20);
  uint64_t v47 = v63 + v46;
  uint64_t v48 = a2 + v46;
  long long v49 = *(_OWORD *)(a2 + v46 + 24);
  *(_OWORD *)(v47 + 24) = v49;
  uint64_t v50 = v49;
  uint64_t v51 = **(void (***)(uint64_t, uint64_t, uint64_t))(v49 - 8);
  swift_unknownObjectRetain();
  id v52 = v43;
  id v53 = v45;
  v51(v47, v48, v50);
  uint64_t v54 = *(int *)(a3 + 24);
  id v55 = (void *)(v63 + v54);
  id v56 = (const void *)(a2 + v54);
  uint64_t v57 = sub_241CD9A30();
  uint64_t v58 = *(void *)(v57 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    sub_241BE8EBC(0);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v58 + 16))(v55, v56, v57);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  return v63;
}

void *sub_241BE96F4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v5;
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  unint64_t v69 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v9 = v69[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  uint64_t v12 = (int *)_s8WorkPlanVMa();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v10[v13];
  id v15 = &v11[v13];
  uint64_t v16 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = v12[6];
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  uint64_t v20 = sub_241CD78F0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v68 = v18;
  LODWORD(v18) = v22(v18, 1, v20);
  int v23 = v22(v19, 1, v20);
  if (v18)
  {
    if (v23)
    {
      sub_241BE8E58(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      size_t v25 = *(void *)(*(void *)(v24 - 8) + 64);
      uint64_t v26 = v68;
LABEL_6:
      memcpy(v26, v19, v25);
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v68, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v68, 0, 1, v20);
  }
  else
  {
    if (v23)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v68, v20);
      sub_241BE8E58(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      size_t v25 = *(void *)(*(void *)(v27 - 8) + 64);
      uint64_t v26 = v68;
      goto LABEL_6;
    }
    (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v68, v19, v20);
  }
LABEL_9:
  uint64_t v28 = v12[7];
  uint64_t v29 = &v10[v28];
  uint64_t v30 = &v11[v28];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  uint64_t v32 = v12[8];
  uint64_t v33 = &v10[v32];
  uint64_t v34 = &v11[v32];
  sub_241AC75E4();
  uint64_t v36 = v35;
  uint64_t v37 = *(void *)(v35 - 8);
  long long v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v39 = v38(v33, 1, v35);
  int v40 = v38(v34, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v33, v34, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v33, v36);
LABEL_14:
    sub_241BE8E58(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
    memcpy(v33, v34, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v33, v34, v36);
LABEL_15:
  uint64_t v42 = v69[7];
  uint64_t v43 = *(void **)((char *)a2 + v42);
  uint64_t v44 = *(void **)((char *)a1 + v42);
  *(void *)((char *)a1 + v42) = v43;
  id v45 = v43;

  sub_241AC8320((void *)((char *)a1 + v69[8]), (void *)((char *)a2 + v69[8]));
  uint64_t v46 = v69[9];
  uint64_t v47 = (void *)((char *)a1 + v46);
  uint64_t v48 = (void *)((char *)a2 + v46);
  uint64_t v49 = v48[1];
  *uint64_t v47 = *v48;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v47[1] = v49;
  uint64_t v50 = v69[10];
  uint64_t v51 = *(void **)((char *)a2 + v50);
  id v52 = *(void **)((char *)a1 + v50);
  *(void *)((char *)a1 + v50) = v51;
  id v53 = v51;

  uint64_t v54 = v69[11];
  id v55 = *(void **)((char *)a2 + v54);
  id v56 = *(void **)((char *)a1 + v54);
  *(void *)((char *)a1 + v54) = v55;
  id v57 = v55;

  sub_241AC8320((void *)((char *)a1 + *(int *)(a3 + 20)), (void *)((char *)a2 + *(int *)(a3 + 20)));
  uint64_t v58 = *(int *)(a3 + 24);
  uint64_t v59 = (char *)a1 + v58;
  os_log_type_t v60 = (char *)a2 + v58;
  uint64_t v61 = sub_241CD9A30();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
  int v64 = v63(v59, 1, v61);
  int v65 = v63(v60, 1, v61);
  if (!v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v59, v60, v61);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v61);
    goto LABEL_20;
  }
  if (v65)
  {
LABEL_20:
    sub_241BE8EBC(0);
    memcpy(v59, v60, *(void *)(*(void *)(v66 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
  return a1;
}

uint64_t sub_241BE9D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)_s8WorkPlanVMa();
  uint64_t v10 = v9[5];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  id v15 = (void *)(v7 + v14);
  uint64_t v16 = (const void *)(v8 + v14);
  uint64_t v17 = sub_241CD78F0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_241BE8E58(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = v9[7];
  uint64_t v21 = v7 + v20;
  uint64_t v22 = v8 + v20;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = v9[8];
  size_t v25 = (void *)(v7 + v24);
  uint64_t v26 = (const void *)(v8 + v24);
  sub_241AC75E4();
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_241BE8E58(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
  uint64_t v31 = v5[8];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  long long v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  *(void *)(a1 + v5[10]) = *(void *)(a2 + v5[10]);
  *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
  uint64_t v35 = *(int *)(a3 + 20);
  uint64_t v36 = *(int *)(a3 + 24);
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  long long v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(void *)(v37 + 32) = *(void *)(v38 + 32);
  int v40 = (void *)(a1 + v36);
  uint64_t v41 = (const void *)(a2 + v36);
  uint64_t v42 = sub_241CD9A30();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    sub_241BE8EBC(0);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  return a1;
}

void *sub_241BEA184(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v6 = a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[1] = v5;
  a1[2] = v6;

  unint64_t v69 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v8 = v69[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  uint64_t v11 = (int *)_s8WorkPlanVMa();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v9[v12];
  uint64_t v14 = &v10[v12];
  uint64_t v15 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  uint64_t v19 = sub_241CD78F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  uint64_t v68 = v17;
  LODWORD(v17) = v21(v17, 1, v19);
  int v22 = v21(v18, 1, v19);
  if (v17)
  {
    if (v22)
    {
      sub_241BE8E58(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      size_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
      size_t v25 = v68;
LABEL_6:
      memcpy(v25, v18, v24);
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v68, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v68, 0, 1, v19);
  }
  else
  {
    if (v22)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v68, v19);
      sub_241BE8E58(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      size_t v24 = *(void *)(*(void *)(v26 - 8) + 64);
      size_t v25 = v68;
      goto LABEL_6;
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v68, v18, v19);
  }
LABEL_9:
  uint64_t v27 = v11[7];
  uint64_t v28 = &v9[v27];
  uint64_t v29 = &v10[v27];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = v11[8];
  uint64_t v32 = &v9[v31];
  uint64_t v33 = &v10[v31];
  sub_241AC75E4();
  uint64_t v35 = v34;
  uint64_t v36 = *(void *)(v34 - 8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v32, 1, v34);
  int v39 = v37(v33, 1, v35);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v32, v33, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v35);
LABEL_14:
    sub_241BE8E58(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
    memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v32, v33, v35);
LABEL_15:
  uint64_t v41 = v69[7];
  uint64_t v42 = *(void **)((char *)a1 + v41);
  *(void *)((char *)a1 + v41) = *(void *)((char *)a2 + v41);

  uint64_t v43 = v69[8];
  uint64_t v44 = (char *)a1 + v43;
  id v45 = (char *)a2 + v43;
  sub_241A31190((uint64_t)a1 + v43);
  long long v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  *((void *)v44 + 4) = *((void *)v45 + 4);
  uint64_t v47 = v69[9];
  uint64_t v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  swift_unknownObjectRelease();
  v48[1] = v50;
  uint64_t v51 = v69[10];
  id v52 = *(void **)((char *)a1 + v51);
  *(void *)((char *)a1 + v51) = *(void *)((char *)a2 + v51);

  uint64_t v53 = v69[11];
  uint64_t v54 = *(void **)((char *)a1 + v53);
  *(void *)((char *)a1 + v53) = *(void *)((char *)a2 + v53);

  uint64_t v55 = *(int *)(a3 + 20);
  id v56 = (char *)a1 + v55;
  id v57 = (char *)a2 + v55;
  sub_241A31190((uint64_t)a1 + v55);
  long long v58 = *((_OWORD *)v57 + 1);
  *(_OWORD *)id v56 = *(_OWORD *)v57;
  *((_OWORD *)v56 + 1) = v58;
  *((void *)v56 + 4) = *((void *)v57 + 4);
  uint64_t v59 = *(int *)(a3 + 24);
  os_log_type_t v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  uint64_t v62 = sub_241CD9A30();
  uint64_t v63 = *(void *)(v62 - 8);
  int v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
  LODWORD(v44) = v64(v60, 1, v62);
  int v65 = v64(v61, 1, v62);
  if (!v44)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 40))(v60, v61, v62);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v62);
    goto LABEL_20;
  }
  if (v65)
  {
LABEL_20:
    sub_241BE8EBC(0);
    memcpy(v60, v61, *(void *)(*(void *)(v66 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  return a1;
}

uint64_t sub_241BEA7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241BEA7C8);
}

uint64_t sub_241BEA7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_241BE8EBC(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_241BEA8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241BEA90C);
}

uint64_t sub_241BEA90C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  else
  {
    sub_241BE8EBC(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for SharingChartFeedItemStep(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B035B70);
}

void sub_241BEAA5C()
{
  type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v0 <= 0x3F)
  {
    sub_241BE8EBC(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_241BEAB2C(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  sub_241AABAD0();
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v10 = (uint64_t *)((char *)&v13 - v9);
  if (a1)
  {
    *unint64_t v10 = a1;
    swift_storeEnumTagMultiPayload();
    id v11 = a1;
  }
  else
  {
    sub_241BEBFB0(a4, (uint64_t)&v13 - v9, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
  }
  a2(v10);
  return sub_241BEC0AC((uint64_t)v10, (uint64_t (*)(void))sub_241AABAD0);
}

uint64_t sub_241BEAC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_241CD75A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SharingChartFeedItemStep.FeedItemChange(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (void *)((char *)&v29[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29[-1] - v15;
  sub_241BEAFE0(a1, (void *)((char *)&v29[-1] - v15));
  sub_241BEBFB0((uint64_t)v16, (uint64_t)v14, type metadata accessor for SharingChartFeedItemStep.FeedItemChange);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = *v14;
    uint64_t v18 = v14[1];
    uint64_t v19 = type metadata accessor for SharingChartFeedItemStep(0);
    sub_241A37260(v3 + *(int *)(v19 + 20), (uint64_t)v29);
    sub_241A311E0(v29, v30);
    sub_241A31064(0, (unint64_t *)&qword_26B038860);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_241CEB730;
    *(void *)(v20 + 32) = v17;
    *(void *)(v20 + 40) = v18;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a2;
    *(void *)(v21 + 24) = a3;
    swift_retain();
    sub_241CD7640();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 32))(v10, v14, v7);
    uint64_t v22 = type metadata accessor for SharingChartFeedItemStep(0);
    sub_241A37260(v3 + *(int *)(v22 + 20), (uint64_t)v29);
    uint64_t v28 = v31;
    sub_241A311E0(v29, v30);
    sub_241BE8E58(0, &qword_26B038858, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
    uint64_t v23 = a2;
    unint64_t v24 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 16))(v25 + v24, v10, v7);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v23;
    *(void *)(v26 + 24) = a3;
    swift_retain();
    sub_241CD7620();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_241BEC0AC((uint64_t)v16, type metadata accessor for SharingChartFeedItemStep.FeedItemChange);
  return sub_241A31190((uint64_t)v29);
}

uint64_t sub_241BEAFE0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int v74 = a2;
  sub_241A29620(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v73 = (uint64_t)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD75A0();
  uint64_t v71 = *(void *)(v6 - 8);
  uint64_t v72 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v63 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SharingChartFeedItemStep(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v64 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BEC078(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CD6EE0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for SharingChartFeedItemFactory(0);
  uint64_t v17 = MEMORY[0x270FA5388](v70);
  uint64_t v19 = (char **)((char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v69 = (uint64_t)&v63 - v20;
  uint64_t v21 = (void *)sub_241BEB5D4(a1);
  uint64_t v67 = v22;
  uint64_t v68 = v21;
  uint64_t v23 = (void *)sub_241BEB858(a1);
  uint64_t v65 = v24;
  uint64_t v66 = v23;
  uint64_t v25 = *(void **)(v2 + 16);
  uint64_t v26 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v27 = *(void **)(v2 + *(int *)(v26 + 28));
  uint64_t v28 = a1 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) + 28);
  uint64_t v29 = v13;
  sub_241BEBFB0(v28, (uint64_t)v12, (uint64_t (*)(void))sub_241BEC078);
  uint64_t v30 = v2;
  uint64_t v31 = v64;
  sub_241BEBFB0(v30, v64, type metadata accessor for SharingChartFeedItemStep);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    uint64_t v32 = *(int *)(v26 + 40);
    uint64_t v33 = v31;
    uint64_t v34 = *(void **)(v31 + v32);
    id v35 = v25;
    id v36 = v27;
    id v37 = objc_msgSend(v34, sel_currentCalendar);
    int v38 = v16;
    sub_241CD6E50();

    uint64_t v31 = v33;
    sub_241BEC0AC((uint64_t)v12, (uint64_t (*)(void))sub_241BEC078);
  }
  else
  {
    int v38 = v16;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v29);
    id v39 = v25;
    id v40 = v27;
  }
  sub_241BEC0AC(v31, type metadata accessor for SharingChartFeedItemStep);
  uint64_t v41 = v70;
  *((unsigned char *)v19 + *(int *)(v70 + 32)) = 1;
  void *v19 = v25;
  v19[1] = v27;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))((char *)v19 + *(int *)(v41 + 24), v38, v29);
  id v42 = v25;
  id v43 = v27;
  uint64_t v44 = v29;
  id v45 = objc_msgSend(v42, sel_profileIdentifier);
  uint64_t v46 = sub_241CA2008(v43, (uint64_t)v45, 1);
  uint64_t v48 = v47;

  (*(void (**)(char *, uint64_t))(v14 + 8))(v38, v44);
  uint64_t v49 = (void *)((char *)v19 + *(int *)(v41 + 28));
  *uint64_t v49 = v46;
  v49[1] = v48;
  uint64_t v50 = v69;
  sub_241BEC10C((uint64_t)v19, v69, type metadata accessor for SharingChartFeedItemFactory);
  uint64_t v51 = v73;
  id v52 = v68;
  uint64_t v53 = v66;
  sub_241AAD848(v68, v67, v66, v65, v73);
  sub_241ACB8D4(v53);
  sub_241ACB8D4(v52);
  uint64_t v55 = v71;
  uint64_t v54 = v72;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v51, 1, v72) == 1)
  {
    sub_241BEC0AC(v51, (uint64_t (*)(void))sub_241A29620);
    id v56 = (uint64_t *)(v50 + *(int *)(v41 + 28));
    uint64_t v58 = *v56;
    uint64_t v57 = v56[1];
    swift_bridgeObjectRetain();
    sub_241BEC0AC(v50, type metadata accessor for SharingChartFeedItemFactory);
    uint64_t v59 = v74;
    void *v74 = v58;
    v59[1] = v57;
  }
  else
  {
    sub_241BEC0AC(v50, type metadata accessor for SharingChartFeedItemFactory);
    os_log_type_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
    uint64_t v61 = v63;
    v60(v63, v51, v54);
    v60((char *)v74, (uint64_t)v61, v54);
  }
  type metadata accessor for SharingChartFeedItemStep.FeedItemChange(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_241BEB5D4(uint64_t a1)
{
  uint64_t v3 = sub_241CD7520();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(a1 + 16);
  uint64_t v10 = *(void **)(a1 + 24);
  if (v11 == (void *)1 || v10 == 0) {
    return 1;
  }
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v14 = *(void **)(v1 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  *(void *)(inited + 32) = v14;
  unint64_t v21 = inited;
  sub_241CDB2E0();
  unint64_t v15 = v21;
  swift_storeEnumTagMultiPayload();
  sub_241ACC264(v11, v10);
  id v16 = v10;
  id v17 = v14;
  sub_241B7417C(v15, (uint64_t)v9, 1);
  swift_bridgeObjectRelease();
  sub_241BEC0AC((uint64_t)v9, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  sub_241CD7510();
  sub_241BE8E58(0, &qword_26B034F20, MEMORY[0x263F45618], MEMORY[0x263F8E0F8]);
  unint64_t v18 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v19 + v18, v6, v3);

  return (uint64_t)v10;
}

uint64_t sub_241BEB858(uint64_t a1)
{
  uint64_t v3 = sub_241CD7520();
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BE8EBC(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD9A30();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SharingChartFeedItemStep(0);
  sub_241BEBFB0(v1 + *(int *)(v16 + 24), (uint64_t)v11, (uint64_t (*)(void))sub_241BE8EBC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_241BEC0AC((uint64_t)v11, (uint64_t (*)(void))sub_241BE8EBC);
    return 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  id v17 = *(void **)(a1 + 32);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 1;
  }
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v19 = *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28);
  uint64_t v28 = v3;
  uint64_t v20 = *(void **)(v1 + v19);
  *(void *)(inited + 32) = v20;
  unint64_t v30 = inited;
  sub_241CDB2E0();
  unint64_t v21 = v30;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v15, v12);
  swift_storeEnumTagMultiPayload();
  id v22 = v17;
  id v23 = v20;
  sub_241B7417C(v21, (uint64_t)v8, 1);
  swift_bridgeObjectRelease();
  sub_241BEC0AC((uint64_t)v8, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  sub_241CD7510();
  sub_241BE8E58(0, &qword_26B034F20, MEMORY[0x263F45618], MEMORY[0x263F8E0F8]);
  uint64_t v24 = v29;
  unint64_t v25 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v26 + v25, v5, v28);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return (uint64_t)v17;
}

uint64_t sub_241BEBC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  sub_241BEBFB0(a1, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  sub_241BEC10C((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  swift_retain();
  sub_241BEAC34(a1, (uint64_t)sub_241BEBF1C, v10);
  return swift_release();
}

uint64_t sub_241BEBDB0()
{
  uint64_t v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void **)(v0 + v3);
  if (v6 != (void *)1)
  {
  }
  uint64_t v7 = *(void **)(v5 + 16);
  if (v7 != (void *)1)
  {
  }
  uint64_t v8 = v5 + *(int *)(v1 + 28);
  uint64_t v9 = sub_241CD6EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241BEBF1C(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  uint64_t v4 = *(void (**)(void *))(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_241BEAB2C(a1, v4, v5, v6);
}

uint64_t type metadata accessor for SharingChartFeedItemStep.FeedItemChange(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B035AF0);
}

uint64_t sub_241BEBFB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241BEC018()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241BEC050()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_241BEC078(uint64_t a1)
{
}

uint64_t sub_241BEC0AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241BEC10C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_241BEC174(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v8 = sub_241CD75A0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241BEC274(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = sub_241CD75A0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
}

void *sub_241BEC304(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = sub_241CD75A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_241BEC3B4(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_241BEC0AC((uint64_t)a1, type metadata accessor for SharingChartFeedItemStep.FeedItemChange);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v4 = sub_241CD75A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_241BEC490(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_241CD75A0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_241BEC544(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_241BEC0AC((uint64_t)a1, type metadata accessor for SharingChartFeedItemStep.FeedItemChange);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_241CD75A0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_241BEC61C()
{
  uint64_t result = sub_241CD75A0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_241BEC6B4()
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD9ED0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_241BEC780()
{
  sub_241A3F384(v0 + qword_26B041200);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

void sub_241BEC7F4(void (*a1)(void *, uint64_t), uint64_t a2)
{
  uint64_t v5 = v2 + qword_26B041200;
  uint64_t v6 = *(void **)(v5 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = self;
    id v23 = v6;
    id v10 = objc_msgSend(v9, sel_queryDescriptorWithSampleType_, v8);
    uint64_t v22 = v5;
    id v11 = objc_msgSend(self, sel_sortDescriptorsForMostRecentSamples);
    sub_241A313AC(0, (unint64_t *)&qword_26B038848);
    sub_241CDB2C0();

    sub_241A33460();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_241CEB710;
    *(void *)(v12 + 32) = v10;
    sub_241CDB2E0();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(void *)(v13 + 24) = a2;
    id v14 = objc_allocWithZone(MEMORY[0x263F0A6E0]);
    sub_241A313AC(0, &qword_26B036890);
    id v15 = v10;
    swift_retain();
    uint64_t v16 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v17 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_241B455D8;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241C856FC;
    aBlock[3] = &unk_26F5C5408;
    unint64_t v18 = _Block_copy(aBlock);
    id v19 = objc_msgSend(v14, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v16, 1, v17, v18);

    _Block_release(v18);
    swift_release();
    objc_msgSend(*(id *)(v22 + 16), sel_executeQuery_, v19);
  }
  else
  {
    type metadata accessor for MostRecentSampleCurrentValueSharableModelStep.SampleProcessingError();
    swift_getWitnessTable();
    uint64_t v20 = (void *)swift_allocError();
    unsigned char *v21 = 0;
    a1(v20, 1);
  }
}

void sub_241BECB40(void *a1, void (*a2)(void, void, void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v49 = *v3;
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BEE710(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v46 = a2;
    uint64_t v47 = a3;
    uint64_t v18 = *(void *)(v49 + 80);
    uint64_t v19 = swift_dynamicCastUnknownClass();
    if (v19)
    {
      uint64_t v20 = v19;
      type metadata accessor for SummariesFullProfileExecutor.Request(0);
      id v21 = a1;
      sub_241CD9E50();
      sub_241A313AC(0, &qword_26B034E48);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v13, v17, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
      id v22 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v13, 1, 0);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      id v23 = (void *)swift_allocObject();
      uint64_t v24 = v46;
      uint64_t v25 = v47;
      v23[2] = v18;
      id v23[3] = v24;
      v23[4] = v25;
      v23[5] = v21;
      v23[6] = v49;
      uint64_t v26 = *(void (**)(uint64_t, id, void (*)(void *, void *, char), void *))(*v4 + 128);
      id v27 = v21;
      swift_retain();
      v26(v20, v22, sub_241BEE7A4, v23);

      swift_release();
    }
    else
    {
      id v29 = a1;
      sub_241CDA0F0();
      id v30 = v29;
      uint64_t v31 = sub_241CDA190();
      os_log_type_t v32 = sub_241CDB650();
      int v33 = v32;
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v51 = v45;
        *(_DWORD *)uint64_t v34 = 136446722;
        uint64_t v35 = sub_241CDC270();
        uint64_t v50 = sub_241A33FE4(v35, v36, &v51);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        LODWORD(v49) = v33;
        *(_WORD *)(v34 + 12) = 2082;
        swift_getObjectType();
        uint64_t v37 = sub_241CDC270();
        uint64_t v50 = sub_241A33FE4(v37, v38, &v51);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 22) = 2082;
        uint64_t v39 = sub_241CDC270();
        uint64_t v50 = sub_241A33FE4(v39, v40, &v51);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v31, (os_log_type_t)v49, "[%{public}s] Unable to cast %{public}s to %{public}s", (uint8_t *)v34, 0x20u);
        uint64_t v41 = v45;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v41, -1, -1);
        MEMORY[0x245637F20](v34, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v8);
      type metadata accessor for MostRecentSampleCurrentValueSharableModelStep.SampleProcessingError();
      swift_getWitnessTable();
      id v42 = (void *)swift_allocError();
      *id v43 = 0;
      v46(v42, 0, 1);
    }
  }
  else
  {
    uint64_t v28 = *(void (**)(void, void))(v49 + 152);
    v28(a2, a3);
  }
}

uint64_t sub_241BED10C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a1;
  v9[4] = a3;
  v9[5] = a4;
  id v10 = *(void (**)(id, uint64_t, void (*)(void *, char), void *))(*(void *)v4 + 144);
  swift_retain();
  id v11 = a1;
  swift_retain();
  v10(v11, a2, sub_241BEE700, v9);

  return swift_release();
}

uint64_t sub_241BED1E0()
{
  uint64_t v0 = sub_241CD6EE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241CD6D00();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v15 - v9;
  sub_241CD6CF0();
  id v11 = (void *)sub_241CD6C60();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  id v13 = (id)HKEndOfDayForDate();

  sub_241CD6CB0();
  sub_241CD6EA0();
  sub_241CD6C30();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, v4);
}

void sub_241BED3C8(void (*a1)(id, id, void), uint64_t a2)
{
  long long v18[2] = a2;
  uint64_t v19 = a1;
  sub_241BEE710(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v18 - v3;
  uint64_t v5 = (void (*)(uint64_t))MEMORY[0x263F45780];
  sub_241BEE710(0, &qword_26B032050, MEMORY[0x263F45780]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)v18 - v10;
  sub_241CD7A80();
  uint64_t v12 = sub_241CD7AB0();
  uint64_t v13 = *(void *)(v12 - 8);
  v18[0] = *(void *)(v13 + 56);
  v18[1] = v13 + 56;
  ((void (*)(char *, void, uint64_t, uint64_t))v18[0])(v11, 0, 1, v12);
  sub_241A313AC(0, &qword_26B030440);
  uint64_t v14 = sub_241CD9970();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v4, 1, 1, v14);
  sub_241A3F28C((uint64_t)v11, (uint64_t)v9);
  id v16 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v4, (uint64_t)v9, 0, 0);
  sub_241BEE65C((uint64_t)v11, &qword_26B032050, v5);
  sub_241CD7A80();
  ((void (*)(char *, void, uint64_t, uint64_t))v18[0])(v11, 0, 1, v12);
  v15(v4, 1, 1, v14);
  sub_241A3F28C((uint64_t)v11, (uint64_t)v9);
  id v17 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v4, (uint64_t)v9, 0, 0);
  sub_241BEE65C((uint64_t)v11, &qword_26B032050, v5);
  v19(v16, v17, 0);
}

BOOL sub_241BED69C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_241AB0FF8(*a1, *a2);
}

uint64_t sub_241BED6A8()
{
  return sub_241AB111C();
}

uint64_t sub_241BED6B0()
{
  return sub_241AB1008();
}

uint64_t sub_241BED6B8()
{
  return sub_241CDC200();
}

uint64_t sub_241BED6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v3;
  v6[3] = a2;
  v6[4] = a3;
  uint64_t v7 = *(void (**)(void, void *))(*(void *)v3 + 112);
  swift_retain();
  swift_retain();
  v7(sub_241BEE634, v6);

  return swift_release();
}

void sub_241BED7AC(id a1, char a2, uint64_t a3, void (*a4)(id, void, uint64_t), uint64_t a5)
{
  if (a2)
  {
    id v8 = a1;
    a4(a1, 0, 1);
  }
  else
  {
    id v9 = a1;
    sub_241BECB40(a1, (void (*)(void, void, void))a4, a5);
  }

  sub_241A960B8(a1);
}

void sub_241BED840(void *a1, void *a2, char a3, void (*a4)(void, void, void), uint64_t a5, void *a6)
{
  uint64_t v12 = sub_241CDA1A0();
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v47 = v13;
    id v20 = a1;
    sub_241CDA0F0();
    sub_241AABB40(a1, a2, 1);
    id v21 = a6;
    sub_241AABB40(a1, a2, 1);
    id v22 = v21;
    id v23 = sub_241CDA190();
    os_log_type_t v24 = sub_241CDB650();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      int v43 = v25;
      uint64_t v27 = v26;
      uint64_t v44 = swift_slowAlloc();
      uint64_t v49 = v44;
      *(_DWORD *)uint64_t v27 = 136446722;
      uint64_t v46 = a4;
      uint64_t v28 = sub_241CDC270();
      uint64_t v45 = a5;
      uint64_t v48 = sub_241A33FE4(v28, v29, &v49);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      v41[1] = v27 + 14;
      id v30 = objc_msgSend(v22, sel_sampleType);
      id v31 = objc_msgSend(v30, sel_identifier);
      os_log_t v42 = v23;
      id v32 = v31;

      uint64_t v33 = sub_241CDB0D0();
      unint64_t v35 = v34;

      uint64_t v48 = sub_241A33FE4(v33, v35, &v49);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2082;
      uint64_t v48 = (uint64_t)a1;
      id v36 = a1;
      sub_241A3DA64();
      uint64_t v37 = sub_241CDB120();
      uint64_t v48 = sub_241A33FE4(v37, v38, &v49);
      sub_241CDBBF0();
      a4 = v46;
      swift_bridgeObjectRelease();
      sub_241AABBD0(a1, a2, 1);
      sub_241AABBD0(a1, a2, 1);
      id v23 = v42;
      _os_log_impl(&dword_241A23000, v42, (os_log_type_t)v43, "[%{public}s] Current value generation for most recent sample type %s failed: %{public}s", (uint8_t *)v27, 0x20u);
      uint64_t v39 = v44;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v39, -1, -1);
      MEMORY[0x245637F20](v27, -1, -1);
    }
    else
    {

      sub_241AABBD0(a1, a2, 1);
      sub_241AABBD0(a1, a2, 1);
    }

    v47[1](v15, v12);
    id v40 = a1;
    a4(a1, 0, 1);
    sub_241AABBD0(a1, a2, 1);
    sub_241AABBD0(a1, a2, 1);
  }
  else
  {
    id v16 = a2;
    id v17 = a1;
    id v18 = v16;
    uint64_t v47 = (void (**)(char *, uint64_t))v17;
    a4(a1, a2, 0);
    sub_241AABBD0(a1, a2, 0);

    uint64_t v19 = v47;
  }
}

void sub_241BEDC8C(void *a1, char a2, uint64_t a3, void *a4, void (*a5)(void *, id, uint64_t), uint64_t a6)
{
  v30[1] = a6;
  sub_241BEE710(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v30 - v11;
  sub_241BEE710(0, &qword_26B032050, MEMORY[0x263F45780]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  id v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  id v18 = (char *)v30 - v17;
  uint64_t v19 = sub_241CD6D00();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v22 = (char *)v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v26 = a1;
    a5(a1, 0, 1);
    sub_241A960B8(a1);
  }
  else
  {
    id v23 = a1;
    id v24 = objc_msgSend(a4, sel_endDate);
    sub_241CD6CB0();

    LOBYTE(v24) = sub_241BEE04C();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    if (v24)
    {
      id v25 = v23;
    }
    else
    {
      sub_241CD7A80();
      uint64_t v27 = sub_241CD7AB0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v18, 0, 1, v27);
      sub_241A313AC(0, &qword_26B030440);
      uint64_t v28 = sub_241CD9970();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 1, 1, v28);
      sub_241A3F28C((uint64_t)v18, (uint64_t)v16);
      id v25 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v12, (uint64_t)v16, 0, 0);
      sub_241BEE65C((uint64_t)v18, &qword_26B032050, MEMORY[0x263F45780]);
    }
    sub_241AF1514(a1);
    id v29 = v25;
    a5(a1, v25, 0);
    sub_241A960B8(a1);

    sub_241A960B8(a1);
  }
}

uint64_t sub_241BEE04C()
{
  sub_241BEE710(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v9 - v1;
  uint64_t v3 = sub_241CD6D00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BED1E0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_241BEE65C((uint64_t)v2, &qword_26B0385B8, MEMORY[0x263F07490]);
    char v7 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    char v7 = sub_241CD6C70();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v7 & 1;
}

void sub_241BEE1FC(void *a1, void *a2, void (*a3)(id, void), uint64_t a4)
{
  uint64_t v9 = *v4;
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = sub_241AF1CC8(a1, (uint64_t)v4 + qword_26B0411F8, a2);
  if (v14)
  {
    id v35 = v14;
    a3(v14, 0);
    uint64_t v15 = v35;
  }
  else
  {
    sub_241CDA0F0();
    id v16 = a1;
    uint64_t v17 = sub_241CDA190();
    os_log_type_t v18 = sub_241CDB660();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v33 = v9;
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v37 = v32;
      uint64_t v34 = a4;
      *(_DWORD *)uint64_t v20 = 136446210;
      id v21 = objc_msgSend(v16, sel_sampleType, v20 + 4);
      int v31 = v19;
      id v22 = v21;
      id v23 = objc_msgSend(v21, sel_identifier);

      uint64_t v24 = sub_241CDB0D0();
      id v35 = a3;
      unint64_t v26 = v25;

      uint64_t v36 = sub_241A33FE4(v24, v26, &v37);
      sub_241CDBBF0();

      a3 = (void (*)(id, void))v35;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v17, (os_log_type_t)v31, "Base class unable to handle sample: %{public}s", v20, 0xCu);
      uint64_t v27 = v32;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v27, -1, -1);
      MEMORY[0x245637F20](v20, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    type metadata accessor for MostRecentSampleCurrentValueSharableModelStep.SampleProcessingError();
    swift_getWitnessTable();
    uint64_t v28 = (void *)swift_allocError();
    *id v29 = 1;
    a3(v28, 1);
  }
}

uint64_t sub_241BEE560()
{
  sub_241BEC780();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MostRecentSampleCurrentValueSharableModelStep()
{
  return sub_241A91234();
}

uint64_t sub_241BEE5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241BED6F8(a1, a2, a3);
}

uint64_t sub_241BEE5F4()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241BEE634(void *a1, char a2)
{
  sub_241BED7AC(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(id, void, uint64_t))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t type metadata accessor for MostRecentSampleCurrentValueSharableModelStep.SampleProcessingError()
{
  return sub_241A91234();
}

uint64_t sub_241BEE65C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241BEE710(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241BEE6B8()
{
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_241BEE700(void *a1, char a2)
{
  sub_241BEDC8C(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void (**)(void *, id, uint64_t))(v2 + 32), *(void *)(v2 + 40));
}

void sub_241BEE710(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241BEE764()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_241BEE7A4(void *a1, void *a2, char a3)
{
  sub_241BED840(a1, a2, a3 & 1, *(void (**)(void, void, void))(v3 + 24), *(void *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_241BEE7B8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241BEE7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241BEE800()
{
  return swift_release();
}

unsigned char *sub_241BEE808(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241BEE8D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_241BEE8FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_241BEE918()
{
  if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for ChartSharableModelGenerator.Request(0) + 32)) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v1 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if ((v1 & 1) == 0) {
      return MEMORY[0x263F8EE78];
    }
  }
  sub_241BF5350(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241CEB730;
  int v3 = (void *)sub_241CD7770();
  sub_241CDB470();

  return v2;
}

uint64_t sub_241BEEA78()
{
  uint64_t v1 = sub_241CD7650();
  uint64_t v30 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v29 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_241CD73B0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v27 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v26 = (uint64_t)&v25 - v8;
  id v28 = (id)sub_241CD76E0();
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v31 = inited;
  sub_241CDB2E0();
  uint64_t v10 = v31;
  char v11 = *(unsigned char *)(v0 + *(int *)(type metadata accessor for ChartSharableModelGenerator.Request(0) + 32));
  sub_241BF5350(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v12 = *(void *)(v4 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (v11)
  {
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_241CEB730;
    unint64_t v15 = v14 + v13;
    id v16 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 104);
    v16(v15, *MEMORY[0x263F454D0], v3);
  }
  else
  {
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_241CEB720;
    unint64_t v18 = v14 + v13;
    uint64_t v19 = *MEMORY[0x263F45520];
    uint64_t v25 = v10;
    id v16 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 104);
    v16(v18, v19, v3);
    v16(v18 + v12, *MEMORY[0x263F45538], v3);
  }
  uint64_t v17 = sub_241C5D74C(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v31 = v17;
  uint64_t v20 = v27;
  v16((unint64_t)v27, *MEMORY[0x263F45500], v3);
  uint64_t v21 = v26;
  sub_241C5A0BC(v26, v20);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v3);
  id v22 = v28;
  unint64_t v23 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v23);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, *MEMORY[0x263F45690], v1);
  sub_241CD7680();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241BEEE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241A4145C(v2 + *(int *)(a1 + 36), a2);
}

void *sub_241BEEEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(char *, uint64_t))
{
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  uint64_t v67 = a3;
  uint64_t v8 = v5;
  uint64_t v61 = *v5;
  uint64_t v9 = type metadata accessor for ChartSharableModelGenerator.Request(0);
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v52 = *(void *)(v53 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v66 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD7740();
  uint64_t v46 = v11;
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v12 = v63;
  uint64_t v51 = *(void *)(v63 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v64 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BF3AE8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v58 = v14;
  uint64_t v59 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v68 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BF3B7C();
  uint64_t v60 = v17;
  uint64_t v62 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  id v56 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_241CD7690();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v48 = *(void *)(v20 + 64);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v43 - v24;
  uint64_t v57 = v8;
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v47((char *)v8 + OBJC_IVAR____TtC9Summaries27ChartSharableModelGenerator_generatorContext, a1, v11);
  uint64_t v65 = v25;
  sub_241BEEA78();
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v45((char *)v8 + OBJC_IVAR____TtC9Summaries27ChartSharableModelGenerator_domain, v25, v19);
  uint64_t v49 = a2;
  sub_241BEEA78();
  uint64_t v50 = a1;
  uint64_t v26 = sub_241A34BB0(a1, (uint64_t)v23, v54, (uint64_t)v55);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v54 = (uint64_t (*)(void))(v20 + 8);
  uint64_t v55 = v27;
  uint64_t v44 = v19;
  v27(v23, v19);
  *(void *)&v69[0] = v26;
  sub_241A6853C();
  sub_241BF596C(&qword_26B02EA48, (void (*)(uint64_t))sub_241A6853C);
  sub_241CDA760();
  swift_release();
  uint64_t v28 = v46;
  v47(v64, a1, v46);
  sub_241BF3CC8(a2, v66);
  v45(v23, v65, v19);
  sub_241A37260(v67, (uint64_t)v69);
  uint64_t v29 = v63;
  unint64_t v30 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  unint64_t v31 = (v51 + *(unsigned __int8 *)(v53 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  unint64_t v32 = (v52 + *(unsigned __int8 *)(v20 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v33 = (v48 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v34 + v30, v64, v28);
  sub_241BF3FE0(v66, v34 + v31);
  id v35 = v23;
  uint64_t v36 = v44;
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v34 + v32, v35, v44);
  sub_241A5598C(v69, v34 + v33);
  *(void *)(v34 + ((v33 + 47) & 0xFFFFFFFFFFFFFFF8)) = v61;
  sub_241CDA4F0();
  sub_241BF4218(0, &qword_26B032720, MEMORY[0x263EFDCF0]);
  sub_241BF596C(&qword_26B032508, (void (*)(uint64_t))sub_241BF3AE8);
  sub_241BF3C54();
  uint64_t v37 = v56;
  uint64_t v38 = v58;
  uint64_t v39 = v68;
  sub_241CDA840();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v39, v38);
  sub_241BF596C(&qword_26B032550, (void (*)(uint64_t))sub_241BF3B7C);
  uint64_t v40 = v60;
  uint64_t v41 = sub_241CDA6D0();
  sub_241A31190(v67);
  sub_241BF41BC(v49);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v50, v28);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v40);
  v55(v65, v36);
  uint64_t result = v57;
  void v57[2] = v41;
  return result;
}

uint64_t sub_241BEF5CC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v49 = a6;
  sub_241BF4218(0, &qword_26B032838, MEMORY[0x263EFDE08]);
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v46 = (char *)&v40 - v10;
  uint64_t v43 = type metadata accessor for ChartSharableModelGenerator.Request(0);
  uint64_t v11 = MEMORY[0x270FA5388](v43);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v16 = sub_241CD7740();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_241CDA1A0();
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    uint64_t result = sub_241BEFAE0(a2, a3, v44, v45);
    uint64_t v26 = result;
  }
  else
  {
    uint64_t v44 = v22;
    uint64_t v45 = v21;
    sub_241CDA0F0();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a2, v16);
    sub_241BF3CC8(a3, (uint64_t)v15);
    sub_241BF3CC8(a3, (uint64_t)v13);
    uint64_t v27 = sub_241CDA190();
    os_log_type_t v28 = sub_241CDB670();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      int v41 = v29;
      uint64_t v31 = v30;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v51 = v42;
      *(_DWORD *)uint64_t v31 = 136315394;
      uint64_t v32 = sub_241BF0568();
      uint64_t v50 = sub_241A33FE4(v32, v33, &v51);
      os_log_t v40 = v27;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      sub_241BF41BC((uint64_t)v15);
      *(_WORD *)(v31 + 12) = 2080;
      uint64_t v34 = (uint64_t *)&v13[*(int *)(v43 + 24)];
      uint64_t v35 = *v34;
      unint64_t v36 = v34[1];
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_241A33FE4(v35, v36, &v51);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BF41BC((uint64_t)v13);
      uint64_t v27 = v40;
      _os_log_impl(&dword_241A23000, v40, (os_log_type_t)v41, "%s: First restore not concluded, doing nothing for %s", (uint8_t *)v31, 0x16u);
      uint64_t v37 = v42;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v37, -1, -1);
      MEMORY[0x245637F20](v31, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      sub_241BF41BC((uint64_t)v15);
      sub_241BF41BC((uint64_t)v13);
    }

    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v45);
    sub_241BF5350(0, &qword_26B034C38, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    uint64_t v38 = v46;
    sub_241CDA5E0();
    sub_241BF42B8();
    uint64_t v39 = v48;
    uint64_t v26 = sub_241CDA6D0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v38, v39);
  }
  *uint64_t v49 = v26;
  return result;
}

uint64_t sub_241BEFAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v74 = a4;
  uint64_t v77 = a3;
  uint64_t v75 = sub_241CD7690();
  uint64_t v79 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v76 = v6;
  id v78 = (char *)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BF432C();
  uint64_t v73 = v7;
  uint64_t v72 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v71 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BF4420();
  uint64_t v81 = *(void *)(v9 - 8);
  uint64_t v82 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v80 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v69 = type metadata accessor for ChartSharableModelGenerator.Request(0);
  uint64_t v11 = *(void *)(v69 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v69);
  uint64_t v92 = (uint64_t)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v66 - v15;
  uint64_t v88 = v17;
  MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)v66 - v18;
  uint64_t v20 = sub_241CD7740();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v91 = (char *)v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v66 - v24;
  uint64_t v26 = sub_241CDA1A0();
  uint64_t v70 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  os_log_type_t v28 = (char *)v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0F0();
  uint64_t v93 = v21;
  int v29 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v89 = a1;
  uint64_t v90 = v20;
  uint64_t v85 = v29;
  uint64_t v86 = v21 + 16;
  v29(v25, a1, v20);
  sub_241BF3CC8(a2, (uint64_t)v19);
  uint64_t v84 = a2;
  sub_241BF3CC8(a2, (uint64_t)v16);
  uint64_t v30 = sub_241CDA190();
  os_log_type_t v31 = sub_241CDB670();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v95 = v67;
    *(_DWORD *)uint64_t v32 = 136315394;
    uint64_t v33 = sub_241BF0568();
    uint64_t v68 = (void (*)(uint64_t, char *, uint64_t))v26;
    *(void *)&v94[0] = sub_241A33FE4(v33, v34, &v95);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v25, v90);
    sub_241BF41BC((uint64_t)v19);
    *(_WORD *)(v32 + 12) = 2080;
    v66[1] = v32 + 14;
    *(void *)&v94[0] = 0;
    *((void *)&v94[0] + 1) = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    *(void *)&v94[0] = 0xD000000000000016;
    *((void *)&v94[0] + 1) = 0x8000000241CE2420;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    *(void *)&v94[0] = sub_241A33FE4(*(uint64_t *)&v94[0], *((unint64_t *)&v94[0] + 1), &v95);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241BF41BC((uint64_t)v16);
    _os_log_impl(&dword_241A23000, v30, v31, "%s: Generation is starting for chart model for request: %s)", (uint8_t *)v32, 0x16u);
    uint64_t v35 = v67;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v35, -1, -1);
    MEMORY[0x245637F20](v32, -1, -1);

    (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v70 + 8))(v28, v68);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v93 + 8))(v25, v90);
    sub_241BF41BC((uint64_t)v19);
    sub_241BF41BC((uint64_t)v16);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v28, v26);
  }
  uint64_t v36 = v92;
  sub_241BF3CC8(v84, v92);
  uint64_t v37 = v90;
  v85(v91, v89, v90);
  uint64_t v38 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v39 = (v38 + 16) & ~v38;
  unint64_t v40 = (v88 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = v93;
  uint64_t v42 = *(unsigned __int8 *)(v93 + 80);
  uint64_t v43 = (v42 + v40 + 8) & ~v42;
  uint64_t v67 = v38 | v42 | 7;
  unint64_t v44 = (v87 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = swift_allocObject();
  sub_241BF3FE0(v36, v45 + v39);
  uint64_t v46 = v83;
  *(void *)(v45 + v40) = v83;
  uint64_t v47 = v45 + v43;
  uint64_t v48 = *(void (**)(uint64_t, char *, uint64_t))(v41 + 32);
  uint64_t v93 = v41 + 32;
  uint64_t v68 = v48;
  uint64_t v49 = v91;
  v48(v47, v91, v37);
  *(void *)(v45 + v44) = v46;
  sub_241BF4D14(0, &qword_26B032640, MEMORY[0x263F07490]);
  uint64_t v70 = v50;
  unint64_t v69 = sub_241BF43AC();
  uint64_t v51 = v71;
  sub_241CDA620();
  sub_241BF596C(&qword_26B032888, (void (*)(uint64_t))sub_241BF432C);
  uint64_t v52 = v73;
  uint64_t v53 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v51, v52);
  uint64_t v95 = v53;
  sub_241A37260(v74, (uint64_t)v94);
  sub_241BF3CC8(v84, v92);
  v85(v49, v89, v37);
  uint64_t v54 = v79;
  uint64_t v55 = v78;
  uint64_t v56 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v77, v75);
  uint64_t v57 = (v38 + 56) & ~v38;
  uint64_t v58 = (v88 + v42 + v57) & ~v42;
  unint64_t v59 = (v58 + v87 + *(unsigned __int8 *)(v54 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v60 = (v76 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v61 = swift_allocObject();
  sub_241A5598C(v94, v61 + 16);
  sub_241BF3FE0(v92, v61 + v57);
  v68(v61 + v58, v91, v90);
  (*(void (**)(unint64_t, char *, uint64_t))(v54 + 32))(v61 + v59, v55, v56);
  *(void *)(v61 + v60) = v46;
  *(void *)(v61 + ((v60 + 15) & 0xFFFFFFFFFFFFFFF8)) = v46;
  sub_241CDA4F0();
  sub_241BF4218(0, &qword_26B032720, MEMORY[0x263EFDCF0]);
  sub_241BF3C54();
  uint64_t v62 = v80;
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241BF596C(&qword_26B032568, (void (*)(uint64_t))sub_241BF4420);
  uint64_t v63 = v82;
  uint64_t v64 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v62, v63);
  return v64;
}

uint64_t sub_241BF0568()
{
  return static SummaryModelGenerating.logPrefix(_:_:)();
}

uint64_t sub_241BF05F0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v71 = a6;
  uint64_t v72 = a7;
  uint64_t v63 = a5;
  uint64_t v61 = a4;
  uint64_t v77 = a1;
  uint64_t v73 = a8;
  uint64_t v67 = sub_241CD6D00();
  uint64_t v76 = *(void *)(v67 - 8);
  uint64_t v70 = *(void *)(v76 + 64);
  MEMORY[0x270FA5388](v67);
  uint64_t v66 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ChartSharableModelGenerator.Request(0);
  uint64_t v12 = v11 - 8;
  uint64_t v65 = *(void *)(v11 - 8);
  uint64_t v64 = *(void *)(v65 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v59 = (uint64_t)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_241CD7740();
  uint64_t v74 = *(void *)(v58 - 8);
  uint64_t v60 = *(void *)(v74 + 64);
  MEMORY[0x270FA5388](v58);
  uint64_t v75 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BF4C5C();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BF4E54();
  uint64_t v56 = v20;
  uint64_t v57 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BCB440();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v68 = v23;
  uint64_t v69 = v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v62 = (char *)v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a2[3];
  uint64_t v26 = a2[4];
  sub_241A311E0(a2, v27);
  uint64_t v28 = a3;
  int v29 = (void *)sub_241CD7770();
  uint64_t v30 = *(int *)(v12 + 36);
  uint64_t v31 = *(int *)(v12 + 40);
  uint64_t v32 = v28;
  uint64_t v33 = ChartSharableModelProviding.chartQueryDataPublisher(for:timeScopes:timeScopeReferenceDate:audience:)(v29, *(void *)(v28 + v30), v77, *(unsigned __int8 *)(v28 + v31), v27, v26);

  v78[0] = v33;
  sub_241A313AC(0, &qword_26B034E88);
  sub_241BF4D14(0, &qword_26B032788, (void (*)(uint64_t))sub_241AAFAEC);
  uint64_t v35 = v34;
  unint64_t v36 = sub_241BF4D78();
  sub_241BF4DEC();
  v55[1] = v35;
  v55[0] = v36;
  sub_241CDA810();
  swift_release();
  sub_241BF596C(&qword_26B032308, (void (*)(uint64_t))sub_241BF4C5C);
  sub_241CDA750();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v37 = v61;
  sub_241CD7730();
  sub_241BF596C(&qword_26B031BC0, (void (*)(uint64_t))sub_241BF4E54);
  uint64_t v38 = v56;
  uint64_t v39 = sub_241CDA680();
  sub_241A31190((uint64_t)v78);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v22, v38);
  v78[0] = v39;
  uint64_t v40 = v74;
  uint64_t v41 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v75, v37, v58);
  uint64_t v42 = v59;
  sub_241BF3CC8(v32, v59);
  uint64_t v43 = v76;
  unint64_t v44 = v66;
  uint64_t v45 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v66, v77, v67);
  unint64_t v46 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v47 = (v60 + *(unsigned __int8 *)(v65 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  unint64_t v48 = (v64 + *(unsigned __int8 *)(v43 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v49 = (v70 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v74 + 32))(v50 + v46, v75, v41);
  sub_241BF3FE0(v42, v50 + v47);
  (*(void (**)(unint64_t, char *, uint64_t))(v76 + 32))(v50 + v48, v44, v45);
  *(void *)(v50 + v49) = v71;
  *(void *)(v50 + ((v49 + 15) & 0xFFFFFFFFFFFFFFF8)) = v72;
  sub_241BF5350(0, &qword_26B034C38, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
  uint64_t v51 = v62;
  sub_241CDA710();
  swift_release();
  swift_release();
  sub_241BF596C(&qword_26B038928, (void (*)(uint64_t))sub_241BCB440);
  uint64_t v52 = v68;
  uint64_t v53 = sub_241CDA6D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v51, v52);
  uint64_t *v73 = v53;
  return result;
}

uint64_t sub_241BF0D58@<X0>(uint64_t *a1@<X8>)
{
  sub_241BF5350(0, &qword_26B038368, (uint64_t (*)(uint64_t))sub_241AAFAEC, MEMORY[0x263EFDDF8]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v9 - v5;
  v9[1] = 0;
  sub_241AAFAEC();
  sub_241CDA5D0();
  sub_241BF54F8(&qword_26B038360, &qword_26B038368, (uint64_t (*)(uint64_t))sub_241AAFAEC);
  uint64_t v7 = sub_241CDA6D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *a1 = v7;
  return result;
}

uint64_t sub_241BF0E9C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v107 = a5;
  uint64_t v112 = a2;
  uint64_t v113 = a4;
  uint64_t v114 = a6;
  uint64_t v8 = sub_241CD79A0();
  uint64_t v108 = *(void *)(v8 - 8);
  uint64_t v109 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD6D00();
  uint64_t v122 = *(void *)(v11 - 8);
  *(void *)&long long v123 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v117 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  id v111 = (char *)&v107 - v14;
  uint64_t v120 = type metadata accessor for ChartSharableModelGenerator.Request(0);
  uint64_t v15 = MEMORY[0x270FA5388](v120);
  uint64_t v119 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v107 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v107 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  id v110 = (char *)&v107 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v107 - v26;
  MEMORY[0x270FA5388](v25);
  int v29 = (char *)&v107 - v28;
  uint64_t v121 = sub_241CD7740();
  uint64_t v30 = *(void *)(v121 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v121);
  uint64_t v33 = (char *)&v107 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v107 - v34;
  uint64_t v36 = sub_241CDA1A0();
  uint64_t v37 = MEMORY[0x270FA5388](v36);
  uint64_t v118 = (char *)&v107 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = *a1;
  uint64_t v115 = v42;
  uint64_t v116 = v39;
  if (v41)
  {
    uint64_t v43 = (uint64_t *)(a3 + *(int *)(v120 + 24));
    uint64_t v44 = *v43;
    uint64_t v45 = v43[1];
    unint64_t v46 = v41;
    unint64_t v47 = (void *)sub_241CD7770();
    id v110 = v46;
    id v111 = v10;
    sub_241BF1CB0(a3, v44, v45, v47, v46, (uint64_t)v10);

    sub_241CDA0F0();
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v33, v112, v121);
    sub_241BF3CC8(a3, (uint64_t)v22);
    sub_241BF3CC8(a3, (uint64_t)v19);
    (*(void (**)(char *, uint64_t, void))(v122 + 16))(v117, v113, v123);
    sub_241BF3CC8(a3, (uint64_t)v119);
    unint64_t v48 = sub_241CDA190();
    os_log_type_t v49 = sub_241CDB670();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v113 = swift_slowAlloc();
      v126[0] = v113;
      *(_DWORD *)uint64_t v50 = 136315906;
      uint64_t v51 = sub_241BF0568();
      uint64_t v124 = (char *)sub_241A33FE4(v51, v52, v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v121);
      sub_241BF41BC((uint64_t)v22);
      *(_WORD *)(v50 + 12) = 2080;
      uint64_t v53 = (void *)sub_241CD7770();
      id v54 = objc_msgSend(v53, sel_sensitiveLoggingIdentifier, v107);

      uint64_t v55 = sub_241CDB0D0();
      unint64_t v57 = v56;

      uint64_t v124 = (char *)sub_241A33FE4(v55, v57, v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BF41BC((uint64_t)v19);
      *(_WORD *)(v50 + 22) = 2080;
      sub_241BF596C(&qword_26B02E8E0, MEMORY[0x263F07490]);
      uint64_t v58 = v117;
      uint64_t v59 = v123;
      uint64_t v60 = sub_241CDC0D0();
      uint64_t v124 = (char *)sub_241A33FE4(v60, v61, v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v122 + 8))(v58, v59);
      *(_WORD *)(v50 + 32) = 2080;
      uint64_t v124 = 0;
      unint64_t v125 = 0xE000000000000000;
      sub_241CDBE00();
      swift_bridgeObjectRelease();
      uint64_t v124 = (char *)0xD000000000000016;
      unint64_t v125 = 0x8000000241CE2420;
      uint64_t v62 = (uint64_t)v119;
      swift_bridgeObjectRetain();
      sub_241CDB180();
      swift_bridgeObjectRelease();
      sub_241CDB180();
      AnchoredTypeState.logDescription.getter();
      sub_241CDB180();
      swift_bridgeObjectRelease();
      uint64_t v124 = (char *)sub_241A33FE4((uint64_t)v124, v125, v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BF41BC(v62);
      _os_log_impl(&dword_241A23000, v48, v49, "%s: Emitting chart model for %s with endDate=%s for request: %s", (uint8_t *)v50, 0x2Au);
      uint64_t v63 = v113;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v63, -1, -1);
      MEMORY[0x245637F20](v50, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v121);
      sub_241BF41BC((uint64_t)v22);
      sub_241BF41BC((uint64_t)v19);
      (*(void (**)(char *, void))(v122 + 8))(v117, v123);
      sub_241BF41BC((uint64_t)v119);
    }

    (*(void (**)(char *, uint64_t))(v115 + 8))(v118, v116);
    uint64_t v86 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
    sub_241BF5350(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
    uint64_t v87 = sub_241CD7C30();
    uint64_t v88 = *(void *)(v87 - 8);
    unint64_t v89 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    uint64_t v90 = swift_allocObject();
    long long v123 = xmmword_241CEB730;
    *(_OWORD *)(v90 + 16) = xmmword_241CEB730;
    uint64_t v91 = (uint64_t *)(v90 + v89);
    sub_241BF5350(0, &qword_26B034F38, MEMORY[0x263F45738], v86);
    uint64_t v92 = v108;
    unint64_t v93 = (*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
    uint64_t v94 = swift_allocObject();
    *(_OWORD *)(v94 + 16) = v123;
    unint64_t v95 = v94 + v93;
    uint64_t v96 = v111;
    uint64_t v97 = v109;
    (*(void (**)(unint64_t, char *, uint64_t))(v92 + 16))(v95, v111, v109);
    *uint64_t v91 = v94;
    (*(void (**)(uint64_t *, void, uint64_t))(v88 + 104))(v91, *MEMORY[0x263F45880], v87);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v96, v97);
    uint64_t *v114 = v90;
  }
  else
  {
    uint64_t v64 = (char *)&v107 - v40;
    sub_241CDA0F0();
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v35, v112, v121);
    sub_241BF3CC8(a3, (uint64_t)v29);
    sub_241BF3CC8(a3, (uint64_t)v27);
    (*(void (**)(char *, uint64_t, void))(v122 + 16))(v111, v113, v123);
    sub_241BF3CC8(a3, (uint64_t)v110);
    uint64_t v119 = v64;
    uint64_t v65 = sub_241CDA190();
    os_log_type_t v66 = sub_241CDB670();
    int v67 = v66;
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v68 = swift_slowAlloc();
      uint64_t v118 = (char *)swift_slowAlloc();
      uint64_t v124 = v118;
      *(_DWORD *)uint64_t v68 = 136315906;
      LODWORD(v117) = v67;
      uint64_t v69 = sub_241BF0568();
      v126[0] = sub_241A33FE4(v69, v70, (uint64_t *)&v124);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v121);
      sub_241BF41BC((uint64_t)v29);
      *(_WORD *)(v68 + 12) = 2080;
      uint64_t v71 = (void *)sub_241CD7770();
      id v72 = objc_msgSend(v71, sel_sensitiveLoggingIdentifier, v107);

      uint64_t v73 = sub_241CDB0D0();
      unint64_t v75 = v74;

      v126[0] = sub_241A33FE4(v73, v75, (uint64_t *)&v124);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BF41BC((uint64_t)v27);
      *(_WORD *)(v68 + 22) = 2080;
      sub_241BF596C(&qword_26B02E8E0, MEMORY[0x263F07490]);
      uint64_t v76 = v111;
      uint64_t v77 = v123;
      uint64_t v78 = sub_241CDC0D0();
      v126[0] = sub_241A33FE4(v78, v79, (uint64_t *)&v124);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v122 + 8))(v76, v77);
      *(_WORD *)(v68 + 32) = 2080;
      uint64_t v80 = v120;
      uint64_t v81 = (uint64_t)v110;
      uint64_t v82 = (uint64_t *)&v110[*(int *)(v120 + 24)];
      uint64_t v83 = *v82;
      unint64_t v84 = v82[1];
      swift_bridgeObjectRetain();
      v126[0] = sub_241A33FE4(v83, v84, (uint64_t *)&v124);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BF41BC(v81);
      _os_log_impl(&dword_241A23000, v65, (os_log_type_t)v117, "%s: No chart model returned for %s with endDate=%s, deleting model %s", (uint8_t *)v68, 0x2Au);
      uint64_t v85 = v118;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v85, -1, -1);
      MEMORY[0x245637F20](v68, -1, -1);

      (*(void (**)(char *, uint64_t))(v115 + 8))(v119, v116);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v121);
      sub_241BF41BC((uint64_t)v29);
      sub_241BF41BC((uint64_t)v27);
      (*(void (**)(char *, void))(v122 + 8))(v111, v123);
      sub_241BF41BC((uint64_t)v110);

      (*(void (**)(char *, uint64_t))(v115 + 8))(v119, v116);
      uint64_t v80 = v120;
    }
    sub_241BF5350(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
    uint64_t v99 = sub_241CD7C30();
    uint64_t v100 = *(void *)(v99 - 8);
    unint64_t v101 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
    uint64_t v102 = swift_allocObject();
    long long v123 = xmmword_241CEB730;
    *(_OWORD *)(v102 + 16) = xmmword_241CEB730;
    uint64_t v103 = (uint64_t *)(v102 + v101);
    sub_241A31064(0, (unint64_t *)&qword_26B038860);
    uint64_t v104 = swift_allocObject();
    *(_OWORD *)(v104 + 16) = v123;
    uint64_t v105 = (void *)(a3 + *(int *)(v80 + 24));
    uint64_t v106 = v105[1];
    *(void *)(v104 + 32) = *v105;
    *(void *)(v104 + 40) = v106;
    *uint64_t v103 = v104;
    (*(void (**)(uint64_t *, void, uint64_t))(v100 + 104))(v103, *MEMORY[0x263F458A0], v99);
    uint64_t *v114 = v102;
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_241BF1CB0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v58 = a4;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v52 = a6;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241BF5350(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v51 = (char *)&v49 - v10;
  sub_241BF5350(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v50 = (char *)&v49 - v12;
  uint64_t v56 = sub_241CD7AB0();
  uint64_t v13 = *(void *)(v56 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v56);
  uint64_t v59 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v49 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v49 - v19;
  uint64_t v21 = sub_241CD7AF0();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD7790();
  uint64_t v25 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  uint64_t v26 = *(int *)(type metadata accessor for ChartSharableModelGenerator.Request(0) + 32);
  uint64_t v57 = a1;
  int v27 = *(unsigned __int8 *)(a1 + v26);
  sub_241CD7A80();
  id v28 = a5;
  id v29 = objc_msgSend(v28, sel_data);
  uint64_t v55 = v26;
  if (v29)
  {
    uint64_t v30 = v29;
    uint64_t v31 = sub_241CD6AE0();
    unint64_t v33 = v32;
  }
  else
  {
    uint64_t v31 = 0;
    unint64_t v33 = 0xF000000000000000;
  }
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  uint64_t v34 = v56;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v20, v56);
  uint64_t v35 = sub_241A54BF8(v31, v33, 0, v25, v27, (uint64_t)v18);

  sub_241A54FC8(v31, v33);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v34);
  sub_241CD7A80();
  if (*(unsigned char *)(v57 + v55) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = v58;
    uint64_t v37 = &off_2650F5000;
  }
  else
  {
    char v38 = sub_241CDC100();
    swift_bridgeObjectRelease();
    uint64_t v36 = v58;
    uint64_t v37 = &off_2650F5000;
    if ((v38 & 1) == 0) {
      goto LABEL_8;
    }
  }
  sub_241BF5350(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
  uint64_t v39 = (void *)sub_241CD7770();
  sub_241CDB470();

LABEL_8:
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_241CEB710;
  *(void *)(v40 + 32) = v36;
  uint64_t v60 = v40;
  sub_241CDB2E0();
  id v41 = v36;
  id v42 = [v35 (SEL)v37[87]];
  if (v42)
  {
    uint64_t v43 = v42;
    uint64_t v44 = v35;
    sub_241CD6AE0();

    uint64_t v45 = v50;
    sub_241CD6F40();
    uint64_t v46 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
    unint64_t v47 = v51;
    sub_241CD6DC0();
    uint64_t v48 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
    swift_bridgeObjectRetain();
    sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_241BF22EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v96 = a3;
  char v98 = a4;
  sub_241BF5350(0, &qword_26B0327E0, MEMORY[0x263F07490], MEMORY[0x263EFDDF8]);
  uint64_t v90 = *(void *)(v5 - 8);
  uint64_t v91 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v89 = (char *)&v82 - v6;
  uint64_t v88 = sub_241CDA1A0();
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v92 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ChartSharableModelGenerator.Request(0);
  uint64_t v9 = v8 - 8;
  uint64_t v82 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v82 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v86 = (uint64_t)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v100 = (uint64_t)&v82 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v94 = (char *)&v82 - v14;
  uint64_t v15 = sub_241CD7740();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v105 = v15;
  uint64_t v106 = v16;
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v99 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  unint64_t v93 = (char *)&v82 - v19;
  sub_241BF53B4();
  uint64_t v85 = v20;
  uint64_t v84 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v83 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241CD6D00();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  unint64_t v101 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  id v28 = (char *)&v82 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v82 - v29;
  sub_241CD6CF0();
  uint64_t v31 = (void *)sub_241CD6C60();
  unint64_t v32 = *(uint64_t (**)(char *, uint64_t))(v23 + 8);
  uint64_t v103 = v23 + 8;
  uint64_t v104 = v22;
  uint64_t v102 = v32;
  v32(v28, v22);
  id v33 = (id)HKEndOfDayForDate();

  uint64_t v34 = a1;
  sub_241CD6CB0();

  char v35 = *(unsigned char *)(a1 + *(int *)(v9 + 40));
  uint64_t v97 = v30;
  if (v35)
  {
    uint64_t v94 = v28;
    uint64_t v36 = v92;
    sub_241CDA0F0();
    uint64_t v37 = v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v99, v95, v105);
    sub_241BF3CC8(a1, v100);
    uint64_t v38 = a1;
    uint64_t v39 = v86;
    sub_241BF3CC8(v38, v86);
    uint64_t v40 = *(char **)(v23 + 16);
    id v41 = v30;
    uint64_t v42 = v104;
    uint64_t v95 = v23 + 16;
    unint64_t v93 = v40;
    ((void (*)(char *, char *, uint64_t))v40)(v101, v41, v104);
    uint64_t v43 = sub_241CDA190();
    os_log_type_t v44 = sub_241CDB630();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      v108[0] = v85;
      *(_DWORD *)uint64_t v45 = 136315650;
      unint64_t v47 = v99;
      uint64_t v46 = v100;
      uint64_t v48 = sub_241BF0568();
      uint64_t v107 = sub_241A33FE4(v48, v49, v108);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v106 + 8))(v47, v37);
      sub_241BF41BC(v46);
      *(_WORD *)(v45 + 12) = 2080;
      uint64_t v50 = (void *)sub_241CD7770();
      id v51 = objc_msgSend(v50, sel_sensitiveLoggingIdentifier);

      uint64_t v52 = sub_241CDB0D0();
      uint64_t v53 = v39;
      unint64_t v55 = v54;

      uint64_t v42 = v104;
      uint64_t v107 = sub_241A33FE4(v52, v55, v108);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BF41BC(v53);
      *(_WORD *)(v45 + 22) = 2080;
      sub_241BF596C(&qword_26B02E8E0, MEMORY[0x263F07490]);
      uint64_t v56 = v101;
      uint64_t v57 = sub_241CDC0D0();
      uint64_t v107 = sub_241A33FE4(v57, v58, v108);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      uint64_t v59 = v102;
      v102(v56, v42);
      _os_log_impl(&dword_241A23000, v43, v44, "%s: Determined chart end date for %s: %s", (uint8_t *)v45, 0x20u);
      uint64_t v60 = v85;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v60, -1, -1);
      MEMORY[0x245637F20](v45, -1, -1);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v92, v88);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v106 + 8))(v99, v37);
      sub_241BF41BC(v100);
      sub_241BF41BC(v39);
      uint64_t v59 = v102;
      v102(v101, v42);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v36, v88);
    }
    uint64_t v78 = v90;
    uint64_t v77 = v91;
    unint64_t v79 = v89;
    uint64_t v80 = v97;
    ((void (*)(char *, char *, uint64_t))v93)(v94, v97, v42);
    sub_241CDA5D0();
    sub_241BF54F8(&qword_26B0327D8, &qword_26B0327E0, MEMORY[0x263F07490]);
    uint64_t v81 = v79;
    uint64_t v74 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v81, v77);
    unint64_t v75 = v98;
    uint64_t result = v59(v80, v42);
  }
  else
  {
    uint64_t v61 = v95;
    v108[0] = sub_241C5DBAC(v95, a1);
    uint64_t v62 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v93, v61, v105);
    sub_241BF3CC8(v34, (uint64_t)v94);
    uint64_t v63 = v30;
    uint64_t v64 = v104;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v28, v63, v104);
    unint64_t v65 = (*(unsigned __int8 *)(v62 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    unint64_t v66 = (v17 + *(unsigned __int8 *)(v82 + 80) + v65) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
    unint64_t v67 = (v10 + *(unsigned __int8 *)(v23 + 80) + v66) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    unint64_t v68 = (v24 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v69 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v62 + 32))(v69 + v65, v93, v105);
    sub_241BF3FE0((uint64_t)v94, v69 + v66);
    unint64_t v70 = v69 + v67;
    uint64_t v71 = v97;
    (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v70, v28, v64);
    *(void *)(v69 + v68) = v96;
    sub_241BF5460();
    sub_241BF596C(&qword_26B038950, (void (*)(uint64_t))sub_241BF5460);
    id v72 = v83;
    sub_241CDA710();
    swift_release();
    swift_release();
    sub_241BF596C(&qword_26B032348, (void (*)(uint64_t))sub_241BF53B4);
    uint64_t v73 = v85;
    uint64_t v74 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v72, v73);
    unint64_t v75 = v98;
    uint64_t result = v102(v71, v64);
  }
  *unint64_t v75 = v74;
  return result;
}

uint64_t sub_241BF2D84@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v83 = a5;
  uint64_t v84 = a4;
  uint64_t v86 = a1;
  os_log_t v87 = a2;
  uint64_t v96 = a6;
  uint64_t v7 = sub_241CD6D00();
  uint64_t v85 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v81 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v93 = (char *)&v81 - v10;
  uint64_t v11 = type metadata accessor for ChartSharableModelGenerator.Request(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v90 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v82 = (uint64_t)&v81 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v89 = (uint64_t)&v81 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v81 - v18;
  uint64_t v97 = sub_241CD7740();
  uint64_t v20 = *(void *)(v97 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v97);
  uint64_t v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v81 - v24;
  uint64_t v26 = sub_241CDA1A0();
  uint64_t v94 = *(void *)(v26 - 8);
  uint64_t v95 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v92 = (char *)&v81 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v91 = (char *)&v81 - v29;
  sub_241BF5350(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v30 - 8);
  unint64_t v32 = (char *)&v81 - v31;
  uint64_t v33 = sub_241CD6810();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v88 = (char *)&v81 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v81 - v37;
  sub_241A4145C(v86, (uint64_t)v32);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
  {
    sub_241B74724((uint64_t)v32);
    sub_241CDA0F0();
    (*(void (**)(char *, os_log_t, uint64_t))(v20 + 16))(v25, v87, v97);
    sub_241BF3CC8(a3, (uint64_t)v19);
    sub_241BF3CC8(a3, v89);
    uint64_t v40 = v84;
    uint64_t v39 = v85;
    uint64_t v92 = *(char **)(v85 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v92)(v93, v84, v7);
    id v41 = sub_241CDA190();
    os_log_type_t v42 = sub_241CDB630();
    int v43 = v42;
    uint64_t v44 = v7;
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v90 = swift_slowAlloc();
      v99[0] = v90;
      *(_DWORD *)uint64_t v45 = 136315650;
      LODWORD(v88) = v43;
      uint64_t v46 = sub_241BF0568();
      uint64_t v86 = v44;
      uint64_t v98 = sub_241A33FE4(v46, v47, v99);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v97);
      sub_241BF41BC((uint64_t)v19);
      *(_WORD *)(v45 + 12) = 2080;
      uint64_t v48 = v89;
      unint64_t v49 = (void *)sub_241CD7770();
      id v50 = objc_msgSend(v49, sel_sensitiveLoggingIdentifier);

      uint64_t v51 = sub_241CDB0D0();
      unint64_t v53 = v52;

      uint64_t v98 = sub_241A33FE4(v51, v53, v99);
      sub_241CDBBF0();
      uint64_t v44 = v86;
      swift_bridgeObjectRelease();
      sub_241BF41BC(v48);
      *(_WORD *)(v45 + 22) = 2080;
      sub_241BF596C(&qword_26B02E8E0, MEMORY[0x263F07490]);
      unint64_t v54 = v93;
      uint64_t v55 = sub_241CDC0D0();
      uint64_t v98 = sub_241A33FE4(v55, v56, v99);
      uint64_t v40 = v84;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v54, v44);
      _os_log_impl(&dword_241A23000, v41, (os_log_type_t)v88, "%s: No data for chart end date for %s, using end of today: %s", (uint8_t *)v45, 0x20u);
      uint64_t v57 = v90;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v57, -1, -1);
      MEMORY[0x245637F20](v45, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v97);
      sub_241BF41BC((uint64_t)v19);
      sub_241BF41BC(v89);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v93, v7);
    }

    (*(void (**)(char *, uint64_t))(v94 + 8))(v91, v95);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v92)(v96, v40, v44);
  }
  else
  {
    uint64_t v86 = v7;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v38, v32, v33);
    sub_241CDA0F0();
    (*(void (**)(char *, os_log_t, uint64_t))(v20 + 16))(v23, v87, v97);
    uint64_t v58 = v82;
    sub_241BF3CC8(a3, v82);
    sub_241BF3CC8(a3, v90);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v88, v38, v33);
    uint64_t v59 = sub_241CDA190();
    os_log_type_t v60 = sub_241CDB630();
    int v61 = v60;
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v62 = swift_slowAlloc();
      unint64_t v93 = v38;
      LODWORD(v89) = v61;
      uint64_t v63 = v62;
      uint64_t v91 = (char *)swift_slowAlloc();
      v99[0] = (uint64_t)v91;
      *(_DWORD *)uint64_t v63 = 136315650;
      uint64_t v64 = sub_241BF0568();
      os_log_t v87 = v59;
      uint64_t v98 = sub_241A33FE4(v64, v65, v99);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v97);
      sub_241BF41BC(v58);
      *(_WORD *)(v63 + 12) = 2080;
      uint64_t v66 = v90;
      unint64_t v67 = (void *)sub_241CD7770();
      id v68 = objc_msgSend(v67, sel_sensitiveLoggingIdentifier);

      uint64_t v69 = sub_241CDB0D0();
      unint64_t v71 = v70;

      uint64_t v98 = sub_241A33FE4(v69, v71, v99);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241BF41BC(v66);
      *(_WORD *)(v63 + 22) = 2080;
      id v72 = v81;
      uint64_t v73 = v88;
      sub_241CD67B0();
      sub_241BF596C(&qword_26B02E8E0, MEMORY[0x263F07490]);
      uint64_t v74 = v86;
      uint64_t v75 = sub_241CDC0D0();
      unint64_t v77 = v76;
      (*(void (**)(char *, uint64_t))(v85 + 8))(v72, v74);
      uint64_t v98 = sub_241A33FE4(v75, v77, v99);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      uint64_t v78 = *(void (**)(char *, uint64_t))(v34 + 8);
      v78(v73, v33);
      uint64_t v59 = v87;
      _os_log_impl(&dword_241A23000, v87, (os_log_type_t)v89, "%s: Determined chart end date for %s: %s", (uint8_t *)v63, 0x20u);
      unint64_t v79 = v91;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v79, -1, -1);
      uint64_t v38 = v93;
      MEMORY[0x245637F20](v63, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v97);
      sub_241BF41BC(v58);
      sub_241BF41BC(v90);
      uint64_t v78 = *(void (**)(char *, uint64_t))(v34 + 8);
      v78(v88, v33);
    }

    (*(void (**)(char *, uint64_t))(v94 + 8))(v92, v95);
    sub_241CD67B0();
    return ((uint64_t (*)(char *, uint64_t))v78)(v38, v33);
  }
}

uint64_t sub_241BF3874()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries27ChartSharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries27ChartSharableModelGenerator_generatorContext;
  uint64_t v4 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_241BF3960()
{
  return type metadata accessor for ChartSharableModelGenerator(0);
}

uint64_t type metadata accessor for ChartSharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B033320);
}

_UNKNOWN **sub_241BF3988()
{
  return &off_26F5C54A0;
}

uint64_t sub_241BF3994(uint64_t a1)
{
  uint64_t result = sub_241BF596C(&qword_26B033310, (void (*)(uint64_t))type metadata accessor for ChartSharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241BF39EC()
{
  return &off_26F5C54E8;
}

uint64_t sub_241BF39F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries27ChartSharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241BF3A70(uint64_t a1)
{
  uint64_t result = sub_241BF596C(&qword_26B033318, (void (*)(uint64_t))type metadata accessor for ChartSharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ChartSharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B033270);
}

void sub_241BF3AE8()
{
  if (!qword_26B032510)
  {
    sub_241A6853C();
    sub_241BF596C(&qword_26B02EA48, (void (*)(uint64_t))sub_241A6853C);
    unint64_t v0 = sub_241CDA440();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032510);
    }
  }
}

void sub_241BF3B7C()
{
  if (!qword_26B032558)
  {
    sub_241BF4218(255, &qword_26B032720, MEMORY[0x263EFDCF0]);
    sub_241BF3AE8();
    sub_241BF3C54();
    sub_241BF596C(&qword_26B032508, (void (*)(uint64_t))sub_241BF3AE8);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032558);
    }
  }
}

unint64_t sub_241BF3C54()
{
  unint64_t result = qword_26B038970;
  if (!qword_26B038970)
  {
    sub_241BF4218(255, &qword_26B032720, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B038970);
  }
  return result;
}

uint64_t sub_241BF3CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChartSharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241BF3D2C()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (int *)(type metadata accessor for ChartSharableModelGenerator.Request(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v19 = *(void *)(*(void *)v6 + 64);
  uint64_t v20 = sub_241CD7690();
  uint64_t v9 = *(void *)(v20 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = *(void *)(v9 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v8, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v0 + v8 + v6[11];
  uint64_t v13 = sub_241CD6810();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v15 = (v8 + v19 + v10) & ~v10;
  unint64_t v16 = (v18 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v15, v20);
  sub_241A31190(v0 + v16);

  return MEMORY[0x270FA0238](v0, ((v16 + 47) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | v7 | v10 | 7);
}

uint64_t sub_241BF3FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChartSharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241BF4044@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD7740() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for ChartSharableModelGenerator.Request(0) - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_241CD7690() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v2 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8);

  return sub_241BEF5CC(a1, v2 + v6, v2 + v9, v2 + v12, v13, a2);
}

uint64_t sub_241BF41BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChartSharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241BF4218(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_241BF5350(255, &qword_26B034C38, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_241BF42B8()
{
  unint64_t result = qword_268D43460;
  if (!qword_268D43460)
  {
    sub_241BF4218(255, &qword_26B032838, MEMORY[0x263EFDE08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43460);
  }
  return result;
}

void sub_241BF432C()
{
  if (!qword_26B032890)
  {
    sub_241BF4D14(255, &qword_26B032640, MEMORY[0x263F07490]);
    sub_241BF43AC();
    unint64_t v0 = sub_241CDA630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032890);
    }
  }
}

unint64_t sub_241BF43AC()
{
  unint64_t result = qword_26B032638;
  if (!qword_26B032638)
  {
    sub_241BF4D14(255, &qword_26B032640, MEMORY[0x263F07490]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032638);
  }
  return result;
}

void sub_241BF4420()
{
  if (!qword_26B032570)
  {
    sub_241BF4218(255, &qword_26B032720, MEMORY[0x263EFDCF0]);
    sub_241BF4D14(255, &qword_26B032640, MEMORY[0x263F07490]);
    sub_241BF3C54();
    sub_241BF43AC();
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032570);
    }
  }
}

uint64_t sub_241BF44E4()
{
  uint64_t v1 = (int *)(type metadata accessor for ChartSharableModelGenerator.Request(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v15 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = sub_241CD7740();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + v3 + v1[11];
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  unint64_t v12 = (((v15 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6;
  unint64_t v13 = ((v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v12, v4);

  return MEMORY[0x270FA0238](v0, v13, v2 | v6 | 7);
}

uint64_t sub_241BF4714@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ChartSharableModelGenerator.Request(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_241CD7740() - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241BF22EC(v1 + v4, v1 + v7, v8, a1);
}

uint64_t sub_241BF4824()
{
  uint64_t v1 = (int *)(type metadata accessor for ChartSharableModelGenerator.Request(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v17 = *(void *)(*(void *)v1 + 64);
  uint64_t v19 = sub_241CD7740();
  uint64_t v4 = *(void *)(v19 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = *(void *)(v4 + 64);
  uint64_t v18 = sub_241CD7690();
  uint64_t v6 = *(void *)(v18 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = *(void *)(v6 + 64);
  sub_241A31190(v0 + 16);
  uint64_t v8 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + v3 + v1[11];
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = (v3 + v17 + v5) & ~v5;
  uint64_t v13 = (v12 + v16 + v7) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v12, v19);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v13, v18);

  return MEMORY[0x270FA0238](v0, ((((v15 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | v5 | v7 | 7);
}

uint64_t sub_241BF4AE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ChartSharableModelGenerator.Request(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_241CD7740() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_241CD7690() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)(v2 + v13);
  uint64_t v15 = *(void *)(v2 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_241BF05F0(a1, (void *)(v2 + 16), v2 + v6, v2 + v9, v2 + v12, v14, v15, a2);
}

void sub_241BF4C5C()
{
  if (!qword_26B032310)
  {
    sub_241BF4D14(255, &qword_26B032788, (void (*)(uint64_t))sub_241AAFAEC);
    sub_241A313AC(255, &qword_26B034E88);
    sub_241BF4D78();
    sub_241BF4DEC();
    unint64_t v0 = sub_241CDA3B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032310);
    }
  }
}

void sub_241BF4D14(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDA510();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_241BF4D78()
{
  unint64_t result = qword_26B038978;
  if (!qword_26B038978)
  {
    sub_241BF4D14(255, &qword_26B032788, (void (*)(uint64_t))sub_241AAFAEC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B038978);
  }
  return result;
}

unint64_t sub_241BF4DEC()
{
  unint64_t result = qword_26B034E80;
  if (!qword_26B034E80)
  {
    sub_241A313AC(255, &qword_26B034E88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B034E80);
  }
  return result;
}

void sub_241BF4E54()
{
  if (!qword_26B030830)
  {
    sub_241BF4C5C();
    sub_241BF4D14(255, &qword_26B032788, (void (*)(uint64_t))sub_241AAFAEC);
    sub_241BF596C(&qword_26B032308, (void (*)(uint64_t))sub_241BF4C5C);
    sub_241BF4D78();
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B030830);
    }
  }
}

uint64_t sub_241BF4F2C()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  unint64_t v6 = (int *)(type metadata accessor for ChartSharableModelGenerator.Request(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v19 = *(void *)(*(void *)v6 + 64);
  uint64_t v20 = sub_241CD6D00();
  uint64_t v9 = *(void *)(v20 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = *(void *)(v9 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v8, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v0 + v8 + v6[11];
  uint64_t v13 = sub_241CD6810();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v15 = (v8 + v19 + v10) & ~v10;
  unint64_t v16 = ((((v18 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v15, v20);

  return MEMORY[0x270FA0238](v0, v16, v3 | v7 | v10 | 7);
}

uint64_t sub_241BF51D8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD7740() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for ChartSharableModelGenerator.Request(0) - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_241CD6D00() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v2 + ((((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_241BF0E9C(a1, v2 + v6, v2 + v9, v2 + v12, v13, a2);
}

void sub_241BF5350(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241BF53B4()
{
  if (!qword_26B032350)
  {
    sub_241BF5460();
    sub_241CD6D00();
    sub_241BF596C(&qword_26B038950, (void (*)(uint64_t))sub_241BF5460);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032350);
    }
  }
}

void sub_241BF5460()
{
  if (!qword_26B032630)
  {
    sub_241BF5350(255, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032630);
    }
  }
}

uint64_t sub_241BF54F8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BF5350(255, a2, a3, MEMORY[0x263EFDDF8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BF555C()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  unint64_t v6 = (int *)(type metadata accessor for ChartSharableModelGenerator.Request(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v19 = *(void *)(*(void *)v6 + 64);
  uint64_t v20 = sub_241CD6D00();
  uint64_t v9 = *(void *)(v20 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = *(void *)(v9 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v8, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v0 + v8 + v6[11];
  uint64_t v13 = sub_241CD6810();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v15 = (v8 + v19 + v10) & ~v10;
  unint64_t v16 = ((v18 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v15, v20);

  return MEMORY[0x270FA0238](v0, v16, v3 | v7 | v10 | 7);
}

uint64_t sub_241BF5800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD7740() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for ChartSharableModelGenerator.Request(0) - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_241CD6D00() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v2 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241BF2D84(a1, (v2 + v6), v2 + v9, v2 + v12, v13, a2);
}

uint64_t sub_241BF596C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_241BF59B4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD77C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    unint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v13 = a3[9];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_241CD6810();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      sub_241BF5350(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t sub_241BF5BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = sub_241CD6810();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_241BF5CEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_241CD6810();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    sub_241BF5350(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_241BF5EB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v10 = a3[9];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_241CD6810();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_241BF5350(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_241BF60F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[9];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_241CD6810();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_241BF5350(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_241BF629C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_241CD6810();
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_241BF5350(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_241BF64BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241BF64D0);
}

uint64_t sub_241BF64D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241CD77C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_241BF5350(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_241BF6630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241BF6644);
}

uint64_t sub_241BF6644(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_241CD77C0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  else
  {
    sub_241BF5350(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_241BF67A4()
{
  sub_241CD77C0();
  if (v0 <= 0x3F)
  {
    sub_241BF5350(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for BalanceAdditionalInputSignalProvider()
{
  return &type metadata for BalanceAdditionalInputSignalProvider;
}

uint64_t sub_241BF68D0()
{
  sub_241A78918();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_241CEB720;
  sub_241BF69E8();
  *(void *)(v0 + 56) = sub_241CD7DC0();
  *(void *)(v0 + 64) = sub_241B58BE0(&qword_26B035580, MEMORY[0x263F459A0]);
  sub_241A25BC8((uint64_t *)(v0 + 32));
  sub_241CD7DB0();
  sub_241CD96C0();
  *(void *)(v0 + 96) = sub_241CD9680();
  *(void *)(v0 + 104) = sub_241B58BE0((unint64_t *)&qword_26B035600, MEMORY[0x263F453F0]);
  sub_241A25BC8((uint64_t *)(v0 + 72));
  sub_241CD96B0();
  return v0;
}

uint64_t sub_241BF69E8()
{
  sub_241A33460();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CF2090;
  sub_241A313AC(0, (unint64_t *)&qword_26B030390);
  *(void *)(inited + 32) = MEMORY[0x2456369F0]((id)*MEMORY[0x263F09410]);
  sub_241A313AC(0, (unint64_t *)&qword_26B030398);
  *(void *)(inited + 40) = MEMORY[0x245636A00]((id)*MEMORY[0x263F09BE0]);
  *(void *)(inited + 48) = MEMORY[0x245636A00]((id)*MEMORY[0x263F09E38]);
  *(void *)(inited + 56) = MEMORY[0x245636A00]((id)*MEMORY[0x263F09E88]);
  *(void *)(inited + 64) = MEMORY[0x245636A00]((id)*MEMORY[0x263F09EA8]);
  sub_241CDB2E0();
  if (inited >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_241C69AD0(inited);
  uint64_t v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_241BF6B50()
{
  uint64_t v17 = *v0;
  uint64_t v1 = sub_241CDA1A0();
  uint64_t v15 = *(void *)(v1 - 8);
  uint64_t v16 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = sub_241CD96A0();
  MEMORY[0x270FA5388](v2 - 8);
  sub_241BF7920();
  uint64_t v13 = *(void *)(v3 - 8);
  uint64_t v14 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A72DB8(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v13 - v10;
  sub_241CDB0D0();
  sub_241CDB780();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)((char *)v0 + OBJC_IVAR____TtC9Summaries33AfibBurdenAnalysisDateInputSingal_observer + 8);
  swift_getObjectType();
  sub_241CD9690();
  sub_241BCAEDC((uint64_t)v11, (uint64_t)v9);
  sub_241BF7A50(&qword_26B0354A0, &qword_26B035488);
  sub_241BF7A50(&qword_26B035490, &qword_26B02E8C8);
  sub_241BF7A50(&qword_26B035498, (unint64_t *)&qword_26B02E8D8);
  sub_241CD93C0();
  int v18 = v0;
  sub_241BF7B88(&qword_26B036320, (void (*)(uint64_t))type metadata accessor for AfibBurdenAnalysisDateInputSingal);
  sub_241CD95F0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v14);
  return sub_241A9A4DC((uint64_t)v11);
}

void *sub_241BF7134(uint64_t a1)
{
  swift_unknownObjectWeakInit();
  sub_241BF7AE0((uint64_t)&v5, (uint64_t)v6);
  sub_241BF7AF0();
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  sub_241BF7B50((uint64_t)v6, v3 + 16);
  sub_241BF7B60((uint64_t)v6);
  v1[4] = v3;
  v1[2] = a1;
  v1[3] = objc_msgSend(self, sel_hkhr_aFibBurdenSyncedDefaultsDomainWithHealthStore_, a1);
  return v1;
}

id sub_241BF71E0(void *a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 32);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_241BF7BEC(v4);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = *(void **)(v1 + 24);
  objc_msgSend(v6, sel_startObservation_, a1);
  return objc_msgSend(a1, sel_didUpdateKeyValueDomain_, v6);
}

uint64_t sub_241BF7278(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = MEMORY[0x245638000]();
  if (v3)
  {
    objc_msgSend(*(id *)(a2 + 24), sel_stopObservation_, v3);
    swift_unknownObjectRelease();
  }
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_241BF72EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = MEMORY[0x245638000]();
  if (v3)
  {
    objc_msgSend(*(id *)(a2 + 24), sel_stopObservation_, v3);
    swift_unknownObjectRelease();
  }
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_241BF7354()
{
  swift_release();

  return swift_deallocClassInstance();
}

id sub_241BF739C(void *a1)
{
  return sub_241BF71E0(a1);
}

void sub_241BF73C0()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 32);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_241BF7BD0(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_241BF7424()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries33AfibBurdenAnalysisDateInputSingal_identifier;
  uint64_t v2 = sub_241CD96A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  sub_241A31190(v0 + OBJC_IVAR____TtC9Summaries33AfibBurdenAnalysisDateInputSingal_observerShim);

  return swift_deallocClassInstance();
}

uint64_t sub_241BF74E4()
{
  return type metadata accessor for AfibBurdenAnalysisDateInputSingal();
}

uint64_t type metadata accessor for AfibBurdenAnalysisDateInputSingal()
{
  uint64_t result = qword_26B036330;
  if (!qword_26B036330) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241BF7538()
{
  uint64_t result = sub_241CD96A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AfibBurdenAnalysisDateInputSingal.ObserverShim()
{
  return self;
}

uint64_t initializeWithCopy for AfibBurdenAnalysisDateInputSingal.ObserverShim.State()
{
  return MEMORY[0x270FA05E0]();
}

uint64_t assignWithCopy for AfibBurdenAnalysisDateInputSingal.ObserverShim.State()
{
  return MEMORY[0x270FA05D8]();
}

uint64_t initializeWithTake for AfibBurdenAnalysisDateInputSingal.ObserverShim.State()
{
  return MEMORY[0x270FA0608]();
}

uint64_t assignWithTake for AfibBurdenAnalysisDateInputSingal.ObserverShim.State()
{
  return MEMORY[0x270FA0600]();
}

uint64_t getEnumTagSinglePayload for AfibBurdenAnalysisDateInputSingal.ObserverShim.State(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AfibBurdenAnalysisDateInputSingal.ObserverShim.State(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AfibBurdenAnalysisDateInputSingal.ObserverShim.State()
{
  return &type metadata for AfibBurdenAnalysisDateInputSingal.ObserverShim.State;
}

uint64_t sub_241BF766C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries33AfibBurdenAnalysisDateInputSingal_identifier;
  uint64_t v4 = sub_241CD96A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241BF76E4()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_241BF771C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)(*v0 + OBJC_IVAR____TtC9Summaries33AfibBurdenAnalysisDateInputSingal_observerShim);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_241A311E0(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  sub_241A311E0(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(v1, v5, v6);
}

uint64_t sub_241BF77BC()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC9Summaries33AfibBurdenAnalysisDateInputSingal_observerShim);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_241A311E0(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t sub_241BF7824(uint64_t a1)
{
  uint64_t v2 = sub_241BF7B88(&qword_26B036320, (void (*)(uint64_t))type metadata accessor for AfibBurdenAnalysisDateInputSingal);

  return MEMORY[0x270F35EC8](a1, v2);
}

uint64_t sub_241BF7890()
{
  return sub_241BF7B88(&qword_26B036328, (void (*)(uint64_t))type metadata accessor for AfibBurdenAnalysisDateInputSingal);
}

uint64_t sub_241BF78D8()
{
  return sub_241BF7B88(&qword_26B0355A8, (void (*)(uint64_t))sub_241BF7920);
}

void sub_241BF7920()
{
  if (!qword_26B0355B0)
  {
    sub_241A72DB8(255);
    sub_241BF7A50(&qword_26B0354A0, &qword_26B035488);
    sub_241BF7A50(&qword_26B035490, &qword_26B02E8C8);
    sub_241BF7A50(&qword_26B035498, (unint64_t *)&qword_26B02E8D8);
    unint64_t v0 = sub_241CD93E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0355B0);
    }
  }
}

uint64_t sub_241BF7A50(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A72DB8(255);
    sub_241BF7B88(a2, MEMORY[0x263F07490]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BF7AE0(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA0608](a2, a1);
}

void sub_241BF7AF0()
{
  if (!qword_26B036938)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_241CDBE40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B036938);
    }
  }
}

uint64_t sub_241BF7B50(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA05E0](a2, a1);
}

uint64_t sub_241BF7B60(uint64_t a1)
{
  return a1;
}

uint64_t sub_241BF7B88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BF7BD0(uint64_t a1)
{
  return sub_241BF72EC(a1, v1);
}

uint64_t sub_241BF7BEC(uint64_t a1)
{
  return sub_241BF7278(a1, *(void *)(v1 + 16));
}

uint64_t sub_241BF7C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241BF7C1C);
}

uint64_t sub_241BF7C1C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241BF7CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241BF7CE0);
}

void *sub_241BF7CE0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AudioExposureSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031D60;
  if (!qword_26B031D60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_241BF7DD8()
{
  unint64_t result = qword_26B032100;
  if (!qword_26B032100)
  {
    sub_241BF7EC8(255, &qword_26B032108, MEMORY[0x263F44150]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032100);
  }
  return result;
}

uint64_t sub_241BF7E4C()
{
  return sub_241BF8164(&qword_26B0320B8, MEMORY[0x263F44058]);
}

uint64_t sub_241BF7E94()
{
  return sub_241BF7F98((unint64_t *)&qword_26B0320C8);
}

void sub_241BF7EC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD8D40();
    uint64_t v7 = sub_241BF8164(&qword_26B032170, MEMORY[0x263F44490]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241BF7F64()
{
  return sub_241BF7F98((unint64_t *)&qword_26B0320C0);
}

uint64_t sub_241BF7F98(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BF7EC8(255, (unint64_t *)&unk_26B0320D0, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44470];
    sub_241BF8164(&qword_26B032168, MEMORY[0x263F44470]);
    sub_241BF8164(&qword_26B032160, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BF807C()
{
  return sub_241BF8164(&qword_26B0385C8, MEMORY[0x263F44308]);
}

uint64_t sub_241BF80C4()
{
  return sub_241BF8164(&qword_26B032140, MEMORY[0x263F44308]);
}

uint64_t sub_241BF810C(uint64_t a1)
{
  uint64_t result = sub_241BF8164(&qword_26B037E90, (void (*)(uint64_t))type metadata accessor for AudioExposureSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241BF8164(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BF81AC()
{
  return sub_241BF824C(&qword_26B038370, &qword_26B038378, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241BF81FC()
{
  return sub_241BF824C(&qword_26B032DC0, &qword_26B032DC8, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241BF824C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BF8290(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241BF8290(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241BF7EC8(255, &qword_26B032108, MEMORY[0x263F44150]);
    uint64_t v15 = v6;
    uint64_t v7 = sub_241CD86F0();
    unint64_t v8 = sub_241BF7DD8();
    uint64_t v9 = sub_241BF8164(&qword_26B0320B8, MEMORY[0x263F44058]);
    uint64_t v10 = sub_241BF7F98((unint64_t *)&qword_26B0320C8);
    uint64_t v11 = sub_241BF7F98((unint64_t *)&qword_26B0320C0);
    uint64_t v12 = (void (*)(uint64_t))MEMORY[0x263F44308];
    v16[0] = v15;
    v16[1] = v7;
    v16[2] = v8;
    v16[3] = v9;
    v16[4] = v10;
    v16[5] = v11;
    v16[6] = sub_241BF8164(&qword_26B0385C8, MEMORY[0x263F44308]);
    v16[7] = sub_241BF8164(&qword_26B032140, v12);
    unint64_t v13 = a3(a1, v16);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

id sub_241BF8438@<X0>(uint64_t *a1@<X8>)
{
  int v43 = a1;
  uint64_t v2 = type metadata accessor for AudioExposureSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CDA1A0();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BFA00C(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v40 - v9;
  sub_241BFA00C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = (char *)&v40 - v12;
  sub_241BFA00C(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v17 - 8);
  int v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
  if (result)
  {
    uint64_t v21 = result;
    id v22 = objc_msgSend(result, sel_displayTypeForObjectType_, *(void *)((char *)v1 + *(int *)(v2 + 24) + 16));

    if (v22)
    {
      uint64_t v23 = sub_241CD7A10();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v16, 1, 1, v23);
      uint64_t v24 = sub_241CD6810();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 1, 1, v24);
      sub_241B4A1A8(0, (uint64_t)v16, MEMORY[0x263F8EE78], (uint64_t)v13, v19);
      sub_241CD89A0();
      uint64_t v25 = sub_241CD8610();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 1, 1, v25);
      id v26 = v22;
      uint64_t v27 = sub_241CD8990();
      sub_241A93034(0);
      uint64_t v29 = v28;
      uint64_t v30 = v43;
      sub_241BF9F44((uint64_t)v19, (uint64_t)v43 + *(int *)(v28 + 52), type metadata accessor for SnidgetFeedItemMetadata);

      v30[1] = 0;
      void v30[2] = 0;
      *uint64_t v30 = v27;
      sub_241BF9FAC((uint64_t)v19, type metadata accessor for SnidgetFeedItemMetadata);
      return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v30, 0, 1, v29);
    }
    else
    {
      sub_241CDA0F0();
      sub_241BF9F44((uint64_t)v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AudioExposureSnidgetFeedItemModelProvider);
      uint64_t v31 = sub_241CDA190();
      os_log_type_t v32 = sub_241CDB650();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t v45 = v40;
        *(_DWORD *)uint64_t v33 = 136446466;
        uint64_t v44 = sub_241A33FE4(0xD000000000000029, 0x8000000241CF2220, &v45);
        sub_241CDBBF0();
        *(_WORD *)(v33 + 12) = 2080;
        id v34 = objc_msgSend(*(id *)&v4[*(int *)(v2 + 24) + 16], sel_sensitiveLoggingIdentifier);
        uint64_t v35 = sub_241CDB0D0();
        unint64_t v37 = v36;

        uint64_t v44 = sub_241A33FE4(v35, v37, &v45);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        sub_241BF9FAC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AudioExposureSnidgetFeedItemModelProvider);
        _os_log_impl(&dword_241A23000, v31, v32, "[%{public}s]: No display type could be found for %s", (uint8_t *)v33, 0x16u);
        uint64_t v38 = v40;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v38, -1, -1);
        MEMORY[0x245637F20](v33, -1, -1);
      }
      else
      {
        sub_241BF9FAC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AudioExposureSnidgetFeedItemModelProvider);
      }

      (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v42);
      sub_241A93034(0);
      return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v43, 1, 1, v39);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241BF8A98(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v160 = a3;
  int v150 = a2;
  uint64_t v161 = a4;
  uint64_t v6 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BFA00C(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v9 - 8);
  id v159 = (char *)v130 - v10;
  sub_241BFA00C(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v11 - 8);
  id v139 = (char *)v130 - v12;
  sub_241BFA00C(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v138 = (char *)v130 - v14;
  sub_241BFA00C(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v15 - 8);
  id v158 = (char *)v130 - v16;
  uint64_t v17 = (void *)sub_241CD6810();
  uint64_t v156 = *(v17 - 1);
  id v157 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v136 = (char *)v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BFA00C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v162 = (uint64_t)v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v141 = (uint64_t)v130 - v22;
  uint64_t v149 = sub_241CD6EE0();
  uint64_t v148 = *(void *)(v149 - 8);
  MEMORY[0x270FA5388](v149);
  uint64_t v147 = (char *)v130 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BFA00C(0, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v146 = (char *)v130 - v25;
  sub_241BFA00C(0, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v145 = (char *)v130 - v27;
  uint64_t v28 = sub_241CD6D00();
  uint64_t v153 = *(void *)(v28 - 8);
  id v154 = (void (*)(uint64_t, void, uint64_t, id))v28;
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v135 = (char *)v130 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v140 = (char *)v130 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v144 = (char *)v130 - v33;
  uint64_t v34 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  MEMORY[0x270FA5388](v34);
  uint64_t v143 = (uint64_t)v130 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_241CD69B0();
  uint64_t v151 = *(void *)(v152 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v152);
  unint64_t v137 = (char *)v130 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v155 = (char *)v130 - v38;
  uint64_t v39 = self;
  uint64_t v40 = *v4;
  id v41 = objc_msgSend(v39, sel_sharedInstanceForHealthStore_, *v4);
  if (!v41)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v42 = v41;
  uint64_t v43 = *(int *)(type metadata accessor for AudioExposureSnidgetFeedItemModelProvider() + 24);
  unint64_t v142 = v4;
  uint64_t v44 = (uint64_t)v4 + v43;
  id v45 = objc_msgSend(v42, sel_displayTypeForObjectType_, *(char **)((char *)v4 + v43 + 16));

  if (!v45)
  {
    sub_241A3A824();
    swift_allocError();
    swift_willThrow();
    return;
  }
  uint64_t v46 = v163;
  sub_241ADF7D8(a1);
  if (v46)
  {

    return;
  }
  uint64_t v48 = v47;
  if (!v47)
  {
LABEL_14:
    uint64_t v56 = sub_241CD7A10();
    uint64_t v57 = (uint64_t)v159;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v159, 1, 1, v56);
    uint64_t v58 = v162;
    (*(void (**)(uint64_t, uint64_t, uint64_t, id))(v156 + 56))(v162, 1, 1, v157);
    uint64_t v59 = v160;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v57, v59, v58, v8);
    sub_241CD89A0();
    uint64_t v60 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v158, 1, 1, v60);
    id v61 = v45;
    uint64_t v62 = sub_241CD8990();
    sub_241A93034(0);
    uint64_t v64 = v161;
    sub_241BF9F44((uint64_t)v8, (uint64_t)v161 + *(int *)(v63 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v64[1] = 0;
    v64[2] = 0;
    uint64_t *v64 = v62;
    sub_241BF9FAC((uint64_t)v8, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  if (!objc_msgSend(v47, sel_hasLeqQuantity)
    || !objc_msgSend(v48, sel_hasSecondsListened)
    || !objc_msgSend(v48, sel_hasDaysAggregated)
    || !objc_msgSend(v48, sel_hasLastUpdatedDateData))
  {

    goto LABEL_14;
  }
  id v134 = v48;
  uint64_t v133 = *(void **)(v44 + *(int *)(v34 + 32));
  unint64_t v49 = v133;
  type metadata accessor for SnidgetStringBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v40;
  uint64_t v51 = self;
  id v132 = v49;
  unint64_t v52 = v40;
  id v53 = objc_msgSend(v51, sel_sharedInstanceForHealthStore_, v52);
  uint64_t v163 = inited;
  *(void *)(inited + 32) = v53;
  if (v133)
  {
    id v54 = v134;
    id v55 = v132;
  }
  else
  {
    id v65 = v53;
    id v55 = objc_msgSend(v65, sel_createHKUnitPreferenceController);

    id v54 = v134;
  }

  *(void *)(v163 + 24) = v55;
  id v66 = objc_msgSend(v54, sel_leqQuantity);
  if (!v66) {
    goto LABEL_24;
  }
  unint64_t v67 = v66;
  id v68 = objc_msgSend(v66, sel_unitString);

  if (!v68)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_241CDB0D0();

  uint64_t v69 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  id v70 = objc_msgSend(self, sel_unitFromString_, v69);

  id v71 = objc_msgSend(v54, sel_leqQuantity);
  if (!v71)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v72 = v71;
  uint64_t v73 = self;
  objc_msgSend(v72, sel_value);
  double v75 = v74;

  id v76 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v70, v75);
  objc_msgSend(v54, sel_secondsListened);
  id v78 = objc_msgSend(v73, sel_classifyLEQ_forDuration_overDays_, v76, objc_msgSend(v54, sel_daysAggregated), v77);

  v130[2] = v78;
  id v79 = objc_msgSend(v73, sel_localizedDisplayNameForClassification_, v78);
  sub_241CDB0D0();

  SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
  swift_bridgeObjectRelease();
  sub_241CD9800();
  v164[3] = sub_241B8A8A8();
  v164[0] = v45;
  id v132 = v45;
  v130[1] = sub_241CD97F0();
  uint64_t v133 = v80;
  sub_241BFA060((uint64_t)v164, (uint64_t)&qword_26B035010, MEMORY[0x263F8EE58] + 8, (uint64_t (*)(void))sub_241A94320);
  uint64_t v81 = v142[1];
  uint64_t v131 = *v142;
  uint64_t v82 = v143;
  sub_241BF9F44(v44, v143, type metadata accessor for SnidgetFeedItemGeneratorRequest);
  objc_msgSend(v54, sel_lastUpdatedDateData);
  id v83 = (id)HKDecodeDateForValue();
  uint64_t v84 = v144;
  sub_241CD6CB0();

  uint64_t v85 = v145;
  (*(void (**)(char *, uint64_t, uint64_t, void))(v153 + 56))(v145, 1, 1, v154);
  id v86 = objc_msgSend(v54, sel_leqQuantity);
  if (!v86)
  {
LABEL_27:
    __break(1u);
    return;
  }
  os_log_t v87 = v86;
  sub_241A3A71C();
  uint64_t v89 = v88;
  uint64_t v90 = &v85[*(int *)(v88 + 48)];
  objc_msgSend(v87, sel_value);
  uint64_t v92 = v91;

  *(void *)uint64_t v90 = v92;
  v90[8] = 0;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v85, 0, 1, v89);
  uint64_t v93 = *MEMORY[0x263F442D8];
  uint64_t v94 = sub_241CD8A60();
  uint64_t v95 = *(void *)(v94 - 8);
  uint64_t v96 = (uint64_t)v146;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 104))(v146, v93, v94);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v95 + 56))(v96, 0, 1, v94);
  uint64_t v97 = (uint64_t)v85;
  uint64_t v98 = (uint64_t)v147;
  sub_241CD6EA0();
  uint64_t v99 = (char *)sub_241BACC30(v131, v81, v82, v150, v84, v97, v96, 0, v98);
  (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v98, v149);
  sub_241BFA060(v96, (uint64_t)&unk_26B032130, MEMORY[0x263F442F0], (uint64_t (*)(void))sub_241BFA00C);
  sub_241BFA060(v97, (uint64_t)&qword_26B031FE8, (uint64_t)sub_241A3A71C, (uint64_t (*)(void))sub_241BFA00C);
  (*(void (**)(void *, void (*)(uint64_t, void, uint64_t, id)))(v153 + 8))(v84, v154);
  sub_241BF9FAC(v82, type metadata accessor for SnidgetFeedItemGeneratorRequest);
  uint64_t v100 = v156;
  id v101 = v157;
  uint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t, id))(v156 + 56);
  v102(v141, 1, 1, v157);
  id v103 = v134;
  if (v99)
  {
    swift_retain();
    id v154 = v102;
    uint64_t v104 = v136;
    sub_241CD8A40();
    sub_241CD67E0();
    (*(void (**)(char *, id))(v100 + 8))(v104, v101);
    objc_msgSend(v103, sel_lastUpdatedDateData);
    id v105 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v106 = v162;
    uint64_t v107 = v141;
    sub_241CD67C0();
    swift_release();
    sub_241BFA060(v107, (uint64_t)&qword_26B038F10, MEMORY[0x263F062D0], (uint64_t (*)(void))sub_241BFA00C);
    v154(v106, 0, 1, v101);
    sub_241A3AAA0(v106, v107);
  }
  sub_241CD89A0();
  sub_241A3A9CC();
  uint64_t v109 = *(int *)(v108 + 48);
  id v157 = v132;
  objc_msgSend(v103, sel_lastUpdatedDateData);
  id v110 = (id)HKDecodeDateForValue();
  id v111 = v158;
  sub_241CD6CB0();

  v111[v109] = 0;
  uint64_t v112 = *MEMORY[0x263F43F18];
  uint64_t v113 = sub_241CD8610();
  uint64_t v114 = *(void *)(v113 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 104))(v111, v112, v113);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
  id v158 = (char *)sub_241CD8990();
  uint64_t v115 = v138;
  SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
  swift_bridgeObjectRelease();
  uint64_t v116 = v151;
  uint64_t v117 = v152;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v151 + 56))(v115, 0, 1, v152);
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v137, v155, v117);
  uint64_t v118 = sub_241CD8E70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v139, 1, 1, v118);
  sub_241CD8D30();
  swift_allocObject();
  uint64_t v156 = sub_241CD8D20();
  swift_retain();
  id v119 = v134;
  objc_msgSend(v134, sel_lastUpdatedDateData);
  id v120 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v121 = (uint64_t)v159;
  sub_241CD79D0();
  uint64_t v122 = sub_241CD7A10();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v121, 0, 1, v122);
  uint64_t v123 = v141;
  uint64_t v124 = v162;
  sub_241A4145C(v141, v162);
  sub_241A93034(0);
  uint64_t v127 = v160;
  uint64_t v126 = (char **)v161;
  uint64_t v128 = (char *)v161 + *(int *)(v125 + 52);
  swift_bridgeObjectRetain();
  sub_241B4A1A8(1, v121, v127, v124, v128);
  swift_release();

  swift_release();
  uint64_t v129 = v156;
  *uint64_t v126 = v158;
  v126[1] = (char *)v129;
  uint64_t v126[2] = v99;
  sub_241BFA060(v123, (uint64_t)&qword_26B038F10, MEMORY[0x263F062D0], (uint64_t (*)(void))sub_241BFA00C);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v155, v152);
}

uint64_t sub_241BF9EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241BF9F44(v2 + *(int *)(a1 + 24), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241BF9F1C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_241BF9F44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241BF9FAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_241BFA00C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241BFA060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_241BFA0C0()
{
  sub_241CDBE00();
  type metadata accessor for ActivitySummaryModelGeneratorPipeline();
  sub_241BFC4F4();
  uint64_t v0 = sub_241CDB120();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  if (qword_26B0328B8 != -1) {
    swift_once();
  }
  id v1 = objc_msgSend((id)qword_26B041208, sel_identifier);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  return v0;
}

id sub_241BFA280()
{
  id result = objc_msgSend(self, sel_activitySummaryType);
  qword_26B041208 = (uint64_t)result;
  return result;
}

uint64_t *sub_241BFA2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v48 = *v3;
  uint64_t v6 = type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v45 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v46 = v7;
  uint64_t v47 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v49 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD7650();
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v40 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD7690();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v44 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v38 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a1;
  id v39 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  if (qword_26B0328B8 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)qword_26B041208;
  *(void *)(inited + 32) = qword_26B041208;
  uint64_t v54 = inited;
  sub_241CDB2E0();
  uint64_t v52 = a2;
  char v16 = *(unsigned char *)(a2 + 8);
  sub_241A32D80(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v17 = sub_241CD73B0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  if (v16)
  {
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v18 + 104))(v21 + v20, *MEMORY[0x263F454D0], v17);
  }
  else
  {
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_241CEB720;
    unint64_t v24 = v21 + v20;
    uint64_t v25 = *(void (**)(unint64_t, void, uint64_t))(v18 + 104);
    v25(v24, *MEMORY[0x263F45520], v17);
    v25(v24 + v19, *MEMORY[0x263F45538], v17);
  }
  id v22 = v39;
  id v23 = v15;
  sub_241C5D74C(v21);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v26 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v26);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v40, *MEMORY[0x263F45690], v42);
  uint64_t v27 = v38;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries56ActivitySummaryCurrentValueSummarySharableModelGenerator_domain, v27, v44);
  uint64_t v28 = v52;
  sub_241BFC530(v52, (uint64_t)v3 + OBJC_IVAR____TtC9Summaries56ActivitySummaryCurrentValueSummarySharableModelGenerator_request, type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request);
  uint64_t v29 = v47;
  sub_241BFC530(v28, v47, type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v30 = (*(unsigned __int8 *)(v45 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v48;
  sub_241BFBE94(v29, v31 + v30);
  sub_241B778C8(0);
  sub_241B77A48(&qword_26B02EA98, sub_241B778C8);
  uint64_t v32 = v49;
  sub_241CDA620();
  sub_241B77A48(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v33 = v51;
  uint64_t v34 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v33);
  sub_241BFC598(v28, type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request);
  uint64_t v35 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v53, v35);
  *(uint64_t *)((char *)v3
             + OBJC_IVAR____TtC9Summaries56ActivitySummaryCurrentValueSummarySharableModelGenerator_publisher) = v34;
  return v3;
}

uint64_t sub_241BFA9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A32D80(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v4 = sub_241CD7C30();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_241CEB730;
  uint64_t v8 = (uint64_t *)(v7 + v6);
  sub_241A32D80(0, &qword_26B034F38, MEMORY[0x263F45738], v3);
  uint64_t v9 = *(void *)(sub_241CD79A0() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_241CEB730;
  sub_241BFAB94(a2, v11 + v10);
  uint64_t *v8 = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v8, *MEMORY[0x263F45880], v4);
  sub_241B6F648(0);
  return sub_241CDA5D0();
}

void sub_241BFAB94(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A32D80(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v44 = (char *)v40 - v5;
  sub_241A32D80(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v3);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v42 = (char *)v40 - v7;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v40 - v13;
  uint64_t v15 = *(void **)a1;
  int v16 = *(unsigned __int8 *)(a1 + 9);
  uint64_t v17 = a1
      + *(int *)(type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request(0) + 28);
  id v43 = v15;
  id v18 = sub_241BFBF6C(v15, v16, v17);
  int v19 = *(unsigned __int8 *)(a1 + 8);
  id v20 = v18;
  sub_241CD7A80();
  uint64_t v21 = v20;
  id v22 = objc_msgSend(v20, sel_data);
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = sub_241CD6AE0();
    unint64_t v26 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    unint64_t v26 = 0xF000000000000000;
  }
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v27 = sub_241A54BF8(v24, v26, 1, 0, v19, (uint64_t)v12);
  sub_241A54FC8(v24, v26);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  sub_241BFA0C0();
  int v28 = *(unsigned __int8 *)(a1 + 8);
  v40[1] = v29;
  id v41 = v21;
  if (v28 == 1)
  {
    sub_241A32D80(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
    sub_241CD9350();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
    id v30 = objc_msgSend(self, sel_activitySummaryType);
    sub_241CDB470();
  }
  sub_241A33460();
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_241CEB710;
  if (qword_26B0328B8 != -1) {
    swift_once();
  }
  uint64_t v32 = (void *)qword_26B041208;
  *(void *)(v31 + 32) = qword_26B041208;
  uint64_t v46 = v31;
  sub_241CDB2E0();
  id v33 = v32;
  id v34 = objc_msgSend(v27, sel_data);
  if (v34)
  {
    uint64_t v35 = v34;
    sub_241CD6AE0();

    sub_241CD7960();
    uint64_t v36 = v42;
    sub_241CD6F40();
    uint64_t v37 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 0, 1, v37);
    uint64_t v38 = v44;
    sub_241CD6DC0();
    uint64_t v39 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
    sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_241BFB0F4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries56ActivitySummaryCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_241BFC598(v0 + OBJC_IVAR____TtC9Summaries56ActivitySummaryCurrentValueSummarySharableModelGenerator_request, type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241BFB1C8()
{
  return type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B02EAE0);
}

uint64_t sub_241BFB1F0()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_268D43468);
}

char *sub_241BFB2E8(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[8] = *((unsigned char *)a2 + 8);
    a1[9] = *((unsigned char *)a2 + 9);
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_241CD6D00();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v12 = v4;
    if (v11(v8, 1, v9))
    {
      sub_241A72DB8(0);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_241BFB460(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_241CD6D00();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_241BFB530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_241CD6D00();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  id v11 = v4;
  if (v10(v7, 1, v8))
  {
    sub_241A72DB8(0);
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_241BFB65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (void *)(a1 + v9);
  id v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_241CD6D00();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_241A72DB8(0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_241BFB7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_241CD6D00();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_241A72DB8(0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_241BFB914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_241CD6D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_241A72DB8(0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_241BFBAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241BFBABC);
}

uint64_t sub_241BFBABC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_241A72DB8(0);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_241BFBB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241BFBB8C);
}

void *sub_241BFBB8C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    sub_241A72DB8(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_241BFBC34()
{
  sub_241A72DB8(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_241BFBCD8()
{
  return swift_retain();
}

uint64_t sub_241BFBCEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries56ActivitySummaryCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241BFBD64()
{
  unint64_t v1 = (int *)(type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);

  uint64_t v5 = v0 + v3 + v1[9];
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241BFBE94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241BFBEF8()
{
  uint64_t v1 = *(void *)(type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_241BFA9A0(v2, v3);
}

id sub_241BFBF6C(void *a1, int a2, uint64_t a3)
{
  LODWORD(v44) = a2;
  sub_241A72428(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v43 - v9;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A32D80(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  int v14 = (char *)&v43 - v13;
  sub_241A32D80(0, &qword_26B038F10, MEMORY[0x263F062D0], v11);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v43 - v16;
  sub_241A72DB8(0);
  MEMORY[0x270FA5388](v18 - 8);
  id v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_241CD6D00();
  uint64_t v21 = *(void *)(v45 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v45);
  uint64_t v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  unint64_t v26 = (char *)&v43 - v25;
  if (!a1)
  {
    sub_241CD7A80();
    uint64_t v41 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v10, 0, 1, v41);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v42 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v14, 1, 1, v42);
    sub_241BFC530((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))sub_241A72428);
    id v40 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v14, (uint64_t)v8, 0, 0);
    sub_241BFC598((uint64_t)v10, (uint64_t (*)(void))sub_241A72428);
    return v40;
  }
  id v27 = a1;
  HKActivitySummary.humanReadableDate.getter(v26);
  uint64_t v28 = sub_241A313AC(0, &qword_26B02E818);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v26, v45);
  sub_241BFC530(a3, (uint64_t)v20, (uint64_t (*)(void))sub_241A72DB8);
  id v29 = v27;
  int v30 = v44 & 1;
  id v44 = v29;
  id v31 = HKCodableSummaryActivityRingsValue.init(activitySummary:date:hasEverHadAWatch:activityResumeDate:)(v29, v24, v30, (uint64_t)v20);
  sub_241A313AC(0, &qword_26B034E48);
  sub_241CD6770();
  uint64_t v32 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v17, 0, 1, v32);
  id v33 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v17, 1, 0);
  id result = objc_msgSend(v31, sel_data);
  if (result)
  {
    uint64_t v35 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v36 = sub_241CD6AE0();
    unint64_t v38 = v37;

    uint64_t v39 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v14, 1, 1, v39);
    v46[3] = v28;
    v46[4] = &off_26F5C0A88;
    v46[0] = v31;
    id v40 = sub_241A54648(v36, v38, 0, (uint64_t)v14, (uint64_t)v33, 0, (uint64_t)v46);

    sub_241A37374(v36, v38);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v45);
    return v40;
  }
  __break(1u);
  return result;
}

unint64_t sub_241BFC4F4()
{
  unint64_t result = qword_26B033F50;
  if (!qword_26B033F50)
  {
    type metadata accessor for ActivitySummaryModelGeneratorPipeline();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B033F50);
  }
  return result;
}

uint64_t sub_241BFC530(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241BFC598(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241BFC5F8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, char *a10)
{
  uint64_t v153 = a7;
  uint64_t v154 = a8;
  id v157 = a6;
  uint64_t v176 = a5;
  id v166 = a4;
  uint64_t v160 = a9;
  sub_241BFEE18(0, (unint64_t *)&qword_26B032830, MEMORY[0x263EFDE08]);
  uint64_t v128 = *(void *)(v13 - 8);
  uint64_t v129 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v127 = (char *)&v123 - v14;
  uint64_t v15 = sub_241CD7740();
  uint64_t v147 = *(void *)(v15 - 8);
  uint64_t v148 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v145 = v16;
  uint64_t v146 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BFEEAC();
  uint64_t v150 = *(void *)(v17 - 8);
  uint64_t v151 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v149 = (char *)&v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29BBC(0, &qword_26B0327E8, (uint64_t (*)(uint64_t))sub_241A29620, MEMORY[0x263EFDDF8]);
  uint64_t v132 = *(void *)(v19 - 8);
  uint64_t v133 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v131 = (char *)&v123 - v20;
  uint64_t v21 = sub_241CDA1A0();
  uint64_t v125 = *(void *)(v21 - 8);
  uint64_t v126 = v21;
  MEMORY[0x270FA5388](v21);
  unint64_t v142 = (char *)&v123 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CD75A0();
  uint64_t v158 = *(void *)(v23 - 8);
  uint64_t v159 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  id v134 = (char *)&v123 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v124 = (char *)&v123 - v26;
  sub_241BFEFAC();
  uint64_t v140 = *(void *)(v27 - 8);
  uint64_t v141 = v27;
  MEMORY[0x270FA5388](v27);
  id v139 = (char *)&v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29BBC(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v29);
  uint64_t v135 = (char *)&v123 - v30;
  sub_241A29620(0);
  uint64_t v152 = v31;
  uint64_t v136 = *(void *)(v31 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v143 = (char *)&v123 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v138 = (uint64_t)&v123 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v137 = (uint64_t)&v123 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v156 = (uint64_t)&v123 - v38;
  uint64_t v167 = (void *)sub_241CD7650();
  uint64_t v165 = (void (**)(void, void, void))*(v167 - 1);
  MEMORY[0x270FA5388](v167);
  uint64_t v164 = (char *)&v123 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_241CD7690();
  uint64_t v163 = *(void *)(v175 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v175);
  uint64_t v130 = (char *)&v123 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = v41;
  MEMORY[0x270FA5388](v40);
  uint64_t v168 = (char *)&v123 - v42;
  sub_241BFF028();
  uint64_t v44 = v43;
  uint64_t v45 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v47 = (char *)&v123 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v174 = (id)sub_241CD76D0();
  id v48 = a2;
  id v173 = a3;
  sub_241CD76A0();
  sub_241A311E0(v180, v181);
  id v172 = (id)sub_241CD7A30();
  sub_241CD76B0();
  sub_241A311E0(v179, v179[3]);
  id v171 = (id)sub_241CD75F0();
  sub_241CD76B0();
  sub_241A311E0(v178, v178[3]);
  uint64_t v170 = sub_241CD75C0();
  uint64_t v161 = a1;
  os_log_t v162 = v49;
  sub_241CD76B0();
  sub_241A311E0(v182, v183);
  uint64_t v177 = sub_241CD75D0();
  sub_241BFF104();
  sub_241BFF4E4(&qword_26B032670, (void (*)(uint64_t))sub_241BFF104);
  sub_241CDA710();
  swift_release();
  sub_241A31190((uint64_t)v182);
  sub_241BFF4E4(&qword_26B032368, (void (*)(uint64_t))sub_241BFF028);
  uint64_t v169 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
  swift_bridgeObjectRetain();
  uint64_t v50 = (void *)sub_241CD76E0();
  sub_241BFF434(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = v48;
  v182[0] = inited;
  sub_241CDB2E0();
  sub_241A29BBC(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v52 = sub_241CD73B0();
  uint64_t v53 = *(void *)(v52 - 8);
  unint64_t v54 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  uint64_t v55 = swift_allocObject();
  long long v155 = xmmword_241CEB730;
  *(_OWORD *)(v55 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v53 + 104))(v55 + v54, *MEMORY[0x263F454F8], v52);
  id v56 = v50;
  uint64_t v57 = v48;
  sub_241C5D74C(v55);
  swift_setDeallocating();
  uint64_t v58 = v163;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v59 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v59);
  swift_bridgeObjectRelease();
  ((void (**)(char *, void, void *))v165)[13](v164, *MEMORY[0x263F45688], v167);
  uint64_t v60 = v168;
  uint64_t v61 = v161;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  id v62 = (id)sub_241CD7710();
  uint64_t v63 = *(void (**)(char *, uint64_t))(v58 + 8);
  v63(v60, v175);
  v182[0] = v174;
  v182[1] = v57;
  uint64_t v167 = v57;
  v182[2] = v173;
  uint64_t v183 = (uint64_t)v172;
  id v184 = v171;
  uint64_t v185 = v170;
  os_log_t v186 = v162;
  id v187 = v166;
  uint64_t v188 = v176;
  uint64_t v189 = v169;
  id v190 = v62;
  sub_241A31190((uint64_t)v178);
  sub_241A31190((uint64_t)v179);
  sub_241A31190((uint64_t)v180);
  uint64_t v64 = (void *)sub_241CD76E0();
  if (!v64)
  {
LABEL_6:
    if (v157)
    {
      id v166 = v62;
      id v78 = v157;
      id v79 = sub_241A76D6C(v78);
      uint64_t v164 = a10;
      uint64_t v165 = (void (**)(void, void, void))v78;
      unint64_t v94 = (unint64_t)v79;
      sub_241CD76B0();
      sub_241A311E0(v180, v181);
      uint64_t v95 = (uint64_t)v143;
      sub_241CD7600();
      uint64_t v96 = sub_241A6C570(v95, v94);
      swift_bridgeObjectRelease();
      sub_241A293F0(v95);
      sub_241A31190((uint64_t)v180);
      v180[0] = v96;
      sub_241BD0064();
      sub_241BFF4E4(&qword_26B02E9F0, (void (*)(uint64_t))sub_241BD0064);
      uint64_t v97 = sub_241CDA6D0();
      swift_release();
      v180[0] = v97;
      uint64_t v99 = v146;
      uint64_t v98 = v147;
      uint64_t v100 = v61;
      uint64_t v101 = v148;
      (*(void (**)(char *, uint64_t, uint64_t))(v147 + 16))(v146, v100, v148);
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v168, v164, v175);
      unint64_t v102 = (*(unsigned __int8 *)(v98 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
      unint64_t v103 = (v145 + *(unsigned __int8 *)(v58 + 80) + v102) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      unint64_t v104 = (v144 + v103 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v105 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v98 + 32))(v105 + v102, v99, v101);
      (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v105 + v103, v168, v175);
      uint64_t v106 = (void *)(v105 + v104);
      uint64_t v107 = v154;
      *uint64_t v106 = v153;
      v106[1] = v107;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_241CDA4F0();
      sub_241BD0064();
      uint64_t v108 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
      sub_241BFEE18(0, &qword_26B032718, MEMORY[0x263EFDCF0]);
      sub_241BFF4E4(&qword_26B02E9F0, (void (*)(uint64_t))sub_241BD0064);
      sub_241BFF174(&qword_26B02EA20, &qword_26B032718, v108);
      uint64_t v109 = v149;
      sub_241CDA840();
      swift_release();
      swift_release();
      sub_241BFF4E4(&qword_26B02E9C0, (void (*)(uint64_t))sub_241BFEEAC);
      uint64_t v110 = v151;
      uint64_t v111 = sub_241CDA6D0();
      swift_release();

      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v150 + 8))(v109, v110);
      uint64_t v113 = v160;
    }
    else
    {
      uint64_t v80 = v142;
      sub_241CDA0F0();
      uint64_t v81 = v130;
      uint64_t v82 = v175;
      uint64_t v165 = *(void (***)(void, void, void))(v58 + 16);
      ((void (*)(char *, char *, uint64_t))v165)(v130, a10, v175);
      id v83 = sub_241CDA190();
      os_log_type_t v84 = sub_241CDB660();
      int v85 = v84;
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v86 = swift_slowAlloc();
        uint64_t v164 = (char *)swift_slowAlloc();
        v180[0] = (uint64_t)v164;
        *(_DWORD *)uint64_t v86 = 136315394;
        id v166 = v62;
        uint64_t v87 = sub_241CDC270();
        v179[0] = sub_241A33FE4(v87, v88, v180);
        LODWORD(v163) = v85;
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v86 + 12) = 2080;
        os_log_t v162 = v83;
        uint64_t v89 = v175;
        ((void (*)(char *, char *, uint64_t))v165)(v168, v81, v175);
        uint64_t v90 = sub_241CDB120();
        v179[0] = sub_241A33FE4(v90, v91, v180);
        sub_241CDBBF0();
        id v62 = v166;
        swift_bridgeObjectRelease();
        v63(v81, v89);
        os_log_t v92 = v162;
        _os_log_impl(&dword_241A23000, v162, (os_log_type_t)v163, "%s Invalid configuration! Received nil model for non-primary profile for %s", (uint8_t *)v86, 0x16u);
        uint64_t v93 = v164;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v93, -1, -1);
        MEMORY[0x245637F20](v86, -1, -1);

        (*(void (**)(char *, uint64_t))(v125 + 8))(v142, v126);
      }
      else
      {
        v63(v81, v82);

        (*(void (**)(char *, uint64_t))(v125 + 8))(v80, v126);
      }
      uint64_t v113 = v160;
      uint64_t v121 = v128;
      uint64_t v120 = v129;
      uint64_t v122 = v127;
      sub_241BFF434(0, (unint64_t *)&qword_26B034C28, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
      sub_241CDA5E0();
      sub_241BFF174(&qword_268D433D0, (unint64_t *)&qword_26B032830, MEMORY[0x263EFDE08]);
      uint64_t v111 = sub_241CDA6D0();

      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v121 + 8))(v122, v120);
    }
    goto LABEL_18;
  }
  id v65 = v64;
  if (objc_msgSend(v64, sel_type) != (id)1)
  {

    goto LABEL_6;
  }
  uint64_t v66 = sub_241CD78F0();
  uint64_t v67 = (uint64_t)v135;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v135, 1, 1, v66);
  uint64_t v68 = v156;
  sub_241BA66D8(v67, 0, v156);
  sub_241AC3F64(v67);
  sub_241BFF434(0, &qword_26B034F40, MEMORY[0x263F45828], MEMORY[0x263F8E0F8]);
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = v155;
  sub_241A29BBC(0, &qword_26B034F28, (uint64_t (*)(uint64_t))sub_241A29620, MEMORY[0x263F8E0F8]);
  unint64_t v70 = (*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80);
  uint64_t v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = v155;
  uint64_t v72 = v71 + v70;
  sub_241A2944C(v68, v72);
  uint64_t v73 = v137;
  sub_241A2944C(v72, v137);
  uint64_t v74 = v138;
  sub_241BFF480(v73, v138);
  uint64_t v76 = v158;
  uint64_t v75 = v159;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v74, 1, v159) == 1)
  {
    sub_241A293F0(v74);
    unint64_t v77 = MEMORY[0x263F8EE78];
  }
  else
  {
    id v166 = v62;
    uint64_t v114 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 32);
    uint64_t v115 = v124;
    v114(v124, v74, v75);
    v114(v134, (uint64_t)v115, v75);
    unint64_t v77 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v77 = sub_241AF8258(0, *(void *)(v77 + 16) + 1, 1, v77);
    }
    unint64_t v117 = *(void *)(v77 + 16);
    unint64_t v116 = *(void *)(v77 + 24);
    if (v117 >= v116 >> 1) {
      unint64_t v77 = sub_241AF8258(v116 > 1, v117 + 1, 1, v77);
    }
    *(void *)(v77 + 16) = v117 + 1;
    v114((char *)(v77+ ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80))+ *(void *)(v158 + 72) * v117), (uint64_t)v134, v159);
    id v62 = v166;
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v69 + 32) = v77;
  *(void *)(v69 + 40) = 0;
  *(void *)(v69 + 48) = 0;
  *(void *)(v69 + 56) = 0;
  *(unsigned char *)(v69 + 64) = 0;
  v180[0] = v69;
  sub_241BFF434(0, (unint64_t *)&qword_26B034C28, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  uint64_t v118 = v139;
  sub_241CDA5D0();
  sub_241BFF4E4(&qword_26B02EA90, (void (*)(uint64_t))sub_241BFEFAC);
  uint64_t v119 = v141;
  uint64_t v111 = sub_241CDA6D0();

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v140 + 8))(v118, v119);
  uint64_t result = sub_241A293F0(v156);
  uint64_t v113 = v160;
LABEL_18:
  uint64_t *v113 = v111;
  return result;
}

uint64_t sub_241BFDC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_241CD78F0();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a2, 0, 1, v4);
}

uint64_t sub_241BFDCF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v30 = a5;
  uint64_t v31 = a4;
  uint64_t v27 = a3;
  uint64_t v28 = a1;
  uint64_t v25 = a2;
  uint64_t v32 = a6;
  sub_241A29620(0);
  uint64_t v29 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v24 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29BBC(0, &qword_26B0327E8, (uint64_t (*)(uint64_t))sub_241A29620, MEMORY[0x263EFDDF8]);
  uint64_t v26 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_241CD7690();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CD7740();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_241CD7800();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v25, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v27, v9);
  sub_241A2944C(v28, v24);
  swift_bridgeObjectRetain();
  sub_241CDA5D0();
  sub_241A36B10();
  sub_241CD77E0();
  uint64_t v21 = sub_241CD77F0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  *uint64_t v32 = v21;
  return result;
}

uint64_t sub_241BFE030()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries29SummaryAlertFeedItemGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241BFE0F0()
{
  return type metadata accessor for SummaryAlertFeedItemGenerator();
}

uint64_t type metadata accessor for SummaryAlertFeedItemGenerator()
{
  uint64_t result = qword_26B02EFD0;
  if (!qword_26B02EFD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241BFE144()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241BFE1F0()
{
  return swift_retain();
}

uint64_t sub_241BFE204@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries29SummaryAlertFeedItemGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241BFE27C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  id v71 = a6;
  uint64_t v74 = a3;
  uint64_t v75 = a4;
  uint64_t v73 = a2;
  uint64_t v81 = a1;
  uint64_t v77 = *v6;
  uint64_t v8 = sub_241CD7740();
  uint64_t v86 = *(void *)(v8 - 8);
  uint64_t v87 = v8;
  unint64_t v72 = *(void *)(v86 + 64);
  MEMORY[0x270FA5388](v8);
  unint64_t v88 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BFEA40();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v78 = v10;
  uint64_t v79 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v76 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_241CD7650();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241CD7690();
  uint64_t v82 = *(void *)(v15 - 8);
  uint64_t v83 = v15;
  uint64_t v70 = *(void *)(v82 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  int v85 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v80 = (char *)&v66 - v18;
  uint64_t v19 = (void *)sub_241CD76E0();
  sub_241BFF434(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = a5;
  uint64_t v89 = inited;
  sub_241CDB2E0();
  sub_241A29BBC(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v21 = sub_241CD73B0();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v24 + v23, *MEMORY[0x263F454F8], v21);
  id v25 = v19;
  id v26 = a5;
  id v67 = v26;
  sub_241C5D74C(v24);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v27 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v27);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v14, *MEMORY[0x263F45688], v69);
  uint64_t v28 = v80;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  uint64_t v30 = v83;
  uint64_t v29 = v84;
  uint64_t v31 = v82;
  uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v32(v84 + OBJC_IVAR____TtC9Summaries29SummaryAlertFeedItemGenerator_domain, v28, v83);
  uint64_t v33 = v71;
  *(void *)(v29 + OBJC_IVAR____TtC9Summaries29SummaryAlertFeedItemGenerator_primaryHealthStore) = v71;
  id v71 = v33;
  uint64_t v34 = v81;
  uint64_t v35 = (void *)sub_241CD76E0();
  uint64_t v69 = sub_241CA1EFC(v26);
  uint64_t v68 = v36;

  uint64_t v37 = v86;
  uint64_t v38 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v88, v34, v87);
  v32((uint64_t)v85, v28, v30);
  uint64_t v39 = v37;
  unint64_t v40 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v41 = (v72 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = (v42 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (v43 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v46 = (*(unsigned __int8 *)(v31 + 80) + v45 + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v72 = (v70 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v47 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v47 + v40, v88, v38);
  id v48 = v67;
  *(void *)(v47 + v41) = v67;
  unint64_t v49 = v71;
  *(void *)(v47 + v42) = v71;
  uint64_t v50 = (void *)(v47 + v43);
  uint64_t v51 = v74;
  uint64_t v52 = v75;
  *uint64_t v50 = v73;
  v50[1] = v51;
  *(void *)(v47 + v44) = v52;
  uint64_t v53 = (uint64_t *)(v47 + v45);
  uint64_t v54 = v68;
  uint64_t *v53 = v69;
  v53[1] = v54;
  unint64_t v55 = v47 + v46;
  uint64_t v57 = v82;
  uint64_t v56 = v83;
  (*(void (**)(unint64_t, char *, uint64_t))(v82 + 32))(v55, v85, v83);
  *(void *)(v47 + v72) = v77;
  uint64_t v58 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_241BFEE18(0, &qword_26B032718, MEMORY[0x263EFDCF0]);
  sub_241BFF174(&qword_26B02EA20, &qword_26B032718, v58);
  id v59 = v48;
  id v60 = v49;
  id v61 = v52;
  id v62 = v76;
  sub_241CDA620();
  sub_241BFF4E4(&qword_26B02EAC0, (void (*)(uint64_t))sub_241BFEA40);
  uint64_t v63 = v78;
  uint64_t v64 = sub_241CDA6D0();
  (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v81, v87);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v62, v63);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v80, v56);
  uint64_t result = v84;
  *(void *)(v84 + OBJC_IVAR____TtC9Summaries29SummaryAlertFeedItemGenerator_publisher) = v64;
  return result;
}

void sub_241BFEA40()
{
  if (!qword_26B0328A0)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_241BFEE18(255, &qword_26B032718, MEMORY[0x263EFDCF0]);
    sub_241BFF174(&qword_26B02EA20, &qword_26B032718, v0);
    unint64_t v1 = sub_241CDA630();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B0328A0);
    }
  }
}

uint64_t sub_241BFEAF4()
{
  uint64_t v12 = sub_241CD7740();
  uint64_t v1 = *(void *)(v12 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = sub_241CD7690();
  uint64_t v7 = *(void *)(v14 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (v8 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v8;
  uint64_t v13 = v2 | v8 | 7;
  unint64_t v10 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v12);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v9, v14);

  return MEMORY[0x270FA0238](v0, v10, v13);
}

uint64_t sub_241BFECC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_241CD7740() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_241CD7690() - 8);
  return sub_241BFC5F8(v1 + v4, *(void **)(v1 + v5), *(void **)(v1 + v6), *(void **)(v1 + v7), *(void *)(v1 + v7 + 8), *(void **)(v1 + v8), *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), a1, (char *)(v1+ ((*(unsigned __int8 *)(v9 + 80) + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))));
}

void sub_241BFEE18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_241BFF434(255, (unint64_t *)&qword_26B034C28, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241BFEEAC()
{
  if (!qword_268D43478)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_241BFEE18(255, &qword_26B032718, MEMORY[0x263EFDCF0]);
    sub_241BD0064();
    sub_241BFF174(&qword_26B02EA20, &qword_26B032718, v0);
    sub_241BFF4E4(&qword_26B02E9F0, (void (*)(uint64_t))sub_241BD0064);
    unint64_t v1 = sub_241CDA490();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D43478);
    }
  }
}

void sub_241BFEFAC()
{
  if (!qword_26B032800)
  {
    sub_241BFF434(255, (unint64_t *)&qword_26B034C28, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241CDA5C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032800);
    }
  }
}

void sub_241BFF028()
{
  if (!qword_26B032370)
  {
    sub_241BFF104();
    sub_241A29BBC(255, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    sub_241BFF4E4(&qword_26B032670, (void (*)(uint64_t))sub_241BFF104);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032370);
    }
  }
}

void sub_241BFF104()
{
  if (!qword_26B032678)
  {
    sub_241CD78F0();
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032678);
    }
  }
}

uint64_t sub_241BFF174(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BFEE18(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BFF1B8()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_241CD7690();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v11 + 16, v10);
}

uint64_t sub_241BFF320@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD7740() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_241CD7690() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(v2 + v10);
  uint64_t v12 = *(void *)(v2 + v10 + 8);

  return sub_241BFDCF8(a1, v2 + v6, v2 + v9, v11, v12, a2);
}

void sub_241BFF434(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241BFF480(uint64_t a1, uint64_t a2)
{
  sub_241A29620(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241BFF4E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SummaryChartModelConfiguration.primaryChartTimeScopes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*SummaryChartModelConfiguration.primaryChartTimeScopes.modify())()
{
  return nullsub_1;
}

uint64_t SummaryChartModelConfiguration.sharingChartTimeScopes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SummaryChartModelConfiguration.sharingChartTimeScopes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*SummaryChartModelConfiguration.sharingChartTimeScopes.modify())()
{
  return nullsub_1;
}

uint64_t destroy for SummaryChartModelConfiguration()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s9Summaries30SummaryChartModelConfigurationVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SummaryChartModelConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for SummaryChartModelConfiguration(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SummaryChartModelConfiguration()
{
  return &type metadata for SummaryChartModelConfiguration;
}

uint64_t sub_241BFF6F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  unint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_241A313AC(0, &qword_268D434F8);
    uint64_t v4 = sub_241CDB2C0();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241BFF79C@<X0>(uint64_t a1@<X8>)
{
  return sub_241C023E4(v1, a1, &qword_26B038F10, MEMORY[0x263F062D0]);
}

uint64_t sub_241BFF7D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_241CD77C0();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_241BFF848(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t *sub_241BFF854(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = *v3;
  uint64_t v30 = sub_241CD7650();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  unint64_t v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_241CD7690();
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  id v26 = (id)sub_241CD76E0();
  sub_241A310F8(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v10 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v34 = inited;
  sub_241CDB2E0();
  char v11 = *(unsigned char *)(a2 + *(int *)(v10 + 20));
  sub_241A29C20(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v12 = sub_241CD73B0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  if (v11)
  {
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v16 + v15, *MEMORY[0x263F454D0], v12);
  }
  else
  {
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_241CEB720;
    unint64_t v18 = v16 + v15;
    uint64_t v19 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
    v19(v18, *MEMORY[0x263F45520], v12);
    v19(v18 + v14, *MEMORY[0x263F45538], v12);
  }
  id v17 = v26;
  sub_241C5D74C(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v20 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v20);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, *MEMORY[0x263F45690], v30);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries59VisionPrescriptionCurrentValueSummarySharableModelGenerator_domain, v8, v31);
  uint64_t v21 = sub_241C015EC(&qword_26B034B18, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator);
  uint64_t v22 = v33;
  uint64_t v23 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v33, a2, v32, v21);
  sub_241C016B8(a2);
  uint64_t v24 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v22, v24);
  v3[2] = v23;
  return v3;
}

uint64_t sub_241BFFD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v43 = a3;
  uint64_t v5 = sub_241CD7650();
  uint64_t v48 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v47 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD7690();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C01BF8();
  uint64_t v52 = v9;
  uint64_t v50 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C01E2C();
  uint64_t v56 = *(void *)(v12 - 8);
  uint64_t v57 = v12;
  MEMORY[0x270FA5388](v12);
  unint64_t v55 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = self;
  unint64_t v15 = (void *)sub_241CD6790();
  id v16 = objc_msgSend(v14, sel_predicateForSamplesWithinDateInterval_options_, v15, 0);

  sub_241CD76B0();
  sub_241A311E0(v59, v59[3]);
  id v17 = (void *)sub_241CD75B0();
  sub_241A31190((uint64_t)v59);
  uint64_t v18 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v19 = (void *)sub_241CD7770();
  id v20 = v16;
  uint64_t v21 = sub_241CDB5D0();

  id v46 = v20;
  v59[0] = v21;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v17;
  *(void *)(v22 + 24) = v4;
  id v45 = v17;
  sub_241CDA4F0();
  sub_241A5B1CC();
  sub_241C01DA0();
  sub_241C015EC(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
  sub_241C015EC(&qword_26B036A30, (void (*)(uint64_t))sub_241C01DA0);
  unint64_t v44 = v11;
  sub_241CDA7B0();
  swift_release();
  swift_release();
  sub_241CD7730();
  uint64_t v23 = (void *)sub_241CD76E0();
  sub_241A310F8(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v58 = inited;
  sub_241CDB2E0();
  LOBYTE(v16) = *(unsigned char *)(v43 + *(int *)(v18 + 20));
  sub_241A29C20(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v25 = sub_241CD73B0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void *)(v26 + 72);
  unint64_t v28 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v29 = swift_allocObject();
  if (v16)
  {
    *(_OWORD *)(v29 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v26 + 104))(v29 + v28, *MEMORY[0x263F454D0], v25);
  }
  else
  {
    *(_OWORD *)(v29 + 16) = xmmword_241CEB720;
    unint64_t v31 = v29 + v28;
    uint64_t v32 = *(void (**)(unint64_t, void, uint64_t))(v26 + 104);
    v32(v31, *MEMORY[0x263F45520], v25);
    v32(v31 + v27, *MEMORY[0x263F45538], v25);
  }
  id v30 = v23;
  sub_241C5D74C(v29);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v33 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v33);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, *MEMORY[0x263F45690], v49);
  uint64_t v34 = v51;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241C015EC(&qword_26B036A18, (void (*)(uint64_t))sub_241C01BF8);
  uint64_t v35 = v52;
  uint64_t v36 = v44;
  uint64_t v37 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v34, v54);
  sub_241A31190((uint64_t)v59);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v35);
  v59[0] = v37;
  sub_241C01EFC();
  sub_241A310F8(0, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput, (uint64_t (*)(void, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_241C015EC(&qword_26B036A28, (void (*)(uint64_t))sub_241C01EFC);
  uint64_t v38 = v55;
  sub_241CDA710();
  swift_release();
  sub_241C015EC(&qword_26B036A08, (void (*)(uint64_t))sub_241C01E2C);
  uint64_t v39 = v57;
  uint64_t v40 = sub_241CDA6D0();

  (*(void (**)(char *, uint64_t))(v56 + 8))(v38, v39);
  return v40;
}

uint64_t sub_241C00590(void *a1, void *a2)
{
  uint64_t v36 = a2;
  sub_241C01FF8();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C02074();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C02128();
  uint64_t v14 = v13;
  uint64_t v37 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (self, (uint64_t v17 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v18 = v17;
    uint64_t v19 = (void *)swift_allocObject();
    uint64_t v34 = v16;
    id v20 = v36;
    void v19[2] = v36;
    v19[3] = v18;
    v19[4] = v38;
    uint64_t v21 = (uint64_t (*)(void, void, void, void))MEMORY[0x263EFDE20];
    sub_241C02218(0, &qword_268D434D0, MEMORY[0x263EFDE20]);
    uint64_t v35 = v14;
    sub_241A36CA8(&qword_268D434D8, &qword_268D434D0, v21);
    id v22 = a1;
    id v23 = v20;
    sub_241CDA620();
    sub_241C015EC(&qword_268D434E8, (void (*)(uint64_t))sub_241C02074);
    uint64_t v24 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v39 = v24;
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = v38;
    *(void *)(v25 + 16) = v18;
    *(void *)(v25 + 24) = v26;
    uint64_t v27 = (uint64_t (*)(void, void, void, void))MEMORY[0x263EFDCF0];
    sub_241C02218(0, (unint64_t *)&qword_26B032758, MEMORY[0x263EFDCF0]);
    sub_241A310F8(0, &qword_268D43498, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput, MEMORY[0x263F8D8F0]);
    sub_241A36CA8(&qword_26B02EA48, (unint64_t *)&qword_26B032758, v27);
    id v28 = v22;
    uint64_t v29 = v34;
    sub_241CDA710();
    swift_release();
    swift_release();
    sub_241C015EC(&qword_268D434F0, (void (*)(uint64_t))sub_241C02128);
    uint64_t v30 = v35;
    uint64_t v31 = sub_241CDA6D0();

    (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v30);
  }
  else
  {
    uint64_t v39 = 0;
    char v40 = 0;
    sub_241A310F8(0, &qword_268D43498, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput, MEMORY[0x263F8D8F0]);
    sub_241CDA5D0();
    sub_241C015EC(&qword_26B036A40, (void (*)(uint64_t))sub_241C01FF8);
    uint64_t v31 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v31;
}

id sub_241C00AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void **)a1;
  char v3 = *(unsigned char *)(a1 + 8) & 1;
  if (!*(void *)a1) {
    char v3 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return v2;
}

id sub_241C00AC4@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v5 = sub_241CDA1A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *a1;
  sub_241CDA0F0();
  uint64_t v10 = sub_241CDA190();
  os_log_type_t v11 = sub_241CDB670();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v13;
    *(_DWORD *)uint64_t v12 = 136446466;
    int v20 = v9;
    uint64_t v14 = sub_241CDC270();
    uint64_t v22 = sub_241A33FE4(v14, v15, &v23);
    uint64_t v19 = v5;
    int v9 = v20;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 1024;
    LODWORD(v22) = v9;
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v10, v11, "%{public}s: Vision prescription hasImage: %{BOOL}d", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v13, -1, -1);
    MEMORY[0x245637F20](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  id v16 = v21;
  *(void *)a3 = v21;
  *(unsigned char *)(a3 + 8) = v9;

  return v16;
}

uint64_t sub_241C00D00@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  void v8[4] = a3;
  sub_241C02218(0, &qword_268D434D0, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v9 = a1;
  id v10 = a2;
  uint64_t result = sub_241CDA610();
  *a4 = result;
  return result;
}

void sub_241C00DBC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  os_log_type_t v11 = (void *)swift_allocObject();
  v11[2] = sub_241C02314;
  v11[3] = v10;
  v11[4] = a4;
  v11[5] = a5;
  id v12 = objc_allocWithZone(MEMORY[0x263F0A0D8]);
  swift_retain();
  id v13 = a3;
  id v14 = a4;
  id v15 = objc_msgSend(v12, sel_initWithHealthStore_, v13);
  id v16 = (void *)swift_allocObject();
  v16[2] = sub_241C0235C;
  v16[3] = v11;
  v16[4] = v13;
  v19[4] = sub_241AFE0F8;
  v19[5] = v16;
  v19[0] = MEMORY[0x263EF8330];
  v19[1] = 1107296256;
  void v19[2] = sub_241BFF6F8;
  v19[3] = &unk_26F5C5928;
  uint64_t v17 = _Block_copy(v19);
  id v18 = v13;
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_getAttachmentsForObject_completion_, v14, v17);
  _Block_release(v17);

  swift_release();
}

void sub_241C00F6C(void *a1, char a2, void (*a3)(void), uint64_t a4, void *a5)
{
  uint64_t v10 = sub_241CD6D70();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CDA1A0();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v43 = v16;
    uint64_t v44 = v15;
    id v19 = a1;
    sub_241CDA0F0();
    sub_241C023D8(a1, 1);
    id v20 = a5;
    sub_241C023D8(a1, 1);
    id v21 = v20;
    uint64_t v22 = sub_241CDA190();
    os_log_type_t v23 = sub_241CDB650();
    int v42 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v40 = a4;
      uint64_t v25 = v24;
      uint64_t v39 = swift_slowAlloc();
      v46[0] = v39;
      *(_DWORD *)uint64_t v25 = 136446722;
      os_log_t v38 = v22;
      uint64_t v26 = sub_241CDC270();
      unint64_t v41 = a3;
      uint64_t v45 = sub_241A33FE4(v26, v27, v46);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      id v28 = objc_msgSend(v21, sel_UUID, v25 + 14);
      sub_241CD6D50();

      sub_241C015EC(qword_26B02E830, MEMORY[0x263F07508]);
      uint64_t v29 = sub_241CDC0D0();
      unint64_t v31 = v30;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      uint64_t v45 = sub_241A33FE4(v29, v31, v46);
      sub_241CDBBF0();

      a3 = v41;
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 22) = 2082;
      uint64_t v45 = (uint64_t)a1;
      id v32 = a1;
      sub_241A3DA64();
      uint64_t v33 = sub_241CDB120();
      uint64_t v45 = sub_241A33FE4(v33, v34, v46);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AFE170(a1, 1);
      sub_241AFE170(a1, 1);
      os_log_t v35 = v38;
      _os_log_impl(&dword_241A23000, v38, (os_log_type_t)v42, "%{public}s: Failed to fetch attachments for object %s: %{public}s", (uint8_t *)v25, 0x20u);
      uint64_t v36 = v39;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      MEMORY[0x245637F20](v25, -1, -1);
    }
    else
    {

      sub_241AFE170(a1, 1);
      sub_241AFE170(a1, 1);
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v44);
    a3(0);
    sub_241AFE170(a1, 1);
  }
  else
  {
    a3(a1 & 1);
  }
}

uint64_t sub_241C013C0()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries59VisionPrescriptionCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241C01468()
{
  return type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B034B28);
}

id sub_241C01494(uint64_t a1)
{
  return sub_241C01714(*(void **)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_241C014AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries59VisionPrescriptionCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

_UNKNOWN **sub_241C01524()
{
  return &off_26F5C5798;
}

uint64_t sub_241C01530(uint64_t a1)
{
  uint64_t result = sub_241C015EC(&qword_26B034B08, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241C01588()
{
  return &off_26F5C57E0;
}

uint64_t sub_241C01594(uint64_t a1)
{
  uint64_t result = sub_241C015EC(&qword_26B034B20, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241C015EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_241C01634()
{
  return &off_26F5C57F8;
}

uint64_t sub_241C01640(uint64_t a1)
{
  uint64_t result = sub_241C015EC(&qword_26B034B10, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B034A68);
}

uint64_t sub_241C016B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_241C01714(void *a1, char a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29C20(0, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v37 - v9;
  sub_241A29C20(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v4);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v37 - v15;
  sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], v4);
  MEMORY[0x270FA5388](v17 - 8);
  id v19 = (char *)&v37 - v18;
  if (!a1)
  {
    sub_241CD7A80();
    uint64_t v34 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v10, 0, 1, v34);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v35 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v14, 1, 1, v35);
    uint64_t v36 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    sub_241C023E4((uint64_t)v10, (uint64_t)v8, &qword_26B032050, MEMORY[0x263F45780]);
    id v33 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v14, (uint64_t)v8, 0, 0);
    sub_241A32B84((uint64_t)v10, &qword_26B032050, v36);
    return v33;
  }
  sub_241A313AC(0, &qword_268D421E0);
  id v20 = a1;
  id v21 = HKCodableSummaryVisionPrescriptionValue.init(visionPrescription:hasImage:)(v20, a2 & 1);
  sub_241A313AC(0, &qword_26B034E48);
  id v22 = v20;
  sub_241CDBB10();

  uint64_t v23 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v19, 0, 1, v23);
  id v24 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v19, 1, 0);
  uint64_t v25 = sub_241CD9970();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v16, 1, 1, v25);
  id v26 = v24;
  id v38 = v21;
  id result = objc_msgSend(v21, sel_data);
  if (result)
  {
    id v28 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v29 = sub_241CD6AE0();
    unint64_t v31 = v30;

    id v32 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
    sub_241C023E4((uint64_t)v16, (uint64_t)v14, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    uint64_t v40 = 0;
    memset(v39, 0, sizeof(v39));
    id v33 = sub_241A54648(v29, v31, 18, (uint64_t)v14, (uint64_t)v26, 0, (uint64_t)v39);

    sub_241A37374(v29, v31);
    sub_241A32B84((uint64_t)v16, (unint64_t *)&qword_26B0321F0, v32);

    return v33;
  }
  __break(1u);
  return result;
}

void sub_241C01BF8()
{
  if (!qword_268D43480)
  {
    sub_241C01CE4();
    sub_241A5B1CC();
    sub_241C015EC(&qword_268D434A0, (void (*)(uint64_t))sub_241C01CE4);
    sub_241C015EC(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43480);
    }
  }
}

void sub_241C01CE4()
{
  if (!qword_268D43488)
  {
    sub_241C01DA0();
    sub_241A3DA64();
    sub_241C015EC(&qword_26B036A30, (void (*)(uint64_t))sub_241C01DA0);
    unint64_t v0 = sub_241CDA3B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43488);
    }
  }
}

void sub_241C01DA0()
{
  if (!qword_268D43490)
  {
    sub_241A310F8(255, &qword_268D43498, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43490);
    }
  }
}

void sub_241C01E2C()
{
  if (!qword_268D434A8)
  {
    sub_241C01EFC();
    sub_241A310F8(255, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput, (uint64_t (*)(void, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241C015EC(&qword_26B036A28, (void (*)(uint64_t))sub_241C01EFC);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D434A8);
    }
  }
}

void sub_241C01EFC()
{
  if (!qword_268D434B0)
  {
    sub_241A310F8(255, &qword_268D43498, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput, MEMORY[0x263F8D8F0]);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D434B0);
    }
  }
}

uint64_t sub_241C01F90()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241C01FC8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_241C00590(*a1, *(void **)(v2 + 16));
  *a2 = result;
  return result;
}

void sub_241C01FF8()
{
  if (!qword_268D434C0)
  {
    sub_241A310F8(255, &qword_268D43498, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241CDA5C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D434C0);
    }
  }
}

void sub_241C02074()
{
  if (!qword_268D434C8)
  {
    unint64_t v0 = (uint64_t (*)(void, void, void, void))MEMORY[0x263EFDE20];
    sub_241C02218(255, &qword_268D434D0, MEMORY[0x263EFDE20]);
    sub_241A36CA8(&qword_268D434D8, &qword_268D434D0, v0);
    unint64_t v1 = sub_241CDA630();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D434C8);
    }
  }
}

void sub_241C02128()
{
  if (!qword_268D434E0)
  {
    unint64_t v0 = (uint64_t (*)(void, void, void, void))MEMORY[0x263EFDCF0];
    sub_241C02218(255, (unint64_t *)&qword_26B032758, MEMORY[0x263EFDCF0]);
    sub_241A310F8(255, &qword_268D43498, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput, MEMORY[0x263F8D8F0]);
    sub_241A36CA8(&qword_26B02EA48, (unint64_t *)&qword_26B032758, v0);
    unint64_t v1 = sub_241CDA3E0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D434E0);
    }
  }
}

void sub_241C02218(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241C0227C@<X0>(uint64_t *a1@<X8>)
{
  return sub_241C00D00(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

id sub_241C02288@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C00AC4(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_241C02290()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241C022D0(uint64_t a1, uint64_t a2)
{
  sub_241C00DBC(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_241C022DC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241C02314(__int16 a1)
{
  uint64_t v2 = *(uint64_t (**)(__int16 *))(v1 + 16);
  __int16 v4 = a1 & 0x1FF;
  return v2(&v4);
}

uint64_t sub_241C02354()
{
  return sub_241C02374(48);
}

void sub_241C0235C(void *a1, char a2)
{
  sub_241C00F6C(a1, a2 & 1, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_241C0236C()
{
  return sub_241C02374(40);
}

uint64_t sub_241C02374(uint64_t a1)
{
  swift_release();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_241C023C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241C023D0()
{
  return swift_release();
}

id sub_241C023D8(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

uint64_t sub_241C023E4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A29C20(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput()
{
  return &type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput;
}

uint64_t *sub_241C025C0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD6810();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241C027C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_bridgeObjectRelease();
}

char *sub_241C028D8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_241C02A90(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  a1[a3[7]] = a2[a3[7]];
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_241C02CC8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  return a1;
}

char *sub_241C02E74(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241C03094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C030A8);
}

uint64_t sub_241C030A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD77C0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_241C031F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C03204);
}

uint64_t sub_241C03204(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_241CD77C0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_241C03348()
{
  sub_241A29C20(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_241CD77C0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_241C03460()
{
  return 0xD000000000000011;
}

uint64_t sub_241C0347C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_241C041E4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_241C034A8(uint64_t a1)
{
  unint64_t v2 = sub_241C03C18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241C034E4(uint64_t a1)
{
  unint64_t v2 = sub_241C03C18();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241C03520()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV9Summaries25SleepSnidgetViewContainer9ViewModel_sleepDaySummaries;
  sub_241C0426C(0, &qword_26B031C98, (uint64_t (*)(uint64_t))sub_241BE68B8, MEMORY[0x263F08FB0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241C035F0()
{
  return type metadata accessor for SleepSnidgetViewContainer.ViewModel();
}

uint64_t type metadata accessor for SleepSnidgetViewContainer.ViewModel()
{
  uint64_t result = qword_26B032E80;
  if (!qword_26B032E80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241C03644()
{
  sub_241C0426C(319, &qword_26B031C98, (uint64_t (*)(uint64_t))sub_241BE68B8, MEMORY[0x263F08FB0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_241C03704(void *a1)
{
  sub_241C0426C(0, &qword_26B031C98, (uint64_t (*)(uint64_t))sub_241BE68B8, MEMORY[0x263F08FB0]);
  uint64_t v4 = v3;
  uint64_t v14 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v15 = (char *)&v14 - v5;
  sub_241C03C6C(0, &qword_268D43500, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v14 - v9;
  sub_241A311E0(a1, a1[3]);
  sub_241C03C18();
  uint64_t v11 = v16;
  sub_241CDC220();
  if (v11)
  {
    type metadata accessor for SleepSnidgetViewContainer.ViewModel();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v12 = v14;
    sub_241C03CD0(&qword_268D43508);
    sub_241CDC030();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v1 + OBJC_IVAR____TtCV9Summaries25SleepSnidgetViewContainer9ViewModel_sleepDaySummaries, v15, v4);
  }
  sub_241A31190((uint64_t)a1);
  return v1;
}

uint64_t sub_241C039C4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SleepSnidgetViewContainer.ViewModel();
  uint64_t result = sub_241CDA530();
  *a1 = result;
  return result;
}

uint64_t sub_241C03A04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for SleepSnidgetViewContainer.ViewModel();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_241C03704(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_241C03A60(void *a1)
{
  sub_241C03C6C(0, &qword_26B034EE0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_241A311E0(a1, a1[3]);
  sub_241C03C18();
  sub_241CDC230();
  sub_241C0426C(0, &qword_26B031C98, (uint64_t (*)(uint64_t))sub_241BE68B8, MEMORY[0x263F08FB0]);
  sub_241C03CD0(&qword_26B031C90);
  sub_241CDC0A0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_241C03C18()
{
  unint64_t result = qword_26B032E58;
  if (!qword_26B032E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032E58);
  }
  return result;
}

void sub_241C03C6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_241C03C18();
    unint64_t v7 = a3(a1, &type metadata for SleepSnidgetViewContainer.ViewModel.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241C03CD0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C0426C(255, &qword_26B031C98, (uint64_t (*)(uint64_t))sub_241BE68B8, MEMORY[0x263F08FB0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SleepSnidgetViewContainer.ViewModel.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x241C03DE0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepSnidgetViewContainer.ViewModel.CodingKeys()
{
  return &type metadata for SleepSnidgetViewContainer.ViewModel.CodingKeys;
}

void *initializeBufferWithCopyOfBuffer for SleepSnidgetViewContainer(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for SleepSnidgetViewContainer()
{
  return swift_release();
}

void *assignWithCopy for SleepSnidgetViewContainer(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for SleepSnidgetViewContainer(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SleepSnidgetViewContainer()
{
  return &type metadata for SleepSnidgetViewContainer;
}

uint64_t sub_241C03ED8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241C03EF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_241C0426C(0, &qword_268D43518, (uint64_t (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel, MEMORY[0x263F43CB8]);
  uint64_t v5 = v4;
  sub_241CD8410();
  type metadata accessor for SleepSnidgetViewContainer.ViewModel();
  sub_241C042D0(&qword_268D43520, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
  uint64_t v6 = sub_241CDA8E0();
  uint64_t v8 = v7;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  *a2 = v6;
  a2[1] = v8;
  return result;
}

uint64_t sub_241C04004()
{
  sub_241C0426C(0, &qword_26B031C98, (uint64_t (*)(uint64_t))sub_241BE68B8, MEMORY[0x263F08FB0]);
  uint64_t v0 = sub_241CDAEE0();

  return MEMORY[0x270F73858](v0);
}

unint64_t sub_241C04088()
{
  unint64_t result = qword_26B032F50;
  if (!qword_26B032F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032F50);
  }
  return result;
}

unint64_t sub_241C040E0()
{
  unint64_t result = qword_268D43510;
  if (!qword_268D43510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43510);
  }
  return result;
}

unint64_t sub_241C04138()
{
  unint64_t result = qword_26B032E68;
  if (!qword_26B032E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032E68);
  }
  return result;
}

unint64_t sub_241C04190()
{
  unint64_t result = qword_26B032E60;
  if (!qword_26B032E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032E60);
  }
  return result;
}

uint64_t sub_241C041E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000241CE38D0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_241CDC100();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void sub_241C0426C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241C042D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C04318()
{
  return sub_241C042D0(&qword_268D43528, MEMORY[0x263F761C0]);
}

void *StatisticsSnidgetStringBuilder.__allocating_init(healthStore:unitPreferenceController:)(void *a1, id a2)
{
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = a1;
  uint64_t v5 = self;
  id v6 = a1;
  id v7 = objc_msgSend(v5, sel_sharedInstanceForHealthStore_, v6);
  void v4[4] = v7;
  if (!a2)
  {
    id v8 = v7;
    a2 = objc_msgSend(v8, sel_createHKUnitPreferenceController);
  }
  v4[3] = a2;
  return v4;
}

uint64_t StatisticsSnidgetStringBuilder.makeStatisticsQueryPrimaryAttributedString(displayType:quantity:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_241CD69B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C04AB4();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v19 - v14;
  uint64_t v20 = a2;
  SnidgetStringBuilder.makeQuantityPrimaryAttributedString(displayType:quantity:)(a1, a2, (char *)&v19 - v14);
  id v16 = objc_msgSend(a1, sel_behavior);
  unsigned int v17 = objc_msgSend(v16, sel_chartsRelativeData);

  if (!v17) {
    return sub_241AD175C((uint64_t)v15, a3);
  }
  sub_241AD163C((uint64_t)v15, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    sub_241AD16D0((uint64_t)v13);
    return sub_241AD175C((uint64_t)v15, a3);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
  sub_241C0470C(a1, v20, (uint64_t)v9, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_241AD16D0((uint64_t)v15);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
}

uint64_t StatisticsSnidgetStringBuilder.hasIndeterminateBaseline(displayType:quantity:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(*(id *)(v2 + 24), sel_unitForChartingDisplayType_, a1);
  if (!v5) {
    id v5 = objc_msgSend(a2, sel__unit);
  }
  uint64_t v6 = SnidgetStringBuilder.makeSafeDouble(displayType:quantity:preferredUnit:)(a1, a2, v5);
  if (v7)
  {
  }
  else
  {
    double v8 = *(double *)&v6;

    if (v8 == 1.79769313e308 || v8 == -1.79769313e308) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_241C0470C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_241CD69B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  id v13 = objc_msgSend(*(id *)(v4 + 24), sel_unitForChartingDisplayType_, a1);
  if (v13)
  {
    uint64_t v14 = v13;
    double v15 = COERCE_DOUBLE(SnidgetStringBuilder.makeSafeDouble(displayType:quantity:preferredUnit:)(a1, a2, v13));
    if ((v16 & 1) == 0)
    {
      if (v15 == 1.79769313e308)
      {
        uint64_t KeyPath = swift_getKeyPath();
        *(&v22 - 2) = MEMORY[0x270FA5388](KeyPath);
        swift_getKeyPath();
        id v18 = objc_msgSend(self, sel_labelColor);
LABEL_7:
        id v23 = v18;
        sub_241C04CEC();
        sub_241CD6950();
        uint64_t v20 = swift_getKeyPath();
        *(&v22 - 2) = MEMORY[0x270FA5388](v20);
        swift_getKeyPath();
        id v23 = (id)sub_241CD8F00();
        sub_241C04D80();
        sub_241CD6950();
        goto LABEL_8;
      }
      if (v15 == -1.79769313e308)
      {
        uint64_t v19 = swift_getKeyPath();
        *(&v22 - 2) = MEMORY[0x270FA5388](v19);
        swift_getKeyPath();
        id v18 = objc_msgSend(self, sel_secondaryLabelColor);
        goto LABEL_7;
      }
    }
LABEL_8:
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a4, v12, v9);
}

void *StatisticsSnidgetStringBuilder.__allocating_init(healthStore:unitPreferenceController:viewControllerFactory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

void *StatisticsSnidgetStringBuilder.init(healthStore:unitPreferenceController:viewControllerFactory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

void *StatisticsSnidgetStringBuilder.init(healthStore:unitPreferenceController:)(void *a1, id a2)
{
  v2[2] = a1;
  id v5 = self;
  id v6 = a1;
  id v7 = objc_msgSend(v5, sel_sharedInstanceForHealthStore_, v6);
  v2[4] = v7;
  if (!a2)
  {
    id v8 = v7;
    a2 = objc_msgSend(v8, sel_createHKUnitPreferenceController);
  }
  v2[3] = a2;
  return v2;
}

void sub_241C04AB4()
{
  if (!qword_26B031FB8)
  {
    sub_241CD69B0();
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031FB8);
    }
  }
}

void *StatisticsSnidgetStringBuilder.__allocating_init(healthStore:)(void *a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = a1;
  char v3 = self;
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_sharedInstanceForHealthStore_, v4);
  v2[4] = v5;
  id v6 = v5;
  id v7 = objc_msgSend(v6, sel_createHKUnitPreferenceController);

  v2[3] = v7;
  return v2;
}

void *StatisticsSnidgetStringBuilder.init(healthStore:)(void *a1)
{
  v1[2] = a1;
  char v3 = self;
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_sharedInstanceForHealthStore_, v4);
  v1[4] = v5;
  id v6 = v5;
  id v7 = objc_msgSend(v6, sel_createHKUnitPreferenceController);

  v1[3] = v7;
  return v1;
}

id *StatisticsSnidgetStringBuilder.deinit()
{
  return v0;
}

uint64_t StatisticsSnidgetStringBuilder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StatisticsSnidgetStringBuilder()
{
  return self;
}

unint64_t sub_241C04CEC()
{
  unint64_t result = qword_26B031F88;
  if (!qword_26B031F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B031F88);
  }
  return result;
}

uint64_t sub_241C04D44()
{
  return 8;
}

uint64_t sub_241C04D50()
{
  return swift_release();
}

uint64_t sub_241C04D58(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_241C04D6C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_241C04D80()
{
  unint64_t result = qword_26B031F90;
  if (!qword_26B031F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B031F90);
  }
  return result;
}

uint64_t sub_241C04DD8()
{
  return 8;
}

uint64_t sub_241C04DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C08330(v2 + *(int *)(a1 + 20), a2, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
}

uint64_t sub_241C04E4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t *sub_241C04E84(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v34 = *v3;
  uint64_t v32 = sub_241CD7650();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  id v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_241CD7690();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a1;
  id v29 = (id)sub_241CD76E0();
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v11 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v37 = inited;
  sub_241CDB2E0();
  uint64_t v12 = *(int *)(v11 + 24);
  uint64_t v35 = a2;
  char v13 = *(unsigned char *)(a2 + v12);
  sub_241A29C84(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_241CD73B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  if (v13)
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v18 + v17, *MEMORY[0x263F454D0], v14);
  }
  else
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB720;
    unint64_t v20 = v18 + v17;
    id v21 = *(void (**)(unint64_t, void, uint64_t))(v15 + 104);
    v21(v20, *MEMORY[0x263F45520], v14);
    v21(v20 + v16, *MEMORY[0x263F45538], v14);
  }
  id v19 = v29;
  sub_241C5D74C(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v22 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v7, *MEMORY[0x263F45690], v32);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries56UnderwaterDepthCurrentValueSummarySharableModelGenerator_domain, v9, v33);
  uint64_t v23 = sub_241C079A4(&qword_26B034998, (void (*)(uint64_t))type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  uint64_t v26 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v36, v35, v34, v23);
  sub_241C082D0(v25, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
  uint64_t v27 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v24, v27);
  v3[2] = v26;
  return v3;
}

uint64_t sub_241C05358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v111 = a2;
  uint64_t v116 = a1;
  uint64_t v103 = sub_241CD7650();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v101 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_241CD7690();
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  unint64_t v104 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_241CD6810();
  uint64_t v108 = *(void *)(v117 - 8);
  uint64_t v94 = *(void *)(v108 + 64);
  MEMORY[0x270FA5388](v117);
  uint64_t v93 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v92 = *(void *)(v7 - 8);
  uint64_t v91 = *(void *)(v92 + 64);
  uint64_t v8 = v7 - 8;
  uint64_t v88 = v7 - 8;
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v90 = (uint64_t)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C083A0();
  uint64_t v96 = v10;
  uint64_t v97 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v89 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C08440();
  uint64_t v100 = v12;
  uint64_t v99 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v87 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29C84(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  unint64_t v17 = (char *)&v80 - v16;
  uint64_t v110 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241A29C84(0, &qword_26B0385B8, MEMORY[0x263F07490], v14);
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v20 = (char *)&v80 - v19;
  uint64_t v113 = sub_241CDB5C0();
  uint64_t v115 = *(void *)(v113 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v113);
  uint64_t v86 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  int v85 = (char *)&v80 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v114 = (char *)&v80 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v118 = (char *)&v80 - v27;
  id v28 = self;
  id v29 = (void *)*MEMORY[0x263F09AD0];
  sub_241A31064(0, &qword_26B034FE8);
  uint64_t v30 = swift_allocObject();
  long long v80 = xmmword_241CEB730;
  *(_OWORD *)(v30 + 16) = xmmword_241CEB730;
  *(void *)(v30 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v30 + 32) = 1;
  id v31 = v29;
  uint64_t v32 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  id v95 = objc_msgSend(v28, sel_predicateForObjectsWithMetadataKey_allowedValues_, v31, v32);

  sub_241CD76B0();
  sub_241A311E0(&v120, v121);
  uint64_t v33 = (void *)sub_241CD75B0();
  uint64_t v34 = *(int *)(v8 + 36);
  uint64_t v84 = a3;
  uint64_t v112 = a3 + v34;
  uint64_t v35 = (void *)sub_241CD7770();
  uint64_t v36 = sub_241CD6D00();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  uint64_t v83 = v37 + 56;
  uint64_t v38 = (uint64_t)v20;
  v82(v20, 1, 1, v36);
  uint64_t v39 = v108;
  uint64_t v107 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 16);
  uint64_t v40 = v117;
  v107(v17, v116, v117);
  uint64_t v81 = *(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56);
  v81(v17, 0, 1, v40);
  sub_241CDB5F0();

  sub_241C0851C((uint64_t)v17, &qword_26B038F10, v109);
  uint64_t v41 = v38;
  sub_241C0851C(v38, &qword_26B0385B8, v110);
  sub_241A31190((uint64_t)&v120);
  sub_241CD76B0();
  sub_241A311E0(&v120, v121);
  int v42 = (void *)sub_241CD75B0();
  uint64_t v43 = (void *)sub_241CD7770();
  v82((char *)v38, 1, 1, v36);
  uint64_t v44 = v113;
  uint64_t v45 = v117;
  v107(v17, v116, v117);
  v81(v17, 0, 1, v45);
  id v46 = v95;
  uint64_t v47 = v114;
  uint64_t v48 = v84;
  sub_241CDB5F0();

  id v95 = v46;
  sub_241C0851C((uint64_t)v17, &qword_26B038F10, v109);
  sub_241C0851C(v41, &qword_26B0385B8, v110);
  sub_241A31190((uint64_t)&v120);
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v115 + 16);
  v49(v85, v118, v44);
  v49(v86, v47, v44);
  sub_241C079A4(&qword_26B034D68, MEMORY[0x263F44B38]);
  uint64_t v50 = v89;
  sub_241CDA400();
  uint64_t v51 = v90;
  sub_241C0858C(v48, v90);
  uint64_t v52 = v93;
  uint64_t v53 = v117;
  v107(v93, v116, v117);
  unint64_t v54 = (*(unsigned __int8 *)(v92 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
  uint64_t v55 = v108;
  unint64_t v56 = (v91 + *(unsigned __int8 *)(v108 + 80) + v54) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
  unint64_t v57 = (v94 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v58 = swift_allocObject();
  sub_241C08820(v51, v58 + v54, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
  (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v58 + v56, v52, v53);
  *(void *)(v58 + v57) = v98;
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = sub_241C08888;
  *(void *)(v59 + 24) = v58;
  sub_241A29C84(0, &qword_26B032CA8, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_241C079A4(&qword_26B0324D0, (void (*)(uint64_t))sub_241C083A0);
  id v60 = v87;
  uint64_t v61 = v96;
  sub_241CDA710();
  swift_release();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v50, v61);
  sub_241CD7730();
  id v62 = (void *)sub_241CD76E0();
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v119 = inited;
  sub_241CDB2E0();
  LOBYTE(v52) = *(unsigned char *)(v48 + *(int *)(v88 + 32));
  sub_241A29C84(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v64 = sub_241CD73B0();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = *(void *)(v65 + 72);
  unint64_t v67 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  uint64_t v68 = swift_allocObject();
  if (v52)
  {
    *(_OWORD *)(v68 + 16) = v80;
    (*(void (**)(unint64_t, void, uint64_t))(v65 + 104))(v68 + v67, *MEMORY[0x263F454D0], v64);
  }
  else
  {
    *(_OWORD *)(v68 + 16) = xmmword_241CEB720;
    unint64_t v70 = v68 + v67;
    id v71 = *(void (**)(unint64_t, void, uint64_t))(v65 + 104);
    v71(v70, *MEMORY[0x263F45520], v64);
    v71(v70 + v66, *MEMORY[0x263F45538], v64);
  }
  id v69 = v62;
  sub_241C5D74C(v68);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v72 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v72);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v102 + 104))(v101, *MEMORY[0x263F45690], v103);
  uint64_t v73 = v104;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241C079A4(&qword_26B032460, (void (*)(uint64_t))sub_241C08440);
  uint64_t v74 = v100;
  uint64_t v75 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v73, v106);
  sub_241A31190((uint64_t)&v120);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v60, v74);
  uint64_t v120 = v75;
  sub_241C08A28();
  sub_241C079A4(&qword_26B0326B0, (void (*)(uint64_t))sub_241C08A28);
  uint64_t v76 = sub_241CDA6D0();
  swift_release();

  uint64_t v77 = *(void (**)(char *, uint64_t))(v115 + 8);
  uint64_t v78 = v113;
  v77(v114, v113);
  v77(v118, v78);
  return v76;
}

unint64_t sub_241C06290@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char **a6@<X8>)
{
  v23[2] = a4;
  id v23[3] = a5;
  v23[1] = a3;
  uint64_t v9 = sub_241CDB5B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)sub_241CDB5A0();
  id v14 = objc_msgSend(v13, sel_statistics);

  sub_241A313AC(0, (unint64_t *)&qword_26B038E68);
  unint64_t v15 = sub_241CDB2C0();

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, a2, v9);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    unint64_t v17 = (void *)sub_241CDB5A0();
    id v18 = objc_msgSend(v17, sel_statistics);

    unint64_t v19 = sub_241CDB2C0();
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_241CDBF50();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (!v20)
    {
      uint64_t Output = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput(0);
      return (*(uint64_t (**)(char **, uint64_t, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(a6, 1, 1, Output);
    }
  }
  return sub_241C06530(a1, a2, a6);
}

unint64_t sub_241C06530@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char **a3@<X8>)
{
  uint64_t v129 = a2;
  uint64_t v136 = a3;
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v131 = *(void *)(v4 - 8);
  uint64_t v132 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v123 = (char *)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v127 = (char *)&v120 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v125 = (char *)&v120 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v128 = (char *)&v120 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v126 = (char *)&v120 - v13;
  uint64_t v14 = sub_241CDB5B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v130 = (char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v120 - v18;
  uint64_t v20 = sub_241CD6D00();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v134 = v20;
  uint64_t v135 = v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29C84(0, &qword_26B0321B0, MEMORY[0x263F46B90], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v120 - v25;
  uint64_t v27 = sub_241CD9840();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v138 = (char *)&v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_241CD9CC0();
  if (*(void *)(v30 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v26, v30 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80)), v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v27);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, 1, 1, v27);
  }
  swift_bridgeObjectRelease();
  unint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27);
  if (result == 1) {
    goto LABEL_61;
  }
  uint64_t v32 = v27;
  uint64_t v137 = v28;
  uint64_t v33 = *(void (**)(char *, char *))(v28 + 32);
  uint64_t v34 = v138;
  uint64_t v133 = v32;
  v33(v138, v26);
  sub_241CD67E0();
  uint64_t v35 = (void *)sub_241CDB5A0();
  id v139 = v23;
  uint64_t v36 = (void *)sub_241CD6C60();
  id v37 = objc_msgSend(v35, sel_statisticsForDate_, v36);

  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v38(v19, a1, v14);
  if (!v37)
  {
    uint64_t v39 = (void *)sub_241CDB5A0();
    id v40 = objc_msgSend(v39, sel_statistics);

    sub_241A313AC(0, (unint64_t *)&qword_26B038E68);
    unint64_t v41 = sub_241CDB2C0();

    if (v41 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_241CDBF50();
      swift_bridgeObjectRelease();
      if (v42)
      {
LABEL_8:
        unint64_t v43 = v42 - 1;
        if (__OFSUB__(v42, 1))
        {
          __break(1u);
        }
        else if ((v41 & 0xC000000000000001) == 0)
        {
          if ((v43 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v43 < *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v44 = *(id *)(v41 + 8 * v43 + 32);
LABEL_13:
            id v37 = v44;
            swift_bridgeObjectRelease();
            goto LABEL_14;
          }
          __break(1u);
          goto LABEL_49;
        }
        id v44 = (id)MEMORY[0x245637160](v43, v41);
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v42) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    goto LABEL_44;
  }
LABEL_14:
  uint64_t v45 = *(void (**)(char *, uint64_t))(v15 + 8);
  v45(v19, v14);
  id v46 = (char *)sub_241CDB4C0();
  if (!v46)
  {

LABEL_44:
    (*(void (**)(char *, uint64_t))(v135 + 8))(v139, v134);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v34, v133);
    uint64_t Output = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput(0);
    return (*(uint64_t (**)(char **, uint64_t, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(v136, 1, 1, Output);
  }
  unint64_t v19 = v46;
  uint64_t v122 = v45;
  id v121 = v37;
  uint64_t v124 = v46;
  uint64_t v47 = v14;
  uint64_t v48 = v34;
  uint64_t v49 = v129;
  uint64_t v50 = (void *)sub_241CDB5A0();
  uint64_t v51 = (void *)sub_241CD6C60();
  uint64_t v52 = (char *)objc_msgSend(v50, sel_statisticsForDate_, v51);

  uint64_t v53 = v130;
  unint64_t v54 = v49;
  uint64_t v34 = v48;
  uint64_t v14 = v47;
  v38(v130, (uint64_t)v54, v47);
  if (v52) {
    goto LABEL_24;
  }
  uint64_t v55 = (void *)sub_241CDB5A0();
  id v56 = objc_msgSend(v55, sel_statistics);

  sub_241A313AC(0, (unint64_t *)&qword_26B038E68);
  unint64_t v41 = sub_241CDB2C0();

  if (!(v41 >> 62))
  {
    uint64_t v57 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v58 = v137;
    if (v57) {
      goto LABEL_18;
    }
LABEL_50:
    swift_bridgeObjectRelease();
    v122(v130, v14);
    uint64_t v113 = v123;
    sub_241CDA0F0();
    uint64_t v114 = sub_241CDA190();
    os_log_type_t v115 = sub_241CDB670();
    if (os_log_type_enabled(v114, v115))
    {
      uint64_t v116 = (uint8_t *)swift_slowAlloc();
      uint64_t v117 = swift_slowAlloc();
      v141[0] = v117;
      *(_DWORD *)uint64_t v116 = 136446210;
      uint64_t v118 = sub_241CDC270();
      uint64_t v140 = (char *)sub_241A33FE4(v118, v119, v141);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v114, v115, "%{public}s: UnderwaterDepth: clampedMaxDepthStatistics is nil", v116, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v117, -1, -1);
      MEMORY[0x245637F20](v116, -1, -1);
    }

    uint64_t v82 = v124;
    (*(void (**)(char *, uint64_t))(v131 + 8))(v113, v132);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v133);
    goto LABEL_53;
  }
LABEL_49:
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_241CDBF50();
  swift_bridgeObjectRelease();
  uint64_t v58 = v137;
  if (!v57) {
    goto LABEL_50;
  }
LABEL_18:
  unint64_t result = v57 - 1;
  if (__OFSUB__(v57, 1))
  {
    __break(1u);
    goto LABEL_58;
  }
  if ((v41 & 0xC000000000000001) != 0)
  {
LABEL_58:
    uint64_t v59 = (char *)MEMORY[0x245637160](result, v41);
    goto LABEL_23;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_60;
  }
  if (result >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    return result;
  }
  uint64_t v59 = (char *)*(id *)(v41 + 8 * result + 32);
LABEL_23:
  uint64_t v52 = v59;
  swift_bridgeObjectRelease();
  uint64_t v53 = v130;
LABEL_24:
  v122(v53, v14);
  uint64_t v60 = sub_241CDB4C0();
  if (!v60)
  {
    uint64_t v73 = v126;
    sub_241CDA0F0();
    uint64_t v74 = sub_241CDA190();
    os_log_type_t v75 = sub_241CDB670();
    BOOL v76 = os_log_type_enabled(v74, v75);
    uint64_t v77 = v137;
    if (v76)
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      v141[0] = v79;
      *(_DWORD *)uint64_t v78 = 136446210;
      uint64_t v80 = sub_241CDC270();
      uint64_t v140 = (char *)sub_241A33FE4(v80, v81, v141);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v74, v75, "%{public}s: UnderwaterDepth has no clamped samples", v78, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v79, -1, -1);
      MEMORY[0x245637F20](v78, -1, -1);

      uint64_t v82 = v124;
      (*(void (**)(char *, uint64_t))(v131 + 8))(v126, v132);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v34, v133);
    }
    else
    {

      uint64_t v82 = v124;
      (*(void (**)(char *, uint64_t))(v131 + 8))(v73, v132);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v34, v133);
    }
LABEL_53:
    uint64_t v111 = v139;
    uint64_t v109 = v136;
    *uint64_t v136 = v82;
    goto LABEL_54;
  }
  uint64_t v61 = (char *)v60;
  uint64_t v129 = v19;
  uint64_t v130 = v52;
  id v62 = v128;
  sub_241CDA0F0();
  uint64_t v63 = v61;
  uint64_t v64 = sub_241CDA190();
  os_log_type_t v65 = sub_241CDB670();
  if (os_log_type_enabled(v64, v65))
  {
    uint64_t v66 = swift_slowAlloc();
    unint64_t v67 = (void *)swift_slowAlloc();
    uint64_t v126 = (char *)swift_slowAlloc();
    v141[0] = (uint64_t)v126;
    *(_DWORD *)uint64_t v66 = 136446466;
    uint64_t v68 = sub_241CDC270();
    uint64_t v140 = (char *)sub_241A33FE4(v68, v69, v141);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 12) = 2112;
    uint64_t v140 = v63;
    unint64_t v70 = v63;
    sub_241CDBBF0();
    *unint64_t v67 = v61;

    _os_log_impl(&dword_241A23000, v64, v65, "%{public}s: UnderwaterDepth has a clamped sample: %@", (uint8_t *)v66, 0x16u);
    sub_241A96044();
    swift_arrayDestroy();
    MEMORY[0x245637F20](v67, -1, -1);
    id v71 = v126;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v71, -1, -1);
    MEMORY[0x245637F20](v66, -1, -1);

    unint64_t v72 = *(void (**)(char *, uint64_t))(v131 + 8);
    v72(v128, v132);
  }
  else
  {

    unint64_t v72 = *(void (**)(char *, uint64_t))(v131 + 8);
    v72(v62, v132);
  }
  uint64_t v83 = v127;
  uint64_t v84 = v124;
  int v85 = v63;
  if ((unint64_t)objc_msgSend(v85, sel_compare_, v84) <= 1)
  {
    uint64_t v128 = v61;

    uint64_t v86 = v125;
    sub_241CDA0F0();
    uint64_t v87 = v85;
    uint64_t v88 = sub_241CDA190();
    os_log_type_t v89 = sub_241CDB670();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = swift_slowAlloc();
      uint64_t v91 = (void *)swift_slowAlloc();
      uint64_t v92 = swift_slowAlloc();
      v141[0] = v92;
      *(_DWORD *)uint64_t v90 = 136446466;
      uint64_t v123 = (char *)v72;
      uint64_t v93 = sub_241CDC270();
      uint64_t v140 = (char *)sub_241A33FE4(v93, v94, v141);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v90 + 12) = 2112;
      uint64_t v140 = v87;
      id v95 = v87;
      sub_241CDBBF0();
      *uint64_t v91 = v128;

      _os_log_impl(&dword_241A23000, v88, v89, "%{public}s: UnderwaterDepth sample is clamped: %@", (uint8_t *)v90, 0x16u);
      sub_241A96044();
      swift_arrayDestroy();
      MEMORY[0x245637F20](v91, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v92, -1, -1);
      MEMORY[0x245637F20](v90, -1, -1);

      ((void (*)(char *, uint64_t))v123)(v125, v132);
    }
    else
    {

      v72(v86, v132);
    }
    (*(void (**)(char *, uint64_t))(v137 + 8))(v138, v133);
    uint64_t v109 = v136;
    *uint64_t v136 = v87;
    *((unsigned char *)v109 + 8) = 1;
    uint64_t v110 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput(0);
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))((char *)v109 + *(int *)(v110 + 24), v139, v134);
    return (*(uint64_t (**)(char **, void, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v109, 0, 1, v110);
  }
  sub_241CDA0F0();
  uint64_t v96 = v84;
  uint64_t v97 = v85;
  uint64_t v98 = sub_241CDA190();
  os_log_type_t v99 = sub_241CDB670();
  if (os_log_type_enabled(v98, v99))
  {
    uint64_t v100 = swift_slowAlloc();
    uint64_t v126 = v96;
    uint64_t v101 = v100;
    uint64_t v102 = (void *)swift_slowAlloc();
    uint64_t v125 = (char *)swift_slowAlloc();
    v141[0] = (uint64_t)v125;
    *(_DWORD *)uint64_t v101 = 136446722;
    uint64_t v103 = sub_241CDC270();
    uint64_t v128 = v61;
    uint64_t v140 = (char *)sub_241A33FE4(v103, v104, v141);
    uint64_t v123 = (char *)v72;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v101 + 12) = 2112;
    uint64_t v140 = v126;
    uint64_t v105 = v126;
    sub_241CDBBF0();
    *uint64_t v102 = v129;

    *(_WORD *)(v101 + 22) = 2112;
    uint64_t v140 = v97;
    uint64_t v106 = v97;
    sub_241CDBBF0();
    v102[1] = v128;

    _os_log_impl(&dword_241A23000, v98, v99, "%{public}s: UnderwaterDepth maxDepth: %@ is larger the clampedMaxDepth: %@", (uint8_t *)v101, 0x20u);
    sub_241A96044();
    swift_arrayDestroy();
    MEMORY[0x245637F20](v102, -1, -1);
    uint64_t v107 = v125;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v107, -1, -1);
    uint64_t v108 = v101;
    uint64_t v96 = v126;
    MEMORY[0x245637F20](v108, -1, -1);

    ((void (*)(char *, uint64_t))v123)(v127, v132);
  }
  else
  {

    v72(v83, v132);
  }
  (*(void (**)(char *, uint64_t))(v137 + 8))(v138, v133);
  uint64_t v111 = v139;
  uint64_t v109 = v136;
  *uint64_t v136 = v96;
LABEL_54:
  *((unsigned char *)v109 + 8) = 0;
  uint64_t v110 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput(0);
  (*(void (**)(char *, char *, uint64_t))(v135 + 32))((char *)v109 + *(int *)(v110 + 24), v111, v134);
  return (*(uint64_t (**)(char **, void, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v109, 0, 1, v110);
}

uint64_t sub_241C0778C()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries56UnderwaterDepthCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241C07834()
{
  return type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B0349A8);
}

uint64_t sub_241C07864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries56UnderwaterDepthCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

_UNKNOWN **sub_241C078DC()
{
  return &off_26F5C5B20;
}

uint64_t sub_241C078E8(uint64_t a1)
{
  uint64_t result = sub_241C079A4(&qword_26B034988, (void (*)(uint64_t))type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241C07940()
{
  return &off_26F5C5B68;
}

uint64_t sub_241C0794C(uint64_t a1)
{
  uint64_t result = sub_241C079A4(&qword_26B0349A0, (void (*)(uint64_t))type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241C079A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_241C079EC()
{
  return &off_26F5C5B80;
}

uint64_t sub_241C079F8(uint64_t a1)
{
  uint64_t result = sub_241C079A4(&qword_26B034990, (void (*)(uint64_t))type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B0348E8);
}

id sub_241C07A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v56 = a3;
  uint64_t v53 = a2;
  uint64_t v58 = a1;
  uint64_t v3 = sub_241CD6D00();
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v55 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29C84(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v57 = (uint64_t)&v51 - v7;
  uint64_t Output = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput(0);
  uint64_t v9 = *(void *)(Output - 8);
  MEMORY[0x270FA5388](Output);
  uint64_t v11 = (id *)((char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241A29C84(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v5);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  unint64_t v54 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v51 - v15;
  sub_241A29C84(0, &qword_26B032050, MEMORY[0x263F45780], v5);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v51 - v21;
  sub_241A29C84(0, &qword_26B032CA8, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v51 - v24;
  sub_241C08330(v58, (uint64_t)&v51 - v24, &qword_26B032CA8, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v25, 1, Output) == 1)
  {
    sub_241CD7A80();
    uint64_t v26 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v22, 0, 1, v26);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v27 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v16, 1, 1, v27);
    uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    sub_241C08330((uint64_t)v22, (uint64_t)v20, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    id v29 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v16, (uint64_t)v20, 0, 0);
    sub_241C0851C((uint64_t)v22, &qword_26B032050, v28);
    return v29;
  }
  uint64_t v30 = (uint64_t)v16;
  sub_241C08820((uint64_t)v25, (uint64_t)v11, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput);
  id v31 = objc_msgSend(*v11, sel_codableRepresentation);
  uint64_t v32 = *((unsigned __int8 *)v11 + 8);
  uint64_t v33 = v57;
  sub_241C08330(v56, v57, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v34 = sub_241CD6810();
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
  {
    id result = (id)sub_241C0851C(v33, &qword_26B038F10, MEMORY[0x263F062D0]);
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v36 = v55;
  sub_241CD67B0();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46668]), sel_init);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v38 = result;
  objc_msgSend(v38, sel_setValue_, v31);
  objc_msgSend(v38, sel_setValueClamped_, v32);
  uint64_t v39 = (void *)sub_241CD6C60();
  double v40 = MEMORY[0x245637600]();

  objc_msgSend(v38, sel_setDateData_, v40);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v52);
  uint64_t v41 = sub_241CD9D00();
  uint64_t v42 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v54, v53, v41);
  uint64_t v43 = *MEMORY[0x263F46C70];
  uint64_t v44 = sub_241CD9970();
  uint64_t v45 = *(void *)(v44 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 104))(v42, v43, v44);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  id result = objc_msgSend(v38, sel_data);
  if (result)
  {
    id v46 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v47 = sub_241CD6AE0();
    unint64_t v49 = v48;

    uint64_t v50 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
    sub_241C08330(v42, v30, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
    uint64_t v60 = 0;
    memset(v59, 0, sizeof(v59));
    id v29 = sub_241A54648(v47, v49, 21, v30, 0, 0, (uint64_t)v59);
    sub_241A37374(v47, v49);

    sub_241C0851C(v42, (unint64_t *)&qword_26B0321F0, v50);
    sub_241C082D0((uint64_t)v11, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput);
    return v29;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B034850);
}

uint64_t sub_241C082D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241C08330(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_241A29C84(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_241C083A0()
{
  if (!qword_26B0324D8)
  {
    sub_241CDB5C0();
    sub_241C079A4(&qword_26B034D68, MEMORY[0x263F44B38]);
    unint64_t v0 = sub_241CDA3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0324D8);
    }
  }
}

void sub_241C08440()
{
  if (!qword_26B032468)
  {
    sub_241C083A0();
    sub_241A29C84(255, &qword_26B032CA8, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241C079A4(&qword_26B0324D0, (void (*)(uint64_t))sub_241C083A0);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032468);
    }
  }
}

uint64_t sub_241C0851C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A29C84(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241C0858C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241C085F0()
{
  uint64_t v1 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v15 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v16 = v0;
  uint64_t v8 = v0 + v3;
  uint64_t v9 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  uint64_t v10 = v0 + v3 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
  }
  uint64_t v11 = (v3 + v15 + v6) & ~v6;
  uint64_t v12 = v8 + *(int *)(v1 + 28);
  uint64_t v13 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v16 + v11, v4);

  return MEMORY[0x270FA0238](v16, ((v7 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | v6 | 7);
}

uint64_t sub_241C08820(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_241C08888@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char **a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_241CD6810() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v3 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241C06290(a1, a2, v3 + v8, v3 + v11, v12, a3);
}

uint64_t sub_241C089A0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241C089D8(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  sub_241C08AC8();
  return v3(a1, a1 + *(int *)(v4 + 48));
}

void sub_241C08A28()
{
  if (!qword_26B0326B8)
  {
    sub_241A29C84(255, &qword_26B032CA8, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0326B8);
    }
  }
}

void sub_241C08AC8()
{
  if (!qword_26B034D60)
  {
    sub_241CDB5B0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B034D60);
    }
  }
}

char *sub_241C08B2C(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[8] = *((unsigned char *)a2 + 8);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_241CD6D00();
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    unint64_t v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_241C08C14(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_241CD6D00();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_241C08C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_241CD6D00();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_241C08D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_241CD6D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_241C08DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_241CD6D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_241C08E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD6D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_241C08ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C08EEC);
}

uint64_t sub_241C08EEC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_241CD6D00();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241C08F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C08FB0);
}

void *sub_241C08FB0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *id result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_241CD6D00();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_241C09058()
{
  uint64_t result = sub_241CD6D00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_241C090FC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD9D00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241CD6810();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_241A29C84(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241C09340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241C09484(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_241A29C84(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241C09678(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_241A29C84(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  void *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241C098EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_241A29C84(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  return a1;
}

uint64_t sub_241C09AD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_241A29C84(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241C09D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C09D44);
}

uint64_t sub_241C09D44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_241A29C84(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_241CD77C0();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[9] + 8);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_241C09ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C09EEC);
}

uint64_t sub_241C09EEC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_241CD9D00();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_241A29C84(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = sub_241CD77C0();
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[9] + 8) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[7];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_241C0A07C()
{
  sub_241CD9D00();
  if (v0 <= 0x3F)
  {
    sub_241A29C84(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F)
    {
      sub_241CD77C0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t HKCodableSummaryAFibBurdenValue.init(sample:lastAnalysisDate:calendarCache:)(void *a1, uint64_t a2, void *a3)
{
  id v85 = a3;
  sub_241A32DE4(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v81 = (char *)&v73 - v6;
  uint64_t v7 = sub_241CD6D00();
  uint64_t v82 = *(void *)(v7 - 8);
  uint64_t v83 = v7;
  MEMORY[0x270FA5388](v7);
  BOOL v76 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD6F50();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A32DE4(0, &qword_26B02E8F0, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v73 - v14;
  uint64_t v16 = sub_241CD6EE0();
  uint64_t v79 = *(void *)(v16 - 8);
  uint64_t v80 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  os_log_type_t v75 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v77 = (char *)&v73 - v19;
  id v20 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!v20) {
    goto LABEL_27;
  }
  uint64_t v21 = v20;
  id v84 = a1;
  if (a1)
  {
    id v22 = objc_allocWithZone(MEMORY[0x263F46440]);
    id v74 = v21;
    id v23 = a1;
    id v24 = objc_msgSend(v22, sel_init);
    uint64_t v25 = a2;
    if (!v24)
    {
LABEL_15:
      id v43 = objc_msgSend(v23, sel__timeZone);
      id v44 = v85;
      if (!v43)
      {
LABEL_28:
        uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v15, 1, 1, v9);
        goto LABEL_29;
      }
      uint64_t v45 = v43;
      sub_241CD6F30();

      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v12, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9);
      if (result == 1)
      {
LABEL_29:
        __break(1u);
        return result;
      }
      uint64_t v47 = (void *)sub_241CD6F10();
      unint64_t v48 = *(void (**)(char *, uint64_t))(v10 + 8);
      v10 += 8;
      v48(v15, v9);
      id v49 = objc_msgSend(v44, sel_calendarForTimeZone_, v47);

      uint64_t v50 = v77;
      sub_241CD6E50();

      uint64_t v51 = (void *)sub_241CD6E40();
      id v52 = objc_msgSend(v23, sel_hk_dayIndexRangeWithCalendar_, v51);
      uint64_t v54 = v53;

      uint64_t v9 = v54 - 1;
      if (!__OFSUB__(v54, 1))
      {
        if (v24)
        {
          sub_241A313AC(0, &qword_26B0368E0);
          id v55 = v24;
          uint64_t v56 = (void *)MEMORY[0x245636CB0](v52, v9);
          objc_msgSend(v55, sel_setDayIndexRange_, v56);
        }
        objc_msgSend(v74, sel_setBurdenValue_, v24);

        uint64_t v42 = v79;
        uint64_t v41 = v80;
        (*(void (**)(char *, uint64_t))(v79 + 8))(v50, v80);
        uint64_t v40 = (uint64_t)v81;
        goto LABEL_21;
      }
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v78 = a2;
    sub_241A313AC(0, &qword_26B038918);
    id v26 = v24;
    id v27 = objc_msgSend(v23, sel_quantity);
    uint64_t v28 = (void *)sub_241CDB870();
    objc_msgSend(v26, sel_setValue_, v28);

    id v29 = v26;
    id v30 = objc_msgSend(v23, sel_metadata);
    if (v30)
    {
      id v31 = v30;
      uint64_t v32 = sub_241CDAF90();

      uint64_t v33 = sub_241CDB0D0();
      if (*(void *)(v32 + 16) && (unint64_t v35 = sub_241C0B22C(v33, v34), (v36 & 1) != 0))
      {
        sub_241A340B8(*(void *)(v32 + 56) + 32 * v35, (uint64_t)&v87);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)&v88 + 1))
        {
          int v37 = swift_dynamicCast();
          uint64_t v25 = v78;
          if (v37) {
            uint64_t v38 = v86;
          }
          else {
            uint64_t v38 = 0;
          }
          goto LABEL_14;
        }
      }
      else
      {
        long long v87 = 0u;
        long long v88 = 0u;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      long long v87 = 0u;
      long long v88 = 0u;
    }
    sub_241A78794((uint64_t)&v87);
    uint64_t v38 = 0;
    uint64_t v25 = v78;
LABEL_14:
    objc_msgSend(v29, sel_setValueClamped_, v38);

    goto LABEL_15;
  }
  id v39 = v20;
  uint64_t v41 = v80;
  uint64_t v40 = (uint64_t)v81;
  uint64_t v42 = v79;
  uint64_t v25 = a2;
LABEL_21:
  sub_241BCAEDC(v25, v40);
  uint64_t v58 = v82;
  uint64_t v57 = v83;
  int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v40, 1, v83);
  id v60 = v84;
  if (v59 == 1)
  {

    sub_241A9A4DC(v25);
    sub_241A9A4DC(v40);
  }
  else
  {
    uint64_t v61 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v76, v40, v57);
    id v62 = (void *)sub_241CD6C60();
    id v63 = v85;
    id v64 = objc_msgSend(v85, sel_currentCalendar);
    uint64_t v78 = v25;
    os_log_type_t v65 = v21;
    id v66 = v64;
    unint64_t v67 = v75;
    sub_241CD6E50();

    uint64_t v68 = (void *)sub_241CD6E40();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v67, v41);
    uint64_t v69 = HKHRAFibBurdenPreviousWeekDayIndexRange();
    uint64_t v71 = v70;

    uint64_t v21 = v65;
    sub_241A313AC(0, &qword_26B0368E0);
    unint64_t v72 = (void *)MEMORY[0x245636CB0](v69, v71);
    objc_msgSend(v65, sel_setLastAnalysisDayIndexRange_, v72);

    sub_241A9A4DC(v78);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v61, v57);
  }
  return (uint64_t)v21;
}

void HKCodableSummaryAFibBurdenValue.snippetKind()()
{
  unint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_241CD9310();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C0B2A4();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v12 = objc_msgSend(v0, sel_hasBurdenValue);
  unsigned __int8 v13 = objc_msgSend(v1, sel_hasLastAnalysisDayIndexRange);
  if ((v12 & 1) == 0)
  {
    if ((v13 & 1) == 0)
    {
      sub_241CDA170();
      *(void *)(swift_allocObject() + 16) = ObjectType;
      sub_241CD9270();
      sub_241CD92A0();
      goto LABEL_27;
    }
    id v26 = objc_msgSend(v1, sel_lastAnalysisDayIndexRange);
    if (!v26) {
      goto LABEL_30;
    }
    id v27 = v26;
    sub_241CDB960();
    char v29 = v28;

    sub_241CDA170();
    if ((v29 & 1) == 0)
    {
LABEL_18:
      *(void *)(swift_allocObject() + 16) = ObjectType;
      sub_241CD9270();
LABEL_19:
      sub_241CD92A0();
LABEL_27:
      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }
LABEL_25:
    *(void *)(swift_allocObject() + 16) = ObjectType;
    sub_241CD9270();
    goto LABEL_26;
  }
  if ((v13 & 1) == 0)
  {
    id v30 = objc_msgSend(v1, sel_burdenValue);
    if (!v30)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    id v31 = v30;
    id v32 = objc_msgSend(v30, sel_dayIndexRange);

    if (!v32)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    sub_241CDB960();
    uint64_t v34 = v33;
    char v36 = v35;

    if (v36)
    {
      sub_241CDA170();
      *(void *)(swift_allocObject() + 16) = ObjectType;
      sub_241CD9270();
      goto LABEL_26;
    }
    sub_241CDA170();
    if (v34 >= 1) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  uint64_t v40 = ObjectType;
  id v14 = objc_msgSend(v1, sel_lastAnalysisDayIndexRange);
  if (!v14)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v15 = v14;
  sub_241CDB960();
  uint64_t v39 = v16;
  char v18 = v17;

  if (v18)
  {
    sub_241CDA170();
    *(void *)(swift_allocObject() + 16) = v40;
    sub_241CD9270();
LABEL_26:
    sub_241CD92C0();
    goto LABEL_27;
  }
  id v19 = objc_msgSend(v1, sel_burdenValue);
  if (!v19)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v20 = v19;
  uint64_t v38 = v4;
  id v21 = objc_msgSend(v19, sel_dayIndexRange);

  if (v21)
  {
    sub_241CDB960();
    uint64_t v23 = v22;
    char v25 = v24;

    if ((v25 & 1) != 0 || v23 < 1)
    {
      sub_241CDA170();
      *(void *)(swift_allocObject() + 16) = v40;
      sub_241CD9270();
      sub_241CD92C0();
      uint64_t v4 = v38;
      goto LABEL_27;
    }
    uint64_t v4 = v38;
    sub_241CDA170();
    *(void *)(swift_allocObject() + 16) = v40;
    sub_241CD9270();
    goto LABEL_19;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_241C0B10C()
{
  return 0;
}

unint64_t sub_241C0B1DC(uint64_t a1)
{
  uint64_t v2 = sub_241CDBB50();
  return sub_241C0BC94(a1, v2, (unint64_t *)&qword_26B038E58);
}

unint64_t sub_241C0B22C(uint64_t a1, uint64_t a2)
{
  sub_241CDC1D0();
  sub_241CDB170();
  uint64_t v4 = sub_241CDC200();

  return sub_241C0B878(a1, a2, v4);
}

void sub_241C0B2A4()
{
  if (!qword_26B037DA0)
  {
    sub_241CD9310();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F449E0];
    sub_241C0BE70(&qword_26B037DB8, MEMORY[0x263F449E0]);
    sub_241C0BE70(&qword_26B037DA8, v0);
    sub_241C0BE70(&qword_26B037DB0, v0);
    unint64_t v1 = sub_241CD92D0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B037DA0);
    }
  }
}

uint64_t sub_241C0B3BC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C0B3CC()
{
  return sub_241C0B10C();
}

uint64_t sub_241C0B404()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C0B414()
{
  return sub_241C0B10C();
}

uint64_t sub_241C0B44C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C0B45C()
{
  return sub_241C0B10C();
}

uint64_t sub_241C0B494()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C0B4A4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C0B4B4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C0B4C4()
{
  return sub_241C0B10C();
}

uint64_t sub_241C0B4FC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C0B50C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C0B51C()
{
  return sub_241C0B10C();
}

uint64_t sub_241C0B554()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C0B564()
{
  return sub_241C0B10C();
}

uint64_t sub_241C0B59C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C0B5AC()
{
  return sub_241C0B10C();
}

uint64_t sub_241C0B5E4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C0B5F4()
{
  return sub_241C0B10C();
}

uint64_t sub_241C0B62C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C0B63C()
{
  return sub_241C0B10C();
}

unint64_t sub_241C0B674(uint64_t a1)
{
  sub_241CD7020();
  sub_241C0BE70(&qword_26B0354C8, MEMORY[0x263F42CD0]);
  uint64_t v2 = sub_241CDAFC0();

  return sub_241C0B95C(a1, v2);
}

unint64_t sub_241C0B70C(uint64_t a1)
{
  sub_241CDC1D0();
  sub_241CD9FA0();
  sub_241CDB170();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_241CDC200();

  return sub_241C0BB1C(a1, v2);
}

unint64_t sub_241C0B794(uint64_t a1)
{
  uint64_t v2 = sub_241CDBB50();
  return sub_241C0BC94(a1, v2, (unint64_t *)&qword_26B030398);
}

unint64_t sub_241C0B7E4(uint64_t a1)
{
  uint64_t v2 = sub_241CDBD80();

  return sub_241C0BDA8(a1, v2);
}

unint64_t sub_241C0B828(uint64_t a1)
{
  uint64_t v2 = sub_241CDBB50();
  return sub_241C0BC94(a1, v2, (unint64_t *)&qword_26B038440);
}

unint64_t sub_241C0B878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_241CDC100() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unsigned __int8 v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_241CDC100() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_241C0B95C(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_241CD7020();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    unsigned __int8 v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_241C0BE70(&qword_26B0354D0, MEMORY[0x263F42CD0]);
      char v15 = sub_241CDB050();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_241C0BB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_241CD9FA0();
    uint64_t v8 = v7;
    if (v6 == sub_241CD9FA0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_241CDC100();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_241CD9FA0();
          uint64_t v15 = v14;
          if (v13 == sub_241CD9FA0() && v15 == v16) {
            break;
          }
          char v18 = sub_241CDC100();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_241C0BC94(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_241A313AC(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_241CDBB60();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_241CDBB60();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_241C0BDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_241ADE86C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x2456370D0](v9, a1);
      sub_241B5A384((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_241C0BE70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C0BEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void *a6, uint64_t a7, unint64_t a8)
{
  uint64_t v191 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))a4;
  uint64_t v188 = a1;
  uint64_t v189 = a2;
  uint64_t v181 = sub_241CD9B80();
  id v173 = *(void (***)(char *))(v181 - 8);
  MEMORY[0x270FA5388](v181 - 8);
  id v174 = (char *)&v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C1F8B4(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v176 = (uint64_t)&v160 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v175 = (uint64_t)&v160 - v17;
  sub_241C1E8D8(0);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v178 = (char *)&v160 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v177 = (char *)&v160 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v180 = (uint64_t)&v160 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v179 = (uint64_t)&v160 - v25;
  uint64_t v26 = sub_241CDA1A0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  id v187 = (char *)&v160 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  id v184 = (char *)&v160 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v160 - v33;
  unint64_t v35 = *(void *)(a3 + 16);
  uint64_t v190 = a7;
  unint64_t v185 = v36;
  if (v35 < 2)
  {
    if (!v35)
    {
      uint64_t v54 = sub_241CD9B40();
      uint64_t v55 = *(void *)(v54 - 8);
      uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
      uint64_t v190 = v55 + 56;
      uint64_t v191 = v56;
      v56(v188, 1, 1, v54);
      uint64_t v57 = v189;
      uint64_t v58 = v191;
      return v58(v57, 1, 1, v54);
    }
  }
  else
  {
    uint64_t v183 = v27;
    sub_241CDA180();
    swift_bridgeObjectRetain_n();
    id v37 = a6;
    swift_bridgeObjectRetain_n();
    id v38 = v37;
    uint64_t v39 = sub_241CDA190();
    os_log_type_t v40 = sub_241CDB650();
    int v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v182 = a6;
      uint64_t v43 = v42;
      *(void *)&long long v170 = swift_slowAlloc();
      uint64_t v193 = (char *)v170;
      *(_DWORD *)uint64_t v43 = 136315650;
      uint64_t v186 = v26;
      swift_bridgeObjectRetain();
      uint64_t v192 = sub_241A33FE4(v190, a8, (uint64_t *)&v193);
      uint64_t v172 = a3;
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 12) = 2080;
      id v168 = (id)(v43 + 14);
      id v44 = objc_msgSend(v38, sel_sensitiveLoggingIdentifier);
      uint64_t v45 = sub_241CDB0D0();
      LODWORD(v169) = v41;
      uint64_t v46 = v45;
      unint64_t v47 = a8;
      unint64_t v48 = a5;
      unint64_t v50 = v49;

      uint64_t v192 = sub_241A33FE4(v46, v50, (uint64_t *)&v193);
      uint64_t v51 = v186;
      sub_241CDBBF0();

      a5 = v48;
      a8 = v47;
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v192 = sub_241A33FE4((uint64_t)v191, a5, (uint64_t *)&v193);
      uint64_t v26 = v51;
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v39, (os_log_type_t)v169, "%s_%s: too many models returned for unique identifier %s", (uint8_t *)v43, 0x20u);
      uint64_t v52 = v170;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v52, -1, -1);
      uint64_t v53 = v43;
      a6 = v182;
      MEMORY[0x245637F20](v53, -1, -1);

      uint64_t v27 = v183;
      (*(void (**)(char *, uint64_t))(v183 + 8))(v34, v51);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v27 = v183;
      (*(void (**)(char *, uint64_t))(v183 + 8))(v34, v26);
    }
  }
  sub_241CD79A0();
  uint64_t v60 = sub_241CD7970();
  unint64_t v62 = v61;
  id v63 = objc_allocWithZone(MEMORY[0x263F465E8]);
  id v64 = (void *)sub_241CD6AD0();
  sub_241A37374(v60, v62);
  id v65 = objc_msgSend(v63, sel_initWithData_, v64);

  if (!v65)
  {
    uint64_t v69 = v184;
    sub_241CDA180();
    swift_bridgeObjectRetain_n();
    id v70 = a6;
    swift_bridgeObjectRetain_n();
    unint64_t v71 = a5;
    id v72 = v70;
    uint64_t v73 = sub_241CDA190();
    os_log_type_t v74 = sub_241CDB650();
    int v75 = v74;
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v76 = swift_slowAlloc();
      id v187 = (char *)swift_slowAlloc();
      uint64_t v193 = v187;
      *(_DWORD *)uint64_t v76 = 136315650;
      LODWORD(v185) = v75;
      swift_bridgeObjectRetain();
      uint64_t v192 = sub_241A33FE4(v190, a8, (uint64_t *)&v193);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v76 + 12) = 2080;
      id v77 = objc_msgSend(v72, sel_sensitiveLoggingIdentifier);
      uint64_t v186 = v26;
      id v78 = v77;
      uint64_t v79 = sub_241CDB0D0();
      uint64_t v80 = v27;
      unint64_t v82 = v81;

      uint64_t v192 = sub_241A33FE4(v79, v82, (uint64_t *)&v193);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v76 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v192 = sub_241A33FE4((uint64_t)v191, v71, (uint64_t *)&v193);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v73, (os_log_type_t)v185, "%s_%s: Unable to decode summary data from model for unique identifier: %s", (uint8_t *)v76, 0x20u);
      uint64_t v83 = v187;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v83, -1, -1);
      MEMORY[0x245637F20](v76, -1, -1);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v184, v186);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v69, v26);
    }
    goto LABEL_61;
  }
  if ((objc_msgSend(v65, sel_hasKindRawValue) & 1) == 0
    || (id v66 = objc_msgSend(v65, sel_kindRawValue)) == 0)
  {
LABEL_28:
    unint64_t v101 = v185;
    sub_241CDA180();
    swift_bridgeObjectRetain_n();
    id v102 = a6;
    swift_bridgeObjectRetain_n();
    id v103 = v65;
    id v104 = v102;
    id v105 = v103;
    uint64_t v106 = sub_241CDA190();
    int v107 = sub_241CDB650();
    if (os_log_type_enabled(v106, (os_log_type_t)v107))
    {
      LODWORD(v187) = v107;
      uint64_t v183 = v27;
      uint64_t v186 = v26;
      uint64_t v108 = swift_slowAlloc();
      id v184 = (char *)swift_slowAlloc();
      uint64_t v193 = v184;
      *(_DWORD *)uint64_t v108 = 136315906;
      swift_bridgeObjectRetain();
      uint64_t v192 = sub_241A33FE4(v190, a8, (uint64_t *)&v193);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v108 + 12) = 2080;
      id v109 = objc_msgSend(v104, sel_sensitiveLoggingIdentifier);
      uint64_t v110 = sub_241CDB0D0();
      unint64_t v112 = v111;

      uint64_t v192 = sub_241A33FE4(v110, v112, (uint64_t *)&v193);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v108 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v192 = sub_241A33FE4((uint64_t)v191, a5, (uint64_t *)&v193);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v108 + 32) = 2080;
      if (objc_msgSend(v105, sel_hasKindRawValue)
        && (id v113 = objc_msgSend(v105, sel_kindRawValue)) != 0)
      {
        uint64_t v114 = v113;
        sub_241CDB0D0();

        char v115 = _sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0();
      }
      else
      {
        char v115 = 4;
      }
      uint64_t v153 = v186;
      uint64_t v154 = v183;
      long long v155 = v184;
      LOBYTE(v192) = v115;
      sub_241C205BC(0, &qword_268D43388, (uint64_t)&type metadata for HKCodableSummaryData.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v156 = sub_241CDB120();
      uint64_t v192 = sub_241A33FE4(v156, v157, (uint64_t *)&v193);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v106, (os_log_type_t)v187, "%s_%s: Incorrect model kind for uniqueIdentifier %s: %s", (uint8_t *)v108, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v155, -1, -1);
      MEMORY[0x245637F20](v108, -1, -1);

      (*(void (**)(unint64_t, uint64_t))(v154 + 8))(v185, v153);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      (*(void (**)(unint64_t, uint64_t))(v27 + 8))(v101, v26);
    }
    goto LABEL_61;
  }
  unint64_t v67 = v66;
  id v168 = v65;
  sub_241CDB0D0();

  uint64_t v68 = _sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0();
  id v65 = v168;
  switch(v68)
  {
    case 2:
      swift_bridgeObjectRelease();
      break;
    case 4:
      goto LABEL_28;
    default:
      char v84 = sub_241CDC100();
      swift_bridgeObjectRelease();
      if ((v84 & 1) == 0) {
        goto LABEL_28;
      }
      break;
  }
  id v85 = objc_msgSend(v65, sel_contentData);
  if (v85)
  {
    uint64_t v86 = sub_241CD6AE0();
    unint64_t v88 = v87;

    id v85 = (id)sub_241CD6AD0();
    sub_241A37374(v86, v88);
  }
  id v89 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46650]), sel_initWithData_, v85);

  if (!v89)
  {

LABEL_61:
    uint64_t v158 = sub_241CD9B40();
    uint64_t v159 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v158 - 8) + 56);
    v159(v188, 1, 1, v158);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v159)(v189, 1, 1, v158);
  }
  uint64_t v90 = sub_241CD9B40();
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v92 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56);
  uint64_t v93 = v91 + 56;
  v92(v179, 1, 1, v90);
  uint64_t v165 = v90;
  uint64_t v164 = v92;
  uint64_t v163 = v93;
  v92(v180, 1, 1, v90);
  id v160 = v89;
  id v94 = objc_msgSend(v89, sel_trendValues);
  if (!v94
    || (id v95 = v94,
        uint64_t v193 = 0,
        sub_241A313AC(0, &qword_26B0303F8),
        sub_241CDB2B0(),
        v95,
        (unint64_t v97 = (unint64_t)v193) == 0))
  {
    swift_bridgeObjectRelease();
    unint64_t v97 = MEMORY[0x263F8EE78];
  }
  uint64_t v98 = v187;
  if (v97 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v99 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v99) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v99 = *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v99)
    {
LABEL_26:
      if (v99 < 1)
      {
        __break(1u);
        JUMPOUT(0x241C0D53CLL);
      }
      uint64_t v100 = 0;
      unint64_t v185 = v97 & 0xC000000000000001;
      id v166 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v173 + 6);
      os_log_t v162 = (void (**)(char *, uint64_t, uint64_t))(v173 + 2);
      uint64_t v161 = (void (**)(char *, uint64_t))(v173 + 1);
      id v173 = (void (**)(char *))(v27 + 8);
      *(void *)&long long v96 = 136315906;
      long long v170 = v96;
      uint64_t v169 = MEMORY[0x263F8EE58] + 8;
      id v184 = (char *)v97;
      uint64_t v186 = v26;
      unint64_t v167 = a8;
      uint64_t v182 = a6;
      uint64_t v183 = v99;
      unint64_t v171 = a5;
      do
      {
        if (v185) {
          id v116 = (id)MEMORY[0x245637160](v100, v97);
        }
        else {
          id v116 = *(id *)(v97 + 8 * v100 + 32);
        }
        uint64_t v117 = v116;
        if (!objc_msgSend(v116, sel_hasCoveredDateRangeRawValue)
          || (id v118 = objc_msgSend(v117, sel_coveredDateRangeRawValue)) == 0)
        {
LABEL_44:
          sub_241CDA180();
          swift_bridgeObjectRetain_n();
          id v128 = a6;
          swift_bridgeObjectRetain_n();
          id v129 = v117;
          id v130 = v128;
          id v131 = v129;
          uint64_t v132 = sub_241CDA190();
          os_log_type_t v133 = sub_241CDB670();
          if (os_log_type_enabled(v132, v133))
          {
            uint64_t v134 = swift_slowAlloc();
            uint64_t v172 = swift_slowAlloc();
            uint64_t v193 = (char *)v172;
            *(_DWORD *)uint64_t v134 = v170;
            swift_bridgeObjectRetain();
            *(void *)(v134 + 4) = sub_241A33FE4(v190, a8, (uint64_t *)&v193);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v134 + 12) = 2080;
            id v135 = objc_msgSend(v130, sel_sensitiveLoggingIdentifier);
            uint64_t v136 = sub_241CDB0D0();
            unint64_t v138 = v137;

            *(void *)(v134 + 14) = sub_241A33FE4(v136, v138, (uint64_t *)&v193);
            unint64_t v139 = v171;
            swift_bridgeObjectRelease();
            *(_WORD *)(v134 + 22) = 2080;
            swift_bridgeObjectRetain();
            *(void *)(v134 + 24) = sub_241A33FE4((uint64_t)v191, v139, (uint64_t *)&v193);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v134 + 32) = 2080;
            if (objc_msgSend(v131, sel_hasCoveredDateRangeRawValue)
              && (id v140 = objc_msgSend(v131, sel_coveredDateRangeRawValue)) != 0)
            {
              uint64_t v141 = v140;
              uint64_t v142 = sub_241CDB0D0();
              uint64_t v144 = v143;

              char v145 = MEMORY[0x2456352D0](v142, v144);
            }
            else
            {
              char v145 = 6;
            }
            LOBYTE(v192) = v145;
            sub_241C205BC(0, &qword_268D426F0, MEMORY[0x263F47200], MEMORY[0x263F8D8F0]);
            uint64_t v146 = sub_241CDB120();
            *(void *)(v134 + 34) = sub_241A33FE4(v146, v147, (uint64_t *)&v193);

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_241A23000, v132, v133, "%s_%s: found unexpected covered date range for unique id %s: %s", (uint8_t *)v134, 0x2Au);
            uint64_t v148 = v172;
            swift_arrayDestroy();
            MEMORY[0x245637F20](v148, -1, -1);
            MEMORY[0x245637F20](v134, -1, -1);

            uint64_t v98 = v187;
            uint64_t v26 = v186;
            (*v173)(v187);
            a8 = v167;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();

            ((void (*)(char *, uint64_t))*v173)(v98, v26);
          }
          a6 = v182;
          goto LABEL_34;
        }
        unint64_t v119 = v118;
        uint64_t v120 = sub_241CDB0D0();
        uint64_t v122 = v121;

        int v123 = MEMORY[0x2456352D0](v120, v122);
        if (v123 == 5)
        {
          uint64_t v149 = v176;
          HKCodableSummaryTrendValue.engineOutput.getter(v176);
          uint64_t v150 = v181;
          if (!(*v166)(v149, 1, v181))
          {
            uint64_t v152 = v174;
            (*v162)(v174, v149, v150);
            sub_241C21DE8(v149, (uint64_t (*)(void))sub_241C1F8B4);
            uint64_t v127 = (uint64_t)v178;
            sub_241CD9B70();

            (*v161)(v152, v150);
            uint64_t v126 = v180;
            goto LABEL_55;
          }
          uint64_t v126 = v180;
          sub_241C21DE8(v180, (uint64_t (*)(void))sub_241C1E8D8);

          sub_241C21DE8(v149, (uint64_t (*)(void))sub_241C1F8B4);
          uint64_t v127 = (uint64_t)v178;
        }
        else
        {
          uint64_t v98 = v187;
          if (v123 != 4) {
            goto LABEL_44;
          }
          uint64_t v124 = v175;
          HKCodableSummaryTrendValue.engineOutput.getter(v175);
          uint64_t v125 = v181;
          if (!(*v166)(v124, 1, v181))
          {
            uint64_t v151 = v174;
            (*v162)(v174, v124, v125);
            sub_241C21DE8(v124, (uint64_t (*)(void))sub_241C1F8B4);
            uint64_t v127 = (uint64_t)v177;
            sub_241CD9B70();

            (*v161)(v151, v125);
            uint64_t v126 = v179;
LABEL_55:
            sub_241C21DE8(v126, (uint64_t (*)(void))sub_241C1E8D8);
            goto LABEL_56;
          }
          uint64_t v126 = v179;
          sub_241C21DE8(v179, (uint64_t (*)(void))sub_241C1E8D8);

          sub_241C21DE8(v124, (uint64_t (*)(void))sub_241C1F8B4);
          uint64_t v127 = (uint64_t)v177;
        }
        v164(v127, 1, 1, v165);
LABEL_56:
        sub_241C1F9E8(v127, v126, (uint64_t (*)(void))sub_241C1E8D8);
        uint64_t v98 = v187;
LABEL_34:
        unint64_t v97 = (unint64_t)v184;
        ++v100;
      }
      while (v183 != v100);
    }
  }
  swift_bridgeObjectRelease();

  sub_241C1F9E8(v179, v188, (uint64_t (*)(void))sub_241C1E8D8);
  return sub_241C1F9E8(v180, v189, (uint64_t (*)(void))sub_241C1E8D8);
}

uint64_t sub_241C0D550(uint64_t a1, void (*a2)(uint64_t a1), uint64_t a3, void *a4, void (*a5)(char *, unint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, unint64_t *a11)
{
  v227 = a5;
  uint64_t v212 = a4;
  v238 = a2;
  uint64_t v220 = a1;
  unint64_t v14 = (unint64_t)a11;
  unint64_t v230 = a10;
  uint64_t v226 = a9;
  uint64_t v219 = sub_241CD6D00();
  uint64_t v218 = *(void *)(v219 - 8);
  MEMORY[0x270FA5388](v219);
  uint64_t v217 = (char *)v198 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C1E8D8(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v216 = (uint64_t)v198 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BDFB34();
  uint64_t v224 = *(void *)(v18 - 8);
  uint64_t v225 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v215 = (char *)v198 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = sub_241CD9B00();
  uint64_t v235 = *(void (**)())(v213 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v213);
  os_log_t v208 = (os_log_t)((char *)v198 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v204 = (char *)v198 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v211 = (char *)v198 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v202 = (char *)v198 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v210 = (uint64_t)v198 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v206 = (char *)v198 - v31;
  MEMORY[0x270FA5388](v30);
  v229 = (char *)v198 - v32;
  sub_241C1F8B4(0);
  uint64_t v34 = MEMORY[0x270FA5388](v33 - 8);
  uint64_t v205 = (char *)v198 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v203 = (uint64_t)v198 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v214 = (uint64_t)v198 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v240 = (uint64_t)v198 - v40;
  uint64_t v41 = sub_241CDA1A0();
  v233 = *(void (**)(uint64_t))(v41 - 8);
  v234 = (char *)v41;
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  uint64_t v207 = (char *)v198 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  v228 = (char *)v198 - v45;
  MEMORY[0x270FA5388](v44);
  v232 = (char *)v198 - v46;
  sub_241A558EC();
  v242 = v47;
  uint64_t v48 = *(v47 - 1);
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v51 = (char *)v198 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v49);
  uint64_t v53 = (char *)v198 - v52;
  sub_241C1E8B8(0);
  uint64_t v55 = MEMORY[0x270FA5388](v54);
  uint64_t v223 = (uint64_t)v198 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v221 = (uint64_t)v198 - v58;
  uint64_t v222 = MEMORY[0x270FA5388](v57);
  uint64_t v60 = (void (*)(unsigned char *, uint64_t, uint64_t))((char *)v198 + *(int *)(v222 + 48) - v59);
  v239 = (void (*)(unsigned char *, uint64_t, uint64_t))((char *)v198 - v59);
  sub_241C1F8E8(a6, (uint64_t)v198 - v59, (uint64_t (*)(void))sub_241C1E8D8);
  v236 = v60;
  sub_241C1F8E8(a7, (uint64_t)v60, (uint64_t (*)(void))sub_241C1E8D8);
  unint64_t v61 = (unint64_t *)MEMORY[0x263F8EE78];
  v245 = (unint64_t *)MEMORY[0x263F8EE78];
  unint64_t v62 = *(void (**)(char *, os_log_t, uint64_t))(a3 + 16);
  swift_bridgeObjectRetain();
  uint64_t v237 = (void (*)(unsigned char *, uint64_t))a3;
  uint64_t v209 = v62;
  if (v62)
  {
    uint64_t v201 = a11;
    uint64_t v63 = a3;
    uint64_t v64 = *(void *)(v48 + 72);
    v241 = (char *)((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
    id v65 = &v241[v63];
    id v66 = (void *)MEMORY[0x263F8EE78];
    unint64_t v67 = v62;
    do
    {
      sub_241C1F8E8((uint64_t)v65, (uint64_t)v53, (uint64_t (*)(void))sub_241A558EC);
      if (v53[*((int *)v242 + 12) + 8])
      {
        sub_241C21DE8((uint64_t)v53, (uint64_t (*)(void))sub_241A558EC);
      }
      else
      {
        sub_241C1F9E8((uint64_t)v53, (uint64_t)v51, (uint64_t (*)(void))sub_241A558EC);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_241A523BC(0, *((void *)v66 + 2) + 1, 1);
        }
        id v66 = v245;
        unint64_t v69 = v245[2];
        unint64_t v68 = v245[3];
        if (v69 >= v68 >> 1)
        {
          sub_241A523BC(v68 > 1, v69 + 1, 1);
          id v66 = v245;
        }
        *((void *)v66 + 2) = v69 + 1;
        sub_241C1F9E8((uint64_t)v51, (uint64_t)&v241[(void)v66 + v69 * v64], (uint64_t (*)(void))sub_241A558EC);
      }
      v65 += v64;
      unint64_t v67 = (void (*)(char *, os_log_t, uint64_t))((char *)v67 - 1);
    }
    while (v67);
    unint64_t v61 = v245;
    unint64_t v14 = (unint64_t)v201;
  }
  swift_bridgeObjectRelease();
  id v70 = v232;
  sub_241CDA180();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v71 = v226;
  swift_retain_n();
  id v72 = v71;
  uint64_t v73 = sub_241CDA190();
  os_log_type_t v74 = sub_241CDB670();
  int v75 = v74;
  BOOL v76 = os_log_type_enabled(v73, v74);
  v242 = v61;
  if (v76)
  {
    uint64_t v77 = swift_slowAlloc();
    LODWORD(v201) = v75;
    uint64_t v78 = v77;
    uint64_t v226 = (void *)swift_slowAlloc();
    v245 = (unint64_t *)v226;
    *(_DWORD *)uint64_t v78 = 136315906;
    os_log_t v200 = v73;
    swift_bridgeObjectRetain();
    uint64_t v243 = sub_241A33FE4(v230, v14, (uint64_t *)&v245);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v78 + 12) = 2080;
    uint64_t v79 = v61;
    id v80 = objc_msgSend(v72, sel_sensitiveLoggingIdentifier);
    unint64_t v81 = v14;
    uint64_t v82 = sub_241CDB0D0();
    unint64_t v84 = v83;

    uint64_t v85 = v82;
    unint64_t v14 = v81;
    uint64_t v243 = sub_241A33FE4(v85, v84, (uint64_t *)&v245);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v78 + 22) = 2048;
    uint64_t v86 = v79[2];
    swift_release();
    uint64_t v243 = v86;
    sub_241CDBBF0();
    swift_release();
    *(_WORD *)(v78 + 32) = 2048;
    swift_bridgeObjectRelease();
    uint64_t v243 = (uint64_t)v209;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    os_log_t v87 = v200;
    _os_log_impl(&dword_241A23000, v200, (os_log_type_t)v201, "%s_%s: Computing trends with data for %ld days based on %ld total days", (uint8_t *)v78, 0x2Au);
    unint64_t v88 = v226;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v88, -1, -1);
    MEMORY[0x245637F20](v78, -1, -1);

    id v89 = (char *)*((void *)v233 + 1);
    ((void (*)(char *, char *))v89)(v232, v234);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    id v89 = (char *)*((void *)v233 + 1);
    ((void (*)(char *, char *))v89)(v70, v234);
  }
  uint64_t v90 = v238;
  uint64_t v91 = v227;
  uint64_t v92 = v228;
  uint64_t v93 = v229;
  uint64_t v94 = *((void *)v227 + 2);
  id v95 = v235;
  long long v96 = v236;
  v241 = v72;
  if (v94 && (unint64_t v97 = sub_241C0B70C(4), (v98 & 1) != 0))
  {
    v232 = v89;
    unint64_t v99 = *((void *)v91 + 7) + *((void *)v95 + 9) * v97;
    uint64_t v100 = (void (*)(char *, unint64_t, uint64_t))*((void *)v95 + 2);
    unint64_t v101 = v206;
    uint64_t v102 = v213;
    v100(v206, v99, v213);
    (*((void (**)(char *, char *, uint64_t))v95 + 4))(v93, v101, v102);
    id v103 = v207;
    sub_241CDA180();
    os_log_t v104 = v208;
    uint64_t v209 = (void (*)(char *, os_log_t, uint64_t))v100;
    v100((char *)v208, (unint64_t)v93, v102);
    swift_bridgeObjectRetain_n();
    id v105 = v72;
    uint64_t v106 = sub_241CDA190();
    os_log_type_t v107 = sub_241CDB630();
    int v108 = v107;
    BOOL v109 = os_log_type_enabled(v106, v107);
    uint64_t v226 = v105;
    if (v109)
    {
      uint64_t v110 = swift_slowAlloc();
      uint64_t v201 = (unint64_t *)swift_slowAlloc();
      v245 = v201;
      *(_DWORD *)uint64_t v110 = 136315650;
      os_log_t v200 = v106;
      swift_bridgeObjectRetain();
      uint64_t v243 = sub_241A33FE4(v230, v14, (uint64_t *)&v245);
      uint64_t v206 = &v244;
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v110 + 12) = 2080;
      v198[1] = v110 + 14;
      id v111 = objc_msgSend(v105, sel_sensitiveLoggingIdentifier);
      int v199 = v108;
      id v112 = v111;
      unint64_t v113 = v14;
      uint64_t v114 = sub_241CDB0D0();
      unint64_t v116 = v115;

      uint64_t v117 = v114;
      unint64_t v14 = v113;
      id v72 = v241;
      uint64_t v243 = sub_241A33FE4(v117, v116, (uint64_t *)&v245);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v110 + 22) = 2080;
      os_log_t v118 = v208;
      v209(v204, v208, v102);
      uint64_t v119 = sub_241CDB120();
      uint64_t v243 = sub_241A33FE4(v119, v120, (uint64_t *)&v245);
      uint64_t v121 = v239;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      uint64_t v122 = v235;
      int v123 = (void (*)(os_log_t, uint64_t))*((void *)v235 + 1);
      v123(v118, v102);
      os_log_t v124 = v200;
      _os_log_impl(&dword_241A23000, v200, (os_log_type_t)v199, "%s_%s: Retrieved month parameters=%s", (uint8_t *)v110, 0x20u);
      uint64_t v125 = v201;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v125, -1, -1);
      MEMORY[0x245637F20](v110, -1, -1);

      ((void (*)(char *, char *))v232)(v207, v234);
      uint64_t v126 = v230;
      uint64_t v127 = v212;
      id v95 = v122;
      uint64_t v128 = (uint64_t)v205;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      id v160 = v235;
      int v123 = (void (*)(os_log_t, uint64_t))*((void *)v235 + 1);
      v123(v104, v102);

      ((void (*)(char *, char *))v232)(v103, v234);
      uint64_t v127 = v212;
      uint64_t v126 = v230;
      id v95 = v160;
      uint64_t v128 = (uint64_t)v205;
      uint64_t v121 = v239;
    }
    uint64_t v161 = v229;
    uint64_t v162 = v231;
    sub_241C11E14(v127, v237, 4, (uint64_t)v229, v121, v226, v126, v14, v128);
    long long v96 = v236;
    if (v162)
    {
      swift_release();
      v123((os_log_t)v161, v102);
      return sub_241C21DE8((uint64_t)v239, (uint64_t (*)(void))sub_241C1E8B8);
    }
    uint64_t v231 = 0;
    v123((os_log_t)v161, v102);
    uint64_t v169 = sub_241CD9B80();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v169 - 8) + 56))(v128, 0, 1, v169);
    sub_241C1F9E8(v128, v240, (uint64_t (*)(void))sub_241C1F8B4);
    uint64_t v90 = v238;
    uint64_t v91 = v227;
    uint64_t v92 = v228;
    id v89 = v232;
    if (!*((void *)v227 + 2)) {
      goto LABEL_31;
    }
  }
  else
  {
    uint64_t v129 = sub_241CD9B80();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v240, 1, 1, v129);
    if (!*((void *)v91 + 2))
    {
LABEL_31:
      uint64_t v170 = (uint64_t)v96;
      uint64_t v171 = sub_241CD9B80();
      (*(void (**)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 56))(v90, 1, 1, v171);
      goto LABEL_32;
    }
  }
  unint64_t v130 = sub_241C0B70C(5);
  if ((v131 & 1) == 0) {
    goto LABEL_31;
  }
  unint64_t v132 = *((void *)v91 + 7) + *((void *)v95 + 9) * v130;
  os_log_type_t v133 = v95;
  uint64_t v134 = (void (*)(char *, unint64_t, uint64_t))*((void *)v95 + 2);
  id v135 = v202;
  uint64_t v136 = v213;
  v134(v202, v132, v213);
  unint64_t v137 = (void (*)(uint64_t, char *, uint64_t))*((void *)v133 + 4);
  uint64_t v138 = v210;
  v137(v210, v135, v136);
  sub_241CDA180();
  v227 = v134;
  v134(v211, v138, v136);
  swift_bridgeObjectRetain_n();
  v229 = v72;
  unint64_t v139 = sub_241CDA190();
  os_log_type_t v140 = sub_241CDB630();
  int v141 = v140;
  if (os_log_type_enabled(v139, v140))
  {
    uint64_t v142 = swift_slowAlloc();
    uint64_t v226 = (void *)swift_slowAlloc();
    v245 = (unint64_t *)v226;
    *(_DWORD *)uint64_t v142 = 136315650;
    LODWORD(v209) = v141;
    swift_bridgeObjectRetain();
    uint64_t v243 = sub_241A33FE4(v230, v14, (uint64_t *)&v245);
    uint64_t v207 = &v244;
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v142 + 12) = 2080;
    uint64_t v206 = (char *)(v142 + 14);
    uint64_t v143 = v229;
    id v144 = objc_msgSend(v229, sel_sensitiveLoggingIdentifier);
    v232 = v89;
    id v145 = v144;
    uint64_t v146 = sub_241CDB0D0();
    os_log_t v208 = v139;
    unint64_t v147 = v14;
    uint64_t v148 = v146;
    unint64_t v150 = v149;

    uint64_t v151 = v148;
    unint64_t v14 = v147;
    uint64_t v243 = sub_241A33FE4(v151, v150, (uint64_t *)&v245);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v142 + 22) = 2080;
    uint64_t v152 = v211;
    v227(v204, (unint64_t)v211, v136);
    uint64_t v153 = sub_241CDB120();
    uint64_t v243 = sub_241A33FE4(v153, v154, (uint64_t *)&v245);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    long long v155 = (void (*)(char *, uint64_t))*((void *)v235 + 1);
    v155(v152, v136);
    os_log_t v156 = v208;
    _os_log_impl(&dword_241A23000, v208, (os_log_type_t)v209, "%s_%s: Retrieved half year parameters=%s", (uint8_t *)v142, 0x20u);
    unint64_t v157 = v226;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v157, -1, -1);
    MEMORY[0x245637F20](v142, -1, -1);

    ((void (*)(char *, char *))v232)(v228, v234);
    uint64_t v158 = v230;
    uint64_t v159 = v212;
  }
  else
  {
    uint64_t v163 = v229;

    swift_bridgeObjectRelease_n();
    long long v155 = (void (*)(char *, uint64_t))*((void *)v235 + 1);
    v155(v211, v136);

    ((void (*)(char *, char *))v89)(v92, v234);
    uint64_t v159 = v212;
    uint64_t v158 = v230;
  }
  uint64_t v164 = v203;
  uint64_t v165 = v236;
  uint64_t v166 = v210;
  uint64_t v167 = v231;
  sub_241C11E14(v159, v237, 5, v210, v236, v229, v158, v14, v203);
  if (v167)
  {
    swift_release();
    v155((char *)v166, v136);
    sub_241C21DE8(v240, (uint64_t (*)(void))sub_241C1F8B4);
    return sub_241C21DE8((uint64_t)v239, (uint64_t (*)(void))sub_241C1E8B8);
  }
  uint64_t v231 = 0;
  v155((char *)v166, v136);
  uint64_t v197 = sub_241CD9B80();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v197 - 8) + 56))(v164, 0, 1, v197);
  sub_241C1F9E8(v164, (uint64_t)v238, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v170 = (uint64_t)v165;
LABEL_32:
  sub_241C20740(0, &qword_26B034F78, (uint64_t (*)(uint64_t))sub_241BDFB34, MEMORY[0x263F8E0F8]);
  uint64_t v235 = *(void (**)())(v224 + 72);
  unint64_t v172 = (*(unsigned __int8 *)(v224 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v224 + 80);
  uint64_t v173 = swift_allocObject();
  uint64_t v237 = (void (*)(unsigned char *, uint64_t))v173;
  *(_OWORD *)(v173 + 16) = xmmword_241CEB720;
  id v174 = (uint64_t (*)(void))(v173 + v172);
  uint64_t v175 = v225;
  uint64_t v176 = *(int *)(v225 + 48);
  v234 = (char *)v174 + *(int *)(v225 + 64);
  sub_241C1F8E8(v240, (uint64_t)v174, (uint64_t (*)(void))sub_241C1F8B4);
  *((unsigned char *)v174 + v176) = 4;
  uint64_t v177 = v222;
  uint64_t v178 = v221;
  v236 = (void (*)(unsigned char *, uint64_t, uint64_t))(v221 + *(int *)(v222 + 48));
  uint64_t v179 = v236;
  uint64_t v180 = (uint64_t)v239;
  sub_241C1F8E8((uint64_t)v239, v221, (uint64_t (*)(void))sub_241C1E8D8);
  sub_241C1F8E8(v170, (uint64_t)v179, (uint64_t (*)(void))sub_241C1E8D8);
  sub_241C1F9E8(v178, (uint64_t)v234, (uint64_t (*)(void))sub_241C1E8D8);
  v233 = (void (*)(uint64_t))v174;
  uint64_t v181 = (char *)v235 + (void)v174;
  uint64_t v182 = v175;
  uint64_t v183 = *(int *)(v175 + 48);
  uint64_t v235 = (void (*)())&v181[*(int *)(v182 + 64)];
  sub_241C1F8E8((uint64_t)v238, (uint64_t)v181, (uint64_t (*)(void))sub_241C1F8B4);
  v234 = v181;
  v181[v183] = 5;
  uint64_t v184 = v223;
  uint64_t v185 = v223 + *(int *)(v177 + 48);
  sub_241C1F8E8(v180, v223, (uint64_t (*)(void))sub_241C1E8D8);
  sub_241C1F8E8(v170, v185, (uint64_t (*)(void))sub_241C1E8D8);
  sub_241C1F9E8(v185, (uint64_t)v235, (uint64_t (*)(void))sub_241C1E8D8);
  sub_241C21DE8(v184, (uint64_t (*)(void))sub_241C1E8D8);
  uint64_t result = sub_241C21DE8((uint64_t)v236, (uint64_t (*)(void))sub_241C1E8D8);
  if (*((void *)v237 + 2) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    unint64_t v230 = v242[2];
    uint64_t v186 = v230;
    uint64_t v187 = (uint64_t)v215;
    v232 = &v215[*(int *)(v182 + 64)];
    uint64_t v188 = v232;
    uint64_t v189 = (void (*)(unsigned char *, uint64_t, uint64_t))*(int *)(v182 + 48);
    v236 = v189;
    uint64_t v190 = (char *)self;
    v229 = v190;
    uint64_t v235 = sub_241BDFB34;
    sub_241C1F8E8((uint64_t)v233, v187, (uint64_t (*)(void))sub_241BDFB34);
    LODWORD(v189) = *((unsigned __int8 *)v189 + v187);
    v238 = sub_241C1F8B4;
    uint64_t v191 = v214;
    sub_241C1F9E8(v187, v214, (uint64_t (*)(void))sub_241C1F8B4);
    v233 = sub_241C1E8D8;
    uint64_t v192 = v216;
    sub_241C1F9E8((uint64_t)v188, v216, (uint64_t (*)(void))sub_241C1E8D8);
    id v193 = objc_msgSend(v190, sel_standardUserDefaults);
    sub_241C125DC(v241, v192, v191, v189, v186, v193);

    uint64_t v194 = (uint64_t)v217;
    sub_241CD6CF0();
    sub_241BC1F98(v194);
    swift_release();
    v228 = *(char **)(v218 + 8);
    uint64_t v195 = v219;
    ((void (*)(uint64_t, uint64_t))v228)(v194, v219);
    sub_241C21DE8(v192, (uint64_t (*)(void))sub_241C1E8D8);
    sub_241C21DE8(v191, (uint64_t (*)(void))sub_241C1F8B4);
    sub_241C1F8E8((uint64_t)v234, v187, (uint64_t (*)(void))v235);
    LODWORD(v193) = *((unsigned __int8 *)v236 + v187);
    sub_241C1F9E8(v187, v191, (uint64_t (*)(void))v238);
    sub_241C1F9E8((uint64_t)v232, v192, (uint64_t (*)(void))v233);
    id v196 = objc_msgSend(v229, sel_standardUserDefaults);
    sub_241C125DC(v241, v192, v191, v193, v230, v196);

    sub_241CD6CF0();
    sub_241BC1F98(v194);
    swift_release();
    ((void (*)(uint64_t, uint64_t))v228)(v194, v195);
    sub_241C21DE8(v192, (uint64_t (*)(void))sub_241C1E8D8);
    sub_241C21DE8(v191, (uint64_t (*)(void))sub_241C1F8B4);
    swift_bridgeObjectRelease();
    swift_release();
    sub_241C21DE8((uint64_t)v239, (uint64_t (*)(void))sub_241C1E8B8);
    return sub_241C1F9E8(v240, v220, (uint64_t (*)(void))v238);
  }
  return result;
}

id sub_241C0EDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241A558EC();
  uint64_t v91 = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v79 - v11;
  sub_241C1F8B4(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v85 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v83 = (uint64_t)&v79 - v16;
  sub_241C1F9B4(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  unint64_t v81 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v79 - v20;
  sub_241C1F830(0);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v84 = (uint64_t)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v86 = (uint64_t)&v79 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v82 = (uint64_t)&v79 - v28;
  uint64_t v88 = MEMORY[0x270FA5388](v27);
  uint64_t v89 = (uint64_t)&v79 - v29;
  uint64_t v30 = (char *)&v79 + *(int *)(v88 + 48) - v29;
  sub_241C1F8E8(a1, (uint64_t)&v79 - v29, (uint64_t (*)(void))sub_241C1F8B4);
  os_log_t v87 = v30;
  sub_241C1F8E8(a2, (uint64_t)v30, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v31 = *(void *)(a3 + 16);
  unint64_t v32 = MEMORY[0x263F8EE78];
  if (!v31)
  {
LABEL_6:
    uint64_t v45 = v82;
    uint64_t v46 = v82 + *(int *)(v88 + 48);
    sub_241C1F8E8(v89, v82, (uint64_t (*)(void))sub_241C1F8B4);
    sub_241C1F8E8((uint64_t)v87, v46, (uint64_t (*)(void))sub_241C1F8B4);
    uint64_t v47 = v45;
    uint64_t v48 = v83;
    sub_241C1F9E8(v47, v83, (uint64_t (*)(void))sub_241C1F8B4);
    uint64_t v49 = sub_241CD9B80();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
    int v52 = v51(v48, 1, v49);
    unint64_t v90 = v32;
    uint64_t v91 = (int *)v51;
    uint64_t v82 = v50;
    if (v52 == 1)
    {
      sub_241C21DE8(v46, (uint64_t (*)(void))sub_241C1F8B4);
      sub_241C21DE8(v48, (uint64_t (*)(void))sub_241C1F8B4);
      uint64_t v53 = sub_241CD9940();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v21, 1, 1, v53);
    }
    else
    {
      sub_241CD9B50();
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
      sub_241C21DE8(v46, (uint64_t (*)(void))sub_241C1F8B4);
      uint64_t v54 = sub_241CD9940();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v21, 1, v54) != 1)
      {
        sub_241C21DE8((uint64_t)v21, (uint64_t (*)(void))sub_241C1F9B4);
        swift_bridgeObjectRetain();
        unint64_t v55 = v32;
LABEL_11:
        uint64_t v56 = sub_241A313AC(0, &qword_26B0303F8);
        uint64_t v57 = v88;
        uint64_t v58 = v89;
        uint64_t v59 = v86;
        uint64_t v60 = v86 + *(int *)(v88 + 48);
        sub_241C1F8E8(v89, v86, (uint64_t (*)(void))sub_241C1F8B4);
        uint64_t v61 = (uint64_t)v87;
        sub_241C1F8E8((uint64_t)v87, v60, (uint64_t (*)(void))sub_241C1F8B4);
        uint64_t v83 = v56;
        id v62 = HKCodableSummaryTrendValue.init(engineOutput:coveredDateRange:dataPresencePoints:)(v59, 4, v55);
        sub_241C21DE8(v60, (uint64_t (*)(void))sub_241C1F8B4);
        uint64_t v63 = v84;
        uint64_t v64 = v84 + *(int *)(v57 + 48);
        sub_241C1F8E8(v58, v84, (uint64_t (*)(void))sub_241C1F8B4);
        sub_241C1F8E8(v61, v64, (uint64_t (*)(void))sub_241C1F8B4);
        uint64_t v65 = v85;
        sub_241C1F9E8(v64, v85, (uint64_t (*)(void))sub_241C1F8B4);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v91)(v65, 1, v49) == 1)
        {
          sub_241C21DE8(v63, (uint64_t (*)(void))sub_241C1F8B4);
          sub_241C21DE8(v65, (uint64_t (*)(void))sub_241C1F8B4);
          uint64_t v66 = sub_241CD9940();
          uint64_t v67 = (uint64_t)v81;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v81, 1, 1, v66);
          unint64_t v68 = MEMORY[0x263F8EE78];
        }
        else
        {
          uint64_t v67 = (uint64_t)v81;
          sub_241CD9B50();
          (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v65, v49);
          sub_241C21DE8(v63, (uint64_t (*)(void))sub_241C1F8B4);
          uint64_t v69 = sub_241CD9940();
          int v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 48))(v67, 1, v69);
          unint64_t v68 = MEMORY[0x263F8EE78];
          unint64_t v71 = v90;
          if (v70 != 1)
          {
LABEL_15:
            sub_241C21DE8(v67, (uint64_t (*)(void))sub_241C1F9B4);
            uint64_t v72 = v86;
            uint64_t v73 = v86 + *(int *)(v88 + 48);
            sub_241C1F8E8(v89, v86, (uint64_t (*)(void))sub_241C1F8B4);
            sub_241C1F8E8((uint64_t)v87, v73, (uint64_t (*)(void))sub_241C1F8B4);
            id v74 = HKCodableSummaryTrendValue.init(engineOutput:coveredDateRange:dataPresencePoints:)(v73, 5, v71);
            sub_241C21DE8(v72, (uint64_t (*)(void))sub_241C1F8B4);
            unint64_t v92 = v68;
            id v75 = v62;
            id v76 = v74;
            MEMORY[0x2456365D0]();
            if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_241CDB2F0();
            }
            sub_241CDB310();
            sub_241CDB2E0();
            id v77 = v76;
            MEMORY[0x2456365D0]();
            if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_241CDB2F0();
            }
            sub_241CDB310();
            sub_241CDB2E0();
            unint64_t v78 = v92;

            sub_241C21DE8(v89, (uint64_t (*)(void))sub_241C1F830);
            return (id)v78;
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v71 = MEMORY[0x263F8EE78];
        goto LABEL_15;
      }
    }
    sub_241C21DE8((uint64_t)v21, (uint64_t (*)(void))sub_241C1F9B4);
    unint64_t v55 = MEMORY[0x263F8EE78];
    goto LABEL_11;
  }
  id v80 = v21;
  unint64_t v92 = MEMORY[0x263F8EE78];
  sub_241CDBE80();
  uint64_t v33 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  unint64_t v90 = *(void *)(v7 + 72);
  while (1)
  {
    sub_241C1F8E8(v33, (uint64_t)v12, (uint64_t (*)(void))sub_241A558EC);
    uint64_t v34 = v91[12];
    uint64_t v35 = &v10[v34];
    uint64_t v36 = &v12[v34];
    uint64_t v37 = sub_241CD6810();
    uint64_t v38 = *(void *)(v37 - 8);
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v10, v12, v37);
    uint64_t v39 = *(void *)v36;
    int v40 = v36[8];
    *(void *)uint64_t v35 = v39;
    v35[8] = v40;
    id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46678]), sel_init);
    if (!result) {
      break;
    }
    uint64_t v42 = result;
    sub_241A313AC(0, &qword_26B0303E8);
    id v43 = v42;
    uint64_t v44 = (void *)sub_241CDB930();
    objc_msgSend(v43, sel_setDateInterval_, v44);

    objc_msgSend(v43, sel_setDataPresent_, v40 ^ 1u);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v37);
    sub_241C21DE8((uint64_t)v12, (uint64_t (*)(void))sub_241A558EC);
    sub_241CDBE60();
    sub_241CDBE90();
    sub_241CDBEA0();
    sub_241CDBE70();
    v33 += v90;
    if (!--v31)
    {
      unint64_t v32 = v92;
      uint64_t v21 = v80;
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_241C0F830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  uint64_t v5 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v21 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_241C10870;
  uint64_t v24 = sub_241C108D8;
  sub_241C1E798(0, &qword_26B032580, sub_241C10870, (void (*)(void))sub_241C108D8);
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v23 = sub_241C15EBC(a1, a2);
  uint64_t v28 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_241C1F8E8(a2, (uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  sub_241A37260(v22, (uint64_t)v27);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v16 = (v9 + *(unsigned __int8 *)(v21 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v15, v10, v7);
  sub_241C1F9E8((uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  sub_241A5598C(v27, v17 + ((v6 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_241CDA4F0();
  sub_241C10870(0);
  sub_241C20698(0, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
  sub_241C108D8();
  sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
  sub_241CDA840();
  swift_release();
  sub_241C1ECF8(&qword_26B02E9D0, &qword_26B032580, v25, (void (*)(void))v24);
  uint64_t v18 = v26;
  uint64_t v19 = sub_241CDA6D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v18);
  return v19;
}

uint64_t sub_241C0FC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a3;
  uint64_t v5 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v24 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD7740();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_241C10870;
  uint64_t v28 = sub_241C108D8;
  sub_241C1E798(0, &qword_26B032580, sub_241C10870, (void (*)(void))sub_241C108D8);
  uint64_t v30 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v23 - v14;
  uint64_t v27 = sub_241C15EBC(a1, a2);
  uint64_t v32 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  sub_241C1F8E8(a2, (uint64_t)v7, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  sub_241A37260(v25, (uint64_t)v31);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v17 = (v10 + *(unsigned __int8 *)(v24 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v18 = (v6 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v16, v11, v8);
  sub_241C1F9E8((uint64_t)v7, v19 + v17, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  sub_241A5598C(v31, v19 + v18);
  sub_241CDA4F0();
  sub_241C10870(0);
  sub_241C20698(0, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
  sub_241C108D8();
  sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
  sub_241CDA840();
  swift_release();
  sub_241C1ECF8(&qword_26B02E9D0, &qword_26B032580, v29, (void (*)(void))v28);
  uint64_t v20 = v30;
  uint64_t v21 = sub_241CDA6D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v20);
  return v21;
}

uint64_t sub_241C0FFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a3;
  uint64_t v5 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v24 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD7740();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_241C10870;
  uint64_t v28 = sub_241C108D8;
  sub_241C1E798(0, &qword_26B032580, sub_241C10870, (void (*)(void))sub_241C108D8);
  uint64_t v30 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v23 - v14;
  uint64_t v27 = sub_241C163E0(a1, a2);
  uint64_t v32 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  sub_241C1F8E8(a2, (uint64_t)v7, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  sub_241A37260(v25, (uint64_t)v31);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v17 = (v10 + *(unsigned __int8 *)(v24 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v18 = (v6 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v16, v11, v8);
  sub_241C1F9E8((uint64_t)v7, v19 + v17, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  sub_241A5598C(v31, v19 + v18);
  sub_241CDA4F0();
  sub_241C10870(0);
  sub_241C20698(0, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
  sub_241C108D8();
  sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
  sub_241CDA840();
  swift_release();
  sub_241C1ECF8(&qword_26B02E9D0, &qword_26B032580, v29, (void (*)(void))v28);
  uint64_t v20 = v30;
  uint64_t v21 = sub_241CDA6D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v20);
  return v21;
}

uint64_t static TrendSummaryModelGenerating.trendValuesPublisher(generatorContext:request:trendAnalysisEngine:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v33 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(void *)(v32 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v31 = (char *)&v29 - v11;
  uint64_t v12 = sub_241CD7740();
  uint64_t v29 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v30 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_241C10870;
  uint64_t v37 = sub_241C108D8;
  sub_241C1E798(0, &qword_26B032580, sub_241C10870, (void (*)(void))sub_241C108D8);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  uint64_t v40 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v34 = (char *)&v29 - v17;
  uint64_t v36 = static TrendSummaryModelGenerating.trendAnalysisInputPublisher(generatorContext:request:)(a1, a2, a4, a5);
  uint64_t v42 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  uint64_t v19 = v31;
  uint64_t v18 = v32;
  uint64_t v20 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, a2, AssociatedTypeWitness);
  sub_241A37260(v33, (uint64_t)v41);
  unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v22 = v18;
  unint64_t v23 = (v14 + v21 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = a4;
  *((void *)v24 + 3) = a5;
  *((void *)v24 + 4) = v35;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v24[v21], v30, v29);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v24[v23], v19, v20);
  sub_241A5598C(v41, (uint64_t)&v24[(v10 + v23 + 7) & 0xFFFFFFFFFFFFFFF8]);
  sub_241CDA4F0();
  sub_241C10870(0);
  sub_241C20698(0, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
  sub_241C108D8();
  sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
  uint64_t v25 = v34;
  sub_241CDA840();
  swift_release();
  sub_241C1ECF8(&qword_26B02E9D0, &qword_26B032580, v38, (void (*)(void))v37);
  uint64_t v26 = v39;
  uint64_t v27 = sub_241CDA6D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v26);
  return v27;
}

void sub_241C10808()
{
  if (!qword_26B034CA8)
  {
    sub_241A313AC(255, &qword_26B0303F8);
    unint64_t v0 = sub_241CDB320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034CA8);
    }
  }
}

void sub_241C10870(uint64_t a1)
{
}

void sub_241C108A4(uint64_t a1)
{
}

uint64_t sub_241C108D8()
{
  return sub_241C1090C(&qword_26B02EA18, sub_241C10870);
}

uint64_t sub_241C1090C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TrendSummaryModelGenerationRequest.domain(context:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v18[1] = a3;
  uint64_t v5 = sub_241CD7650();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)sub_241CD76E0();
  sub_241C205BC(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = (*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 24))(a1);
  long long v18[2] = inited;
  sub_241CDB2E0();
  sub_241C20740(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v11 = sub_241CD73B0();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x263F45508], v11);
  id v15 = v9;
  sub_241C5D74C(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v16 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F45690], v5);
  sub_241CD7680();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241C10C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v38 = a4;
  uint64_t v45 = a3;
  uint64_t v8 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v43 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v41 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_241CD7740();
  uint64_t v10 = *(void *)(v40 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v40);
  uint64_t v37 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD7690();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BF3AE8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v46 = v16;
  uint64_t v47 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v39 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BF3B7C();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v48 = v19;
  uint64_t v49 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v42 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B62E44((uint64_t)v15);
  uint64_t v22 = sub_241A34BB0(a1, (uint64_t)v15, v38, a5);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(void *)&v51[0] = v22;
  sub_241A6853C();
  sub_241C1090C(&qword_26B02EA48, (void (*)(uint64_t))sub_241A6853C);
  sub_241CDA760();
  swift_release();
  unint64_t v23 = v37;
  uint64_t v24 = a1;
  uint64_t v25 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v37, v24, v40);
  uint64_t v26 = v41;
  sub_241C1F8E8(a2, v41, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  sub_241A37260(v45, (uint64_t)v51);
  unint64_t v27 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v28 = (v11 + *(unsigned __int8 *)(v44 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v29 = (v43 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v30 + v27, v23, v25);
  sub_241C1F9E8(v26, v30 + v28, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  *(void *)(v30 + v29) = v50;
  sub_241A5598C(v51, v30 + ((v29 + 15) & 0xFFFFFFFFFFFFFFF8));
  sub_241CDA4F0();
  sub_241C20698(0, &qword_26B032720, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDCF0]);
  sub_241C1090C(&qword_26B032508, (void (*)(uint64_t))sub_241BF3AE8);
  sub_241C1D290((unint64_t *)&qword_26B038970, &qword_26B032720, (uint64_t (*)(uint64_t))sub_241B6F648);
  uint64_t v31 = v42;
  uint64_t v32 = v46;
  uint64_t v33 = v39;
  sub_241CDA840();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v32);
  sub_241C1090C(&qword_26B032550, (void (*)(uint64_t))sub_241BF3B7C);
  uint64_t v34 = v48;
  uint64_t v35 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v34);
  return v35;
}

uint64_t sub_241C111E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v38 = a4;
  uint64_t v45 = a3;
  uint64_t v8 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v43 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v41 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_241CD7740();
  uint64_t v10 = *(void *)(v40 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v40);
  uint64_t v37 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD7690();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BF3AE8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v46 = v16;
  uint64_t v47 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v39 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BF3B7C();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v48 = v19;
  uint64_t v49 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v42 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B62B88((uint64_t)v15);
  uint64_t v22 = sub_241A34BB0(a1, (uint64_t)v15, v38, a5);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(void *)&v51[0] = v22;
  sub_241A6853C();
  sub_241C1090C(&qword_26B02EA48, (void (*)(uint64_t))sub_241A6853C);
  sub_241CDA760();
  swift_release();
  unint64_t v23 = v37;
  uint64_t v24 = a1;
  uint64_t v25 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v37, v24, v40);
  uint64_t v26 = v41;
  sub_241C1F8E8(a2, v41, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  sub_241A37260(v45, (uint64_t)v51);
  unint64_t v27 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v28 = (v11 + *(unsigned __int8 *)(v44 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v29 = (v43 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v30 + v27, v23, v25);
  sub_241C1F9E8(v26, v30 + v28, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  *(void *)(v30 + v29) = v50;
  sub_241A5598C(v51, v30 + ((v29 + 15) & 0xFFFFFFFFFFFFFFF8));
  sub_241CDA4F0();
  sub_241C20698(0, &qword_26B032720, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDCF0]);
  sub_241C1090C(&qword_26B032508, (void (*)(uint64_t))sub_241BF3AE8);
  sub_241C1D290((unint64_t *)&qword_26B038970, &qword_26B032720, (uint64_t (*)(uint64_t))sub_241B6F648);
  uint64_t v31 = v42;
  uint64_t v32 = v46;
  uint64_t v33 = v39;
  sub_241CDA840();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v32);
  sub_241C1090C(&qword_26B032550, (void (*)(uint64_t))sub_241BF3B7C);
  uint64_t v34 = v48;
  uint64_t v35 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v34);
  return v35;
}

uint64_t static TrendSummaryModelGenerating.makePublisher(generatorContext:request:trendAnalysisEngine:cloudSyncObserverFactory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v61 = a7;
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t v59 = a3;
  uint64_t v47 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v58 = *(void *)(v56 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v54 = (char *)&v46 - v10;
  uint64_t v53 = sub_241CD7740();
  uint64_t v48 = *(void *)(v53 - 8);
  uint64_t v55 = *(void *)(v48 + 64);
  MEMORY[0x270FA5388](v53);
  uint64_t v50 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD7690();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BF3AE8();
  uint64_t v60 = v16;
  uint64_t v62 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v49 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BF3B7C();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v63 = v18;
  uint64_t v64 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v57 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v24 = a2;
  uint64_t v25 = v21;
  uint64_t v46 = v21;
  v23(a1, v21, AssociatedConformanceWitness);
  uint64_t v26 = a1;
  uint64_t v27 = sub_241A34BB0(a1, (uint64_t)v15, v51, v52);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(void *)&v66[0] = v27;
  sub_241A6853C();
  sub_241C1090C(&qword_26B02EA48, (void (*)(uint64_t))sub_241A6853C);
  sub_241CDA760();
  swift_release();
  uint64_t v28 = v48;
  unint64_t v29 = v50;
  uint64_t v30 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v50, v26, v53);
  uint64_t v31 = v56;
  uint64_t v32 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v54, v24, v25);
  sub_241A37260(v59, (uint64_t)v66);
  uint64_t v33 = v28;
  unint64_t v34 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v35 = v31;
  unint64_t v36 = (v55 + v34 + *(unsigned __int8 *)(v31 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v37 = (v58 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  uint64_t v39 = v61;
  *(void *)(v38 + 16) = v47;
  *(void *)(v38 + 24) = v39;
  (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v38 + v34, v29, v30);
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v38 + v36, v32, v46);
  *(void *)(v38 + v37) = v65;
  sub_241A5598C(v66, v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8));
  sub_241CDA4F0();
  sub_241C20698(0, &qword_26B032720, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDCF0]);
  sub_241C1090C(&qword_26B032508, (void (*)(uint64_t))sub_241BF3AE8);
  sub_241C1D290((unint64_t *)&qword_26B038970, &qword_26B032720, (uint64_t (*)(uint64_t))sub_241B6F648);
  uint64_t v40 = v57;
  uint64_t v41 = v60;
  uint64_t v42 = v49;
  sub_241CDA840();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v42, v41);
  sub_241C1090C(&qword_26B032550, (void (*)(uint64_t))sub_241BF3B7C);
  uint64_t v43 = v63;
  uint64_t v44 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v40, v43);
  return v44;
}

uint64_t sub_241C11E14@<X0>(void *a1@<X0>, void (*a2)(unsigned char *, uint64_t)@<X1>, int a3@<W2>, uint64_t a4@<X3>, void (*a5)(unsigned char *, uint64_t, uint64_t)@<X4>, void *a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>)
{
  unint64_t v91 = a8;
  id v81 = a6;
  uint64_t v82 = a7;
  uint64_t v88 = a4;
  uint64_t v89 = a5;
  int v83 = a3;
  os_log_t v87 = a2;
  uint64_t v92 = sub_241CD9B80();
  uint64_t v86 = *(void *)(v92 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v92);
  uint64_t v13 = &v73[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = &v73[-v15];
  MEMORY[0x270FA5388](v14);
  uint64_t v84 = &v73[-v17];
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = &v73[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v20);
  uint64_t v85 = &v73[-v23];
  sub_241A311E0(a1, a1[3]);
  uint64_t v24 = v90;
  uint64_t result = sub_241CD9C50();
  if (!v24)
  {
    id v76 = v13;
    id v77 = v16;
    uint64_t v90 = 0;
    uint64_t v79 = v22;
    uint64_t v80 = v19;
    uint64_t v78 = v18;
    sub_241CDA180();
    uint64_t v26 = v86;
    uint64_t v27 = (unsigned char *)(v86 + 16);
    uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v86 + 16);
    uint64_t v88 = a9;
    v28(v84, a9, v92);
    swift_bridgeObjectRetain_n();
    id v29 = v81;
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB670();
    int v32 = v31;
    BOOL v33 = os_log_type_enabled(v30, v31);
    uint64_t v89 = v28;
    if (v33)
    {
      uint64_t v34 = swift_slowAlloc();
      os_log_t v75 = v30;
      uint64_t v35 = v34;
      id v81 = (id)swift_slowAlloc();
      uint64_t v94 = (uint64_t)v81;
      *(_DWORD *)uint64_t v35 = 136315906;
      unint64_t v36 = v91;
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_241A33FE4(v82, v36, &v94);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      int v74 = v32;
      *(_WORD *)(v35 + 12) = 2080;
      id v37 = objc_msgSend(v29, sel_sensitiveLoggingIdentifier);
      uint64_t v38 = v27;
      uint64_t v39 = sub_241CDB0D0();
      unint64_t v41 = v40;

      uint64_t v42 = v39;
      uint64_t v27 = v38;
      uint64_t v93 = sub_241A33FE4(v42, v41, &v94);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 22) = 2080;
      uint64_t v43 = sub_241CD9FA0();
      uint64_t v93 = sub_241A33FE4(v43, v44, &v94);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 32) = 2080;
      uint64_t v45 = v84;
      uint64_t v46 = sub_241C13954();
      uint64_t v93 = sub_241A33FE4(v46, v47, &v94);
      uint64_t v28 = v89;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      os_log_t v87 = *(void (**)(unsigned char *, uint64_t))(v86 + 8);
      v87(v45, v92);
      os_log_t v48 = v75;
      _os_log_impl(&dword_241A23000, v75, (os_log_type_t)v74, "%s_%s: trend engine returned result for %s (summarized): %s", (uint8_t *)v35, 0x2Au);
      id v49 = v81;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      os_log_t v87 = *(void (**)(unsigned char *, uint64_t))(v26 + 8);
      v87(v84, v92);
    }
    uint64_t v50 = *(void (**)(unsigned char *, uint64_t))(v80 + 8);
    uint64_t v51 = v78;
    v50(v85, v78);
    uint64_t v52 = v79;
    uint64_t v53 = v77;
    sub_241CDA180();
    v28(v53, v88, v92);
    swift_bridgeObjectRetain_n();
    id v54 = v29;
    uint64_t v55 = v53;
    uint64_t v56 = sub_241CDA190();
    uint64_t v57 = v27;
    os_log_type_t v58 = sub_241CDB670();
    if (os_log_type_enabled(v56, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v85 = v57;
      uint64_t v60 = v59;
      uint64_t v88 = swift_slowAlloc();
      uint64_t v94 = v88;
      *(_DWORD *)uint64_t v60 = 136315906;
      unint64_t v61 = v91;
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_241A33FE4(v82, v61, &v94);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v60 + 12) = 2080;
      id v62 = objc_msgSend(v54, sel_sensitiveLoggingIdentifier);
      uint64_t v63 = sub_241CDB0D0();
      unint64_t v65 = v64;

      uint64_t v93 = sub_241A33FE4(v63, v65, &v94);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 22) = 2080;
      uint64_t v66 = sub_241CD9FA0();
      uint64_t v93 = sub_241A33FE4(v66, v67, &v94);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 32) = 2080;
      unint64_t v68 = v77;
      uint64_t v69 = v92;
      v89(v76, (uint64_t)v77, v92);
      uint64_t v70 = sub_241CDB140();
      uint64_t v93 = sub_241A33FE4(v70, v71, &v94);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      v87(v68, v69);
      _os_log_impl(&dword_241A23000, v56, v58, "%s_%s: results for %s: %s", (uint8_t *)v60, 0x2Au);
      uint64_t v72 = v88;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v72, -1, -1);
      MEMORY[0x245637F20](v60, -1, -1);

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v80 + 8))(v79, v78);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v87(v55, v92);

      return ((uint64_t (*)(unsigned char *, uint64_t))v50)(v52, v51);
    }
  }
  return result;
}

void *sub_241C125DC(void *a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, void *a6)
{
  id v146 = a6;
  id v147 = a1;
  uint64_t v149 = a5;
  unsigned int v148 = a4;
  uint64_t v142 = a2;
  sub_241C20740(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v150 = (char *)&v132 - v8;
  sub_241C1E8D8(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v143 = (uint64_t)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C1FA50(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v152 = (char *)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C1FA84(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v136 = (char *)&v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  id v135 = (char *)&v132 - v17;
  MEMORY[0x270FA5388](v16);
  os_log_type_t v133 = (char *)&v132 - v18;
  sub_241C1FAB8(0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  unint64_t v139 = (char *)&v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v151 = (uint64_t)&v132 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v157 = (uint64_t)&v132 - v24;
  uint64_t v25 = sub_241CD9910();
  uint64_t v155 = *(void *)(v25 - 8);
  uint64_t v156 = v25;
  MEMORY[0x270FA5388](v25);
  id v144 = (char *)&v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C1F8B4(0);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  os_log_type_t v140 = (char *)&v132 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v145 = (uint64_t)&v132 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v132 - v33;
  MEMORY[0x270FA5388](v32);
  unint64_t v36 = (char *)&v132 - v35;
  sub_241C1F9B4(0);
  uint64_t v38 = MEMORY[0x270FA5388](v37 - 8);
  uint64_t v138 = (char *)&v132 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  unint64_t v137 = (char *)&v132 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v134 = (char *)&v132 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v46 = (char *)&v132 - v45;
  MEMORY[0x270FA5388](v44);
  os_log_t v48 = (char *)&v132 - v47;
  sub_241A68508(0);
  uint64_t v50 = MEMORY[0x270FA5388](v49 - 8);
  uint64_t v52 = (char *)&v132 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v50);
  id v54 = (char *)&v132 - v53;
  sub_241C1F8E8(a3, (uint64_t)v36, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v55 = sub_241CD9B80();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v159 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  uint64_t v160 = v56 + 48;
  int v57 = v159(v36, 1, v55);
  uint64_t v58 = a3;
  uint64_t v153 = a3;
  uint64_t v154 = v56;
  uint64_t v59 = v155;
  uint64_t v158 = v55;
  if (v57 == 1)
  {
    sub_241C21DE8((uint64_t)v36, (uint64_t (*)(void))sub_241C1F8B4);
    uint64_t v60 = v58;
LABEL_5:
    uint64_t v63 = v145;
    uint64_t v64 = v151;
    uint64_t v65 = sub_241CD6810();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v54, 1, 1, v65);
    uint64_t v66 = v157;
    goto LABEL_7;
  }
  sub_241CD9B10();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v55);
  uint64_t v61 = sub_241CD9940();
  uint64_t v62 = *(void *)(v61 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v48, 1, v61) == 1)
  {
    sub_241C21DE8((uint64_t)v48, (uint64_t (*)(void))sub_241C1F9B4);
    uint64_t v60 = v153;
    uint64_t v59 = v155;
    goto LABEL_5;
  }
  unint64_t v67 = v144;
  sub_241CD9930();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v48, v61);
  sub_241CD9900();
  uint64_t v59 = v155;
  (*(void (**)(char *, uint64_t))(v155 + 8))(v67, v156);
  uint64_t v68 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v54, 0, 1, v68);
  uint64_t v66 = v157;
  uint64_t v60 = v153;
  uint64_t v63 = v145;
  uint64_t v64 = v151;
LABEL_7:
  uint64_t v145 = sub_241BC2FBC((uint64_t)v54);
  LODWORD(v144) = v69;
  sub_241C21DE8((uint64_t)v54, (uint64_t (*)(void))sub_241A68508);
  sub_241C1F8E8(v60, (uint64_t)v34, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v70 = v158;
  if (v159(v34, 1, v158) == 1)
  {
    sub_241C21DE8((uint64_t)v34, (uint64_t (*)(void))sub_241C1F8B4);
LABEL_11:
    uint64_t v73 = v156;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v66, 1, 1, v156);
    goto LABEL_16;
  }
  sub_241CD9B10();
  (*(void (**)(char *, uint64_t))(v154 + 8))(v34, v70);
  uint64_t v71 = sub_241CD9940();
  uint64_t v72 = *(void *)(v71 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v46, 1, v71) == 1)
  {
    sub_241C21DE8((uint64_t)v46, (uint64_t (*)(void))sub_241C1F9B4);
    uint64_t v60 = v153;
    uint64_t v70 = v158;
    uint64_t v64 = v151;
    goto LABEL_11;
  }
  uint64_t v74 = sub_241CD9920();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v46, v71);
  uint64_t v73 = v156;
  if (*(void *)(v74 + 16))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v59 + 16))(v66, v74 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80)), v156);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v66, 0, 1, v73);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v66, 1, 1, v156);
  }
  swift_bridgeObjectRelease();
  uint64_t v60 = v153;
  uint64_t v70 = v158;
  uint64_t v64 = v151;
LABEL_16:
  sub_241C1F8E8(v66, v64, (uint64_t (*)(void))sub_241C1FAB8);
  os_log_t v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  if (v75(v64, 1, v73) == 1)
  {
    sub_241C21DE8(v64, (uint64_t (*)(void))sub_241C1FAB8);
    uint64_t v76 = sub_241CD6810();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v52, 1, 1, v76);
  }
  else
  {
    sub_241CD9900();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v64, v73);
    uint64_t v77 = sub_241CD6810();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v52, 0, 1, v77);
  }
  uint64_t v151 = sub_241BC2FBC((uint64_t)v52);
  int v141 = v78;
  sub_241C21DE8((uint64_t)v52, (uint64_t (*)(void))sub_241A68508);
  uint64_t v79 = v143;
  sub_241C1F8E8(v142, v143, (uint64_t (*)(void))sub_241C1E8D8);
  uint64_t v80 = sub_241CD9B40();
  uint64_t v81 = *(void *)(v80 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80) == 1)
  {
    uint64_t v82 = sub_241C1E8D8;
  }
  else
  {
    sub_241CD9B30();
    uint64_t v83 = (uint64_t)v152;
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v79, v80);
    uint64_t v84 = sub_241CD9B20();
    uint64_t v85 = *(void *)(v84 - 8);
    int v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84);
    uint64_t v87 = (uint64_t)v150;
    if (v86 == 1)
    {
      sub_241C21DE8(v83, (uint64_t (*)(void))sub_241C1FA50);
      uint64_t v88 = 0;
      uint64_t v89 = 0;
      goto LABEL_27;
    }
    uint64_t v79 = (uint64_t)v134;
    sub_241CD9B10();
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v83, v84);
    uint64_t v90 = sub_241CD9940();
    uint64_t v91 = *(void *)(v90 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v79, 1, v90) != 1)
    {
      os_log_type_t v107 = v133;
      sub_241CD98A0();
      uint64_t v108 = (uint64_t)v107;
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v79, v90);
      uint64_t v109 = sub_241CD9890();
      uint64_t v110 = *(void *)(v109 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109) == 1)
      {
        sub_241C21DE8(v108, (uint64_t (*)(void))sub_241C1FA84);
        uint64_t v88 = 0;
        uint64_t v89 = 0;
      }
      else
      {
        uint64_t v88 = sub_241CD9850();
        uint64_t v89 = v131;
        (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v108, v109);
      }
      uint64_t v66 = v157;
      uint64_t v70 = v158;
      goto LABEL_26;
    }
    uint64_t v82 = sub_241C1F9B4;
  }
  sub_241C21DE8(v79, (uint64_t (*)(void))v82);
  uint64_t v88 = 0;
  uint64_t v89 = 0;
LABEL_26:
  uint64_t v87 = (uint64_t)v150;
LABEL_27:
  sub_241C1F8E8(v60, v63, (uint64_t (*)(void))sub_241C1F8B4);
  if (v159((char *)v63, 1, v70) == 1)
  {
    sub_241C21DE8(v63, (uint64_t (*)(void))sub_241C1F8B4);
    uint64_t v92 = 0;
    uint64_t v93 = 0;
    if (v89) {
      goto LABEL_29;
    }
LABEL_45:
    uint64_t v105 = (uint64_t)v139;
    uint64_t v106 = v156;
    if (v93)
    {
      swift_bridgeObjectRelease();
      char v94 = 1;
    }
    else
    {
      char v94 = 0;
    }
    uint64_t v104 = (uint64_t)v140;
    goto LABEL_49;
  }
  id v95 = v137;
  sub_241CD9B10();
  uint64_t v96 = (uint64_t)v95;
  (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v63, v70);
  uint64_t v97 = sub_241CD9940();
  uint64_t v98 = *(void *)(v97 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97) == 1)
  {
    sub_241C21DE8(v96, (uint64_t (*)(void))sub_241C1F9B4);
    uint64_t v92 = 0;
    uint64_t v93 = 0;
    uint64_t v60 = v153;
    if (v89) {
      goto LABEL_29;
    }
    goto LABEL_45;
  }
  unint64_t v99 = v135;
  sub_241CD98A0();
  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v96, v97);
  uint64_t v100 = (uint64_t)v99;
  uint64_t v101 = sub_241CD9890();
  uint64_t v102 = *(void *)(v101 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101) == 1)
  {
    sub_241C21DE8(v100, (uint64_t (*)(void))sub_241C1FA84);
    uint64_t v92 = 0;
    uint64_t v93 = 0;
  }
  else
  {
    uint64_t v92 = sub_241CD9850();
    uint64_t v93 = v111;
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v100, v101);
  }
  uint64_t v66 = v157;
  uint64_t v60 = v153;
  if (!v89) {
    goto LABEL_45;
  }
LABEL_29:
  if (v93)
  {
    if (v88 == v92 && v89 == v93)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v94 = 0;
    }
    else
    {
      char v103 = sub_241CDC100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v94 = v103 ^ 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    char v94 = 1;
  }
  uint64_t v104 = (uint64_t)v140;
  uint64_t v105 = (uint64_t)v139;
  uint64_t v106 = v156;
LABEL_49:
  sub_241C1F8E8(v66, v105, (uint64_t (*)(void))sub_241C1FAB8);
  if (v75(v105, 1, v106) == 1)
  {
    sub_241C21DE8(v105, (uint64_t (*)(void))sub_241C1FAB8);
    uint64_t v112 = sub_241CD98D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v87, 1, 1, v112);
  }
  else
  {
    sub_241CD98F0();
    (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v105, v106);
  }
  uint64_t v113 = v154;
  sub_241C1F8E8(v60, v104, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v114 = v158;
  if (v159((char *)v104, 1, v158) == 1)
  {
    unint64_t v115 = sub_241C1F8B4;
    uint64_t v116 = v104;
  }
  else
  {
    uint64_t v117 = v138;
    sub_241CD9B10();
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v104, v114);
    uint64_t v118 = sub_241CD9940();
    uint64_t v119 = *(void *)(v118 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48))(v117, 1, v118) == 1)
    {
      unint64_t v115 = sub_241C1F9B4;
      uint64_t v116 = (uint64_t)v117;
    }
    else
    {
      unint64_t v120 = v136;
      sub_241CD98A0();
      uint64_t v121 = (uint64_t)v120;
      (*(void (**)(char *, uint64_t))(v119 + 8))(v117, v118);
      uint64_t v122 = sub_241CD9890();
      uint64_t v123 = *(void *)(v122 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122) != 1)
      {
        char v124 = sub_241CD9860();
        (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v121, v122);
        goto LABEL_59;
      }
      unint64_t v115 = sub_241C1FA84;
      uint64_t v116 = v121;
    }
  }
  sub_241C21DE8(v116, (uint64_t (*)(void))v115);
  char v124 = 0;
LABEL_59:
  int v125 = v141 & 1;
  char v126 = v144 & 1;
  type metadata accessor for TrendGenerationAnalyticsEvent();
  swift_allocObject();
  id v127 = v146;
  id v128 = v147;
  uint64_t v129 = sub_241BC34FC(v128, v148, v149, v87, v145, v126, v151, v125, v94 & 1, v124 & 1, (uint64_t)v127);

  sub_241C21DE8(v157, (uint64_t (*)(void))sub_241C1FAB8);
  return v129;
}

uint64_t sub_241C13954()
{
  sub_241C1E8D8(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C1F9B4(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v13 - v7;
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_241CDBE00();
  sub_241CDB180();
  sub_241CD9B10();
  uint64_t v9 = sub_241CD9940();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  v10(v8, 1, v9);
  sub_241C21DE8((uint64_t)v8, (uint64_t (*)(void))sub_241C1F9B4);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CD9B50();
  v10(v6, 1, v9);
  sub_241C21DE8((uint64_t)v6, (uint64_t (*)(void))sub_241C1F9B4);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CD9B70();
  uint64_t v11 = sub_241CD9B40();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v2, 1, v11);
  sub_241C21DE8((uint64_t)v2, (uint64_t (*)(void))sub_241C1E8D8);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v13[0];
}

uint64_t sub_241C13C7C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v74 = a5;
  uint64_t v86 = a4;
  sub_241C20698(0, &qword_26B032838, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDE08]);
  uint64_t v83 = *(uint64_t (**)(uint64_t))(v8 - 8);
  uint64_t v84 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v82 = (void (**)(char *, uint64_t))((char *)&v70 - v9);
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v80 = *(void *)(v10 - 8);
  uint64_t v81 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v87 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD7740();
  uint64_t v88 = *(void *)(v12 - 8);
  uint64_t v89 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v76 = (char *)&v70 - v16;
  sub_241C20608(0, &qword_26B0323E8, (void (*)(uint64_t))sub_241C1DB54, sub_241B6F648, (void (*)(void))sub_241C1DBCC);
  uint64_t v78 = *(void *)(v17 - 8);
  uint64_t v79 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v77 = (char *)&v70 - v18;
  uint64_t v73 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v19 = *(void *)(v73 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v21 = MEMORY[0x270FA5388](v73);
  uint64_t v22 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v85 = (uint64_t (*)(uint64_t))((char *)&v70 - v24);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v70 - v25;
  sub_241C1DC00();
  uint64_t v28 = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v70 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v72 = a2;
    uint64_t v71 = a3;
    uint64_t v32 = v86;
    uint64_t v82 = v29;
    uint64_t v87 = (char *)sub_241C0FC0C(a2, a3, v74);
    uint64_t v90 = v87;
    uint64_t v83 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request;
    sub_241C1F8E8(a3, (uint64_t)v26, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
    uint64_t v33 = *(unsigned __int8 *)(v19 + 80);
    uint64_t v34 = (v33 + 16) & ~v33;
    uint64_t v84 = v33 | 7;
    uint64_t v35 = swift_allocObject();
    uint64_t v85 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request;
    sub_241C1F9E8((uint64_t)v26, v35 + v34, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
    *(void *)(v35 + ((v20 + v34 + 7) & 0xFFFFFFFFFFFFFFF8)) = v32;
    sub_241C20698(0, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
    sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
    sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
    sub_241CDA710();
    swift_release();
    sub_241C1090C(&qword_26B0323B0, (void (*)(uint64_t))sub_241C1DC00);
    uint64_t v36 = sub_241CDA6D0();
    v82[1](v31, v28);
    uint64_t v90 = (char *)v36;
    sub_241C1F8E8(v71, (uint64_t)v26, v83);
    uint64_t v38 = v88;
    uint64_t v37 = v89;
    uint64_t v39 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v76, v72, v89);
    uint64_t v40 = (v33 + 24) & ~v33;
    unint64_t v41 = (v40 + v20 + *(unsigned __int8 *)(v38 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = v85;
    *(void *)(v42 + 16) = v86;
    sub_241C1F9E8((uint64_t)v26, v42 + v40, v43);
    (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v42 + v41, v39, v37);
    sub_241C1DB54();
    sub_241B6F648(0);
    sub_241C1DBCC();
    uint64_t v44 = v77;
    sub_241CDA710();
    swift_release();
    sub_241C1E264();
    uint64_t v45 = v79;
    uint64_t v46 = sub_241CDA6D0();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v44, v45);
  }
  else
  {
    sub_241CDA0F0();
    (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v15, a2, v89);
    sub_241C1F8E8(a3, (uint64_t)v85, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
    uint64_t v47 = a3;
    os_log_t v48 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_241C1F8E8(v47, (uint64_t)v22, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
    uint64_t v49 = sub_241CDA190();
    os_log_type_t v50 = sub_241CDB670();
    int v51 = v50;
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v52 = swift_slowAlloc();
      LODWORD(v79) = v51;
      uint64_t v53 = v52;
      uint64_t v54 = swift_slowAlloc();
      uint64_t v86 = v54;
      *(_DWORD *)uint64_t v53 = 136315650;
      uint64_t v90 = 0;
      unint64_t v91 = 0xE000000000000000;
      v92[0] = v54;
      sub_241CDBE00();
      swift_bridgeObjectRelease();
      uint64_t v90 = (char *)0xD00000000000002FLL;
      unint64_t v91 = 0x8000000241CE3C60;
      uint64_t v55 = (void *)sub_241CD76E0();
      sub_241CD73E0();

      sub_241CDB180();
      swift_bridgeObjectRelease();
      sub_241CDB180();
      sub_241CDB180();
      uint64_t v90 = (char *)sub_241A33FE4((uint64_t)v90, v91, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v15, v89);
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v56 = v73;
      int v57 = v85;
      uint64_t v58 = (void *)sub_241CD7770();
      id v59 = objc_msgSend(v58, sel_sensitiveLoggingIdentifier);

      uint64_t v60 = sub_241CDB0D0();
      unint64_t v62 = v61;

      uint64_t v90 = (char *)sub_241A33FE4(v60, v62, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C21DE8((uint64_t)v57, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
      *(_WORD *)(v53 + 22) = 2080;
      uint64_t v63 = (uint64_t *)&v48[*(int *)(v56 + 48)];
      uint64_t v64 = *v63;
      unint64_t v65 = v63[1];
      swift_bridgeObjectRetain();
      uint64_t v90 = (char *)sub_241A33FE4(v64, v65, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C21DE8((uint64_t)v48, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
      _os_log_impl(&dword_241A23000, v49, (os_log_type_t)v79, "%s_%s: First restore not concluded, doing nothing for %s", (uint8_t *)v53, 0x20u);
      uint64_t v66 = v86;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v66, -1, -1);
      MEMORY[0x245637F20](v53, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v88 + 8))(v15, v89);
      sub_241C21DE8((uint64_t)v85, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
      sub_241C21DE8((uint64_t)v22, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
    }

    (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v81);
    sub_241B6F648(0);
    unint64_t v67 = (char *)v82;
    sub_241CDA5E0();
    sub_241BF42B8();
    uint64_t v68 = v84;
    uint64_t v46 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v83 + 1))(v67, v68);
  }
  return v46;
}

uint64_t sub_241C14750(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v74 = a5;
  uint64_t v86 = a4;
  sub_241C20698(0, &qword_26B032838, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDE08]);
  uint64_t v83 = *(uint64_t (**)(uint64_t))(v8 - 8);
  uint64_t v84 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v82 = (void (**)(char *, uint64_t))((char *)&v70 - v9);
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v80 = *(void *)(v10 - 8);
  uint64_t v81 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v87 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD7740();
  uint64_t v88 = *(void *)(v12 - 8);
  uint64_t v89 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v76 = (char *)&v70 - v16;
  sub_241C20608(0, &qword_26B0323E8, (void (*)(uint64_t))sub_241C1DB54, sub_241B6F648, (void (*)(void))sub_241C1DBCC);
  uint64_t v78 = *(void *)(v17 - 8);
  uint64_t v79 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v77 = (char *)&v70 - v18;
  uint64_t v73 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  uint64_t v19 = *(void *)(v73 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v21 = MEMORY[0x270FA5388](v73);
  uint64_t v22 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v85 = (uint64_t (*)(uint64_t))((char *)&v70 - v24);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v70 - v25;
  sub_241C1DC00();
  uint64_t v28 = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v70 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v72 = a2;
    uint64_t v71 = a3;
    uint64_t v32 = v86;
    uint64_t v82 = v29;
    uint64_t v87 = (char *)sub_241C0FFF0(a2, a3, v74);
    uint64_t v90 = v87;
    uint64_t v83 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request;
    sub_241C1F8E8(a3, (uint64_t)v26, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
    uint64_t v33 = *(unsigned __int8 *)(v19 + 80);
    uint64_t v34 = (v33 + 16) & ~v33;
    uint64_t v84 = v33 | 7;
    uint64_t v35 = swift_allocObject();
    uint64_t v85 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request;
    sub_241C1F9E8((uint64_t)v26, v35 + v34, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
    *(void *)(v35 + ((v20 + v34 + 7) & 0xFFFFFFFFFFFFFFF8)) = v32;
    sub_241C20698(0, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
    sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
    sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
    sub_241CDA710();
    swift_release();
    sub_241C1090C(&qword_26B0323B0, (void (*)(uint64_t))sub_241C1DC00);
    uint64_t v36 = sub_241CDA6D0();
    v82[1](v31, v28);
    uint64_t v90 = (char *)v36;
    sub_241C1F8E8(v71, (uint64_t)v26, v83);
    uint64_t v38 = v88;
    uint64_t v37 = v89;
    uint64_t v39 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v76, v72, v89);
    uint64_t v40 = (v33 + 24) & ~v33;
    unint64_t v41 = (v40 + v20 + *(unsigned __int8 *)(v38 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = v85;
    *(void *)(v42 + 16) = v86;
    sub_241C1F9E8((uint64_t)v26, v42 + v40, v43);
    (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v42 + v41, v39, v37);
    sub_241C1DB54();
    sub_241B6F648(0);
    sub_241C1DBCC();
    uint64_t v44 = v77;
    sub_241CDA710();
    swift_release();
    sub_241C1E264();
    uint64_t v45 = v79;
    uint64_t v46 = sub_241CDA6D0();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v44, v45);
  }
  else
  {
    sub_241CDA0F0();
    (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v15, a2, v89);
    sub_241C1F8E8(a3, (uint64_t)v85, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
    uint64_t v47 = a3;
    os_log_t v48 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_241C1F8E8(v47, (uint64_t)v22, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
    uint64_t v49 = sub_241CDA190();
    os_log_type_t v50 = sub_241CDB670();
    int v51 = v50;
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v52 = swift_slowAlloc();
      LODWORD(v79) = v51;
      uint64_t v53 = v52;
      uint64_t v54 = swift_slowAlloc();
      uint64_t v86 = v54;
      *(_DWORD *)uint64_t v53 = 136315650;
      uint64_t v90 = 0;
      unint64_t v91 = 0xE000000000000000;
      v92[0] = v54;
      sub_241CDBE00();
      swift_bridgeObjectRelease();
      uint64_t v90 = (char *)0xD00000000000002BLL;
      unint64_t v91 = 0x8000000241CE3CE0;
      uint64_t v55 = (void *)sub_241CD76E0();
      sub_241CD73E0();

      sub_241CDB180();
      swift_bridgeObjectRelease();
      sub_241CDB180();
      sub_241CDB180();
      uint64_t v90 = (char *)sub_241A33FE4((uint64_t)v90, v91, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v15, v89);
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v56 = v73;
      int v57 = v85;
      uint64_t v58 = (void *)sub_241CD7770();
      id v59 = objc_msgSend(v58, sel_sensitiveLoggingIdentifier);

      uint64_t v60 = sub_241CDB0D0();
      unint64_t v62 = v61;

      uint64_t v90 = (char *)sub_241A33FE4(v60, v62, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C21DE8((uint64_t)v57, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
      *(_WORD *)(v53 + 22) = 2080;
      uint64_t v63 = (uint64_t *)&v48[*(int *)(v56 + 44)];
      uint64_t v64 = *v63;
      unint64_t v65 = v63[1];
      swift_bridgeObjectRetain();
      uint64_t v90 = (char *)sub_241A33FE4(v64, v65, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C21DE8((uint64_t)v48, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
      _os_log_impl(&dword_241A23000, v49, (os_log_type_t)v79, "%s_%s: First restore not concluded, doing nothing for %s", (uint8_t *)v53, 0x20u);
      uint64_t v66 = v86;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v66, -1, -1);
      MEMORY[0x245637F20](v53, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v88 + 8))(v15, v89);
      sub_241C21DE8((uint64_t)v85, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
      sub_241C21DE8((uint64_t)v22, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
    }

    (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v81);
    sub_241B6F648(0);
    unint64_t v67 = (char *)v82;
    sub_241CDA5E0();
    sub_241BF42B8();
    uint64_t v68 = v84;
    uint64_t v46 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v83 + 1))(v67, v68);
  }
  return v46;
}

uint64_t sub_241C15224@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, NSObject *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v86 = a5;
  uint64_t v93 = a3;
  uint64_t v98 = a8;
  sub_241C20698(0, &qword_26B032838, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDE08]);
  uint64_t v90 = *((void *)v13 - 1);
  unint64_t v91 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v89 = (char *)&v83 - v14;
  uint64_t v15 = sub_241CDA1A0();
  uint64_t v87 = *(void *)(v15 - 8);
  uint64_t v88 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v97 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_241CD7740();
  uint64_t v99 = *(void *)(v17 - 8);
  uint64_t v100 = v17;
  uint64_t v18 = *(void *)(v99 + 64);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  char v94 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v92 = (char *)&v83 - v20;
  uint64_t v21 = a7;
  Class isa = a7[1].isa;
  uint64_t v22 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  uint64_t v25 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v96 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  id v95 = (char *)&v83 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v83 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v83 - v31;
  sub_241C20608(0, &qword_26B0323E8, (void (*)(uint64_t))sub_241C1DB54, sub_241B6F648, (void (*)(void))sub_241C1DBCC);
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  if (*a1 == 1)
  {
    uint64_t v96 = (char *)v34;
    uint64_t v97 = v36;
    uint64_t v37 = a2;
    uint64_t v38 = a2;
    uint64_t v39 = a4;
    uint64_t v40 = v93;
    os_log_t v84 = v21;
    unint64_t v91 = (char *)&v83 - v35;
    id v95 = (char *)static TrendSummaryModelGenerating.trendValuesPublisher(generatorContext:request:trendAnalysisEngine:)(v37, v93, v86, v22, (uint64_t)v21);
    char v94 = (char *)sub_241C15BCC((uint64_t)v95, v41, v40, v22, (uint64_t)v21);
    v103[0] = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v32, v40, AssociatedTypeWitness);
    uint64_t v42 = v99;
    uint64_t v43 = v38;
    uint64_t v44 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v92, v43, v100);
    unint64_t v45 = (*(unsigned __int8 *)(v23 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    unint64_t v46 = (v24 + *(unsigned __int8 *)(v42 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    uint64_t v47 = (char *)swift_allocObject();
    os_log_t v48 = v84;
    *((void *)v47 + 2) = v22;
    *((void *)v47 + 3) = v48;
    *((void *)v47 + 4) = v39;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v47[v45], v32, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v47[v46], v92, v44);
    sub_241C1DB54();
    sub_241B6F648(0);
    sub_241C1DBCC();
    uint64_t v49 = v91;
    sub_241CDA710();
    swift_release();
    sub_241C1E264();
    os_log_type_t v50 = v96;
    uint64_t v51 = sub_241CDA6D0();
    swift_release();
    swift_release();
    uint64_t result = (*((uint64_t (**)(char *, char *))v97 + 1))(v49, v50);
  }
  else
  {
    uint64_t v92 = (char *)v22;
    sub_241CDA0F0();
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v94, a2, v100);
    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v54 = v93;
    uint64_t v55 = AssociatedTypeWitness;
    v53(v30, v93, AssociatedTypeWitness);
    v53(v95, v54, v55);
    v53(v96, v54, v55);
    uint64_t v56 = sub_241CDA190();
    os_log_type_t v57 = sub_241CDB670();
    int v58 = v57;
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      v103[0] = v93;
      *(_DWORD *)uint64_t v59 = 136315650;
      uint64_t v60 = v30;
      uint64_t v61 = AssociatedTypeWitness;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      LODWORD(v86) = v58;
      uint64_t v63 = AssociatedConformanceWitness;
      uint64_t v64 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
      os_log_t v84 = v56;
      v64(v61, AssociatedConformanceWitness);
      unint64_t v65 = v94;
      uint64_t v66 = static SummaryModelGenerating.logPrefix(_:_:)();
      uint64_t v102 = sub_241A33FE4(v66, v67, v103);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v65, v100);
      uint64_t v68 = *(void (**)(char *, uint64_t))(v23 + 8);
      v68(v60, v61);
      *(_WORD *)(v59 + 12) = 2080;
      uint64_t v100 = v59 + 14;
      uint64_t v69 = (uint64_t)v95;
      uint64_t v70 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v63 + 24))(v61, v63);
      id v71 = objc_msgSend(v70, sel_sensitiveLoggingIdentifier);

      uint64_t v72 = sub_241CDB0D0();
      unint64_t v74 = v73;

      uint64_t v102 = sub_241A33FE4(v72, v74, v103);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      v68((char *)v69, v61);
      *(_WORD *)(v59 + 22) = 2080;
      uint64_t v75 = v96;
      uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 32))(v61, v63);
      uint64_t v102 = sub_241A33FE4(v76, v77, v103);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      v68(v75, v61);
      uint64_t v56 = v84;
      _os_log_impl(&dword_241A23000, v84, (os_log_type_t)v86, "%s_%s: First restore not concluded, doing nothing for %s", (uint8_t *)v59, 0x20u);
      uint64_t v78 = v93;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v78, -1, -1);
      MEMORY[0x245637F20](v59, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v94, v100);
      uint64_t v79 = *(void (**)(char *, uint64_t))(v23 + 8);
      uint64_t v80 = AssociatedTypeWitness;
      v79(v30, AssociatedTypeWitness);
      v79(v95, v80);
      v79(v96, v80);
    }

    (*(void (**)(char *, uint64_t))(v87 + 8))(v97, v88);
    sub_241B6F648(0);
    uint64_t v81 = v89;
    sub_241CDA5E0();
    sub_241BF42B8();
    uint64_t v82 = v91;
    uint64_t v51 = sub_241CDA6D0();
    uint64_t result = (*(uint64_t (**)(char *, char *))(v90 + 8))(v81, v82);
  }
  *uint64_t v98 = v51;
  return result;
}

uint64_t sub_241C15BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)v23 - v12;
  sub_241C1DC00();
  uint64_t v24 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a3, AssociatedTypeWitness);
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a4;
  *(void *)(v19 + 24) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v18, v13, AssociatedTypeWitness);
  *(void *)(v19 + ((v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = v23[1];
  sub_241C20698(0, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
  sub_241CDA710();
  swift_release();
  sub_241C1090C(&qword_26B0323B0, (void (*)(uint64_t))sub_241C1DC00);
  uint64_t v20 = v24;
  uint64_t v21 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v20);
  return v21;
}

uint64_t sub_241C15EBC(uint64_t a1, uint64_t a2)
{
  sub_241C20608(0, (unint64_t *)&qword_26B032390, (void (*)(uint64_t))sub_241B664CC, sub_241C108A4, (void (*)(void))sub_241C207A4);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)v29 - v6;
  uint64_t v7 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v30 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  v29[1] = v8;
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD7740();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C207D8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v33 = v14;
  uint64_t v34 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for StatisticTrendSummarySharableModelGenerator(0);
  uint64_t v32 = a2;
  uint64_t v39 = sub_241B632F8(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  uint64_t v31 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request;
  sub_241C1F8E8(a2, (uint64_t)v9, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v30 + 80);
  unint64_t v20 = (v12 + v19 + v18) & ~v19;
  uint64_t v30 = v19 | 7;
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v18, v13, v10);
  sub_241C1F9E8((uint64_t)v9, v21 + v20, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  sub_241C20894();
  sub_241B664CC();
  sub_241C1090C(&qword_268D43540, (void (*)(uint64_t))sub_241C20894);
  sub_241C207A4();
  sub_241CDA750();
  swift_release();
  swift_release();
  sub_241C1090C(&qword_268D43548, (void (*)(uint64_t))sub_241C207D8);
  uint64_t v22 = v33;
  uint64_t v23 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v22);
  uint64_t v39 = v23;
  sub_241C1F8E8(v32, (uint64_t)v9, v31);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v35;
  sub_241C1F9E8((uint64_t)v9, v24 + ((v19 + 24) & ~v19), type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  sub_241C108A4(0);
  uint64_t v25 = v36;
  sub_241CDA710();
  swift_release();
  sub_241C20E74();
  uint64_t v26 = v37;
  uint64_t v27 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v26);
  swift_release();
  return v27;
}

uint64_t sub_241C163E0(uint64_t a1, uint64_t a2)
{
  sub_241C20608(0, (unint64_t *)&qword_26B032390, (void (*)(uint64_t))sub_241B664CC, sub_241C108A4, (void (*)(void))sub_241C207A4);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v34 = (char *)v28 - v6;
  uint64_t v7 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  v28[1] = v9;
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD7740();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  sub_241C207D8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v31 = v14;
  uint64_t v32 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for SleepTrendSummarySharableModelGenerator(0);
  uint64_t v30 = a2;
  uint64_t v37 = sub_241C26F58(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  uint64_t v29 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request;
  sub_241C1F8E8(a2, (uint64_t)v10, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v8 + 80);
  v28[2] = v19 | 7;
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v20 + v18, (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  sub_241C1F9E8((uint64_t)v10, v20 + ((v13 + v19 + v18) & ~v19), type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  sub_241C20894();
  sub_241B664CC();
  sub_241C1090C(&qword_268D43540, (void (*)(uint64_t))sub_241C20894);
  sub_241C207A4();
  sub_241CDA750();
  swift_release();
  swift_release();
  sub_241C1090C(&qword_268D43548, (void (*)(uint64_t))sub_241C207D8);
  uint64_t v21 = v31;
  uint64_t v22 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v21);
  uint64_t v37 = v22;
  sub_241C1F8E8(v30, (uint64_t)v10, v29);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v33;
  sub_241C1F9E8((uint64_t)v10, v23 + ((v19 + 24) & ~v19), type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  sub_241C108A4(0);
  uint64_t v24 = v34;
  sub_241CDA710();
  swift_release();
  sub_241C20E74();
  uint64_t v25 = v35;
  uint64_t v26 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v25);
  swift_release();
  return v26;
}

uint64_t static TrendSummaryModelGenerating.trendAnalysisInputPublisher(generatorContext:request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a2;
  uint64_t v46 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v43 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v44 = AssociatedTypeWitness;
  uint64_t v45 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v33 = (char *)&v32 - v7;
  uint64_t v9 = sub_241CD7740();
  uint64_t v32 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v42 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v35 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  type metadata accessor for SummaryModelQueryOutput();
  sub_241A3DA64();
  uint64_t v12 = sub_241CDA510();
  uint64_t v40 = v12;
  uint64_t v13 = sub_241CDA510();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v38 = WitnessTable;
  uint64_t v39 = v13;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v48 = v12;
  uint64_t v49 = v13;
  uint64_t v50 = WitnessTable;
  uint64_t v51 = v37;
  uint64_t v15 = sub_241CDA430();
  uint64_t v41 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v34 = a4;
  unint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 48);
  uint64_t v36 = a1;
  uint64_t v20 = v46;
  uint64_t v19 = v47;
  uint64_t v48 = v18(a1, v47, v46, a4);
  uint64_t v21 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v35, a1, v9);
  uint64_t v22 = v43;
  uint64_t v23 = v8;
  uint64_t v24 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v23, v19, v44);
  unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v26 = (v42 + v25 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v20;
  uint64_t v28 = v34;
  *(void *)(v27 + 24) = v34;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v27 + v25, v21, v32);
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v27 + v26, v33, v24);
  sub_241CDA750();
  swift_release();
  swift_release();
  swift_getWitnessTable();
  uint64_t v29 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v15);
  uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v29, v36, v47, v46, v28);
  swift_release();
  return v30;
}

uint64_t sub_241C16D58(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C2070C(0);
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C20740(0, &qword_268D43550, (uint64_t (*)(uint64_t))sub_241C2070C, MEMORY[0x263EFDDF8]);
  uint64_t v10 = v9;
  uint64_t v55 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v53 = (char *)v44 - v11;
  uint64_t v50 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v50);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CD7740();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v51 = *(void *)(v18 - 8);
  uint64_t v52 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA180();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a2, v14);
  sub_241C1F8E8(a3, (uint64_t)v13, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  id v21 = a1;
  id v22 = a1;
  uint64_t v23 = sub_241CDA190();
  os_log_type_t v24 = sub_241CDB650();
  int v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v26 = swift_slowAlloc();
    os_log_t v46 = v23;
    uint64_t v27 = v26;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v47 = v28;
    *(_DWORD *)uint64_t v27 = 136315650;
    v44[1] = v27 + 4;
    uint64_t v56 = 0;
    unint64_t v57 = 0xE000000000000000;
    uint64_t v58 = v28;
    int v45 = v25;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v56 = 0xD00000000000002FLL;
    unint64_t v57 = 0x8000000241CE3C60;
    uint64_t v29 = (void *)sub_241CD76E0();
    sub_241CD73E0();
    uint64_t v48 = v10;
    uint64_t v49 = v7;

    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    sub_241CDB180();
    uint64_t v56 = sub_241A33FE4(v56, v57, &v58);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v30 = (void *)sub_241CD7770();
    id v31 = objc_msgSend(v30, sel_sensitiveLoggingIdentifier);

    uint64_t v32 = sub_241CDB0D0();
    unint64_t v34 = v33;

    uint64_t v10 = v48;
    uint64_t v56 = sub_241A33FE4(v32, v34, &v58);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C21DE8((uint64_t)v13, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
    *(_WORD *)(v27 + 22) = 2080;
    uint64_t v56 = (uint64_t)a1;
    id v35 = a1;
    sub_241A3DA64();
    uint64_t v36 = sub_241CDB120();
    uint64_t v56 = sub_241A33FE4(v36, v37, &v58);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    os_log_t v38 = v46;
    _os_log_impl(&dword_241A23000, v46, (os_log_type_t)v45, "%s_%s: error when querying data for trend: %s", (uint8_t *)v27, 0x20u);
    uint64_t v39 = v47;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v39, -1, -1);
    MEMORY[0x245637F20](v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    sub_241C21DE8((uint64_t)v13, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  }
  (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v52);
  uint64_t v40 = sub_241CDB5B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v54, 1, 1, v40);
  uint64_t v41 = v53;
  sub_241CDA5D0();
  sub_241C1F950(&qword_268D43558, &qword_268D43550, (uint64_t (*)(uint64_t))sub_241C2070C);
  uint64_t v42 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v10);
  return v42;
}

uint64_t sub_241C17414(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C2070C(0);
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C20740(0, &qword_268D43550, (uint64_t (*)(uint64_t))sub_241C2070C, MEMORY[0x263EFDDF8]);
  uint64_t v10 = v9;
  uint64_t v55 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v53 = (char *)v44 - v11;
  uint64_t v50 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v50);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CD7740();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v51 = *(void *)(v18 - 8);
  uint64_t v52 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA180();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a2, v14);
  sub_241C1F8E8(a3, (uint64_t)v13, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  id v21 = a1;
  id v22 = a1;
  uint64_t v23 = sub_241CDA190();
  os_log_type_t v24 = sub_241CDB650();
  int v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v26 = swift_slowAlloc();
    os_log_t v46 = v23;
    uint64_t v27 = v26;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v47 = v28;
    *(_DWORD *)uint64_t v27 = 136315650;
    v44[1] = v27 + 4;
    uint64_t v56 = 0;
    unint64_t v57 = 0xE000000000000000;
    uint64_t v58 = v28;
    int v45 = v25;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v56 = 0xD00000000000002BLL;
    unint64_t v57 = 0x8000000241CE3CE0;
    uint64_t v29 = (void *)sub_241CD76E0();
    sub_241CD73E0();
    uint64_t v48 = v10;
    uint64_t v49 = v7;

    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    sub_241CDB180();
    uint64_t v56 = sub_241A33FE4(v56, v57, &v58);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v30 = (void *)sub_241CD7770();
    id v31 = objc_msgSend(v30, sel_sensitiveLoggingIdentifier);

    uint64_t v32 = sub_241CDB0D0();
    unint64_t v34 = v33;

    uint64_t v10 = v48;
    uint64_t v56 = sub_241A33FE4(v32, v34, &v58);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C21DE8((uint64_t)v13, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
    *(_WORD *)(v27 + 22) = 2080;
    uint64_t v56 = (uint64_t)a1;
    id v35 = a1;
    sub_241A3DA64();
    uint64_t v36 = sub_241CDB120();
    uint64_t v56 = sub_241A33FE4(v36, v37, &v58);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    os_log_t v38 = v46;
    _os_log_impl(&dword_241A23000, v46, (os_log_type_t)v45, "%s_%s: error when querying data for trend: %s", (uint8_t *)v27, 0x20u);
    uint64_t v39 = v47;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v39, -1, -1);
    MEMORY[0x245637F20](v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    sub_241C21DE8((uint64_t)v13, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  }
  (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v52);
  uint64_t v40 = sub_241CDB5B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v54, 1, 1, v40);
  uint64_t v41 = v53;
  sub_241CDA5D0();
  sub_241C1F950(&qword_268D43558, &qword_268D43550, (uint64_t (*)(uint64_t))sub_241C2070C);
  uint64_t v42 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v10);
  return v42;
}

uint64_t sub_241C17AD0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v68 = a3;
  unint64_t v77 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t Output = type metadata accessor for SummaryModelQueryOutput();
  MEMORY[0x270FA5388](Output);
  uint64_t v72 = (char *)&v59 - v11;
  uint64_t v74 = v12;
  uint64_t v75 = sub_241CDA5C0();
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  id v71 = (char *)&v59 - v13;
  uint64_t v63 = *(void *)(a5 + 8);
  uint64_t v64 = a4;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v59 - v19;
  uint64_t v21 = sub_241CD7740();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  os_log_type_t v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_241CDA1A0();
  uint64_t v69 = *(void *)(v25 - 8);
  uint64_t v70 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *a1;
  sub_241CDA180();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v65 = v21;
  v29(v24, a2, v21);
  uint64_t v66 = v15;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  id v31 = v68;
  v30(v20, v68, v14);
  unint64_t v67 = v18;
  v30(v18, v31, v14);
  id v32 = v28;
  id v33 = v28;
  uint64_t v68 = v27;
  unint64_t v34 = sub_241CDA190();
  os_log_type_t v35 = sub_241CDB650();
  int v36 = v35;
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    v79[0] = v62;
    *(_DWORD *)uint64_t v37 = 136315650;
    uint64_t v59 = v37 + 4;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    int v61 = v36;
    uint64_t v39 = AssociatedConformanceWitness;
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
    os_log_t v60 = v34;
    v40(v14, AssociatedConformanceWitness);
    uint64_t v41 = static SummaryModelGenerating.logPrefix(_:_:)();
    uint64_t v78 = sub_241A33FE4(v41, v42, v79);
    uint64_t v64 = v79;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v65);
    uint64_t v43 = *(void (**)(char *, uint64_t))(v66 + 8);
    v43(v20, v14);
    *(_WORD *)(v37 + 12) = 2080;
    uint64_t v44 = v67;
    int v45 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 24))(v14, v39);
    id v46 = objc_msgSend(v45, sel_sensitiveLoggingIdentifier);

    uint64_t v47 = sub_241CDB0D0();
    unint64_t v49 = v48;

    uint64_t v78 = sub_241A33FE4(v47, v49, v79);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    v43(v44, v14);
    *(_WORD *)(v37 + 22) = 2080;
    uint64_t v78 = (uint64_t)v28;
    id v50 = v28;
    sub_241A3DA64();
    uint64_t v51 = sub_241CDB120();
    uint64_t v78 = sub_241A33FE4(v51, v52, v79);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    unint64_t v34 = v60;
    _os_log_impl(&dword_241A23000, v60, (os_log_type_t)v61, "%s_%s: error when querying data for trend: %s", (uint8_t *)v37, 0x20u);
    uint64_t v53 = v62;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v53, -1, -1);
    MEMORY[0x245637F20](v37, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v65);
    uint64_t v54 = *(void (**)(char *, uint64_t))(v66 + 8);
    v54(v20, v14);
    v54(v67, v14);
  }
  (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v72, 1, 1);
  uint64_t v55 = v71;
  sub_241CDA5D0();
  uint64_t v56 = v75;
  swift_getWitnessTable();
  uint64_t v57 = sub_241CDA6D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v55, v56);
  *unint64_t v77 = v57;
  return result;
}

uint64_t sub_241C181FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v24 = a5;
  uint64_t v25 = a2;
  uint64_t v27 = a8;
  uint64_t v26 = sub_241CD6EE0();
  uint64_t v12 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24);
  uint64_t v18 = swift_checkMetadataState();
  uint64_t v19 = v17(v18, AssociatedConformanceWitness);
  sub_241CD6EA0();
  uint64_t v20 = sub_241C19964(v23, v15, a4, v24, v19, (uint64_t)v14, a6, a7);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v26);
  *uint64_t v27 = v20;
  return result;
}

uint64_t sub_241C183A0()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, AssociatedTypeWitness);
  sub_241A31190(v0 + v11);

  return MEMORY[0x270FA0238](v0, v11 + 40, v10);
}

uint64_t sub_241C18520@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = *(void *)(sub_241CD7740() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = v8 + *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v11 = (v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v2[4];
  uint64_t v13 = (uint64_t)v2 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8);

  return sub_241C181FC(a1, v12, (uint64_t)v2 + v8, (uint64_t)v2 + v11, v13, v5, v6, a2);
}

uint64_t sub_241C18660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v55 = a6;
  uint64_t v56 = a2;
  uint64_t v61 = a5;
  uint64_t v51 = a4;
  uint64_t v52 = sub_241CD6EE0();
  uint64_t v62 = *(void *)(v52 - 8);
  uint64_t v54 = *(void *)(v62 + 64);
  MEMORY[0x270FA5388](v52);
  unint64_t v49 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_241CD7740();
  uint64_t v47 = *(void *)(v48 - 8);
  uint64_t v50 = *(void *)(v47 + 64);
  MEMORY[0x270FA5388](v48);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v10;
  uint64_t v11 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v12 = v11 - 8;
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v42 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CD7690();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_241C1E884;
  uint64_t v57 = sub_241C1E90C;
  sub_241C1E798(0, &qword_26B032578, sub_241C1E884, (void (*)(void))sub_241C1E90C);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v59 = v18;
  uint64_t v60 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v53 = (char *)&v42 - v20;
  uint64_t v21 = (uint64_t *)(a3 + *(int *)(v12 + 56));
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_241C1A4D8(a1, a3, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t v64 = v24;
  sub_241CD7730();
  sub_241B62E44((uint64_t)v17);
  sub_241C1E884(0);
  uint64_t v45 = v25;
  uint64_t v46 = sub_241C1E90C();
  uint64_t v26 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_241A31190((uint64_t)v63);
  swift_release();
  uint64_t v64 = v26;
  sub_241A37260(v51, (uint64_t)v63);
  sub_241C1F8E8(a3, (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  uint64_t v27 = v47;
  uint64_t v28 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v10, a1, v48);
  uint64_t v29 = v62;
  uint64_t v30 = v49;
  uint64_t v31 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v49, v55, v52);
  unint64_t v32 = (*(unsigned __int8 *)(v44 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v33 = (v13 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = v27;
  unint64_t v35 = (*(unsigned __int8 *)(v27 + 80) + v33 + 8) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v36 = (v50 + *(unsigned __int8 *)(v29 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v56;
  sub_241A5598C(v63, v37 + 24);
  sub_241C1F9E8(v42, v37 + v32, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  *(void *)(v37 + v33) = v61;
  (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v37 + v35, v43, v28);
  (*(void (**)(unint64_t, char *, uint64_t))(v62 + 32))(v37 + v36, v30, v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_241CDA4F0();
  sub_241C20698(0, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
  sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
  os_log_t v38 = v53;
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C1ECF8(&qword_26B02E9C8, &qword_26B032578, v58, (void (*)(void))v57);
  uint64_t v39 = v59;
  uint64_t v40 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v39);
  return v40;
}

uint64_t sub_241C18CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v54 = a6;
  uint64_t v61 = a5;
  uint64_t v51 = a4;
  uint64_t v56 = a2;
  uint64_t v52 = sub_241CD6EE0();
  uint64_t v63 = *(void *)(v52 - 8);
  uint64_t v55 = *(void *)(v63 + 64);
  MEMORY[0x270FA5388](v52);
  unint64_t v49 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_241CD7740();
  uint64_t v48 = *(void *)(v62 - 8);
  uint64_t v50 = *(void *)(v48 + 64);
  MEMORY[0x270FA5388](v62);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v10;
  uint64_t v11 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v12 = v11 - 8;
  uint64_t v45 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v45 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v43 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CD7690();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_241C1E884;
  uint64_t v57 = sub_241C1E90C;
  sub_241C1E798(0, &qword_26B032578, sub_241C1E884, (void (*)(void))sub_241C1E90C);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v59 = v18;
  uint64_t v60 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v53 = (char *)&v42 - v20;
  uint64_t v21 = (uint64_t *)(a3 + *(int *)(v12 + 56));
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_241C1AA5C(a1, a3, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t v66 = v24;
  sub_241CD7730();
  sub_241B62E44((uint64_t)v17);
  sub_241C1E884(0);
  uint64_t v46 = v25;
  uint64_t v47 = sub_241C1E90C();
  uint64_t v26 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_241A31190((uint64_t)v65);
  swift_release();
  uint64_t v66 = v26;
  sub_241A37260(v51, (uint64_t)v65);
  sub_241C1F8E8(a3, (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  uint64_t v27 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v10, a1, v62);
  uint64_t v28 = v63;
  uint64_t v29 = v49;
  uint64_t v30 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v49, v54, v52);
  unint64_t v31 = (*(unsigned __int8 *)(v45 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  unint64_t v32 = (v13 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (*(unsigned __int8 *)(v27 + 80) + v32 + 8) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v34 = (v50 + *(unsigned __int8 *)(v28 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v35 = (v55 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v56;
  sub_241A5598C(v65, v36 + 24);
  sub_241C1F9E8(v43, v36 + v31, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  uint64_t v37 = v62;
  *(void *)(v36 + v32) = v61;
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v36 + v33, v44, v37);
  (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))(v36 + v34, v29, v30);
  *(void *)(v36 + v35) = v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_241CDA4F0();
  sub_241C20698(0, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
  sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
  os_log_t v38 = v53;
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C1ECF8(&qword_26B02E9C8, &qword_26B032578, v58, (void (*)(void))v57);
  uint64_t v39 = v59;
  uint64_t v40 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v39);
  return v40;
}

uint64_t sub_241C19304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v54 = a6;
  uint64_t v61 = a5;
  uint64_t v51 = a4;
  uint64_t v56 = a2;
  uint64_t v52 = sub_241CD6EE0();
  uint64_t v63 = *(void *)(v52 - 8);
  uint64_t v55 = *(void *)(v63 + 64);
  MEMORY[0x270FA5388](v52);
  unint64_t v49 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_241CD7740();
  uint64_t v48 = *(void *)(v62 - 8);
  uint64_t v50 = *(void *)(v48 + 64);
  MEMORY[0x270FA5388](v62);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v10;
  uint64_t v11 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  uint64_t v12 = v11 - 8;
  uint64_t v45 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v45 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v43 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CD7690();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_241C1E884;
  uint64_t v57 = sub_241C1E90C;
  sub_241C1E798(0, &qword_26B032578, sub_241C1E884, (void (*)(void))sub_241C1E90C);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v59 = v18;
  uint64_t v60 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v53 = (char *)&v42 - v20;
  uint64_t v21 = (uint64_t *)(a3 + *(int *)(v12 + 52));
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_241C1AFF0(a1, a3, v22, v23);
  swift_bridgeObjectRelease();
  uint64_t v66 = v24;
  sub_241CD7730();
  sub_241B62B88((uint64_t)v17);
  sub_241C1E884(0);
  uint64_t v46 = v25;
  uint64_t v47 = sub_241C1E90C();
  uint64_t v26 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_241A31190((uint64_t)v65);
  swift_release();
  uint64_t v66 = v26;
  sub_241A37260(v51, (uint64_t)v65);
  sub_241C1F8E8(a3, (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  uint64_t v27 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v10, a1, v62);
  uint64_t v28 = v63;
  uint64_t v29 = v49;
  uint64_t v30 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v49, v54, v52);
  unint64_t v31 = (*(unsigned __int8 *)(v45 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  unint64_t v32 = (v13 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (*(unsigned __int8 *)(v27 + 80) + v32 + 8) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v34 = (v50 + *(unsigned __int8 *)(v28 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v35 = (v55 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v56;
  sub_241A5598C(v65, v36 + 24);
  sub_241C1F9E8(v43, v36 + v31, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  uint64_t v37 = v62;
  *(void *)(v36 + v32) = v61;
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v36 + v33, v44, v37);
  (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))(v36 + v34, v29, v30);
  *(void *)(v36 + v35) = v64;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_241CDA4F0();
  sub_241C20698(0, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
  sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
  os_log_t v38 = v53;
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C1ECF8(&qword_26B02E9C8, &qword_26B032578, v58, (void (*)(void))v57);
  uint64_t v39 = v59;
  uint64_t v40 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v39);
  return v40;
}

uint64_t sub_241C19964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v60 = a6;
  uint64_t v67 = a5;
  uint64_t v57 = a4;
  uint64_t v66 = a2;
  uint64_t v58 = sub_241CD6EE0();
  uint64_t v70 = *(void *)(v58 - 8);
  uint64_t v61 = *(void *)(v70 + 64);
  MEMORY[0x270FA5388](v58);
  uint64_t v72 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_241CD7740();
  uint64_t v69 = *(void *)(v55 - 8);
  uint64_t v56 = *(void *)(v69 + 64);
  MEMORY[0x270FA5388](v55);
  id v71 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v68 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v54 = *(void *)(v68 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v51 = (char *)&v47 - v15;
  uint64_t v48 = sub_241CD7690();
  uint64_t v16 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_241C1E884;
  uint64_t v62 = sub_241C1E90C;
  sub_241C1E798(0, &qword_26B032578, sub_241C1E884, (void (*)(void))sub_241C1E90C);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v64 = v19;
  uint64_t v65 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v59 = (char *)&v47 - v21;
  uint64_t v50 = a7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v24 = a1;
  uint64_t v26 = sub_241C1B584(a1, a3, v23, v25, a7, a8);
  swift_bridgeObjectRelease();
  uint64_t v75 = v26;
  sub_241CD7730();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v47 = AssociatedTypeWitness;
  v27(a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  sub_241C1E884(0);
  uint64_t v52 = v28;
  uint64_t v53 = sub_241C1E90C();
  uint64_t v29 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v48);
  sub_241A31190((uint64_t)v74);
  swift_release();
  uint64_t v75 = v29;
  sub_241A37260(v57, (uint64_t)v74);
  uint64_t v30 = v68;
  unint64_t v31 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v51, a3, AssociatedTypeWitness);
  uint64_t v32 = v69;
  uint64_t v33 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v71, v24, v55);
  uint64_t v34 = v70;
  uint64_t v35 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v72, v60, v58);
  unint64_t v36 = (*(unsigned __int8 *)(v30 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v37 = (v54 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (*(unsigned __int8 *)(v32 + 80) + v37 + 8) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v39 = (v56 + *(unsigned __int8 *)(v34 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v40 = (v61 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = (char *)swift_allocObject();
  uint64_t v42 = v49;
  *((void *)v41 + 2) = v50;
  *((void *)v41 + 3) = v42;
  *((void *)v41 + 4) = v66;
  sub_241A5598C(v74, (uint64_t)(v41 + 40));
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v41[v36], v31, v47);
  *(void *)&v41[v37] = v67;
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v41[v38], v71, v33);
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(&v41[v39], v72, v35);
  *(void *)&v41[v40] = v73;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_241CDA4F0();
  sub_241C20698(0, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
  sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
  uint64_t v43 = v59;
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C1ECF8(&qword_26B02E9C8, &qword_26B032578, v63, (void (*)(void))v62);
  uint64_t v44 = v64;
  uint64_t v45 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v44);
  return v45;
}

void sub_241C1A09C(unint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v17 = sub_241CD7AF0();
  uint64_t v3 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD77C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = *a1;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  uint64_t v12 = swift_checkMetadataState();
  v11(v12, AssociatedConformanceWitness);
  sub_241CD7790();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v13 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  uint64_t v14 = sub_241C1A2C4(v16, v13);

  *uint64_t v18 = v14;
}

void *sub_241C1A2C4(unint64_t a1, void *a2)
{
  uint64_t v4 = sub_241CD7AB0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - v9;
  sub_241A313AC(0, &qword_26B030450);
  swift_bridgeObjectRetain();
  sub_241CD7A80();
  id v11 = HKCodableSummaryTrendResults.init(values:version:)(a1, (uint64_t)v10);
  id v12 = a2;
  id v13 = v11;
  sub_241CD7A80();
  id v14 = objc_msgSend(v13, sel_data);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = sub_241CD6AE0();
    unint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    unint64_t v18 = 0xF000000000000000;
  }
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v8, v4);
  uint64_t v19 = sub_241A54BF8(v16, v18, 2, a2, 1, (uint64_t)v10);

  sub_241A54FC8(v16, v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);

  return v19;
}

uint64_t sub_241C1A4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a4;
  uint64_t v32 = a3;
  uint64_t v34 = a2;
  uint64_t v31 = a1;
  uint64_t v40 = sub_241CD7740();
  uint64_t v5 = *(void *)(v40 - 8);
  uint64_t v41 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v40);
  unint64_t v39 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v37 = *(void *)(v38 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v35 = (uint64_t)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_241CD7690();
  uint64_t v9 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  id v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C20608(0, &qword_26B0323A8, (void (*)(uint64_t))sub_241C1FEC0, sub_241C1E8B8, (void (*)(void))sub_241C1FF58);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  uint64_t v43 = v13;
  MEMORY[0x270FA5388](v12);
  unint64_t v36 = (char *)&v31 - v14;
  sub_241CD76A0();
  sub_241A311E0(v47, v47[3]);
  sub_241C205BC(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB730;
  *(void *)(inited + 32) = a3;
  *(void *)(inited + 40) = v44;
  swift_bridgeObjectRetain();
  sub_241A25D4C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v16 = sub_241CD7A20();
  swift_bridgeObjectRelease();
  uint64_t v46 = v16;
  uint64_t v17 = v31;
  sub_241CD7730();
  uint64_t v18 = v34;
  sub_241B62E44((uint64_t)v11);
  sub_241C1FEC0();
  sub_241C1FF58();
  uint64_t v19 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v33);
  sub_241A31190((uint64_t)v45);
  swift_release();
  sub_241A31190((uint64_t)v47);
  v47[0] = v19;
  uint64_t v20 = v35;
  sub_241C1F8E8(v18, v35, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  uint64_t v21 = v39;
  uint64_t v22 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v39, v17, v40);
  unint64_t v23 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v24 = (v37 + *(unsigned __int8 *)(v5 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v44;
  *(void *)(v25 + 16) = v32;
  *(void *)(v25 + 24) = v26;
  sub_241C1F9E8(v20, v25 + v23, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v25 + v24, v21, v22);
  sub_241C1E8B8(0);
  swift_bridgeObjectRetain();
  uint64_t v27 = v36;
  sub_241CDA710();
  swift_release();
  swift_release();
  sub_241C20214();
  uint64_t v28 = v42;
  uint64_t v29 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v28);
  return v29;
}

uint64_t sub_241C1AA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a4;
  uint64_t v34 = a3;
  uint64_t v37 = a2;
  uint64_t v43 = sub_241CD7740();
  uint64_t v36 = *(void *)(v43 - 8);
  uint64_t v44 = *(void *)(v36 + 64);
  MEMORY[0x270FA5388](v43);
  uint64_t v42 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v40 = *(void *)(v41 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v38 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_241CD7690();
  uint64_t v9 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  id v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C20608(0, &qword_26B0323A8, (void (*)(uint64_t))sub_241C1FEC0, sub_241C1E8B8, (void (*)(void))sub_241C1FF58);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v45 = v12;
  uint64_t v46 = v13;
  MEMORY[0x270FA5388](v12);
  unint64_t v39 = (char *)&v33 - v14;
  sub_241CD76A0();
  sub_241A311E0(v51, v51[3]);
  sub_241C205BC(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB730;
  *(void *)(inited + 32) = a3;
  *(void *)(inited + 40) = v48;
  swift_bridgeObjectRetain();
  sub_241A25D4C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v16 = sub_241CD7A20();
  swift_bridgeObjectRelease();
  uint64_t v50 = v16;
  sub_241CD7730();
  uint64_t v17 = v37;
  sub_241B62E44((uint64_t)v11);
  sub_241C1FEC0();
  sub_241C1FF58();
  uint64_t v18 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v35);
  sub_241A31190((uint64_t)v49);
  swift_release();
  sub_241A31190((uint64_t)v51);
  v51[0] = v18;
  uint64_t v19 = v38;
  sub_241C1F8E8(v17, v38, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  uint64_t v20 = v36;
  uint64_t v21 = v42;
  uint64_t v22 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v42, a1, v43);
  unint64_t v23 = (*(unsigned __int8 *)(v41 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v24 = v20;
  unint64_t v25 = (v40 + *(unsigned __int8 *)(v20 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v26 = (char *)swift_allocObject();
  uint64_t v27 = v48;
  uint64_t v28 = v34;
  *((void *)v26 + 2) = v47;
  *((void *)v26 + 3) = v28;
  *((void *)v26 + 4) = v27;
  sub_241C1F9E8(v19, (uint64_t)&v26[v23], type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v26[v25], v21, v22);
  sub_241C1E8B8(0);
  swift_bridgeObjectRetain();
  uint64_t v29 = v39;
  sub_241CDA710();
  swift_release();
  swift_release();
  sub_241C20214();
  uint64_t v30 = v45;
  uint64_t v31 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v30);
  return v31;
}

uint64_t sub_241C1AFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a4;
  uint64_t v34 = a3;
  uint64_t v37 = a2;
  uint64_t v43 = sub_241CD7740();
  uint64_t v36 = *(void *)(v43 - 8);
  uint64_t v44 = *(void *)(v36 + 64);
  MEMORY[0x270FA5388](v43);
  uint64_t v42 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v40 = *(void *)(v41 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v38 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_241CD7690();
  uint64_t v9 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  id v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C20608(0, &qword_26B0323A8, (void (*)(uint64_t))sub_241C1FEC0, sub_241C1E8B8, (void (*)(void))sub_241C1FF58);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v45 = v12;
  uint64_t v46 = v13;
  MEMORY[0x270FA5388](v12);
  unint64_t v39 = (char *)&v33 - v14;
  sub_241CD76A0();
  sub_241A311E0(v51, v51[3]);
  sub_241C205BC(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB730;
  *(void *)(inited + 32) = a3;
  *(void *)(inited + 40) = v48;
  swift_bridgeObjectRetain();
  sub_241A25D4C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v16 = sub_241CD7A20();
  swift_bridgeObjectRelease();
  uint64_t v50 = v16;
  sub_241CD7730();
  uint64_t v17 = v37;
  sub_241B62B88((uint64_t)v11);
  sub_241C1FEC0();
  sub_241C1FF58();
  uint64_t v18 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v35);
  sub_241A31190((uint64_t)v49);
  swift_release();
  sub_241A31190((uint64_t)v51);
  v51[0] = v18;
  uint64_t v19 = v38;
  sub_241C1F8E8(v17, v38, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  uint64_t v20 = v36;
  uint64_t v21 = v42;
  uint64_t v22 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v42, a1, v43);
  unint64_t v23 = (*(unsigned __int8 *)(v41 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v24 = v20;
  unint64_t v25 = (v40 + *(unsigned __int8 *)(v20 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v26 = (char *)swift_allocObject();
  uint64_t v27 = v48;
  uint64_t v28 = v34;
  *((void *)v26 + 2) = v47;
  *((void *)v26 + 3) = v28;
  *((void *)v26 + 4) = v27;
  sub_241C1F9E8(v19, (uint64_t)&v26[v23], type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v26[v25], v21, v22);
  sub_241C1E8B8(0);
  swift_bridgeObjectRetain();
  uint64_t v29 = v39;
  sub_241CDA710();
  swift_release();
  swift_release();
  sub_241C20214();
  uint64_t v30 = v45;
  uint64_t v31 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v30);
  return v31;
}

uint64_t sub_241C1B584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v58 = a6;
  uint64_t v43 = a5;
  uint64_t v60 = a4;
  uint64_t v42 = a3;
  uint64_t v47 = a2;
  uint64_t v54 = sub_241CD7740();
  uint64_t v53 = *(void *)(v54 - 8);
  uint64_t v56 = *(void *)(v53 + 64);
  MEMORY[0x270FA5388](v54);
  uint64_t v52 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *(void *)(a6 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v49 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v51 = *(void *)(v49 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v48 = (char *)&v41 - v11;
  uint64_t v46 = sub_241CD7690();
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C20608(0, &qword_26B0323A8, (void (*)(uint64_t))sub_241C1FEC0, sub_241C1E8B8, (void (*)(void))sub_241C1FF58);
  uint64_t v55 = v14;
  uint64_t v57 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v50 = (char *)&v41 - v15;
  sub_241CD76A0();
  sub_241A311E0(v63, v63[3]);
  sub_241C205BC(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB730;
  *(void *)(inited + 32) = a3;
  *(void *)(inited + 40) = v60;
  swift_bridgeObjectRetain();
  sub_241A25D4C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v17 = sub_241CD7A20();
  swift_bridgeObjectRelease();
  uint64_t v62 = v17;
  uint64_t v18 = a1;
  sub_241CD7730();
  uint64_t v19 = v43;
  uint64_t v20 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v22 = v47;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v18, AssociatedTypeWitness, AssociatedConformanceWitness);
  sub_241C1FEC0();
  uint64_t v41 = v23;
  uint64_t v44 = sub_241C1FF58();
  uint64_t v24 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v46);
  sub_241A31190((uint64_t)v61);
  swift_release();
  sub_241A31190((uint64_t)v63);
  v63[0] = v24;
  uint64_t v25 = v49;
  uint64_t v26 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v22, v20);
  uint64_t v27 = v53;
  uint64_t v28 = v52;
  uint64_t v29 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v18, v54);
  unint64_t v30 = (*(unsigned __int8 *)(v25 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v31 = v27;
  unint64_t v32 = (v51 + *(unsigned __int8 *)(v27 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v33 = (char *)swift_allocObject();
  uint64_t v34 = v58;
  *((void *)v33 + 2) = v19;
  *((void *)v33 + 3) = v34;
  uint64_t v35 = v60;
  uint64_t v36 = v42;
  *((void *)v33 + 4) = v59;
  *((void *)v33 + 5) = v36;
  *((void *)v33 + 6) = v35;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v33[v30], v26, v20);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v33[v32], v28, v29);
  sub_241C1E8B8(0);
  swift_bridgeObjectRetain();
  uint64_t v37 = v50;
  sub_241CDA710();
  swift_release();
  swift_release();
  sub_241C20214();
  uint64_t v38 = v55;
  uint64_t v39 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v38);
  return v39;
}

uint64_t sub_241C1BBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v53 = a8;
  uint64_t v65 = (char *)a7;
  uint64_t v66 = a3;
  uint64_t v75 = a2;
  uint64_t v76 = a6;
  uint64_t v67 = a5;
  uint64_t v68 = a9;
  uint64_t v13 = *(void *)(a11 + 8);
  uint64_t v74 = a11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v58 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v72 = (char *)v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v57 = (char *)v50 - v17;
  uint64_t v18 = sub_241CD7740();
  uint64_t v70 = *(void *)(v18 - 8);
  uint64_t v71 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v69 = (char *)v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_241CDA1A0();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v73 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C20740(0, &qword_26B032810, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDDF8]);
  uint64_t v61 = *(void *)(v21 - 8);
  uint64_t v62 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v60 = (char *)v50 - v22;
  sub_241C1E8B8(0);
  uint64_t v24 = v23 - 8;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C1F830(0);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v52 = (uint64_t)v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  unint64_t v32 = (char *)v50 - v31;
  uint64_t v51 = v30;
  uint64_t v64 = (char *)v50 + *(int *)(v30 + 48) - v31;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v34 = *(int *)(v24 + 56);
  uint64_t v35 = (uint64_t)&v26[v34];
  uint64_t v36 = a1 + v34;
  sub_241C1F8E8(a1, (uint64_t)v26, (uint64_t (*)(void))sub_241C1E8D8);
  sub_241C1F8E8(v36, v35, (uint64_t (*)(void))sub_241C1E8D8);
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 24);
  v50[4] = v37 + 24;
  v50[3] = v38;
  uint64_t v39 = (int *)v38(AssociatedTypeWitness, v37);
  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v37 + 40);
  uint64_t v56 = a4;
  uint64_t v59 = AssociatedTypeWitness;
  v50[2] = v37;
  v50[1] = v40;
  v50[0] = v37 + 40;
  v40(AssociatedTypeWitness, v37);
  uint64_t v41 = v13;
  uint64_t v42 = v64;
  v50[5] = v41;
  uint64_t v43 = static SummaryModelGenerating.logPrefix(_:_:)();
  uint64_t v65 = v32;
  sub_241BDB490((uint64_t)v32, v42, v75, v66, v63, (uint64_t)v26, v35, v67, v39, v43, v44);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241C21DE8(v35, (uint64_t (*)(void))sub_241C1E8D8);
  sub_241C21DE8((uint64_t)v26, (uint64_t (*)(void))sub_241C1E8D8);
  uint64_t v45 = v52;
  uint64_t v46 = v52 + *(int *)(v51 + 48);
  uint64_t v47 = (uint64_t)v65;
  sub_241C1F8E8((uint64_t)v65, v52, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C1F8E8((uint64_t)v42, v46, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v48 = sub_241C1C680(v45, v46, v75, a10, v74);
  sub_241C21DE8(v47, (uint64_t (*)(void))sub_241C1F830);
  sub_241C21DE8(v46, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t result = sub_241C21DE8(v45, (uint64_t (*)(void))sub_241C1F8B4);
  *uint64_t v68 = v48;
  return result;
}

uint64_t sub_241C1C680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a3;
  uint64_t v27 = sub_241C10808;
  sub_241C20740(0, &qword_26B032810, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDDF8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v24 - v10;
  sub_241C1F830(0);
  uint64_t v13 = v12 - 8;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  uint64_t v19 = (char *)&v24 + *(int *)(v13 + 56) - v17;
  sub_241C1F8E8(a1, (uint64_t)&v24 - v17, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C1F8E8(a2, (uint64_t)v19, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v20 = (uint64_t)&v16[*(int *)(v13 + 56)];
  sub_241C1F8E8((uint64_t)v18, (uint64_t)v16, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C1F8E8((uint64_t)v19, v20, (uint64_t (*)(void))sub_241C1F8B4);
  id v21 = sub_241BDCD74((uint64_t)v16, v20, v25);
  sub_241C21DE8(v20, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C21DE8((uint64_t)v16, (uint64_t (*)(void))sub_241C1F8B4);
  id v28 = v21;
  sub_241C10808();
  sub_241CDA5D0();
  sub_241C1F950(&qword_26B02EAA0, &qword_26B032810, (uint64_t (*)(uint64_t))v27);
  uint64_t v22 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_241C21DE8((uint64_t)v18, (uint64_t (*)(void))sub_241C1F830);
  return v22;
}

uint64_t sub_241C1C910@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v14 = *a1;
  sub_241C1E8B8(0);
  uint64_t v6 = a4 + *(int *)(v5 + 48);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24);
  uint64_t v9 = swift_checkMetadataState();
  uint64_t v10 = (void *)v8(v9, AssociatedConformanceWitness);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v9, AssociatedConformanceWitness);
  uint64_t v11 = static SummaryModelGenerating.logPrefix(_:_:)();
  sub_241BD9CC0(a4, v6, v14, a2, a3, v10, v11, v12);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241C1CA7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_241CD6EE0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  uint64_t v15 = *(void *)(a3
                  + *(int *)(type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0) + 36));
  swift_bridgeObjectRetain();
  sub_241CD6EA0();
  uint64_t v16 = sub_241C18660(a2, v14, a3, a4, v15, (uint64_t)v13);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *a5 = v16;
  return result;
}

uint64_t sub_241C1CBB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9 = *a1;
  sub_241C1E8B8(0);
  uint64_t v11 = a5 + *(int *)(v10 + 48);
  type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v12 = (void *)sub_241CD7770();
  uint64_t v13 = sub_241C38E38(a4, 1);
  sub_241C0BEC4(a5, v11, v9, a2, a3, v12, v13, v14);

  return swift_bridgeObjectRelease();
}

void sub_241C1CC70(unint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_241CD7AF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  sub_241CD7790();
  uint64_t v9 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v10 = sub_241C1A2C4(v8, v9);

  *a2 = v10;
}

uint64_t sub_241C1CD84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_241CD6EE0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  uint64_t v15 = *(void *)(a3
                  + *(int *)(type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0) + 36));
  swift_bridgeObjectRetain();
  sub_241CD6EA0();
  uint64_t v16 = sub_241C18CA4(a2, v14, a3, a4, v15, (uint64_t)v13);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *a5 = v16;
  return result;
}

uint64_t sub_241C1CEC0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v9 = *a1;
  sub_241C1E8B8(0);
  uint64_t v11 = a5 + *(int *)(v10 + 48);
  type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v12 = (void *)sub_241CD7770();
  uint64_t v13 = sub_241C38E38(a4, 1);
  sub_241C0BEC4(a5, v11, v9, a2, a3, v12, v13, v14);

  return swift_bridgeObjectRelease();
}

void sub_241C1CF80(unint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_241CD7AF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  sub_241CD7790();
  uint64_t v9 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v10 = sub_241C1A2C4(v8, v9);

  *a2 = v10;
}

uint64_t sub_241C1D094@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_241CD6EE0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  uint64_t v15 = *(void *)(a3 + *(int *)(type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0) + 24));
  swift_bridgeObjectRetain();
  sub_241CD6EA0();
  uint64_t v16 = sub_241C19304(a2, v14, a3, a4, v15, (uint64_t)v13);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *a5 = v16;
  return result;
}

uint64_t sub_241C1D1D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v9 = *a1;
  sub_241C1E8B8(0);
  uint64_t v11 = a5 + *(int *)(v10 + 48);
  type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  uint64_t v12 = (void *)sub_241CD7770();
  uint64_t v13 = sub_241C38E54(a4, 1);
  sub_241C0BEC4(a5, v11, v9, a2, a3, v12, v13, v14);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241C1D290(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C20698(255, a2, a3, MEMORY[0x263EFDCF0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C1D2F4()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, AssociatedTypeWitness);
  sub_241A31190(v0 + v11);

  return MEMORY[0x270FA0238](v0, v11 + 40, v10);
}

uint64_t sub_241C1D47C@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(NSObject **)(v2 + 24);
  uint64_t v7 = *(void *)(sub_241CD7740() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = v8 + *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v11 = (v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v12 = (*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)(v2 + v12);

  return sub_241C15224(a1, v2 + v8, v2 + v11, v13, v2 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8), v5, v6, a2);
}

uint64_t sub_241C1D5C4()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, AssociatedTypeWitness);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_241C1D730@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(sub_241CD7740() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = v8 + *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = (char *)(v2 + ((v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)));

  return sub_241C17AD0(a1, v2 + v8, v11, v5, v6, a2);
}

uint64_t sub_241C1D840()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*((void *)v6 - 1) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v21 = *(void *)(*((void *)v6 - 1) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v9 = v0 + v8;
  uint64_t v10 = sub_241CD6D00();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v22(v0 + v8, v10);
  uint64_t v11 = v0 + v8 + v6[5];
  uint64_t v12 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v0 + v8 + v6[6];
  uint64_t v14 = sub_241CD9820();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  unint64_t v16 = (((v21 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = v3 | v7 | 7;
  uint64_t v18 = v9 + v6[7];
  uint64_t v19 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22(v9 + v6[11], v10);
  swift_bridgeObjectRelease();
  sub_241A31190(v0 + v16);

  return MEMORY[0x270FA0238](v0, v16 + 40, v17);
}

uint64_t sub_241C1DB28@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C21CC0(a1, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t, void, unint64_t))sub_241C13C7C, a2);
}

void sub_241C1DB54()
{
  if (!qword_26B032780)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B0303E0);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032780);
    }
  }
}

uint64_t sub_241C1DBCC()
{
  return sub_241C1090C(&qword_26B02EA60, (void (*)(uint64_t))sub_241C1DB54);
}

void sub_241C1DC00()
{
  if (!qword_26B0323B8)
  {
    sub_241C20698(255, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
    sub_241A313AC(255, (unint64_t *)&qword_26B0303E0);
    sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0323B8);
    }
  }
}

uint64_t sub_241C1DCDC()
{
  uint64_t v1 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v16 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v17 = v0;
  uint64_t v4 = v0 + v3;
  uint64_t v5 = sub_241CD6D00();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v0 + v3, v5);
  uint64_t v7 = v0 + v3 + v1[5];
  uint64_t v8 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + v3 + v1[6];
  uint64_t v10 = sub_241CD9820();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v2 | 7;
  uint64_t v13 = v4 + v1[7];
  uint64_t v14 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6(v4 + v1[11], v5);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v17, ((v16 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v12);
}

uint64_t sub_241C1DF30(uint64_t a1)
{
  return sub_241C22038(a1, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_241C1CC70);
}

uint64_t sub_241C1DF5C()
{
  uint64_t v1 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v18 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v20 = sub_241CD7740();
  uint64_t v3 = *(void *)(v20 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v17 = *(void *)(v3 + 64);
  uint64_t v21 = v0;
  uint64_t v5 = v0 + ((v2 + 24) & ~v2);
  uint64_t v6 = sub_241CD6D00();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v19(v5, v6);
  uint64_t v7 = v5 + v1[5];
  uint64_t v8 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v5 + v1[6];
  uint64_t v10 = sub_241CD9820();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v2 | v4 | 7;
  uint64_t v13 = (((v2 + 24) & ~v2) + v18 + v4) & ~v4;
  uint64_t v14 = v5 + v1[7];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19(v5 + v1[11], v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v21 + v13, v20);

  return MEMORY[0x270FA0238](v21, v13 + v17, v12);
}

uint64_t sub_241C1E238@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C22364(a1, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request, (uint64_t (*)(unint64_t, unint64_t, void))sub_241C6C0DC, a2);
}

unint64_t sub_241C1E264()
{
  unint64_t result = qword_26B02E960;
  if (!qword_26B02E960)
  {
    sub_241C20608(255, &qword_26B0323E8, (void (*)(uint64_t))sub_241C1DB54, sub_241B6F648, (void (*)(void))sub_241C1DBCC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B02E960);
  }
  return result;
}

uint64_t sub_241C1E300()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

void sub_241C1E3B4(unint64_t *a1@<X0>, void *a2@<X8>)
{
  swift_getAssociatedTypeWitness();

  sub_241C1A09C(a1, a2);
}

uint64_t sub_241C1E48C()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  unint64_t v6 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*((void *)v6 - 1) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v21 = *(void *)(*((void *)v6 - 1) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v9 = v0 + v8;
  uint64_t v10 = sub_241CD6D00();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v22(v0 + v8, v10);
  uint64_t v11 = v0 + v8 + v6[5];
  uint64_t v12 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v0 + v8 + v6[6];
  uint64_t v14 = sub_241CD9820();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  unint64_t v16 = (v21 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = v3 | v7 | 7;
  uint64_t v18 = v9 + v6[7];
  uint64_t v19 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22(v9 + v6[11], v10);
  swift_bridgeObjectRelease();
  sub_241A31190(v0 + v16);

  return MEMORY[0x270FA0238](v0, v16 + 40, v17);
}

uint64_t sub_241C1E76C(uint64_t a1)
{
  return sub_241C226BC(a1, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))sub_241C1CD84);
}

void sub_241C1E798(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    sub_241C20698(255, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDCF0]);
    a3(255);
    sub_241C1D290((unint64_t *)&qword_26B02EA30, &qword_26B032740, (uint64_t (*)(uint64_t))sub_241C10808);
    a4();
    unint64_t v7 = sub_241CDA490();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241C1E884(uint64_t a1)
{
}

void sub_241C1E8B8(uint64_t a1)
{
}

void sub_241C1E8D8(uint64_t a1)
{
}

uint64_t sub_241C1E90C()
{
  return sub_241C1090C(&qword_26B02EA00, sub_241C1E884);
}

uint64_t sub_241C1E940()
{
  uint64_t v1 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v23 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v23 + 64) & ~v23;
  uint64_t v22 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v3 = sub_241CD7740();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  uint64_t v4 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v20 = *(void *)(v26 + 64);
  uint64_t v5 = sub_241CD6EE0();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  uint64_t v6 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v19 = *(void *)(v24 + 64);
  swift_bridgeObjectRelease();
  sub_241A31190(v0 + 24);
  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_241CD6D00();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v21(v0 + v2, v8);
  uint64_t v9 = v0 + v2 + v1[5];
  uint64_t v10 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v0 + v2 + v1[6];
  uint64_t v12 = sub_241CD9820();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  unint64_t v14 = (((v22 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + v4 + 8) & ~v4;
  unint64_t v15 = (v14 + v20 + v6) & ~v6;
  uint64_t v16 = v7 + v1[7];
  uint64_t v17 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21(v7 + v1[11], v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v26 + 8))(v0 + v14, v27);
  (*(void (**)(unint64_t, uint64_t))(v24 + 8))(v0 + v15, v25);

  return MEMORY[0x270FA0238](v0, ((v19 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v23 | v4 | v6 | 7);
}

uint64_t sub_241C1ECCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C22B10(a1, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, void, uint64_t, unint64_t, void, unint64_t, unint64_t))sub_241C1BBCC, a2);
}

uint64_t sub_241C1ECF8(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C1E798(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C1ED48(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v65 = a7;
  uint64_t v66 = a3;
  uint64_t v74 = a6;
  uint64_t v67 = a5;
  uint64_t v64 = a2;
  uint64_t v9 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v63 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD7740();
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v72 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CDA1A0();
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v73 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C20740(0, &qword_26B032810, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDDF8]);
  uint64_t v69 = *(void *)(v15 - 8);
  uint64_t v70 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v68 = (char *)v54 - v16;
  sub_241C1E8B8(0);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C1F830(0);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v56 = (uint64_t)v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v57 = (uint64_t)v54 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v58 = (uint64_t)v54 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)v54 - v29;
  uint64_t v55 = v28;
  uint64_t v31 = (void (*)(uint64_t))((char *)v54 + *(int *)(v28 + 48) - v29);
  unint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(a4 + *(int *)(v9 + 40));
  uint64_t v33 = *(int *)(v18 + 56);
  uint64_t v34 = (uint64_t)&v20[v33];
  uint64_t v35 = a1 + v33;
  sub_241C1F8E8(a1, (uint64_t)v20, (uint64_t (*)(void))sub_241C1E8D8);
  sub_241C1F8E8(v35, v34, (uint64_t (*)(void))sub_241C1E8D8);
  v54[2] = v9;
  uint64_t v61 = a4;
  swift_bridgeObjectRetain();
  uint64_t v36 = (void *)sub_241CD7770();
  uint64_t v75 = 0;
  uint64_t v76 = (unint64_t *)0xE000000000000000;
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  v54[1] = "g no data snippet value";
  uint64_t v75 = 0xD00000000000002FLL;
  uint64_t v76 = (unint64_t *)0x8000000241CE3C60;
  uint64_t v37 = (void *)sub_241CD76E0();
  sub_241CD73E0();

  sub_241CDB180();
  uint64_t v38 = v64;
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CDB180();
  uint64_t v39 = (uint64_t)v30;
  uint64_t v40 = (uint64_t)v30;
  uint64_t v41 = v38;
  sub_241C0D550(v40, v31, v38, v66, v32, (uint64_t)v20, v34, v67, v36, v75, v76);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241C21DE8(v34, (uint64_t (*)(void))sub_241C1E8D8);
  sub_241C21DE8((uint64_t)v20, (uint64_t (*)(void))sub_241C1E8D8);
  uint64_t v42 = v55;
  uint64_t v43 = v58;
  uint64_t v44 = v58 + *(int *)(v55 + 48);
  sub_241C1F8E8(v39, v58, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C1F8E8((uint64_t)v31, v44, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v45 = v57;
  uint64_t v46 = v57 + *(int *)(v42 + 48);
  sub_241C1F8E8(v43, v57, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C1F8E8(v44, v46, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v47 = v56;
  uint64_t v48 = v56 + *(int *)(v42 + 48);
  sub_241C1F8E8(v45, v56, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C1F8E8(v46, v48, (uint64_t (*)(void))sub_241C1F8B4);
  id v49 = sub_241C0EDFC(v47, v48, v41);
  sub_241C21DE8(v48, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C21DE8(v47, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v75 = (uint64_t)v49;
  sub_241C10808();
  uint64_t v50 = v68;
  sub_241CDA5D0();
  sub_241C1F950(&qword_26B02EAA0, &qword_26B032810, (uint64_t (*)(uint64_t))sub_241C10808);
  uint64_t v51 = v70;
  uint64_t v52 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v50, v51);
  sub_241C21DE8(v45, (uint64_t (*)(void))sub_241C1F830);
  sub_241C21DE8(v39, (uint64_t (*)(void))sub_241C1F830);
  sub_241C21DE8(v44, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C21DE8(v43, (uint64_t (*)(void))sub_241C1F8B4);
  return v52;
}

void sub_241C1F830(uint64_t a1)
{
}

void sub_241C1F850(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_241C1F8B4(uint64_t a1)
{
}

uint64_t sub_241C1F8E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241C1F950(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C20740(255, a2, a3, MEMORY[0x263EFDDF8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241C1F9B4(uint64_t a1)
{
}

uint64_t sub_241C1F9E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_241C1FA50(uint64_t a1)
{
}

void sub_241C1FA84(uint64_t a1)
{
}

void sub_241C1FAB8(uint64_t a1)
{
}

uint64_t sub_241C1FAEC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 80) & ~v2;
  unint64_t v15 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = sub_241CD7740();
  uint64_t v4 = *(void *)(v16 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v15 + v5 + 8) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v8 = sub_241CD6EE0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v6 + v7 + v10) & ~v10;
  uint64_t v12 = v2 | v5 | v10 | 7;
  unint64_t v13 = ((*(void *)(v9 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  sub_241A31190(v0 + 40);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v6, v16);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v11, v8);

  return MEMORY[0x270FA0238](v0, v13, v12);
}

uint64_t sub_241C1FD10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(sub_241CD7740() - 8);
  unint64_t v11 = (v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(sub_241CD6EE0() - 8);
  unint64_t v14 = (v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  return sub_241C1BBD0(a1, v2[4], v2 + 5, (uint64_t)v2 + v8, *(void *)((char *)v2 + v9), (uint64_t)v2 + v11, (uint64_t)v2 + v14, *(void *)((char *)v2 + ((*(void *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8)), a2, v5, v6);
}

void sub_241C1FEC0()
{
  if (!qword_26B032710)
  {
    sub_241C20740(255, &qword_26B034C20, MEMORY[0x263F45738], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032710);
    }
  }
}

uint64_t sub_241C1FF58()
{
  return sub_241C1090C(&qword_26B038968, (void (*)(uint64_t))sub_241C1FEC0);
}

uint64_t sub_241C1FF8C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_241C200FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  sub_241CD7740();
  uint64_t v5 = *(void *)(v2 + 40);
  unint64_t v6 = *(void *)(v2 + 48);

  return sub_241C1C910(a1, v5, v6, a2);
}

unint64_t sub_241C20214()
{
  unint64_t result = qword_26B02E940;
  if (!qword_26B02E940)
  {
    sub_241C20608(255, &qword_26B0323A8, (void (*)(uint64_t))sub_241C1FEC0, sub_241C1E8B8, (void (*)(void))sub_241C1FF58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B02E940);
  }
  return result;
}

uint64_t sub_241C202B0()
{
  uint64_t v1 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v18 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v20 = sub_241CD7740();
  uint64_t v3 = *(void *)(v20 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v17 = *(void *)(v3 + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + ((v2 + 40) & ~v2);
  uint64_t v6 = sub_241CD6D00();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v19(v5, v6);
  uint64_t v7 = v5 + v1[5];
  uint64_t v8 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v5 + v1[6];
  uint64_t v10 = sub_241CD9820();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v2 | v4 | 7;
  uint64_t v13 = (((v2 + 40) & ~v2) + v18 + v4) & ~v4;
  uint64_t v14 = v5 + v1[7];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19(v5 + v1[11], v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v13, v20);

  return MEMORY[0x270FA0238](v0, v13 + v17, v12);
}

uint64_t sub_241C20590(uint64_t a1)
{
  return sub_241C239C8(a1, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *, char *))sub_241C1CEC0);
}

void sub_241C205BC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241C20608(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_241CDA3E0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241C20698(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241C2070C(uint64_t a1)
{
}

void sub_241C20740(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241C207A4()
{
  return sub_241C1090C(&qword_26B0326C0, (void (*)(uint64_t))sub_241B664CC);
}

void sub_241C207D8()
{
  if (!qword_268D43530)
  {
    sub_241C20894();
    sub_241B664CC();
    sub_241C1090C(&qword_268D43540, (void (*)(uint64_t))sub_241C20894);
    sub_241C207A4();
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43530);
    }
  }
}

void sub_241C20894()
{
  if (!qword_268D43538)
  {
    sub_241C2070C(255);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43538);
    }
  }
}

uint64_t sub_241C20904()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*((void *)v6 - 1) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v21 = *(void *)(*((void *)v6 - 1) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v23 = v0;
  uint64_t v9 = v0 + v8;
  uint64_t v10 = sub_241CD6D00();
  uint64_t v11 = (void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  uint64_t v22 = *v11;
  (*v11)(v9, v10);
  uint64_t v12 = v9 + v6[5];
  uint64_t v13 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v9 + v6[6];
  uint64_t v15 = sub_241CD9820();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  uint64_t v17 = v3 | v7 | 7;
  uint64_t v18 = v9 + v6[7];
  uint64_t v19 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22(v9 + v6[11], v10);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v23, v8 + v21, v17);
}

uint64_t sub_241C20BD4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C23D2C(a1, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C16D58, a2);
}

uint64_t sub_241C20C00()
{
  uint64_t v1 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v16 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v17 = v0;
  uint64_t v4 = v0 + v3;
  uint64_t v5 = sub_241CD6D00();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v0 + v3, v5);
  uint64_t v7 = v0 + v3 + v1[5];
  uint64_t v8 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + v3 + v1[6];
  uint64_t v10 = sub_241CD9820();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v2 | 7;
  uint64_t v13 = v4 + v1[7];
  uint64_t v14 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6(v4 + v1[11], v5);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v17, v3 + v16, v12);
}

uint64_t sub_241C20E48(uint64_t a1)
{
  return sub_241C24000(a1, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_241B643B8);
}

unint64_t sub_241C20E74()
{
  unint64_t result = qword_26B032388;
  if (!qword_26B032388)
  {
    sub_241C20608(255, (unint64_t *)&qword_26B032390, (void (*)(uint64_t))sub_241B664CC, sub_241C108A4, (void (*)(void))sub_241C207A4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032388);
  }
  return result;
}

uint64_t sub_241C20F10()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*((void *)v6 - 1) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v21 = *(void *)(*((void *)v6 - 1) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v9 = v0 + v8;
  uint64_t v10 = sub_241CD6D00();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v22(v0 + v8, v10);
  uint64_t v11 = v0 + v8 + v6[5];
  uint64_t v12 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v0 + v8 + v6[6];
  uint64_t v14 = sub_241CD9820();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  unint64_t v16 = (v21 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = v3 | v7 | 7;
  uint64_t v18 = v9 + v6[7];
  uint64_t v19 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22(v9 + v6[11], v10);
  swift_bridgeObjectRelease();
  sub_241A31190(v0 + v16);

  return MEMORY[0x270FA0238](v0, v16 + 40, v17);
}

uint64_t sub_241C211F0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD7740() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0) - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v2 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8);

  return sub_241C1CA7C(a1, v2 + v6, v2 + v9, v10, a2);
}

uint64_t sub_241C21300()
{
  uint64_t v1 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v23 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v3 = sub_241CD7740();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  uint64_t v4 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v21 = *(void *)(v26 + 64);
  uint64_t v5 = sub_241CD6EE0();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  uint64_t v6 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v20 = *(void *)(v24 + 64);
  swift_bridgeObjectRelease();
  sub_241A31190(v0 + 24);
  uint64_t v7 = v0 + ((v2 + 64) & ~v2);
  uint64_t v8 = sub_241CD6D00();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v22(v7, v8);
  uint64_t v9 = v7 + v1[5];
  uint64_t v10 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v7 + v1[6];
  uint64_t v12 = sub_241CD9820();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v19 = v2 | v4 | v6 | 7;
  unint64_t v14 = (((v23 + ((v2 + 64) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + v4 + 8) & ~v4;
  unint64_t v15 = (v14 + v21 + v6) & ~v6;
  uint64_t v16 = v7 + v1[7];
  uint64_t v17 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22(v7 + v1[11], v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v26 + 8))(v0 + v14, v27);
  (*(void (**)(unint64_t, uint64_t))(v24 + 8))(v0 + v15, v25);

  return MEMORY[0x270FA0238](v0, v15 + v20, v19);
}

uint64_t sub_241C2167C()
{
  uint64_t v1 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v18 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v20 = sub_241CD7740();
  uint64_t v3 = *(void *)(v20 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v17 = *(void *)(v3 + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + ((v2 + 32) & ~v2);
  uint64_t v6 = sub_241CD6D00();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v19(v5, v6);
  uint64_t v7 = v5 + v1[5];
  uint64_t v8 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v5 + v1[6];
  uint64_t v10 = sub_241CD9820();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v2 | v4 | 7;
  uint64_t v13 = (((v2 + 32) & ~v2) + v18 + v4) & ~v4;
  uint64_t v14 = v5 + v1[7];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19(v5 + v1[11], v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v13, v20);

  return MEMORY[0x270FA0238](v0, v13 + v17, v12);
}

uint64_t sub_241C2195C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_241CD7740() - 8);
  uint64_t v9 = *(void *)(v2 + 16);
  unint64_t v10 = *(void *)(v2 + 24);
  uint64_t v11 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_241C1CBB0(a1, v9, v10, v11, a2);
}

uint64_t sub_241C21A44()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  unint64_t v6 = (int *)(type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = v3 | v7 | 7;
  unint64_t v10 = (((*(void *)(*(void *)v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = v0 + v8;
  uint64_t v12 = sub_241CD6D00();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  uint64_t v14 = v11 + v6[7];
  uint64_t v15 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v11 + v6[10];
  uint64_t v17 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  v13(v11 + v6[12], v12);
  swift_bridgeObjectRelease();
  sub_241A31190(v0 + v10);

  return MEMORY[0x270FA0238](v0, v10 + 40, v9);
}

uint64_t sub_241C21C94@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C21CC0(a1, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t, void, unint64_t))sub_241C14750, a2);
}

uint64_t sub_241C21CC0@<X0>(unsigned __int8 *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void, unint64_t, unint64_t, void, unint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = *(void *)(sub_241CD7740() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(a2(0) - 8);
  unint64_t v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v14 = (*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t result = a3(*a1, v4 + v10, v4 + v13, *(void *)(v4 + v14), v4 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8));
  *a4 = result;
  return result;
}

uint64_t sub_241C21DE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241C21E48()
{
  uint64_t v1 = (int *)(type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_241CD6D00();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v6 + v1[7];
  uint64_t v10 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v6 + v1[10];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  v8(v6 + v1[12], v7);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_241C2200C(uint64_t a1)
{
  return sub_241C22038(a1, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_241C1CF80);
}

uint64_t sub_241C22038(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v3 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a3(a1, v3 + v6, v7);
}

uint64_t sub_241C220FC()
{
  uint64_t v1 = (int *)(type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_241CD7740();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v16 = v2 | v7 | 7;
  uint64_t v17 = v8 + *(void *)(v6 + 64);
  uint64_t v9 = sub_241CD6D00();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v0 + v3, v9);
  uint64_t v11 = v0 + v3 + v1[7];
  uint64_t v12 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v0 + v3 + v1[10];
  uint64_t v14 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  v10(v0 + v3 + v1[12], v9);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);

  return MEMORY[0x270FA0238](v0, v17, v16);
}

uint64_t sub_241C22338@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C22364(a1, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request, (uint64_t (*)(unint64_t, unint64_t, void))sub_241C6DA64, a2);
}

uint64_t sub_241C22364@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(unint64_t, unint64_t, void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2(0) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_241CD7740() - 8);
  uint64_t result = a3(v4 + v9, v4 + ((v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), *a1);
  *a4 = result;
  return result;
}

uint64_t sub_241C22448()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (int *)(type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = v3 | v7 | 7;
  unint64_t v10 = (*(void *)(*(void *)v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = v0 + v8;
  uint64_t v12 = sub_241CD6D00();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  uint64_t v14 = v11 + v6[7];
  uint64_t v15 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v11 + v6[10];
  uint64_t v17 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  v13(v11 + v6[12], v12);
  swift_bridgeObjectRelease();
  sub_241A31190(v0 + v10);

  return MEMORY[0x270FA0238](v0, v10 + 40, v9);
}

uint64_t sub_241C22690(uint64_t a1)
{
  return sub_241C226BC(a1, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))sub_241C1D094);
}

uint64_t sub_241C226BC(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(sub_241CD7740() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(a2(0) - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v3 + 16);
  uint64_t v12 = v3 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);

  return a3(a1, v11, v3 + v7, v3 + v10, v12);
}

uint64_t sub_241C227EC()
{
  uint64_t v1 = (int *)(type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 64) & ~v2;
  unint64_t v21 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = sub_241CD7740();
  uint64_t v4 = *(void *)(v23 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v18 = (v21 + v5 + 8) & ~v5;
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v22 = sub_241CD6EE0();
  uint64_t v7 = *(void *)(v22 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v18 + v6 + v8) & ~v8;
  unint64_t v19 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v20 = v2 | v5 | v8 | 7;
  swift_bridgeObjectRelease();
  sub_241A31190(v0 + 24);
  uint64_t v10 = v0 + v3;
  uint64_t v11 = sub_241CD6D00();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  uint64_t v13 = v10 + v1[7];
  uint64_t v14 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v10 + v1[10];
  uint64_t v16 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  v12(v10 + v1[12], v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v18, v23);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v22);

  return MEMORY[0x270FA0238](v0, v19, v20);
}

uint64_t sub_241C22AE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C22B10(a1, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, void, uint64_t, unint64_t, void, unint64_t, unint64_t))sub_241C22C70, a2);
}

uint64_t sub_241C22B10@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(uint64_t, void, uint64_t, unint64_t, void, unint64_t, unint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2(0) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(sub_241CD7740() - 8);
  unint64_t v12 = (v10 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(sub_241CD6EE0() - 8);
  uint64_t result = a3(a1, *(void *)(v4 + 16), v4 + 24, v4 + v9, *(void *)(v4 + v10), v4 + v12, v4 + ((v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)));
  *a4 = result;
  return result;
}

uint64_t sub_241C22C70(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v65 = a7;
  uint64_t v66 = a3;
  uint64_t v74 = a6;
  uint64_t v67 = a5;
  uint64_t v64 = a2;
  uint64_t v9 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v63 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD7740();
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v72 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CDA1A0();
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v73 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C20740(0, &qword_26B032810, (uint64_t (*)(uint64_t))sub_241C10808, MEMORY[0x263EFDDF8]);
  uint64_t v69 = *(void *)(v15 - 8);
  uint64_t v70 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v68 = (char *)v54 - v16;
  sub_241C1E8B8(0);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C1F830(0);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v56 = (uint64_t)v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v57 = (uint64_t)v54 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v58 = (uint64_t)v54 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)v54 - v29;
  uint64_t v55 = v28;
  uint64_t v31 = (void (*)(uint64_t))((char *)v54 + *(int *)(v28 + 48) - v29);
  unint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(a4 + *(int *)(v9 + 28));
  uint64_t v33 = *(int *)(v18 + 56);
  uint64_t v34 = (uint64_t)&v20[v33];
  uint64_t v35 = a1 + v33;
  sub_241C1F8E8(a1, (uint64_t)v20, (uint64_t (*)(void))sub_241C1E8D8);
  sub_241C1F8E8(v35, v34, (uint64_t (*)(void))sub_241C1E8D8);
  v54[2] = v9;
  uint64_t v61 = a4;
  swift_bridgeObjectRetain();
  uint64_t v36 = (void *)sub_241CD7770();
  uint64_t v75 = 0;
  uint64_t v76 = (unint64_t *)0xE000000000000000;
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  v54[1] = ", frequencyChange isNil=";
  uint64_t v75 = 0xD00000000000002BLL;
  uint64_t v76 = (unint64_t *)0x8000000241CE3CE0;
  uint64_t v37 = (void *)sub_241CD76E0();
  sub_241CD73E0();

  sub_241CDB180();
  uint64_t v38 = v64;
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CDB180();
  uint64_t v39 = (uint64_t)v30;
  uint64_t v40 = (uint64_t)v30;
  uint64_t v41 = v38;
  sub_241C0D550(v40, v31, v38, v66, v32, (uint64_t)v20, v34, v67, v36, v75, v76);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241C21DE8(v34, (uint64_t (*)(void))sub_241C1E8D8);
  sub_241C21DE8((uint64_t)v20, (uint64_t (*)(void))sub_241C1E8D8);
  uint64_t v42 = v55;
  uint64_t v43 = v58;
  uint64_t v44 = v58 + *(int *)(v55 + 48);
  sub_241C1F8E8(v39, v58, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C1F8E8((uint64_t)v31, v44, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v45 = v57;
  uint64_t v46 = v57 + *(int *)(v42 + 48);
  sub_241C1F8E8(v43, v57, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C1F8E8(v44, v46, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v47 = v56;
  uint64_t v48 = v56 + *(int *)(v42 + 48);
  sub_241C1F8E8(v45, v56, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C1F8E8(v46, v48, (uint64_t (*)(void))sub_241C1F8B4);
  id v49 = sub_241C0EDFC(v47, v48, v41);
  sub_241C21DE8(v48, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C21DE8(v47, (uint64_t (*)(void))sub_241C1F8B4);
  uint64_t v75 = (uint64_t)v49;
  sub_241C10808();
  uint64_t v50 = v68;
  sub_241CDA5D0();
  sub_241C1F950(&qword_26B02EAA0, &qword_26B032810, (uint64_t (*)(uint64_t))sub_241C10808);
  uint64_t v51 = v70;
  uint64_t v52 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v50, v51);
  sub_241C21DE8(v45, (uint64_t (*)(void))sub_241C1F830);
  sub_241C21DE8(v39, (uint64_t (*)(void))sub_241C1F830);
  sub_241C21DE8(v44, (uint64_t (*)(void))sub_241C1F8B4);
  sub_241C21DE8(v43, (uint64_t (*)(void))sub_241C1F8B4);
  return v52;
}

uint64_t sub_241C23758()
{
  uint64_t v1 = (int *)(type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_241CD7740();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v16 = v2 | v7 | 7;
  uint64_t v17 = v8 + *(void *)(v6 + 64);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_241CD6D00();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v0 + v3, v9);
  uint64_t v11 = v0 + v3 + v1[7];
  uint64_t v12 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v0 + v3 + v1[10];
  uint64_t v14 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  v10(v0 + v3 + v1[12], v9);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);

  return MEMORY[0x270FA0238](v0, v17, v16);
}

uint64_t sub_241C2399C(uint64_t a1)
{
  return sub_241C239C8(a1, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *, char *))sub_241C1D1D0);
}

uint64_t sub_241C239C8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, char *, char *))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_241CD7740() - 8);
  uint64_t v9 = *((void *)v3 + 2);
  uint64_t v10 = *((void *)v3 + 3);
  uint64_t v11 = *((void *)v3 + 4);
  uint64_t v12 = &v3[(v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)];

  return a3(a1, v9, v10, v11, &v3[v6], v12);
}

uint64_t sub_241C23ACC()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  unint64_t v6 = (int *)(type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(*(void *)v6 + 64);
  uint64_t v10 = v3 | v7 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = v0 + v8;
  uint64_t v12 = sub_241CD6D00();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  uint64_t v14 = v11 + v6[7];
  uint64_t v15 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v11 + v6[10];
  uint64_t v17 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  v13(v11 + v6[12], v12);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v9, v10);
}

uint64_t sub_241C23D00@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C23D2C(a1, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C17414, a2);
}

uint64_t sub_241C23D2C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void, unint64_t, unint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = *(void *)(sub_241CD7740() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(a2(0) - 8);
  uint64_t result = a3(*a1, v4 + v10, v4 + ((v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)));
  *a4 = result;
  return result;
}

uint64_t sub_241C23E1C()
{
  uint64_t v1 = (int *)(type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_241CD6D00();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v6 + v1[7];
  uint64_t v10 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v6 + v1[10];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  v8(v6 + v1[12], v7);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_241C23FD4(uint64_t a1)
{
  return sub_241C24000(a1, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_241C250A0);
}

uint64_t sub_241C24000(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6, v7);
}

uint64_t sub_241C2409C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_241C24204@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(*(void *)(v2 + 24) + 8);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_241CD7740() - 8);
  uint64_t result = sub_241BAAA50(v2 + v8, v2 + ((v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), *a1, v5, v6);
  *a2 = result;
  return result;
}

uint64_t sub_241C24314()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_241C24320()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_241C2432C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_241CD77C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_241C2439C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t *sub_241C243D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v21 = a5;
  uint64_t v11 = *v5;
  uint64_t v12 = sub_241CD7690();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B62B88((uint64_t)v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))((uint64_t)v5 + OBJC_IVAR____TtC9Summaries39SleepTrendSummarySharableModelGenerator_domain, v15, v12);
  sub_241C26950(a2, (uint64_t)v5 + OBJC_IVAR____TtC9Summaries39SleepTrendSummarySharableModelGenerator_request);
  uint64_t v16 = sub_241C277FC(&qword_26B02F648, (void (*)(uint64_t))type metadata accessor for SleepTrendSummarySharableModelGenerator);
  uint64_t v17 = static TrendSummaryModelGenerating.makePublisher(generatorContext:request:trendAnalysisEngine:cloudSyncObserverFactory:)(a1, a2, a3, a4, v21, v11, v16);
  sub_241A31190(a3);
  sub_241C269B4(a2);
  uint64_t v18 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
  *(uint64_t *)((char *)v6 + OBJC_IVAR____TtC9Summaries39SleepTrendSummarySharableModelGenerator_publisher) = v17;
  return v6;
}

uint64_t sub_241C245CC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *, char *, uint64_t), uint64_t a5)
{
  uint64_t v48 = a4;
  id v52 = a1;
  uint64_t v53 = a5;
  uint64_t v51 = a3;
  uint64_t v5 = (void *)sub_241CDA1A0();
  uint64_t v54 = (void *)*(v5 - 1);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD6D00();
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C27798(0, &qword_26B0321B0, MEMORY[0x263F46B90], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = sub_241CD9840();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = sub_241CD9CC0();
  if (*(void *)(v20 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v13, v20 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_241C26CE0((uint64_t)v13, &qword_26B0321B0, MEMORY[0x263F46B90]);
    sub_241CDA0F0();
    unint64_t v21 = v53;
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_241CDA190();
    os_log_type_t v23 = sub_241CDB650();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = v54;
    if (v24)
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v56 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      id v52 = v5;
      aBlock[0] = v47;
      swift_getMetatypeMetadata();
      uint64_t v28 = sub_241CDB120();
      aBlock[0] = sub_241A33FE4(v28, v29, &v56);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      aBlock[0] = sub_241A33FE4((uint64_t)v48, v21, &v56);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v22, v23, "[%s]: Statistic trend request without statistics option: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v27, -1, -1);
      MEMORY[0x245637F20](v26, -1, -1);

      ((void (*)(char *, id))v25[1])(v7, v52);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      ((void (*)(char *, void *))v25[1])(v7, v5);
    }
    return MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v48(v19, v13, v14);
    uint64_t v30 = swift_allocObject();
    uint64_t v47 = v30;
    *(void *)(v30 + 16) = MEMORY[0x263F8EE78];
    uint64_t v54 = (void *)(v30 + 16);
    uint64_t v46 = v19;
    sub_241CD67E0();
    uint64_t v53 = sub_241CD6C60();
    uint64_t v45 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v31 = v50;
    unint64_t v32 = *(void (**)(char *, uint64_t))(v49 + 8);
    v32(v10, v50);
    sub_241CD67B0();
    uint64_t v33 = (void *)sub_241CD6C60();
    v32(v10, v31);
    uint64_t v35 = v45;
    uint64_t v34 = v46;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v45, v46, v14);
    unint64_t v36 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    unint64_t v37 = (v16 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v38 = swift_allocObject();
    v48((char *)(v38 + v36), v35, v14);
    *(void *)(v38 + v37) = v47;
    aBlock[4] = sub_241C26E2C;
    aBlock[5] = v38;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241B669D8;
    aBlock[3] = &unk_26F5C62F0;
    uint64_t v39 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v40 = (void *)v53;
    objc_msgSend(v52, sel_enumerateStatisticsFromDate_toDate_withBlock_, v53, v33, v39);
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v34, v14);
    uint64_t v41 = v54;
    swift_beginAccess();
    uint64_t v42 = *v41;
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v42;
}

uint64_t sub_241C24CAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a3;
  sub_241A558EC();
  uint64_t v36 = v6;
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_241CD6D00();
  uint64_t v8 = *(void *)(v35 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v35);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = sub_241CD6810();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = (unint64_t *)(a4 + 16);
  id v20 = objc_msgSend(a1, sel_startDate, v34);
  sub_241CD6CB0();

  id v21 = objc_msgSend(a1, sel_endDate);
  sub_241CD6CB0();

  sub_241CD67C0();
  uint64_t v22 = (void *)sub_241CDB4C0();
  os_log_type_t v23 = v22;
  if (v22)
  {
    objc_msgSend(v22, sel__value);
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v25 = 0;
  }
  sub_241CD67B0();
  sub_241CD6770();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v35);
  uint64_t v26 = (uint64_t)v37;
  uint64_t v27 = &v37[*(int *)(v36 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v37, v16, v12);
  *(void *)uint64_t v27 = v25;
  v27[8] = v23 == 0;
  swift_beginAccess();
  unint64_t v28 = *v19;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v19 = v28;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v28 = sub_241AF8084(0, *(void *)(v28 + 16) + 1, 1, v28);
    unint64_t *v19 = v28;
  }
  unint64_t v31 = *(void *)(v28 + 16);
  unint64_t v30 = *(void *)(v28 + 24);
  if (v31 >= v30 >> 1)
  {
    unint64_t v28 = sub_241AF8084(v30 > 1, v31 + 1, 1, v28);
    unint64_t *v19 = v28;
  }
  *(void *)(v28 + 16) = v31 + 1;
  sub_241C26EF0(v26, v28+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v31, (uint64_t (*)(void))sub_241A558EC);
  swift_endAccess();
  unint64_t v32 = *(void (**)(char *, uint64_t))(v13 + 8);
  v32(v16, v12);
  return ((uint64_t (*)(char *, uint64_t))v32)(v18, v12);
}

uint64_t sub_241C250A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v54 = a3;
  uint64_t v55 = a2;
  uint64_t v56 = a4;
  uint64_t v5 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v53 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD6D00();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v47 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v46 = (char *)&v43 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v45 = (char *)&v43 - v12;
  uint64_t v13 = sub_241CD6810();
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v52 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v48 = (char *)&v43 - v17;
  uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x263F44B28];
  sub_241C27798(0, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  MEMORY[0x270FA5388](v19 - 8);
  id v21 = (char *)&v43 - v20;
  sub_241C27798(0, &qword_26B034D58, v18, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v43 - v23;
  uint64_t v25 = sub_241CDB5B0();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  unint64_t v28 = (char *)&v43 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C26C4C(a1, (uint64_t)v21);
  unint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  uint64_t v30 = 1;
  if (v29(v21, 1, v25) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v24, v21, v25);
    uint64_t v30 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, v30, 1, v25);
  if (v29(v24, 1, v25) == 1)
  {
    uint64_t result = sub_241C26CE0((uint64_t)v24, &qword_26B034D58, MEMORY[0x263F44B28]);
    uint64_t v32 = MEMORY[0x263F8EE78];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v24, v25);
    uint64_t v33 = (void *)sub_241CDB5A0();
    uint64_t v34 = (uint64_t)v54;
    uint64_t v43 = &v54[*(int *)(v5 + 20)];
    uint64_t v44 = v33;
    sub_241B615F4((uint64_t)&v54[*(int *)(v5 + 40)], (uint64_t)v43, (uint64_t)v16);
    sub_241CD67E0();
    uint64_t v35 = v47;
    sub_241CD67B0();
    sub_241CD6C50();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v50);
    uint64_t v36 = (uint64_t)v48;
    sub_241CD67C0();
    unint64_t v37 = *(void (**)(char *, uint64_t))(v51 + 8);
    uint64_t v38 = v16;
    uint64_t v39 = v52;
    v37(v38, v52);
    sub_241C26950(v34, v53);
    uint64_t v40 = (void (*)(char *, char *, uint64_t))sub_241CDB120();
    uint64_t v54 = v28;
    uint64_t v41 = v44;
    uint64_t v32 = sub_241C245CC(v44, (uint64_t)v43, v36, v40, v42);

    swift_bridgeObjectRelease();
    v37((char *)v36, v39);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v54, v25);
  }
  *uint64_t v56 = v32;
  return result;
}

uint64_t sub_241C255FC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries39SleepTrendSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_241C269B4(v0 + OBJC_IVAR____TtC9Summaries39SleepTrendSummarySharableModelGenerator_request);

  return swift_deallocClassInstance();
}

uint64_t sub_241C256BC()
{
  return type metadata accessor for SleepTrendSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for SleepTrendSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B02F658);
}

uint64_t sub_241C256E4()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B02F598);
}

void *sub_241C257DC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v25 = sub_241CD6D00();
    uint64_t v24 = *(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16);
    v24(a1, a2, v25);
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_241CD9D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
    uint64_t v12 = a3[8];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_241CD77C0();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    uint64_t v17 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    v24((void *)((char *)a1 + v17), (void *)((char *)a2 + v17), v25);
    uint64_t v18 = a3[11];
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241C259C0(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_241CD6D00();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  v5(a1 + a2[10], v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241C25AFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v23 = sub_241CD6D00();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  v22(a1, a2, v23);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_241CD77C0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  uint64_t v16 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  v22(a1 + v16, a2 + v16, v23);
  uint64_t v17 = a3[11];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241C25C90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  v7(a1 + a3[10], a2 + a3[10], v6);
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241C25E30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  v7(a1 + v17, a2 + v17, v6);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_241C25F88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  v7(a1 + v16, a2 + v16, v6);
  uint64_t v17 = a3[11];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241C26104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C26118);
}

uint64_t sub_241C26118(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD9D00();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_241CD77C0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_241C26298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C262AC);
}

uint64_t sub_241C262AC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_241CD6D00();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_241CD9D00();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6]) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_241CD77C0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t sub_241C2642C()
{
  uint64_t result = sub_241CD6D00();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD9D00();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_241CD77C0();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

_UNKNOWN **sub_241C26554()
{
  return &off_26F5C61D8;
}

uint64_t sub_241C26560(uint64_t a1)
{
  uint64_t result = sub_241C277FC(&qword_26B02F640, (void (*)(uint64_t))type metadata accessor for SleepTrendSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241C265B8()
{
  return &off_26F5C6220;
}

uint64_t sub_241C265C4()
{
  return swift_retain();
}

uint64_t sub_241C265D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries39SleepTrendSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241C26654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  sub_241B663F0();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = a1;
  sub_241C26950(a3, (uint64_t)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v3;
  sub_241C26EF0((uint64_t)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  sub_241B664CC();
  sub_241C27798(0, &qword_26B034C10, (uint64_t (*)(uint64_t))sub_241A558EC, MEMORY[0x263F8D488]);
  sub_241C277FC(&qword_26B0326C0, (void (*)(uint64_t))sub_241B664CC);
  sub_241CDA710();
  swift_release();
  sub_241C277FC((unint64_t *)&qword_26B032388, (void (*)(uint64_t))sub_241B663F0);
  uint64_t v16 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v16;
}

uint64_t sub_241C268F8(uint64_t a1)
{
  uint64_t result = sub_241C277FC(&qword_26B02F650, (void (*)(uint64_t))type metadata accessor for SleepTrendSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241C26950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241C269B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241C26A10()
{
  unint64_t v1 = (int *)(type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_241CD6D00();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v6 + v1[7];
  uint64_t v10 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v6 + v1[10];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  v8(v6 + v1[12], v7);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_241C26BC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (char *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  return sub_241C250A0(a1, v6, v7, a2);
}

uint64_t sub_241C26C4C(uint64_t a1, uint64_t a2)
{
  sub_241C27798(0, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241C26CE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241C27798(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241C26D50()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C26D88()
{
  uint64_t v1 = sub_241CD9840();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241C26E2C(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_241CD9840() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241C24CAC(a1, a2, v2 + v6, v7);
}

uint64_t sub_241C26ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241C26EE8()
{
  return swift_release();
}

uint64_t sub_241C26EF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241C26F58(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a1;
  uint64_t v3 = sub_241CD7690();
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v53 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241C27798(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v47 = (char *)&v42 - v7;
  uint64_t v48 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241C27798(0, &qword_26B0385B8, MEMORY[0x263F07490], v5);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v49 = sub_241CDB5C0();
  uint64_t v51 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v45 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241ABD6A4();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v56 = v12;
  uint64_t v57 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v52 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241CD97E0();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v16 = sub_241CD9D00();
  uint64_t v54 = *(void *)(v16 - 8);
  uint64_t v55 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v60 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_241CD6810();
  uint64_t v43 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  uint64_t v21 = a2;
  uint64_t v22 = a2 + *(int *)(v20 + 40);
  uint64_t v23 = a2 + *(int *)(v20 + 20);
  uint64_t v44 = v19;
  sub_241B615F4(v22, v23, (uint64_t)v19);
  sub_241CD9CF0();
  sub_241CD9CC0();
  sub_241CD9CB0();
  sub_241CD9CD0();
  sub_241CD9CE0();
  type metadata accessor for HKCategoryValueSleepAnalysis(0);
  sub_241CDBA40();
  sub_241C277FC((unint64_t *)&unk_26B034DF8, type metadata accessor for HKCategoryValueSleepAnalysis);
  uint64_t v24 = (void *)sub_241CDAF00();
  swift_bridgeObjectRelease();
  sub_241CD76B0();
  sub_241A311E0(v62, v62[3]);
  uint64_t v25 = (void *)sub_241CD75B0();
  uint64_t v42 = v21;
  uint64_t v26 = (void *)sub_241CD7770();
  uint64_t v27 = sub_241CD6D00();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v10, v21, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v10, 0, 1, v27);
  uint64_t v29 = v43;
  uint64_t v30 = (uint64_t)v47;
  uint64_t v31 = v61;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v47, v19, v61);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v31);
  id v32 = v24;
  uint64_t v33 = v45;
  sub_241CDB5F0();

  uint64_t v34 = v32;
  sub_241C26CE0(v30, &qword_26B038F10, v50);
  sub_241C26CE0((uint64_t)v10, &qword_26B0385B8, v48);
  sub_241A31190((uint64_t)v62);
  sub_241CD7730();
  uint64_t v35 = v53;
  sub_241B62B88(v53);
  sub_241C277FC(&qword_26B034D68, MEMORY[0x263F44B38]);
  uint64_t v36 = v49;
  uint64_t v37 = sub_241CDA680();
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v35, v59);
  sub_241A31190((uint64_t)v62);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v36);
  v62[0] = v37;
  sub_241ABD780();
  sub_241C27798(0, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_241C277FC(&qword_26B032768, (void (*)(uint64_t))sub_241ABD780);
  uint64_t v38 = v52;
  sub_241CDA710();
  swift_release();
  sub_241C277FC(&qword_26B0323D0, (void (*)(uint64_t))sub_241ABD6A4);
  uint64_t v39 = v56;
  uint64_t v40 = sub_241CDA6D0();

  (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v60, v55);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v44, v61);
  return v40;
}

void sub_241C27798(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241C277FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C27844(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_241CD9ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v20 - v13;
  sub_241C28C74(a2, (uint64_t)&v22, (uint64_t (*)(void))sub_241C28C0C);
  sub_241C28C74(a1, (uint64_t)v14, type metadata accessor for SummariesFullProfileExecutor.Request);
  if (v23)
  {
    swift_retain();
    sub_241C28CDC((uint64_t)v14, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_241A5598C(&v22, (uint64_t)&v24);
  }
  else
  {
    uint64_t v15 = *((void *)v14 + 2);
    uint64_t v16 = sub_241CDB0D0();
    uint64_t v20 = v17;
    uint64_t v21 = v16;
    uint64_t v18 = self;
    swift_retain();
    *(void *)&long long v24 = objc_msgSend(v18, sel_hkhr_aFibBurdenSyncedDefaultsDomainWithHealthStore_, v15);
    *((void *)&v24 + 1) = v21;
    uint64_t v26 = &type metadata for HealthStoreAFibBurdenLastAnalysisProvider;
    uint64_t v27 = &off_26F5C63E8;
    uint64_t v25 = v20;
    sub_241C28CDC((uint64_t)v14, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_241C28CDC((uint64_t)&v22, (uint64_t (*)(void))sub_241C28C0C);
  }
  sub_241A5598C(&v24, v2 + qword_26B037F78);
  swift_release();
  sub_241C28C74(a1, (uint64_t)v12, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_241CD9EC0();
  sub_241C28CDC(a2, (uint64_t (*)(void))sub_241C28C0C);
  sub_241C28CDC(a1, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_241A7A6EC((uint64_t)v12, v2 + qword_26B041200);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2 + qword_26B0411F8, v8, v5);
  return v2;
}

id sub_241C27B64(void *a1, uint64_t a2, void (*a3)(id, id, void), uint64_t a4)
{
  return sub_241C27B70(a1, a3, a4);
}

id sub_241C27B70(void *a1, void (*a2)(id, id, void), uint64_t a3)
{
  uint64_t v66 = a3;
  uint64_t v67 = a2;
  uint64_t v61 = a1;
  uint64_t v4 = sub_241CD9310();
  uint64_t v64 = *(void **)(v4 - 8);
  uint64_t v65 = (char *)v4;
  MEMORY[0x270FA5388](v4);
  sub_241C0B2A4();
  uint64_t v62 = *(void (**)(char *, void, uint64_t, uint64_t))(v5 - 8);
  uint64_t v63 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_241CD9970();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  uint64_t v60 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A295CC(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v58 - v11;
  sub_241A295CC(0, &qword_26B032050, MEMORY[0x263F45780]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v58 - v17;
  sub_241A295CC(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  long long v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  long long v24 = (char *)&v58 - v23;
  sub_241C2849C((unint64_t)&v58 - v23);
  uint64_t v65 = v16;
  sub_241A313AC(0, &qword_26B034E38);
  sub_241C29B68((uint64_t)v24, (uint64_t)v22, &qword_26B0385B8, MEMORY[0x263F07490]);
  uint64_t v25 = v3 + qword_26B041200;
  uint64_t v26 = *(void **)(v25 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 40));
  uint64_t v27 = v61;
  id v28 = v61;
  id v29 = v26;
  uint64_t v30 = (void *)HKCodableSummaryAFibBurdenValue.init(sample:lastAnalysisDate:calendarCache:)(v27, (uint64_t)v22, v29);
  HKCodableSummaryAFibBurdenValue.snippetKind()();
  unint64_t v32 = HKCodableSummaryCurrentValue.Kind.rawValue.getter(v31);
  uint64_t v58 = v24;
  if (v32 == 0x617461446F6ELL && v33 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = (uint64_t)v12;
LABEL_5:
    sub_241CD7A80();
    uint64_t v36 = sub_241CD7AB0();
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v62 = *(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56);
    uint64_t v63 = v37 + 56;
    v62(v18, 0, 1, v36);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
    uint64_t v64 = v30;
    uint64_t v39 = v59;
    v38(v34, 1, 1, v59);
    uint64_t v40 = (void (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v41 = (uint64_t)v65;
    sub_241C29B68((uint64_t)v18, (uint64_t)v65, &qword_26B032050, MEMORY[0x263F45780]);
    id v42 = sub_241A53EB0(0, 0xF000000000000000, 11, v34, v41, 0, 0);
    sub_241C29BD4((uint64_t)v18, &qword_26B032050, v40);
    sub_241CD7A80();
    v62(v18, 0, 1, v36);
    uint64_t v43 = v39;
    uint64_t v44 = v64;
    v38(v34, 1, 1, v43);
    sub_241C29B68((uint64_t)v18, v41, &qword_26B032050, v40);
    id v45 = sub_241A53EB0(0, 0xF000000000000000, 11, v34, v41, 0, 0);
    sub_241C29BD4((uint64_t)v18, &qword_26B032050, v40);
    v67(v42, v45, 0);
    uint64_t v46 = (uint64_t)v58;
LABEL_8:

    return (id)sub_241C29BD4(v46, &qword_26B0385B8, MEMORY[0x263F07490]);
  }
  char v35 = sub_241CDC100();
  swift_bridgeObjectRelease();
  uint64_t v34 = (uint64_t)v12;
  if (v35) {
    goto LABEL_5;
  }
  id v47 = v30;
  sub_241CD9A90();
  uint64_t v48 = v59;
  uint64_t v49 = v60;
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v9, *MEMORY[0x263F46C20], v59);
  id result = objc_msgSend(v47, sel_data);
  if (result)
  {
    uint64_t v51 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v52 = sub_241CD6AE0();
    unint64_t v54 = v53;

    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v12, v9, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v12, 0, 1, v48);
    uint64_t v69 = 0;
    memset(v68, 0, sizeof(v68));
    id v55 = sub_241A54648(v52, v54, 1, (uint64_t)v12, 0, 0, (uint64_t)v68);
    sub_241A37374(v52, v54);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v48);
    uint64_t v46 = (uint64_t)v58;
    id v56 = sub_241C291B4(v61, (uint64_t)v58, v29);
    uint64_t v57 = v47;
    uint64_t v44 = v56;
    id v45 = v55;
    v67(v55, v44, 0);

    id v42 = v45;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_241C283E0(void *a1)
{
  sub_241CDBE00();
  sub_241CDB180();
  id v2 = a1;
  sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
  sub_241CDB120();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  return 0;
}

uint64_t sub_241C2849C@<X0>(unint64_t a1@<X8>)
{
  unint64_t v49 = a1;
  uint64_t v2 = sub_241CD9310();
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v48 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v44 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C0B2A4();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  uint64_t v46 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A295CC(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = sub_241CD6D00();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v40 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v40 - v18;
  sub_241A311E0((void *)(v1 + qword_26B037F78), *(void *)(v1 + qword_26B037F78 + 24));
  uint64_t v20 = v50;
  uint64_t result = sub_241CDB780();
  if (!v20)
  {
    uint64_t v43 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = v7;
    uint64_t v22 = v48;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_241C29BD4((uint64_t)v10, &qword_26B0385B8, MEMORY[0x263F07490]);
      uint64_t v23 = 1;
      unint64_t v24 = v49;
      uint64_t v25 = v11;
    }
    else
    {
      uint64_t v42 = 0;
      uint64_t v26 = v12;
      uint64_t v27 = *(void (**)(unint64_t, char *, uint64_t))(v12 + 32);
      id v28 = v19;
      uint64_t v41 = v27;
      v27((unint64_t)v19, v10, v11);
      id v29 = v17;
      sub_241CD6CF0();
      uint64_t v25 = v11;
      if (sub_241CD6C70())
      {
        sub_241CDA170();
        uint64_t v30 = v26;
        char v31 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
        unint64_t v32 = v43;
        v31(v43, v28, v11);
        unint64_t v33 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
        unint64_t v34 = swift_allocObject() + v33;
        uint64_t v25 = v11;
        v41(v34, v32, v11);
        char v35 = v44;
        uint64_t v36 = v22;
        sub_241CD9270();
        uint64_t v37 = v45;
        uint64_t v38 = v50;
        sub_241CD92A0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v36);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v37);
        uint64_t v39 = *(void (**)(char *, uint64_t))(v30 + 8);
        v39(v29, v25);
        v39(v28, v25);
        uint64_t v23 = 1;
        unint64_t v24 = v49;
        uint64_t v12 = v30;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v11);
        unint64_t v24 = v49;
        v41(v49, v28, v11);
        uint64_t v23 = 0;
        uint64_t v12 = v26;
      }
    }
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v24, v23, 1, v25);
  }
  return result;
}

uint64_t sub_241C28980()
{
  return 0;
}

unint64_t sub_241C28A64()
{
  return 0xD00000000000006ELL;
}

id sub_241C28A80(void (*a1)(id, id, void), uint64_t a2)
{
  return sub_241C27B70(0, a1, a2);
}

uint64_t sub_241C28A90()
{
  return sub_241A31190(v0 + qword_26B037F78);
}

uint64_t sub_241C28AA0()
{
  sub_241C28CDC(v0 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_241A31190(v0 + qword_26B037F78);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B037F80;
  if (!qword_26B037F80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241C28BC8()
{
  return swift_initClassMetadata2();
}

void sub_241C28C0C()
{
  if (!qword_26B037E40)
  {
    sub_241A35FBC(255, &qword_26B037E38);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B037E40);
    }
  }
}

uint64_t sub_241C28C74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241C28CDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241C28D3C()
{
  uint64_t v1 = sub_241CD6D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_241C28DCC()
{
  sub_241CD6D00();

  return sub_241C28980();
}

uint64_t sub_241C28E2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C28E74()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C28EAC()
{
  return sub_241C283E0(*(void **)(v0 + 16));
}

uint64_t sub_241C28EB4(uint64_t a1)
{
  v22[1] = a1;
  uint64_t v1 = sub_241CD6EE0();
  uint64_t v23 = *(void *)(v1 - 8);
  uint64_t v24 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A295CC(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v22 - v5;
  uint64_t v7 = sub_241CD6D00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)v22 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v22 - v15;
  sub_241CD6CF0();
  uint64_t v17 = (void *)sub_241CD6C60();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v11, v7);
  id v19 = (id)HKEndOfDayForDate();

  sub_241CD6CB0();
  sub_241CD6EA0();
  sub_241CD6C30();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v24);
  v18(v14, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_241C29BD4((uint64_t)v6, &qword_26B0385B8, MEMORY[0x263F07490]);
    char v20 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v6, v7);
    char v20 = sub_241CD6C70();
    v18(v16, v7);
  }
  return v20 & 1;
}

id sub_241C291B4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v4 = sub_241CD9970();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v81 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A295CC(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v77 = (char *)&v67 - v8;
  sub_241A295CC(0, &qword_26B032050, MEMORY[0x263F45780]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v75 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v76 = (char *)&v67 - v12;
  uint64_t v13 = sub_241CD9310();
  uint64_t v73 = *(void *)(v13 - 8);
  uint64_t v74 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v71 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C0B2A4();
  uint64_t v72 = v15;
  uint64_t v70 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v69 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A295CC(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v78 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v68 = (char *)&v67 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v67 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v67 - v25;
  uint64_t v27 = sub_241CD6D00();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  char v31 = (char *)&v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  unint64_t v33 = (char *)&v67 - v32;
  if (a1)
  {
    uint64_t v82 = a1;
    id v34 = a1;
    id v35 = objc_msgSend(v34, sel_endDate);
    sub_241CD6CB0();

    LOBYTE(v35) = sub_241C28EB4((uint64_t)v33);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v27);
    if (v35) {
      goto LABEL_5;
    }
  }
  uint64_t v82 = 0;
LABEL_5:
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  v36(v26, 1, 1, v27);
  sub_241C29B68(v79, (uint64_t)v24, &qword_26B0385B8, MEMORY[0x263F07490]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v24, 1, v27) == 1)
  {
    sub_241C29BD4((uint64_t)v24, &qword_26B0385B8, MEMORY[0x263F07490]);
    uint64_t v37 = v80;
    uint64_t v38 = v82;
  }
  else
  {
    uint64_t v67 = v5;
    uint64_t v79 = v4;
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v39(v31, v24, v27);
    char v40 = sub_241C28EB4((uint64_t)v31);
    sub_241C29BD4((uint64_t)v26, &qword_26B0385B8, MEMORY[0x263F07490]);
    if (v40)
    {
      uint64_t v41 = (uint64_t)v68;
      v39(v68, v31, v27);
      uint64_t v42 = 0;
      uint64_t v37 = v80;
      uint64_t v38 = v82;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
      uint64_t v42 = 1;
      uint64_t v37 = v80;
      uint64_t v38 = v82;
      uint64_t v41 = (uint64_t)v68;
    }
    v36((char *)v41, v42, 1, v27);
    sub_241B3BE44(v41, (uint64_t)v26);
    uint64_t v4 = v79;
    uint64_t v5 = v67;
  }
  uint64_t v43 = (uint64_t)v78;
  sub_241A313AC(0, &qword_26B034E38);
  sub_241C29B68((uint64_t)v26, v43, &qword_26B0385B8, MEMORY[0x263F07490]);
  id v44 = v38;
  uint64_t v45 = (void *)HKCodableSummaryAFibBurdenValue.init(sample:lastAnalysisDate:calendarCache:)(v38, v43, v37);
  HKCodableSummaryAFibBurdenValue.snippetKind()();
  unint64_t v47 = HKCodableSummaryCurrentValue.Kind.rawValue.getter(v46);
  unint64_t v49 = v81;
  if (v47 == 0x617461446F6ELL && v48 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v51 = v69;
    sub_241CDA170();
    uint64_t v52 = v71;
    uint64_t v53 = v74;
    sub_241CD9270();
    uint64_t v54 = v72;
    sub_241CD92A0();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v52, v53);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v51, v54);
    uint64_t v55 = (uint64_t)v76;
    sub_241CD7A80();
    uint64_t v56 = sub_241CD7AB0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 0, 1, v56);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v57 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v77, 1, 1, v4);
    uint64_t v58 = (void (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v59 = v75;
    sub_241C29B68(v55, v75, &qword_26B032050, MEMORY[0x263F45780]);
    id v60 = sub_241A53EB0(0, 0xF000000000000000, 11, v57, v59, 0, 0);
    sub_241C29BD4(v55, &qword_26B032050, v58);

LABEL_18:
    sub_241C29BD4((uint64_t)v26, &qword_26B0385B8, MEMORY[0x263F07490]);
    return v60;
  }
  char v50 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v50) {
    goto LABEL_15;
  }
  sub_241CD9A90();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v49, *MEMORY[0x263F46C20], v4);
  id result = objc_msgSend(v45, sel_data);
  if (result)
  {
    uint64_t v62 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v63 = sub_241CD6AE0();
    unint64_t v65 = v64;

    uint64_t v66 = (uint64_t)v77;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v77, v49, v4);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v66, 0, 1, v4);
    uint64_t v84 = 0;
    memset(v83, 0, sizeof(v83));
    id v60 = sub_241A54648(v63, v65, 1, v66, 0, 0, (uint64_t)v83);
    sub_241A37374(v63, v65);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v49, v4);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_241C29B68(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241A295CC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241C29BD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241A295CC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t destroy for HealthStoreAFibBurdenLastAnalysisProvider(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s9Summaries41HealthStoreAFibBurdenLastAnalysisProviderVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HealthStoreAFibBurdenLastAnalysisProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for HealthStoreAFibBurdenLastAnalysisProvider(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for HealthStoreAFibBurdenLastAnalysisProvider(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthStoreAFibBurdenLastAnalysisProvider(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthStoreAFibBurdenLastAnalysisProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthStoreAFibBurdenLastAnalysisProvider()
{
  return &type metadata for HealthStoreAFibBurdenLastAnalysisProvider;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_241C29E08()
{
}

uint64_t CurrentValueSummaryModelGenerationRequest.queryInterval(for:)()
{
  uint64_t v0 = sub_241CD6D00();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD67B0();
  sub_241CD6770();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t CurrentValueSummaryModelGenerationRequest.authorizationIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 8) + 8);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(a1, v3) & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }

  return SummaryModelGenerationRequest.hkTypeSharingAuthorizationIdentifiers.getter(a1, v3);
}

unint64_t sub_241C29F9C()
{
  return sub_241C2A59C((void (*)(void))type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C29FB4()
{
  return sub_241C2A12C((void (*)(void))type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C29FCC()
{
  return sub_241C2A344((void (*)(void))type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C29FE4()
{
  return sub_241C2A344((void (*)(void))type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C29FFC()
{
  return sub_241C2A59C((void (*)(void))type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C2A014()
{
  return sub_241C2A59C((void (*)(void))type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);
}

unint64_t sub_241C2A02C()
{
  return 0xD000000000000016;
}

unint64_t sub_241C2A114()
{
  return sub_241C2A12C((void (*)(void))type metadata accessor for ChartSharableModelGenerator.Request);
}

unint64_t sub_241C2A12C(void (*a1)(void))
{
  return 0xD000000000000016;
}

unint64_t sub_241C2A214()
{
  return 0xD000000000000016;
}

unint64_t sub_241C2A2FC()
{
  return sub_241C2A59C((void (*)(void))type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C2A314()
{
  return sub_241C2A6A4((void (*)(void))type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C2A32C()
{
  return sub_241C2A344((void (*)(void))type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C2A344(void (*a1)(void))
{
  return 0xD000000000000016;
}

unint64_t sub_241C2A434()
{
  return sub_241C2A59C((void (*)(void))type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
}

unint64_t sub_241C2A44C()
{
  return sub_241C2A59C((void (*)(void))type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C2A464()
{
  return sub_241C2A494((void (*)(void))type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C2A47C()
{
  return sub_241C2A494((void (*)(void))type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C2A494(void (*a1)(void))
{
  return 0xD000000000000016;
}

unint64_t sub_241C2A584()
{
  return sub_241C2A59C((void (*)(void))type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C2A59C(void (*a1)(void))
{
  return 0xD000000000000016;
}

unint64_t sub_241C2A68C()
{
  return sub_241C2A6A4((void (*)(void))type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
}

unint64_t sub_241C2A6A4(void (*a1)(void))
{
  return 0xD000000000000016;
}

uint64_t CurrentValueSummaryModelGenerationRequest.domain(context:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v21[1] = a3;
  v21[0] = sub_241CD7650();
  uint64_t v5 = *(void *)(v21[0] - 8);
  MEMORY[0x270FA5388](v21[0]);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)sub_241CD76E0();
  sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v10 = *(void *)(*(void *)(a2 + 8) + 8);
  *(void *)(inited + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(a1, v10);
  void v21[2] = inited;
  sub_241CDB2E0();
  LOBYTE(a1) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(a1, v10);
  sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v11 = sub_241CD73B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  if (a1)
  {
    *(_OWORD *)(v15 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v15 + v14, *MEMORY[0x263F454D0], v11);
  }
  else
  {
    *(_OWORD *)(v15 + 16) = xmmword_241CEB720;
    unint64_t v16 = v15 + v14;
    uint64_t v17 = *(void (**)(unint64_t, void, uint64_t))(v12 + 104);
    v17(v16, *MEMORY[0x263F45520], v11);
    v17(v16 + v13, *MEMORY[0x263F45538], v11);
  }
  id v18 = v8;
  sub_241C695CC(v15, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v19 = swift_bridgeObjectRetain();
  sub_241C6A314(v19, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, void))(v5 + 104))(v7, *MEMORY[0x263F45690], v21[0]);
  sub_241CD7680();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241C2ABE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C60754(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t sub_241C2AFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C67684(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t sub_241C2B370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C5FDD0(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t sub_241C2B734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C5EAC8(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t sub_241C2BAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v21 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v22 = v11;
  uint64_t v23 = v12;
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_241AEAEDC();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_241C61648(a2, (uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v16 = (v9 + *(unsigned __int8 *)(v21 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v15, v10, v7);
  sub_241C61734((uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v18 = v22;
  uint64_t v19 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v18);
  return v19;
}

uint64_t sub_241C2BEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C66CFC(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t sub_241C2C278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C64CA0(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t sub_241C2C63C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C63994(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t sub_241C2CA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C78C44(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t sub_241C2CDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C5F44C(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t sub_241C2D188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C65624(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t sub_241C2D54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C6300C(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t sub_241C2D910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C5E140(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t sub_241C2DCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  v20[0] = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v20[0] + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v21 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241C6431C(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_241C61648(a2, (uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v15 = (v8 + *(unsigned __int8 *)(v20[0] + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v20[0] + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, v6);
  sub_241C61734((uint64_t)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return v18;
}

uint64_t static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a4;
  uint64_t v38 = a3;
  uint64_t v6 = *(void *)(a4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v31 = (char *)&v30 - v8;
  uint64_t v9 = sub_241CD7740();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C5D7C4();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v36 = v13;
  uint64_t v37 = v14;
  MEMORY[0x270FA5388](v13);
  id v35 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v32;
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, a2, v38, v6);
  uint64_t v17 = a1;
  uint64_t v18 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v17, v9);
  uint64_t v19 = v31;
  uint64_t v20 = a2;
  uint64_t v21 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v31, v20, AssociatedTypeWitness);
  unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v23 = (v11 + v22 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  uint64_t v25 = v34;
  *((void *)v24 + 2) = v38;
  *((void *)v24 + 3) = v25;
  *((void *)v24 + 4) = v16;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v24[v22], v12, v18);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v24[v23], v19, v21);
  sub_241CDA4F0();
  sub_241C5D8C8(0, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
  sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
  sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  uint64_t v26 = v35;
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241C61600(&qword_26B038940, (void (*)(uint64_t))sub_241C5D7C4);
  uint64_t v27 = v36;
  uint64_t v28 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v27);
  return v28;
}

uint64_t sub_241C2E4BC(uint64_t a1)
{
  if ((*(unsigned char *)(v1 + *(int *)(a1 + 40)) & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241CEB730;
  uint64_t v3 = (void *)sub_241CD7770();
  sub_241CDB470();

  return v2;
}

uint64_t sub_241C2E5E8(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C37E98(a1, a3, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD000000000000036, 0x8000000241CE3EF0, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  char v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C2ECCC(uint64_t a1, unsigned char *a2, void *a3)
{
  uint64_t v52 = a2;
  uint64_t v49 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v49);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_241CDA1A0();
  *(void *)&long long v53 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v51 = sub_241CD79A0();
  uint64_t v14 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v16 = &v42[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C36B9C(a1, a3);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v10, v52, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
  uint64_t v52 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v16;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v56 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v54 = sub_241A33FE4(0xD000000000000047, 0x8000000241CE4000, &v56);
    uint64_t v48 = v14;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    int v43 = v19;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    uint64_t v45 = v11;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v54 = sub_241A33FE4(v24, v26, &v56);
    uint64_t v14 = v48;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v54 = 0xD000000000000016;
    unint64_t v55 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_241A33FE4(v54, v55, &v56);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v16 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v52, v45);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);

    (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v52, v11);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v53 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v53;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v51;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v14 + 16))(v39, v16, v51);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v40);
  return v35;
}

uint64_t sub_241C2F38C(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C36F74(a1, a3, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD000000000000036, 0x8000000241CE4090, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C2FA70(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C36F74(a1, a3, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD000000000000032, 0x8000000241CE4110, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C30154(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C38668(a1, a3, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD000000000000030, 0x8000000241CE4190, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C30838(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C38280(a1, a3, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD00000000000003BLL, 0x8000000241CE4290, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C30F1C(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C38A50(a1, a3, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD000000000000038, 0x8000000241CE4310, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C31600(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C37E98(a1, a3, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD000000000000037, 0x8000000241CE43C0, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C31CE8(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C38280(a1, a3, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD000000000000033, 0x8000000241CE4440, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C323CC(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C36F74(a1, a3, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD000000000000034, 0x8000000241CE44C0, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C32AB0(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C37E98(a1, a3, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD000000000000039, 0x8000000241CE3F70, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C33194(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C38668(a1, a3, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD000000000000036, 0x8000000241CE4540, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C33878(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C37E98(a1, a3, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD00000000000002FLL, 0x8000000241CE45C0, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C33F5C(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C38A50(a1, a3, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  char v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD000000000000038, 0x8000000241CE4630, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  char v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *uint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C34640(void *a1, uint64_t a2, char *a3, char *a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11)
{
  uint64_t v164 = a8;
  unint64_t v160 = a7;
  uint64_t v159 = (uint64_t *)a6;
  uint64_t v179 = a5;
  uint64_t v174 = a2;
  id v186 = a1;
  sub_241B5F2F0();
  uint64_t v169 = v13;
  uint64_t v167 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v166 = (char *)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B5F39C();
  uint64_t v165 = v15;
  uint64_t v170 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v168 = (char *)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_241CD7740();
  uint64_t v173 = *(void *)(v185 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v185);
  uint64_t v184 = (char *)&v146 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v161 = (char *)&v146 - v19;
  uint64_t v163 = sub_241CDA1A0();
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163);
  uint64_t v171 = (char *)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_241CD6810();
  uint64_t v191 = *(void *)(v21 - 8);
  uint64_t v192 = v21;
  uint64_t v22 = *(void *)(v191 + 64);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v177 = (char *)&v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v176 = (char *)&v146 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v175 = (char *)&v146 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v183 = (char *)&v146 - v28;
  sub_241A68508(0);
  uint64_t v187 = v29;
  MEMORY[0x270FA5388](v29);
  char v31 = (char *)&v146 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v189 = v32;
  uint64_t v181 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  unint64_t v34 = (char *)&v146 - v33;
  uint64_t v35 = sub_241CD6D00();
  uint64_t v182 = *(void *)(v35 - 8);
  uint64_t v36 = *(void *)(v182 + 64);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v180 = (char *)&v146 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v37);
  uint64_t v190 = (char *)&v146 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v42 = (char *)&v146 - v41;
  uint64_t v43 = MEMORY[0x270FA5388](v40);
  uint64_t v45 = (char *)&v146 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v188 = (char *)&v146 - v46;
  if (sub_241CD6760())
  {
    uint64_t v153 = v31;
    uint64_t v154 = v34;
    uint64_t v155 = v36;
    uint64_t v156 = v22;
    sub_241CD67E0();
    unint64_t v172 = a3;
    sub_241CD67E0();
    sub_241C61600((unint64_t *)&qword_26B02E8D0, MEMORY[0x263F07490]);
    char v47 = sub_241CDB020();
    uint64_t v48 = v182;
    uint64_t v50 = v182 + 16;
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v182 + 16);
    if (v47) {
      long long v51 = v42;
    }
    else {
      long long v51 = v45;
    }
    uint64_t v52 = v188;
    uint64_t v158 = *(void (**)(char *, char *, uint64_t))(v182 + 16);
    v49(v188, v51, v35);
    unint64_t v54 = *(void (**)(char *, uint64_t))(v48 + 8);
    uint64_t v53 = (char *)(v48 + 8);
    v54(v42, v35);
    v54(v45, v35);
    uint64_t v55 = v190;
    sub_241CD67B0();
    uint64_t v56 = v180;
    sub_241CD67B0();
    char v57 = sub_241CD6C80();
    v54(v56, v35);
    uint64_t v157 = v54;
    v54(v55, v35);
    if (v57)
    {
      uint64_t v58 = v52;
      uint64_t v59 = v55;
      uint64_t v60 = v35;
      v158(v59, v52, v35);
      sub_241CD67B0();
      uint64_t v61 = v183;
      sub_241CD67C0();
      uint64_t v63 = v191;
      uint64_t v62 = v192;
      unint64_t v64 = v153;
      (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v153, v61, v192);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v64, 0, 1, v62);
      unint64_t v65 = v154;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v66 = v189;
      uint64_t v67 = sub_241CDA6D0();
      (*(void (**)(char *, uint64_t))(v181 + 8))(v65, v66);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v62);
      v157(v58, v60);
    }
    else
    {
      uint64_t v180 = a4;
      uint64_t v150 = v50;
      uint64_t v181 = v35;
      uint64_t v154 = v53;
      uint64_t v153 = a11;
      uint64_t v152 = a10;
      uint64_t v151 = a9;
      unsigned __int8 v69 = objc_msgSend(v186, sel_requiresSensitiveHealthLogs);
      uint64_t v71 = v178;
      uint64_t v70 = v179;
      uint64_t v72 = v192;
      uint64_t v73 = v158;
      if ((v69 & 1) == 0 || HKShowSensitiveLogItems())
      {
        uint64_t v74 = v171;
        sub_241CDA0F0();
        uint64_t v75 = v173;
        uint64_t v76 = v161;
        uint64_t v77 = v70;
        uint64_t v78 = v185;
        (*(void (**)(char *, uint64_t, uint64_t))(v173 + 16))(v161, v77, v185);
        uint64_t v79 = v191;
        uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v191 + 16);
        v80(v175, v180, v72);
        v80(v176, v172, v72);
        id v81 = v186;
        uint64_t v82 = sub_241CDA190();
        os_log_type_t v83 = sub_241CDB670();
        int v84 = v83;
        uint64_t v149 = v82;
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v85 = swift_slowAlloc();
          uint64_t v148 = swift_slowAlloc();
          v194[0] = v148;
          *(_DWORD *)uint64_t v85 = 136316162;
          uint64_t v193 = sub_241A33FE4((uint64_t)v159, v160, v194);
          id v147 = v81;
          sub_241CDBBF0();
          *(_WORD *)(v85 + 12) = 2080;
          uint64_t v86 = (void *)sub_241CD76E0();
          uint64_t v87 = sub_241CD73E0();
          LODWORD(v160) = v84;
          uint64_t v88 = v78;
          unint64_t v90 = v89;

          uint64_t v193 = sub_241A33FE4(v87, v90, v194);
          uint64_t v159 = v194;
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v88);
          *(_WORD *)(v85 + 22) = 2080;
          id v91 = v147;
          id v92 = objc_msgSend(v91, sel_description);
          uint64_t v93 = sub_241CDB0D0();
          unint64_t v95 = v94;

          uint64_t v193 = sub_241A33FE4(v93, v95, v194);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          *(_WORD *)(v85 + 32) = 2080;
          uint64_t v96 = v190;
          sub_241CD67B0();
          uint64_t v161 = (char *)sub_241C61600(&qword_26B02E8E0, MEMORY[0x263F07490]);
          uint64_t v97 = v181;
          uint64_t v98 = sub_241CDC0D0();
          unint64_t v100 = v99;
          uint64_t v101 = v157;
          v157(v96, v97);
          uint64_t v193 = sub_241A33FE4(v98, v100, v194);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          uint64_t v102 = *(void (**)(char *, uint64_t))(v191 + 8);
          v102(v175, v192);
          *(_WORD *)(v85 + 42) = 2080;
          uint64_t v175 = (char *)(v85 + 44);
          sub_241CD67B0();
          uint64_t v103 = sub_241CDC0D0();
          unint64_t v105 = v104;
          v101(v96, v97);
          uint64_t v193 = sub_241A33FE4(v103, v105, v194);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          uint64_t v72 = v192;
          v102(v176, v192);
          uint64_t v73 = v158;
          uint64_t v106 = v149;
          _os_log_impl(&dword_241A23000, v149, (os_log_type_t)v160, "[%s]_%s: Data present date range for %s exceeds bounding interval: %s > %s", (uint8_t *)v85, 0x34u);
          uint64_t v107 = v148;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v107, -1, -1);
          uint64_t v108 = v85;
          uint64_t v71 = v178;
          MEMORY[0x245637F20](v108, -1, -1);

          (*(void (**)(char *, uint64_t))(v162 + 8))(v171, v163);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v78);

          uint64_t v109 = *(void (**)(char *, uint64_t))(v79 + 8);
          uint64_t v72 = v192;
          v109(v175, v192);
          v109(v176, v72);

          (*(void (**)(char *, uint64_t))(v162 + 8))(v74, v163);
        }
        uint64_t v70 = v179;
      }
      uint64_t v110 = self;
      uint64_t v111 = v172;
      uint64_t v112 = (void *)sub_241CD6790();
      id v113 = objc_msgSend(v110, sel_predicateForSamplesWithinDateInterval_options_, v112, 0);

      sub_241CD76B0();
      sub_241A311E0(v194, v194[3]);
      uint64_t v114 = (void *)sub_241CD75B0();
      unint64_t v115 = (char *)v113;
      uint64_t v176 = v115;
      uint64_t v116 = sub_241CDB5D0();

      sub_241A31190((uint64_t)v194);
      uint64_t v193 = v116;
      sub_241CD7730();
      sub_241A5B1CC();
      uint64_t v163 = v117;
      uint64_t v171 = (char *)sub_241C61600(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
      uint64_t v118 = sub_241CDA680();
      uint64_t v175 = (char *)v118;
      sub_241A31190((uint64_t)v194);
      swift_release();
      v194[0] = v118;
      uint64_t v119 = v173;
      uint64_t v120 = v72;
      uint64_t v162 = *(void *)(v173 + 16);
      uint64_t v174 = v173 + 16;
      ((void (*)(char *, uint64_t, uint64_t))v162)(v184, v70, v185);
      uint64_t v121 = v191;
      uint64_t v122 = *(void (**)(char *, char *, uint64_t))(v191 + 16);
      v122(v183, v180, v120);
      v122(v177, v111, v120);
      v73(v190, v188, v181);
      uint64_t v123 = *(unsigned __int8 *)(v119 + 80);
      uint64_t v124 = (v123 + 24) & ~v123;
      uint64_t v180 = (char *)(v123 | 7);
      uint64_t v125 = *(unsigned __int8 *)(v121 + 80);
      uint64_t v126 = (v71 + v125 + v124) & ~v125;
      uint64_t v127 = (v156 + v125 + v126) & ~v125;
      uint64_t v128 = v182;
      unint64_t v129 = (v156 + *(unsigned __int8 *)(v182 + 80) + v127) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80);
      uint64_t v130 = swift_allocObject();
      id v131 = v186;
      *(void *)(v130 + 16) = v186;
      uint64_t v132 = v130 + v124;
      os_log_type_t v133 = v131;
      uint64_t v173 = *(void *)(v119 + 32);
      ((void (*)(uint64_t, char *, uint64_t))v173)(v132, v184, v185);
      uint64_t v134 = v130 + v126;
      id v135 = *(void (**)(uint64_t, char *, uint64_t))(v121 + 32);
      v135(v134, v183, v120);
      v135(v130 + v127, v177, v120);
      uint64_t v136 = v181;
      (*(void (**)(unint64_t, char *, uint64_t))(v128 + 32))(v130 + v129, v190, v181);
      id v137 = v133;
      uint64_t v138 = v166;
      sub_241CDA710();
      swift_release();
      unint64_t v139 = v184;
      uint64_t v140 = v185;
      ((void (*)(char *, uint64_t, uint64_t))v162)(v184, v179, v185);
      uint64_t v141 = swift_allocObject();
      ((void (*)(uint64_t, char *, uint64_t))v173)(v141 + ((v123 + 16) & ~v123), v139, v140);
      sub_241C61600(&qword_26B02E968, (void (*)(uint64_t))sub_241B5F2F0);
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v142 = v168;
      uint64_t v143 = v169;
      sub_241CDA750();
      swift_release();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v138, v143);
      sub_241C61600(&qword_26B02E9B0, (void (*)(uint64_t))sub_241B5F39C);
      uint64_t v144 = v165;
      uint64_t v67 = sub_241CDA6D0();

      swift_release();
      (*(void (**)(char *, uint64_t))(v170 + 8))(v142, v144);
      v157(v188, v136);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v191 + 56))(v31, 1, 1, v192);
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v68 = v189;
    uint64_t v67 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v181 + 8))(v34, v68);
  }
  return v67;
}

uint64_t sub_241C359BC(void *a1, uint64_t a2, char *a3, char *a4, uint64_t a5)
{
  return sub_241C34640(a1, a2, a3, a4, a5, 0xD000000000000033, 0x8000000241CE4440, (uint64_t)&unk_26F5C6F98, (uint64_t)sub_241C705C4, (uint64_t)&unk_26F5C6FC0, (char *)sub_241C705E0);
}

uint64_t sub_241C35A2C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD00000000000001BLL, 0x8000000241CE4200, a7);
}

uint64_t sub_241C35A48@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD00000000000002FLL, 0x8000000241CE45C0, a7);
}

uint64_t sub_241C35A64@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD000000000000032, 0x8000000241CE4110, a7);
}

uint64_t sub_241C35A80@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD000000000000033, 0x8000000241CE4440, a7);
}

uint64_t sub_241C35A9C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD000000000000034, 0x8000000241CE44C0, a7);
}

uint64_t sub_241C35AB8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD000000000000036, 0x8000000241CE4090, a7);
}

uint64_t sub_241C35AD4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD000000000000036, 0x8000000241CE3EF0, a7);
}

uint64_t sub_241C35AF0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD000000000000036, 0x8000000241CE4540, a7);
}

uint64_t sub_241C35B0C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD000000000000037, 0x8000000241CE43C0, a7);
}

uint64_t sub_241C35B28@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD000000000000038, 0x8000000241CE4630, a7);
}

uint64_t sub_241C35B44@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD000000000000038, 0x8000000241CE4310, a7);
}

uint64_t sub_241C35B60@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD000000000000039, 0x8000000241CE3F70, a7);
}

uint64_t sub_241C35B7C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD00000000000003BLL, 0x8000000241CE4290, a7);
}

uint64_t sub_241C35B98@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_241C35BB4(a1, a2, a3, a4, a5, a6, 0xD000000000000047, 0x8000000241CE4000, a7);
}

uint64_t sub_241C35BB4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, NSObject *a3@<X2>, char *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v100 = a7;
  unint64_t v101 = a8;
  uint64_t v98 = a6;
  uint64_t v102 = a4;
  id v103 = a5;
  os_log_t v106 = a3;
  id v112 = a2;
  uint64_t v109 = a9;
  uint64_t v113 = sub_241CD7740();
  uint64_t v107 = *(void *)(v113 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v113);
  uint64_t v12 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v96 - v13;
  uint64_t v15 = sub_241CDA1A0();
  uint64_t v104 = *(void *)(v15 - 8);
  uint64_t v105 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v111 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v99 = (char *)&v96 - v18;
  uint64_t v19 = sub_241CD6810();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  os_log_t v108 = (os_log_t)((char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v110 = (char *)&v96 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v96 - v25;
  sub_241A29CE8(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v96 - v28;
  uint64_t v30 = sub_241CD6D00();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v96 - v36;
  uint64_t v114 = v20;
  if (a1)
  {
    uint64_t v96 = v35;
    uint64_t v97 = v34;
    sub_241CDBB10();
    sub_241CD67B0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v30);
    uint64_t v38 = (char *)v19;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) != 1)
    {
      uint64_t v111 = (char *)v19;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v37, v29, v30);
      unsigned __int8 v39 = objc_msgSend(v112, sel_requiresSensitiveHealthLogs);
      uint64_t v40 = v113;
      if ((v39 & 1) == 0 || HKShowSensitiveLogItems())
      {
        uint64_t v41 = v99;
        sub_241CDA0F0();
        uint64_t v42 = v107;
        (*(void (**)(char *, os_log_t, uint64_t))(v107 + 16))(v14, v106, v40);
        id v43 = v112;
        uint64_t v44 = sub_241CDA190();
        os_log_type_t v45 = sub_241CDB670();
        int v46 = v45;
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v47 = swift_slowAlloc();
          LODWORD(v110) = v46;
          uint64_t v48 = v47;
          id v112 = (id)swift_slowAlloc();
          v116[0] = (uint64_t)v112;
          *(_DWORD *)uint64_t v48 = 136315650;
          os_log_t v108 = v44;
          uint64_t v115 = sub_241A33FE4(v100, v101, v116);
          os_log_t v106 = (os_log_t)v116;
          sub_241CDBBF0();
          *(_WORD *)(v48 + 12) = 2080;
          id v103 = v43;
          uint64_t v49 = (void *)sub_241CD76E0();
          uint64_t v50 = sub_241CD73E0();
          uint64_t v102 = v14;
          unint64_t v52 = v51;

          uint64_t v115 = sub_241A33FE4(v50, v52, v116);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v102, v113);
          *(_WORD *)(v48 + 22) = 2080;
          id v53 = v103;
          id v54 = objc_msgSend(v53, sel_description);
          uint64_t v55 = sub_241CDB0D0();
          unint64_t v57 = v56;

          uint64_t v115 = sub_241A33FE4(v55, v57, v116);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          os_log_t v58 = v108;
          _os_log_impl(&dword_241A23000, v108, (os_log_type_t)v110, "[%s]_%s: With results from most recent sample query for %s new date interval ends at ", (uint8_t *)v48, 0x20u);
          id v59 = v112;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v59, -1, -1);
          MEMORY[0x245637F20](v48, -1, -1);

          (*(void (**)(char *, uint64_t))(v104 + 8))(v99, v105);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v40);

          (*(void (**)(char *, uint64_t))(v104 + 8))(v41, v105);
        }
      }
      unint64_t v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
      v94(v96, v98, v30);
      v94(v97, (uint64_t)v37, v30);
      uint64_t v93 = v109;
      sub_241CD67C0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v30);
      uint64_t v92 = 0;
      uint64_t v38 = v111;
      goto LABEL_17;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v29, 1, 1, v30);
    uint64_t v38 = (char *)v19;
  }
  sub_241A9A4DC((uint64_t)v29);
  id v60 = v112;
  unsigned __int8 v61 = objc_msgSend(v112, sel_requiresSensitiveHealthLogs);
  uint64_t v62 = v113;
  if ((v61 & 1) != 0 && !HKShowSensitiveLogItems())
  {
    uint64_t v92 = 1;
    uint64_t v93 = v109;
LABEL_17:
    uint64_t v64 = v114;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *))(v64 + 56))(v93, v92, 1, v38);
  }
  sub_241CDA140();
  uint64_t v63 = v107;
  (*(void (**)(char *, os_log_t, uint64_t))(v107 + 16))(v12, v106, v62);
  uint64_t v64 = v114;
  unint64_t v65 = *(void (**)(char *, char *, char *))(v114 + 16);
  v65(v110, v102, v38);
  os_log_t v66 = v108;
  v65((char *)v108, (char *)v103, v38);
  id v67 = v60;
  uint64_t v68 = sub_241CDA190();
  os_log_type_t v69 = sub_241CDB650();
  int v70 = v69;
  if (os_log_type_enabled(v68, v69))
  {
    uint64_t v71 = swift_slowAlloc();
    id v112 = (id)swift_slowAlloc();
    v116[0] = (uint64_t)v112;
    *(_DWORD *)uint64_t v71 = 136316162;
    uint64_t v115 = sub_241A33FE4(v100, v101, v116);
    os_log_t v106 = v68;
    sub_241CDBBF0();
    *(_WORD *)(v71 + 12) = 2080;
    LODWORD(v103) = v70;
    uint64_t v72 = v38;
    uint64_t v73 = (void *)sub_241CD76E0();
    uint64_t v74 = sub_241CD73E0();
    unint64_t v76 = v75;

    uint64_t v115 = sub_241A33FE4(v74, v76, v116);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v12, v113);
    *(_WORD *)(v71 + 22) = 2080;
    id v77 = v67;
    id v78 = objc_msgSend(v77, sel_description);
    uint64_t v79 = sub_241CDB0D0();
    unint64_t v81 = v80;

    uint64_t v115 = sub_241A33FE4(v79, v81, v116);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 32) = 2080;
    sub_241C61600(&qword_26B031F70, MEMORY[0x263F062D0]);
    uint64_t v82 = v110;
    uint64_t v83 = sub_241CDC0D0();
    uint64_t v115 = sub_241A33FE4(v83, v84, v116);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    uint64_t v85 = *(void (**)(char *, char *))(v114 + 8);
    v85(v82, v72);
    *(_WORD *)(v71 + 42) = 2080;
    os_log_t v86 = v108;
    uint64_t v87 = sub_241CDC0D0();
    uint64_t v115 = sub_241A33FE4(v87, v88, v116);
    uint64_t v38 = v72;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    v85((char *)v86, v72);
    uint64_t v64 = v114;
    os_log_t v89 = v106;
    _os_log_impl(&dword_241A23000, v106, (os_log_type_t)v103, "[%s]_%s: Date range query reported data but most recent sample query returned no data: %s, dateRangeQuery: %s, boundingDateInterval: %s", (uint8_t *)v71, 0x34u);
    id v90 = v112;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v90, -1, -1);
    MEMORY[0x245637F20](v71, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v12, v62);

    id v91 = *(void (**)(char *, char *))(v64 + 8);
    v91(v110, v38);
    v91((char *)v66, v38);
  }
  (*(void (**)(char *, uint64_t))(v104 + 8))(v111, v105);
  uint64_t v92 = 1;
  uint64_t v93 = v109;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *))(v64 + 56))(v93, v92, 1, v38);
}

uint64_t sub_241C3673C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v44 = (unsigned char *)a3;
  unint64_t v45 = a4;
  uint64_t v47 = a5;
  sub_241A68508(0);
  unint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v38[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_241CD7740();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_241CDA1A0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = &v38[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  id v19 = a1;
  id v20 = a1;
  int v46 = v18;
  uint64_t v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB650();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v43 = v16;
    uint64_t v25 = v24;
    uint64_t v42 = swift_slowAlloc();
    uint64_t v49 = v42;
    *(_DWORD *)uint64_t v25 = 136315650;
    os_log_t v40 = v21;
    uint64_t v48 = sub_241A33FE4((uint64_t)v44, v45, &v49);
    unint64_t v45 = v8;
    sub_241CDBBF0();
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v44 = v10;
    uint64_t v26 = (void *)sub_241CD76E0();
    uint64_t v27 = sub_241CD73E0();
    int v39 = v23;
    uint64_t v28 = v27;
    uint64_t v41 = v15;
    unint64_t v30 = v29;

    uint64_t v48 = sub_241A33FE4(v28, v30, &v49);
    uint64_t v10 = v44;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
    *(_WORD *)(v25 + 22) = 2080;
    uint64_t v48 = (uint64_t)a1;
    id v31 = a1;
    sub_241A3DA64();
    uint64_t v32 = sub_241CDB120();
    uint64_t v48 = sub_241A33FE4(v32, v33, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    os_log_t v34 = v40;
    _os_log_impl(&dword_241A23000, v40, (os_log_type_t)v39, "[%s]_%s: error when fetching most recent sample: %s", (uint8_t *)v25, 0x20u);
    uint64_t v35 = v42;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v35, -1, -1);
    MEMORY[0x245637F20](v25, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v46, v41);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);

    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v46, v15);
  }
  uint64_t v36 = sub_241CD6810();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v10, 1, 1, v36);
  return sub_241CDA5D0();
}

id sub_241C36B9C(uint64_t a1, void *a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29CE8(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)v20 - v6;
  sub_241A29CE8(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v4);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v20 - v9;
  uint64_t v11 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  char v13 = *(unsigned char *)(a1 + *(int *)(v12 + 40));
  v20[0] = *(void *)(a1 + *(int *)(v12 + 24));
  if (v13)
  {
    sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
    sub_241CD9350();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_241CD7770();
    sub_241CDB470();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_241CEB710;
  *(void *)(v15 + 32) = sub_241CD7770();
  v20[1] = v15;
  sub_241CDB2E0();
  id result = objc_msgSend(a2, sel_data, v20[0]);
  if (result)
  {
    uint64_t v17 = result;
    sub_241CD6AE0();

    sub_241CD7960();
    sub_241CD6F40();
    uint64_t v18 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 0, 1, v18);
    sub_241CD6DC0();
    uint64_t v19 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 0, 1, v19);
    return (id)sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241C36F74@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  void v23[2] = a4;
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29CE8(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v23 - v9;
  sub_241A29CE8(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v7);
  MEMORY[0x270FA5388](v11 - 8);
  char v13 = (char *)v23 - v12;
  uint64_t v14 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = a3(0);
  char v16 = *(unsigned char *)(a1 + *(int *)(v15 + 36));
  v23[1] = *(void *)(a1 + *(int *)(v15 + 32));
  if (v16)
  {
    sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
    sub_241CD9350();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_241CD7770();
    sub_241CDB470();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_241CEB710;
  *(void *)(v18 + 32) = sub_241CD7770();
  id v23[3] = v18;
  sub_241CDB2E0();
  id result = objc_msgSend(a2, sel_data);
  if (result)
  {
    id v20 = result;
    sub_241CD6AE0();

    sub_241CD7960();
    sub_241CD6F40();
    uint64_t v21 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 0, 1, v21);
    sub_241CD6DC0();
    uint64_t v22 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 0, 1, v22);
    return (id)sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241C37358@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  void v19[2] = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29CE8(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v19 - v7;
  sub_241A29CE8(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v12 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v12 - 8);
  v19[1] = *(void *)(a1
                     + *(int *)(type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0) + 28));
  sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
  swift_bridgeObjectRetain();
  char v13 = (void *)sub_241CD7770();
  sub_241CDB470();

  sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_241CEB710;
  *(void *)(v14 + 32) = sub_241CD7770();
  v19[3] = v14;
  sub_241CDB2E0();
  id result = objc_msgSend(a2, sel_data);
  if (result)
  {
    char v16 = result;
    sub_241CD6AE0();

    sub_241CD7960();
    sub_241CD6F40();
    uint64_t v17 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
    sub_241CD6DC0();
    uint64_t v18 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 0, 1, v18);
    return (id)sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241C37718@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  void v19[2] = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29CE8(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v19 - v7;
  sub_241A29CE8(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v12 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v12 - 8);
  v19[1] = *(void *)(a1
                     + *(int *)(type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0) + 48));
  sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
  swift_bridgeObjectRetain();
  char v13 = (void *)sub_241CD7770();
  sub_241CDB470();

  sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_241CEB710;
  *(void *)(v14 + 32) = sub_241CD7770();
  v19[3] = v14;
  sub_241CDB2E0();
  id result = objc_msgSend(a2, sel_data);
  if (result)
  {
    char v16 = result;
    sub_241CD6AE0();

    sub_241CD7960();
    sub_241CD6F40();
    uint64_t v17 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
    sub_241CD6DC0();
    uint64_t v18 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 0, 1, v18);
    return (id)sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241C37AD8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  void v19[2] = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29CE8(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v19 - v7;
  sub_241A29CE8(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v12 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v12 - 8);
  v19[1] = *(void *)(a1
                     + *(int *)(type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0) + 44));
  sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
  swift_bridgeObjectRetain();
  char v13 = (void *)sub_241CD7770();
  sub_241CDB470();

  sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_241CEB710;
  *(void *)(v14 + 32) = sub_241CD7770();
  v19[3] = v14;
  sub_241CDB2E0();
  id result = objc_msgSend(a2, sel_data);
  if (result)
  {
    char v16 = result;
    sub_241CD6AE0();

    sub_241CD7960();
    sub_241CD6F40();
    uint64_t v17 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
    sub_241CD6DC0();
    uint64_t v18 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 0, 1, v18);
    return (id)sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241C37E98@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  void v23[2] = a4;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29CE8(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v23 - v9;
  sub_241A29CE8(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v7);
  MEMORY[0x270FA5388](v11 - 8);
  char v13 = (char *)v23 - v12;
  uint64_t v14 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = a3(0);
  char v16 = *(unsigned char *)(a1 + *(int *)(v15 + 40));
  v23[1] = *(void *)(a1 + *(int *)(v15 + 28));
  if (v16)
  {
    sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
    sub_241CD9350();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_241CD7770();
    sub_241CDB470();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_241CEB710;
  *(void *)(v18 + 32) = sub_241CD7770();
  id v23[3] = v18;
  sub_241CDB2E0();
  id result = objc_msgSend(a2, sel_data);
  if (result)
  {
    id v20 = result;
    sub_241CD6AE0();

    sub_241CD7960();
    sub_241CD6F40();
    uint64_t v21 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 0, 1, v21);
    sub_241CD6DC0();
    uint64_t v22 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 0, 1, v22);
    return (id)sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241C38280@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  void v23[2] = a4;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29CE8(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v23 - v9;
  sub_241A29CE8(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v7);
  MEMORY[0x270FA5388](v11 - 8);
  char v13 = (char *)v23 - v12;
  uint64_t v14 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = a3(0);
  char v16 = *(unsigned char *)(a1 + *(int *)(v15 + 20));
  v23[1] = *(void *)(a1 + *(int *)(v15 + 32));
  if (v16)
  {
    sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
    sub_241CD9350();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_241CD7770();
    sub_241CDB470();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_241CEB710;
  *(void *)(v18 + 32) = sub_241CD7770();
  id v23[3] = v18;
  sub_241CDB2E0();
  id result = objc_msgSend(a2, sel_data);
  if (result)
  {
    id v20 = result;
    sub_241CD6AE0();

    sub_241CD7960();
    sub_241CD6F40();
    uint64_t v21 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 0, 1, v21);
    sub_241CD6DC0();
    uint64_t v22 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 0, 1, v22);
    return (id)sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241C38668@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  void v23[2] = a4;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29CE8(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v23 - v9;
  sub_241A29CE8(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v7);
  MEMORY[0x270FA5388](v11 - 8);
  char v13 = (char *)v23 - v12;
  uint64_t v14 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = a3(0);
  char v16 = *(unsigned char *)(a1 + *(int *)(v15 + 36));
  v23[1] = *(void *)(a1 + *(int *)(v15 + 28));
  if (v16)
  {
    sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
    sub_241CD9350();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_241CD7770();
    sub_241CDB470();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_241CEB710;
  *(void *)(v18 + 32) = sub_241CD7770();
  id v23[3] = v18;
  sub_241CDB2E0();
  id result = objc_msgSend(a2, sel_data);
  if (result)
  {
    id v20 = result;
    sub_241CD6AE0();

    sub_241CD7960();
    sub_241CD6F40();
    uint64_t v21 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 0, 1, v21);
    sub_241CD6DC0();
    uint64_t v22 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 0, 1, v22);
    return (id)sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241C38A50@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  void v23[2] = a4;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29CE8(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v23 - v9;
  sub_241A29CE8(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v7);
  MEMORY[0x270FA5388](v11 - 8);
  char v13 = (char *)v23 - v12;
  uint64_t v14 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = a3(0);
  char v16 = *(unsigned char *)(a1 + *(int *)(v15 + 24));
  v23[1] = *(void *)(a1 + *(int *)(v15 + 36));
  if (v16)
  {
    sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
    sub_241CD9350();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_241CD7770();
    sub_241CDB470();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_241CEB710;
  *(void *)(v18 + 32) = sub_241CD7770();
  id v23[3] = v18;
  sub_241CDB2E0();
  id result = objc_msgSend(a2, sel_data);
  if (result)
  {
    id v20 = result;
    sub_241CD6AE0();

    sub_241CD7960();
    sub_241CD6F40();
    uint64_t v21 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 0, 1, v21);
    sub_241CD6DC0();
    uint64_t v22 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 0, 1, v22);
    return (id)sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241C38E38(uint64_t a1, uint64_t a2)
{
  return sub_241C38E70(a1, a2, 0xD00000000000002FLL);
}

uint64_t sub_241C38E54(uint64_t a1, uint64_t a2)
{
  return sub_241C38E70(a1, a2, 0xD00000000000002BLL);
}

uint64_t sub_241C38E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_241CD76E0();
  sub_241CD73E0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return a3;
}

uint64_t sub_241C38F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v100 = a3;
  uint64_t v103 = a2;
  sub_241B77834();
  id v91 = v4;
  uint64_t v90 = *((void *)v4 - 1);
  MEMORY[0x270FA5388](v4);
  os_log_t v89 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v97 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v102 = v7;
  uint64_t v104 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD7740();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v105 = v8;
  uint64_t v106 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v101 = v10;
  unint64_t v99 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C61364();
  uint64_t v93 = *(void *)(v11 - 8);
  uint64_t v94 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v98 = (void (*)(uint64_t))((char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C61508();
  uint64_t v95 = *(void *)(v13 - 8);
  uint64_t v96 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v92 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v84 = (uint64_t (*)(void))sub_241CD6D00();
  uint64_t v15 = *((void *)v84 - 1);
  MEMORY[0x270FA5388](v84);
  uint64_t v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v83 = *(uint64_t (**)(uint64_t))(v18 - 8);
  uint64_t v19 = *((void *)v83 + 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v85 = (uint64_t)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  os_log_t v86 = (char *)&v79 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v79 - v23;
  uint64_t v25 = sub_241CD6810();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void *)(v26 + 64);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v87 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  id v31 = (char *)&v79 - v30;
  MEMORY[0x270FA5388](v29);
  unint64_t v33 = (char *)&v79 - v32;
  sub_241C61648(a1, (uint64_t)v24, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    uint64_t v98 = sub_241A68508;
    sub_241C73BBC((uint64_t)v24, (uint64_t (*)(void))sub_241A68508);
    os_log_t v34 = v86;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v86, 1, 1, v25);
    uint64_t v108 = 0;
    memset(v107, 0, sizeof(v107));
    uint64_t v35 = v104;
    sub_241C61648(v100, v104, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v36 = (uint64_t)v34;
    uint64_t v37 = (uint64_t)v34;
    uint64_t v38 = v85;
    sub_241C61648(v36, v85, (uint64_t (*)(void))sub_241A68508);
    uint64_t v39 = v105;
    uint64_t v40 = v106;
    uint64_t v41 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v99, v103, v105);
    unint64_t v42 = (*(unsigned __int8 *)(v97 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
    unint64_t v43 = (v102 + *((unsigned __int8 *)v83 + 80) + v42) & ~(unint64_t)*((unsigned __int8 *)v83 + 80);
    unint64_t v44 = (v19 + *(unsigned __int8 *)(v40 + 80) + v43) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v45 = swift_allocObject();
    sub_241C616B4((uint64_t)v107, v45 + 16, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper);
    sub_241C61734(v35, v45 + v42, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61734(v38, v45 + v43, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v45 + v44, v41, v39);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    int v46 = v89;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v47 = v91;
    uint64_t v48 = sub_241CDA6D0();
    (*(void (**)(char *, void (*)(void, void, void)))(v90 + 8))(v46, v47);
    sub_241C73BBC(v37, (uint64_t (*)(void))v98);
  }
  else
  {
    uint64_t v49 = *(void (**)(void, void, void))(v26 + 32);
    uint64_t v90 = v26 + 32;
    id v91 = v49;
    unint64_t v88 = v33;
    uint64_t v81 = v25;
    v49(v33, v24, v25);
    sub_241CD67B0();
    uint64_t v82 = v31;
    sub_241CD6770();
    (*(void (**)(char *, uint64_t (*)(void)))(v15 + 8))(v17, v84);
    type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator(0);
    uint64_t v50 = v103;
    uint64_t v51 = v100;
    *(void *)&v107[0] = sub_241A57F58((uint64_t)v31, v103, v100);
    uint64_t v52 = v106;
    id v53 = *(char **)(v106 + 16);
    os_log_t v86 = (char *)(v106 + 16);
    os_log_t v89 = v53;
    id v54 = v99;
    uint64_t v55 = v105;
    ((void (*)(char *, uint64_t, uint64_t))v53)(v99, v50, v105);
    uint64_t v83 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request;
    sub_241C61648(v51, v104, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v56 = *(unsigned __int8 *)(v52 + 80);
    uint64_t v57 = (v56 + 16) & ~v56;
    uint64_t v58 = *(unsigned __int8 *)(v97 + 80);
    uint64_t v59 = (v101 + v58 + v57) & ~v58;
    uint64_t v85 = v56 | v58 | 7;
    uint64_t v60 = swift_allocObject();
    uint64_t v97 = *(void *)(v52 + 32);
    uint64_t v106 = v52 + 32;
    ((void (*)(uint64_t, char *, uint64_t))v97)(v60 + v57, v54, v55);
    unint64_t v84 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request;
    uint64_t v61 = v104;
    sub_241C61734(v104, v60 + v59, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
    sub_241C6CDB0(0, &qword_268D43568, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper);
    uint64_t v79 = v62;
    sub_241C6148C(0, &qword_268D43570, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper);
    sub_241C62F74(&qword_268D43578, (uint64_t)&qword_268D43568, (void (*)(uint64_t, uint64_t, unint64_t *, ValueMetadata *))sub_241C6CDB0);
    sub_241C62F74(&qword_268D43580, (uint64_t)&qword_268D43570, (void (*)(uint64_t, uint64_t, unint64_t *, ValueMetadata *))sub_241C6148C);
    sub_241CDA750();
    swift_release();
    swift_release();
    uint64_t v63 = v61;
    sub_241C61648(v100, v61, v83);
    uint64_t v64 = v87;
    uint64_t v65 = v81;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v87, v88, v81);
    uint64_t v66 = v26;
    uint64_t v80 = v26;
    id v67 = v99;
    uint64_t v68 = v105;
    ((void (*)(char *, uint64_t, uint64_t))v89)(v99, v103, v105);
    uint64_t v69 = (v58 + 16) & ~v58;
    unint64_t v70 = (v69 + v102 + *(unsigned __int8 *)(v66 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    unint64_t v71 = (v27 + v56 + v70) & ~v56;
    uint64_t v72 = swift_allocObject();
    sub_241C61734(v63, v72 + v69, v84);
    v91(v72 + v70, v64, v65);
    ((void (*)(unint64_t, char *, uint64_t))v97)(v72 + v71, v67, v68);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43590, (void (*)(uint64_t))sub_241C61364);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v73 = v92;
    uint64_t v74 = v94;
    unint64_t v75 = v98;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v93 + 8))(v75, v74);
    sub_241C61600(&qword_268D43598, (void (*)(uint64_t))sub_241C61508);
    uint64_t v76 = v96;
    uint64_t v48 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v73, v76);
    id v77 = *(void (**)(char *, uint64_t))(v80 + 8);
    v77(v82, v65);
    v77(v88, v65);
  }
  return v48;
}

uint64_t sub_241C39C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v104 = a3;
  uint64_t v108 = a2;
  sub_241B77834();
  uint64_t v98 = *(v4 - 1);
  unint64_t v99 = (void (*)(void, void, void))v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v96 = (unint64_t)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6825C(0);
  os_log_t v89 = *(uint64_t (**)(uint64_t))(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v91 = (unint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v102 = (uint64_t *)((char *)&v80 - v9);
  uint64_t v10 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v101 = *(unsigned __int8 **)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v107 = v11;
  uint64_t v105 = (uint64_t)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_241CD7740();
  uint64_t v111 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v106 = v12;
  uint64_t v110 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C68290();
  uint64_t v93 = *(void *)(v13 - 8);
  uint64_t v94 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v103 = (void (*)(uint64_t))((char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C683E4();
  uint64_t v97 = v15;
  uint64_t v95 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v92 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_241CD6D00();
  uint64_t v17 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v85 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v85 + 64);
  uint64_t v22 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v86 = (uint64_t)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v100 = (uint64_t)&v80 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v80 - v25;
  uint64_t v27 = sub_241CD6810();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 64);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v87 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  unint64_t v33 = (char *)&v80 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v80 - v34;
  sub_241C61648(a1, (uint64_t)v26, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    uint64_t v103 = sub_241A68508;
    sub_241C73BBC((uint64_t)v26, (uint64_t (*)(void))sub_241A68508);
    uint64_t v36 = v100;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v100, 1, 1, v27);
    sub_241A6AA08();
    uint64_t v38 = (void (*)(void, void, void))v102;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v102, 1, 1, v37);
    uint64_t v39 = v91;
    sub_241C61648((uint64_t)v38, v91, (uint64_t (*)(void))sub_241C6825C);
    uint64_t v40 = v105;
    sub_241C61648(v104, v105, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v41 = v86;
    sub_241C61648(v36, v86, (uint64_t (*)(void))sub_241A68508);
    uint64_t v42 = v111;
    uint64_t v43 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v110, v108, v109);
    unint64_t v44 = (*((unsigned __int8 *)v89 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v89 + 80);
    unint64_t v45 = (v90 + v101[80] + v44) & ~(unint64_t)v101[80];
    unint64_t v46 = (v107 + *(unsigned __int8 *)(v85 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
    unint64_t v47 = (v21 + *(unsigned __int8 *)(v42 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    uint64_t v48 = swift_allocObject();
    sub_241C61734(v39, v48 + v44, (uint64_t (*)(void))sub_241C6825C);
    sub_241C61734(v40, v48 + v45, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61734(v41, v48 + v46, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v48 + v47, v110, v43);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    unint64_t v49 = v96;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v50 = v99;
    uint64_t v51 = sub_241CDA6D0();
    (*(void (**)(unint64_t, void (*)(void, void, void)))(v98 + 8))(v49, v50);
    sub_241C73BBC((uint64_t)v102, (uint64_t (*)(void))sub_241C6825C);
    sub_241C73BBC(v100, (uint64_t (*)(void))v103);
  }
  else
  {
    uint64_t v82 = v28;
    uint64_t v52 = *(void **)(v28 + 32);
    uint64_t v100 = v28 + 32;
    uint64_t v102 = v52;
    unint64_t v88 = v35;
    uint64_t v81 = v27;
    ((void (*)(char *, char *, uint64_t))v52)(v35, v26, v27);
    sub_241CD67B0();
    uint64_t v83 = v33;
    sub_241CD6770();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v84);
    uint64_t v53 = v108;
    uint64_t v54 = v104;
    uint64_t v112 = sub_241A6AC20((uint64_t)v33, v108, v104);
    uint64_t v56 = v110;
    uint64_t v55 = v111;
    uint64_t v57 = *(void (**)(void, void, void))(v111 + 16);
    uint64_t v98 = v111 + 16;
    unint64_t v99 = v57;
    uint64_t v58 = v109;
    v57(v110, v53, v109);
    uint64_t v59 = v105;
    sub_241C61648(v54, v105, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    unint64_t v96 = *(unsigned __int8 *)(v55 + 80);
    uint64_t v60 = (v96 + 16) & ~v96;
    uint64_t v90 = v101[80];
    uint64_t v61 = (v106 + v90 + v60) & ~v90;
    unint64_t v91 = v96 | v90 | 7;
    uint64_t v62 = swift_allocObject();
    uint64_t v63 = *(unsigned __int8 **)(v55 + 32);
    uint64_t v111 = v55 + 32;
    uint64_t v101 = v63;
    ((void (*)(uint64_t, char *, uint64_t))v63)(v62 + v60, v56, v58);
    os_log_t v89 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request;
    sub_241C61734(v59, v62 + v61, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    sub_241C709A8(0, &qword_268D435F8, sub_241C6825C);
    uint64_t v86 = v64;
    sub_241C5D8C8(0, &qword_268D43600, sub_241C6825C);
    sub_241C68394(&qword_268D43608, &qword_268D435F8, sub_241C6825C);
    sub_241C70AEC(&qword_268D43610, &qword_268D43600, sub_241C6825C);
    sub_241CDA750();
    swift_release();
    swift_release();
    sub_241C61648(v54, v59, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v65 = v82;
    uint64_t v66 = v87;
    uint64_t v67 = v81;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v87, v88, v81);
    uint64_t v69 = v109;
    uint64_t v68 = v110;
    v99(v110, v108, v109);
    uint64_t v70 = (v90 + 16) & ~v90;
    unint64_t v71 = (v70 + v107 + *(unsigned __int8 *)(v65 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    unint64_t v72 = (v29 + v96 + v71) & ~v96;
    uint64_t v73 = swift_allocObject();
    sub_241C61734(v105, v73 + v70, v89);
    ((void (*)(unint64_t, char *, uint64_t))v102)(v73 + v71, v66, v67);
    ((void (*)(unint64_t, char *, uint64_t))v101)(v73 + v72, v68, v69);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43620, (void (*)(uint64_t))sub_241C68290);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v74 = v92;
    uint64_t v75 = v94;
    uint64_t v76 = v103;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v93 + 8))(v76, v75);
    sub_241C61600(&qword_268D43628, (void (*)(uint64_t))sub_241C683E4);
    uint64_t v77 = v97;
    uint64_t v51 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v74, v77);
    id v78 = *(void (**)(char *, uint64_t))(v65 + 8);
    v78(v83, v67);
    v78(v88, v67);
  }
  return v51;
}

uint64_t sub_241C3AA88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v110 = a3;
  uint64_t v107 = a2;
  sub_241B77834();
  uint64_t v99 = *(v4 - 1);
  uint64_t v100 = (void (*)(void, void, void))v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v98 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C2070C(0);
  unint64_t v91 = *(uint64_t (**)(uint64_t))(v6 - 8);
  uint64_t v7 = *((void *)v91 + 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v92 = (uint64_t (*)(uint64_t))((char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v106 = (uint64_t *)((char *)&v85 - v9);
  uint64_t v10 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v103 = *(unsigned __int8 **)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v109 = v11;
  uint64_t v105 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD7740();
  uint64_t v111 = *(void *)(v12 - 8);
  uint64_t v112 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v108 = v13;
  uint64_t v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C207D8();
  uint64_t v94 = *(void *)(v15 - 8);
  uint64_t v95 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v104 = (void (*)(uint64_t))((char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C6909C();
  uint64_t v96 = *(void *)(v17 - 8);
  uint64_t v97 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v93 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v88 = *(void *)(v19 - 8);
  uint64_t v20 = *(void *)(v88 + 64);
  uint64_t v21 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v89 = (uint64_t)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v102 = (uint64_t)&v85 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v85 - v24;
  uint64_t v26 = sub_241CD6810();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void *)(v27 + 64);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v90 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v85 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v85 - v33;
  sub_241C61648(a1, (uint64_t)v25, (uint64_t (*)(void))sub_241A68508);
  uint64_t v35 = v26;
  int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26);
  uint64_t v101 = v14;
  if (v36 == 1)
  {
    uint64_t v104 = sub_241A68508;
    sub_241C73BBC((uint64_t)v25, (uint64_t (*)(void))sub_241A68508);
    uint64_t v37 = v102;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v102, 1, 1, v35);
    uint64_t v38 = sub_241CDB5B0();
    uint64_t v39 = v106;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v106, 1, 1, v38);
    uint64_t v40 = (uint64_t)v39;
    uint64_t v41 = v92;
    sub_241C61648(v40, (uint64_t)v92, (uint64_t (*)(void))sub_241C2070C);
    uint64_t v42 = v105;
    sub_241C61648(v110, v105, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v43 = v89;
    sub_241C61648(v37, v89, (uint64_t (*)(void))sub_241A68508);
    uint64_t v45 = v111;
    uint64_t v44 = v112;
    (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v14, v107, v112);
    unint64_t v46 = (*((unsigned __int8 *)v91 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v91 + 80);
    unint64_t v47 = (v7 + v103[80] + v46) & ~(unint64_t)v103[80];
    unint64_t v48 = (v109 + *(unsigned __int8 *)(v88 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    unint64_t v49 = (v20 + *(unsigned __int8 *)(v45 + 80) + v48) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    uint64_t v50 = swift_allocObject();
    sub_241C61734((uint64_t)v41, v50 + v46, (uint64_t (*)(void))sub_241C2070C);
    sub_241C61734(v42, v50 + v47, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61734(v43, v50 + v48, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v50 + v49, v101, v44);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    uint64_t v51 = v98;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v52 = v100;
    uint64_t v53 = sub_241CDA6D0();
    (*(void (**)(char *, void (*)(void, void, void)))(v99 + 8))(v51, v52);
    sub_241C73BBC((uint64_t)v106, (uint64_t (*)(void))sub_241C2070C);
    sub_241C73BBC(v102, (uint64_t (*)(void))v104);
  }
  else
  {
    uint64_t v54 = *(uint64_t **)(v27 + 32);
    uint64_t v102 = v27 + 32;
    uint64_t v106 = v54;
    uint64_t v87 = v34;
    uint64_t v85 = v26;
    ((void (*)(char *, char *, uint64_t))v54)(v34, v25, v26);
    uint64_t v86 = v32;
    uint64_t v55 = (uint64_t)v34;
    uint64_t v56 = v110;
    sub_241AB9108(v55, (uint64_t)v32);
    uint64_t v57 = v107;
    uint64_t v113 = sub_241ABCC2C(v32, v107, v56);
    uint64_t v58 = v111;
    uint64_t v59 = v112;
    uint64_t v60 = *(void (**)(void, void, void))(v111 + 16);
    uint64_t v99 = v111 + 16;
    uint64_t v100 = v60;
    v60(v14, v57, v112);
    unint64_t v91 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request;
    uint64_t v89 = v27;
    uint64_t v61 = v105;
    sub_241C61648(v56, v105, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v62 = *(unsigned __int8 *)(v58 + 80);
    uint64_t v63 = (v62 + 16) & ~v62;
    uint64_t v64 = v58;
    uint64_t v65 = v103[80];
    uint64_t v66 = (v108 + v65 + v63) & ~v65;
    uint64_t v98 = (char *)(v62 | v65 | 7);
    uint64_t v67 = swift_allocObject();
    uint64_t v68 = *(unsigned __int8 **)(v64 + 32);
    uint64_t v111 = v64 + 32;
    uint64_t v103 = v68;
    ((void (*)(uint64_t, char *, uint64_t))v68)(v67 + v63, v14, v59);
    uint64_t v92 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request;
    sub_241C61734(v61, v67 + v66, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
    sub_241C709A8(0, (unint64_t *)&qword_268D43538, sub_241C2070C);
    uint64_t v88 = v69;
    sub_241C5D8C8(0, (unint64_t *)&qword_26B0326C8, sub_241C2070C);
    sub_241C68394(&qword_268D43540, (unint64_t *)&qword_268D43538, sub_241C2070C);
    sub_241C70AEC(&qword_26B0326C0, (unint64_t *)&qword_26B0326C8, sub_241C2070C);
    sub_241CDA750();
    swift_release();
    swift_release();
    uint64_t v70 = v61;
    sub_241C61648(v110, v61, v91);
    uint64_t v71 = v89;
    unint64_t v72 = v90;
    uint64_t v73 = v85;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v90, v87, v85);
    uint64_t v74 = v101;
    v100(v101, v107, v112);
    uint64_t v75 = (v65 + 16) & ~v65;
    unint64_t v76 = (v75 + v109 + *(unsigned __int8 *)(v71 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    unint64_t v77 = (v28 + v62 + v76) & ~v62;
    uint64_t v78 = swift_allocObject();
    sub_241C61734(v70, v78 + v75, v92);
    ((void (*)(unint64_t, char *, uint64_t))v106)(v78 + v76, v72, v73);
    ((void (*)(unint64_t, char *, uint64_t))v103)(v78 + v77, v74, v112);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43548, (void (*)(uint64_t))sub_241C207D8);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v79 = v93;
    uint64_t v80 = v95;
    uint64_t v81 = v104;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v94 + 8))(v81, v80);
    sub_241C61600(&qword_268D43648, (void (*)(uint64_t))sub_241C6909C);
    uint64_t v82 = v97;
    uint64_t v53 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v79, v82);
    uint64_t v83 = *(void (**)(char *, uint64_t))(v71 + 8);
    v83(v86, v73);
    v83(v87, v73);
  }
  return v53;
}

uint64_t sub_241C3B7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v109 = a3;
  uint64_t v106 = a2;
  sub_241B77834();
  uint64_t v98 = *(v4 - 1);
  uint64_t v99 = (void (*)(void, void, void))v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v97 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C2070C(0);
  uint64_t v90 = *(uint64_t (**)(uint64_t))(v6 - 8);
  uint64_t v7 = *((void *)v90 + 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v91 = (uint64_t (*)(uint64_t))((char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v105 = (uint64_t *)((char *)&v84 - v9);
  uint64_t v10 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v102 = *(unsigned __int8 **)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v108 = v11;
  uint64_t v104 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD7740();
  uint64_t v110 = *(void *)(v12 - 8);
  uint64_t v111 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v107 = v13;
  uint64_t v14 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C207D8();
  uint64_t v93 = *(void *)(v15 - 8);
  uint64_t v94 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v103 = (void (*)(uint64_t))((char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C6909C();
  uint64_t v95 = *(void *)(v17 - 8);
  uint64_t v96 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v92 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v87 = *(void *)(v19 - 8);
  uint64_t v20 = *(void *)(v87 + 64);
  uint64_t v21 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v88 = (uint64_t)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v101 = (uint64_t)&v84 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v84 - v24;
  uint64_t v26 = sub_241CD6810();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void *)(v27 + 64);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v89 = (char *)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v84 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v84 - v33;
  sub_241C61648(a1, (uint64_t)v25, (uint64_t (*)(void))sub_241A68508);
  uint64_t v35 = v26;
  int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26);
  uint64_t v100 = v14;
  if (v36 == 1)
  {
    uint64_t v103 = sub_241A68508;
    sub_241C73BBC((uint64_t)v25, (uint64_t (*)(void))sub_241A68508);
    uint64_t v37 = v101;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v101, 1, 1, v35);
    uint64_t v38 = sub_241CDB5B0();
    uint64_t v39 = v105;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v105, 1, 1, v38);
    uint64_t v40 = (uint64_t)v39;
    uint64_t v41 = v91;
    sub_241C61648(v40, (uint64_t)v91, (uint64_t (*)(void))sub_241C2070C);
    uint64_t v42 = v104;
    sub_241C61648(v109, v104, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v43 = v88;
    sub_241C61648(v37, v88, (uint64_t (*)(void))sub_241A68508);
    uint64_t v45 = v110;
    uint64_t v44 = v111;
    (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v14, v106, v111);
    unint64_t v46 = (*((unsigned __int8 *)v90 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v90 + 80);
    unint64_t v47 = (v7 + v102[80] + v46) & ~(unint64_t)v102[80];
    unint64_t v48 = (v108 + *(unsigned __int8 *)(v87 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
    unint64_t v49 = (v20 + *(unsigned __int8 *)(v45 + 80) + v48) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    uint64_t v50 = swift_allocObject();
    sub_241C61734((uint64_t)v41, v50 + v46, (uint64_t (*)(void))sub_241C2070C);
    sub_241C61734(v42, v50 + v47, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61734(v43, v50 + v48, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v50 + v49, v100, v44);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    uint64_t v51 = v97;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v52 = v99;
    uint64_t v53 = sub_241CDA6D0();
    (*(void (**)(char *, void (*)(void, void, void)))(v98 + 8))(v51, v52);
    sub_241C73BBC((uint64_t)v105, (uint64_t (*)(void))sub_241C2070C);
    sub_241C73BBC(v101, (uint64_t (*)(void))v103);
  }
  else
  {
    uint64_t v54 = *(uint64_t **)(v27 + 32);
    uint64_t v101 = v27 + 32;
    uint64_t v105 = v54;
    uint64_t v86 = v34;
    uint64_t v84 = v26;
    ((void (*)(char *, char *, uint64_t))v54)(v34, v25, v26);
    uint64_t v85 = v32;
    uint64_t v55 = v109;
    sub_241AE5D94((uint64_t)v32);
    uint64_t v56 = v106;
    uint64_t v112 = sub_241AE92A4(v32, v106, v55);
    uint64_t v57 = v110;
    uint64_t v58 = v111;
    uint64_t v59 = *(void (**)(void, void, void))(v110 + 16);
    uint64_t v98 = v110 + 16;
    uint64_t v99 = v59;
    v59(v14, v56, v111);
    uint64_t v90 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request;
    uint64_t v88 = v27;
    uint64_t v60 = v104;
    sub_241C61648(v55, v104, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v61 = *(unsigned __int8 *)(v57 + 80);
    uint64_t v62 = (v61 + 16) & ~v61;
    uint64_t v63 = v57;
    uint64_t v64 = v102[80];
    uint64_t v65 = (v107 + v64 + v62) & ~v64;
    uint64_t v97 = (char *)(v61 | v64 | 7);
    uint64_t v66 = swift_allocObject();
    uint64_t v67 = *(unsigned __int8 **)(v63 + 32);
    uint64_t v110 = v63 + 32;
    uint64_t v102 = v67;
    ((void (*)(uint64_t, char *, uint64_t))v67)(v66 + v62, v14, v58);
    unint64_t v91 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request;
    sub_241C61734(v60, v66 + v65, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
    sub_241C709A8(0, (unint64_t *)&qword_268D43538, sub_241C2070C);
    uint64_t v87 = v68;
    sub_241C5D8C8(0, (unint64_t *)&qword_26B0326C8, sub_241C2070C);
    sub_241C68394(&qword_268D43540, (unint64_t *)&qword_268D43538, sub_241C2070C);
    sub_241C70AEC(&qword_26B0326C0, (unint64_t *)&qword_26B0326C8, sub_241C2070C);
    sub_241CDA750();
    swift_release();
    swift_release();
    uint64_t v69 = v60;
    sub_241C61648(v109, v60, v90);
    uint64_t v70 = v88;
    uint64_t v71 = v89;
    uint64_t v72 = v84;
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v89, v86, v84);
    uint64_t v73 = v100;
    v99(v100, v106, v111);
    uint64_t v74 = (v64 + 16) & ~v64;
    unint64_t v75 = (v74 + v108 + *(unsigned __int8 *)(v70 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    unint64_t v76 = (v28 + v61 + v75) & ~v61;
    uint64_t v77 = swift_allocObject();
    sub_241C61734(v69, v77 + v74, v91);
    ((void (*)(unint64_t, char *, uint64_t))v105)(v77 + v75, v71, v72);
    ((void (*)(unint64_t, char *, uint64_t))v102)(v77 + v76, v73, v111);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43548, (void (*)(uint64_t))sub_241C207D8);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v78 = v92;
    uint64_t v79 = v94;
    uint64_t v80 = v103;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v93 + 8))(v80, v79);
    sub_241C61600(&qword_268D43648, (void (*)(uint64_t))sub_241C6909C);
    uint64_t v81 = v96;
    uint64_t v53 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v78, v81);
    uint64_t v82 = *(void (**)(char *, uint64_t))(v70 + 8);
    v82(v85, v72);
    v82(v86, v72);
  }
  return v53;
}

uint64_t sub_241C3C4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v104 = a3;
  uint64_t v108 = a2;
  sub_241B77834();
  uint64_t v98 = *(v4 - 1);
  uint64_t v99 = (void (*)(void, void, void))v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v96 = (unint64_t)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AEBEC8(0);
  uint64_t v89 = *(uint64_t (**)(uint64_t))(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v91 = (unint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v102 = (uint64_t *)((char *)&v80 - v9);
  uint64_t v10 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v101 = *(unsigned __int8 **)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v107 = v11;
  uint64_t v105 = (uint64_t)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_241CD7740();
  uint64_t v111 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v106 = v12;
  uint64_t v110 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6AF0C();
  uint64_t v93 = *(void *)(v13 - 8);
  uint64_t v94 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v103 = (void (*)(uint64_t))((char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C6B010();
  uint64_t v97 = v15;
  uint64_t v95 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v92 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_241CD6D00();
  uint64_t v17 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v85 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v85 + 64);
  uint64_t v22 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v86 = (uint64_t)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v100 = (uint64_t)&v80 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v80 - v25;
  uint64_t v27 = sub_241CD6810();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 64);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v87 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v80 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v80 - v34;
  sub_241C61648(a1, (uint64_t)v26, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    uint64_t v103 = sub_241A68508;
    sub_241C73BBC((uint64_t)v26, (uint64_t (*)(void))sub_241A68508);
    uint64_t v36 = v100;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v100, 1, 1, v27);
    uint64_t v37 = sub_241CD70F0();
    uint64_t v38 = (void (*)(void, void, void))v102;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v102, 1, 1, v37);
    uint64_t v39 = v91;
    sub_241C61648((uint64_t)v38, v91, (uint64_t (*)(void))sub_241AEBEC8);
    uint64_t v40 = v105;
    sub_241C61648(v104, v105, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v41 = v86;
    sub_241C61648(v36, v86, (uint64_t (*)(void))sub_241A68508);
    uint64_t v42 = v111;
    uint64_t v43 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v110, v108, v109);
    unint64_t v44 = (*((unsigned __int8 *)v89 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v89 + 80);
    unint64_t v45 = (v90 + v101[80] + v44) & ~(unint64_t)v101[80];
    unint64_t v46 = (v107 + *(unsigned __int8 *)(v85 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
    unint64_t v47 = (v21 + *(unsigned __int8 *)(v42 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    uint64_t v48 = swift_allocObject();
    sub_241C61734(v39, v48 + v44, (uint64_t (*)(void))sub_241AEBEC8);
    sub_241C61734(v40, v48 + v45, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61734(v41, v48 + v46, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v48 + v47, v110, v43);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    unint64_t v49 = v96;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v50 = v99;
    uint64_t v51 = sub_241CDA6D0();
    (*(void (**)(unint64_t, void (*)(void, void, void)))(v98 + 8))(v49, v50);
    sub_241C73BBC((uint64_t)v102, (uint64_t (*)(void))sub_241AEBEC8);
    sub_241C73BBC(v100, (uint64_t (*)(void))v103);
  }
  else
  {
    uint64_t v82 = v28;
    uint64_t v52 = *(void **)(v28 + 32);
    uint64_t v100 = v28 + 32;
    uint64_t v102 = v52;
    uint64_t v88 = v35;
    uint64_t v81 = v27;
    ((void (*)(char *, char *, uint64_t))v52)(v35, v26, v27);
    sub_241CD67B0();
    uint64_t v83 = v33;
    sub_241CD6770();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v84);
    uint64_t v53 = v108;
    uint64_t v54 = v104;
    uint64_t v112 = sub_241AEBEFC((uint64_t)v33, v108, v104);
    uint64_t v56 = v110;
    uint64_t v55 = v111;
    uint64_t v57 = *(void (**)(void, void, void))(v111 + 16);
    uint64_t v98 = v111 + 16;
    uint64_t v99 = v57;
    uint64_t v58 = v109;
    v57(v110, v53, v109);
    uint64_t v59 = v105;
    sub_241C61648(v54, v105, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
    unint64_t v96 = *(unsigned __int8 *)(v55 + 80);
    uint64_t v60 = (v96 + 16) & ~v96;
    uint64_t v90 = v101[80];
    uint64_t v61 = (v106 + v90 + v60) & ~v90;
    unint64_t v91 = v96 | v90 | 7;
    uint64_t v62 = swift_allocObject();
    uint64_t v63 = *(unsigned __int8 **)(v55 + 32);
    uint64_t v111 = v55 + 32;
    uint64_t v101 = v63;
    ((void (*)(uint64_t, char *, uint64_t))v63)(v62 + v60, v56, v58);
    uint64_t v89 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request;
    sub_241C61734(v59, v62 + v61, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
    sub_241C709A8(0, &qword_268D43658, sub_241AEBEC8);
    uint64_t v86 = v64;
    sub_241C5D8C8(0, &qword_268D43660, sub_241AEBEC8);
    sub_241C68394(&qword_268D43668, &qword_268D43658, sub_241AEBEC8);
    sub_241C70AEC(&qword_268D43670, &qword_268D43660, sub_241AEBEC8);
    sub_241CDA750();
    swift_release();
    swift_release();
    sub_241C61648(v54, v59, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v65 = v82;
    uint64_t v66 = v87;
    uint64_t v67 = v81;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v87, v88, v81);
    uint64_t v69 = v109;
    uint64_t v68 = v110;
    v99(v110, v108, v109);
    uint64_t v70 = (v90 + 16) & ~v90;
    unint64_t v71 = (v70 + v107 + *(unsigned __int8 *)(v65 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    unint64_t v72 = (v29 + v96 + v71) & ~v96;
    uint64_t v73 = swift_allocObject();
    sub_241C61734(v105, v73 + v70, v89);
    ((void (*)(unint64_t, char *, uint64_t))v102)(v73 + v71, v66, v67);
    ((void (*)(unint64_t, char *, uint64_t))v101)(v73 + v72, v68, v69);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43680, (void (*)(uint64_t))sub_241C6AF0C);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v74 = v92;
    uint64_t v75 = v94;
    unint64_t v76 = v103;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v93 + 8))(v76, v75);
    sub_241C61600(&qword_268D43688, (void (*)(uint64_t))sub_241C6B010);
    uint64_t v77 = v97;
    uint64_t v51 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v74, v77);
    uint64_t v78 = *(void (**)(char *, uint64_t))(v65 + 8);
    v78(v83, v67);
    v78(v88, v67);
  }
  return v51;
}

uint64_t sub_241C3D2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v92 = a3;
  uint64_t v95 = a2;
  sub_241B77834();
  uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v4 - 8);
  uint64_t v81 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v79 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v88 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v94 = v7;
  uint64_t v90 = (uint64_t)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_241CD7740();
  uint64_t v97 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v93 = v8;
  unint64_t v96 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6CCF4();
  uint64_t v83 = *(void *)(v9 - 8);
  uint64_t v84 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v89 = (void (*)(uint64_t))((char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C6CF1C();
  uint64_t v85 = *(void *)(v11 - 8);
  uint64_t v86 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v82 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = (uint64_t (*)(void))sub_241CD6D00();
  uint64_t v75 = (uint64_t (*)(uint64_t))*((void *)v77 - 1);
  MEMORY[0x270FA5388](v77);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v74 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v74 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v87 = (uint64_t *)((char *)&v71 - v20);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_241CD6810();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v78 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v71 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v71 - v30;
  sub_241C61648(a1, (uint64_t)v22, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    uint64_t v89 = sub_241A68508;
    sub_241C73BBC((uint64_t)v22, (uint64_t (*)(void))sub_241A68508);
    uint64_t v32 = v87;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v87, 1, 1, v23);
    uint64_t v98 = 0;
    char v99 = 0;
    uint64_t v33 = v90;
    sub_241C61648(v92, v90, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648((uint64_t)v32, (uint64_t)v18, (uint64_t (*)(void))sub_241A68508);
    uint64_t v35 = v96;
    uint64_t v34 = v97;
    uint64_t v36 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v96, v95, v91);
    unint64_t v37 = (*(unsigned __int8 *)(v88 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    unint64_t v38 = (v94 + *(unsigned __int8 *)(v74 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    unint64_t v39 = (v16 + *(unsigned __int8 *)(v34 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v40 = swift_allocObject();
    sub_241C616B4((uint64_t)&v98, v40 + 16, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput);
    sub_241C61734(v33, v40 + v37, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61734((uint64_t)v18, v40 + v38, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v40 + v39, v35, v36);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    uint64_t v41 = v79;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v42 = v81;
    uint64_t v43 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v80 + 1))(v41, v42);
    sub_241C73BBC((uint64_t)v87, (uint64_t (*)(void))v89);
  }
  else
  {
    uint64_t v72 = v24;
    unint64_t v44 = *(uint64_t **)(v24 + 32);
    uint64_t v81 = v24 + 32;
    uint64_t v87 = v44;
    unint64_t v76 = v31;
    uint64_t v71 = v23;
    ((void (*)(char *, char *, uint64_t))v44)(v31, v22, v23);
    sub_241CD67B0();
    uint64_t v73 = v29;
    sub_241CD6770();
    (*((void (**)(char *, uint64_t (*)(void)))v75 + 1))(v14, v77);
    type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator(0);
    uint64_t v45 = v95;
    uint64_t v46 = v92;
    uint64_t v98 = sub_241BFFD24((uint64_t)v29, v95, v92);
    uint64_t v47 = v97;
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 16);
    uint64_t v74 = v97 + 16;
    uint64_t v80 = v48;
    unint64_t v49 = v96;
    uint64_t v50 = v91;
    v48(v96, v45, v91);
    uint64_t v75 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request;
    uint64_t v51 = v90;
    sub_241C61648(v46, v90, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v52 = *(unsigned __int8 *)(v47 + 80);
    uint64_t v53 = (v52 + 16) & ~v52;
    uint64_t v54 = *(unsigned __int8 *)(v88 + 80);
    uint64_t v55 = (v93 + v54 + v53) & ~v54;
    uint64_t v79 = (char *)(v52 | v54 | 7);
    uint64_t v56 = swift_allocObject();
    uint64_t v88 = *(void *)(v47 + 32);
    uint64_t v97 = v47 + 32;
    ((void (*)(uint64_t, char *, uint64_t))v88)(v56 + v53, v49, v50);
    uint64_t v77 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request;
    sub_241C61734(v51, v56 + v55, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
    sub_241C6CDB0(0, &qword_268D436B0, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput);
    sub_241C6148C(0, &qword_268D436B8, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput);
    sub_241C6CE3C();
    uint64_t v57 = v50;
    sub_241C6CEAC();
    sub_241CDA750();
    swift_release();
    swift_release();
    sub_241C61648(v92, v51, v75);
    uint64_t v58 = v72;
    uint64_t v59 = v78;
    uint64_t v60 = v71;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v78, v76, v71);
    uint64_t v61 = v96;
    v80(v96, v95, v57);
    uint64_t v62 = (v54 + 16) & ~v54;
    unint64_t v63 = (v62 + v94 + *(unsigned __int8 *)(v58 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    uint64_t v64 = swift_allocObject();
    sub_241C61734(v51, v64 + v62, v77);
    ((void (*)(unint64_t, char *, uint64_t))v87)(v64 + v63, v59, v60);
    ((void (*)(unint64_t, char *, uint64_t))v88)(v64 + ((v25 + v52 + v63) & ~v52), v61, v91);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D436D8, (void (*)(uint64_t))sub_241C6CCF4);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v65 = v82;
    uint64_t v66 = v84;
    uint64_t v67 = v89;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v83 + 8))(v67, v66);
    sub_241C61600(&qword_268D436E0, (void (*)(uint64_t))sub_241C6CF1C);
    uint64_t v68 = v86;
    uint64_t v43 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v65, v68);
    uint64_t v69 = *(void (**)(char *, uint64_t))(v58 + 8);
    v69(v73, v60);
    v69(v76, v60);
  }
  return v43;
}

uint64_t sub_241C3DF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v105 = a3;
  uint64_t v109 = a2;
  sub_241B77834();
  uint64_t v99 = *(v4 - 1);
  uint64_t v100 = (void (*)(void, void, void))v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v95 = (unint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6E1C8(0);
  uint64_t v90 = *(uint64_t (**)(uint64_t))(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v92 = (unint64_t)&v81 - (((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v103 = (uint64_t *)((char *)&v81 - v9);
  uint64_t v10 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v102 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v108 = v11;
  uint64_t v106 = (uint64_t)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_241CD7740();
  uint64_t v112 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v107 = v12;
  uint64_t v111 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6E1FC();
  uint64_t v96 = v13;
  uint64_t v94 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v104 = (void (*)(uint64_t))((char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C6E300();
  uint64_t v97 = *(void *)(v15 - 8);
  uint64_t v98 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v93 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_241CD6D00();
  uint64_t v17 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v86 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v86 + 64);
  uint64_t v22 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v87 = (uint64_t)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v101 = (uint64_t)&v81 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v81 - v25;
  uint64_t v27 = sub_241CD6810();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 64);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v88 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v81 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v81 - v34;
  sub_241C61648(a1, (uint64_t)v26, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    uint64_t v104 = sub_241A68508;
    sub_241C73BBC((uint64_t)v26, (uint64_t (*)(void))sub_241A68508);
    uint64_t v36 = v101;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v101, 1, 1, v27);
    uint64_t Output = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput(0);
    unint64_t v38 = (void (*)(void, void, void))v103;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(v103, 1, 1, Output);
    uint64_t v39 = v92;
    sub_241C61648((uint64_t)v38, v92, (uint64_t (*)(void))sub_241C6E1C8);
    uint64_t v40 = v106;
    sub_241C61648(v105, v106, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v41 = v87;
    sub_241C61648(v36, v87, (uint64_t (*)(void))sub_241A68508);
    uint64_t v42 = v112;
    uint64_t v43 = v110;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v111, v109, v110);
    unint64_t v44 = (*((unsigned __int8 *)v90 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v90 + 80);
    unint64_t v45 = ((unint64_t)v91 + *(unsigned __int8 *)(v102 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
    unint64_t v46 = (v108 + *(unsigned __int8 *)(v86 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
    unint64_t v47 = (v21 + *(unsigned __int8 *)(v42 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    uint64_t v48 = swift_allocObject();
    sub_241C61734(v39, v48 + v44, (uint64_t (*)(void))sub_241C6E1C8);
    sub_241C61734(v40, v48 + v45, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61734(v41, v48 + v46, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v48 + v47, v111, v43);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    unint64_t v49 = v95;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v50 = v100;
    uint64_t v51 = sub_241CDA6D0();
    (*(void (**)(unint64_t, void (*)(void, void, void)))(v99 + 8))(v49, v50);
    sub_241C73BBC((uint64_t)v103, (uint64_t (*)(void))sub_241C6E1C8);
    sub_241C73BBC(v101, (uint64_t (*)(void))v104);
  }
  else
  {
    uint64_t v83 = v28;
    uint64_t v52 = *(void **)(v28 + 32);
    uint64_t v101 = v28 + 32;
    uint64_t v103 = v52;
    uint64_t v89 = v35;
    uint64_t v82 = v27;
    ((void (*)(char *, char *, uint64_t))v52)(v35, v26, v27);
    sub_241CD67B0();
    uint64_t v84 = v33;
    sub_241CD6770();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v85);
    type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator(0);
    uint64_t v53 = (uint64_t)v33;
    uint64_t v54 = v109;
    uint64_t v55 = v105;
    uint64_t v113 = sub_241C05358(v53, v109, v105);
    uint64_t v56 = v111;
    uint64_t v57 = v112;
    uint64_t v58 = *(void (**)(void, void, void))(v112 + 16);
    uint64_t v99 = v112 + 16;
    uint64_t v100 = v58;
    uint64_t v59 = v110;
    v58(v111, v54, v110);
    uint64_t v90 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request;
    uint64_t v60 = v106;
    sub_241C61648(v55, v106, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
    unint64_t v95 = *(unsigned __int8 *)(v57 + 80);
    uint64_t v61 = (v95 + 16) & ~v95;
    uint64_t v62 = *(unsigned __int8 *)(v102 + 80);
    uint64_t v63 = (v107 + v62 + v61) & ~v62;
    unint64_t v92 = v95 | v62 | 7;
    uint64_t v64 = swift_allocObject();
    uint64_t v102 = *(void *)(v57 + 32);
    uint64_t v112 = v57 + 32;
    ((void (*)(uint64_t, char *, uint64_t))v102)(v64 + v61, v56, v59);
    uint64_t v91 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request;
    sub_241C61734(v60, v64 + v63, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
    sub_241C709A8(0, (unint64_t *)&qword_26B0326B8, sub_241C6E1C8);
    uint64_t v87 = v65;
    sub_241C5D8C8(0, &qword_268D43700, sub_241C6E1C8);
    sub_241C68394(&qword_26B0326B0, (unint64_t *)&qword_26B0326B8, sub_241C6E1C8);
    sub_241C70AEC(&qword_268D43708, &qword_268D43700, sub_241C6E1C8);
    sub_241CDA750();
    swift_release();
    swift_release();
    sub_241C61648(v55, v60, v90);
    uint64_t v66 = v83;
    uint64_t v67 = v88;
    uint64_t v68 = v82;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v88, v89, v82);
    uint64_t v70 = v110;
    uint64_t v69 = v111;
    v100(v111, v109, v110);
    uint64_t v71 = (v62 + 16) & ~v62;
    unint64_t v72 = (v71 + v108 + *(unsigned __int8 *)(v66 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    unint64_t v73 = (v29 + v95 + v72) & ~v95;
    uint64_t v74 = swift_allocObject();
    sub_241C61734(v106, v74 + v71, v91);
    ((void (*)(unint64_t, char *, uint64_t))v103)(v74 + v72, v67, v68);
    ((void (*)(unint64_t, char *, uint64_t))v102)(v74 + v73, v69, v70);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43718, (void (*)(uint64_t))sub_241C6E1FC);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v75 = v93;
    uint64_t v76 = v96;
    uint64_t v77 = v104;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v94 + 8))(v77, v76);
    sub_241C61600(&qword_268D43720, (void (*)(uint64_t))sub_241C6E300);
    uint64_t v78 = v98;
    uint64_t v51 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v75, v78);
    uint64_t v79 = *(void (**)(char *, uint64_t))(v66 + 8);
    v79(v84, v68);
    v79(v89, v68);
  }
  return v51;
}

uint64_t sub_241C3ED3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v93 = a3;
  uint64_t v96 = a2;
  sub_241B77834();
  uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t))(v4 - 8);
  uint64_t v83 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v81 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v90 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v95 = v7;
  uint64_t v98 = (uint64_t)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_241CD7740();
  uint64_t v99 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v94 = v8;
  uint64_t v97 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6E978();
  uint64_t v85 = *(void *)(v9 - 8);
  uint64_t v86 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v91 = (void (*)(uint64_t))((char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C6EC24();
  uint64_t v87 = *(void *)(v11 - 8);
  uint64_t v88 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v84 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_241CD6D00();
  uint64_t v77 = *(uint64_t (**)(uint64_t))(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v76 = *(uint64_t (**)(uint64_t))(v15 - 8);
  uint64_t v16 = *((void *)v76 + 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v89 = (uint64_t *)((char *)&v74 - v20);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v74 - v21;
  uint64_t v23 = sub_241CD6810();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v79 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v74 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v74 - v30;
  sub_241C61648(a1, (uint64_t)v22, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    uint64_t v91 = sub_241A68508;
    sub_241C73BBC((uint64_t)v22, (uint64_t (*)(void))sub_241A68508);
    uint64_t v32 = v89;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v89, 1, 1, v23);
    uint64_t v100 = 0;
    uint64_t v33 = v98;
    sub_241C61648(v93, v98, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648((uint64_t)v32, (uint64_t)v18, (uint64_t (*)(void))sub_241A68508);
    uint64_t v34 = v99;
    uint64_t v35 = v97;
    uint64_t v36 = v92;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v97, v96, v92);
    unint64_t v37 = (*(unsigned __int8 *)(v90 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
    unint64_t v38 = (v95 + *((unsigned __int8 *)v76 + 80) + v37) & ~(unint64_t)*((unsigned __int8 *)v76 + 80);
    unint64_t v39 = (v16 + *(unsigned __int8 *)(v34 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v40 = swift_allocObject();
    sub_241C6ED20((uint64_t)&v100, v40 + 16);
    sub_241C61734(v33, v40 + v37, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61734((uint64_t)v18, v40 + v38, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v40 + v39, v35, v36);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    uint64_t v41 = v81;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v42 = v83;
    uint64_t v43 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v82 + 1))(v41, v42);
    sub_241C73BBC((uint64_t)v89, (uint64_t (*)(void))v91);
  }
  else
  {
    unint64_t v44 = *(uint64_t **)(v24 + 32);
    uint64_t v83 = v24 + 32;
    uint64_t v89 = v44;
    uint64_t v80 = v31;
    uint64_t v74 = v23;
    ((void (*)(char *, char *, uint64_t))v44)(v31, v22, v23);
    sub_241CD67B0();
    uint64_t v75 = v29;
    sub_241CD6770();
    (*((void (**)(char *, uint64_t))v77 + 1))(v14, v78);
    type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator(0);
    unint64_t v45 = (void (*)(char *, void *))v29;
    uint64_t v46 = v96;
    uint64_t v47 = v93;
    uint64_t v100 = sub_241C74550(v45, v96, v93);
    uint64_t v48 = v99;
    unint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 16);
    uint64_t v81 = (char *)(v99 + 16);
    uint64_t v82 = v49;
    uint64_t v50 = v97;
    uint64_t v51 = v92;
    v49(v97, v46, v92);
    uint64_t v76 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request;
    sub_241C61648(v47, v98, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v52 = *(unsigned __int8 *)(v48 + 80);
    uint64_t v53 = (v52 + 16) & ~v52;
    uint64_t v54 = v51;
    uint64_t v55 = *(unsigned __int8 *)(v90 + 80);
    uint64_t v56 = (v94 + v55 + v53) & ~v55;
    uint64_t v78 = v52 | v55 | 7;
    uint64_t v57 = swift_allocObject();
    uint64_t v90 = *(void *)(v48 + 32);
    uint64_t v99 = v48 + 32;
    ((void (*)(uint64_t, char *, uint64_t))v90)(v57 + v53, v50, v54);
    uint64_t v77 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request;
    uint64_t v58 = v98;
    sub_241C61734(v98, v57 + v56, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
    sub_241C6EA60();
    sub_241C6EB84();
    sub_241C61600(&qword_268D43750, (void (*)(uint64_t))sub_241C6EA60);
    sub_241C61600(&qword_268D43758, (void (*)(uint64_t))sub_241C6EB84);
    sub_241CDA750();
    swift_release();
    swift_release();
    sub_241C61648(v93, v58, v76);
    uint64_t v59 = v79;
    uint64_t v60 = v74;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v79, v80, v74);
    uint64_t v61 = v24;
    uint64_t v62 = v97;
    uint64_t v63 = v92;
    v82(v97, v96, v92);
    uint64_t v64 = (v55 + 16) & ~v55;
    uint64_t v65 = v61;
    unint64_t v66 = (v64 + v95 + *(unsigned __int8 *)(v61 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    uint64_t v67 = swift_allocObject();
    sub_241C61734(v98, v67 + v64, v77);
    ((void (*)(unint64_t, char *, uint64_t))v89)(v67 + v66, v59, v60);
    ((void (*)(unint64_t, char *, uint64_t))v90)(v67 + ((v25 + v52 + v66) & ~v52), v62, v63);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43768, (void (*)(uint64_t))sub_241C6E978);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v68 = v84;
    uint64_t v69 = v86;
    uint64_t v70 = v91;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v85 + 8))(v70, v69);
    sub_241C61600(&qword_268D43770, (void (*)(uint64_t))sub_241C6EC24);
    uint64_t v71 = v88;
    uint64_t v43 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v68, v71);
    unint64_t v72 = *(void (**)(char *, uint64_t))(v65 + 8);
    v72(v75, v60);
    v72(v80, v60);
  }
  return v43;
}

uint64_t sub_241C3F9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v125 = a3;
  uint64_t v129 = a2;
  sub_241B77834();
  uint64_t v103 = v4;
  uint64_t v102 = (void (**)(char *, uint64_t (*)(uint64_t)))*((void *)v4 - 1);
  MEMORY[0x270FA5388](v4);
  uint64_t v101 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD7740();
  uint64_t v122 = *(void *)(v6 - 8);
  uint64_t v123 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v127 = v7;
  uint64_t v128 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v120 = *(uint64_t (**)(uint64_t))(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v124 = v8;
  uint64_t v126 = (uint64_t)&v93 - (((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6F5FC();
  uint64_t v108 = v9;
  uint64_t v107 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v106 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6F6E8();
  uint64_t v112 = v11;
  uint64_t v110 = *((void *)v11 - 1);
  MEMORY[0x270FA5388](v11);
  uint64_t v109 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6F7C0();
  uint64_t v116 = *(void *)(v13 - 8);
  uint64_t v117 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v121 = (void (*)(uint64_t))((char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C6F9B0();
  uint64_t v118 = *(void *)(v15 - 8);
  uint64_t v119 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v115 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_241CD6D00();
  uint64_t v17 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v97 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v97 + 64);
  uint64_t v22 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v99 = (char *)&v93 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v93 - v26;
  uint64_t v28 = sub_241CD6810();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v113 = (char *)&v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v93 - v33;
  uint64_t v111 = v35;
  MEMORY[0x270FA5388](v32);
  unint64_t v37 = (char *)&v93 - v36;
  sub_241C61648(a1, (uint64_t)v27, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    uint64_t v121 = sub_241A68508;
    sub_241C73BBC((uint64_t)v27, (uint64_t (*)(void))sub_241A68508);
    uint64_t v38 = (uint64_t)v99;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v99, 1, 1, v28);
    v131[0] = 0;
    uint64_t v39 = v126;
    sub_241C61648(v125, v126, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648(v38, (uint64_t)v23, (uint64_t (*)(void))sub_241A68508);
    uint64_t v41 = v122;
    uint64_t v40 = v123;
    uint64_t v42 = v128;
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v128, v129, v123);
    unint64_t v43 = (*((unsigned __int8 *)v120 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v120 + 80);
    unint64_t v44 = ((unint64_t)v124 + *(unsigned __int8 *)(v97 + 80) + v43) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
    unint64_t v45 = (v21 + *(unsigned __int8 *)(v41 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    uint64_t v46 = swift_allocObject();
    sub_241C727C8((uint64_t)v131, v46 + 16, &qword_26B032CD0, &qword_26B034E38, 0x263F46588);
    sub_241C61734(v39, v46 + v43, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61734((uint64_t)v23, v46 + v44, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v46 + v45, v42, v40);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    uint64_t v47 = v101;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v48 = v103;
    uint64_t v49 = sub_241CDA6D0();
    v102[1](v47, v48);
    sub_241C73BBC(v38, (uint64_t (*)(void))v121);
  }
  else
  {
    uint64_t v105 = v29;
    uint64_t v50 = *(void (***)(char *, uint64_t (*)(uint64_t)))(v29 + 32);
    uint64_t v101 = (char *)(v29 + 32);
    uint64_t v102 = v50;
    uint64_t v114 = v37;
    uint64_t v104 = v28;
    ((void (*)(char *, char *, uint64_t))v50)(v37, v27, v28);
    sub_241CD67B0();
    uint64_t v96 = v34;
    sub_241CD6770();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v98);
    sub_241CD76B0();
    sub_241A311E0(v131, v131[3]);
    uint64_t v51 = (void *)sub_241CD75B0();
    sub_241A31190((uint64_t)v131);
    uint64_t v52 = self;
    uint64_t v53 = (void *)sub_241CD6790();
    id v54 = objc_msgSend(v52, sel_predicateForSamplesWithinDateInterval_options_, v53, 0);

    uint64_t v55 = v125;
    uint64_t v56 = (void *)sub_241CD7770();
    id v57 = v54;
    id v95 = v57;
    id v94 = v51;
    uint64_t v58 = sub_241CDB5D0();

    sub_241CDB0D0();
    id v59 = objc_msgSend(self, sel_hkhr_aFibBurdenSyncedDefaultsDomainWithHealthStore_, v51);
    uint64_t v60 = sub_241CDB750();
    swift_bridgeObjectRelease();

    uint64_t v130 = v60;
    v131[0] = v58;
    sub_241A5B1CC();
    sub_241B99ED4();
    uint64_t v97 = MEMORY[0x263EFDCF8];
    sub_241C61600(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
    sub_241C61600((unint64_t *)&qword_26B032850, (void (*)(uint64_t))sub_241B99ED4);
    swift_retain();
    swift_retain();
    uint64_t v61 = v106;
    sub_241CDA400();
    uint64_t v103 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request;
    uint64_t v62 = v126;
    sub_241C61648(v55, v126, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v63 = *((unsigned __int8 *)v120 + 80);
    uint64_t v98 = (uint64_t)v124 + ((v63 + 16) & ~v63);
    uint64_t v100 = (v63 + 16) & ~v63;
    uint64_t v99 = (char *)(v63 | 7);
    uint64_t v64 = swift_allocObject();
    uint64_t v120 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request;
    sub_241C61734(v62, v64 + ((v63 + 16) & ~v63), type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = sub_241C6FC60;
    *(void *)(v65 + 24) = v64;
    sub_241C62EA0(0, &qword_26B032CD0, &qword_26B034E38, 0x263F46588, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241C61600(&qword_26B0324B8, (void (*)(uint64_t))sub_241C6F5FC);
    unint64_t v66 = v109;
    uint64_t v67 = v108;
    sub_241CDA710();
    swift_release();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v61, v67);
    sub_241C61600(&qword_26B032448, (void (*)(uint64_t))sub_241C6F6E8);
    uint64_t v68 = v112;
    uint64_t v69 = sub_241CDA6D0();

    swift_release();
    swift_release();
    (*(void (**)(char *, void (*)(void, void, void)))(v110 + 8))(v66, v68);
    v131[0] = v69;
    uint64_t v70 = v122;
    uint64_t v112 = *(void (**)(void, void, void))(v122 + 16);
    uint64_t v71 = v128;
    uint64_t v72 = v123;
    v112(v128, v129, v123);
    uint64_t v73 = v55;
    uint64_t v74 = v126;
    sub_241C61648(v73, v126, v103);
    uint64_t v75 = *(unsigned __int8 *)(v70 + 80);
    uint64_t v76 = (v75 + 16) & ~v75;
    uint64_t v77 = (v127 + v63 + v76) & ~v63;
    uint64_t v78 = swift_allocObject();
    uint64_t v124 = *(void (**)(uint64_t, char *, uint64_t))(v70 + 32);
    v124(v78 + v76, v71, v72);
    sub_241C61734(v74, v78 + v77, v120);
    sub_241C6F89C();
    sub_241C725AC(0, &qword_268D43798, &qword_26B032CD0, &qword_26B034E38, 0x263F46588);
    sub_241C61600(&qword_268D437A0, (void (*)(uint64_t))sub_241C6F89C);
    sub_241C6F938();
    sub_241CDA750();
    swift_release();
    swift_release();
    sub_241C61648(v125, v74, v103);
    uint64_t v79 = v105;
    uint64_t v80 = v113;
    uint64_t v81 = v104;
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v113, v114, v104);
    uint64_t v82 = v128;
    v112(v128, v129, v72);
    unint64_t v83 = (v98 + *(unsigned __int8 *)(v79 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    unint64_t v84 = (v111 + v75 + v83) & ~v75;
    uint64_t v85 = swift_allocObject();
    sub_241C61734(v74, v85 + v100, v120);
    ((void (*)(unint64_t, char *, uint64_t))v102)(v85 + v83, v80, v81);
    v124(v85 + v84, v82, v72);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D437B8, (void (*)(uint64_t))sub_241C6F7C0);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v86 = v115;
    uint64_t v87 = v117;
    uint64_t v88 = v121;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v116 + 8))(v88, v87);
    sub_241C61600(&qword_268D437C0, (void (*)(uint64_t))sub_241C6F9B0);
    uint64_t v89 = v119;
    uint64_t v49 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v118 + 8))(v86, v89);
    uint64_t v90 = *(void (**)(char *, uint64_t))(v105 + 8);
    uint64_t v91 = v104;
    v90(v96, v104);
    v90(v114, v91);
  }
  return v49;
}

uint64_t sub_241C40B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v98 = a3;
  uint64_t v101 = a2;
  sub_241B77834();
  uint64_t v87 = *(void (**)(char *, uint64_t, uint64_t))(v4 - 8);
  uint64_t v88 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v86 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v95 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v100 = v7;
  uint64_t v102 = (uint64_t)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD7740();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v103 = v8;
  uint64_t v104 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v99 = v10;
  uint64_t v97 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C708A4();
  uint64_t v90 = *(void *)(v11 - 8);
  uint64_t v91 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v96 = (void (*)(uint64_t))((char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C70B3C();
  uint64_t v92 = *(void *)(v13 - 8);
  uint64_t v93 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v89 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_241CD6D00();
  uint64_t v82 = *(uint64_t (**)(uint64_t))(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v81 = *(uint64_t (**)(uint64_t))(v17 - 8);
  uint64_t v18 = *((void *)v81 + 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  id v94 = (uint64_t *)((char *)&v77 - v22);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v77 - v23;
  uint64_t v25 = sub_241CD6810();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void *)(v26 + 64);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  unint64_t v84 = (char *)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v77 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v77 - v32;
  sub_241C61648(a1, (uint64_t)v24, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    uint64_t v96 = sub_241A68508;
    sub_241C73BBC((uint64_t)v24, (uint64_t (*)(void))sub_241A68508);
    uint64_t v34 = (void (*)(void, void, void))v94;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v94, 1, 1, v25);
    uint64_t v105 = 0;
    uint64_t v35 = v102;
    sub_241C61648(v98, v102, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648((uint64_t)v34, (uint64_t)v20, (uint64_t (*)(void))sub_241A68508);
    uint64_t v36 = v103;
    uint64_t v37 = v104;
    uint64_t v38 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v97, v101, v103);
    unint64_t v39 = (*(unsigned __int8 *)(v95 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
    unint64_t v40 = (v100 + *((unsigned __int8 *)v81 + 80) + v39) & ~(unint64_t)*((unsigned __int8 *)v81 + 80);
    unint64_t v41 = (v18 + *(unsigned __int8 *)(v37 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    uint64_t v42 = swift_allocObject();
    sub_241C61734((uint64_t)&v105, v42 + 16, (uint64_t (*)(void))sub_241C70A1C);
    sub_241C61734(v35, v42 + v39, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61734((uint64_t)v20, v42 + v40, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v42 + v41, v38, v36);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    unint64_t v43 = v86;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v44 = v88;
    uint64_t v45 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v87 + 1))(v43, v44);
    sub_241C73BBC((uint64_t)v94, (uint64_t (*)(void))v96);
  }
  else
  {
    uint64_t v46 = *(void **)(v26 + 32);
    uint64_t v88 = v26 + 32;
    id v94 = v46;
    uint64_t v85 = v33;
    uint64_t v79 = v25;
    ((void (*)(char *, char *, uint64_t))v46)(v33, v24, v25);
    sub_241CD67B0();
    uint64_t v80 = v31;
    sub_241CD6770();
    (*((void (**)(char *, uint64_t))v82 + 1))(v16, v83);
    uint64_t v47 = v101;
    uint64_t v48 = v98;
    uint64_t v105 = sub_241C8AA08((uint64_t)v31, v101, v98);
    uint64_t v49 = v103;
    uint64_t v50 = v104;
    uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
    uint64_t v86 = (char *)(v104 + 16);
    uint64_t v87 = v51;
    uint64_t v52 = v97;
    v51(v97, v47, v103);
    uint64_t v81 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request;
    sub_241C61648(v48, v102, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v53 = *(unsigned __int8 *)(v50 + 80);
    uint64_t v54 = v50;
    uint64_t v55 = (v53 + 16) & ~v53;
    uint64_t v56 = *(unsigned __int8 *)(v95 + 80);
    uint64_t v57 = (v99 + v56 + v55) & ~v56;
    uint64_t v83 = v53 | v56 | 7;
    uint64_t v58 = swift_allocObject();
    uint64_t v95 = *(void *)(v54 + 32);
    uint64_t v104 = v54 + 32;
    ((void (*)(uint64_t, char *, uint64_t))v95)(v58 + v55, v52, v49);
    uint64_t v82 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request;
    uint64_t v59 = v102;
    sub_241C61734(v102, v58 + v57, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
    sub_241C709A8(0, &qword_268D437E0, sub_241C70A1C);
    uint64_t v77 = v60;
    sub_241C5D8C8(0, &qword_268D437E8, sub_241C70A1C);
    sub_241C68394(&qword_268D437F0, &qword_268D437E0, sub_241C70A1C);
    sub_241C70AEC(&qword_268D437F8, &qword_268D437E8, sub_241C70A1C);
    sub_241CDA750();
    swift_release();
    swift_release();
    uint64_t v61 = v59;
    sub_241C61648(v98, v59, v81);
    uint64_t v62 = v84;
    uint64_t v63 = v79;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v84, v85, v79);
    uint64_t v64 = v26;
    uint64_t v78 = v26;
    uint64_t v65 = v97;
    uint64_t v66 = v103;
    v87(v97, v101, v103);
    uint64_t v67 = (v56 + 16) & ~v56;
    unint64_t v68 = (v67 + v100 + *(unsigned __int8 *)(v64 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    unint64_t v69 = (v27 + v53 + v68) & ~v53;
    uint64_t v70 = swift_allocObject();
    sub_241C61734(v61, v70 + v67, v82);
    ((void (*)(unint64_t, char *, uint64_t))v94)(v70 + v68, v62, v63);
    ((void (*)(unint64_t, char *, uint64_t))v95)(v70 + v69, v65, v66);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43808, (void (*)(uint64_t))sub_241C708A4);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v71 = v89;
    uint64_t v72 = v91;
    uint64_t v73 = v96;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v90 + 8))(v73, v72);
    sub_241C61600(&qword_268D43810, (void (*)(uint64_t))sub_241C70B3C);
    uint64_t v74 = v93;
    uint64_t v45 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v71, v74);
    uint64_t v75 = *(void (**)(char *, uint64_t))(v78 + 8);
    v75(v80, v63);
    v75(v85, v63);
  }
  return v45;
}

uint64_t sub_241C417B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v131 = a3;
  uint64_t v132 = a2;
  uint64_t v123 = (char *)a1;
  sub_241B77834();
  uint64_t v106 = v3;
  uint64_t v104 = *(void (***)(char *, uint64_t))(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v103 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v124 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v127 = v5;
  uint64_t v128 = (uint64_t)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_241CD7740();
  uint64_t v133 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130);
  uint64_t v126 = v6;
  uint64_t v129 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_241CD7650();
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v107 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = (uint64_t (*)(void))sub_241CD7690();
  uint64_t v111 = *((void *)v112 - 1);
  MEMORY[0x270FA5388](v112);
  uint64_t v110 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C660F4();
  uint64_t v115 = v9;
  uint64_t v114 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v113 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C661CC();
  uint64_t v120 = v11;
  uint64_t v119 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v125 = (void (*)(uint64_t))((char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C66320();
  uint64_t v122 = v13;
  uint64_t v121 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v118 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241CD6D00();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v101 = *(void *)(v19 - 8);
  uint64_t v20 = *(void *)(v101 + 64);
  uint64_t v21 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v102 = (char *)&v99 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v99 - v25;
  uint64_t v27 = sub_241CD6810();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v117 = (char *)&v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = (void (**)(char *, uint64_t))((char *)&v99 - v32);
  uint64_t v116 = v34;
  MEMORY[0x270FA5388](v31);
  uint64_t v36 = (char *)&v99 - v35;
  sub_241C61648((uint64_t)v123, (uint64_t)v26, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    uint64_t v125 = sub_241A68508;
    sub_241C73BBC((uint64_t)v26, (uint64_t (*)(void))sub_241A68508);
    uint64_t v37 = (uint64_t)v102;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v102, 1, 1, v27);
    v136[0] = 0;
    uint64_t v38 = v128;
    sub_241C61648(v131, v128, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648(v37, (uint64_t)v22, (uint64_t (*)(void))sub_241A68508);
    uint64_t v39 = v133;
    unint64_t v41 = v129;
    uint64_t v40 = v130;
    (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v129, v132, v130);
    unint64_t v42 = (*(unsigned __int8 *)(v124 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
    unint64_t v43 = (v127 + *(unsigned __int8 *)(v101 + 80) + v42) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
    unint64_t v44 = (v20 + *(unsigned __int8 *)(v39 + 80) + v43) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v45 = swift_allocObject();
    sub_241C727C8((uint64_t)v136, v45 + 16, (unint64_t *)&qword_26B032CE0, &qword_26B0304D8, 0x263F0A6B8);
    sub_241C61734(v38, v45 + v42, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61734((uint64_t)v22, v45 + v43, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v45 + v44, v41, v40);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    uint64_t v46 = v103;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v47 = v106;
    uint64_t v48 = sub_241CDA6D0();
    v104[1](v46, v47);
    sub_241C73BBC(v37, (uint64_t (*)(void))v125);
  }
  else
  {
    uint64_t v106 = v28;
    uint64_t v49 = *(char **)(v28 + 32);
    uint64_t v103 = (char *)(v28 + 32);
    uint64_t v102 = v49;
    ((void (*)(char *, char *, uint64_t))v49)(v36, v26, v27);
    uint64_t v123 = v36;
    sub_241CD67B0();
    sub_241CD6770();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v50 = self;
    uint64_t v104 = v33;
    uint64_t v51 = (void *)sub_241CD6790();
    id v52 = objc_msgSend(v50, sel_predicateForSamplesWithinDateInterval_options_, v51, 0);

    sub_241CD76B0();
    sub_241A311E0(v136, v136[3]);
    uint64_t v53 = (void *)sub_241CD75B0();
    uint64_t v54 = v105;
    uint64_t v55 = v131;
    uint64_t v56 = (void *)sub_241CD7770();
    id v57 = v52;
    uint64_t v58 = sub_241CDB5D0();

    sub_241A31190((uint64_t)v136);
    uint64_t v135 = v58;
    sub_241CD7730();
    uint64_t v59 = (void *)sub_241CD76E0();
    sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241CEB710;
    *(void *)(inited + 32) = sub_241CD7770();
    uint64_t v134 = inited;
    sub_241CDB2E0();
    LOBYTE(v54) = *(unsigned char *)(v55 + *(int *)(v54 + 40));
    sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
    uint64_t v61 = sub_241CD73B0();
    uint64_t v62 = *(void *)(v61 - 8);
    uint64_t v63 = *(void *)(v62 + 72);
    unint64_t v64 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    uint64_t v100 = v27;
    uint64_t v65 = swift_allocObject();
    if (v54)
    {
      *(_OWORD *)(v65 + 16) = xmmword_241CEB730;
      (*(void (**)(unint64_t, void, uint64_t))(v62 + 104))(v65 + v64, *MEMORY[0x263F454D0], v61);
    }
    else
    {
      *(_OWORD *)(v65 + 16) = xmmword_241CEB720;
      uint64_t v67 = *(void (**)(unint64_t, void, uint64_t))(v62 + 104);
      v67(v65 + v64, *MEMORY[0x263F45520], v61);
      v67(v65 + v64 + v63, *MEMORY[0x263F45538], v61);
    }
    id v66 = v59;
    sub_241C695CC(v65, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    unint64_t v68 = swift_bridgeObjectRetain();
    sub_241C6A314(v68, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v108 + 104))(v107, *MEMORY[0x263F45690], v109);
    unint64_t v69 = v110;
    sub_241CD7680();

    swift_bridgeObjectRelease();
    sub_241A5B1CC();
    uint64_t v109 = MEMORY[0x263EFDCF8];
    sub_241C61600(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
    uint64_t v70 = sub_241CDA680();
    (*(void (**)(char *, uint64_t (*)(void)))(v111 + 8))(v69, v112);
    sub_241A31190((uint64_t)v136);
    swift_release();
    v136[0] = v70;
    sub_241C62EA0(0, (unint64_t *)&qword_26B032CE0, &qword_26B0304D8, 0x263F0A6B8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    uint64_t v71 = v113;
    sub_241CDA710();
    swift_release();
    sub_241C61600(&qword_26B038930, (void (*)(uint64_t))sub_241C660F4);
    uint64_t v72 = v115;
    uint64_t v73 = sub_241CDA6D0();

    (*(void (**)(char *, uint64_t))(v114 + 8))(v71, v72);
    v136[0] = v73;
    uint64_t v74 = v133;
    uint64_t v114 = *(void *)(v133 + 16);
    uint64_t v115 = v133 + 16;
    uint64_t v76 = v129;
    uint64_t v75 = v130;
    ((void (*)(char *, uint64_t, uint64_t))v114)(v129, v132, v130);
    uint64_t v77 = v128;
    sub_241C61648(v131, v128, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v78 = *(unsigned __int8 *)(v74 + 80);
    uint64_t v79 = v74;
    uint64_t v80 = (v78 + 16) & ~v78;
    uint64_t v81 = *(unsigned __int8 *)(v124 + 80);
    uint64_t v82 = (v126 + v81 + v80) & ~v81;
    uint64_t v113 = (char *)(v78 | v81 | 7);
    uint64_t v83 = swift_allocObject();
    uint64_t v124 = *(void *)(v79 + 32);
    uint64_t v133 = v79 + 32;
    ((void (*)(uint64_t, char *, uint64_t))v124)(v83 + v80, v76, v75);
    uint64_t v112 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request;
    sub_241C61734(v77, v83 + v82, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    sub_241A994B8();
    sub_241C725AC(0, &qword_268D435B8, (unint64_t *)&qword_26B032CE0, &qword_26B0304D8, 0x263F0A6B8);
    sub_241C61600(&qword_26B0326D0, (void (*)(uint64_t))sub_241A994B8);
    sub_241C662A8();
    sub_241CDA750();
    swift_release();
    swift_release();
    sub_241C61648(v131, v77, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v84 = v106;
    uint64_t v85 = v117;
    uint64_t v86 = v100;
    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v117, v123, v100);
    uint64_t v88 = v129;
    uint64_t v87 = v130;
    ((void (*)(char *, uint64_t, uint64_t))v114)(v129, v132, v130);
    uint64_t v89 = (v81 + 16) & ~v81;
    unint64_t v90 = (v89 + v127 + *(unsigned __int8 *)(v84 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
    unint64_t v91 = (v116 + v78 + v90) & ~v78;
    uint64_t v92 = swift_allocObject();
    sub_241C61734(v128, v92 + v89, v112);
    ((void (*)(unint64_t, char *, uint64_t))v102)(v92 + v90, v85, v86);
    ((void (*)(unint64_t, char *, uint64_t))v124)(v92 + v91, v88, v87);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D435D0, (void (*)(uint64_t))sub_241C661CC);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v93 = v118;
    uint64_t v94 = v120;
    uint64_t v95 = v125;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v119 + 8))(v95, v94);
    sub_241C61600(&qword_268D435D8, (void (*)(uint64_t))sub_241C66320);
    uint64_t v96 = v122;
    uint64_t v48 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v121 + 8))(v93, v96);
    uint64_t v97 = *(void (**)(char *, uint64_t))(v84 + 8);
    v97((char *)v104, v86);
    v97(v123, v86);
  }
  return v48;
}

uint64_t sub_241C42BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v95 = a3;
  uint64_t v98 = a2;
  sub_241B77834();
  uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v4 - 8);
  uint64_t v84 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v82 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  uint64_t v91 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v97 = v7;
  uint64_t v100 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD7740();
  uint64_t v93 = *(void *)(v8 - 8);
  uint64_t v94 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v96 = v9;
  uint64_t v99 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C661CC();
  uint64_t v86 = *(void *)(v10 - 8);
  uint64_t v87 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v92 = (void (*)(uint64_t))((char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C66320();
  uint64_t v88 = *(void *)(v12 - 8);
  uint64_t v89 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v85 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = (uint64_t (*)(void))sub_241CD6D00();
  uint64_t v78 = (uint64_t (*)(uint64_t))*((void *)v79 - 1);
  MEMORY[0x270FA5388](v79);
  uint64_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v77 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v77 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  unint64_t v90 = (uint64_t *)((char *)&v73 - v21);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v73 - v22;
  uint64_t v24 = sub_241CD6810();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v80 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v73 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v73 - v31;
  sub_241C61648(a1, (uint64_t)v23, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    uint64_t v92 = sub_241A68508;
    sub_241C73BBC((uint64_t)v23, (uint64_t (*)(void))sub_241A68508);
    uint64_t v33 = (void (*)(void, void, void))v90;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v90, 1, 1, v24);
    uint64_t v101 = 0;
    uint64_t v34 = v100;
    sub_241C61648(v95, v100, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    sub_241C61648((uint64_t)v33, (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    uint64_t v36 = v93;
    uint64_t v35 = v94;
    uint64_t v37 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v99, v98, v94);
    unint64_t v38 = (*(unsigned __int8 *)(v91 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
    unint64_t v39 = (v97 + *(unsigned __int8 *)(v77 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    unint64_t v40 = (v17 + *(unsigned __int8 *)(v36 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v41 = swift_allocObject();
    sub_241C727C8((uint64_t)&v101, v41 + 16, (unint64_t *)&qword_26B032CE0, &qword_26B0304D8, 0x263F0A6B8);
    sub_241C61734(v34, v41 + v38, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    sub_241C61734((uint64_t)v19, v41 + v39, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v41 + v40, v37, v35);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    unint64_t v42 = v82;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v43 = v84;
    uint64_t v44 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v83 + 1))(v42, v43);
    sub_241C73BBC((uint64_t)v90, (uint64_t (*)(void))v92);
  }
  else
  {
    uint64_t v45 = *(void **)(v25 + 32);
    uint64_t v84 = v25 + 32;
    unint64_t v90 = v45;
    uint64_t v81 = v32;
    uint64_t v75 = v24;
    ((void (*)(char *, char *, uint64_t))v45)(v32, v23, v24);
    sub_241CD67B0();
    uint64_t v76 = v30;
    sub_241CD6770();
    (*((void (**)(char *, uint64_t (*)(void)))v78 + 1))(v15, v79);
    uint64_t v46 = v98;
    uint64_t v47 = v95;
    uint64_t v101 = sub_241CB66A4((uint64_t)v30, v98, v95);
    uint64_t v48 = v93;
    uint64_t v49 = v94;
    uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 16);
    uint64_t v82 = (char *)(v93 + 16);
    uint64_t v83 = v50;
    uint64_t v51 = v99;
    v50(v99, v46, v94);
    uint64_t v78 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request;
    sub_241C61648(v47, v100, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    uint64_t v52 = *(unsigned __int8 *)(v48 + 80);
    uint64_t v53 = (v52 + 16) & ~v52;
    uint64_t v54 = *(unsigned __int8 *)(v91 + 80);
    uint64_t v55 = (v96 + v54 + v53) & ~v54;
    uint64_t v91 = v52 | v54 | 7;
    uint64_t v56 = swift_allocObject();
    uint64_t v93 = *(void *)(v48 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v93)(v56 + v53, v51, v49);
    uint64_t v79 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request;
    uint64_t v57 = v100;
    sub_241C61734(v100, v56 + v55, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    sub_241A994B8();
    uint64_t v77 = v58;
    sub_241C725AC(0, &qword_268D435B8, (unint64_t *)&qword_26B032CE0, &qword_26B0304D8, 0x263F0A6B8);
    sub_241C61600(&qword_26B0326D0, (void (*)(uint64_t))sub_241A994B8);
    sub_241C662A8();
    sub_241CDA750();
    swift_release();
    swift_release();
    sub_241C61648(v95, v57, v78);
    uint64_t v59 = v80;
    uint64_t v60 = v75;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v80, v81, v75);
    uint64_t v61 = v99;
    uint64_t v62 = v25;
    uint64_t v74 = v25;
    uint64_t v63 = v94;
    v83(v99, v98, v94);
    uint64_t v64 = (v54 + 16) & ~v54;
    unint64_t v65 = (v64 + v97 + *(unsigned __int8 *)(v62 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    uint64_t v66 = swift_allocObject();
    sub_241C61734(v100, v66 + v64, v79);
    ((void (*)(unint64_t, char *, uint64_t))v90)(v66 + v65, v59, v60);
    ((void (*)(unint64_t, char *, uint64_t))v93)(v66 + ((v26 + v52 + v65) & ~v52), v61, v63);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D435D0, (void (*)(uint64_t))sub_241C661CC);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v67 = v85;
    uint64_t v68 = v87;
    unint64_t v69 = v92;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v86 + 8))(v69, v68);
    sub_241C61600(&qword_268D435D8, (void (*)(uint64_t))sub_241C66320);
    uint64_t v70 = v89;
    uint64_t v44 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v67, v70);
    uint64_t v71 = *(void (**)(char *, uint64_t))(v74 + 8);
    v71(v76, v60);
    v71(v81, v60);
  }
  return v44;
}

uint64_t sub_241C43828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v96 = a3;
  uint64_t v99 = a2;
  sub_241B77834();
  uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t))(v4 - 8);
  uint64_t v85 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v83 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
  uint64_t v92 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v98 = v7;
  uint64_t v101 = (uint64_t)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD7740();
  uint64_t v94 = *(void *)(v8 - 8);
  uint64_t v95 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v97 = v9;
  uint64_t v100 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C72434();
  uint64_t v87 = *(void *)(v10 - 8);
  uint64_t v88 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v93 = (void (*)(uint64_t))((char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C726A4();
  uint64_t v89 = *(void *)(v12 - 8);
  uint64_t v90 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v86 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = (uint64_t (*)(void))sub_241CD6D00();
  uint64_t v79 = (uint64_t (*)(uint64_t))*((void *)v80 - 1);
  MEMORY[0x270FA5388](v80);
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v78 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v78 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v91 = (uint64_t *)((char *)&v74 - v21);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v74 - v22;
  uint64_t v24 = sub_241CD6810();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v81 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v74 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v74 - v31;
  sub_241C61648(a1, (uint64_t)v23, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    uint64_t v93 = sub_241A68508;
    sub_241C73BBC((uint64_t)v23, (uint64_t (*)(void))sub_241A68508);
    uint64_t v33 = (void (*)(void, void, void))v91;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v91, 1, 1, v24);
    uint64_t v102 = 0;
    uint64_t v34 = v101;
    sub_241C61648(v96, v101, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    sub_241C61648((uint64_t)v33, (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    uint64_t v36 = v94;
    uint64_t v35 = v95;
    uint64_t v37 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v100, v99, v95);
    unint64_t v38 = (*(unsigned __int8 *)(v92 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    unint64_t v39 = (v98 + *(unsigned __int8 *)(v78 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    unint64_t v40 = (v17 + *(unsigned __int8 *)(v36 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v41 = swift_allocObject();
    sub_241C727C8((uint64_t)&v102, v41 + 16, &qword_26B032CC8, (unint64_t *)&qword_26B02E800, 0x263F0A768);
    sub_241C61734(v34, v41 + v38, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    sub_241C61734((uint64_t)v19, v41 + v39, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v41 + v40, v37, v35);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    unint64_t v42 = v83;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v43 = v85;
    uint64_t v44 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v84 + 1))(v42, v43);
    sub_241C73BBC((uint64_t)v91, (uint64_t (*)(void))v93);
  }
  else
  {
    uint64_t v45 = *(void **)(v25 + 32);
    uint64_t v85 = v25 + 32;
    uint64_t v91 = v45;
    uint64_t v82 = v32;
    uint64_t v76 = v24;
    ((void (*)(char *, char *, uint64_t))v45)(v32, v23, v24);
    sub_241CD67B0();
    uint64_t v77 = v30;
    sub_241CD6770();
    (*((void (**)(char *, uint64_t (*)(void)))v79 + 1))(v15, v80);
    uint64_t v46 = v99;
    uint64_t v47 = v96;
    sub_241CCDBF4((uint64_t)v30, v99, v96);
    uint64_t v102 = v48;
    uint64_t v49 = v94;
    uint64_t v50 = v95;
    uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
    uint64_t v83 = (char *)(v94 + 16);
    uint64_t v84 = v51;
    uint64_t v52 = v100;
    v51(v100, v46, v95);
    uint64_t v79 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request;
    sub_241C61648(v47, v101, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    uint64_t v53 = *(unsigned __int8 *)(v49 + 80);
    uint64_t v54 = (v53 + 16) & ~v53;
    uint64_t v55 = *(unsigned __int8 *)(v92 + 80);
    uint64_t v56 = (v97 + v55 + v54) & ~v55;
    uint64_t v92 = v53 | v55 | 7;
    uint64_t v57 = swift_allocObject();
    uint64_t v94 = *(void *)(v49 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v94)(v57 + v54, v52, v50);
    uint64_t v80 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request;
    uint64_t v58 = v101;
    sub_241C61734(v101, v57 + v56, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    sub_241C72510();
    uint64_t v78 = v59;
    sub_241C725AC(0, &qword_268D43838, &qword_26B032CC8, (unint64_t *)&qword_26B02E800, 0x263F0A768);
    sub_241C61600(&qword_268D43840, (void (*)(uint64_t))sub_241C72510);
    sub_241C7262C();
    sub_241CDA750();
    swift_release();
    swift_release();
    sub_241C61648(v96, v58, v79);
    uint64_t v60 = v81;
    uint64_t v61 = v76;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v81, v82, v76);
    uint64_t v62 = v100;
    uint64_t v63 = v25;
    uint64_t v75 = v25;
    uint64_t v64 = v95;
    v84(v100, v99, v95);
    uint64_t v65 = (v55 + 16) & ~v55;
    unint64_t v66 = (v65 + v98 + *(unsigned __int8 *)(v63 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    uint64_t v67 = swift_allocObject();
    sub_241C61734(v101, v67 + v65, v80);
    ((void (*)(unint64_t, char *, uint64_t))v91)(v67 + v66, v60, v61);
    ((void (*)(unint64_t, char *, uint64_t))v94)(v67 + ((v26 + v53 + v66) & ~v53), v62, v64);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43858, (void (*)(uint64_t))sub_241C72434);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v68 = v86;
    uint64_t v69 = v88;
    uint64_t v70 = v93;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v87 + 8))(v70, v69);
    sub_241C61600(&qword_268D43860, (void (*)(uint64_t))sub_241C726A4);
    uint64_t v71 = v90;
    uint64_t v44 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v68, v71);
    uint64_t v72 = *(void (**)(char *, uint64_t))(v75 + 8);
    v72(v77, v61);
    v72(v82, v61);
  }
  return v44;
}

uint64_t sub_241C44484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v104 = a3;
  uint64_t v108 = a2;
  sub_241B77834();
  uint64_t v98 = *(v4 - 1);
  uint64_t v99 = (void (*)(void, void, void))v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v96 = (unint64_t)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C2070C(0);
  uint64_t v89 = *(uint64_t (**)(uint64_t))(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v91 = (unint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v102 = (uint64_t *)((char *)&v80 - v9);
  uint64_t v10 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v101 = *(unsigned __int8 **)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v107 = v11;
  uint64_t v105 = (uint64_t)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_241CD7740();
  uint64_t v111 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v106 = v12;
  uint64_t v110 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C207D8();
  uint64_t v93 = *(void *)(v13 - 8);
  uint64_t v94 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v103 = (void (*)(uint64_t))((char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C6909C();
  uint64_t v97 = v15;
  uint64_t v95 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v92 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_241CD6D00();
  uint64_t v17 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v85 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v85 + 64);
  uint64_t v22 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v86 = (uint64_t)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v100 = (uint64_t)&v80 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v80 - v25;
  uint64_t v27 = sub_241CD6810();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 64);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v87 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v80 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v80 - v34;
  sub_241C61648(a1, (uint64_t)v26, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    uint64_t v103 = sub_241A68508;
    sub_241C73BBC((uint64_t)v26, (uint64_t (*)(void))sub_241A68508);
    uint64_t v36 = v100;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v100, 1, 1, v27);
    uint64_t v37 = sub_241CDB5B0();
    unint64_t v38 = (void (*)(void, void, void))v102;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v102, 1, 1, v37);
    uint64_t v39 = v91;
    sub_241C61648((uint64_t)v38, v91, (uint64_t (*)(void))sub_241C2070C);
    uint64_t v40 = v105;
    sub_241C61648(v104, v105, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v41 = v86;
    sub_241C61648(v36, v86, (uint64_t (*)(void))sub_241A68508);
    uint64_t v42 = v111;
    uint64_t v43 = v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v110, v108, v109);
    unint64_t v44 = (*((unsigned __int8 *)v89 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v89 + 80);
    unint64_t v45 = (v90 + v101[80] + v44) & ~(unint64_t)v101[80];
    unint64_t v46 = (v107 + *(unsigned __int8 *)(v85 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
    unint64_t v47 = (v21 + *(unsigned __int8 *)(v42 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    uint64_t v48 = swift_allocObject();
    sub_241C61734(v39, v48 + v44, (uint64_t (*)(void))sub_241C2070C);
    sub_241C61734(v40, v48 + v45, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61734(v41, v48 + v46, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v48 + v47, v110, v43);
    sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
    sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
    unint64_t v49 = v96;
    sub_241CDA620();
    sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
    uint64_t v50 = v99;
    uint64_t v51 = sub_241CDA6D0();
    (*(void (**)(unint64_t, void (*)(void, void, void)))(v98 + 8))(v49, v50);
    sub_241C73BBC((uint64_t)v102, (uint64_t (*)(void))sub_241C2070C);
    sub_241C73BBC(v100, (uint64_t (*)(void))v103);
  }
  else
  {
    uint64_t v82 = v28;
    uint64_t v52 = *(void **)(v28 + 32);
    uint64_t v100 = v28 + 32;
    uint64_t v102 = v52;
    uint64_t v88 = v35;
    uint64_t v81 = v27;
    ((void (*)(char *, char *, uint64_t))v52)(v35, v26, v27);
    sub_241CD67B0();
    uint64_t v83 = v33;
    sub_241CD6770();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v84);
    uint64_t v53 = v108;
    uint64_t v54 = v104;
    uint64_t v112 = sub_241CD08F0(v33, v108, v104);
    uint64_t v56 = v110;
    uint64_t v55 = v111;
    uint64_t v57 = *(void (**)(void, void, void))(v111 + 16);
    uint64_t v98 = v111 + 16;
    uint64_t v99 = v57;
    uint64_t v58 = v109;
    v57(v110, v53, v109);
    uint64_t v59 = v105;
    sub_241C61648(v54, v105, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
    unint64_t v96 = *(unsigned __int8 *)(v55 + 80);
    uint64_t v60 = (v96 + 16) & ~v96;
    uint64_t v90 = v101[80];
    uint64_t v61 = (v106 + v90 + v60) & ~v90;
    unint64_t v91 = v96 | v90 | 7;
    uint64_t v62 = swift_allocObject();
    uint64_t v63 = *(unsigned __int8 **)(v55 + 32);
    uint64_t v111 = v55 + 32;
    uint64_t v101 = v63;
    ((void (*)(uint64_t, char *, uint64_t))v63)(v62 + v60, v56, v58);
    uint64_t v89 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request;
    sub_241C61734(v59, v62 + v61, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
    sub_241C709A8(0, (unint64_t *)&qword_268D43538, sub_241C2070C);
    uint64_t v86 = v64;
    sub_241C5D8C8(0, (unint64_t *)&qword_26B0326C8, sub_241C2070C);
    sub_241C68394(&qword_268D43540, (unint64_t *)&qword_268D43538, sub_241C2070C);
    sub_241C70AEC(&qword_26B0326C0, (unint64_t *)&qword_26B0326C8, sub_241C2070C);
    sub_241CDA750();
    swift_release();
    swift_release();
    sub_241C61648(v54, v59, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v65 = v82;
    unint64_t v66 = v87;
    uint64_t v67 = v81;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v87, v88, v81);
    uint64_t v69 = v109;
    uint64_t v68 = v110;
    v99(v110, v108, v109);
    uint64_t v70 = (v90 + 16) & ~v90;
    unint64_t v71 = (v70 + v107 + *(unsigned __int8 *)(v65 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    unint64_t v72 = (v29 + v96 + v71) & ~v96;
    uint64_t v73 = swift_allocObject();
    sub_241C61734(v105, v73 + v70, v89);
    ((void (*)(unint64_t, char *, uint64_t))v102)(v73 + v71, v66, v67);
    ((void (*)(unint64_t, char *, uint64_t))v101)(v73 + v72, v68, v69);
    sub_241CDA4F0();
    sub_241C5D8C8(0, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43548, (void (*)(uint64_t))sub_241C207D8);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    uint64_t v74 = v92;
    uint64_t v75 = v94;
    uint64_t v76 = v103;
    sub_241CDA840();
    swift_release();
    (*(void (**)(void (*)(uint64_t), uint64_t))(v93 + 8))(v76, v75);
    sub_241C61600(&qword_268D43648, (void (*)(uint64_t))sub_241C6909C);
    uint64_t v77 = v97;
    uint64_t v51 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v74, v77);
    uint64_t v78 = *(void (**)(char *, uint64_t))(v65 + 8);
    v78(v83, v67);
    v78(v88, v67);
  }
  return v51;
}

uint64_t sub_241C45270(void (*a1)(unint64_t, char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v110 = a3;
  uint64_t v112 = a2;
  uint64_t v104 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t Output = type metadata accessor for SummaryModelQueryOutput();
  uint64_t v95 = *(void *)(Output - 8);
  MEMORY[0x270FA5388](Output);
  unint64_t v91 = (char *)&v76 - v8;
  uint64_t v111 = a5;
  uint64_t v113 = swift_getAssociatedTypeWitness();
  uint64_t v116 = *(void *)(v113 - 8);
  uint64_t v107 = *(void *)(v116 + 64);
  MEMORY[0x270FA5388](v113);
  uint64_t v108 = (char *)&v76 - v9;
  uint64_t v109 = sub_241CD7740();
  uint64_t v115 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v106 = v10;
  uint64_t v114 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3DA64();
  uint64_t v11 = sub_241CDA510();
  uint64_t v12 = sub_241CDA510();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v96 = v11;
  uint64_t v117 = v11;
  uint64_t v118 = v12;
  uint64_t v94 = v12;
  uint64_t v92 = WitnessTable;
  uint64_t v119 = WitnessTable;
  uint64_t v120 = v14;
  uint64_t v90 = v14;
  uint64_t v15 = sub_241CDA430();
  uint64_t v102 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v105 = (char *)&v76 - v16;
  sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
  uint64_t v18 = v17;
  uint64_t v19 = sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v100 = v18;
  uint64_t v117 = v18;
  uint64_t v118 = v15;
  uint64_t v103 = v15;
  uint64_t v98 = v19;
  uint64_t v119 = v19;
  uint64_t v120 = v20;
  uint64_t v97 = v20;
  uint64_t v89 = sub_241CDA490();
  uint64_t v101 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v99 = (char *)&v76 - v21;
  sub_241A68508(0);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v76 - v26;
  uint64_t v28 = sub_241CD6810();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v88 = (char *)&v76 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v76 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v76 - v35;
  sub_241C61648((uint64_t)v104, (uint64_t)v27, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_241C73BBC((uint64_t)v27, (uint64_t (*)(void))sub_241A68508);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v25, 1, 1, v28);
    uint64_t v37 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v91, 1, 1);
    uint64_t v38 = sub_241C461D0(v110, (uint64_t)v25, v112, v37, a4, v111);
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v37, Output);
    sub_241C73BBC((uint64_t)v25, (uint64_t (*)(void))sub_241A68508);
  }
  else
  {
    uint64_t v85 = v29;
    uint64_t v39 = *(void (**)(unint64_t, char *, uint64_t))(v29 + 32);
    uint64_t v95 = v29 + 32;
    uint64_t v104 = v39;
    uint64_t v87 = v36;
    uint64_t v84 = v28;
    v39((unint64_t)v36, v27, v28);
    uint64_t v40 = v111;
    uint64_t v41 = v113;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
    unint64_t v44 = v34;
    uint64_t v86 = v34;
    uint64_t v45 = v110;
    v43(v36, v41, AssociatedConformanceWitness);
    uint64_t v46 = v112;
    uint64_t v117 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 40))(v44, v112, v45, a4, v40);
    uint64_t v81 = a4;
    uint64_t v47 = v115;
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 16);
    uint64_t v82 = v115 + 16;
    uint64_t v83 = v48;
    v48(v114, v46, v109);
    uint64_t v49 = v116;
    uint64_t v77 = *(void (**)(void))(v116 + 16);
    uint64_t v78 = v116 + 16;
    uint64_t AssociatedTypeWitness = v30;
    uint64_t v50 = v108;
    v77();
    uint64_t v51 = *(unsigned __int8 *)(v47 + 80);
    uint64_t v52 = v47;
    uint64_t v53 = (v51 + 32) & ~v51;
    uint64_t v54 = *(unsigned __int8 *)(v49 + 80);
    uint64_t v55 = (v106 + v53 + v54) & ~v54;
    uint64_t v80 = v51 | v54 | 7;
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = a4;
    *(void *)(v56 + 24) = v40;
    uint64_t v57 = *(char **)(v52 + 32);
    uint64_t v115 = v52 + 32;
    unint64_t v91 = v57;
    uint64_t v58 = v114;
    uint64_t v59 = v109;
    ((void (*)(uint64_t, char *, uint64_t))v57)(v56 + v53, v114, v109);
    uint64_t v60 = *(void (**)(uint64_t, char *, uint64_t))(v49 + 32);
    uint64_t v116 = v49 + 32;
    uint64_t v79 = v60;
    uint64_t v61 = v113;
    v60(v56 + v55, v50, v113);
    sub_241CDA750();
    swift_release();
    swift_release();
    ((void (*)(char *, uint64_t, uint64_t))v77)(v50, v110, v61);
    uint64_t v62 = v85;
    uint64_t v63 = v88;
    uint64_t v64 = v84;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v88, v87, v84);
    v83(v58, v112, v59);
    uint64_t v65 = (v54 + 32) & ~v54;
    unint64_t v66 = (v65 + v107 + *(unsigned __int8 *)(v62 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    unint64_t v67 = (AssociatedTypeWitness + v51 + v66) & ~v51;
    uint64_t v68 = swift_allocObject();
    uint64_t v69 = v111;
    *(void *)(v68 + 16) = v81;
    *(void *)(v68 + 24) = v69;
    v79(v68 + v65, v108, v113);
    v104(v68 + v66, v63, v64);
    ((void (*)(unint64_t, char *, uint64_t))v91)(v68 + v67, v114, v59);
    sub_241CDA4F0();
    uint64_t v70 = v99;
    uint64_t v71 = v103;
    unint64_t v72 = v105;
    sub_241CDA840();
    swift_release();
    (*(void (**)(char *, uint64_t))(v102 + 8))(v72, v71);
    uint64_t v73 = v89;
    swift_getWitnessTable();
    uint64_t v38 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v70, v73);
    uint64_t v74 = *(void (**)(char *, uint64_t))(v62 + 8);
    v74(v86, v64);
    v74(v87, v64);
  }
  return v38;
}

void static CurrentValueSummaryModelGenerating.sharableModel(request:currentValue:)(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v4 = static CurrentValueSummaryModelGenerating.summaryData(request:currentValue:)(a1, a2);
  sub_241BAB3A4(v4, a3);
}

void *static CurrentValueSummaryModelGenerating.summaryData(request:currentValue:)(uint64_t a1, void *a2)
{
  id v33 = a2;
  uint64_t v2 = sub_241CD7AB0();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v32 = (char *)&v29 - v5;
  uint64_t v6 = sub_241CD7AF0();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD77C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  uint64_t v15 = swift_checkMetadataState();
  v14(v15, AssociatedConformanceWitness);
  sub_241CD7790();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v16 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v31);
  uint64_t v17 = v15;
  uint64_t v18 = v32;
  char v19 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v17, AssociatedConformanceWitness);
  sub_241CD7A80();
  id v20 = v33;
  id v21 = objc_msgSend(v20, sel_data);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = sub_241CD6AE0();
    unint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    unint64_t v25 = 0xF000000000000000;
  }
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  uint64_t v26 = (uint64_t)v34;
  sub_241CD7A80();
  uint64_t v27 = sub_241A54BF8(v23, v25, 1, v16, v19 & 1, v26);

  sub_241A54FC8(v23, v25);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v36);
  return v27;
}

uint64_t sub_241C461D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v44 = a4;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v46 = a1;
  uint64_t v8 = sub_241CD7740();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  uint64_t v50 = *(void *)(v53 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v45 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v45 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v38 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a6;
  uint64_t v40 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v37 = AssociatedTypeWitness;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v16 = (char *)&v37 - v15;
  uint64_t v39 = (char *)&v37 - v15;
  swift_getAssociatedTypeWitness();
  uint64_t Output = type metadata accessor for SummaryModelQueryOutput();
  uint64_t v18 = *(void *)(Output - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](Output);
  id v21 = (char *)&v37 - v20;
  sub_241B77834();
  uint64_t v49 = v22;
  uint64_t v51 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v42 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v44, Output);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v46, AssociatedTypeWitness);
  sub_241C61648(v47, (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_241A68508);
  uint64_t v24 = v53;
  unint64_t v25 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v43, v48, v54);
  unint64_t v26 = (*(unsigned __int8 *)(v18 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v27 = (v19 + v26 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v28 = (v14 + *(unsigned __int8 *)(v45 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  unint64_t v29 = (v11 + *(unsigned __int8 *)(v24 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v30 = (char *)swift_allocObject();
  uint64_t v31 = v41;
  *((void *)v30 + 2) = v40;
  *((void *)v30 + 3) = v31;
  *((void *)v30 + 4) = v52;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v30[v26], v21, Output);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v30[v27], v39, v37);
  sub_241C61734(v38, (uint64_t)&v30[v28], (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v30[v29], v25, v54);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  uint64_t v32 = v42;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v33 = v49;
  uint64_t v34 = v32;
  uint64_t v35 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v33);
  return v35;
}

uint64_t sub_241C46744(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C62F08(0, &qword_268D435A0, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper);
  uint64_t v7 = v6;
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = &v36[-v8];
  uint64_t v9 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_241CD7740();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_241CDA1A0();
  uint64_t v40 = *(void *)(v16 - 8);
  uint64_t v41 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  sub_241C61648(a3, (uint64_t)v11, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
  id v19 = a1;
  id v20 = a1;
  id v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB650();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v39 = v7;
    uint64_t v25 = v24;
    uint64_t v38 = swift_slowAlloc();
    *(void *)&v45[0] = v38;
    *(_DWORD *)uint64_t v25 = 136315394;
    int v37 = v23;
    uint64_t v26 = sub_241C38E70((uint64_t)v15, v11[*(int *)(v9 + 40)], 0xD00000000000003ALL);
    uint64_t v44 = sub_241A33FE4(v26, v27, (uint64_t *)v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v44 = (uint64_t)a1;
    id v28 = a1;
    sub_241A3DA64();
    uint64_t v29 = sub_241CDB120();
    uint64_t v44 = sub_241A33FE4(v29, v30, (uint64_t *)v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v21, (os_log_type_t)v37, "%s: error when querying: %s", (uint8_t *)v25, 0x16u);
    uint64_t v31 = v38;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v31, -1, -1);
    uint64_t v32 = v25;
    uint64_t v7 = v39;
    MEMORY[0x245637F20](v32, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v18, v41);
  sub_241A31144(0, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper, (uint64_t (*)(void, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  memset(v45, 0, sizeof(v45));
  uint64_t v46 = 0;
  uint64_t v33 = v42;
  sub_241CDA5D0();
  sub_241C62F74(&qword_268D435A8, (uint64_t)&qword_268D435A0, (void (*)(uint64_t, uint64_t, unint64_t *, ValueMetadata *))sub_241C62F08);
  uint64_t v34 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v33, v7);
  return v34;
}

uint64_t sub_241C46C88(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C6825C(0);
  uint64_t v47 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A29CE8(0, &qword_268D43630, (uint64_t (*)(uint64_t))sub_241C6825C, MEMORY[0x263EFDDF8]);
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = &v38[-v9];
  uint64_t v10 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_241CD7740();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v38[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_241CDA1A0();
  uint64_t v41 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  MEMORY[0x270FA5388](v17);
  id v19 = &v38[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  sub_241C61648(a3, (uint64_t)v12, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
  id v20 = a1;
  id v21 = a1;
  os_log_type_t v22 = sub_241CDA190();
  os_log_type_t v23 = sub_241CDB650();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    int v39 = v24;
    uint64_t v26 = v25;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v49 = v40;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v27 = sub_241C38E70((uint64_t)v16, v12[*(int *)(v10 + 40)], 0xD00000000000004BLL);
    uint64_t v48 = sub_241A33FE4(v27, v28, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    sub_241C73BBC((uint64_t)v12, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v26 + 12) = 2080;
    uint64_t v48 = (uint64_t)a1;
    id v29 = a1;
    sub_241A3DA64();
    uint64_t v30 = sub_241CDB120();
    uint64_t v48 = sub_241A33FE4(v30, v31, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v22, (os_log_type_t)v39, "%s: error when querying: %s", (uint8_t *)v26, 0x16u);
    uint64_t v32 = v40;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v32, -1, -1);
    MEMORY[0x245637F20](v26, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    sub_241C73BBC((uint64_t)v12, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v19, v42);
  sub_241A6AA08();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v44, 1, 1, v33);
  uint64_t v34 = v43;
  sub_241CDA5D0();
  sub_241C7152C(&qword_268D43638, &qword_268D43630, (uint64_t (*)(uint64_t))sub_241C6825C);
  uint64_t v35 = v46;
  uint64_t v36 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v34, v35);
  return v36;
}

uint64_t sub_241C47224(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C2070C(0);
  uint64_t v47 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A29CE8(0, &qword_268D43550, (uint64_t (*)(uint64_t))sub_241C2070C, MEMORY[0x263EFDDF8]);
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = &v38[-v9];
  uint64_t v10 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_241CD7740();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v38[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_241CDA1A0();
  uint64_t v41 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  MEMORY[0x270FA5388](v17);
  id v19 = &v38[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  sub_241C61648(a3, (uint64_t)v12, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
  id v20 = a1;
  id v21 = a1;
  os_log_type_t v22 = sub_241CDA190();
  os_log_type_t v23 = sub_241CDB650();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    int v39 = v24;
    uint64_t v26 = v25;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v49 = v40;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v27 = sub_241C38E70((uint64_t)v16, v12[*(int *)(v10 + 36)], 0xD00000000000003ALL);
    uint64_t v48 = sub_241A33FE4(v27, v28, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    sub_241C73BBC((uint64_t)v12, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v26 + 12) = 2080;
    uint64_t v48 = (uint64_t)a1;
    id v29 = a1;
    sub_241A3DA64();
    uint64_t v30 = sub_241CDB120();
    uint64_t v48 = sub_241A33FE4(v30, v31, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v22, (os_log_type_t)v39, "%s: error when querying: %s", (uint8_t *)v26, 0x16u);
    uint64_t v32 = v40;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v32, -1, -1);
    MEMORY[0x245637F20](v26, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    sub_241C73BBC((uint64_t)v12, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v19, v42);
  uint64_t v33 = sub_241CDB5B0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v44, 1, 1, v33);
  uint64_t v34 = v43;
  sub_241CDA5D0();
  sub_241C7152C(&qword_268D43558, &qword_268D43550, (uint64_t (*)(uint64_t))sub_241C2070C);
  uint64_t v35 = v46;
  uint64_t v36 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v34, v35);
  return v36;
}

uint64_t sub_241C477C0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C2070C(0);
  uint64_t v47 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A29CE8(0, &qword_268D43550, (uint64_t (*)(uint64_t))sub_241C2070C, MEMORY[0x263EFDDF8]);
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = &v38[-v9];
  uint64_t v10 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_241CD7740();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v38[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_241CDA1A0();
  uint64_t v41 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  MEMORY[0x270FA5388](v17);
  id v19 = &v38[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  sub_241C61648(a3, (uint64_t)v12, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
  id v20 = a1;
  id v21 = a1;
  os_log_type_t v22 = sub_241CDA190();
  os_log_type_t v23 = sub_241CDB650();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    int v39 = v24;
    uint64_t v26 = v25;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v49 = v40;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v27 = sub_241C38E70((uint64_t)v16, v12[*(int *)(v10 + 36)], 0xD000000000000036);
    uint64_t v48 = sub_241A33FE4(v27, v28, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    sub_241C73BBC((uint64_t)v12, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v26 + 12) = 2080;
    uint64_t v48 = (uint64_t)a1;
    id v29 = a1;
    sub_241A3DA64();
    uint64_t v30 = sub_241CDB120();
    uint64_t v48 = sub_241A33FE4(v30, v31, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v22, (os_log_type_t)v39, "%s: error when querying: %s", (uint8_t *)v26, 0x16u);
    uint64_t v32 = v40;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v32, -1, -1);
    MEMORY[0x245637F20](v26, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    sub_241C73BBC((uint64_t)v12, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v19, v42);
  uint64_t v33 = sub_241CDB5B0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v44, 1, 1, v33);
  uint64_t v34 = v43;
  sub_241CDA5D0();
  sub_241C7152C(&qword_268D43558, &qword_268D43550, (uint64_t (*)(uint64_t))sub_241C2070C);
  uint64_t v35 = v46;
  uint64_t v36 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v34, v35);
  return v36;
}

uint64_t sub_241C47D5C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241AEBEC8(0);
  uint64_t v47 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A29CE8(0, &qword_268D43690, (uint64_t (*)(uint64_t))sub_241AEBEC8, MEMORY[0x263EFDDF8]);
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = &v38[-v9];
  uint64_t v10 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_241CD7740();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v38[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_241CDA1A0();
  uint64_t v41 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  MEMORY[0x270FA5388](v17);
  id v19 = &v38[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  sub_241C61648(a3, (uint64_t)v12, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
  id v20 = a1;
  id v21 = a1;
  os_log_type_t v22 = sub_241CDA190();
  os_log_type_t v23 = sub_241CDB650();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    int v39 = v24;
    uint64_t v26 = v25;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v49 = v40;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v27 = sub_241C38E70((uint64_t)v16, v12[*(int *)(v10 + 36)], 0xD000000000000034);
    uint64_t v48 = sub_241A33FE4(v27, v28, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    sub_241C73BBC((uint64_t)v12, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v26 + 12) = 2080;
    uint64_t v48 = (uint64_t)a1;
    id v29 = a1;
    sub_241A3DA64();
    uint64_t v30 = sub_241CDB120();
    uint64_t v48 = sub_241A33FE4(v30, v31, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v22, (os_log_type_t)v39, "%s: error when querying: %s", (uint8_t *)v26, 0x16u);
    uint64_t v32 = v40;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v32, -1, -1);
    MEMORY[0x245637F20](v26, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    sub_241C73BBC((uint64_t)v12, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v19, v42);
  uint64_t v33 = sub_241CD70F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v44, 1, 1, v33);
  uint64_t v34 = v43;
  sub_241CDA5D0();
  sub_241C7152C(&qword_268D43698, &qword_268D43690, (uint64_t (*)(uint64_t))sub_241AEBEC8);
  uint64_t v35 = v46;
  uint64_t v36 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v34, v35);
  return v36;
}

uint64_t sub_241C482F8(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C62F08(0, &qword_268D436E8, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput);
  uint64_t v7 = v6;
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = &v36[-v8];
  uint64_t v9 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_241CD7740();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_241CDA1A0();
  uint64_t v40 = *(void *)(v16 - 8);
  uint64_t v41 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  sub_241C61648(a3, (uint64_t)v11, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
  id v19 = a1;
  id v20 = a1;
  id v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB650();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v39 = v7;
    uint64_t v25 = v24;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v45 = v38;
    *(_DWORD *)uint64_t v25 = 136315394;
    int v37 = v23;
    uint64_t v26 = sub_241C38E70((uint64_t)v15, v11[*(int *)(v9 + 20)], 0xD00000000000003FLL);
    uint64_t v44 = sub_241A33FE4(v26, v27, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v44 = (uint64_t)a1;
    id v28 = a1;
    sub_241A3DA64();
    uint64_t v29 = sub_241CDB120();
    uint64_t v44 = sub_241A33FE4(v29, v30, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v21, (os_log_type_t)v37, "%s: error when querying: %s", (uint8_t *)v25, 0x16u);
    uint64_t v31 = v38;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v31, -1, -1);
    uint64_t v32 = v25;
    uint64_t v7 = v39;
    MEMORY[0x245637F20](v32, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v18, v41);
  uint64_t v45 = 0;
  char v46 = 0;
  sub_241A31144(0, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput, (uint64_t (*)(void, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  uint64_t v33 = v42;
  sub_241CDA5D0();
  sub_241C6D9F4();
  uint64_t v34 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v33, v7);
  return v34;
}

uint64_t sub_241C48800(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C6E1C8(0);
  uint64_t v47 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A29CE8(0, &qword_268D43728, (uint64_t (*)(uint64_t))sub_241C6E1C8, MEMORY[0x263EFDDF8]);
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = &v38[-v9];
  uint64_t v10 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_241CD7740();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v38[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_241CDA1A0();
  uint64_t v41 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  MEMORY[0x270FA5388](v17);
  id v19 = &v38[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  sub_241C61648(a3, (uint64_t)v12, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
  id v20 = a1;
  id v21 = a1;
  os_log_type_t v22 = sub_241CDA190();
  os_log_type_t v23 = sub_241CDB650();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    int v39 = v24;
    uint64_t v26 = v25;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v49 = v40;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v27 = sub_241C38E70((uint64_t)v16, v12[*(int *)(v10 + 24)], 0xD00000000000003CLL);
    uint64_t v48 = sub_241A33FE4(v27, v28, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    sub_241C73BBC((uint64_t)v12, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v26 + 12) = 2080;
    uint64_t v48 = (uint64_t)a1;
    id v29 = a1;
    sub_241A3DA64();
    uint64_t v30 = sub_241CDB120();
    uint64_t v48 = sub_241A33FE4(v30, v31, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v22, (os_log_type_t)v39, "%s: error when querying: %s", (uint8_t *)v26, 0x16u);
    uint64_t v32 = v40;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v32, -1, -1);
    MEMORY[0x245637F20](v26, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    sub_241C73BBC((uint64_t)v12, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v19, v42);
  uint64_t Output = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(Output - 8) + 56))(v44, 1, 1, Output);
  uint64_t v34 = v43;
  sub_241CDA5D0();
  sub_241C7152C(&qword_268D43730, &qword_268D43728, (uint64_t (*)(uint64_t))sub_241C6E1C8);
  uint64_t v35 = v46;
  uint64_t v36 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v34, v35);
  return v36;
}

uint64_t sub_241C48D9C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C6F2F8();
  uint64_t v7 = v6;
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_241CD7740();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_241CDA1A0();
  uint64_t v40 = *(void *)(v16 - 8);
  uint64_t v41 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  sub_241C61648(a3, (uint64_t)v11, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
  id v19 = a1;
  id v20 = a1;
  id v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB650();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v39 = v7;
    uint64_t v25 = v24;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v45 = v38;
    *(_DWORD *)uint64_t v25 = 136315394;
    int v37 = v23;
    uint64_t v26 = sub_241C38E70((uint64_t)v15, v11[*(int *)(v9 + 40)], 0xD00000000000003BLL);
    uint64_t v44 = sub_241A33FE4(v26, v27, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v44 = (uint64_t)a1;
    id v28 = a1;
    sub_241A3DA64();
    uint64_t v29 = sub_241CDB120();
    uint64_t v44 = sub_241A33FE4(v29, v30, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v21, (os_log_type_t)v37, "%s: error when querying: %s", (uint8_t *)v25, 0x16u);
    uint64_t v31 = v38;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v31, -1, -1);
    uint64_t v32 = v25;
    uint64_t v7 = v39;
    MEMORY[0x245637F20](v32, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v18, v41);
  uint64_t v45 = 0;
  sub_241C6EB08(0, (unint64_t *)&qword_26B032CB8, (unint64_t *)&unk_26B034CB0, MEMORY[0x263F8D488], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  uint64_t v33 = v42;
  sub_241CDA5D0();
  sub_241C61600(&qword_268D43780, (void (*)(uint64_t))sub_241C6F2F8);
  uint64_t v34 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v33, v7);
  return v34;
}

uint64_t sub_241C492D0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C704D8(0, &qword_268D437C8, &qword_26B032CD0, &qword_26B034E38, 0x263F46588);
  uint64_t v7 = v6;
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = &v36[-v8];
  uint64_t v9 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_241CD7740();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_241CDA1A0();
  uint64_t v40 = *(void *)(v16 - 8);
  uint64_t v41 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  sub_241C61648(a3, (uint64_t)v11, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
  id v19 = a1;
  id v20 = a1;
  id v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB650();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v39 = v7;
    uint64_t v25 = v24;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v45 = v38;
    *(_DWORD *)uint64_t v25 = 136315394;
    int v37 = v23;
    uint64_t v26 = sub_241C38E70((uint64_t)v15, v11[*(int *)(v9 + 20)], 0xD000000000000037);
    uint64_t v44 = sub_241A33FE4(v26, v27, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v44 = (uint64_t)a1;
    id v28 = a1;
    sub_241A3DA64();
    uint64_t v29 = sub_241CDB120();
    uint64_t v44 = sub_241A33FE4(v29, v30, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v21, (os_log_type_t)v37, "%s: error when querying: %s", (uint8_t *)v25, 0x16u);
    uint64_t v31 = v38;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v31, -1, -1);
    uint64_t v32 = v25;
    uint64_t v7 = v39;
    MEMORY[0x245637F20](v32, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v18, v41);
  uint64_t v45 = 0;
  sub_241C62EA0(0, &qword_26B032CD0, &qword_26B034E38, 0x263F46588, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  uint64_t v33 = v42;
  sub_241CDA5D0();
  sub_241C70548();
  uint64_t v34 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v33, v7);
  return v34;
}

uint64_t sub_241C497E4(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241A29CE8(0, &qword_268D43818, (uint64_t (*)(uint64_t))sub_241C70A1C, MEMORY[0x263EFDDF8]);
  uint64_t v7 = v6;
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = &v36[-v8];
  uint64_t v9 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_241CD7740();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_241CDA1A0();
  uint64_t v40 = *(void *)(v16 - 8);
  uint64_t v41 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  sub_241C61648(a3, (uint64_t)v11, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
  id v19 = a1;
  id v20 = a1;
  id v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB650();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v39 = v7;
    uint64_t v25 = v24;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v45 = v38;
    *(_DWORD *)uint64_t v25 = 136315394;
    int v37 = v23;
    uint64_t v26 = sub_241C38E70((uint64_t)v15, v11[*(int *)(v9 + 36)], 0xD000000000000038);
    uint64_t v44 = sub_241A33FE4(v26, v27, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v44 = (uint64_t)a1;
    id v28 = a1;
    sub_241A3DA64();
    uint64_t v29 = sub_241CDB120();
    uint64_t v44 = sub_241A33FE4(v29, v30, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v21, (os_log_type_t)v37, "%s: error when querying: %s", (uint8_t *)v25, 0x16u);
    uint64_t v31 = v38;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v31, -1, -1);
    uint64_t v32 = v25;
    uint64_t v7 = v39;
    MEMORY[0x245637F20](v32, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v18, v41);
  uint64_t v45 = 0;
  sub_241C70A1C(0);
  uint64_t v33 = v42;
  sub_241CDA5D0();
  sub_241C7152C(&qword_268D43820, &qword_268D43818, (uint64_t (*)(uint64_t))sub_241C70A1C);
  uint64_t v34 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v33, v7);
  return v34;
}

uint64_t sub_241C49D00(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C6EB08(0, &qword_268D435E0, (unint64_t *)&qword_26B032CE0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput, MEMORY[0x263EFDDF8]);
  uint64_t v7 = v6;
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = &v36[-v8];
  uint64_t v9 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_241CD7740();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_241CDA1A0();
  uint64_t v40 = *(void *)(v16 - 8);
  uint64_t v41 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  sub_241C61648(a3, (uint64_t)v11, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
  id v19 = a1;
  id v20 = a1;
  id v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB650();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v39 = v7;
    uint64_t v25 = v24;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v45 = v38;
    *(_DWORD *)uint64_t v25 = 136315394;
    int v37 = v23;
    uint64_t v26 = sub_241C38E70((uint64_t)v15, v11[*(int *)(v9 + 40)], 0xD00000000000003DLL);
    uint64_t v44 = sub_241A33FE4(v26, v27, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v44 = (uint64_t)a1;
    id v28 = a1;
    sub_241A3DA64();
    uint64_t v29 = sub_241CDB120();
    uint64_t v44 = sub_241A33FE4(v29, v30, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v21, (os_log_type_t)v37, "%s: error when querying: %s", (uint8_t *)v25, 0x16u);
    uint64_t v31 = v38;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v31, -1, -1);
    uint64_t v32 = v25;
    uint64_t v7 = v39;
    MEMORY[0x245637F20](v32, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v18, v41);
  uint64_t v45 = 0;
  sub_241C62EA0(0, (unint64_t *)&qword_26B032CE0, &qword_26B0304D8, 0x263F0A6B8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  uint64_t v33 = v42;
  sub_241CDA5D0();
  sub_241C66AC0();
  uint64_t v34 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v33, v7);
  return v34;
}

uint64_t sub_241C4A22C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C6EB08(0, &qword_268D435E0, (unint64_t *)&qword_26B032CE0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput, MEMORY[0x263EFDDF8]);
  uint64_t v7 = v6;
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = &v36[-v8];
  uint64_t v9 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_241CD7740();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_241CDA1A0();
  uint64_t v40 = *(void *)(v16 - 8);
  uint64_t v41 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  sub_241C61648(a3, (uint64_t)v11, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
  id v19 = a1;
  id v20 = a1;
  id v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB650();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v39 = v7;
    uint64_t v25 = v24;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v45 = v38;
    *(_DWORD *)uint64_t v25 = 136315394;
    int v37 = v23;
    uint64_t v26 = sub_241C38E70((uint64_t)v15, v11[*(int *)(v9 + 36)], 0xD00000000000003ALL);
    uint64_t v44 = sub_241A33FE4(v26, v27, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v44 = (uint64_t)a1;
    id v28 = a1;
    sub_241A3DA64();
    uint64_t v29 = sub_241CDB120();
    uint64_t v44 = sub_241A33FE4(v29, v30, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v21, (os_log_type_t)v37, "%s: error when querying: %s", (uint8_t *)v25, 0x16u);
    uint64_t v31 = v38;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v31, -1, -1);
    uint64_t v32 = v25;
    uint64_t v7 = v39;
    MEMORY[0x245637F20](v32, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v18, v41);
  uint64_t v45 = 0;
  sub_241C62EA0(0, (unint64_t *)&qword_26B032CE0, &qword_26B0304D8, 0x263F0A6B8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  uint64_t v33 = v42;
  sub_241CDA5D0();
  sub_241C66AC0();
  uint64_t v34 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v33, v7);
  return v34;
}

uint64_t sub_241C4A758(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C704D8(0, &qword_268D43868, &qword_26B032CC8, (unint64_t *)&qword_26B02E800, 0x263F0A768);
  uint64_t v7 = v6;
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = &v36[-v8];
  uint64_t v9 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_241CD7740();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_241CDA1A0();
  uint64_t v40 = *(void *)(v16 - 8);
  uint64_t v41 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  sub_241C61648(a3, (uint64_t)v11, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
  id v19 = a1;
  id v20 = a1;
  id v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB650();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v39 = v7;
    uint64_t v25 = v24;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v45 = v38;
    *(_DWORD *)uint64_t v25 = 136315394;
    int v37 = v23;
    uint64_t v26 = sub_241C38E70((uint64_t)v15, v11[*(int *)(v9 + 40)], 0xD000000000000033);
    uint64_t v44 = sub_241A33FE4(v26, v27, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v44 = (uint64_t)a1;
    id v28 = a1;
    sub_241A3DA64();
    uint64_t v29 = sub_241CDB120();
    uint64_t v44 = sub_241A33FE4(v29, v30, &v45);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v21, (os_log_type_t)v37, "%s: error when querying: %s", (uint8_t *)v25, 0x16u);
    uint64_t v31 = v38;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v31, -1, -1);
    uint64_t v32 = v25;
    uint64_t v7 = v39;
    MEMORY[0x245637F20](v32, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    sub_241C73BBC((uint64_t)v11, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v18, v41);
  uint64_t v45 = 0;
  sub_241C62EA0(0, &qword_26B032CC8, (unint64_t *)&qword_26B02E800, 0x263F0A768, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  uint64_t v33 = v42;
  sub_241CDA5D0();
  sub_241C72E80();
  uint64_t v34 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v33, v7);
  return v34;
}

uint64_t sub_241C4AC6C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C2070C(0);
  uint64_t v47 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A29CE8(0, &qword_268D43550, (uint64_t (*)(uint64_t))sub_241C2070C, MEMORY[0x263EFDDF8]);
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = &v38[-v9];
  uint64_t v10 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_241CD7740();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v38[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_241CDA1A0();
  uint64_t v41 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  MEMORY[0x270FA5388](v17);
  id v19 = &v38[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  sub_241C61648(a3, (uint64_t)v12, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
  id v20 = a1;
  id v21 = a1;
  os_log_type_t v22 = sub_241CDA190();
  os_log_type_t v23 = sub_241CDB650();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    int v39 = v24;
    uint64_t v26 = v25;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v49 = v40;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v27 = sub_241C38E70((uint64_t)v16, v12[*(int *)(v10 + 24)], 0xD00000000000003CLL);
    uint64_t v48 = sub_241A33FE4(v27, v28, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    sub_241C73BBC((uint64_t)v12, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
    *(_WORD *)(v26 + 12) = 2080;
    uint64_t v48 = (uint64_t)a1;
    id v29 = a1;
    sub_241A3DA64();
    uint64_t v30 = sub_241CDB120();
    uint64_t v48 = sub_241A33FE4(v30, v31, &v49);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v22, (os_log_type_t)v39, "%s: error when querying: %s", (uint8_t *)v26, 0x16u);
    uint64_t v32 = v40;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v32, -1, -1);
    MEMORY[0x245637F20](v26, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    sub_241C73BBC((uint64_t)v12, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
  }
  (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v19, v42);
  uint64_t v33 = sub_241CDB5B0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v44, 1, 1, v33);
  uint64_t v34 = v43;
  sub_241CDA5D0();
  sub_241C7152C(&qword_268D43558, &qword_268D43550, (uint64_t (*)(uint64_t))sub_241C2070C);
  uint64_t v35 = v46;
  uint64_t v36 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v34, v35);
  return v36;
}

uint64_t sub_241C4B208@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v63 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t Output = type metadata accessor for SummaryModelQueryOutput();
  MEMORY[0x270FA5388](Output);
  uint64_t v58 = (char *)&v47 - v12;
  uint64_t v60 = v13;
  uint64_t v61 = sub_241CDA5C0();
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v57 = (char *)&v47 - v14;
  uint64_t v51 = *(void *)(*(void *)(a5 + 8) + 8);
  uint64_t v52 = a4;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = sub_241CD7740();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  os_log_type_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v55 = *(void *)(v23 - 8);
  uint64_t v56 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *a1;
  sub_241CDA0F0();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v53 = v19;
  v27(v22, a2, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a3, v15);
  id v28 = v26;
  id v29 = v26;
  uint64_t v54 = v25;
  uint64_t v30 = sub_241CDA190();
  os_log_type_t v31 = sub_241CDB650();
  int v32 = v31;
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v33 = swift_slowAlloc();
    int v49 = v32;
    uint64_t v34 = v33;
    uint64_t v50 = swift_slowAlloc();
    v65[0] = v50;
    *(_DWORD *)uint64_t v34 = 136315394;
    uint64_t v47 = v34 + 4;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
    os_log_t v48 = v30;
    v36(v15, AssociatedConformanceWitness);
    uint64_t v37 = static SummaryModelGenerating.logPrefix(_:_:)();
    uint64_t v64 = sub_241A33FE4(v37, v38, v65);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v53);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v64 = (uint64_t)v26;
    id v39 = v26;
    sub_241A3DA64();
    uint64_t v40 = sub_241CDB120();
    uint64_t v64 = sub_241A33FE4(v40, v41, v65);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    uint64_t v30 = v48;
    _os_log_impl(&dword_241A23000, v48, (os_log_type_t)v49, "%s: error when querying: %s", (uint8_t *)v34, 0x16u);
    uint64_t v42 = v50;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v42, -1, -1);
    MEMORY[0x245637F20](v34, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v53);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v56);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v58, 1, 1);
  uint64_t v43 = v57;
  sub_241CDA5D0();
  uint64_t v44 = v61;
  swift_getWitnessTable();
  uint64_t v45 = sub_241CDA6D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v43, v44);
  *uint64_t v63 = v45;
  return result;
}

uint64_t sub_241C4B828(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a4;
  uint64_t v34 = a3;
  uint64_t v36 = a2;
  uint64_t v37 = sub_241CD7740();
  uint64_t v5 = *(void *)(v37 - 8);
  uint64_t v38 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v37);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v32 = v7;
  uint64_t v8 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v35 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  uint64_t v42 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v40 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v33 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v33 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v32 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, v34, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
  sub_241C616B4((uint64_t)a1, (uint64_t)v43, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper);
  sub_241C61648(v36, (uint64_t)v10, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  os_log_type_t v22 = v7;
  uint64_t v23 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v22, v39, v37);
  unint64_t v24 = (*(unsigned __int8 *)(v35 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v25 = (v9 + *(unsigned __int8 *)(v33 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v26 = (v15 + *(unsigned __int8 *)(v5 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v27 = swift_allocObject();
  sub_241C616B4((uint64_t)v43, v27 + 16, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper);
  sub_241C61734((uint64_t)v10, v27 + v24, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v17, v27 + v25, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v27 + v26, v32, v23);
  sub_241C62300(a1);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  id v28 = v40;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v29 = v41;
  uint64_t v30 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v29);
  sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  return v30;
}

uint64_t sub_241C4BD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a4;
  uint64_t v40 = a3;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v44 = sub_241CD7740();
  uint64_t v4 = *(void *)(v44 - 8);
  uint64_t v46 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v44);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v6;
  uint64_t v7 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6825C(0);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v39 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  uint64_t v49 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v37 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v34 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, v40, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
  sub_241C61648(v41, (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_241C6825C);
  uint64_t v22 = v38;
  sub_241C61648(v42, v38, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  uint64_t v23 = v6;
  uint64_t v24 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v23, v45, v44);
  unint64_t v25 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v26 = (v10 + *(unsigned __int8 *)(v43 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v27 = (v8 + *(unsigned __int8 *)(v37 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v28 = (v15 + *(unsigned __int8 *)(v4 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v29 = swift_allocObject();
  sub_241C61734(v35, v29 + v25, (uint64_t (*)(void))sub_241C6825C);
  sub_241C61734(v22, v29 + v26, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v17, v29 + v27, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v29 + v28, v36, v24);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  uint64_t v30 = v47;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v31 = v48;
  uint64_t v32 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v31);
  sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  return v32;
}

uint64_t sub_241C4C304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a4;
  uint64_t v40 = a3;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v44 = sub_241CD7740();
  uint64_t v4 = *(void *)(v44 - 8);
  uint64_t v46 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v44);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v6;
  uint64_t v7 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C2070C(0);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v39 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  uint64_t v49 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v37 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v34 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, v40, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
  sub_241C61648(v41, (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_241C2070C);
  uint64_t v22 = v38;
  sub_241C61648(v42, v38, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  uint64_t v23 = v6;
  uint64_t v24 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v23, v45, v44);
  unint64_t v25 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v26 = (v10 + *(unsigned __int8 *)(v43 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v27 = (v8 + *(unsigned __int8 *)(v37 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v28 = (v15 + *(unsigned __int8 *)(v4 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v29 = swift_allocObject();
  sub_241C61734(v35, v29 + v25, (uint64_t (*)(void))sub_241C2070C);
  sub_241C61734(v22, v29 + v26, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v17, v29 + v27, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v29 + v28, v36, v24);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  uint64_t v30 = v47;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v31 = v48;
  uint64_t v32 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v31);
  sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  return v32;
}

uint64_t sub_241C4C8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a4;
  uint64_t v40 = a3;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v44 = sub_241CD7740();
  uint64_t v4 = *(void *)(v44 - 8);
  uint64_t v46 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v44);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v6;
  uint64_t v7 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C2070C(0);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v39 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  uint64_t v49 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v37 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v34 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, v40, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
  sub_241C61648(v41, (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_241C2070C);
  uint64_t v22 = v38;
  sub_241C61648(v42, v38, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  uint64_t v23 = v6;
  uint64_t v24 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v23, v45, v44);
  unint64_t v25 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v26 = (v10 + *(unsigned __int8 *)(v43 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v27 = (v8 + *(unsigned __int8 *)(v37 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v28 = (v15 + *(unsigned __int8 *)(v4 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v29 = swift_allocObject();
  sub_241C61734(v35, v29 + v25, (uint64_t (*)(void))sub_241C2070C);
  sub_241C61734(v22, v29 + v26, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v17, v29 + v27, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v29 + v28, v36, v24);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  uint64_t v30 = v47;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v31 = v48;
  uint64_t v32 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v31);
  sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  return v32;
}

uint64_t sub_241C4CE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a4;
  uint64_t v40 = a3;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v44 = sub_241CD7740();
  uint64_t v4 = *(void *)(v44 - 8);
  uint64_t v46 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v44);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v6;
  uint64_t v7 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AEBEC8(0);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v39 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  uint64_t v49 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v37 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v34 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, v40, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
  sub_241C61648(v41, (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_241AEBEC8);
  uint64_t v22 = v38;
  sub_241C61648(v42, v38, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  uint64_t v23 = v6;
  uint64_t v24 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v23, v45, v44);
  unint64_t v25 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v26 = (v10 + *(unsigned __int8 *)(v43 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v27 = (v8 + *(unsigned __int8 *)(v37 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v28 = (v15 + *(unsigned __int8 *)(v4 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v29 = swift_allocObject();
  sub_241C61734(v35, v29 + v25, (uint64_t (*)(void))sub_241AEBEC8);
  sub_241C61734(v22, v29 + v26, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v17, v29 + v27, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v29 + v28, v36, v24);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  uint64_t v30 = v47;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v31 = v48;
  uint64_t v32 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v31);
  sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  return v32;
}

uint64_t sub_241C4D420(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v38 = a5;
  uint64_t v33 = a4;
  uint64_t v36 = a3;
  int v35 = a2;
  id v42 = a1;
  uint64_t v37 = sub_241CD7740();
  uint64_t v5 = *(void *)(v37 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v37);
  uint64_t v31 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v34 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v40 = v10;
  uint64_t v41 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v39 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v32 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v32 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_241CD6810();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, v33, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  id v43 = v42;
  char v44 = v35;
  sub_241C61648(v36, (uint64_t)v9, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v18, (uint64_t)v16, (uint64_t (*)(void))sub_241A68508);
  uint64_t v21 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v38, v37);
  unint64_t v22 = (*(unsigned __int8 *)(v34 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v23 = (v8 + *(unsigned __int8 *)(v32 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v24 = (v14 + *(unsigned __int8 *)(v5 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v25 = swift_allocObject();
  sub_241C616B4((uint64_t)&v43, v25 + 16, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput);
  sub_241C61734((uint64_t)v9, v25 + v22, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v16, v25 + v23, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v25 + v24, v31, v21);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  id v26 = v42;
  unint64_t v27 = v39;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v28 = v40;
  uint64_t v29 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v28);
  sub_241C73BBC((uint64_t)v18, (uint64_t (*)(void))sub_241A68508);
  return v29;
}

uint64_t sub_241C4D938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a4;
  uint64_t v40 = a3;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v44 = sub_241CD7740();
  uint64_t v4 = *(void *)(v44 - 8);
  uint64_t v46 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v44);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v6;
  uint64_t v7 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6E1C8(0);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v39 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  uint64_t v49 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v37 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v34 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, v40, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
  sub_241C61648(v41, (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_241C6E1C8);
  uint64_t v22 = v38;
  sub_241C61648(v42, v38, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  unint64_t v23 = v6;
  uint64_t v24 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v23, v45, v44);
  unint64_t v25 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v26 = (v10 + *(unsigned __int8 *)(v43 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v27 = (v8 + *(unsigned __int8 *)(v37 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v28 = (v15 + *(unsigned __int8 *)(v4 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v29 = swift_allocObject();
  sub_241C61734(v35, v29 + v25, (uint64_t (*)(void))sub_241C6E1C8);
  sub_241C61734(v22, v29 + v26, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v17, v29 + v27, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v29 + v28, v36, v24);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  uint64_t v30 = v47;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v31 = v48;
  uint64_t v32 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v31);
  sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  return v32;
}

uint64_t sub_241C4DEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a4;
  uint64_t v35 = a3;
  uint64_t v43 = a1;
  uint64_t v37 = sub_241CD7740();
  uint64_t v5 = *(void *)(v37 - 8);
  uint64_t v38 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v37);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v36 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  uint64_t v42 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v34 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v34 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v33 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, v35, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
  uint64_t v44 = v43;
  sub_241C61648(a2, (uint64_t)v10, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  uint64_t v22 = v7;
  unint64_t v23 = v7;
  uint64_t v24 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v22, v39, v37);
  unint64_t v25 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  unint64_t v26 = (v9 + *(unsigned __int8 *)(v34 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v27 = (v15 + *(unsigned __int8 *)(v5 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v28 = swift_allocObject();
  sub_241C6ED20((uint64_t)&v44, v28 + 16);
  sub_241C61734((uint64_t)v10, v28 + v25, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v17, v28 + v26, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v28 + v27, v23, v24);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  swift_bridgeObjectRetain();
  uint64_t v29 = v40;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v30 = v41;
  uint64_t v31 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v30);
  sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  return v31;
}

uint64_t sub_241C4E3F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v32 = a3;
  uint64_t v34 = a2;
  id v40 = a1;
  uint64_t v35 = sub_241CD7740();
  uint64_t v4 = *(void *)(v35 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v35);
  uint64_t v30 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v33 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  uint64_t v39 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v31 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = sub_241CD6810();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, v32, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  id v41 = v40;
  sub_241C61648(v34, (uint64_t)v8, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))sub_241A68508);
  uint64_t v20 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v35);
  unint64_t v21 = (*(unsigned __int8 *)(v33 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v22 = (v7 + *(unsigned __int8 *)(v31 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v23 = (v13 + *(unsigned __int8 *)(v4 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v24 = swift_allocObject();
  sub_241C727C8((uint64_t)&v41, v24 + 16, &qword_26B032CD0, &qword_26B034E38, 0x263F46588);
  sub_241C61734((uint64_t)v8, v24 + v21, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v15, v24 + v22, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v24 + v23, v30, v20);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  id v25 = v40;
  unint64_t v26 = v37;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v27 = v38;
  uint64_t v28 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v27);
  sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  return v28;
}

uint64_t sub_241C4E908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a4;
  uint64_t v31 = a3;
  uint64_t v33 = a2;
  uint64_t v39 = a1;
  uint64_t v34 = sub_241CD7740();
  uint64_t v4 = *(void *)(v34 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v34);
  uint64_t v29 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v32 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  uint64_t v38 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v36 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v30 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v29 - v16;
  uint64_t v18 = sub_241CD6810();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, v31, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  uint64_t v40 = v39;
  sub_241C61648(v33, (uint64_t)v8, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))sub_241A68508);
  uint64_t v20 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v34);
  unint64_t v21 = (*(unsigned __int8 *)(v32 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v22 = (v7 + *(unsigned __int8 *)(v30 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v23 = (v13 + *(unsigned __int8 *)(v4 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v24 = swift_allocObject();
  sub_241C61734((uint64_t)&v40, v24 + 16, (uint64_t (*)(void))sub_241C70A1C);
  sub_241C61734((uint64_t)v8, v24 + v21, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v15, v24 + v22, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v24 + v23, v29, v20);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  swift_bridgeObjectRetain();
  id v25 = v36;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v26 = v37;
  uint64_t v27 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v26);
  sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  return v27;
}

uint64_t sub_241C4EE18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v32 = a3;
  uint64_t v34 = a2;
  id v40 = a1;
  uint64_t v35 = sub_241CD7740();
  uint64_t v4 = *(void *)(v35 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v35);
  uint64_t v30 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v33 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  uint64_t v39 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v31 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = sub_241CD6810();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, v32, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  id v41 = v40;
  sub_241C61648(v34, (uint64_t)v8, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))sub_241A68508);
  uint64_t v20 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v35);
  unint64_t v21 = (*(unsigned __int8 *)(v33 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v22 = (v7 + *(unsigned __int8 *)(v31 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v23 = (v13 + *(unsigned __int8 *)(v4 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v24 = swift_allocObject();
  sub_241C727C8((uint64_t)&v41, v24 + 16, (unint64_t *)&qword_26B032CE0, &qword_26B0304D8, 0x263F0A6B8);
  sub_241C61734((uint64_t)v8, v24 + v21, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v15, v24 + v22, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v24 + v23, v30, v20);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  id v25 = v40;
  uint64_t v26 = v37;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v27 = v38;
  uint64_t v28 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v27);
  sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  return v28;
}

uint64_t sub_241C4F32C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v32 = a3;
  uint64_t v34 = a2;
  id v40 = a1;
  uint64_t v35 = sub_241CD7740();
  uint64_t v4 = *(void *)(v35 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v35);
  uint64_t v30 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v33 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  uint64_t v39 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v31 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = sub_241CD6810();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, v32, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  id v41 = v40;
  sub_241C61648(v34, (uint64_t)v8, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
  sub_241C61648((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))sub_241A68508);
  uint64_t v20 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v35);
  unint64_t v21 = (*(unsigned __int8 *)(v33 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v22 = (v7 + *(unsigned __int8 *)(v31 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v23 = (v13 + *(unsigned __int8 *)(v4 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v24 = swift_allocObject();
  sub_241C727C8((uint64_t)&v41, v24 + 16, (unint64_t *)&qword_26B032CE0, &qword_26B0304D8, 0x263F0A6B8);
  sub_241C61734((uint64_t)v8, v24 + v21, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
  sub_241C61734((uint64_t)v15, v24 + v22, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v24 + v23, v30, v20);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  id v25 = v40;
  uint64_t v26 = v37;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v27 = v38;
  uint64_t v28 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v27);
  sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  return v28;
}

uint64_t sub_241C4F840(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v32 = a3;
  uint64_t v34 = a2;
  id v40 = a1;
  uint64_t v35 = sub_241CD7740();
  uint64_t v4 = *(void *)(v35 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v35);
  uint64_t v30 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v33 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  uint64_t v39 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v31 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = sub_241CD6810();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, v32, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  id v41 = v40;
  sub_241C61648(v34, (uint64_t)v8, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))sub_241A68508);
  uint64_t v20 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v35);
  unint64_t v21 = (*(unsigned __int8 *)(v33 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v22 = (v7 + *(unsigned __int8 *)(v31 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v23 = (v13 + *(unsigned __int8 *)(v4 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v24 = swift_allocObject();
  sub_241C727C8((uint64_t)&v41, v24 + 16, &qword_26B032CC8, (unint64_t *)&qword_26B02E800, 0x263F0A768);
  sub_241C61734((uint64_t)v8, v24 + v21, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v15, v24 + v22, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v24 + v23, v30, v20);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  id v25 = v40;
  uint64_t v26 = v37;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v27 = v38;
  uint64_t v28 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v27);
  sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  return v28;
}

uint64_t sub_241C4FD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a4;
  uint64_t v40 = a3;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v44 = sub_241CD7740();
  uint64_t v4 = *(void *)(v44 - 8);
  uint64_t v46 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v44);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v6;
  uint64_t v7 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C2070C(0);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v39 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  uint64_t v49 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v37 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v34 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, v40, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
  sub_241C61648(v41, (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_241C2070C);
  uint64_t v22 = v38;
  sub_241C61648(v42, v38, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61648((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  unint64_t v23 = v6;
  uint64_t v24 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v23, v45, v44);
  unint64_t v25 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v26 = (v10 + *(unsigned __int8 *)(v43 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v27 = (v8 + *(unsigned __int8 *)(v37 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v28 = (v15 + *(unsigned __int8 *)(v4 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v29 = swift_allocObject();
  sub_241C61734(v35, v29 + v25, (uint64_t (*)(void))sub_241C2070C);
  sub_241C61734(v22, v29 + v26, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
  sub_241C61734((uint64_t)v17, v29 + v27, (uint64_t (*)(void))sub_241A68508);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v29 + v28, v36, v24);
  sub_241A29CE8(0, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648, MEMORY[0x263EFDDF8]);
  sub_241C7152C(&qword_26B02EA98, &qword_26B032808, (uint64_t (*)(uint64_t))sub_241B6F648);
  uint64_t v30 = v47;
  sub_241CDA620();
  sub_241C61600(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v31 = v48;
  uint64_t v32 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v31);
  sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  return v32;
}

uint64_t sub_241C50308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  sub_241A68508(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_241CD6810();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a3, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  uint64_t v19 = sub_241C461D0(a2, (uint64_t)v16, a4, a1, a5, a6);
  uint64_t result = sub_241C73BBC((uint64_t)v16, (uint64_t (*)(void))sub_241A68508);
  *a7 = v19;
  return result;
}

void sub_241C50460(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v95 = a4;
  uint64_t v93 = a5;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v89 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v69 - v11;
  uint64_t v92 = sub_241CD7AF0();
  uint64_t v13 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v79 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v84 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v88 = (uint64_t)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v83 = (uint64_t)&v69 - v21;
  uint64_t v82 = sub_241CD7740();
  uint64_t v87 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v81 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v85 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v86 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator(0);
  id v80 = (id)a3;
  id v25 = sub_241A589B8(a1, a2);
  uint64_t v26 = (uint64_t)a2;
  unint64_t v27 = &a2[*(int *)(v18 + 20)];
  unint64_t v28 = (void *)sub_241CD7770();
  LODWORD(a2) = objc_msgSend(v28, sel_isAbleToWriteHealthSensitiveLogs);

  uint64_t v94 = v12;
  if (a2)
  {
    uint64_t v75 = v27;
    uint64_t v76 = v23;
    uint64_t v78 = v18;
    uint64_t v74 = v15;
    uint64_t v77 = v13;
    uint64_t v29 = v86;
    sub_241CDA0F0();
    uint64_t v30 = (uint64_t)v81;
    uint64_t v31 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v81, v95, v82);
    uint64_t v32 = v83;
    sub_241C61648(v26, v83, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648(v26, v88, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v33 = v84;
    sub_241C61648((uint64_t)v80, v84, (uint64_t (*)(void))sub_241A68508);
    id v80 = v25;
    id v34 = v25;
    uint64_t v35 = sub_241CDA190();
    int v36 = sub_241CDB630();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      int v70 = v36;
      os_log_t v71 = v35;
      uint64_t v73 = v26;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v69 = (void *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      v97[0] = v72;
      *(_DWORD *)uint64_t v37 = 136316162;
      uint64_t v38 = sub_241C38E70(v30, *(unsigned __int8 *)(v32 + *(int *)(v78 + 40)), 0xD00000000000003ALL);
      uint64_t v96 = sub_241A33FE4(v38, v39, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v30, v31);
      uint64_t v40 = v34;
      sub_241C73BBC(v32, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v37 + 12) = 2112;
      uint64_t v41 = v88;
      uint64_t v42 = sub_241CD7770();
      uint64_t v96 = v42;
      sub_241CDBBF0();
      uint64_t v43 = v69;
      *uint64_t v69 = v42;
      sub_241C73BBC(v41, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v37 + 22) = 2080;
      uint64_t v44 = sub_241CDBBB0();
      uint64_t v96 = sub_241A33FE4(v44, v45, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v33, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v37 + 32) = 2080;
      id v46 = objc_msgSend(v34, sel_kindRawValue);
      if (v46)
      {
        uint64_t v47 = v46;
        sub_241CDB0D0();

        char v48 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v48 = 22;
      }
      uint64_t v49 = v76;
      uint64_t v50 = v85;
      LOBYTE(v96) = v48;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v51 = sub_241CDBBB0();
      uint64_t v96 = sub_241A33FE4(v51, v52, v97);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 42) = 1024;
      unsigned int v53 = objc_msgSend(v40, sel_hasValueData);

      LODWORD(v96) = v53;
      sub_241CDBBF0();

      os_log_t v54 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v70, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v37, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v43, -1, -1);
      uint64_t v55 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v55, -1, -1);
      MEMORY[0x245637F20](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v86, v49);
      uint64_t v26 = v73;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v30, v31);
      sub_241C73BBC(v32, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v88, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v33, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v29, v76);
    }
    uint64_t v13 = v77;
    uint64_t v18 = v78;
    uint64_t v15 = v74;
    id v25 = v80;
  }
  sub_241CD7790();
  uint64_t v56 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v92);
  uint64_t v57 = v26;
  int v58 = *(unsigned __int8 *)(v26 + *(int *)(v18 + 40));
  sub_241CD7A80();
  id v59 = v25;
  id v60 = objc_msgSend(v59, sel_data);
  if (v60)
  {
    uint64_t v61 = v60;
    uint64_t v62 = sub_241CD6AE0();
    unint64_t v64 = v63;
  }
  else
  {
    uint64_t v62 = 0;
    unint64_t v64 = 0xF000000000000000;
  }
  uint64_t v66 = v90;
  uint64_t v65 = v91;
  uint64_t v67 = (uint64_t)v89;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v68 = sub_241A54BF8(v62, v64, 1, v56, v58, v67);

  sub_241A54FC8(v62, v64);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v94, v65);
  v97[0] = sub_241C2E5E8(v57, v95, v68);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C50E74(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v94 = a4;
  uint64_t v92 = a5;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v89 = *(void *)(v8 - 8);
  uint64_t v90 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v88 = &v69[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v69[-v11];
  uint64_t v91 = sub_241CD7AF0();
  uint64_t v13 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v15 = &v69[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A68508(0);
  uint64_t v79 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v87 = &v69[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v86 = &v69[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v19);
  uint64_t v83 = &v69[-v21];
  uint64_t v82 = sub_241CD7740();
  uint64_t v85 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v81 = &v69[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v84 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  id v25 = &v69[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator(0);
  id v80 = (void *)a3;
  id v26 = sub_241A69D28(a1, a2);
  unint64_t v27 = (void *)sub_241CD7770();
  LODWORD(a3) = objc_msgSend(v27, sel_isAbleToWriteHealthSensitiveLogs);

  uint64_t v93 = v12;
  if (a3)
  {
    uint64_t v74 = v23;
    uint64_t v78 = v18;
    uint64_t v75 = v15;
    uint64_t v76 = v13;
    sub_241CDA0F0();
    uint64_t v29 = (uint64_t)v81;
    uint64_t v28 = v82;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v85 + 16))(v81, v94, v82);
    uint64_t v30 = v83;
    sub_241C61648(a2, (uint64_t)v83, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v77 = a2;
    sub_241C61648(a2, (uint64_t)v86, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648((uint64_t)v80, (uint64_t)v87, (uint64_t (*)(void))sub_241A68508);
    uint64_t v31 = (uint64_t)v26;
    id v32 = v26;
    uint64_t v33 = sub_241CDA190();
    int v34 = sub_241CDB630();
    if (os_log_type_enabled(v33, (os_log_type_t)v34))
    {
      id v80 = (void *)v31;
      int v70 = v34;
      os_log_t v72 = v33;
      uint64_t v73 = v25;
      uint64_t v35 = swift_slowAlloc();
      int v36 = (void *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      v96[0] = v71;
      *(_DWORD *)uint64_t v35 = 136316162;
      uint64_t v37 = sub_241C38E70(v29, v30[*(int *)(v78 + 40)], 0xD00000000000004BLL);
      uint64_t v95 = sub_241A33FE4(v37, v38, v96);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v29, v28);
      sub_241C73BBC((uint64_t)v30, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v35 + 12) = 2112;
      unint64_t v39 = v86;
      uint64_t v40 = sub_241CD7770();
      uint64_t v95 = v40;
      sub_241CDBBF0();
      uint64_t v41 = v36;
      *int v36 = v40;
      sub_241C73BBC((uint64_t)v39, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v35 + 22) = 2080;
      uint64_t v42 = v87;
      uint64_t v43 = sub_241CDBBB0();
      uint64_t v95 = sub_241A33FE4(v43, v44, v96);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC((uint64_t)v42, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v35 + 32) = 2080;
      unint64_t v45 = v32;
      id v46 = objc_msgSend(v32, sel_kindRawValue);
      if (v46)
      {
        uint64_t v47 = v46;
        id v26 = v80;
        sub_241CDB0D0();

        char v48 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        id v26 = v80;
        char v48 = 22;
      }
      uint64_t v49 = v74;
      uint64_t v50 = v84;
      LOBYTE(v95) = v48;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v51 = sub_241CDBBB0();
      uint64_t v95 = sub_241A33FE4(v51, v52, v96);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 42) = 1024;
      unsigned int v53 = objc_msgSend(v45, sel_hasValueData);

      LODWORD(v95) = v53;
      sub_241CDBBF0();

      os_log_t v54 = v72;
      _os_log_impl(&dword_241A23000, v72, (os_log_type_t)v70, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v35, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v41, -1, -1);
      uint64_t v55 = v71;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v55, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v73, v49);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v29, v28);
      sub_241C73BBC((uint64_t)v30, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC((uint64_t)v86, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC((uint64_t)v87, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(unsigned char *, uint64_t))(v84 + 8))(v25, v74);
      id v26 = (id)v31;
    }
    uint64_t v13 = v76;
    a2 = v77;
    uint64_t v15 = v75;
    uint64_t v18 = v78;
  }
  sub_241CD7790();
  uint64_t v56 = (void *)sub_241CD7AE0();
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v91);
  int v57 = *(unsigned __int8 *)(a2 + *(int *)(v18 + 40));
  sub_241CD7A80();
  id v58 = v26;
  id v59 = objc_msgSend(v58, sel_data);
  uint64_t v60 = a2;
  if (v59)
  {
    uint64_t v61 = v59;
    uint64_t v62 = sub_241CD6AE0();
    unint64_t v64 = v63;
  }
  else
  {
    uint64_t v62 = 0;
    unint64_t v64 = 0xF000000000000000;
  }
  uint64_t v66 = v89;
  uint64_t v65 = v90;
  uint64_t v67 = (uint64_t)v88;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v68 = sub_241A54BF8(v62, v64, 1, v56, v57, v67);

  sub_241A54FC8(v62, v64);
  (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v93, v65);
  v96[0] = sub_241C2ECCC(v60, v94, v68);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C51864(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v95 = a4;
  uint64_t v93 = a5;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v89 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v69 - v11;
  uint64_t v92 = sub_241CD7AF0();
  uint64_t v13 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v79 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v84 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v88 = (uint64_t)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v83 = (uint64_t)&v69 - v21;
  uint64_t v82 = sub_241CD7740();
  uint64_t v87 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v81 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v85 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v86 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator(0);
  id v80 = (void *)a3;
  id v25 = (void *)sub_241AB9DD4(a1, a2, a3);
  uint64_t v26 = (uint64_t)a2;
  unint64_t v27 = &a2[*(int *)(v18 + 20)];
  uint64_t v28 = (void *)sub_241CD7770();
  LODWORD(a2) = objc_msgSend(v28, sel_isAbleToWriteHealthSensitiveLogs);

  uint64_t v94 = v12;
  if (a2)
  {
    uint64_t v75 = v27;
    uint64_t v76 = v23;
    uint64_t v78 = v18;
    uint64_t v74 = v15;
    uint64_t v77 = v13;
    uint64_t v29 = v86;
    sub_241CDA0F0();
    uint64_t v30 = (uint64_t)v81;
    uint64_t v31 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v81, v95, v82);
    uint64_t v32 = v83;
    sub_241C61648(v26, v83, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648(v26, v88, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v33 = v84;
    sub_241C61648((uint64_t)v80, v84, (uint64_t (*)(void))sub_241A68508);
    id v80 = v25;
    id v34 = v25;
    uint64_t v35 = sub_241CDA190();
    int v36 = sub_241CDB630();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      int v70 = v36;
      os_log_t v71 = v35;
      uint64_t v73 = v26;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v69 = (void *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      v97[0] = v72;
      *(_DWORD *)uint64_t v37 = 136316162;
      uint64_t v38 = sub_241C38E70(v30, *(unsigned __int8 *)(v32 + *(int *)(v78 + 36)), 0xD00000000000003ALL);
      uint64_t v96 = sub_241A33FE4(v38, v39, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v30, v31);
      uint64_t v40 = v34;
      sub_241C73BBC(v32, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v37 + 12) = 2112;
      uint64_t v41 = v88;
      uint64_t v42 = sub_241CD7770();
      uint64_t v96 = v42;
      sub_241CDBBF0();
      uint64_t v43 = v69;
      *uint64_t v69 = v42;
      sub_241C73BBC(v41, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v37 + 22) = 2080;
      uint64_t v44 = sub_241CDBBB0();
      uint64_t v96 = sub_241A33FE4(v44, v45, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v33, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v37 + 32) = 2080;
      id v46 = objc_msgSend(v34, sel_kindRawValue);
      if (v46)
      {
        uint64_t v47 = v46;
        sub_241CDB0D0();

        char v48 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v48 = 22;
      }
      uint64_t v49 = v76;
      uint64_t v50 = v85;
      LOBYTE(v96) = v48;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v51 = sub_241CDBBB0();
      uint64_t v96 = sub_241A33FE4(v51, v52, v97);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 42) = 1024;
      unsigned int v53 = objc_msgSend(v40, sel_hasValueData);

      LODWORD(v96) = v53;
      sub_241CDBBF0();

      os_log_t v54 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v70, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v37, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v43, -1, -1);
      uint64_t v55 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v55, -1, -1);
      MEMORY[0x245637F20](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v86, v49);
      uint64_t v26 = v73;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v30, v31);
      sub_241C73BBC(v32, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v88, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v33, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v29, v76);
    }
    uint64_t v13 = v77;
    uint64_t v18 = v78;
    uint64_t v15 = v74;
    id v25 = v80;
  }
  sub_241CD7790();
  uint64_t v56 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v92);
  uint64_t v57 = v26;
  int v58 = *(unsigned __int8 *)(v26 + *(int *)(v18 + 36));
  sub_241CD7A80();
  id v59 = v25;
  id v60 = objc_msgSend(v59, sel_data);
  if (v60)
  {
    uint64_t v61 = v60;
    uint64_t v62 = sub_241CD6AE0();
    unint64_t v64 = v63;
  }
  else
  {
    uint64_t v62 = 0;
    unint64_t v64 = 0xF000000000000000;
  }
  uint64_t v66 = v90;
  uint64_t v65 = v91;
  uint64_t v67 = (uint64_t)v89;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v68 = sub_241A54BF8(v62, v64, 1, v56, v58, v67);

  sub_241A54FC8(v62, v64);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v94, v65);
  v97[0] = sub_241C2F38C(v57, v95, v68);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C52278(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v95 = a4;
  uint64_t v93 = a5;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v89 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v69 - v11;
  uint64_t v92 = sub_241CD7AF0();
  uint64_t v13 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v79 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v84 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v88 = (uint64_t)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v83 = (uint64_t)&v69 - v21;
  uint64_t v82 = sub_241CD7740();
  uint64_t v87 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v81 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v85 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v86 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator(0);
  id v80 = (id)a3;
  id v25 = sub_241AE6448(a1, a2, a3);
  uint64_t v26 = (uint64_t)a2;
  unint64_t v27 = &a2[*(int *)(v18 + 20)];
  uint64_t v28 = (void *)sub_241CD7770();
  LODWORD(a2) = objc_msgSend(v28, sel_isAbleToWriteHealthSensitiveLogs);

  uint64_t v94 = v12;
  if (a2)
  {
    uint64_t v75 = v27;
    uint64_t v76 = v23;
    uint64_t v78 = v18;
    uint64_t v74 = v15;
    uint64_t v77 = v13;
    uint64_t v29 = v86;
    sub_241CDA0F0();
    uint64_t v30 = (uint64_t)v81;
    uint64_t v31 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v81, v95, v82);
    uint64_t v32 = v83;
    sub_241C61648(v26, v83, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648(v26, v88, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v33 = v84;
    sub_241C61648((uint64_t)v80, v84, (uint64_t (*)(void))sub_241A68508);
    id v80 = v25;
    id v34 = v25;
    uint64_t v35 = sub_241CDA190();
    int v36 = sub_241CDB630();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      int v70 = v36;
      os_log_t v71 = v35;
      uint64_t v73 = v26;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v69 = (void *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      v97[0] = v72;
      *(_DWORD *)uint64_t v37 = 136316162;
      uint64_t v38 = sub_241C38E70(v30, *(unsigned __int8 *)(v32 + *(int *)(v78 + 36)), 0xD000000000000036);
      uint64_t v96 = sub_241A33FE4(v38, v39, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v30, v31);
      uint64_t v40 = v34;
      sub_241C73BBC(v32, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v37 + 12) = 2112;
      uint64_t v41 = v88;
      uint64_t v42 = sub_241CD7770();
      uint64_t v96 = v42;
      sub_241CDBBF0();
      uint64_t v43 = v69;
      *uint64_t v69 = v42;
      sub_241C73BBC(v41, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v37 + 22) = 2080;
      uint64_t v44 = sub_241CDBBB0();
      uint64_t v96 = sub_241A33FE4(v44, v45, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v33, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v37 + 32) = 2080;
      id v46 = objc_msgSend(v34, sel_kindRawValue);
      if (v46)
      {
        uint64_t v47 = v46;
        sub_241CDB0D0();

        char v48 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v48 = 22;
      }
      uint64_t v49 = v76;
      uint64_t v50 = v85;
      LOBYTE(v96) = v48;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v51 = sub_241CDBBB0();
      uint64_t v96 = sub_241A33FE4(v51, v52, v97);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 42) = 1024;
      unsigned int v53 = objc_msgSend(v40, sel_hasValueData);

      LODWORD(v96) = v53;
      sub_241CDBBF0();

      os_log_t v54 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v70, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v37, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v43, -1, -1);
      uint64_t v55 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v55, -1, -1);
      MEMORY[0x245637F20](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v86, v49);
      uint64_t v26 = v73;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v30, v31);
      sub_241C73BBC(v32, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v88, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v33, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v29, v76);
    }
    uint64_t v13 = v77;
    uint64_t v18 = v78;
    uint64_t v15 = v74;
    id v25 = v80;
  }
  sub_241CD7790();
  uint64_t v56 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v92);
  uint64_t v57 = v26;
  int v58 = *(unsigned __int8 *)(v26 + *(int *)(v18 + 36));
  sub_241CD7A80();
  id v59 = v25;
  id v60 = objc_msgSend(v59, sel_data);
  if (v60)
  {
    uint64_t v61 = v60;
    uint64_t v62 = sub_241CD6AE0();
    unint64_t v64 = v63;
  }
  else
  {
    uint64_t v62 = 0;
    unint64_t v64 = 0xF000000000000000;
  }
  uint64_t v66 = v90;
  uint64_t v65 = v91;
  uint64_t v67 = (uint64_t)v89;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v68 = sub_241A54BF8(v62, v64, 1, v56, v58, v67);

  sub_241A54FC8(v62, v64);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v94, v65);
  v97[0] = sub_241C2FA70(v57, v95, v68);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C52C8C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v95 = a4;
  uint64_t v93 = a5;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v89 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v69 - v11;
  uint64_t v92 = sub_241CD7AF0();
  uint64_t v13 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v79 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v84 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v88 = (uint64_t)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v83 = (uint64_t)&v69 - v21;
  uint64_t v82 = sub_241CD7740();
  uint64_t v87 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v81 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v85 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v86 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator(0);
  id v80 = (id)a3;
  id v25 = sub_241AEA4FC(a1);
  uint64_t v26 = a2;
  uint64_t v27 = a2 + *(int *)(v18 + 20);
  uint64_t v28 = (void *)sub_241CD7770();
  LODWORD(a2) = objc_msgSend(v28, sel_isAbleToWriteHealthSensitiveLogs);

  uint64_t v94 = v12;
  if (a2)
  {
    uint64_t v75 = v27;
    uint64_t v76 = v23;
    uint64_t v78 = v18;
    uint64_t v74 = v15;
    uint64_t v77 = v13;
    uint64_t v29 = v86;
    sub_241CDA0F0();
    uint64_t v30 = (uint64_t)v81;
    uint64_t v31 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v81, v95, v82);
    uint64_t v32 = v83;
    sub_241C61648(v26, v83, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648(v26, v88, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v33 = v84;
    sub_241C61648((uint64_t)v80, v84, (uint64_t (*)(void))sub_241A68508);
    id v80 = v25;
    id v34 = v25;
    uint64_t v35 = sub_241CDA190();
    int v36 = sub_241CDB630();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      int v70 = v36;
      os_log_t v71 = v35;
      uint64_t v73 = v26;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v69 = (void *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      v97[0] = v72;
      *(_DWORD *)uint64_t v37 = 136316162;
      uint64_t v38 = sub_241C38E70(v30, *(unsigned __int8 *)(v32 + *(int *)(v78 + 36)), 0xD000000000000034);
      uint64_t v96 = sub_241A33FE4(v38, v39, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v30, v31);
      uint64_t v40 = v34;
      sub_241C73BBC(v32, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v37 + 12) = 2112;
      uint64_t v41 = v88;
      uint64_t v42 = sub_241CD7770();
      uint64_t v96 = v42;
      sub_241CDBBF0();
      uint64_t v43 = v69;
      *uint64_t v69 = v42;
      sub_241C73BBC(v41, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v37 + 22) = 2080;
      uint64_t v44 = sub_241CDBBB0();
      uint64_t v96 = sub_241A33FE4(v44, v45, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v33, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v37 + 32) = 2080;
      id v46 = objc_msgSend(v34, sel_kindRawValue);
      if (v46)
      {
        uint64_t v47 = v46;
        sub_241CDB0D0();

        char v48 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v48 = 22;
      }
      uint64_t v49 = v76;
      uint64_t v50 = v85;
      LOBYTE(v96) = v48;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v51 = sub_241CDBBB0();
      uint64_t v96 = sub_241A33FE4(v51, v52, v97);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 42) = 1024;
      unsigned int v53 = objc_msgSend(v40, sel_hasValueData);

      LODWORD(v96) = v53;
      sub_241CDBBF0();

      os_log_t v54 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v70, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v37, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v43, -1, -1);
      uint64_t v55 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v55, -1, -1);
      MEMORY[0x245637F20](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v86, v49);
      uint64_t v26 = v73;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v30, v31);
      sub_241C73BBC(v32, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v88, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v33, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v29, v76);
    }
    uint64_t v13 = v77;
    uint64_t v18 = v78;
    uint64_t v15 = v74;
    id v25 = v80;
  }
  sub_241CD7790();
  uint64_t v56 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v92);
  uint64_t v57 = v26;
  int v58 = *(unsigned __int8 *)(v26 + *(int *)(v18 + 36));
  sub_241CD7A80();
  id v59 = v25;
  id v60 = objc_msgSend(v59, sel_data);
  if (v60)
  {
    uint64_t v61 = v60;
    uint64_t v62 = sub_241CD6AE0();
    unint64_t v64 = v63;
  }
  else
  {
    uint64_t v62 = 0;
    unint64_t v64 = 0xF000000000000000;
  }
  uint64_t v66 = v90;
  uint64_t v65 = v91;
  uint64_t v67 = (uint64_t)v89;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v68 = sub_241A54BF8(v62, v64, 1, v56, v58, v67);

  sub_241A54FC8(v62, v64);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v94, v65);
  v97[0] = sub_241C30154(v57, v95, v68);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C536A0(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v99 = a5;
  uint64_t v97 = a6;
  uint64_t v10 = sub_241CD7AB0();
  uint64_t v92 = *(void *)(v10 - 8);
  uint64_t v93 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v95 = &v73[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v96 = &v73[-v13];
  uint64_t v94 = sub_241CD7AF0();
  uint64_t v14 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v16 = &v73[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A68508(0);
  uint64_t v83 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v91 = &v73[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v86 = &v73[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v20);
  uint64_t v85 = &v73[-v22];
  uint64_t v23 = sub_241CD7740();
  uint64_t v89 = *(void *)(v23 - 8);
  uint64_t v90 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v88 = &v73[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = sub_241CDA1A0();
  uint64_t v87 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = &v73[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v84 = (id)a4;
  id v28 = sub_241C01714(a1, a2);
  uint64_t v29 = a3 + *(int *)(v19 + 24);
  uint64_t v30 = (void *)sub_241CD7770();
  unsigned int v31 = objc_msgSend(v30, sel_isAbleToWriteHealthSensitiveLogs);

  uint64_t v98 = a3;
  if (v31)
  {
    uint64_t v82 = v19;
    uint64_t v78 = v29;
    uint64_t v79 = v25;
    id v80 = v16;
    uint64_t v81 = v14;
    sub_241CDA0F0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v89 + 16))(v88, v99, v90);
    uint64_t v32 = v85;
    sub_241C61648(a3, (uint64_t)v85, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v33 = v86;
    sub_241C61648(a3, (uint64_t)v86, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648((uint64_t)v84, (uint64_t)v91, (uint64_t (*)(void))sub_241A68508);
    id v84 = v28;
    id v34 = v28;
    uint64_t v35 = sub_241CDA190();
    int v36 = sub_241CDB630();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      int v74 = v36;
      os_log_t v76 = v35;
      uint64_t v77 = v27;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = v82;
      uint64_t v39 = v37;
      uint64_t v40 = (void *)swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      v101[0] = v75;
      *(_DWORD *)uint64_t v39 = 136316162;
      uint64_t v41 = v88;
      uint64_t v42 = sub_241C38E70((uint64_t)v88, v32[*(int *)(v38 + 20)], 0xD00000000000003FLL);
      uint64_t v100 = sub_241A33FE4(v42, v43, v101);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v89 + 8))(v41, v90);
      sub_241C73BBC((uint64_t)v32, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v39 + 12) = 2112;
      uint64_t v44 = sub_241CD7770();
      uint64_t v100 = v44;
      sub_241CDBBF0();
      *uint64_t v40 = v44;
      sub_241C73BBC((uint64_t)v33, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v39 + 22) = 2080;
      unint64_t v45 = v91;
      uint64_t v46 = sub_241CDBBB0();
      uint64_t v100 = sub_241A33FE4(v46, v47, v101);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC((uint64_t)v45, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v39 + 32) = 2080;
      id v48 = objc_msgSend(v34, sel_kindRawValue);
      if (v48)
      {
        uint64_t v49 = v48;
        sub_241CDB0D0();

        char v50 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v50 = 22;
      }
      uint64_t v51 = v79;
      uint64_t v52 = v87;
      LOBYTE(v100) = v50;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v53 = sub_241CDBBB0();
      uint64_t v100 = sub_241A33FE4(v53, v54, v101);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 42) = 1024;
      unsigned int v55 = objc_msgSend(v34, sel_hasValueData);

      LODWORD(v100) = v55;
      sub_241CDBBF0();

      os_log_t v56 = v76;
      _os_log_impl(&dword_241A23000, v76, (os_log_type_t)v74, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v39, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v40, -1, -1);
      uint64_t v57 = v75;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v57, -1, -1);
      MEMORY[0x245637F20](v39, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v52 + 8))(v77, v51);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v89 + 8))(v88, v90);
      sub_241C73BBC((uint64_t)v32, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC((uint64_t)v33, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC((uint64_t)v91, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v27, v79);
    }
    a3 = v98;
    uint64_t v14 = v81;
    uint64_t v19 = v82;
    uint64_t v16 = v80;
    id v28 = v84;
  }
  sub_241CD7790();
  int v58 = (void *)sub_241CD7AE0();
  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v94);
  int v59 = *(unsigned __int8 *)(a3 + *(int *)(v19 + 20));
  id v60 = v96;
  sub_241CD7A80();
  id v61 = v28;
  id v62 = objc_msgSend(v61, sel_data);
  unint64_t v63 = v60;
  if (v62)
  {
    unint64_t v64 = v62;
    int v65 = v59;
    uint64_t v66 = sub_241CD6AE0();
    unint64_t v68 = v67;
  }
  else
  {
    int v65 = v59;
    uint64_t v66 = 0;
    unint64_t v68 = 0xF000000000000000;
  }
  uint64_t v70 = v92;
  uint64_t v69 = v93;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  uint64_t v71 = (uint64_t)v95;
  sub_241CD7A80();
  uint64_t v72 = sub_241A54BF8(v66, v68, 1, v58, v65, v71);

  sub_241A54FC8(v66, v68);
  (*(void (**)(unsigned char *, uint64_t))(v70 + 8))(v63, v69);
  v101[0] = sub_241C30838(v98, v99, v72);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C54080(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v91 = a5;
  uint64_t v92 = a4;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v87 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v93 = (char *)&v67 - v11;
  uint64_t v90 = sub_241CD7AF0();
  uint64_t v12 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v77 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v86 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v80 = (uint64_t)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v79 = (uint64_t)&v67 - v20;
  uint64_t v21 = sub_241CD7740();
  uint64_t v84 = *(void *)(v21 - 8);
  uint64_t v85 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v83 = (uint64_t)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v81 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v82 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v78 = (id)a3;
  id v25 = sub_241C07A70(a1, a2, a3);
  uint64_t v26 = a2;
  uint64_t v27 = a2 + *(int *)(v17 + 28);
  id v28 = (void *)sub_241CD7770();
  LODWORD(a3) = objc_msgSend(v28, sel_isAbleToWriteHealthSensitiveLogs);

  if (a3)
  {
    uint64_t v73 = v27;
    uint64_t v74 = v23;
    uint64_t v76 = v17;
    uint64_t v72 = v14;
    uint64_t v75 = v12;
    uint64_t v29 = v82;
    sub_241CDA0F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v83, v92, v85);
    uint64_t v30 = v79;
    sub_241C61648(v26, v79, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v31 = v80;
    sub_241C61648(v26, v80, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648((uint64_t)v78, v86, (uint64_t (*)(void))sub_241A68508);
    id v78 = v25;
    id v32 = v25;
    uint64_t v33 = sub_241CDA190();
    int v34 = sub_241CDB630();
    if (os_log_type_enabled(v33, (os_log_type_t)v34))
    {
      int v69 = v34;
      os_log_t v70 = v33;
      uint64_t v71 = v26;
      uint64_t v35 = swift_slowAlloc();
      int v36 = (void *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      v95[0] = v68;
      *(_DWORD *)uint64_t v35 = 136316162;
      uint64_t v37 = v83;
      uint64_t v38 = sub_241C38E70(v83, *(unsigned __int8 *)(v30 + *(int *)(v76 + 24)), 0xD00000000000003CLL);
      uint64_t v94 = sub_241A33FE4(v38, v39, v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v37, v85);
      sub_241C73BBC(v30, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v35 + 12) = 2112;
      uint64_t v40 = sub_241CD7770();
      uint64_t v94 = v40;
      sub_241CDBBF0();
      *int v36 = v40;
      sub_241C73BBC(v31, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v35 + 22) = 2080;
      uint64_t v41 = v86;
      uint64_t v42 = sub_241CDBBB0();
      uint64_t v94 = sub_241A33FE4(v42, v43, v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v41, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v35 + 32) = 2080;
      id v44 = objc_msgSend(v32, sel_kindRawValue);
      if (v44)
      {
        unint64_t v45 = v44;
        sub_241CDB0D0();

        char v46 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v46 = 22;
      }
      uint64_t v47 = v74;
      uint64_t v48 = v81;
      LOBYTE(v94) = v46;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v49 = sub_241CDBBB0();
      uint64_t v94 = sub_241A33FE4(v49, v50, v95);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 42) = 1024;
      unsigned int v51 = objc_msgSend(v32, sel_hasValueData);

      LODWORD(v94) = v51;
      sub_241CDBBF0();

      os_log_t v52 = v70;
      _os_log_impl(&dword_241A23000, v70, (os_log_type_t)v69, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v35, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      uint64_t v53 = v68;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v53, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v82, v47);
      uint64_t v26 = v71;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
      sub_241C73BBC(v30, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v31, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v86, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v29, v74);
    }
    uint64_t v12 = v75;
    uint64_t v17 = v76;
    uint64_t v14 = v72;
    id v25 = v78;
  }
  sub_241CD7790();
  unint64_t v54 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v90);
  uint64_t v55 = v26;
  int v56 = *(unsigned __int8 *)(v26 + *(int *)(v17 + 24));
  sub_241CD7A80();
  id v57 = v25;
  id v58 = objc_msgSend(v57, sel_data);
  if (v58)
  {
    int v59 = v58;
    uint64_t v60 = sub_241CD6AE0();
    unint64_t v62 = v61;
  }
  else
  {
    uint64_t v60 = 0;
    unint64_t v62 = 0xF000000000000000;
  }
  uint64_t v64 = v88;
  uint64_t v63 = v89;
  uint64_t v65 = (uint64_t)v87;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v66 = sub_241A54BF8(v60, v62, 1, v54, v56, v65);

  sub_241A54FC8(v60, v62);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v93, v63);
  v95[0] = sub_241C30F1C(v55, v92, v66);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C54A5C(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v91 = a5;
  uint64_t v92 = a4;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v87 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v93 = (char *)&v67 - v11;
  uint64_t v90 = sub_241CD7AF0();
  uint64_t v12 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v77 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v86 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v80 = (uint64_t)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v79 = (uint64_t)&v67 - v20;
  uint64_t v21 = sub_241CD7740();
  uint64_t v84 = *(void *)(v21 - 8);
  uint64_t v85 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v83 = (uint64_t)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v81 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v82 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v78 = (id)a3;
  id v25 = sub_241C75EDC(a1, a2);
  uint64_t v26 = a2;
  uint64_t v27 = a2 + *(int *)(v17 + 20);
  id v28 = (void *)sub_241CD7770();
  LODWORD(a3) = objc_msgSend(v28, sel_isAbleToWriteHealthSensitiveLogs);

  if (a3)
  {
    uint64_t v73 = v27;
    uint64_t v74 = v23;
    uint64_t v76 = v17;
    uint64_t v72 = v14;
    uint64_t v75 = v12;
    uint64_t v29 = v82;
    sub_241CDA0F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v83, v92, v85);
    uint64_t v30 = v79;
    sub_241C61648(v26, v79, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v31 = v80;
    sub_241C61648(v26, v80, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648((uint64_t)v78, v86, (uint64_t (*)(void))sub_241A68508);
    id v78 = v25;
    id v32 = v25;
    uint64_t v33 = sub_241CDA190();
    int v34 = sub_241CDB630();
    if (os_log_type_enabled(v33, (os_log_type_t)v34))
    {
      int v69 = v34;
      os_log_t v70 = v33;
      uint64_t v71 = v26;
      uint64_t v35 = swift_slowAlloc();
      int v36 = (void *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      v95[0] = v68;
      *(_DWORD *)uint64_t v35 = 136316162;
      uint64_t v37 = v83;
      uint64_t v38 = sub_241C38E70(v83, *(unsigned __int8 *)(v30 + *(int *)(v76 + 40)), 0xD00000000000003BLL);
      uint64_t v94 = sub_241A33FE4(v38, v39, v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v37, v85);
      sub_241C73BBC(v30, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v35 + 12) = 2112;
      uint64_t v40 = sub_241CD7770();
      uint64_t v94 = v40;
      sub_241CDBBF0();
      *int v36 = v40;
      sub_241C73BBC(v31, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v35 + 22) = 2080;
      uint64_t v41 = v86;
      uint64_t v42 = sub_241CDBBB0();
      uint64_t v94 = sub_241A33FE4(v42, v43, v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v41, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v35 + 32) = 2080;
      id v44 = objc_msgSend(v32, sel_kindRawValue);
      if (v44)
      {
        unint64_t v45 = v44;
        sub_241CDB0D0();

        char v46 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v46 = 22;
      }
      uint64_t v47 = v74;
      uint64_t v48 = v81;
      LOBYTE(v94) = v46;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v49 = sub_241CDBBB0();
      uint64_t v94 = sub_241A33FE4(v49, v50, v95);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 42) = 1024;
      unsigned int v51 = objc_msgSend(v32, sel_hasValueData);

      LODWORD(v94) = v51;
      sub_241CDBBF0();

      os_log_t v52 = v70;
      _os_log_impl(&dword_241A23000, v70, (os_log_type_t)v69, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v35, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      uint64_t v53 = v68;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v53, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v82, v47);
      uint64_t v26 = v71;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
      sub_241C73BBC(v30, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v31, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v86, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v29, v74);
    }
    uint64_t v12 = v75;
    uint64_t v17 = v76;
    uint64_t v14 = v72;
    id v25 = v78;
  }
  sub_241CD7790();
  unint64_t v54 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v90);
  uint64_t v55 = v26;
  int v56 = *(unsigned __int8 *)(v26 + *(int *)(v17 + 40));
  sub_241CD7A80();
  id v57 = v25;
  id v58 = objc_msgSend(v57, sel_data);
  if (v58)
  {
    int v59 = v58;
    uint64_t v60 = sub_241CD6AE0();
    unint64_t v62 = v61;
  }
  else
  {
    uint64_t v60 = 0;
    unint64_t v62 = 0xF000000000000000;
  }
  uint64_t v64 = v88;
  uint64_t v63 = v89;
  uint64_t v65 = (uint64_t)v87;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v66 = sub_241A54BF8(v60, v62, 1, v54, v56, v65);

  sub_241A54FC8(v60, v62);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v93, v63);
  v95[0] = sub_241C31600(v55, v92, v66);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C55438(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v91 = a5;
  uint64_t v92 = a4;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v87 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v93 = (char *)&v67 - v11;
  uint64_t v90 = sub_241CD7AF0();
  uint64_t v12 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v77 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v86 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v80 = (uint64_t)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v79 = (uint64_t)&v67 - v20;
  uint64_t v21 = sub_241CD7740();
  uint64_t v84 = *(void *)(v21 - 8);
  uint64_t v85 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v83 = (uint64_t)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v81 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v82 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v78 = (id)a3;
  id v25 = sub_241C799A0(a1);
  uint64_t v26 = a2;
  uint64_t v27 = a2 + *(int *)(v17 + 24);
  id v28 = (void *)sub_241CD7770();
  LODWORD(a3) = objc_msgSend(v28, sel_isAbleToWriteHealthSensitiveLogs);

  if (a3)
  {
    uint64_t v73 = v27;
    uint64_t v74 = v23;
    uint64_t v76 = v17;
    uint64_t v72 = v14;
    uint64_t v75 = v12;
    uint64_t v29 = v82;
    sub_241CDA0F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v83, v92, v85);
    uint64_t v30 = v79;
    sub_241C61648(v26, v79, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v31 = v80;
    sub_241C61648(v26, v80, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648((uint64_t)v78, v86, (uint64_t (*)(void))sub_241A68508);
    id v78 = v25;
    id v32 = v25;
    uint64_t v33 = sub_241CDA190();
    int v34 = sub_241CDB630();
    if (os_log_type_enabled(v33, (os_log_type_t)v34))
    {
      int v69 = v34;
      os_log_t v70 = v33;
      uint64_t v71 = v26;
      uint64_t v35 = swift_slowAlloc();
      int v36 = (void *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      v95[0] = v68;
      *(_DWORD *)uint64_t v35 = 136316162;
      uint64_t v37 = v83;
      uint64_t v38 = sub_241C38E70(v83, *(unsigned __int8 *)(v30 + *(int *)(v76 + 20)), 0xD000000000000037);
      uint64_t v94 = sub_241A33FE4(v38, v39, v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v37, v85);
      sub_241C73BBC(v30, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v35 + 12) = 2112;
      uint64_t v40 = sub_241CD7770();
      uint64_t v94 = v40;
      sub_241CDBBF0();
      *int v36 = v40;
      sub_241C73BBC(v31, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v35 + 22) = 2080;
      uint64_t v41 = v86;
      uint64_t v42 = sub_241CDBBB0();
      uint64_t v94 = sub_241A33FE4(v42, v43, v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v41, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v35 + 32) = 2080;
      id v44 = objc_msgSend(v32, sel_kindRawValue);
      if (v44)
      {
        unint64_t v45 = v44;
        sub_241CDB0D0();

        char v46 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v46 = 22;
      }
      uint64_t v47 = v74;
      uint64_t v48 = v81;
      LOBYTE(v94) = v46;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v49 = sub_241CDBBB0();
      uint64_t v94 = sub_241A33FE4(v49, v50, v95);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 42) = 1024;
      unsigned int v51 = objc_msgSend(v32, sel_hasValueData);

      LODWORD(v94) = v51;
      sub_241CDBBF0();

      os_log_t v52 = v70;
      _os_log_impl(&dword_241A23000, v70, (os_log_type_t)v69, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v35, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      uint64_t v53 = v68;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v53, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v82, v47);
      uint64_t v26 = v71;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
      sub_241C73BBC(v30, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v31, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v86, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v29, v74);
    }
    uint64_t v12 = v75;
    uint64_t v17 = v76;
    uint64_t v14 = v72;
    id v25 = v78;
  }
  sub_241CD7790();
  unint64_t v54 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v90);
  uint64_t v55 = v26;
  int v56 = *(unsigned __int8 *)(v26 + *(int *)(v17 + 20));
  sub_241CD7A80();
  id v57 = v25;
  id v58 = objc_msgSend(v57, sel_data);
  if (v58)
  {
    int v59 = v58;
    uint64_t v60 = sub_241CD6AE0();
    unint64_t v62 = v61;
  }
  else
  {
    uint64_t v60 = 0;
    unint64_t v62 = 0xF000000000000000;
  }
  uint64_t v64 = v88;
  uint64_t v63 = v89;
  uint64_t v65 = (uint64_t)v87;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v66 = sub_241A54BF8(v60, v62, 1, v54, v56, v65);

  sub_241A54FC8(v60, v62);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v93, v63);
  v95[0] = sub_241C31CE8(v55, v92, v66);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C55E14(uint64_t a1@<X0>, uint64_t a2@<X1>, id a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v91 = a5;
  uint64_t v92 = a4;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v87 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v93 = (char *)&v67 - v11;
  uint64_t v90 = sub_241CD7AF0();
  uint64_t v12 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v77 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v86 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v80 = (uint64_t)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v79 = (uint64_t)&v67 - v20;
  uint64_t v21 = sub_241CD7740();
  uint64_t v84 = *(void *)(v21 - 8);
  uint64_t v85 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v83 = (uint64_t)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v81 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v82 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v78 = a3;
  id v25 = sub_241C8B198(a1, a2, a3);
  uint64_t v26 = a2;
  uint64_t v27 = a2 + *(int *)(v17 + 20);
  id v28 = (void *)sub_241CD7770();
  LODWORD(a3) = objc_msgSend(v28, sel_isAbleToWriteHealthSensitiveLogs);

  if (a3)
  {
    uint64_t v73 = v27;
    uint64_t v74 = v23;
    uint64_t v76 = v17;
    uint64_t v72 = v14;
    uint64_t v75 = v12;
    uint64_t v29 = v82;
    sub_241CDA0F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v83, v92, v85);
    uint64_t v30 = v79;
    sub_241C61648(v26, v79, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v31 = v80;
    sub_241C61648(v26, v80, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648((uint64_t)v78, v86, (uint64_t (*)(void))sub_241A68508);
    id v78 = v25;
    id v32 = v25;
    uint64_t v33 = sub_241CDA190();
    int v34 = sub_241CDB630();
    if (os_log_type_enabled(v33, (os_log_type_t)v34))
    {
      int v69 = v34;
      os_log_t v70 = v33;
      uint64_t v71 = v26;
      uint64_t v35 = swift_slowAlloc();
      int v36 = (void *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      v95[0] = v68;
      *(_DWORD *)uint64_t v35 = 136316162;
      uint64_t v37 = v83;
      uint64_t v38 = sub_241C38E70(v83, *(unsigned __int8 *)(v30 + *(int *)(v76 + 36)), 0xD000000000000038);
      uint64_t v94 = sub_241A33FE4(v38, v39, v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v37, v85);
      sub_241C73BBC(v30, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v35 + 12) = 2112;
      uint64_t v40 = sub_241CD7770();
      uint64_t v94 = v40;
      sub_241CDBBF0();
      *int v36 = v40;
      sub_241C73BBC(v31, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v35 + 22) = 2080;
      uint64_t v41 = v86;
      uint64_t v42 = sub_241CDBBB0();
      uint64_t v94 = sub_241A33FE4(v42, v43, v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v41, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v35 + 32) = 2080;
      id v44 = objc_msgSend(v32, sel_kindRawValue);
      if (v44)
      {
        unint64_t v45 = v44;
        sub_241CDB0D0();

        char v46 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v46 = 22;
      }
      uint64_t v47 = v74;
      uint64_t v48 = v81;
      LOBYTE(v94) = v46;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v49 = sub_241CDBBB0();
      uint64_t v94 = sub_241A33FE4(v49, v50, v95);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 42) = 1024;
      unsigned int v51 = objc_msgSend(v32, sel_hasValueData);

      LODWORD(v94) = v51;
      sub_241CDBBF0();

      os_log_t v52 = v70;
      _os_log_impl(&dword_241A23000, v70, (os_log_type_t)v69, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v35, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      uint64_t v53 = v68;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v53, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v82, v47);
      uint64_t v26 = v71;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
      sub_241C73BBC(v30, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v31, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v86, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v29, v74);
    }
    uint64_t v12 = v75;
    uint64_t v17 = v76;
    uint64_t v14 = v72;
    id v25 = v78;
  }
  sub_241CD7790();
  unint64_t v54 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v90);
  uint64_t v55 = v26;
  int v56 = *(unsigned __int8 *)(v26 + *(int *)(v17 + 36));
  sub_241CD7A80();
  id v57 = v25;
  id v58 = objc_msgSend(v57, sel_data);
  if (v58)
  {
    int v59 = v58;
    uint64_t v60 = sub_241CD6AE0();
    unint64_t v62 = v61;
  }
  else
  {
    uint64_t v60 = 0;
    unint64_t v62 = 0xF000000000000000;
  }
  uint64_t v64 = v88;
  uint64_t v63 = v89;
  uint64_t v65 = (uint64_t)v87;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v66 = sub_241A54BF8(v60, v62, 1, v54, v56, v65);

  sub_241A54FC8(v60, v62);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v93, v63);
  v95[0] = sub_241C323CC(v55, v92, v66);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C567F0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v95 = a4;
  uint64_t v93 = a5;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v89 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v69 - v11;
  uint64_t v92 = sub_241CD7AF0();
  uint64_t v13 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v79 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v84 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v88 = (uint64_t)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v83 = (uint64_t)&v69 - v21;
  uint64_t v82 = sub_241CD7740();
  uint64_t v87 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v81 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v85 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v86 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator(0);
  uint64_t v80 = (void *)a3;
  id v25 = (void *)sub_241C99D98(a1, a2);
  uint64_t v26 = a2;
  uint64_t v27 = a2 + *(int *)(v18 + 20);
  id v28 = (void *)sub_241CD7770();
  LODWORD(a2) = objc_msgSend(v28, sel_isAbleToWriteHealthSensitiveLogs);

  uint64_t v94 = v12;
  if (a2)
  {
    uint64_t v75 = v27;
    uint64_t v76 = v23;
    uint64_t v78 = v18;
    uint64_t v74 = v15;
    uint64_t v77 = v13;
    uint64_t v29 = v86;
    sub_241CDA0F0();
    uint64_t v30 = (uint64_t)v81;
    uint64_t v31 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v81, v95, v82);
    uint64_t v32 = v83;
    sub_241C61648(v26, v83, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648(v26, v88, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v33 = v84;
    sub_241C61648((uint64_t)v80, v84, (uint64_t (*)(void))sub_241A68508);
    uint64_t v80 = v25;
    id v34 = v25;
    uint64_t v35 = sub_241CDA190();
    int v36 = sub_241CDB630();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      int v70 = v36;
      os_log_t v71 = v35;
      uint64_t v73 = v26;
      uint64_t v37 = swift_slowAlloc();
      int v69 = (void *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      v97[0] = v72;
      *(_DWORD *)uint64_t v37 = 136316162;
      uint64_t v38 = sub_241C38E70(v30, *(unsigned __int8 *)(v32 + *(int *)(v78 + 40)), 0xD00000000000003DLL);
      uint64_t v96 = sub_241A33FE4(v38, v39, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v30, v31);
      uint64_t v40 = v34;
      sub_241C73BBC(v32, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v37 + 12) = 2112;
      uint64_t v41 = v88;
      uint64_t v42 = sub_241CD7770();
      uint64_t v96 = v42;
      sub_241CDBBF0();
      unint64_t v43 = v69;
      *int v69 = v42;
      sub_241C73BBC(v41, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v37 + 22) = 2080;
      uint64_t v44 = sub_241CDBBB0();
      uint64_t v96 = sub_241A33FE4(v44, v45, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v33, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v37 + 32) = 2080;
      id v46 = objc_msgSend(v34, sel_kindRawValue);
      if (v46)
      {
        uint64_t v47 = v46;
        sub_241CDB0D0();

        char v48 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v48 = 22;
      }
      uint64_t v49 = v76;
      uint64_t v50 = v85;
      LOBYTE(v96) = v48;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v51 = sub_241CDBBB0();
      uint64_t v96 = sub_241A33FE4(v51, v52, v97);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 42) = 1024;
      unsigned int v53 = objc_msgSend(v40, sel_hasValueData);

      LODWORD(v96) = v53;
      sub_241CDBBF0();

      os_log_t v54 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v70, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v37, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v43, -1, -1);
      uint64_t v55 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v55, -1, -1);
      MEMORY[0x245637F20](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v86, v49);
      uint64_t v26 = v73;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v30, v31);
      sub_241C73BBC(v32, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v88, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v33, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v29, v76);
    }
    uint64_t v13 = v77;
    uint64_t v18 = v78;
    uint64_t v15 = v74;
    id v25 = v80;
  }
  sub_241CD7790();
  int v56 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v92);
  uint64_t v57 = v26;
  int v58 = *(unsigned __int8 *)(v26 + *(int *)(v18 + 40));
  sub_241CD7A80();
  id v59 = v25;
  id v60 = objc_msgSend(v59, sel_data);
  if (v60)
  {
    unint64_t v61 = v60;
    uint64_t v62 = sub_241CD6AE0();
    unint64_t v64 = v63;
  }
  else
  {
    uint64_t v62 = 0;
    unint64_t v64 = 0xF000000000000000;
  }
  uint64_t v66 = v90;
  uint64_t v65 = v91;
  uint64_t v67 = (uint64_t)v89;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v68 = sub_241A54BF8(v62, v64, 1, v56, v58, v67);

  sub_241A54FC8(v62, v64);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v94, v65);
  v97[0] = sub_241C32AB0(v57, v95, v68);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C57204(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v91 = a5;
  uint64_t v92 = a4;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v87 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v93 = (char *)&v67 - v11;
  uint64_t v90 = sub_241CD7AF0();
  uint64_t v12 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v77 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v86 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v80 = (uint64_t)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v79 = (uint64_t)&v67 - v20;
  uint64_t v21 = sub_241CD7740();
  uint64_t v84 = *(void *)(v21 - 8);
  uint64_t v85 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v83 = (uint64_t)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v81 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v82 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v78 = (id)a3;
  id v25 = sub_241CB75B8(a1, a2);
  uint64_t v26 = a2;
  uint64_t v27 = a2 + *(int *)(v17 + 20);
  id v28 = (void *)sub_241CD7770();
  LODWORD(a3) = objc_msgSend(v28, sel_isAbleToWriteHealthSensitiveLogs);

  if (a3)
  {
    uint64_t v73 = v27;
    uint64_t v74 = v23;
    uint64_t v76 = v17;
    uint64_t v72 = v14;
    uint64_t v75 = v12;
    uint64_t v29 = v82;
    sub_241CDA0F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v83, v92, v85);
    uint64_t v30 = v79;
    sub_241C61648(v26, v79, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    uint64_t v31 = v80;
    sub_241C61648(v26, v80, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    sub_241C61648((uint64_t)v78, v86, (uint64_t (*)(void))sub_241A68508);
    id v78 = v25;
    id v32 = v25;
    uint64_t v33 = sub_241CDA190();
    int v34 = sub_241CDB630();
    if (os_log_type_enabled(v33, (os_log_type_t)v34))
    {
      int v69 = v34;
      os_log_t v70 = v33;
      uint64_t v71 = v26;
      uint64_t v35 = swift_slowAlloc();
      int v36 = (void *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      v95[0] = v68;
      *(_DWORD *)uint64_t v35 = 136316162;
      uint64_t v37 = v83;
      uint64_t v38 = sub_241C38E70(v83, *(unsigned __int8 *)(v30 + *(int *)(v76 + 36)), 0xD00000000000003ALL);
      uint64_t v94 = sub_241A33FE4(v38, v39, v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v37, v85);
      sub_241C73BBC(v30, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
      *(_WORD *)(v35 + 12) = 2112;
      uint64_t v40 = sub_241CD7770();
      uint64_t v94 = v40;
      sub_241CDBBF0();
      *int v36 = v40;
      sub_241C73BBC(v31, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
      *(_WORD *)(v35 + 22) = 2080;
      uint64_t v41 = v86;
      uint64_t v42 = sub_241CDBBB0();
      uint64_t v94 = sub_241A33FE4(v42, v43, v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v41, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v35 + 32) = 2080;
      id v44 = objc_msgSend(v32, sel_kindRawValue);
      if (v44)
      {
        unint64_t v45 = v44;
        sub_241CDB0D0();

        char v46 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v46 = 22;
      }
      uint64_t v47 = v74;
      uint64_t v48 = v81;
      LOBYTE(v94) = v46;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v49 = sub_241CDBBB0();
      uint64_t v94 = sub_241A33FE4(v49, v50, v95);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 42) = 1024;
      unsigned int v51 = objc_msgSend(v32, sel_hasValueData);

      LODWORD(v94) = v51;
      sub_241CDBBF0();

      os_log_t v52 = v70;
      _os_log_impl(&dword_241A23000, v70, (os_log_type_t)v69, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v35, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      uint64_t v53 = v68;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v53, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v82, v47);
      uint64_t v26 = v71;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
      sub_241C73BBC(v30, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
      sub_241C73BBC(v31, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
      sub_241C73BBC(v86, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v29, v74);
    }
    uint64_t v12 = v75;
    uint64_t v17 = v76;
    uint64_t v14 = v72;
    id v25 = v78;
  }
  sub_241CD7790();
  os_log_t v54 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v90);
  uint64_t v55 = v26;
  int v56 = *(unsigned __int8 *)(v26 + *(int *)(v17 + 36));
  sub_241CD7A80();
  id v57 = v25;
  id v58 = objc_msgSend(v57, sel_data);
  if (v58)
  {
    id v59 = v58;
    uint64_t v60 = sub_241CD6AE0();
    unint64_t v62 = v61;
  }
  else
  {
    uint64_t v60 = 0;
    unint64_t v62 = 0xF000000000000000;
  }
  uint64_t v64 = v88;
  uint64_t v63 = v89;
  uint64_t v65 = (uint64_t)v87;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v66 = sub_241A54BF8(v60, v62, 1, v54, v56, v65);

  sub_241A54FC8(v60, v62);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v93, v63);
  v95[0] = sub_241C33194(v55, v92, v66);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C57BE0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v95 = a4;
  uint64_t v93 = a5;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v89 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v69 - v11;
  uint64_t v92 = sub_241CD7AF0();
  uint64_t v13 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v79 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v84 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v88 = (uint64_t)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v83 = (uint64_t)&v69 - v21;
  uint64_t v82 = sub_241CD7740();
  uint64_t v87 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v81 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v85 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v86 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SleepDurationValueSummarySharableModelGenerator(0);
  id v80 = (id)a3;
  id v25 = sub_241CCC93C(a1, a2);
  uint64_t v26 = a2;
  uint64_t v27 = a2 + *(int *)(v18 + 20);
  id v28 = (void *)sub_241CD7770();
  LODWORD(a2) = objc_msgSend(v28, sel_isAbleToWriteHealthSensitiveLogs);

  uint64_t v94 = v12;
  if (a2)
  {
    uint64_t v75 = v27;
    uint64_t v76 = v23;
    uint64_t v78 = v18;
    uint64_t v74 = v15;
    uint64_t v77 = v13;
    uint64_t v29 = v86;
    sub_241CDA0F0();
    uint64_t v30 = (uint64_t)v81;
    uint64_t v31 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v81, v95, v82);
    uint64_t v32 = v83;
    sub_241C61648(v26, v83, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    sub_241C61648(v26, v88, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    uint64_t v33 = v84;
    sub_241C61648((uint64_t)v80, v84, (uint64_t (*)(void))sub_241A68508);
    id v80 = v25;
    id v34 = v25;
    uint64_t v35 = sub_241CDA190();
    int v36 = sub_241CDB630();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      int v70 = v36;
      os_log_t v71 = v35;
      uint64_t v73 = v26;
      uint64_t v37 = swift_slowAlloc();
      int v69 = (void *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      v97[0] = v72;
      *(_DWORD *)uint64_t v37 = 136316162;
      uint64_t v38 = sub_241C38E70(v30, *(unsigned __int8 *)(v32 + *(int *)(v78 + 40)), 0xD000000000000033);
      uint64_t v96 = sub_241A33FE4(v38, v39, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v30, v31);
      uint64_t v40 = v34;
      sub_241C73BBC(v32, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v37 + 12) = 2112;
      uint64_t v41 = v88;
      uint64_t v42 = sub_241CD7770();
      uint64_t v96 = v42;
      sub_241CDBBF0();
      unint64_t v43 = v69;
      *int v69 = v42;
      sub_241C73BBC(v41, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v37 + 22) = 2080;
      uint64_t v44 = sub_241CDBBB0();
      uint64_t v96 = sub_241A33FE4(v44, v45, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v33, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v37 + 32) = 2080;
      id v46 = objc_msgSend(v34, sel_kindRawValue);
      if (v46)
      {
        uint64_t v47 = v46;
        sub_241CDB0D0();

        char v48 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v48 = 22;
      }
      uint64_t v49 = v76;
      uint64_t v50 = v85;
      LOBYTE(v96) = v48;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v51 = sub_241CDBBB0();
      uint64_t v96 = sub_241A33FE4(v51, v52, v97);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 42) = 1024;
      unsigned int v53 = objc_msgSend(v40, sel_hasValueData);

      LODWORD(v96) = v53;
      sub_241CDBBF0();

      os_log_t v54 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v70, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v37, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v43, -1, -1);
      uint64_t v55 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v55, -1, -1);
      MEMORY[0x245637F20](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v86, v49);
      uint64_t v26 = v73;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v30, v31);
      sub_241C73BBC(v32, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v88, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v33, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v29, v76);
    }
    uint64_t v13 = v77;
    uint64_t v18 = v78;
    uint64_t v15 = v74;
    id v25 = v80;
  }
  sub_241CD7790();
  int v56 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v92);
  uint64_t v57 = v26;
  int v58 = *(unsigned __int8 *)(v26 + *(int *)(v18 + 40));
  sub_241CD7A80();
  id v59 = v25;
  id v60 = objc_msgSend(v59, sel_data);
  if (v60)
  {
    unint64_t v61 = v60;
    uint64_t v62 = sub_241CD6AE0();
    unint64_t v64 = v63;
  }
  else
  {
    uint64_t v62 = 0;
    unint64_t v64 = 0xF000000000000000;
  }
  uint64_t v66 = v90;
  uint64_t v65 = v91;
  uint64_t v67 = (uint64_t)v89;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v68 = sub_241A54BF8(v62, v64, 1, v56, v58, v67);

  sub_241A54FC8(v62, v64);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v94, v65);
  v97[0] = sub_241C33878(v57, v95, v68);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C585F4(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v91 = a5;
  uint64_t v92 = a4;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v87 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v93 = (char *)&v67 - v11;
  uint64_t v90 = sub_241CD7AF0();
  uint64_t v12 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v77 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v86 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v80 = (uint64_t)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v79 = (uint64_t)&v67 - v20;
  uint64_t v21 = sub_241CD7740();
  uint64_t v84 = *(void *)(v21 - 8);
  uint64_t v85 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v83 = (uint64_t)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v81 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v82 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = a3;
  id v25 = (void *)sub_241CD1300(a1, a2, a3);
  uint64_t v26 = a2;
  uint64_t v27 = a2 + *(int *)(v17 + 28);
  id v28 = (void *)sub_241CD7770();
  LODWORD(a3) = objc_msgSend(v28, sel_isAbleToWriteHealthSensitiveLogs);

  if (a3)
  {
    uint64_t v73 = v27;
    uint64_t v74 = v23;
    uint64_t v76 = v17;
    uint64_t v72 = v14;
    uint64_t v75 = v12;
    uint64_t v29 = v82;
    sub_241CDA0F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v83, v92, v85);
    uint64_t v30 = v79;
    sub_241C61648(v26, v79, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v31 = v80;
    sub_241C61648(v26, v80, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
    sub_241C61648((uint64_t)v78, v86, (uint64_t (*)(void))sub_241A68508);
    uint64_t v78 = v25;
    id v32 = v25;
    uint64_t v33 = sub_241CDA190();
    int v34 = sub_241CDB630();
    if (os_log_type_enabled(v33, (os_log_type_t)v34))
    {
      int v69 = v34;
      os_log_t v70 = v33;
      uint64_t v71 = v26;
      uint64_t v35 = swift_slowAlloc();
      int v36 = (void *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      v95[0] = v68;
      *(_DWORD *)uint64_t v35 = 136316162;
      uint64_t v37 = v83;
      uint64_t v38 = sub_241C38E70(v83, *(unsigned __int8 *)(v30 + *(int *)(v76 + 24)), 0xD00000000000003CLL);
      uint64_t v94 = sub_241A33FE4(v38, v39, v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v37, v85);
      sub_241C73BBC(v30, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v35 + 12) = 2112;
      uint64_t v40 = sub_241CD7770();
      uint64_t v94 = v40;
      sub_241CDBBF0();
      *int v36 = v40;
      sub_241C73BBC(v31, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
      *(_WORD *)(v35 + 22) = 2080;
      uint64_t v41 = v86;
      uint64_t v42 = sub_241CDBBB0();
      uint64_t v94 = sub_241A33FE4(v42, v43, v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v41, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v35 + 32) = 2080;
      id v44 = objc_msgSend(v32, sel_kindRawValue);
      if (v44)
      {
        unint64_t v45 = v44;
        sub_241CDB0D0();

        char v46 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v46 = 22;
      }
      uint64_t v47 = v74;
      uint64_t v48 = v81;
      LOBYTE(v94) = v46;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v49 = sub_241CDBBB0();
      uint64_t v94 = sub_241A33FE4(v49, v50, v95);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 42) = 1024;
      unsigned int v51 = objc_msgSend(v32, sel_hasValueData);

      LODWORD(v94) = v51;
      sub_241CDBBF0();

      os_log_t v52 = v70;
      _os_log_impl(&dword_241A23000, v70, (os_log_type_t)v69, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v35, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      uint64_t v53 = v68;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v53, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v82, v47);
      uint64_t v26 = v71;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
      sub_241C73BBC(v30, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v31, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
      sub_241C73BBC(v86, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v29, v74);
    }
    uint64_t v12 = v75;
    uint64_t v17 = v76;
    uint64_t v14 = v72;
    id v25 = v78;
  }
  sub_241CD7790();
  os_log_t v54 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v90);
  uint64_t v55 = v26;
  int v56 = *(unsigned __int8 *)(v26 + *(int *)(v17 + 24));
  sub_241CD7A80();
  id v57 = v25;
  id v58 = objc_msgSend(v57, sel_data);
  if (v58)
  {
    id v59 = v58;
    uint64_t v60 = sub_241CD6AE0();
    unint64_t v62 = v61;
  }
  else
  {
    uint64_t v60 = 0;
    unint64_t v62 = 0xF000000000000000;
  }
  uint64_t v64 = v88;
  uint64_t v63 = v89;
  uint64_t v65 = (uint64_t)v87;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241CD7A80();
  uint64_t v66 = sub_241A54BF8(v60, v62, 1, v54, v56, v65);

  sub_241A54FC8(v60, v62);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v93, v63);
  v95[0] = sub_241C33F5C(v55, v92, v66);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

void sub_241C58FD0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v94 = a5;
  uint64_t v92 = a8;
  sub_241A68508(0);
  uint64_t v79 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v91 = (uint64_t)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(*(void *)(a7 + 8) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v89 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v18 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v88 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v81 = (char *)&v68 - v20;
  uint64_t v21 = sub_241CD7740();
  uint64_t v86 = *(void *)(v21 - 8);
  uint64_t v87 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v85 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v82 = *(void *)(v23 - 8);
  uint64_t v83 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v84 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = *(uint64_t (**)(uint64_t, uint64_t, NSObject *, uint64_t, uint64_t))(a7 + 48);
  os_log_t v80 = a4;
  uint64_t v26 = a1;
  uint64_t v93 = (void *)v25(a2, a3, a4, a6, a7);
  uint64_t v27 = v16;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24);
  uint64_t v90 = AssociatedTypeWitness;
  uint64_t v30 = (void *)v29(AssociatedTypeWitness, AssociatedConformanceWitness);
  LODWORD(AssociatedTypeWitness) = objc_msgSend(v30, sel_isAbleToWriteHealthSensitiveLogs);

  uint64_t v31 = v94;
  if (AssociatedTypeWitness)
  {
    uint64_t v71 = v29;
    uint64_t v72 = AssociatedConformanceWitness + 24;
    uint64_t v73 = AssociatedConformanceWitness;
    uint64_t v77 = v16;
    uint64_t v75 = a7;
    uint64_t v74 = v26;
    uint64_t v78 = a6;
    id v32 = v84;
    sub_241CDA0F0();
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v85, v31, v87);
    uint64_t v33 = v90;
    int v34 = (void (*)(char *, uint64_t, uint64_t))v89[2];
    uint64_t v35 = v81;
    v34(v81, a3, v90);
    uint64_t v76 = a3;
    v34(v88, a3, v33);
    sub_241C61648((uint64_t)v80, v91, (uint64_t (*)(void))sub_241A68508);
    int v36 = v93;
    uint64_t v37 = sub_241CDA190();
    int v38 = sub_241CDB630();
    if (os_log_type_enabled(v37, (os_log_type_t)v38))
    {
      int v69 = v38;
      os_log_t v80 = v37;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = (void *)swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      v96[0] = v70;
      *(_DWORD *)uint64_t v39 = 136316162;
      uint64_t v41 = v73;
      uint64_t v42 = v90;
      (*(void (**)(uint64_t, uint64_t))(v73 + 40))(v90, v73);
      unint64_t v43 = v85;
      uint64_t v44 = static SummaryModelGenerating.logPrefix(_:_:)();
      uint64_t v95 = sub_241A33FE4(v44, v45, v96);
      uint64_t v68 = v36;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v43, v87);
      char v46 = (void (*)(char *, uint64_t))v89[1];
      v46(v35, v42);
      *(_WORD *)(v39 + 12) = 2112;
      uint64_t v47 = v88;
      uint64_t v48 = v71(v42, v41);
      uint64_t v95 = v48;
      sub_241CDBBF0();
      uint64_t v89 = v40;
      *uint64_t v40 = v48;
      v46(v47, v42);
      *(_WORD *)(v39 + 22) = 2080;
      uint64_t v49 = v91;
      uint64_t v50 = sub_241CDBBB0();
      uint64_t v95 = sub_241A33FE4(v50, v51, v96);
      os_log_t v52 = v68;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241C73BBC(v49, (uint64_t (*)(void))sub_241A68508);
      *(_WORD *)(v39 + 32) = 2080;
      id v53 = objc_msgSend(v52, sel_kindRawValue);
      if (v53)
      {
        os_log_t v54 = v53;
        sub_241CDB0D0();

        char v55 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v55 = 22;
      }
      uint64_t v59 = v82;
      uint64_t v58 = v83;
      LOBYTE(v95) = v55;
      sub_241A31144(0, &qword_26B034E20, (uint64_t)&type metadata for HKCodableSummaryCurrentValue.Kind, MEMORY[0x263F8D8F0]);
      uint64_t v60 = sub_241CDBBB0();
      uint64_t v95 = sub_241A33FE4(v60, v61, v96);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 42) = 1024;
      unsigned int v62 = objc_msgSend(v52, sel_hasValueData);

      LODWORD(v95) = v62;
      sub_241CDBBF0();

      os_log_t v63 = v80;
      _os_log_impl(&dword_241A23000, v80, (os_log_type_t)v69, "%s: Generated current value for %@ with boundedDataPresentDateInterval=%s, valueKind=%s, hasValueData=%{BOOL}d", (uint8_t *)v39, 0x30u);
      sub_241C62EA0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
      uint64_t v64 = v89;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v64, -1, -1);
      uint64_t v65 = v70;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v65, -1, -1);
      MEMORY[0x245637F20](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v59 + 8))(v84, v58);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v87);
      uint64_t v56 = v90;
      id v57 = (void (*)(char *, uint64_t))v89[1];
      v57(v35, v90);
      v57(v88, v56);
      sub_241C73BBC(v91, (uint64_t (*)(void))sub_241A68508);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v32, v83);
    }
    uint64_t v27 = v77;
    a6 = v78;
    uint64_t v31 = v94;
    a3 = v76;
  }
  uint64_t v66 = v93;
  uint64_t v67 = static CurrentValueSummaryModelGenerating.summaryData(request:currentValue:)(a3, v93);
  v96[0] = sub_241BAAA50(a3, v31, v67, a6, v27);
  sub_241B6F648(0);
  sub_241CDA5D0();
}

uint64_t sub_241C598A8(uint64_t a1)
{
  if ((*(unsigned char *)(v1 + *(int *)(a1 + 20)) & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241CEB730;
  uint64_t v3 = (void *)sub_241CD7770();
  sub_241CDB470();

  return v2;
}

uint64_t sub_241C599D4(uint64_t a1)
{
  if ((*(unsigned char *)(v1 + *(int *)(a1 + 36)) & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241CEB730;
  uint64_t v3 = (void *)sub_241CD7770();
  sub_241CDB470();

  return v2;
}

uint64_t sub_241C59AF0(uint64_t a1)
{
  if ((*(unsigned char *)(v1 + *(int *)(a1 + 40)) & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241CEB730;
  uint64_t v3 = (void *)sub_241CD7770();
  sub_241CDB470();

  return v2;
}

uint64_t sub_241C59C0C()
{
  uint64_t v0 = sub_241CD6D00();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD67B0();
  sub_241CD6770();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_241C59CE8(uint64_t a1)
{
  if ((*(unsigned char *)(v1 + *(int *)(a1 + 24)) & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  sub_241A29CE8(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241CEB730;
  uint64_t v3 = (void *)sub_241CD7770();
  sub_241CDB470();

  return v2;
}

uint64_t sub_241C59E04(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_241C59E14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = (2 * a2) | 1;
  return result;
}

uint64_t sub_241C59E28(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 4;
  uint64_t result = sub_241CDBBF0();
  *a1 = v5;
  return result;
}

uint64_t sub_241C59E88@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_241C59EB8(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_241C59EE4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_241C59F0C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_241CDC1D0();
  swift_bridgeObjectRetain();
  sub_241CDB170();
  uint64_t v8 = sub_241CDC200();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_241CDC100() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_241CDC100() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_241C5B8A0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_241C5A0BC(uint64_t a1, char *a2)
{
  return sub_241C5A110(a1, a2, MEMORY[0x263F45588], (void (*)(uint64_t))sub_241C6C848, (void (*)(void, void, void))sub_241C5BA3C, (void (*)(uint64_t))sub_241C6C87C);
}

uint64_t sub_241C5A110(uint64_t a1, char *a2, uint64_t (*a3)(void), void (*a4)(uint64_t), void (*a5)(void, void, void), void (*a6)(uint64_t))
{
  unint64_t v45 = a6;
  uint64_t v9 = v6;
  uint64_t v12 = a3(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v37 - v15;
  uint64_t v17 = *v6;
  a4(v14);
  swift_bridgeObjectRetain();
  char v46 = a2;
  uint64_t v18 = sub_241CDAFC0();
  uint64_t v19 = -1 << *(unsigned char *)(v17 + 32);
  unint64_t v20 = v18 & ~v19;
  uint64_t v44 = v17 + 56;
  uint64_t v21 = *(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20;
  uint64_t v41 = a1;
  if (v21)
  {
    uint64_t v39 = a5;
    uint64_t v40 = v6;
    uint64_t v42 = ~v19;
    uint64_t v38 = v13;
    uint64_t v24 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v23 = v13 + 16;
    uint64_t v22 = v24;
    uint64_t v43 = *(void *)(v23 + 56);
    id v25 = (void (**)(char *, uint64_t))(v23 - 8);
    v37[1] = v23 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v26 = v17;
      unint64_t v27 = v43 * v20;
      unint64_t v28 = *(void *)(v17 + 48) + v43 * v20;
      uint64_t v29 = v22;
      uint64_t v30 = ((uint64_t (*)(char *, unint64_t, uint64_t))v22)(v16, v28, v12);
      v45(v30);
      char v31 = sub_241CDB050();
      id v32 = *v25;
      (*v25)(v16, v12);
      if (v31) {
        break;
      }
      unint64_t v20 = (v20 + 1) & v42;
      uint64_t v22 = v29;
      uint64_t v17 = v26;
      if (((*(void *)(v44 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a5 = v39;
        uint64_t v9 = v40;
        uint64_t v33 = v38;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v32(v46, v12);
    v29(v41, *(void *)(*v40 + 48) + v27, v12);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v33 = v13;
LABEL_7:
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = v46;
    v22(v16, v46, v12);
    uint64_t v47 = *v9;
    uint64_t *v9 = 0x8000000000000000;
    a5(v16, v20, isUniquelyReferenced_nonNull_native);
    uint64_t *v9 = v47;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v41, v35, v12);
    return 1;
  }
}

uint64_t sub_241C5A3F8(void *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  uint64_t v11 = v6;
  uint64_t v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0) {
      uint64_t v15 = *v6;
    }
    else {
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v16 = a2;
    uint64_t v17 = sub_241CDBD10();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_241A313AC(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_241CDBD00();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = sub_241C5A6E4(v15, result + 1, a5, a3, a4, a6);
    uint64_t v43 = v29;
    unint64_t v30 = *(void *)(v29 + 16);
    if (*(void *)(v29 + 24) <= v30)
    {
      uint64_t v35 = a5;
      uint64_t v36 = v30 + 1;
      id v37 = v16;
      sub_241C5B340(v36, v35, a3, a4, a6);
      uint64_t v31 = v43;
    }
    else
    {
      uint64_t v31 = v29;
      id v32 = v16;
    }
    sub_241C5B5DC((uint64_t)v16, v31);
    *uint64_t v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_241CDBB50();
    uint64_t v20 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v21 = v19 & ~v20;
    uint64_t v40 = a4;
    if ((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
    {
      sub_241A313AC(0, a3);
      id v22 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
      char v23 = sub_241CDBB60();

      if (v23)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v27 = *(void **)(*(void *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        id v28 = v27;
        return 0;
      }
      uint64_t v24 = ~v20;
      while (1)
      {
        unint64_t v21 = (v21 + 1) & v24;
        if (((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        id v25 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
        char v26 = sub_241CDBB60();

        if (v26) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    id v34 = a2;
    sub_241C5BFFC((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    *uint64_t v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

uint64_t sub_241C5A6E4(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  if (a2)
  {
    sub_241C715CC(0, a3, a4, a5, a6);
    uint64_t v10 = sub_241CDBDD0();
    uint64_t v23 = v10;
    sub_241CDBCB0();
    if (sub_241CDBD40())
    {
      sub_241A313AC(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v10 = v23;
        unint64_t v17 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v17)
        {
          sub_241C5B340(v17 + 1, a3, a4, a5, a6);
          uint64_t v10 = v23;
        }
        uint64_t result = sub_241CDBB50();
        uint64_t v12 = v10 + 56;
        uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
        unint64_t v14 = result & ~v13;
        unint64_t v15 = v14 >> 6;
        if (((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v15 == v19;
            if (v15 == v19) {
              unint64_t v15 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          unint64_t v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(void *)(*(void *)(v10 + 48) + 8 * v16) = v22;
        ++*(void *)(v10 + 16);
      }
      while (sub_241CDBD40());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v10;
}

uint64_t sub_241C5A90C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241CD7520();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_241C6C920(0);
  uint64_t v7 = sub_241CDBDC0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_37;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v38 = (void *)(v6 + 56);
  uint64_t v39 = v3;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  uint64_t v36 = v0;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v40 = v3 + 32;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v19 >= v37) {
      break;
    }
    BOOL v20 = v38;
    unint64_t v21 = v38[v19];
    ++v15;
    if (!v21)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v37) {
        goto LABEL_31;
      }
      unint64_t v21 = v38[v15];
      if (!v21)
      {
        int64_t v22 = v19 + 2;
        if (v22 >= v37)
        {
LABEL_31:
          swift_release();
          uint64_t v1 = v36;
          goto LABEL_33;
        }
        unint64_t v21 = v38[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v15 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_39;
            }
            if (v15 >= v37) {
              goto LABEL_31;
            }
            unint64_t v21 = v38[v15];
            ++v22;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v15 = v22;
      }
    }
LABEL_21:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v15 << 6);
LABEL_22:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v39 + 72);
    unint64_t v25 = *(void *)(v6 + 48) + v24 * v18;
    char v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
    v26(v5, v25, v2);
    sub_241C6C954();
    uint64_t result = sub_241CDAFC0();
    uint64_t v27 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v13 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v13 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v13 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v8 + 48) + v16 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  swift_release();
  uint64_t v1 = v36;
  BOOL v20 = v38;
LABEL_33:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 > 63) {
    bzero(v20, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v20 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_241C5AC98()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_241A360C4();
  uint64_t v3 = sub_241CDBDC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  unint64_t v31 = v0;
  uint64_t v32 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_22;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v16 >= v8) {
      break;
    }
    unint64_t v17 = (void *)(v2 + 56);
    unint64_t v18 = *(void *)(v32 + 8 * v16);
    ++v11;
    if (!v18)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v8) {
        goto LABEL_31;
      }
      unint64_t v18 = *(void *)(v32 + 8 * v11);
      if (!v18)
      {
        int64_t v19 = v16 + 2;
        if (v19 >= v8)
        {
LABEL_31:
          swift_release();
          uint64_t v1 = v31;
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v32 + 8 * v19);
        if (!v18)
        {
          while (1)
          {
            int64_t v11 = v19 + 1;
            if (__OFADD__(v19, 1)) {
              goto LABEL_39;
            }
            if (v11 >= v8) {
              goto LABEL_31;
            }
            unint64_t v18 = *(void *)(v32 + 8 * v11);
            ++v19;
            if (v18) {
              goto LABEL_21;
            }
          }
        }
        int64_t v11 = v19;
      }
    }
LABEL_21:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_22:
    BOOL v20 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    sub_241CDC1D0();
    sub_241CDB170();
    uint64_t result = sub_241CDC200();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v9 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v21;
    v13[1] = v22;
    ++*(void *)(v4 + 16);
  }
  swift_release();
  uint64_t v1 = v31;
  unint64_t v17 = (void *)(v2 + 56);
LABEL_33:
  uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
  if (v30 > 63) {
    bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v17 = -1 << v30;
  }
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_241C5AF5C(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v47 = a4;
  uint64_t v6 = v4;
  uint64_t v50 = a2(0);
  uint64_t v7 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v49 = (char *)&v41 - v8;
  uint64_t v9 = *v4;
  a3(0);
  uint64_t v10 = sub_241CDBDC0();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 56);
    uint64_t v44 = (void *)(v9 + 56);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    uint64_t v42 = v6;
    int64_t v43 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v46 = v7;
    uint64_t v16 = v10 + 56;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v45 = v11;
    uint64_t v19 = v50;
    uint64_t v20 = v11;
    while (1)
    {
      if (v15)
      {
        unint64_t v22 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        int64_t v48 = v18;
        unint64_t v23 = v22 | (v18 << 6);
      }
      else
      {
        int64_t v24 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v43) {
          goto LABEL_33;
        }
        unint64_t v25 = v44[v24];
        int64_t v26 = v18 + 1;
        if (!v25)
        {
          int64_t v26 = v18 + 2;
          if (v18 + 2 >= v43) {
            goto LABEL_33;
          }
          unint64_t v25 = v44[v26];
          if (!v25)
          {
            int64_t v26 = v18 + 3;
            if (v18 + 3 >= v43) {
              goto LABEL_33;
            }
            unint64_t v25 = v44[v26];
            if (!v25)
            {
              uint64_t v27 = v18 + 4;
              if (v18 + 4 >= v43)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v42;
                uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
                if (v40 > 63) {
                  bzero(v44, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v44 = -1 << v40;
                }
                *(void *)(v9 + 16) = 0;
                break;
              }
              unint64_t v25 = v44[v27];
              if (!v25)
              {
                while (1)
                {
                  int64_t v26 = v27 + 1;
                  if (__OFADD__(v27, 1)) {
                    goto LABEL_39;
                  }
                  if (v26 >= v43) {
                    goto LABEL_33;
                  }
                  unint64_t v25 = v44[v26];
                  ++v27;
                  if (v25) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v26 = v18 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v15 = (v25 - 1) & v25;
        int64_t v48 = v26;
        unint64_t v23 = __clz(__rbit64(v25)) + (v26 << 6);
      }
      uint64_t v28 = v9;
      uint64_t v29 = *(void *)(v9 + 48);
      uint64_t v30 = *(void *)(v46 + 72);
      unint64_t v31 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v46 + 32);
      uint64_t v32 = v31(v49, v29 + v30 * v23, v19);
      v47(v32);
      uint64_t result = sub_241CDAFC0();
      uint64_t v11 = v20;
      uint64_t v33 = -1 << *(unsigned char *)(v20 + 32);
      unint64_t v34 = result & ~v33;
      unint64_t v35 = v34 >> 6;
      if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v36 = 0;
        unint64_t v37 = (unint64_t)(63 - v33) >> 6;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v38 = v35 == v37;
          if (v35 == v37) {
            unint64_t v35 = 0;
          }
          v36 |= v38;
          uint64_t v39 = *(void *)(v16 + 8 * v35);
        }
        while (v39 == -1);
        unint64_t v21 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(void *)(v16 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      uint64_t result = v31((char *)(*(void *)(v20 + 48) + v21 * v30), (unint64_t)v49, v50);
      ++*(void *)(v20 + 16);
      uint64_t v9 = v28;
      int64_t v18 = v48;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v11;
  return result;
}

uint64_t sub_241C5B340(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_241C715CC(0, a2, a3, a4, a5);
  uint64_t v8 = sub_241CDBDC0();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    uint64_t v33 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v11 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 56);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v15 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v22 = v11[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_33;
            }
            unint64_t v22 = v11[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
                if (v32 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v11 = -1 << v32;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v14) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v11[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
      uint64_t result = sub_241CDBB50();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v9;
  return result;
}

unint64_t sub_241C5B5DC(uint64_t a1, uint64_t a2)
{
  sub_241CDBB50();
  unint64_t result = sub_241CDBC90();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_241C5B660(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_241CD7520();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  char v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_241C5A90C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_241C5C1B4();
      goto LABEL_12;
    }
    sub_241C5CA34();
  }
  uint64_t v12 = *v3;
  sub_241C6C954();
  uint64_t v13 = sub_241CDAFC0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    int64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_241C6C988();
      char v21 = sub_241CDB050();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_241CDC160();
  __break(1u);
  return result;
}

uint64_t sub_241C5B8A0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_241C5AC98();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_241C5C42C();
      goto LABEL_22;
    }
    sub_241C5CD7C();
  }
  uint64_t v11 = *v4;
  sub_241CDC1D0();
  sub_241CDB170();
  uint64_t result = sub_241CDC200();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_241CDC100(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_241CDC160();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_241CDC100();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_241C5BA3C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_241CD73B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_241C5AF5C(v12, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848);
  }
  else
  {
    if (v11 > v10)
    {
      sub_241C5C5C8(MEMORY[0x263F45588], sub_241C6C8B0);
      goto LABEL_12;
    }
    sub_241C5D004(v12, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848);
  }
  uint64_t v13 = *v3;
  sub_241C6C848();
  uint64_t v14 = sub_241CDAFC0();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v9, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_241C6C87C();
      char v22 = sub_241CDB050();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v9, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_241CDC160();
  __break(1u);
  return result;
}

uint64_t sub_241C5BD1C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_241CDA0B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_241C5AF5C(v12, MEMORY[0x263F8F3A0], sub_241C6CA24, (void (*)(uint64_t))sub_241C6C9BC);
  }
  else
  {
    if (v11 > v10)
    {
      sub_241C5C5C8(MEMORY[0x263F8F3A0], sub_241C6CA24);
      goto LABEL_12;
    }
    sub_241C5D004(v12, MEMORY[0x263F8F3A0], sub_241C6CA24, (void (*)(uint64_t))sub_241C6C9BC);
  }
  uint64_t v13 = *v3;
  sub_241C6C9BC();
  uint64_t v14 = sub_241CDAFC0();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v9, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_241C6C9F0();
      char v22 = sub_241CDB050();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v9, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_241CDC160();
  __break(1u);
  return result;
}

void sub_241C5BFFC(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = v11 + 1;
  if (a3)
  {
    sub_241C5B340(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_241C5C87C(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_241C5D394(v13, a4, a5, a6, a7);
  }
  uint64_t v14 = *v7;
  uint64_t v15 = sub_241CDBB50();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_241A313AC(0, a5);
    id v17 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
    char v18 = sub_241CDBB60();

    if (v18)
    {
LABEL_13:
      sub_241CDC160();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
        char v21 = sub_241CDBB60();

        if (v21) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v22 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = a1;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v25;
  }
}

void *sub_241C5C1B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241CD7520();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6C920(0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_241CDBDB0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v8;
    return result;
  }
  BOOL v24 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v25 = v6 + 56;
  uint64_t v26 = v8;
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v16) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v12);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v19, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v26 + 48) + v19, v5, v2);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v16)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    uint64_t v8 = v26;
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_241C5C42C()
{
  uint64_t v1 = v0;
  sub_241A360C4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241CDBDB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_241C5C5C8(uint64_t (*a1)(void), void (*a2)(void))
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - v7;
  a2(0);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_241CDBDB0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  uint64_t v26 = v4;
  BOOL v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_241C5C87C(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_241C715CC(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_241CDBDB0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v5 = v8;
    return result;
  }
  id result = (id)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v10 + 8 * v13);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    unint64_t v21 = *(void **)(*(void *)(v6 + 48) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v17) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_241C5CA34()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241CD7520();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_241C6C920(0);
  uint64_t v7 = sub_241CDBDC0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36) {
      goto LABEL_31;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_31;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21) {
        break;
      }
    }
LABEL_21:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_22:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_241C6C954();
    uint64_t result = sub_241CDAFC0();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v36)
  {
LABEL_31:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_33;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_31;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_21;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_241C5CD7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_241A360C4();
  uint64_t v3 = sub_241CDBDC0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_32:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain_n();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_21;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v29) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_30;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v18 = v16 + 2;
        if (v18 >= v29)
        {
LABEL_30:
          uint64_t result = swift_release_n();
          uint64_t v1 = v0;
          goto LABEL_32;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v18);
        int64_t v11 = v18;
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_21:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_241CDC1D0();
    swift_bridgeObjectRetain();
    sub_241CDB170();
    uint64_t result = sub_241CDC200();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_241C5D004(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v44 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = *v4;
  a3(0);
  uint64_t v12 = sub_241CDBDC0();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v6 = v13;
    return result;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 56);
  uint64_t v39 = v4;
  uint64_t v40 = v11 + 56;
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int64_t v41 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v42 = v8 + 16;
  uint64_t v18 = v12 + 56;
  uint64_t v43 = v8;
  unint64_t v19 = (uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v41) {
      goto LABEL_33;
    }
    unint64_t v26 = *(void *)(v40 + 8 * v25);
    ++v21;
    if (!v26)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v41) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v40 + 8 * v21);
      if (!v26)
      {
        int64_t v21 = v25 + 2;
        if (v25 + 2 >= v41) {
          goto LABEL_33;
        }
        unint64_t v26 = *(void *)(v40 + 8 * v21);
        if (!v26) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    uint64_t v28 = v11;
    uint64_t v29 = *(void *)(v11 + 48);
    uint64_t v30 = *(void *)(v43 + 72);
    uint64_t v31 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v43 + 16))(v10, v29 + v30 * v24, v7);
    v44(v31);
    uint64_t result = sub_241CDAFC0();
    uint64_t v32 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v18 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v33) & ~*(void *)(v18 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v18 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v22 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t result = (*v19)(*(void *)(v13 + 48) + v22 * v30, v10, v7);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v28;
  }
  int64_t v27 = v25 + 3;
  if (v27 >= v41)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v39;
    goto LABEL_35;
  }
  unint64_t v26 = *(void *)(v40 + 8 * v27);
  if (v26)
  {
    int64_t v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v21 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v21 >= v41) {
      goto LABEL_33;
    }
    unint64_t v26 = *(void *)(v40 + 8 * v21);
    ++v27;
    if (v26) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_241C5D394(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_241C715CC(0, a2, a3, a4, a5);
  uint64_t v8 = sub_241CDBDC0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v6 = v9;
    return result;
  }
  uint64_t v32 = v5;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v7 + 56);
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v15 = v8 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    id v24 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    uint64_t result = sub_241CDBB50();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
    ++*(void *)(v9 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v32;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_241C5D60C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_241C73F7C();
    uint64_t v3 = sub_241CDBDE0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      uint64_t v7 = *(void *)(v6 + 8 * v4);
      sub_241CDC1D0();
      sub_241CDC1E0();
      uint64_t result = sub_241CDC200();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(void *)(v14 + 8 * v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(void *)(v14 + 8 * v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(void *)(v14 + 8 * v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_241C5D74C(uint64_t a1)
{
  return sub_241C695CC(a1, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
}

uint64_t sub_241C5D7A0(unint64_t a1)
{
  return sub_241C6A314(a1, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
}

void sub_241C5D7C4()
{
  if (!qword_26B032560)
  {
    sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
    sub_241C5D8C8(255, (unint64_t *)&qword_26B032630, sub_241A68508);
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    sub_241C70AEC(&qword_26B038950, (unint64_t *)&qword_26B032630, sub_241A68508);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032560);
    }
  }
}

void sub_241C5D8C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDA510();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241C5D92C()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, AssociatedTypeWitness);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_241C5DA9C@<X0>(void (*a1)(unint64_t, char *, uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(sub_241CD7740() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = v8 + *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t result = sub_241C45270(a1, v2 + v8, v2 + ((v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v5, v6);
  *a2 = result;
  return result;
}

uint64_t sub_241C5DBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a1;
  uint64_t v3 = sub_241CD7690();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v40 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v6 = v5;
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v37 - v7;
  sub_241A68508(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v37 - v14;
  MEMORY[0x270FA5388](v13);
  BOOL v17 = (char *)&v37 - v16;
  uint64_t v18 = sub_241CD6810();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v39 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v46 = (char *)&v37 - v22;
  uint64_t v23 = type metadata accessor for ChartSharableModelGenerator.Request(0);
  sub_241C61648(a2 + *(int *)(v23 + 36), (uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
  uint64_t v45 = v19;
  id v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v24(v17, 1, v18) == 1)
  {
    sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v25 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v6);
  }
  else
  {
    BOOL v37 = v8;
    uint64_t v38 = v6;
    unint64_t v26 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v26(v46, v17, v18);
    sub_241CD77A0();
    if (v24(v15, 1, v18) == 1)
    {
      sub_241C73BBC((uint64_t)v15, (uint64_t (*)(void))sub_241A68508);
      uint64_t v27 = v45;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v12, 1, 1, v18);
      char v28 = v37;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v29 = v38;
      uint64_t v25 = sub_241CDA6D0();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v46, v18);
    }
    else
    {
      BOOL v30 = v39;
      v26(v39, v15, v18);
      uint64_t v31 = (void *)sub_241CD7770();
      uint64_t v33 = (uint64_t)v40;
      uint64_t v32 = v41;
      sub_241BEEA78();
      unint64_t v34 = v46;
      uint64_t v25 = sub_241C34640(v31, v33, v46, v30, v32, 0xD00000000000001BLL, 0x8000000241CE4200, (uint64_t)&unk_26F5C6AE8, (uint64_t)sub_241C6C8E8, (uint64_t)&unk_26F5C6B10, (char *)sub_241C6C904);

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v33, v43);
      char v35 = *(void (**)(char *, uint64_t))(v45 + 8);
      v35(v30, v18);
      v35(v34, v18);
    }
  }
  return v25;
}

uint64_t sub_241C5E140(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x270FA5388](v3);
  id v53 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  unint64_t v61 = *(char **)(v7 - 8);
  uint64_t v62 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v50 - v8;
  sub_241A68508(0);
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  BOOL v17 = (char *)v50 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v50 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v59 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v50 - v24;
  uint64_t v63 = a2;
  sub_241C61648(a2, (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  unint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v26(v19, 1, v20) == 1)
  {
    sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v27 = v62;
    uint64_t v28 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v61 + 1))(v9, v27);
  }
  else
  {
    os_log_t v52 = v9;
    v50[0] = *(void *)(v21 + 32);
    v50[1] = v11;
    ((void (*)(char *, char *, uint64_t))v50[0])(v25, v19, v20);
    uint64_t v51 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
    sub_241CD77A0();
    if (v26(v17, 1, v20) == 1)
    {
      sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v14, 1, 1, v20);
      uint64_t v29 = v52;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v30 = v62;
      uint64_t v28 = sub_241CDA6D0();
      (*((void (**)(void *, uint64_t))v61 + 1))(v29, v30);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
    else
    {
      unint64_t v61 = v25;
      uint64_t v62 = v20;
      ((void (*)(char *, char *, uint64_t))v50[0])(v59, v17, v20);
      os_log_t v52 = (void *)sub_241CD7770();
      uint64_t v31 = (void *)sub_241CD76E0();
      sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v64 = inited;
      sub_241CDB2E0();
      char v33 = *(unsigned char *)(v63 + *(int *)(v51 + 40));
      sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v34 = sub_241CD73B0();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(void *)(v35 + 72);
      unint64_t v37 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      uint64_t v38 = swift_allocObject();
      if (v33)
      {
        *(_OWORD *)(v38 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v38 + v37, *MEMORY[0x263F454D0], v34);
      }
      else
      {
        *(_OWORD *)(v38 + 16) = xmmword_241CEB720;
        uint64_t v40 = *(void (**)(unint64_t, void, uint64_t))(v35 + 104);
        v40(v38 + v37, *MEMORY[0x263F45520], v34);
        v40(v38 + v37 + v36, *MEMORY[0x263F45538], v34);
      }
      id v39 = v31;
      sub_241C695CC(v38, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v41 = v57;
      uint64_t v42 = v61;
      swift_deallocClassInstance();
      unint64_t v43 = swift_bridgeObjectRetain();
      sub_241C6A314(v43, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *MEMORY[0x263F45690], v55);
      uint64_t v44 = (uint64_t)v56;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      uint64_t v45 = v52;
      uint64_t v46 = v59;
      uint64_t v28 = sub_241C34640(v52, v44, v42, v59, v60, 0xD00000000000002FLL, 0x8000000241CE45C0, (uint64_t)&unk_26F5C72E0, (uint64_t)sub_241C72EFC, (uint64_t)&unk_26F5C7308, (char *)sub_241C72F18);

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v58);
      uint64_t v47 = *(void (**)(char *, uint64_t))(v21 + 8);
      uint64_t v48 = v62;
      v47(v46, v62);
      v47(v42, v48);
    }
  }
  return v28;
}

uint64_t sub_241C5EAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v57 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v60 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v54 - v8;
  sub_241A68508(0);
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  BOOL v17 = (char *)&v54 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v63 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v54 - v24;
  uint64_t v67 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v68 = a2;
  sub_241C61648(a2 + *(int *)(v67 + 28), (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  unint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v26(v19, 1, v20) == 1)
  {
    sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v27 = v66;
    uint64_t v28 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v9, v27);
  }
  else
  {
    uint64_t v54 = v14;
    uint64_t v55 = v11;
    uint64_t v56 = v9;
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v29(v25, v19, v20);
    sub_241CD77A0();
    if (v26(v17, 1, v20) == 1)
    {
      sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v54, 1, 1, v20);
      uint64_t v30 = v56;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v31 = v66;
      uint64_t v28 = sub_241CDA6D0();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v30, v31);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
    else
    {
      uint64_t v56 = v25;
      uint64_t v65 = v21;
      uint64_t v66 = v20;
      v29(v63, v17, v20);
      uint64_t v55 = (void *)sub_241CD7770();
      uint64_t v32 = (void *)sub_241CD76E0();
      sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v69 = inited;
      sub_241CDB2E0();
      char v34 = *(unsigned char *)(v68 + *(int *)(v67 + 36));
      sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v35 = sub_241CD73B0();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(void *)(v36 + 72);
      unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v39 = swift_allocObject();
      if (v34)
      {
        *(_OWORD *)(v39 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v36 + 104))(v39 + v38, *MEMORY[0x263F454D0], v35);
      }
      else
      {
        *(_OWORD *)(v39 + 16) = xmmword_241CEB720;
        unint64_t v41 = v39 + v38;
        uint64_t v42 = *(void (**)(unint64_t, void, uint64_t))(v36 + 104);
        v42(v41, *MEMORY[0x263F45520], v35);
        v42(v41 + v37, *MEMORY[0x263F45538], v35);
      }
      id v40 = v32;
      sub_241C695CC(v39, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v44 = v61;
      uint64_t v43 = v62;
      uint64_t v45 = v65;
      swift_deallocClassInstance();
      unint64_t v46 = swift_bridgeObjectRetain();
      sub_241C6A314(v46, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, *MEMORY[0x263F45690], v59);
      uint64_t v47 = (uint64_t)v60;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      uint64_t v48 = v55;
      uint64_t v49 = v56;
      uint64_t v50 = v63;
      uint64_t v28 = sub_241C34640(v55, v47, v56, v63, v64, 0xD000000000000032, 0x8000000241CE4110, (uint64_t)&unk_26F5C69D0, (uint64_t)sub_241C6AC9C, (uint64_t)&unk_26F5C69F8, (char *)sub_241C6ACB8);

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v47, v43);
      uint64_t v51 = *(void (**)(char *, uint64_t))(v45 + 8);
      uint64_t v52 = v66;
      v51(v50, v66);
      v51(v49, v52);
    }
  }
  return v28;
}

uint64_t sub_241C5F44C(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v57 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v60 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v54 - v8;
  sub_241A68508(0);
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  BOOL v17 = (char *)&v54 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v63 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v54 - v24;
  uint64_t v67 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v68 = a2;
  sub_241C61648(a2 + *(int *)(v67 + 28), (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  unint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v26(v19, 1, v20) == 1)
  {
    sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v27 = v66;
    uint64_t v28 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v9, v27);
  }
  else
  {
    uint64_t v54 = v14;
    uint64_t v55 = v11;
    uint64_t v56 = v9;
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v29(v25, v19, v20);
    sub_241CD77A0();
    if (v26(v17, 1, v20) == 1)
    {
      sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v54, 1, 1, v20);
      uint64_t v30 = v56;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v31 = v66;
      uint64_t v28 = sub_241CDA6D0();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v30, v31);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
    else
    {
      uint64_t v56 = v25;
      uint64_t v65 = v21;
      uint64_t v66 = v20;
      v29(v63, v17, v20);
      uint64_t v55 = (void *)sub_241CD7770();
      uint64_t v32 = (void *)sub_241CD76E0();
      sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v69 = inited;
      sub_241CDB2E0();
      char v34 = *(unsigned char *)(v68 + *(int *)(v67 + 36));
      sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v35 = sub_241CD73B0();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(void *)(v36 + 72);
      unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v39 = swift_allocObject();
      if (v34)
      {
        *(_OWORD *)(v39 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v36 + 104))(v39 + v38, *MEMORY[0x263F454D0], v35);
      }
      else
      {
        *(_OWORD *)(v39 + 16) = xmmword_241CEB720;
        unint64_t v41 = v39 + v38;
        uint64_t v42 = *(void (**)(unint64_t, void, uint64_t))(v36 + 104);
        v42(v41, *MEMORY[0x263F45520], v35);
        v42(v41 + v37, *MEMORY[0x263F45538], v35);
      }
      id v40 = v32;
      sub_241C695CC(v39, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v44 = v61;
      uint64_t v43 = v62;
      uint64_t v45 = v65;
      swift_deallocClassInstance();
      unint64_t v46 = swift_bridgeObjectRetain();
      sub_241C6A314(v46, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, *MEMORY[0x263F45690], v59);
      uint64_t v47 = (uint64_t)v60;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      uint64_t v48 = v55;
      uint64_t v49 = v56;
      uint64_t v50 = v63;
      uint64_t v28 = sub_241C34640(v55, v47, v56, v63, v64, 0xD000000000000034, 0x8000000241CE44C0, (uint64_t)&unk_26F5C70B0, (uint64_t)sub_241C71594, (uint64_t)&unk_26F5C70D8, (char *)sub_241C715B0);

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v47, v43);
      uint64_t v51 = *(void (**)(char *, uint64_t))(v45 + 8);
      uint64_t v52 = v66;
      v51(v50, v66);
      v51(v49, v52);
    }
  }
  return v28;
}

uint64_t sub_241C5FDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v57 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v60 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v54 - v8;
  sub_241A68508(0);
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  BOOL v17 = (char *)&v54 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v63 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v54 - v24;
  uint64_t v67 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v68 = a2;
  sub_241C61648(a2 + *(int *)(v67 + 28), (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  unint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v26(v19, 1, v20) == 1)
  {
    sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v27 = v66;
    uint64_t v28 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v9, v27);
  }
  else
  {
    uint64_t v54 = v14;
    uint64_t v55 = v11;
    uint64_t v56 = v9;
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v29(v25, v19, v20);
    sub_241CD77A0();
    if (v26(v17, 1, v20) == 1)
    {
      sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v54, 1, 1, v20);
      uint64_t v30 = v56;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v31 = v66;
      uint64_t v28 = sub_241CDA6D0();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v30, v31);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
    else
    {
      uint64_t v56 = v25;
      uint64_t v65 = v21;
      uint64_t v66 = v20;
      v29(v63, v17, v20);
      uint64_t v55 = (void *)sub_241CD7770();
      uint64_t v32 = (void *)sub_241CD76E0();
      sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v69 = inited;
      sub_241CDB2E0();
      char v34 = *(unsigned char *)(v68 + *(int *)(v67 + 36));
      sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v35 = sub_241CD73B0();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(void *)(v36 + 72);
      unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v39 = swift_allocObject();
      if (v34)
      {
        *(_OWORD *)(v39 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v36 + 104))(v39 + v38, *MEMORY[0x263F454D0], v35);
      }
      else
      {
        *(_OWORD *)(v39 + 16) = xmmword_241CEB720;
        unint64_t v41 = v39 + v38;
        uint64_t v42 = *(void (**)(unint64_t, void, uint64_t))(v36 + 104);
        v42(v41, *MEMORY[0x263F45520], v35);
        v42(v41 + v37, *MEMORY[0x263F45538], v35);
      }
      id v40 = v32;
      sub_241C695CC(v39, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v44 = v61;
      uint64_t v43 = v62;
      uint64_t v45 = v65;
      swift_deallocClassInstance();
      unint64_t v46 = swift_bridgeObjectRetain();
      sub_241C6A314(v46, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, *MEMORY[0x263F45690], v59);
      uint64_t v47 = (uint64_t)v60;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      uint64_t v48 = v55;
      uint64_t v49 = v56;
      uint64_t v50 = v63;
      uint64_t v28 = sub_241C34640(v55, v47, v56, v63, v64, 0xD000000000000036, 0x8000000241CE4090, (uint64_t)&unk_26F5C68B8, (uint64_t)sub_241C6AAC0, (uint64_t)&unk_26F5C68E0, (char *)sub_241C6AADC);

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v47, v43);
      uint64_t v51 = *(void (**)(char *, uint64_t))(v45 + 8);
      uint64_t v52 = v66;
      v51(v50, v66);
      v51(v49, v52);
    }
  }
  return v28;
}

uint64_t sub_241C60754(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x270FA5388](v3);
  id v53 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v61 = *(char **)(v7 - 8);
  uint64_t v62 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v50 - v8;
  sub_241A68508(0);
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  BOOL v17 = (char *)v50 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v50 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v59 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v50 - v24;
  uint64_t v63 = a2;
  sub_241C61648(a2, (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  unint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v26(v19, 1, v20) == 1)
  {
    sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v27 = v62;
    uint64_t v28 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v61 + 1))(v9, v27);
  }
  else
  {
    uint64_t v52 = v9;
    v50[0] = *(void *)(v21 + 32);
    v50[1] = v11;
    ((void (*)(char *, char *, uint64_t))v50[0])(v25, v19, v20);
    uint64_t v51 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
    sub_241CD77A0();
    if (v26(v17, 1, v20) == 1)
    {
      sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v14, 1, 1, v20);
      uint64_t v29 = v52;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v30 = v62;
      uint64_t v28 = sub_241CDA6D0();
      (*((void (**)(void *, uint64_t))v61 + 1))(v29, v30);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
    else
    {
      uint64_t v61 = v25;
      uint64_t v62 = v20;
      ((void (*)(char *, char *, uint64_t))v50[0])(v59, v17, v20);
      uint64_t v52 = (void *)sub_241CD7770();
      uint64_t v31 = (void *)sub_241CD76E0();
      sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v64 = inited;
      sub_241CDB2E0();
      char v33 = *(unsigned char *)(v63 + *(int *)(v51 + 40));
      sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v34 = sub_241CD73B0();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(void *)(v35 + 72);
      unint64_t v37 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      uint64_t v38 = swift_allocObject();
      if (v33)
      {
        *(_OWORD *)(v38 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v38 + v37, *MEMORY[0x263F454D0], v34);
      }
      else
      {
        *(_OWORD *)(v38 + 16) = xmmword_241CEB720;
        id v40 = *(void (**)(unint64_t, void, uint64_t))(v35 + 104);
        v40(v38 + v37, *MEMORY[0x263F45520], v34);
        v40(v38 + v37 + v36, *MEMORY[0x263F45538], v34);
      }
      id v39 = v31;
      sub_241C695CC(v38, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v41 = v57;
      uint64_t v42 = v61;
      swift_deallocClassInstance();
      unint64_t v43 = swift_bridgeObjectRetain();
      sub_241C6A314(v43, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *MEMORY[0x263F45690], v55);
      uint64_t v44 = (uint64_t)v56;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      uint64_t v45 = v52;
      unint64_t v46 = v59;
      uint64_t v28 = sub_241C34640(v52, v44, v42, v59, v60, 0xD000000000000036, 0x8000000241CE3EF0, (uint64_t)&unk_26F5C6570, (uint64_t)sub_241C62FD4, (uint64_t)&unk_26F5C6598, (char *)sub_241C62FF0);

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v58);
      uint64_t v47 = *(void (**)(char *, uint64_t))(v21 + 8);
      uint64_t v48 = v62;
      v47(v46, v62);
      v47(v42, v48);
    }
  }
  return v28;
}

uint64_t sub_241C610DC()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (int *)type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*((void *)v6 - 1) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*((void *)v6 - 1) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = v0 + v8;
  uint64_t v11 = sub_241CD6810();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  }
  uint64_t v13 = v3 | v7 | 7;
  uint64_t v14 = v10 + v6[5];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = v10 + v6[8];
  uint64_t v17 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);

  swift_release();

  return MEMORY[0x270FA0238](v0, v8 + v9, v13);
}

uint64_t sub_241C61338@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C38F84, a2);
}

void sub_241C61364()
{
  if (!qword_268D43560)
  {
    sub_241C6CDB0(255, &qword_268D43568, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper);
    sub_241C6148C(255, &qword_268D43570, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper);
    sub_241C62F74(&qword_268D43578, (uint64_t)&qword_268D43568, (void (*)(uint64_t, uint64_t, unint64_t *, ValueMetadata *))sub_241C6CDB0);
    sub_241C62F74(&qword_268D43580, (uint64_t)&qword_268D43570, (void (*)(uint64_t, uint64_t, unint64_t *, ValueMetadata *))sub_241C6148C);
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43560);
    }
  }
}

void sub_241C6148C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_241A31144(255, a3, a4, (uint64_t (*)(void, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    unint64_t v5 = sub_241CDA510();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241C61508()
{
  if (!qword_268D43588)
  {
    sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
    sub_241C61364();
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43590, (void (*)(uint64_t))sub_241C61364);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43588);
    }
  }
}

uint64_t sub_241C61600(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C61648(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241C616B4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_241A31144(0, a3, a4, (uint64_t (*)(void, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_241C61734(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241C617A0()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (int *)type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*((void *)v6 - 1) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*((void *)v6 - 1) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = v0 + v8;
  uint64_t v11 = sub_241CD6810();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  }
  uint64_t v13 = v3 | v7 | 7;
  uint64_t v14 = v10 + v6[5];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = v10 + v6[8];
  uint64_t v17 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);

  swift_release();

  return MEMORY[0x270FA0238](v0, v8 + v9, v13);
}

uint64_t sub_241C619FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C46744, a2);
}

uint64_t sub_241C61A28()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v21 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v5 = sub_241CD6810();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v20 = *(void *)(v6 + 64);
  uint64_t v23 = sub_241CD7740();
  uint64_t v8 = *(void *)(v23 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v24 = v1;
  uint64_t v11 = v1 + v4;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v22 = v3 | v7 | v9 | 7;
  uint64_t v12 = (v4 + v21 + v7) & ~v7;
  uint64_t v13 = (v12 + v20 + v9) & ~v9;
  uint64_t v14 = v13 + v10;
  uint64_t v15 = v11 + v2[5];
  uint64_t v16 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = v11 + v2[8];
  uint64_t v18 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v24 + v12, v5);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24 + v13, v23);

  return MEMORY[0x270FA0238](v24, v14, v22);
}

uint64_t sub_241C61CF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_241CD6810() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_241CD7740() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v2 + v6;
  uint64_t v14 = v2 + v9;
  uint64_t v15 = v2 + v12;
  sub_241C616B4(a1, (uint64_t)v17, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper);
  uint64_t result = sub_241C4B828(v17, v13, v14, v15);
  *a2 = result;
  return result;
}

uint64_t sub_241C61E5C()
{
  uint64_t v1 = (int *)type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v27 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v27 + 56) & ~v27;
  uint64_t v3 = *(void *)(*((void *)v1 - 1) + 64);
  sub_241A68508(0);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = v2 + v3 + v5;
  uint64_t v25 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v26 = sub_241CD7740();
  uint64_t v7 = *(void *)(v26 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v24 = *(void *)(v7 + 64);
  unint64_t v9 = *(void **)(v0 + 16);
  if (v9)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v23 = v5;
  uint64_t v10 = v6 & ~v5;
  uint64_t v11 = v0 + v2;
  uint64_t v12 = sub_241CD6810();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v14(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v22 = v13;
  uint64_t v15 = v11 + v1[5];
  uint64_t v16 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = v11 + v1[8];
  uint64_t v18 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);

  swift_release();
  if (!v14(v0 + v10, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v0 + v10, v12);
  }
  uint64_t v19 = (v10 + v25 + v8) & ~v8;
  uint64_t v20 = v19 + v24;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v19, v26);

  return MEMORY[0x270FA0238](v0, v20, v27 | v23 | v8 | 7);
}

void sub_241C621A0(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  sub_241A68508(0);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(void *)(sub_241CD7740() - 8);
  unint64_t v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v1 + 16;
  uint64_t v12 = (char *)(v1 + v4);
  uint64_t v13 = v1 + v7;
  uint64_t v14 = v1 + v10;
  sub_241C616B4(v11, (uint64_t)v15, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper);
  sub_241C50460((uint64_t)v15, v12, v13, v14, a1);
}

id *sub_241C62300(id *a1)
{
  return a1;
}

id sub_241C62334(id result)
{
  if (result)
  {
    id v1 = result;
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_241C62378()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, AssociatedTypeWitness);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_241C624E8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(sub_241CD7740() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = v8 + *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v2 + ((v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return sub_241C4B208(a1, v2 + v8, v11, v5, v6, a2);
}

uint64_t sub_241C625FC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v16 = sub_241CD6810();
  uint64_t v5 = *(void *)(v16 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_241CD7740();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v15 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v2 | v6 | v11 | 7;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);

  return MEMORY[0x270FA0238](v0, v15, v13);
}

uint64_t sub_241C627F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_241CD6810() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(sub_241CD7740() - 8);
  uint64_t v14 = v2 + ((v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));

  return sub_241C50308(a1, v2 + v8, v2 + v11, v14, v5, v6, a2);
}

uint64_t sub_241C62960()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(type metadata accessor for SummaryModelQueryOutput() - 8);
  uint64_t v25 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v25 + 40) & ~v25;
  uint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v20 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v6 = (v4 + v23) & ~v23;
  uint64_t v7 = *(void *)(v5 + 64);
  sub_241A68508(0);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v10 = (v6 + v7 + v9) & ~v9;
  uint64_t v22 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v24 = sub_241CD7740();
  uint64_t v11 = *(void *)(v24 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v21 = *(void *)(v11 + 64);
  uint64_t v13 = v0 + v3;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v13, 1, AssociatedTypeWitness)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, AssociatedTypeWitness);
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v6, v20);
  uint64_t v15 = sub_241CD6810();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v0 + v10, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0 + v10, v15);
  }
  uint64_t v17 = (v10 + v22 + v12) & ~v12;
  uint64_t v18 = v17 + v21;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v17, v24);

  return MEMORY[0x270FA0238](v0, v18, v25 | v23 | v9 | v12 | 7);
}

void sub_241C62CB4(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(type metadata accessor for SummaryModelQueryOutput() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  sub_241A68508(0);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(*(void *)(v11 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  uint64_t v13 = *(void *)(*(void *)(v11 - 8) + 64);
  uint64_t v14 = *(void *)(sub_241CD7740() - 8);
  uint64_t v15 = v1[4];
  uint64_t v16 = (uint64_t)v1 + ((v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));

  sub_241C58FD0(v15, (uint64_t)v1 + v6, (uint64_t)v1 + v9, ((char *)v1 + v12), v16, v3, v4, a1);
}

void sub_241C62EA0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241A313AC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241C62F08(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_241A31144(255, a3, a4, (uint64_t (*)(void, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    unint64_t v5 = sub_241CDA5C0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241C62F74(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, unint64_t *, ValueMetadata *))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(255, a2, &qword_26B032CA0, &type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C62FD4(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35AD4);
}

uint64_t sub_241C62FF0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD000000000000036, 0x8000000241CE3EF0, a2);
}

uint64_t sub_241C6300C(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x270FA5388](v3);
  id v53 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v61 = *(char **)(v7 - 8);
  uint64_t v62 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)v50 - v8;
  sub_241A68508(0);
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v50 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v50 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v59 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v50 - v24;
  uint64_t v63 = a2;
  sub_241C61648(a2, (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v26(v19, 1, v20) == 1)
  {
    sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v27 = v62;
    uint64_t v28 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v61 + 1))(v9, v27);
  }
  else
  {
    uint64_t v52 = v9;
    v50[0] = *(void *)(v21 + 32);
    v50[1] = v11;
    ((void (*)(char *, char *, uint64_t))v50[0])(v25, v19, v20);
    uint64_t v51 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
    sub_241CD77A0();
    if (v26(v17, 1, v20) == 1)
    {
      sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v14, 1, 1, v20);
      uint64_t v29 = v52;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v30 = v62;
      uint64_t v28 = sub_241CDA6D0();
      (*((void (**)(void *, uint64_t))v61 + 1))(v29, v30);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
    else
    {
      uint64_t v61 = v25;
      uint64_t v62 = v20;
      ((void (*)(char *, char *, uint64_t))v50[0])(v59, v17, v20);
      uint64_t v52 = (void *)sub_241CD7770();
      uint64_t v31 = (void *)sub_241CD76E0();
      sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v64 = inited;
      sub_241CDB2E0();
      char v33 = *(unsigned char *)(v63 + *(int *)(v51 + 36));
      sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v34 = sub_241CD73B0();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(void *)(v35 + 72);
      unint64_t v37 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      uint64_t v38 = swift_allocObject();
      if (v33)
      {
        *(_OWORD *)(v38 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v38 + v37, *MEMORY[0x263F454D0], v34);
      }
      else
      {
        *(_OWORD *)(v38 + 16) = xmmword_241CEB720;
        id v40 = *(void (**)(unint64_t, void, uint64_t))(v35 + 104);
        v40(v38 + v37, *MEMORY[0x263F45520], v34);
        v40(v38 + v37 + v36, *MEMORY[0x263F45538], v34);
      }
      id v39 = v31;
      sub_241C695CC(v38, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v41 = v57;
      uint64_t v42 = v61;
      swift_deallocClassInstance();
      unint64_t v43 = swift_bridgeObjectRetain();
      sub_241C6A314(v43, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *MEMORY[0x263F45690], v55);
      uint64_t v44 = (uint64_t)v56;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      uint64_t v45 = v52;
      unint64_t v46 = v59;
      uint64_t v28 = sub_241C34640(v52, v44, v42, v59, v60, 0xD000000000000036, 0x8000000241CE4540, (uint64_t)&unk_26F5C71C8, (uint64_t)sub_241C72148, (uint64_t)&unk_26F5C71F0, (char *)sub_241C72164);

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v58);
      uint64_t v47 = *(void (**)(char *, uint64_t))(v21 + 8);
      uint64_t v48 = v62;
      v47(v46, v62);
      v47(v42, v48);
    }
  }
  return v28;
}

uint64_t sub_241C63994(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x270FA5388](v3);
  id v53 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v61 = *(char **)(v7 - 8);
  uint64_t v62 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)v50 - v8;
  sub_241A68508(0);
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v50 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v50 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v59 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v50 - v24;
  uint64_t v63 = a2;
  sub_241C61648(a2, (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v26(v19, 1, v20) == 1)
  {
    sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v27 = v62;
    uint64_t v28 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v61 + 1))(v9, v27);
  }
  else
  {
    uint64_t v52 = v9;
    v50[0] = *(void *)(v21 + 32);
    v50[1] = v11;
    ((void (*)(char *, char *, uint64_t))v50[0])(v25, v19, v20);
    uint64_t v51 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
    sub_241CD77A0();
    if (v26(v17, 1, v20) == 1)
    {
      sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v14, 1, 1, v20);
      uint64_t v29 = v52;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v30 = v62;
      uint64_t v28 = sub_241CDA6D0();
      (*((void (**)(void *, uint64_t))v61 + 1))(v29, v30);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
    else
    {
      uint64_t v61 = v25;
      uint64_t v62 = v20;
      ((void (*)(char *, char *, uint64_t))v50[0])(v59, v17, v20);
      uint64_t v52 = (void *)sub_241CD7770();
      uint64_t v31 = (void *)sub_241CD76E0();
      sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v64 = inited;
      sub_241CDB2E0();
      char v33 = *(unsigned char *)(v63 + *(int *)(v51 + 40));
      sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v34 = sub_241CD73B0();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(void *)(v35 + 72);
      unint64_t v37 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      uint64_t v38 = swift_allocObject();
      if (v33)
      {
        *(_OWORD *)(v38 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v38 + v37, *MEMORY[0x263F454D0], v34);
      }
      else
      {
        *(_OWORD *)(v38 + 16) = xmmword_241CEB720;
        id v40 = *(void (**)(unint64_t, void, uint64_t))(v35 + 104);
        v40(v38 + v37, *MEMORY[0x263F45520], v34);
        v40(v38 + v37 + v36, *MEMORY[0x263F45538], v34);
      }
      id v39 = v31;
      sub_241C695CC(v38, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v41 = v57;
      uint64_t v42 = v61;
      swift_deallocClassInstance();
      unint64_t v43 = swift_bridgeObjectRetain();
      sub_241C6A314(v43, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *MEMORY[0x263F45690], v55);
      uint64_t v44 = (uint64_t)v56;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      uint64_t v45 = v52;
      unint64_t v46 = v59;
      uint64_t v28 = sub_241C34640(v52, v44, v42, v59, v60, 0xD000000000000037, 0x8000000241CE43C0, (uint64_t)&unk_26F5C6E30, (uint64_t)sub_241C6F38C, (uint64_t)&unk_26F5C6E58, (char *)sub_241C6F3A8);

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v58);
      uint64_t v47 = *(void (**)(char *, uint64_t))(v21 + 8);
      uint64_t v48 = v62;
      v47(v46, v62);
      v47(v42, v48);
    }
  }
  return v28;
}

uint64_t sub_241C6431C(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v57 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v60 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v54 - v8;
  sub_241A68508(0);
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v54 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v63 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v54 - v24;
  uint64_t v67 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v68 = a2;
  sub_241C61648(a2 + *(int *)(v67 + 20), (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v26(v19, 1, v20) == 1)
  {
    sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v27 = v66;
    uint64_t v28 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v9, v27);
  }
  else
  {
    uint64_t v54 = v14;
    uint64_t v55 = v11;
    uint64_t v56 = v9;
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v29(v25, v19, v20);
    sub_241CD77A0();
    if (v26(v17, 1, v20) == 1)
    {
      sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v54, 1, 1, v20);
      uint64_t v30 = v56;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v31 = v66;
      uint64_t v28 = sub_241CDA6D0();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v30, v31);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
    else
    {
      uint64_t v56 = v25;
      uint64_t v65 = v21;
      uint64_t v66 = v20;
      v29(v63, v17, v20);
      uint64_t v55 = (void *)sub_241CD7770();
      uint64_t v32 = (void *)sub_241CD76E0();
      sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v69 = inited;
      sub_241CDB2E0();
      char v34 = *(unsigned char *)(v68 + *(int *)(v67 + 24));
      sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v35 = sub_241CD73B0();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(void *)(v36 + 72);
      unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v39 = swift_allocObject();
      if (v34)
      {
        *(_OWORD *)(v39 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v36 + 104))(v39 + v38, *MEMORY[0x263F454D0], v35);
      }
      else
      {
        *(_OWORD *)(v39 + 16) = xmmword_241CEB720;
        unint64_t v41 = v39 + v38;
        uint64_t v42 = *(void (**)(unint64_t, void, uint64_t))(v36 + 104);
        v42(v41, *MEMORY[0x263F45520], v35);
        v42(v41 + v37, *MEMORY[0x263F45538], v35);
      }
      id v40 = v32;
      sub_241C695CC(v39, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v44 = v61;
      uint64_t v43 = v62;
      uint64_t v45 = v65;
      swift_deallocClassInstance();
      unint64_t v46 = swift_bridgeObjectRetain();
      sub_241C6A314(v46, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, *MEMORY[0x263F45690], v59);
      uint64_t v47 = (uint64_t)v60;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      uint64_t v48 = v55;
      uint64_t v49 = v56;
      uint64_t v50 = v63;
      uint64_t v28 = sub_241C34640(v55, v47, v56, v63, v64, 0xD000000000000038, 0x8000000241CE4630, (uint64_t)&unk_26F5C73F8, (uint64_t)sub_241C73E28, (uint64_t)&unk_26F5C7420, (char *)sub_241C73ED4);

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v47, v43);
      uint64_t v51 = *(void (**)(char *, uint64_t))(v45 + 8);
      uint64_t v52 = v66;
      v51(v50, v66);
      v51(v49, v52);
    }
  }
  return v28;
}

uint64_t sub_241C64CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v57 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v60 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v54 - v8;
  sub_241A68508(0);
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v54 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v63 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v54 - v24;
  uint64_t v67 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v68 = a2;
  sub_241C61648(a2 + *(int *)(v67 + 20), (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v26(v19, 1, v20) == 1)
  {
    sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v27 = v66;
    uint64_t v28 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v9, v27);
  }
  else
  {
    uint64_t v54 = v14;
    uint64_t v55 = v11;
    uint64_t v56 = v9;
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v29(v25, v19, v20);
    sub_241CD77A0();
    if (v26(v17, 1, v20) == 1)
    {
      sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v54, 1, 1, v20);
      uint64_t v30 = v56;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v31 = v66;
      uint64_t v28 = sub_241CDA6D0();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v30, v31);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
    else
    {
      uint64_t v56 = v25;
      uint64_t v65 = v21;
      uint64_t v66 = v20;
      v29(v63, v17, v20);
      uint64_t v55 = (void *)sub_241CD7770();
      uint64_t v32 = (void *)sub_241CD76E0();
      sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v69 = inited;
      sub_241CDB2E0();
      char v34 = *(unsigned char *)(v68 + *(int *)(v67 + 24));
      sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v35 = sub_241CD73B0();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(void *)(v36 + 72);
      unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v39 = swift_allocObject();
      if (v34)
      {
        *(_OWORD *)(v39 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v36 + 104))(v39 + v38, *MEMORY[0x263F454D0], v35);
      }
      else
      {
        *(_OWORD *)(v39 + 16) = xmmword_241CEB720;
        unint64_t v41 = v39 + v38;
        uint64_t v42 = *(void (**)(unint64_t, void, uint64_t))(v36 + 104);
        v42(v41, *MEMORY[0x263F45520], v35);
        v42(v41 + v37, *MEMORY[0x263F45538], v35);
      }
      id v40 = v32;
      sub_241C695CC(v39, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v44 = v61;
      uint64_t v43 = v62;
      uint64_t v45 = v65;
      swift_deallocClassInstance();
      unint64_t v46 = swift_bridgeObjectRetain();
      sub_241C6A314(v46, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, *MEMORY[0x263F45690], v59);
      uint64_t v47 = (uint64_t)v60;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      uint64_t v48 = v55;
      uint64_t v49 = v56;
      uint64_t v50 = v63;
      uint64_t v28 = sub_241C34640(v55, v47, v56, v63, v64, 0xD000000000000038, 0x8000000241CE4310, (uint64_t)&unk_26F5C6D18, (uint64_t)sub_241C6E8E8, (uint64_t)&unk_26F5C6D40, (char *)sub_241C6E904);

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v47, v43);
      uint64_t v51 = *(void (**)(char *, uint64_t))(v45 + 8);
      uint64_t v52 = v66;
      v51(v50, v66);
      v51(v49, v52);
    }
  }
  return v28;
}

uint64_t sub_241C65624(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x270FA5388](v3);
  id v53 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v61 = *(char **)(v7 - 8);
  uint64_t v62 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)v50 - v8;
  sub_241A68508(0);
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v50 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v50 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v59 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v50 - v24;
  uint64_t v63 = a2;
  sub_241C61648(a2, (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v26(v19, 1, v20) == 1)
  {
    sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v27 = v62;
    uint64_t v28 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v61 + 1))(v9, v27);
  }
  else
  {
    uint64_t v52 = v9;
    v50[0] = *(void *)(v21 + 32);
    v50[1] = v11;
    ((void (*)(char *, char *, uint64_t))v50[0])(v25, v19, v20);
    uint64_t v51 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
    sub_241CD77A0();
    if (v26(v17, 1, v20) == 1)
    {
      sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v14, 1, 1, v20);
      uint64_t v29 = v52;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v30 = v62;
      uint64_t v28 = sub_241CDA6D0();
      (*((void (**)(void *, uint64_t))v61 + 1))(v29, v30);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
    else
    {
      uint64_t v61 = v25;
      uint64_t v62 = v20;
      ((void (*)(char *, char *, uint64_t))v50[0])(v59, v17, v20);
      uint64_t v52 = (void *)sub_241CD7770();
      uint64_t v31 = (void *)sub_241CD76E0();
      sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v64 = inited;
      sub_241CDB2E0();
      char v33 = *(unsigned char *)(v63 + *(int *)(v51 + 40));
      sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v34 = sub_241CD73B0();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(void *)(v35 + 72);
      unint64_t v37 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      uint64_t v38 = swift_allocObject();
      if (v33)
      {
        *(_OWORD *)(v38 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v38 + v37, *MEMORY[0x263F454D0], v34);
      }
      else
      {
        *(_OWORD *)(v38 + 16) = xmmword_241CEB720;
        id v40 = *(void (**)(unint64_t, void, uint64_t))(v35 + 104);
        v40(v38 + v37, *MEMORY[0x263F45520], v34);
        v40(v38 + v37 + v36, *MEMORY[0x263F45538], v34);
      }
      id v39 = v31;
      sub_241C695CC(v38, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v41 = v57;
      uint64_t v42 = v61;
      swift_deallocClassInstance();
      unint64_t v43 = swift_bridgeObjectRetain();
      sub_241C6A314(v43, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *MEMORY[0x263F45690], v55);
      uint64_t v44 = (uint64_t)v56;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      uint64_t v45 = v52;
      unint64_t v46 = v59;
      uint64_t v28 = sub_241C34640(v52, v44, v42, v59, v60, 0xD000000000000039, 0x8000000241CE3F70, (uint64_t)&unk_26F5C6688, (uint64_t)sub_241C66B54, (uint64_t)&unk_26F5C66B0, (char *)sub_241C66CE0);

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v58);
      uint64_t v47 = *(void (**)(char *, uint64_t))(v21 + 8);
      uint64_t v48 = v62;
      v47(v46, v62);
      v47(v42, v48);
    }
  }
  return v28;
}

uint64_t sub_241C65FAC()
{
  return sub_241C721AC(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471C8]);
}

uint64_t sub_241C65FD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C417B0, a2);
}

uint64_t sub_241C66004@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(uint64_t, unint64_t, unint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = *(void *)(sub_241CD7740() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(a2(0) - 8);
  uint64_t result = a3(a1, v4 + v10, v4 + ((v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)));
  *a4 = result;
  return result;
}

void sub_241C660F4()
{
  if (!qword_26B032400)
  {
    sub_241A5B1CC();
    sub_241C62EA0(255, (unint64_t *)&qword_26B032CE0, &qword_26B0304D8, 0x263F0A6B8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241C61600(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032400);
    }
  }
}

void sub_241C661CC()
{
  if (!qword_268D435B0)
  {
    sub_241A994B8();
    sub_241C725AC(255, &qword_268D435B8, (unint64_t *)&qword_26B032CE0, &qword_26B0304D8, 0x263F0A6B8);
    sub_241C61600(&qword_26B0326D0, (void (*)(uint64_t))sub_241A994B8);
    sub_241C662A8();
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D435B0);
    }
  }
}

unint64_t sub_241C662A8()
{
  unint64_t result = qword_268D435C0;
  if (!qword_268D435C0)
  {
    sub_241C725AC(255, &qword_268D435B8, (unint64_t *)&qword_26B032CE0, &qword_26B0304D8, 0x263F0A6B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D435C0);
  }
  return result;
}

void sub_241C66320()
{
  if (!qword_268D435C8)
  {
    sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
    sub_241C661CC();
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D435D0, (void (*)(uint64_t))sub_241C661CC);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D435C8);
    }
  }
}

uint64_t sub_241C66418()
{
  return sub_241C6663C(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471C8]);
}

uint64_t sub_241C66444()
{
  return sub_241C66968(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))sub_241C567F0);
}

uint64_t sub_241C66470()
{
  return sub_241C728A4(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471C8]);
}

uint64_t sub_241C6649C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C49D00, a2);
}

uint64_t sub_241C664C8@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void, unint64_t, unint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = *(void *)(sub_241CD7740() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(a2(0) - 8);
  uint64_t result = a3(*a1, v4 + v10, v4 + ((v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)));
  *a4 = result;
  return result;
}

uint64_t sub_241C665B8()
{
  return sub_241C72B58(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471C8]);
}

uint64_t sub_241C665E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C6EE98(a1, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t, unint64_t))sub_241C4EE18, a2);
}

uint64_t sub_241C66610()
{
  return sub_241C6663C(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471C8]);
}

uint64_t sub_241C6663C(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v3 = (int *)a1(0);
  uint64_t v27 = *(unsigned __int8 *)(*((void *)v3 - 1) + 80);
  uint64_t v4 = (v27 + 24) & ~v27;
  uint64_t v5 = *(void *)(*((void *)v3 - 1) + 64);
  sub_241A68508(0);
  uint64_t v25 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v21 = (v4 + v5 + v25) & ~v25;
  uint64_t v24 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v26 = sub_241CD7740();
  uint64_t v7 = *(void *)(v26 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = *(void *)(v7 + 64);

  uint64_t v9 = v2 + v4;
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v13 = v9 + v3[5];
  uint64_t v14 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v9 + v3[8];
  uint64_t v16 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);

  if (!v12(v2 + v21, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2 + v21, v10);
  }
  uint64_t v17 = v27 | v25 | v8 | 7;
  uint64_t v18 = (v21 + v24 + v8) & ~v8;
  uint64_t v19 = v18 + v22;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2 + v18, v26);

  return MEMORY[0x270FA0238](v2, v19, v17);
}

uint64_t sub_241C66968(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, unint64_t, unint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  sub_241A68508(0);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(void *)(sub_241CD7740() - 8);
  uint64_t v10 = v2 + ((v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = *(void *)(v2 + 16);

  return a2(v11, v2 + v4, v2 + v7, v10);
}

unint64_t sub_241C66AC0()
{
  unint64_t result = qword_268D435E8;
  if (!qword_268D435E8)
  {
    sub_241C6EB08(255, &qword_268D435E0, (unint64_t *)&qword_26B032CE0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D435E8);
  }
  return result;
}

uint64_t sub_241C66B54(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35B60);
}

uint64_t sub_241C66B6C(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_241CD7740() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_241CD6810() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (v5 + v6 + v8) & ~v8;
  uint64_t v10 = *(void *)(v7 + 64);
  unint64_t v11 = (v10 + v8 + v9) & ~v8;
  uint64_t v12 = *(void *)(sub_241CD6D00() - 8);
  uint64_t v13 = *(void *)(v2 + 16);
  uint64_t v14 = v2 + ((v11 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v15 = *a1;

  return a2(v15, v13, v2 + v5, v2 + v9, v2 + v11, v14);
}

uint64_t sub_241C66CE0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD000000000000039, 0x8000000241CE3F70, a2);
}

uint64_t sub_241C66CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x270FA5388](v3);
  id v53 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v61 = *(char **)(v7 - 8);
  uint64_t v62 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)v50 - v8;
  sub_241A68508(0);
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v50 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v50 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v59 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v50 - v24;
  uint64_t v63 = a2;
  sub_241C61648(a2, (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v26(v19, 1, v20) == 1)
  {
    sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v27 = v62;
    uint64_t v28 = sub_241CDA6D0();
    (*((void (**)(char *, uint64_t))v61 + 1))(v9, v27);
  }
  else
  {
    uint64_t v52 = v9;
    v50[0] = *(void *)(v21 + 32);
    v50[1] = v11;
    ((void (*)(char *, char *, uint64_t))v50[0])(v25, v19, v20);
    uint64_t v51 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
    sub_241CD77A0();
    if (v26(v17, 1, v20) == 1)
    {
      sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v14, 1, 1, v20);
      uint64_t v29 = v52;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v30 = v62;
      uint64_t v28 = sub_241CDA6D0();
      (*((void (**)(void *, uint64_t))v61 + 1))(v29, v30);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    }
    else
    {
      uint64_t v61 = v25;
      uint64_t v62 = v20;
      ((void (*)(char *, char *, uint64_t))v50[0])(v59, v17, v20);
      uint64_t v52 = (void *)sub_241CD7770();
      uint64_t v31 = (void *)sub_241CD76E0();
      sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v64 = inited;
      sub_241CDB2E0();
      char v33 = *(unsigned char *)(v63 + *(int *)(v51 + 20));
      sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v34 = sub_241CD73B0();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(void *)(v35 + 72);
      unint64_t v37 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      uint64_t v38 = swift_allocObject();
      if (v33)
      {
        *(_OWORD *)(v38 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v38 + v37, *MEMORY[0x263F454D0], v34);
      }
      else
      {
        *(_OWORD *)(v38 + 16) = xmmword_241CEB720;
        id v40 = *(void (**)(unint64_t, void, uint64_t))(v35 + 104);
        v40(v38 + v37, *MEMORY[0x263F45520], v34);
        v40(v38 + v37 + v36, *MEMORY[0x263F45538], v34);
      }
      id v39 = v31;
      sub_241C695CC(v38, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v41 = v57;
      uint64_t v42 = v61;
      swift_deallocClassInstance();
      unint64_t v43 = swift_bridgeObjectRetain();
      sub_241C6A314(v43, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *MEMORY[0x263F45690], v55);
      uint64_t v44 = (uint64_t)v56;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      uint64_t v45 = v52;
      unint64_t v46 = v59;
      uint64_t v28 = sub_241C34640(v52, v44, v42, v59, v60, 0xD00000000000003BLL, 0x8000000241CE4290, (uint64_t)&unk_26F5C6C00, (uint64_t)sub_241C6E138, (uint64_t)&unk_26F5C6C28, (char *)sub_241C6E154);

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v58);
      uint64_t v47 = *(void (**)(char *, uint64_t))(v21 + 8);
      uint64_t v48 = v62;
      v47(v46, v62);
      v47(v42, v48);
    }
  }
  return v28;
}

uint64_t sub_241C67684(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v56 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v59 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29CE8(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v64 = *(void (***)(void, void))(v7 - 8);
  uint64_t v65 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v53 - v8;
  sub_241A68508(0);
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v53 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v53 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v62 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v66 = (char *)&v53 - v24;
  uint64_t v55 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v25 = *(int *)(v55 + 36);
  uint64_t v67 = a2;
  sub_241C61648(a2 + v25, (uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v27 = v20;
  if (v26(v19, 1, v20) == 1)
  {
    sub_241C73BBC((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    sub_241CD77A0();
    sub_241CDA5D0();
    sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
    uint64_t v28 = v65;
    uint64_t v29 = sub_241CDA6D0();
    ((void (**)(char *, uint64_t))v64)[1](v9, v28);
  }
  else
  {
    uint64_t v53 = v11;
    uint64_t v54 = v9;
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v30(v66, v19, v20);
    sub_241CD77A0();
    if (v26(v17, 1, v20) == 1)
    {
      sub_241C73BBC((uint64_t)v17, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v14, 1, 1, v20);
      uint64_t v31 = v54;
      sub_241CDA5D0();
      sub_241C7152C((unint64_t *)&qword_26B038988, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508);
      uint64_t v32 = v65;
      uint64_t v29 = sub_241CDA6D0();
      ((void (**)(char *, uint64_t))v64)[1](v31, v32);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v66, v27);
    }
    else
    {
      uint64_t v65 = v21;
      char v33 = v17;
      uint64_t v34 = v20;
      v30(v62, v33, v20);
      uint64_t v35 = v67;
      uint64_t v64 = (void (**)(void, void))sub_241CD7770();
      uint64_t v36 = (void *)sub_241CD76E0();
      sub_241A31144(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v68 = inited;
      sub_241CDB2E0();
      char v38 = *(unsigned char *)(v35 + *(int *)(v55 + 40));
      sub_241A29CE8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v39 = sub_241CD73B0();
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = *(void *)(v40 + 72);
      unint64_t v42 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
      uint64_t v43 = swift_allocObject();
      if (v38)
      {
        *(_OWORD *)(v43 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v40 + 104))(v43 + v42, *MEMORY[0x263F454D0], v39);
      }
      else
      {
        *(_OWORD *)(v43 + 16) = xmmword_241CEB720;
        uint64_t v45 = *(void (**)(unint64_t, void, uint64_t))(v40 + 104);
        v45(v43 + v42, *MEMORY[0x263F45520], v39);
        v45(v43 + v42 + v41, *MEMORY[0x263F45538], v39);
      }
      id v44 = v36;
      sub_241C695CC(v43, MEMORY[0x263F45588], sub_241C6C8B0, (void (*)(uint64_t))sub_241C6C848, (void (*)(uint64_t))sub_241C6C87C);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      unint64_t v46 = swift_bridgeObjectRetain();
      sub_241C6A314(v46, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B034EC0);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v57 + 104))(v56, *MEMORY[0x263F45690], v58);
      uint64_t v47 = (uint64_t)v59;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      uint64_t v48 = v64;
      uint64_t v49 = v66;
      uint64_t v50 = v62;
      uint64_t v29 = sub_241C34640(v64, v47, v66, v62, v63, 0xD000000000000047, 0x8000000241CE4000, (uint64_t)&unk_26F5C67A0, (uint64_t)sub_241C6900C, (uint64_t)&unk_26F5C67C8, (char *)sub_241C69028);

      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v47, v61);
      uint64_t v51 = *(void (**)(char *, uint64_t))(v65 + 8);
      v51(v50, v34);
      v51(v49, v34);
    }
  }
  return v29;
}

uint64_t sub_241C67FF0()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (int *)(type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0)
             - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)v6 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v8, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = v0 + v8 + v6[9];
  uint64_t v12 = sub_241CD9F10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  uint64_t v13 = v0 + v8 + v6[11];
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }

  return MEMORY[0x270FA0238](v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_241C68230@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C39C9C, a2);
}

void sub_241C6825C(uint64_t a1)
{
}

void sub_241C68290()
{
  if (!qword_268D435F0)
  {
    sub_241C709A8(255, &qword_268D435F8, sub_241C6825C);
    sub_241C5D8C8(255, &qword_268D43600, sub_241C6825C);
    sub_241C68394(&qword_268D43608, &qword_268D435F8, sub_241C6825C);
    sub_241C70AEC(&qword_268D43610, &qword_268D43600, sub_241C6825C);
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D435F0);
    }
  }
}

uint64_t sub_241C68394(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C709A8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241C683E4()
{
  if (!qword_268D43618)
  {
    sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
    sub_241C68290();
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43620, (void (*)(uint64_t))sub_241C68290);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43618);
    }
  }
}

uint64_t sub_241C684E0()
{
  return sub_241C68E50((uint64_t (*)(void))sub_241C6825C, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(unint64_t, unint64_t, unint64_t, uint64_t))sub_241C50E74);
}

uint64_t sub_241C68520()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (int *)(type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0)
             - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)v6 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v8, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = v0 + v8 + v6[9];
  uint64_t v12 = sub_241CD9F10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  uint64_t v13 = v0 + v8 + v6[11];
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }

  return MEMORY[0x270FA0238](v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_241C68760@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C46C88, a2);
}

uint64_t sub_241C6878C()
{
  uint64_t v1 = (int *)(type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0)
             - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v22 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = sub_241CD6810();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v20 = *(void *)(v4 + 64);
  uint64_t v21 = sub_241CD7740();
  uint64_t v6 = *(void *)(v21 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = *(void *)(v6 + 64);
  uint64_t v8 = v0 + ((v2 + 16) & ~v2);
  uint64_t v9 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = v8 + v1[9];
  uint64_t v11 = sub_241CD9F10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  uint64_t v12 = v8 + v1[11];
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  if (!v13) {
    v14(v12, v3);
  }
  uint64_t v15 = v2 | v5 | v7 | 7;
  uint64_t v16 = (((v2 + 16) & ~v2) + v22 + v5) & ~v5;
  uint64_t v17 = (v16 + v20 + v7) & ~v7;
  v14(v0 + v16, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v17, v21);

  return MEMORY[0x270FA0238](v0, v17 + v19, v15);
}

uint64_t sub_241C68A38@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C6A55C(a1, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t))sub_241C4BD50, a2);
}

uint64_t sub_241C68A68()
{
  sub_241C6825C(0);
  uint64_t v32 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v32 + 16) & ~v32;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = (int *)type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v31 = *(unsigned __int8 *)(*((void *)v4 - 1) + 80);
  uint64_t v5 = (v2 + v3 + v31) & ~v31;
  uint64_t v6 = *(void *)(*((void *)v4 - 1) + 64);
  sub_241A68508(0);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = v5 + v6 + v8;
  uint64_t v29 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v30 = sub_241CD7740();
  uint64_t v10 = *(void *)(v30 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v28 = *(void *)(v10 + 64);
  uint64_t v12 = v0 + v2;
  sub_241A6AA08();
  uint64_t v14 = v13;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    uint64_t v15 = v12 + *(int *)(v14 + 48);
    uint64_t v16 = sub_241CD6D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  uint64_t v17 = v9 & ~v8;
  uint64_t v18 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v0 + v5, v18);
  swift_bridgeObjectRelease();
  uint64_t v19 = v0 + v5 + v4[7];
  uint64_t v20 = sub_241CD9F10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);

  uint64_t v21 = v0 + v5 + v4[9];
  uint64_t v22 = sub_241CD6810();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (!v24(v21, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  if (!v24(v0 + v17, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0 + v17, v22);
  }
  uint64_t v25 = (v17 + v29 + v11) & ~v11;
  uint64_t v26 = v25 + v28;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v25, v30);

  return MEMORY[0x270FA0238](v0, v26, v32 | v31 | v8 | v11 | 7);
}

uint64_t sub_241C68E50(uint64_t (*a1)(void), uint64_t (*a2)(void), uint64_t (*a3)(unint64_t, unint64_t, unint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(a2(0) - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  sub_241A68508(0);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(*(void *)(v11 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  uint64_t v13 = *(void *)(*(void *)(v11 - 8) + 64);
  uint64_t v14 = *(void *)(sub_241CD7740() - 8);
  uint64_t v15 = v3 + ((v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));

  return a3(v3 + v6, v3 + v9, v3 + v12, v15);
}

uint64_t sub_241C6900C(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35B98);
}

uint64_t sub_241C69028@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD000000000000047, 0x8000000241CE4000, a2);
}

uint64_t sub_241C69044()
{
  return sub_241C70628(type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471A0]);
}

uint64_t sub_241C69070@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C3AA88, a2);
}

void sub_241C6909C()
{
  if (!qword_268D43640)
  {
    sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
    sub_241C207D8();
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43548, (void (*)(uint64_t))sub_241C207D8);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43640);
    }
  }
}

uint64_t sub_241C69194()
{
  return sub_241C6A6D0(type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471A0]);
}

uint64_t sub_241C691C0()
{
  return sub_241C68E50((uint64_t (*)(void))sub_241C2070C, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(unint64_t, unint64_t, unint64_t, uint64_t))sub_241C51864);
}

void sub_241C69200(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_241C715CC(0, (unint64_t *)&qword_26B034EC0, (unint64_t *)&qword_26B038440, 0x263F0A598, (unint64_t *)&qword_26B030378);
      uint64_t v3 = sub_241CDBDE0();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_241CDBF50();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v43 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v41 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x245637160](v8, v1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        uint64_t v12 = sub_241CDBB50();
        uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)(v7 + 8 * v15) = v17 | v16;
        *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
        uint64_t v23 = *(void *)(v3 + 16);
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        *(void *)(v3 + 16) = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_241A313AC(0, (unint64_t *)&qword_26B038440);
      id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
      char v19 = sub_241CDBB60();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_241CDBB60();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v41;
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      unint64_t v1 = v41;
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = v1 + 32;
  uint64_t v42 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_241CDBB50();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_241A313AC(0, (unint64_t *)&qword_26B038440);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_241CDBB60();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_241CDBB60();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_38;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_241C69578(uint64_t a1)
{
  return sub_241C695CC(a1, MEMORY[0x263F45618], sub_241C6C920, (void (*)(uint64_t))sub_241C6C954, (void (*)(uint64_t))sub_241C6C988);
}

uint64_t sub_241C695CC(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t v43 = a5;
  unint64_t v41 = a4;
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v46 = (char *)&v37 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    a3(0);
    uint64_t v14 = sub_241CDBDE0();
    uint64_t v15 = 0;
    uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v16 = v8 + 16;
    id v44 = v17;
    uint64_t v45 = v14 + 56;
    uint64_t v18 = *(unsigned __int8 *)(v16 + 64);
    uint64_t v39 = v13;
    uint64_t v40 = a1 + ((v18 + 32) & ~v18);
    uint64_t v19 = *(void *)(v16 + 56);
    uint64_t v20 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v38 = (uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 16);
    while (1)
    {
      uint64_t v42 = v15;
      uint64_t v21 = v44(v46, v40 + v19 * v15, v7);
      v41(v21);
      uint64_t v22 = sub_241CDAFC0();
      uint64_t v23 = ~(-1 << *(unsigned char *)(v14 + 32));
      unint64_t v24 = v22 & v23;
      unint64_t v25 = (v22 & (unint64_t)v23) >> 6;
      uint64_t v26 = *(void *)(v45 + 8 * v25);
      uint64_t v27 = 1 << (v22 & v23);
      if ((v27 & v26) != 0)
      {
        while (1)
        {
          uint64_t v28 = v16;
          uint64_t v29 = v44(v11, *(void *)(v14 + 48) + v24 * v19, v7);
          v43(v29);
          char v30 = sub_241CDB050();
          uint64_t v31 = *v20;
          (*v20)(v11, v7);
          if (v30) {
            break;
          }
          unint64_t v24 = (v24 + 1) & v23;
          unint64_t v25 = v24 >> 6;
          uint64_t v26 = *(void *)(v45 + 8 * (v24 >> 6));
          uint64_t v27 = 1 << v24;
          uint64_t v16 = v28;
          if ((v26 & (1 << v24)) == 0) {
            goto LABEL_8;
          }
        }
        v31(v46, v7);
        uint64_t v16 = v28;
      }
      else
      {
LABEL_8:
        uint64_t v32 = v46;
        *(void *)(v45 + 8 * v25) = v27 | v26;
        uint64_t result = (*v38)(*(void *)(v14 + 48) + v24 * v19, v32, v7);
        uint64_t v34 = *(void *)(v14 + 16);
        BOOL v35 = __OFADD__(v34, 1);
        uint64_t v36 = v34 + 1;
        if (v35)
        {
          __break(1u);
          return result;
        }
        *(void *)(v14 + 16) = v36;
      }
      uint64_t v15 = v42 + 1;
      if (v42 + 1 == v39) {
        return v14;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_241C698A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_241C74010();
    uint64_t v3 = sub_241CDBDE0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_241CDB0D0();
      sub_241CDC1D0();
      id v7 = v6;
      sub_241CDB170();
      uint64_t v8 = sub_241CDC200();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_241CDB0D0();
        uint64_t v17 = v16;
        if (v15 == sub_241CDB0D0() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_241CDC100();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_241CDB0D0();
          uint64_t v24 = v23;
          if (v22 == sub_241CDB0D0() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_241CDC100();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_241C69AD0(unint64_t a1)
{
}

void sub_241C69AF4(unint64_t a1)
{
}

void sub_241C69B18(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  unint64_t v8 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_3:
      sub_241C715CC(0, a2, a3, a4, a5);
      uint64_t v9 = sub_241CDBDE0();
      uint64_t v10 = v7 & 0xFFFFFFFFFFFFFF8;
      if (!v8) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_241CDBF50();
      swift_bridgeObjectRelease();
      if (!v11) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v9 = MEMORY[0x263F8EE88];
  uint64_t v10 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    return;
  }
LABEL_9:
  uint64_t v13 = v9 + 56;
  uint64_t v50 = v11;
  if ((v7 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = 0;
    unint64_t v46 = v7;
    while (1)
    {
      uint64_t v15 = MEMORY[0x245637160](v14, v7);
      BOOL v16 = __OFADD__(v14++, 1);
      if (v16)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v17 = v15;
      uint64_t v18 = sub_241CDBB50();
      uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      uint64_t v22 = *(void *)(v13 + 8 * (v20 >> 6));
      uint64_t v23 = 1 << v20;
      if (((1 << v20) & v22) != 0)
      {
        sub_241A313AC(0, a3);
        id v24 = *(id *)(*(void *)(v9 + 48) + 8 * v20);
        char v25 = sub_241CDBB60();

        if (v25)
        {
LABEL_11:
          swift_unknownObjectRelease();
          unint64_t v7 = v46;
          goto LABEL_12;
        }
        uint64_t v26 = ~v19;
        while (1)
        {
          unint64_t v20 = (v20 + 1) & v26;
          unint64_t v21 = v20 >> 6;
          uint64_t v22 = *(void *)(v13 + 8 * (v20 >> 6));
          uint64_t v23 = 1 << v20;
          if ((v22 & (1 << v20)) == 0) {
            break;
          }
          id v27 = *(id *)(*(void *)(v9 + 48) + 8 * v20);
          char v28 = sub_241CDBB60();

          if (v28) {
            goto LABEL_11;
          }
        }
        unint64_t v7 = v46;
      }
      *(void *)(v13 + 8 * v21) = v23 | v22;
      *(void *)(*(void *)(v9 + 48) + 8 * v20) = v17;
      uint64_t v29 = *(void *)(v9 + 16);
      BOOL v16 = __OFADD__(v29, 1);
      uint64_t v30 = v29 + 1;
      if (v16) {
        goto LABEL_38;
      }
      *(void *)(v9 + 16) = v30;
LABEL_12:
      if (v14 == v50) {
        return;
      }
    }
  }
  uint64_t v31 = 0;
  uint64_t v47 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v31 != v47)
  {
    id v32 = *(id *)(v7 + 32 + 8 * v31);
    uint64_t v33 = sub_241CDBB50();
    uint64_t v34 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v35 = v33 & ~v34;
    unint64_t v36 = v35 >> 6;
    uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
    uint64_t v38 = 1 << v35;
    if (((1 << v35) & v37) != 0)
    {
      sub_241A313AC(0, a3);
      id v39 = *(id *)(*(void *)(v9 + 48) + 8 * v35);
      char v40 = sub_241CDBB60();

      if (v40) {
        goto LABEL_24;
      }
      uint64_t v41 = ~v34;
      unint64_t v35 = (v35 + 1) & v41;
      unint64_t v36 = v35 >> 6;
      uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
      uint64_t v38 = 1 << v35;
      if ((v37 & (1 << v35)) != 0)
      {
        while (1)
        {
          id v42 = *(id *)(*(void *)(v9 + 48) + 8 * v35);
          char v43 = sub_241CDBB60();

          if (v43) {
            break;
          }
          unint64_t v35 = (v35 + 1) & v41;
          unint64_t v36 = v35 >> 6;
          uint64_t v37 = *(void *)(v13 + 8 * (v35 >> 6));
          uint64_t v38 = 1 << v35;
          if ((v37 & (1 << v35)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v11 = v50;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v11 = v50;
    }
    *(void *)(v13 + 8 * v36) = v38 | v37;
    *(void *)(*(void *)(v9 + 48) + 8 * v35) = v32;
    uint64_t v44 = *(void *)(v9 + 16);
    BOOL v16 = __OFADD__(v44, 1);
    uint64_t v45 = v44 + 1;
    if (v16) {
      goto LABEL_39;
    }
    *(void *)(v9 + 16) = v45;
LABEL_25:
    if (++v31 == v11) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_241C69E8C(uint64_t a1)
{
  return sub_241C695CC(a1, MEMORY[0x263F07908], sub_241C6C7AC, (void (*)(uint64_t))sub_241C6C7E0, (void (*)(uint64_t))sub_241C6C814);
}

uint64_t sub_241C69EE0(uint64_t a1)
{
  uint64_t v2 = sub_241CD7520();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_241C6C954();
  uint64_t result = sub_241CDB390();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_241C5A110((uint64_t)v8, v6, MEMORY[0x263F45618], (void (*)(uint64_t))sub_241C6C954, (void (*)(void, void, void))sub_241C5B660, (void (*)(uint64_t))sub_241C6C988);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_241C6A09C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_241CDB390();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_241C59F0C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_241C6A134(uint64_t a1)
{
  uint64_t v2 = sub_241CDA0B0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_241C6C9BC();
  uint64_t result = sub_241CDB390();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_241C5A110((uint64_t)v8, v6, MEMORY[0x263F8F3A0], (void (*)(uint64_t))sub_241C6C9BC, (void (*)(void, void, void))sub_241C5BD1C, (void (*)(uint64_t))sub_241C6C9F0);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_241C6A2F0(unint64_t a1)
{
  return sub_241C6A314(a1, (unint64_t *)&qword_26B0304E8, 0x263F08A18, qword_26B0304F0, &qword_268D43878);
}

uint64_t sub_241C6A314(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, unint64_t *a5)
{
  unint64_t v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  sub_241A313AC(0, a2);
  sub_241A5A160(a4, a2);
  uint64_t result = sub_241CDB390();
  uint64_t v18 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_241CDBF50();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return v18;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      return v18;
    }
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        uint64_t v14 = (void *)MEMORY[0x245637160](i, a1);
        sub_241C5A3F8(&v17, v14, a2, a3, a5, a4);
      }
    }
    else
    {
      uint64_t v15 = (void **)(a1 + 32);
      do
      {
        uint64_t v16 = *v15++;
        sub_241C5A3F8(&v17, v16, a2, a3, a5, a4);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_241C6A4AC()
{
  return sub_241C70C90(type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471A0]);
}

uint64_t sub_241C6A4D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C47224, a2);
}

uint64_t sub_241C6A504()
{
  return sub_241C70F38(type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471A0]);
}

uint64_t sub_241C6A530@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C6A55C(a1, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t))sub_241C4C304, a2);
}

uint64_t sub_241C6A55C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(uint64_t, unint64_t, unint64_t, unint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2(0) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_241CD6810() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(sub_241CD7740() - 8);
  uint64_t result = a3(a1, v4 + v9, v4 + v12, v4 + ((v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)));
  *a4 = result;
  return result;
}

uint64_t sub_241C6A6A4()
{
  return sub_241C6A6D0(type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471A0]);
}

uint64_t sub_241C6A6D0(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  sub_241C2070C(0);
  uint64_t v35 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v5 = (v35 + 16) & ~v35;
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v7 = a1(0);
  uint64_t v34 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v8 = (v5 + v6 + v34) & ~v34;
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  sub_241A68508(0);
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v31 = *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v33 = sub_241CD7740();
  uint64_t v12 = *(void *)(v33 - 8);
  uint64_t v29 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v30 = *(void *)(v12 + 64);
  uint64_t v13 = v2 + v5;
  uint64_t v14 = sub_241CDB5B0();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v32 = v11;
  uint64_t v16 = (v8 + v9 + v11) & ~v11;
  uint64_t v17 = v2 + v8;
  uint64_t v18 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v2 + v8, v18);
  uint64_t v19 = v2 + v8 + *(int *)(v7 + 20);
  uint64_t v20 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = v17 + *(int *)(v7 + 28);
  uint64_t v22 = sub_241CD6810();
  uint64_t v23 = *(void *)(v22 - 8);
  id v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (!v24(v21, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  swift_bridgeObjectRelease();
  if (!v24(v2 + v16, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v2 + v16, v22);
  }
  uint64_t v25 = (v16 + v31 + v29) & ~v29;
  uint64_t v26 = v25 + v30;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2 + v25, v33);

  return MEMORY[0x270FA0238](v2, v26, v35 | v34 | v32 | v29 | 7);
}

uint64_t sub_241C6AAC0(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35AB8);
}

uint64_t sub_241C6AADC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD000000000000036, 0x8000000241CE4090, a2);
}

uint64_t sub_241C6AAF8()
{
  return sub_241C70628(type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47100]);
}

uint64_t sub_241C6AB24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C3B7B0, a2);
}

uint64_t sub_241C6AB50()
{
  return sub_241C6A6D0(type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47100]);
}

uint64_t sub_241C6AB7C()
{
  return sub_241C68E50((uint64_t (*)(void))sub_241C2070C, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(unint64_t, unint64_t, unint64_t, uint64_t))sub_241C52278);
}

uint64_t sub_241C6ABBC()
{
  return sub_241C70C90(type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47100]);
}

uint64_t sub_241C6ABE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C477C0, a2);
}

uint64_t sub_241C6AC14()
{
  return sub_241C70F38(type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47100]);
}

uint64_t sub_241C6AC40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C6A55C(a1, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t))sub_241C4C8B8, a2);
}

uint64_t sub_241C6AC6C()
{
  return sub_241C6A6D0(type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47100]);
}

uint64_t sub_241C6AC9C(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35A64);
}

uint64_t sub_241C6ACB8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD000000000000032, 0x8000000241CE4110, a2);
}

uint64_t sub_241C6ACD4()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = v0 + v8;
  uint64_t v11 = sub_241CD6810();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  }
  uint64_t v13 = v3 | v7 | 7;
  uint64_t v14 = v10 + *(int *)(v6 + 20);
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v8 + v9, v13);
}

uint64_t sub_241C6AEE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C3C4D8, a2);
}

void sub_241C6AF0C()
{
  if (!qword_268D43650)
  {
    sub_241C709A8(255, &qword_268D43658, sub_241AEBEC8);
    sub_241C5D8C8(255, &qword_268D43660, sub_241AEBEC8);
    sub_241C68394(&qword_268D43668, &qword_268D43658, sub_241AEBEC8);
    sub_241C70AEC(&qword_268D43670, &qword_268D43660, sub_241AEBEC8);
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43650);
    }
  }
}

void sub_241C6B010()
{
  if (!qword_268D43678)
  {
    sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
    sub_241C6AF0C();
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43680, (void (*)(uint64_t))sub_241C6AF0C);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43678);
    }
  }
}

uint64_t sub_241C6B10C()
{
  return sub_241C68E50((uint64_t (*)(void))sub_241AEBEC8, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(unint64_t, unint64_t, unint64_t, uint64_t))sub_241C52C8C);
}

uint64_t sub_241C6B14C()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = v0 + v8;
  uint64_t v11 = sub_241CD6810();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  }
  uint64_t v13 = v3 | v7 | 7;
  uint64_t v14 = v10 + *(int *)(v6 + 20);
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v8 + v9, v13);
}

uint64_t sub_241C6B358@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C47D5C, a2);
}

uint64_t sub_241C6B384()
{
  uint64_t v1 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v18 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = *(void *)(v5 + 64);
  uint64_t v19 = sub_241CD7740();
  uint64_t v7 = *(void *)(v19 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = *(void *)(v7 + 64);
  uint64_t v20 = v0;
  uint64_t v9 = v0 + v3;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  }
  uint64_t v10 = v2 | v6 | v8 | 7;
  uint64_t v11 = (v3 + v18 + v6) & ~v6;
  uint64_t v12 = (v11 + v17 + v8) & ~v8;
  uint64_t v13 = v9 + *(int *)(v1 + 20);
  uint64_t v14 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v20 + v11, v4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20 + v12, v19);

  return MEMORY[0x270FA0238](v20, v12 + v16, v10);
}

uint64_t sub_241C6B600@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C6A55C(a1, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t))sub_241C4CE6C, a2);
}

uint64_t sub_241C6B630()
{
  sub_241AEBEC8(0);
  uint64_t v29 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v29 + 16) & ~v29;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v28 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v5 = (v2 + v3 + v28) & ~v28;
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_241A68508(0);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v25 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v27 = sub_241CD7740();
  uint64_t v9 = *(void *)(v27 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v24 = *(void *)(v9 + 64);
  uint64_t v10 = v0 + v2;
  uint64_t v11 = sub_241CD70F0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v26 = v8;
  uint64_t v13 = (v5 + v6 + v8) & ~v8;
  uint64_t v14 = v0 + v5;
  uint64_t v15 = sub_241CD6810();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (!v17(v0 + v5, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0 + v5, v15);
  }
  uint64_t v18 = v14 + *(int *)(v4 + 20);
  uint64_t v19 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  swift_bridgeObjectRelease();

  if (!v17(v0 + v13, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0 + v13, v15);
  }
  uint64_t v20 = (v13 + v25 + v23) & ~v23;
  uint64_t v21 = v20 + v24;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v20, v27);

  return MEMORY[0x270FA0238](v0, v21, v29 | v28 | v26 | v23 | 7);
}

void sub_241C6B9E8(unint64_t a1)
{
}

uint64_t sub_241C6BA0C(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C37358(a1, a3, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  uint64_t v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD00000000000002CLL, 0x8000000241CE4220, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  unint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  char v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *unint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C6C0DC(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C37718(a1, a3, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  uint64_t v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD00000000000002BLL, 0x8000000241CE41D0, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  unint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  char v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *unint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

void sub_241C6C7AC(uint64_t a1)
{
}

uint64_t sub_241C6C7E0()
{
  return sub_241C61600(&qword_26B038430, MEMORY[0x263F07908]);
}

uint64_t sub_241C6C814()
{
  return sub_241C61600(&qword_26B030848, MEMORY[0x263F07908]);
}

uint64_t sub_241C6C848()
{
  return sub_241C61600(&qword_26B038920, MEMORY[0x263F45588]);
}

uint64_t sub_241C6C87C()
{
  return sub_241C61600(&qword_26B032010, MEMORY[0x263F45588]);
}

void sub_241C6C8B0(uint64_t a1)
{
}

uint64_t sub_241C6C8E8(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35A2C);
}

uint64_t sub_241C6C904@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD00000000000001BLL, 0x8000000241CE4200, a2);
}

void sub_241C6C920(uint64_t a1)
{
}

uint64_t sub_241C6C954()
{
  return sub_241C61600(&qword_26B032018, MEMORY[0x263F45618]);
}

uint64_t sub_241C6C988()
{
  return sub_241C61600(&qword_26B032020, MEMORY[0x263F45618]);
}

uint64_t sub_241C6C9BC()
{
  return sub_241C61600(&qword_268D42A98, MEMORY[0x263F8F3A0]);
}

uint64_t sub_241C6C9F0()
{
  return sub_241C61600(&qword_268D42AA0, MEMORY[0x263F8F3A0]);
}

void sub_241C6CA24(uint64_t a1)
{
}

void sub_241C6CA58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_241CDBDF0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_241C6CAC8()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v8, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v8, v10);
  }
  uint64_t v12 = v3 | v7 | 7;
  uint64_t v13 = v0 + v8 + *(int *)(v6 + 24);
  uint64_t v14 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v8 + v9, v12);
}

uint64_t sub_241C6CCC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C3D2C4, a2);
}

void sub_241C6CCF4()
{
  if (!qword_268D436A8)
  {
    sub_241C6CDB0(255, &qword_268D436B0, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput);
    sub_241C6148C(255, &qword_268D436B8, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput);
    sub_241C6CE3C();
    sub_241C6CEAC();
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D436A8);
    }
  }
}

void sub_241C6CDB0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_241A31144(255, a3, a4, (uint64_t (*)(void, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241A3DA64();
    unint64_t v5 = sub_241CDA510();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_241C6CE3C()
{
  unint64_t result = qword_268D436C0;
  if (!qword_268D436C0)
  {
    sub_241C6CDB0(255, &qword_268D436B0, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D436C0);
  }
  return result;
}

unint64_t sub_241C6CEAC()
{
  unint64_t result = qword_268D436C8;
  if (!qword_268D436C8)
  {
    sub_241C6148C(255, &qword_268D436B8, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D436C8);
  }
  return result;
}

void sub_241C6CF1C()
{
  if (!qword_268D436D0)
  {
    sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
    sub_241C6CCF4();
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D436D8, (void (*)(uint64_t))sub_241C6CCF4);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D436D0);
    }
  }
}

uint64_t sub_241C6D01C()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v8, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v8, v10);
  }
  uint64_t v12 = v3 | v7 | 7;
  uint64_t v13 = v0 + v8 + *(int *)(v6 + 24);
  uint64_t v14 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v8 + v9, v12);
}

uint64_t sub_241C6D21C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C482F8, a2);
}

uint64_t sub_241C6D248()
{
  uint64_t v18 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v18 - 8) + 80);
  uint64_t v2 = (v1 + 16) & ~v1;
  uint64_t v16 = *(void *)(*(void *)(v18 - 8) + 64);
  uint64_t v3 = sub_241CD6810();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = *(void *)(v4 + 64);
  uint64_t v17 = sub_241CD7740();
  uint64_t v6 = *(void *)(v17 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  uint64_t v15 = v1 | v5 | v7 | 7;
  uint64_t v9 = (v2 + v16 + v5) & ~v5;
  uint64_t v10 = (v9 + v14 + v7) & ~v7;
  uint64_t v11 = v0 + v2 + *(int *)(v18 + 24);
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v9, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v10, v17);

  return MEMORY[0x270FA0238](v0, v10 + v8, v15);
}

uint64_t sub_241C6D4B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0)
                 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_241CD6810() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_241CD7740() - 8);
  uint64_t result = sub_241C4D420(*(void **)a1, *(unsigned __int8 *)(a1 + 8), v2 + v6, v2 + v9, v2 + ((v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)));
  *a2 = result;
  return result;
}

uint64_t sub_241C6D5EC()
{
  uint64_t v1 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v21 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v21 + 25) & ~v21;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_241A68508(0);
  uint64_t v19 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v16 = (v2 + v3 + v19) & ~v19;
  uint64_t v18 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v20 = sub_241CD7740();
  uint64_t v5 = *(void *)(v20 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = *(void *)(v5 + 64);

  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_241CD6810();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v11 = v7 + *(int *)(v1 + 24);
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  if (!v10(v0 + v16, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v16, v8);
  }
  uint64_t v13 = (v16 + v18 + v6) & ~v6;
  uint64_t v14 = v13 + v17;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v13, v20);

  return MEMORY[0x270FA0238](v0, v14, v21 | v19 | v6 | 7);
}

void sub_241C6D8B4(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0)
                 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  sub_241A68508(0);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(void *)(sub_241CD7740() - 8);
  uint64_t v10 = v1 + ((v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = *(void **)(v1 + 16);
  char v12 = *(unsigned char *)(v1 + 24);

  sub_241C536A0(v11, v12, v1 + v4, v1 + v7, v10, a1);
}

unint64_t sub_241C6D9F4()
{
  unint64_t result = qword_268D436F0;
  if (!qword_268D436F0)
  {
    sub_241C62F08(255, &qword_268D436E8, &qword_268D434B8, (uint64_t)&type metadata for VisionPrescriptionCurrentValueSummarySharableModelGenerator.QueryOutput);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D436F0);
  }
  return result;
}

uint64_t sub_241C6DA64(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&long long v51 = a2;
  uint64_t v48 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_241CD7740();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CD79A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C37AD8(a1, a3, (uint64_t)v52);
  sub_241CDA0F0();
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 16))(v10, v51, v7);
  uint64_t v50 = v6;
  sub_241C61648(a1, (uint64_t)v6, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
  *(void *)&long long v51 = v13;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB670();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    *(_DWORD *)uint64_t v21 = 136315650;
    os_log_t v44 = v17;
    uint64_t v53 = sub_241A33FE4(0xD000000000000027, 0x8000000241CE4350, &v55);
    uint64_t v45 = v11;
    sub_241CDBBF0();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v22 = (void *)sub_241CD76E0();
    uint64_t v23 = sub_241CD73E0();
    int v43 = v19;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t v53 = sub_241A33FE4(v24, v26, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v21 + 22) = 2080;
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000016;
    unint64_t v54 = 0x8000000241CE2420;
    uint64_t v27 = (uint64_t)v50;
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    AnchoredTypeState.logDescription.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_241A33FE4(v53, v54, &v55);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241C73BBC(v27, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
    os_log_t v28 = v44;
    _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v43, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v21, 0x20u);
    uint64_t v29 = v46;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    uint64_t v30 = v21;
    uint64_t v14 = v47;
    MEMORY[0x245637F20](v30, -1, -1);

    (*(void (**)(void, uint64_t))(v45 + 8))(v51, v49);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241C73BBC((uint64_t)v50, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);

    (*(void (**)(void, uint64_t))(v11 + 8))(v51, v49);
  }
  uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241A29CE8(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD7C30();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_241CEB730;
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  unint64_t v36 = (uint64_t *)(v35 + v34);
  sub_241A29CE8(0, &qword_26B034F38, MEMORY[0x263F45738], v31);
  unint64_t v37 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v51;
  unint64_t v39 = v38 + v37;
  char v40 = v52;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v39, v52, v14);
  *unint64_t v36 = v38;
  (*(void (**)(uint64_t *, void, uint64_t))(v33 + 104))(v36, *MEMORY[0x263F45880], v32);
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v40, v14);
  return v35;
}

uint64_t sub_241C6E138(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35B7C);
}

uint64_t sub_241C6E154@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD00000000000003BLL, 0x8000000241CE4290, a2);
}

uint64_t sub_241C6E170()
{
  return sub_241C72F60(type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47100]);
}

uint64_t sub_241C6E19C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C3DF3C, a2);
}

void sub_241C6E1C8(uint64_t a1)
{
}

void sub_241C6E1FC()
{
  if (!qword_268D436F8)
  {
    sub_241C709A8(255, (unint64_t *)&qword_26B0326B8, sub_241C6E1C8);
    sub_241C5D8C8(255, &qword_268D43700, sub_241C6E1C8);
    sub_241C68394(&qword_26B0326B0, (unint64_t *)&qword_26B0326B8, sub_241C6E1C8);
    sub_241C70AEC(&qword_268D43708, &qword_268D43700, sub_241C6E1C8);
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D436F8);
    }
  }
}

void sub_241C6E300()
{
  if (!qword_268D43710)
  {
    sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
    sub_241C6E1FC();
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43718, (void (*)(uint64_t))sub_241C6E1FC);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43710);
    }
  }
}

uint64_t sub_241C6E3FC()
{
  return sub_241C68E50((uint64_t (*)(void))sub_241C6E1C8, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(unint64_t, unint64_t, unint64_t, uint64_t))sub_241C54080);
}

uint64_t sub_241C6E43C()
{
  return sub_241C7324C(type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47100]);
}

uint64_t sub_241C6E468@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C48800, a2);
}

uint64_t sub_241C6E494()
{
  return sub_241C734F4(type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47100]);
}

uint64_t sub_241C6E4C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C6A55C(a1, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t))sub_241C4D938, a2);
}

uint64_t sub_241C6E4F0()
{
  sub_241C6E1C8(0);
  uint64_t v32 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v32 + 16) & ~v32;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v31 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v5 = (v2 + v3 + v31) & ~v31;
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_241A68508(0);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = v5 + v6 + v8;
  uint64_t v29 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v30 = sub_241CD7740();
  uint64_t v10 = *(void *)(v30 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v27 = *(void *)(v10 + 64);
  uint64_t v11 = (id *)(v0 + v2);
  uint64_t Output = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.QueryOutput(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Output - 8) + 48))(v0 + v2, 1, Output))
  {

    uint64_t v13 = (char *)v11 + *(int *)(Output + 24);
    uint64_t v14 = sub_241CD6D00();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = v9 & ~v8;
  uint64_t v16 = v0 + v5;
  uint64_t v17 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v0 + v5, v17);
  uint64_t v18 = v0 + v5 + *(int *)(v4 + 20);
  uint64_t v19 = sub_241CD6810();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (!v21(v18, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  }
  uint64_t v22 = v16 + *(int *)(v4 + 28);
  uint64_t v23 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  swift_bridgeObjectRelease();
  if (!v21(v0 + v15, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v0 + v15, v19);
  }
  uint64_t v24 = (v15 + v29 + v28) & ~v28;
  uint64_t v25 = v24 + v27;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v24, v30);

  return MEMORY[0x270FA0238](v0, v25, v32 | v31 | v8 | v28 | 7);
}

uint64_t sub_241C6E8E8(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35B44);
}

uint64_t sub_241C6E904@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD000000000000038, 0x8000000241CE4310, a2);
}

uint64_t sub_241C6E920()
{
  return sub_241C721AC(type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47030]);
}

uint64_t sub_241C6E94C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C3ED3C, a2);
}

void sub_241C6E978()
{
  if (!qword_268D43738)
  {
    sub_241C6EA60();
    sub_241C6EB84();
    sub_241C61600(&qword_268D43750, (void (*)(uint64_t))sub_241C6EA60);
    sub_241C61600(&qword_268D43758, (void (*)(uint64_t))sub_241C6EB84);
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43738);
    }
  }
}

void sub_241C6EA60()
{
  if (!qword_268D43740)
  {
    sub_241C6EB08(255, (unint64_t *)&qword_26B032CB8, (unint64_t *)&unk_26B034CB0, MEMORY[0x263F8D488], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43740);
    }
  }
}

void sub_241C6EB08(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_241C62EA0(255, a3, &qword_26B0304D8, 0x263F0A6B8, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241C6EB84()
{
  if (!qword_268D43748)
  {
    sub_241C6EB08(255, (unint64_t *)&qword_26B032CB8, (unint64_t *)&unk_26B034CB0, MEMORY[0x263F8D488], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43748);
    }
  }
}

void sub_241C6EC24()
{
  if (!qword_268D43760)
  {
    sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
    sub_241C6E978();
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43768, (void (*)(uint64_t))sub_241C6E978);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43760);
    }
  }
}

uint64_t sub_241C6ED20(uint64_t a1, uint64_t a2)
{
  sub_241C6EB08(0, (unint64_t *)&qword_26B032CB8, (unint64_t *)&unk_26B034CB0, MEMORY[0x263F8D488], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241C6EDBC()
{
  return sub_241C66968(type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))sub_241C54A5C);
}

uint64_t sub_241C6EDE8()
{
  return sub_241C728A4(type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47030]);
}

uint64_t sub_241C6EE14@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C48D9C, a2);
}

uint64_t sub_241C6EE40()
{
  return sub_241C72B58(type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47030]);
}

uint64_t sub_241C6EE6C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C6EE98(a1, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t, unint64_t))sub_241C4DEEC, a2);
}

uint64_t sub_241C6EE98@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void, unint64_t, unint64_t, unint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2(0) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_241CD6810() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(sub_241CD7740() - 8);
  uint64_t result = a3(*a1, v4 + v9, v4 + v12, v4 + ((v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)));
  *a4 = result;
  return result;
}

uint64_t sub_241C6EFE4()
{
  uint64_t v1 = (int *)type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v23 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v23 + 24) & ~v23;
  uint64_t v3 = *(void *)(*((void *)v1 - 1) + 64);
  sub_241A68508(0);
  uint64_t v21 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v18 = (v2 + v3 + v21) & ~v21;
  uint64_t v20 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v22 = sub_241CD7740();
  uint64_t v5 = *(void *)(v22 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = *(void *)(v5 + 64);
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_241CD6810();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v11 = v7 + v1[5];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v7 + v1[8];
  uint64_t v14 = sub_241CD9AA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);

  if (!v10(v0 + v18, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v18, v8);
  }
  uint64_t v15 = (v18 + v20 + v6) & ~v6;
  uint64_t v16 = v15 + v19;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v15, v22);

  return MEMORY[0x270FA0238](v0, v16, v23 | v21 | v6 | 7);
}

void sub_241C6F2F8()
{
  if (!qword_268D43778)
  {
    sub_241C6EB08(255, (unint64_t *)&qword_26B032CB8, (unint64_t *)&unk_26B034CB0, MEMORY[0x263F8D488], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    unint64_t v0 = sub_241CDA5C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43778);
    }
  }
}

uint64_t sub_241C6F38C(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35B0C);
}

uint64_t sub_241C6F3A8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD000000000000037, 0x8000000241CE43C0, a2);
}

uint64_t sub_241C6F3C4()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = v0 + v8;
  uint64_t v11 = sub_241CD6810();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  }
  uint64_t v13 = v3 | v7 | 7;
  uint64_t v14 = v10 + *(int *)(v6 + 24);
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v8 + v9, v13);
}

uint64_t sub_241C6F5D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C3F9A0, a2);
}

void sub_241C6F5FC()
{
  if (!qword_26B0324C0)
  {
    sub_241A5B1CC();
    sub_241B99ED4();
    sub_241C61600(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
    sub_241C61600((unint64_t *)&qword_26B032850, (void (*)(uint64_t))sub_241B99ED4);
    unint64_t v0 = sub_241CDA3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0324C0);
    }
  }
}

void sub_241C6F6E8()
{
  if (!qword_26B032450)
  {
    sub_241C6F5FC();
    sub_241C62EA0(255, &qword_26B032CD0, &qword_26B034E38, 0x263F46588, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241C61600(&qword_26B0324B8, (void (*)(uint64_t))sub_241C6F5FC);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032450);
    }
  }
}

void sub_241C6F7C0()
{
  if (!qword_268D43788)
  {
    sub_241C6F89C();
    sub_241C725AC(255, &qword_268D43798, &qword_26B032CD0, &qword_26B034E38, 0x263F46588);
    sub_241C61600(&qword_268D437A0, (void (*)(uint64_t))sub_241C6F89C);
    sub_241C6F938();
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43788);
    }
  }
}

void sub_241C6F89C()
{
  if (!qword_268D43790)
  {
    sub_241C62EA0(255, &qword_26B032CD0, &qword_26B034E38, 0x263F46588, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43790);
    }
  }
}

unint64_t sub_241C6F938()
{
  unint64_t result = qword_268D437A8;
  if (!qword_268D437A8)
  {
    sub_241C725AC(255, &qword_268D43798, &qword_26B032CD0, &qword_26B034E38, 0x263F46588);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D437A8);
  }
  return result;
}

void sub_241C6F9B0()
{
  if (!qword_268D437B0)
  {
    sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
    sub_241C6F7C0();
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D437B8, (void (*)(uint64_t))sub_241C6F7C0);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D437B0);
    }
  }
}

uint64_t sub_241C6FAAC()
{
  return sub_241C66968(type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))sub_241C55438);
}

uint64_t sub_241C6FAD8()
{
  uint64_t v1 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  uint64_t v8 = v2 | 7;
  uint64_t v9 = v3 + v4;
  uint64_t v10 = v5 + *(int *)(v1 + 24);
  uint64_t v11 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v9, v8);
}

void sub_241C6FC60(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_241C7818C(a1, a2, v6);
}

uint64_t sub_241C6FCE0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241C6FD18@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C788F8(a1, *(uint64_t (**)(uint64_t, char *))(v2 + 16), a2);
}

uint64_t sub_241C6FD20()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = v0 + v8;
  uint64_t v11 = sub_241CD6810();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  }
  uint64_t v13 = v3 | v7 | 7;
  uint64_t v14 = v10 + *(int *)(v6 + 24);
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v8 + v9, v13);
}

uint64_t sub_241C6FF2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C492D0, a2);
}

uint64_t sub_241C6FF58()
{
  uint64_t v1 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v18 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = *(void *)(v5 + 64);
  uint64_t v19 = sub_241CD7740();
  uint64_t v7 = *(void *)(v19 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = *(void *)(v7 + 64);
  uint64_t v20 = v0;
  uint64_t v9 = v0 + v3;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  }
  uint64_t v10 = v2 | v6 | v8 | 7;
  uint64_t v11 = (v3 + v18 + v6) & ~v6;
  uint64_t v12 = (v11 + v17 + v8) & ~v8;
  uint64_t v13 = v9 + *(int *)(v1 + 24);
  uint64_t v14 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v20 + v11, v4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20 + v12, v19);

  return MEMORY[0x270FA0238](v20, v12 + v16, v10);
}

uint64_t sub_241C701D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C6EE98(a1, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t, unint64_t))sub_241C4E3F4, a2);
}

uint64_t sub_241C70204()
{
  uint64_t v1 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v21 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v21 + 24) & ~v21;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_241A68508(0);
  uint64_t v19 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v16 = (v2 + v3 + v19) & ~v19;
  uint64_t v18 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v20 = sub_241CD7740();
  uint64_t v5 = *(void *)(v20 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = *(void *)(v5 + 64);

  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_241CD6810();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v11 = v7 + *(int *)(v1 + 24);
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();

  if (!v10(v0 + v16, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v16, v8);
  }
  uint64_t v13 = (v16 + v18 + v6) & ~v6;
  uint64_t v14 = v13 + v17;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v13, v20);

  return MEMORY[0x270FA0238](v0, v14, v21 | v19 | v6 | 7);
}

void sub_241C704D8(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_241C62EA0(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    unint64_t v6 = sub_241CDA5C0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_241C70548()
{
  unint64_t result = qword_268D437D0;
  if (!qword_268D437D0)
  {
    sub_241C704D8(255, &qword_268D437C8, &qword_26B032CD0, &qword_26B034E38, 0x263F46588);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D437D0);
  }
  return result;
}

uint64_t sub_241C705C4(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35A80);
}

uint64_t sub_241C705E0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD000000000000033, 0x8000000241CE4440, a2);
}

uint64_t sub_241C705FC()
{
  return sub_241C70628(type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47168]);
}

uint64_t sub_241C70628(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v5 = sub_241CD7740();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 + 24) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = a1(0);
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(*(void *)(v10 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2 + v8, v5);
  uint64_t v14 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v2 + v12, v14);
  uint64_t v15 = v2 + v12 + *(int *)(v10 + 20);
  uint64_t v16 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v2 + v12 + *(int *)(v10 + 28);
  uint64_t v18 = sub_241CD6810();
  uint64_t v19 = *(void *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v2, v12 + v13, v7 | v11 | 7);
}

uint64_t sub_241C70878@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C40B20, a2);
}

void sub_241C708A4()
{
  if (!qword_268D437D8)
  {
    sub_241C709A8(255, &qword_268D437E0, sub_241C70A1C);
    sub_241C5D8C8(255, &qword_268D437E8, sub_241C70A1C);
    sub_241C68394(&qword_268D437F0, &qword_268D437E0, sub_241C70A1C);
    sub_241C70AEC(&qword_268D437F8, &qword_268D437E8, sub_241C70A1C);
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D437D8);
    }
  }
}

void sub_241C709A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_241A3DA64();
    unint64_t v4 = sub_241CDA510();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241C70A1C(uint64_t a1)
{
}

void sub_241C70A50()
{
  if (!qword_26B034C00)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B038E58);
    sub_241A5A160((unint64_t *)&qword_26B038E60, (unint64_t *)&qword_26B038E58);
    unint64_t v0 = sub_241CDAFB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034C00);
    }
  }
}

uint64_t sub_241C70AEC(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C5D8C8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241C70B3C()
{
  if (!qword_268D43800)
  {
    sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
    sub_241C708A4();
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43808, (void (*)(uint64_t))sub_241C708A4);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43800);
    }
  }
}

uint64_t sub_241C70C38()
{
  return sub_241C66968(type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))sub_241C55E14);
}

uint64_t sub_241C70C64()
{
  return sub_241C70C90(type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47168]);
}

uint64_t sub_241C70C90(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v5 = sub_241CD7740();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 + 16) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = a1(0);
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(*(void *)(v10 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2 + v8, v5);
  uint64_t v14 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v2 + v12, v14);
  uint64_t v15 = v2 + v12 + *(int *)(v10 + 20);
  uint64_t v16 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v2 + v12 + *(int *)(v10 + 28);
  uint64_t v18 = sub_241CD6810();
  uint64_t v19 = *(void *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v2, v12 + v13, v7 | v11 | 7);
}

uint64_t sub_241C70EE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C497E4, a2);
}

uint64_t sub_241C70F0C()
{
  return sub_241C70F38(type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F47168]);
}

uint64_t sub_241C70F38(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v22 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = *(void *)(v7 + 64);
  uint64_t v23 = sub_241CD7740();
  uint64_t v9 = *(void *)(v23 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v20 = *(void *)(v9 + 64);
  uint64_t v11 = v2 + ((v5 + 16) & ~v5);
  uint64_t v12 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v11 + *(int *)(v4 + 20);
  uint64_t v14 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v11 + *(int *)(v4 + 28);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
  }
  uint64_t v16 = v5 | v8 | v10 | 7;
  uint64_t v17 = (((v5 + 16) & ~v5) + v22 + v8) & ~v8;
  uint64_t v18 = (v17 + v21 + v10) & ~v10;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2 + v17, v6);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2 + v18, v23);

  return MEMORY[0x270FA0238](v2, v18 + v20, v16);
}

uint64_t sub_241C711F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C6EE98(a1, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t, unint64_t))sub_241C4E908, a2);
}

uint64_t sub_241C71224()
{
  uint64_t v1 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v23 + 24) & ~v23;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_241A68508(0);
  uint64_t v21 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v18 = (v2 + v3 + v21) & ~v21;
  uint64_t v20 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v22 = sub_241CD7740();
  uint64_t v5 = *(void *)(v22 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = *(void *)(v5 + 64);
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_241CD9D80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v7 + *(int *)(v1 + 20);
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v7 + *(int *)(v1 + 28);
  uint64_t v12 = sub_241CD6810();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v14(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();
  if (!v14(v0 + v18, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0 + v18, v12);
  }
  uint64_t v15 = (v18 + v20 + v6) & ~v6;
  uint64_t v16 = v15 + v19;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v15, v22);

  return MEMORY[0x270FA0238](v0, v16, v23 | v21 | v6 | 7);
}

uint64_t sub_241C7152C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A29CE8(255, a2, a3, MEMORY[0x263EFDDF8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C71594(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35A9C);
}

uint64_t sub_241C715B0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD000000000000034, 0x8000000241CE44C0, a2);
}

void sub_241C715CC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_241A313AC(255, a3);
    sub_241A5A160(a5, a3);
    unint64_t v8 = sub_241CDBDF0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241C71658()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = v0 + v8;
  uint64_t v11 = sub_241CD6810();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  }
  uint64_t v13 = v3 | v7 | 7;
  uint64_t v14 = v10 + *(int *)(v6 + 20);
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = v10 + *(int *)(v6 + 32);
  uint64_t v17 = sub_241CD9F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);

  return MEMORY[0x270FA0238](v0, v8 + v9, v13);
}

uint64_t sub_241C71898@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C42BCC, a2);
}

uint64_t sub_241C718C8()
{
  return sub_241C66968(type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))sub_241C57204);
}

uint64_t sub_241C718F4()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = v0 + v8;
  uint64_t v11 = sub_241CD6810();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  }
  uint64_t v13 = v3 | v7 | 7;
  uint64_t v14 = v10 + *(int *)(v6 + 20);
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = v10 + *(int *)(v6 + 32);
  uint64_t v17 = sub_241CD9F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);

  return MEMORY[0x270FA0238](v0, v8 + v9, v13);
}

uint64_t sub_241C71B34@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C4A22C, a2);
}

uint64_t sub_241C71B60()
{
  uint64_t v1 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v20 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = *(void *)(v5 + 64);
  uint64_t v21 = sub_241CD7740();
  uint64_t v7 = *(void *)(v21 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = *(void *)(v7 + 64);
  uint64_t v22 = v4;
  uint64_t v9 = v0 + v3;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  }
  uint64_t v10 = v2 | v6 | v8 | 7;
  uint64_t v11 = (v3 + v20 + v6) & ~v6;
  uint64_t v12 = (v11 + v19 + v8) & ~v8;
  uint64_t v13 = v9 + *(int *)(v1 + 20);
  uint64_t v14 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v9 + *(int *)(v1 + 32);
  uint64_t v16 = sub_241CD9F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v11, v22);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v12, v21);

  return MEMORY[0x270FA0238](v0, v12 + v18, v10);
}

uint64_t sub_241C71E0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C6EE98(a1, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t, unint64_t))sub_241C4F32C, a2);
}

uint64_t sub_241C71E3C()
{
  uint64_t v1 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v23 + 24) & ~v23;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_241A68508(0);
  uint64_t v21 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v18 = (v2 + v3 + v21) & ~v21;
  uint64_t v20 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v22 = sub_241CD7740();
  uint64_t v5 = *(void *)(v22 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = *(void *)(v5 + 64);

  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_241CD6810();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v11 = v7 + *(int *)(v1 + 20);
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v7 + *(int *)(v1 + 32);
  uint64_t v14 = sub_241CD9F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  if (!v10(v0 + v18, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v18, v8);
  }
  uint64_t v15 = (v18 + v20 + v6) & ~v6;
  uint64_t v16 = v15 + v19;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v15, v22);

  return MEMORY[0x270FA0238](v0, v16, v23 | v21 | v6 | 7);
}

uint64_t sub_241C72148(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35AF0);
}

uint64_t sub_241C72164@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD000000000000036, 0x8000000241CE4540, a2);
}

uint64_t sub_241C72180()
{
  return sub_241C721AC(type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request, MEMORY[0x263F47070]);
}

uint64_t sub_241C721AC(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v5 = sub_241CD7740();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 + 24) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = (int *)a1(0);
  uint64_t v11 = *(unsigned __int8 *)(*((void *)v10 - 1) + 80);
  uint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(*((void *)v10 - 1) + 64);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2 + v8, v5);
  uint64_t v14 = v2 + v12;
  uint64_t v15 = sub_241CD6810();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v2 + v12, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2 + v12, v15);
  }
  uint64_t v17 = v7 | v11 | 7;
  uint64_t v18 = v14 + v10[5];
  uint64_t v19 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = v14 + v10[8];
  uint64_t v21 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);

  return MEMORY[0x270FA0238](v2, v12 + v13, v17);
}

uint64_t sub_241C72408@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C43828, a2);
}

void sub_241C72434()
{
  if (!qword_268D43828)
  {
    sub_241C72510();
    sub_241C725AC(255, &qword_268D43838, &qword_26B032CC8, (unint64_t *)&qword_26B02E800, 0x263F0A768);
    sub_241C61600(&qword_268D43840, (void (*)(uint64_t))sub_241C72510);
    sub_241C7262C();
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43828);
    }
  }
}

void sub_241C72510()
{
  if (!qword_268D43830)
  {
    sub_241C62EA0(255, &qword_26B032CC8, (unint64_t *)&qword_26B02E800, 0x263F0A768, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43830);
    }
  }
}

void sub_241C725AC(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_241C62EA0(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    unint64_t v6 = sub_241CDA510();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_241C7262C()
{
  unint64_t result = qword_268D43848;
  if (!qword_268D43848)
  {
    sub_241C725AC(255, &qword_268D43838, &qword_26B032CC8, (unint64_t *)&qword_26B02E800, 0x263F0A768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43848);
  }
  return result;
}

void sub_241C726A4()
{
  if (!qword_268D43850)
  {
    sub_241C5D8C8(255, &qword_26B032720, sub_241B6F648);
    sub_241C72434();
    sub_241C70AEC((unint64_t *)&qword_26B038970, &qword_26B032720, sub_241B6F648);
    sub_241C61600(&qword_268D43858, (void (*)(uint64_t))sub_241C72434);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43850);
    }
  }
}

uint64_t sub_241C7279C()
{
  return sub_241C6663C(type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request, MEMORY[0x263F47070]);
}

uint64_t sub_241C727C8(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_241C62EA0(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_241C7284C()
{
  return sub_241C66968(type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))sub_241C57BE0);
}

uint64_t sub_241C72878()
{
  return sub_241C728A4(type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request, MEMORY[0x263F47070]);
}

uint64_t sub_241C728A4(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v5 = sub_241CD7740();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 + 16) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = (int *)a1(0);
  uint64_t v11 = *(unsigned __int8 *)(*((void *)v10 - 1) + 80);
  uint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(*((void *)v10 - 1) + 64);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2 + v8, v5);
  uint64_t v14 = v2 + v12;
  uint64_t v15 = sub_241CD6810();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v2 + v12, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2 + v12, v15);
  }
  uint64_t v17 = v7 | v11 | 7;
  uint64_t v18 = v14 + v10[5];
  uint64_t v19 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = v14 + v10[8];
  uint64_t v21 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);

  return MEMORY[0x270FA0238](v2, v12 + v13, v17);
}

uint64_t sub_241C72B00@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C4A758, a2);
}

uint64_t sub_241C72B2C()
{
  return sub_241C72B58(type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request, MEMORY[0x263F47070]);
}

uint64_t sub_241C72B58(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v3 = v2;
  uint64_t v4 = (int *)a1(0);
  uint64_t v5 = *(unsigned __int8 *)(*((void *)v4 - 1) + 80);
  uint64_t v6 = (v5 + 16) & ~v5;
  uint64_t v22 = *(void *)(*((void *)v4 - 1) + 64);
  uint64_t v7 = sub_241CD6810();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = *(void *)(v8 + 64);
  uint64_t v24 = sub_241CD7740();
  uint64_t v10 = *(void *)(v24 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v26 = v3;
  uint64_t v13 = v3 + v6;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v7);
  }
  uint64_t v23 = v5 | v9 | v11 | 7;
  uint64_t v14 = (v6 + v22 + v9) & ~v9;
  uint64_t v15 = (v14 + v21 + v11) & ~v11;
  uint64_t v16 = v13 + v4[5];
  uint64_t v17 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  swift_bridgeObjectRelease();
  uint64_t v18 = v13 + v4[8];
  uint64_t v19 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v26 + v14, v7);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v26 + v15, v24);

  return MEMORY[0x270FA0238](v26, v15 + v12, v23);
}

uint64_t sub_241C72E28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C6EE98(a1, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t, unint64_t))sub_241C4F840, a2);
}

uint64_t sub_241C72E54()
{
  return sub_241C6663C(type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request, MEMORY[0x263F47070]);
}

unint64_t sub_241C72E80()
{
  unint64_t result = qword_268D43870;
  if (!qword_268D43870)
  {
    sub_241C704D8(255, &qword_268D43868, &qword_26B032CC8, (unint64_t *)&qword_26B02E800, 0x263F0A768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43870);
  }
  return result;
}

uint64_t sub_241C72EFC(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35A48);
}

uint64_t sub_241C72F18@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD00000000000002FLL, 0x8000000241CE45C0, a2);
}

uint64_t sub_241C72F34()
{
  return sub_241C72F60(type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471C0]);
}

uint64_t sub_241C72F60(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v5 = sub_241CD7740();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 + 24) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = a1(0);
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(*(void *)(v10 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2 + v8, v5);
  uint64_t v14 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v2 + v12, v14);
  uint64_t v15 = v2 + v12 + *(int *)(v10 + 20);
  uint64_t v16 = sub_241CD6810();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  uint64_t v18 = v7 | v11 | 7;
  uint64_t v19 = v2 + v12 + *(int *)(v10 + 28);
  uint64_t v20 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v2, v12 + v13, v18);
}

uint64_t sub_241C731B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C66004(a1, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_241C44484, a2);
}

uint64_t sub_241C731E0()
{
  return sub_241C68E50((uint64_t (*)(void))sub_241C2070C, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(unint64_t, unint64_t, unint64_t, uint64_t))sub_241C585F4);
}

uint64_t sub_241C73220()
{
  return sub_241C7324C(type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471C0]);
}

uint64_t sub_241C7324C(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v5 = sub_241CD7740();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 + 16) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = a1(0);
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(*(void *)(v10 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2 + v8, v5);
  uint64_t v14 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v2 + v12, v14);
  uint64_t v15 = v2 + v12 + *(int *)(v10 + 20);
  uint64_t v16 = sub_241CD6810();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  uint64_t v18 = v7 | v11 | 7;
  uint64_t v19 = v2 + v12 + *(int *)(v10 + 28);
  uint64_t v20 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v2, v12 + v13, v18);
}

uint64_t sub_241C7349C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C664C8(a1, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(void, unint64_t, unint64_t))sub_241C4AC6C, a2);
}

uint64_t sub_241C734C8()
{
  return sub_241C734F4(type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request, MEMORY[0x263F471C0]);
}

uint64_t sub_241C734F4(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v22 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = *(void *)(v7 + 64);
  uint64_t v23 = sub_241CD7740();
  uint64_t v9 = *(void *)(v23 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = *(void *)(v9 + 64);
  uint64_t v11 = v2 + ((v5 + 16) & ~v5);
  uint64_t v12 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v11 + *(int *)(v4 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13, v6);
  }
  uint64_t v20 = v5 | v8 | v10 | 7;
  uint64_t v14 = (((v5 + 16) & ~v5) + v22 + v8) & ~v8;
  uint64_t v15 = (v14 + v21 + v10) & ~v10;
  uint64_t v16 = v11 + *(int *)(v4 + 28);
  uint64_t v17 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2 + v14, v6);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2 + v15, v23);

  return MEMORY[0x270FA0238](v2, v15 + v19, v20);
}

uint64_t sub_241C737B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241C6A55C(a1, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request, (uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t))sub_241C4FD54, a2);
}

uint64_t sub_241C737E4()
{
  sub_241C2070C(0);
  uint64_t v31 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v31 + 16) & ~v31;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v30 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v5 = (v2 + v3 + v30) & ~v30;
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_241A68508(0);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v27 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v29 = sub_241CD7740();
  uint64_t v9 = *(void *)(v29 - 8);
  uint64_t v25 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v26 = *(void *)(v9 + 64);
  uint64_t v10 = v0 + v2;
  uint64_t v11 = sub_241CDB5B0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v28 = v8;
  uint64_t v13 = (v5 + v6 + v8) & ~v8;
  uint64_t v14 = v0 + v5;
  uint64_t v15 = sub_241CD9EA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v0 + v5, v15);
  uint64_t v16 = v0 + v5 + *(int *)(v4 + 20);
  uint64_t v17 = sub_241CD6810();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (!v19(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  uint64_t v20 = v14 + *(int *)(v4 + 28);
  uint64_t v21 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  swift_bridgeObjectRelease();
  if (!v19(v0 + v13, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v0 + v13, v17);
  }
  uint64_t v22 = (v13 + v27 + v25) & ~v25;
  uint64_t v23 = v22 + v26;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v22, v29);

  return MEMORY[0x270FA0238](v0, v23, v31 | v30 | v28 | v25 | 7);
}

uint64_t sub_241C73BBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241C73C20()
{
  uint64_t v20 = sub_241CD7740();
  uint64_t v1 = *(void *)(v20 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v17 = (v2 + 24) & ~v2;
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v17 + v3 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = (v8 + v6 + v7) & ~v6;
  uint64_t v19 = sub_241CD6D00();
  uint64_t v10 = *(void *)(v19 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v9 + v8 + v11) & ~v11;
  uint64_t v18 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v2 | v6 | v11 | 7;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v17, v20);
  uint64_t v14 = v0 + v7;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v15(v14, v4);
  v15(v0 + v9, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v19);

  return MEMORY[0x270FA0238](v0, v18, v13);
}

uint64_t sub_241C73E28(uint64_t *a1)
{
  return sub_241C66B6C(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t))sub_241C35B28);
}

uint64_t sub_241C73E44()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_241C73ED4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C73EF0(a1, 0xD000000000000038, 0x8000000241CE4630, a2);
}

uint64_t sub_241C73EF0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(sub_241CD7740() - 8);
  return sub_241C3673C(*a1, v4 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), a2, a3, a4);
}

void sub_241C73F7C()
{
  if (!qword_26B0380B0)
  {
    type metadata accessor for HKCategoryValueAppleStandHour(255);
    sub_241C61600(&qword_26B038070, type metadata accessor for HKCategoryValueAppleStandHour);
    unint64_t v0 = sub_241CDBDF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0380B0);
    }
  }
}

void sub_241C74010()
{
  if (!qword_26B036930)
  {
    type metadata accessor for HKFeatureIdentifier(255);
    sub_241C61600(&qword_26B0368B8, type metadata accessor for HKFeatureIdentifier);
    unint64_t v0 = sub_241CDBDF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B036930);
    }
  }
}

uint64_t *sub_241C740A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = *v3;
  uint64_t v32 = sub_241CD7650();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_241CD7690();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a1;
  id v29 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v11 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v37 = inited;
  sub_241CDB2E0();
  uint64_t v12 = *(int *)(v11 + 40);
  uint64_t v35 = a2;
  char v13 = *(unsigned char *)(a2 + v12);
  sub_241A29C20(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_241CD73B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  if (v13)
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v18 + v17, *MEMORY[0x263F454D0], v14);
  }
  else
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB720;
    unint64_t v20 = v18 + v17;
    uint64_t v21 = *(void (**)(unint64_t, void, uint64_t))(v15 + 104);
    v21(v20, *MEMORY[0x263F45520], v14);
    v21(v20 + v16, *MEMORY[0x263F45538], v14);
  }
  id v19 = v29;
  sub_241C5D74C(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v22 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v7, *MEMORY[0x263F45690], v32);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries55OngoingFactorsCurrentValueSummarySharableModelGenerator_domain, v9, v33);
  uint64_t v23 = sub_241C75DB4(&qword_26B030028, (void (*)(uint64_t))type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  uint64_t v26 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v36, v35, v34, v23);
  sub_241C75E80(v25);
  uint64_t v27 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v24, v27);
  v3[2] = v26;
  return v3;
}

uint64_t sub_241C74550(void (*a1)(char *, void *), uint64_t a2, uint64_t a3)
{
  sub_241C765B8();
  uint64_t v142 = v6;
  uint64_t v141 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v140 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C7682C();
  uint64_t v145 = v8;
  uint64_t v144 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v143 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_241CDB4E0();
  uint64_t v137 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  uint64_t v148 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v147 = (void *)sub_241CD6D00();
  uint64_t v131 = (void *)*(v147 - 1);
  MEMORY[0x270FA5388](v147);
  uint64_t v129 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C7694C();
  *(void *)&long long v151 = v12;
  uint64_t v150 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v149 = (char *)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_241CD7650();
  uint64_t v158 = *(void *)(v154 - 8);
  MEMORY[0x270FA5388](v154);
  uint64_t v153 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241CD7690();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v155 = v15;
  uint64_t v156 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v136 = (char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v20 = (char *)&v118 - v19;
  uint64_t v21 = self;
  uint64_t v132 = a1;
  unint64_t v22 = (void *)sub_241CD6790();
  id v23 = objc_msgSend(v21, sel_predicateForSamplesWithinDateInterval_options_, v22, 0);

  sub_241CD76B0();
  sub_241A311E0(&v161, v162);
  uint64_t v24 = (void *)sub_241CD75B0();
  uint64_t v25 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v26 = (void *)(a3 + *(int *)(v25 + 20));
  uint64_t v27 = (void *)sub_241CD7770();
  id v28 = v23;
  uint64_t v29 = sub_241CDB5D0();

  id v152 = v28;
  sub_241A31190((uint64_t)&v161);
  uint64_t v160 = v29;
  sub_241CD7730();
  uint64_t v134 = a2;
  uint64_t v30 = (void *)sub_241CD76E0();
  sub_241A33460();
  uint64_t v32 = v31;
  uint64_t inited = swift_initStackObject();
  long long v146 = xmmword_241CEB710;
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  id v157 = v26;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v159 = inited;
  sub_241CDB2E0();
  uint64_t v34 = *(int *)(v25 + 40);
  uint64_t v135 = a3;
  LOBYTE(v25) = *(unsigned char *)(a3 + v34);
  sub_241A29C20(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v36 = v35;
  uint64_t v37 = sub_241CD73B0();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(void *)(v38 + 72);
  uint64_t v40 = *(unsigned __int8 *)(v38 + 80);
  uint64_t v133 = v38;
  uint64_t v130 = v32;
  uint64_t v128 = v34;
  uint64_t v127 = v39;
  uint64_t v126 = v36;
  uint64_t v125 = (v40 + 32) & ~v40;
  uint64_t v124 = v40;
  if (v25)
  {
    uint64_t v41 = (v40 + 32) & ~v40;
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_241CEB730;
    (*(void (**)(uint64_t, void, uint64_t))(v38 + 104))(v42 + v41, *MEMORY[0x263F454D0], v37);
  }
  else
  {
    uint64_t v44 = (v40 + 32) & ~v40;
    uint64_t v45 = v37;
    uint64_t v46 = v39;
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_241CEB720;
    uint64_t v47 = *(void (**)(uint64_t, void, uint64_t))(v38 + 104);
    v47(v42 + v44, *MEMORY[0x263F45520], v45);
    uint64_t v48 = v42 + v44 + v46;
    uint64_t v37 = v45;
    v47(v48, *MEMORY[0x263F45538], v45);
  }
  id v43 = v30;
  sub_241C5D74C(v42);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v49 = v156;
  swift_deallocClassInstance();
  unint64_t v50 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v50);
  swift_bridgeObjectRelease();
  int v51 = *MEMORY[0x263F45690];
  uint64_t v52 = *(void (**)(char *, void, uint64_t))(v158 + 104);
  uint64_t v53 = *MEMORY[0x263F45690];
  v158 += 104;
  uint64_t v123 = v52;
  v52(v153, v53, v154);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  unint64_t v54 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241C766E4(0, (unint64_t *)&qword_26B032790, (unint64_t *)&qword_26B034E90, MEMORY[0x263F8D8F0]);
  sub_241C767DC(&qword_26B038980, (unint64_t *)&qword_26B032790, (unint64_t *)&qword_26B034E90, v54);
  uint64_t v55 = sub_241CDA680();
  uint64_t v57 = *(void (**)(char *, uint64_t))(v49 + 8);
  uint64_t v56 = v49 + 8;
  uint64_t v122 = v57;
  v57(v20, v155);
  sub_241A31190((uint64_t)&v161);
  swift_release();
  uint64_t v58 = (void *)sub_241CD7770();
  id v59 = objc_msgSend(v58, sel_identifier);

  if (!v59)
  {
    sub_241CDB0D0();
    id v59 = (id)sub_241CDB090();
    swift_bridgeObjectRelease();
  }
  uint64_t v60 = sub_241CDB0D0();
  uint64_t v62 = v61;
  if (v60 == sub_241CDB0D0() && v62 == v63) {
    goto LABEL_8;
  }
  char v64 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v64) {
    goto LABEL_13;
  }
  uint64_t v65 = sub_241CDB0D0();
  uint64_t v67 = v66;
  if (v65 == sub_241CDB0D0() && v67 == v68)
  {
LABEL_8:
    swift_bridgeObjectRelease_n();
LABEL_13:
    uint64_t v161 = v55;
    sub_241C768D8();
    uint64_t v70 = v149;
    sub_241CDA710();
    sub_241C75DB4(&qword_26B02E978, (void (*)(uint64_t))sub_241C7694C);
    uint64_t v71 = v151;
    uint64_t v72 = sub_241CDA6D0();

    swift_release();
    (*(void (**)(char *, uint64_t))(v150 + 8))(v70, v71);
    return v72;
  }
  char v69 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v69) {
    goto LABEL_13;
  }
  LODWORD(v149) = v51;
  uint64_t v150 = v55;
  uint64_t v156 = v56;
  uint64_t v121 = sub_241A313AC(0, (unint64_t *)&qword_26B030370);
  sub_241A55AC8();
  uint64_t v74 = swift_allocObject();
  long long v151 = xmmword_241CEB720;
  *(_OWORD *)(v74 + 16) = xmmword_241CEB720;
  uint64_t v75 = sub_241CDB0D0();
  uint64_t v77 = v76;
  *(void *)(v74 + 56) = MEMORY[0x263F8D310];
  unint64_t v120 = sub_241A55A74();
  *(void *)(v74 + 64) = v120;
  *(void *)(v74 + 32) = v75;
  *(void *)(v74 + 40) = v77;
  uint64_t v78 = v129;
  sub_241CD67E0();
  uint64_t v79 = sub_241CD6C60();
  uint64_t v132 = (void (*)(char *, void *))v131[1];
  v132(v78, v147);
  uint64_t v119 = sub_241A313AC(0, &qword_26B0304B8);
  *(void *)(v74 + 96) = v119;
  unint64_t v80 = sub_241AE4494();
  *(void *)(v74 + 104) = v80;
  *(void *)(v74 + 72) = v79;
  uint64_t v131 = (void *)sub_241CDB410();
  uint64_t v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = v151;
  uint64_t v82 = sub_241CDB0D0();
  unint64_t v83 = v120;
  *(void *)(v81 + 56) = MEMORY[0x263F8D310];
  *(void *)(v81 + 64) = v83;
  *(void *)(v81 + 32) = v82;
  *(void *)(v81 + 40) = v84;
  sub_241CD6C00();
  uint64_t v85 = sub_241CD6C60();
  v132(v78, v147);
  *(void *)(v81 + 96) = v119;
  *(void *)(v81 + 104) = v80;
  *(void *)(v81 + 72) = v85;
  uint64_t v86 = (void *)sub_241CDB410();
  uint64_t v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = xmmword_241CEDF90;
  id v88 = v131;
  *(void *)(v87 + 32) = v131;
  *(void *)(v87 + 40) = v86;
  uint64_t v161 = v87;
  sub_241CDB2E0();
  id v147 = v88;
  uint64_t v132 = v86;
  uint64_t v89 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  uint64_t v90 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v89);

  uint64_t v91 = (void *)sub_241CD7770();
  id v92 = objc_allocWithZone(MEMORY[0x263F0A678]);
  uint64_t v131 = v90;
  id v93 = objc_msgSend(v92, sel_initWithSampleType_predicate_, v91, v90);

  sub_241CD76B0();
  sub_241A311E0(&v161, v162);
  uint64_t v94 = (void *)sub_241CD75B0();
  uint64_t v95 = swift_allocObject();
  *(_OWORD *)(v95 + 16) = v146;
  *(void *)(v95 + 32) = v93;
  uint64_t v160 = v95;
  sub_241CDB2E0();
  uint64_t v129 = (char *)v93;
  sub_241CDB500();

  swift_bridgeObjectRelease();
  sub_241A31190((uint64_t)&v161);
  sub_241CD7730();
  uint64_t v96 = (void *)sub_241CD76E0();
  uint64_t v97 = swift_initStackObject();
  *(_OWORD *)(v97 + 16) = v146;
  *(void *)(v97 + 32) = sub_241CD7770();
  uint64_t v160 = v97;
  sub_241CDB2E0();
  if (*(unsigned char *)(v135 + v128))
  {
    uint64_t v98 = v125;
    uint64_t v99 = swift_allocObject();
    *(_OWORD *)(v99 + 16) = xmmword_241CEB730;
    (*(void (**)(uint64_t, void, uint64_t))(v133 + 104))(v99 + v98, *MEMORY[0x263F454D0], v37);
    id v100 = v96;
  }
  else
  {
    id v157 = v96;
    uint64_t v101 = v37;
    uint64_t v102 = v127;
    uint64_t v103 = v125;
    uint64_t v99 = swift_allocObject();
    *(_OWORD *)(v99 + 16) = v151;
    uint64_t v104 = v99 + v103;
    uint64_t v105 = *(void (**)(uint64_t, void, uint64_t))(v133 + 104);
    v105(v104, *MEMORY[0x263F45520], v101);
    v105(v104 + v102, *MEMORY[0x263F45538], v101);
    id v100 = v157;
  }
  sub_241C5D74C(v99);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v106 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v106);
  swift_bridgeObjectRelease();
  v123(v153, v149, v154);
  uint64_t v107 = v136;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241C75DB4(&qword_26B034D30, MEMORY[0x263F44AA8]);
  uint64_t v108 = v138;
  uint64_t v109 = v148;
  uint64_t v110 = sub_241CDA680();
  v122(v107, v155);
  sub_241A31190((uint64_t)&v161);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v109, v108);
  uint64_t v160 = v150;
  uint64_t v161 = v110;
  uint64_t v111 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D488];
  sub_241C766E4(0, &qword_26B032748, (unint64_t *)&unk_26B034CB0, MEMORY[0x263F8D488]);
  sub_241C767DC(&qword_26B02EA38, &qword_26B032748, (unint64_t *)&unk_26B034CB0, v111);
  uint64_t v112 = v140;
  sub_241CDA720();
  uint64_t v113 = swift_allocObject();
  *(void *)(v113 + 16) = v139;
  uint64_t v114 = swift_allocObject();
  *(void *)(v114 + 16) = sub_241C76A24;
  *(void *)(v114 + 24) = v113;
  sub_241C768D8();
  sub_241C75DB4(&qword_26B02E998, (void (*)(uint64_t))sub_241C765B8);
  uint64_t v115 = v143;
  uint64_t v116 = v142;
  sub_241CDA710();
  swift_release();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v112, v116);
  sub_241C75DB4(&qword_26B02E988, (void (*)(uint64_t))sub_241C7682C);
  uint64_t v117 = v145;
  uint64_t v72 = sub_241CDA6D0();

  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v144 + 8))(v115, v117);
  return v72;
}

id sub_241C75890@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (v3)
  {
    uint64_t v7 = v3;
    sub_241A33460();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_241CEB710;
    *(void *)(v4 + 32) = v7;
    uint64_t v8 = v4;
    sub_241CDB2E0();
    uint64_t v3 = v7;
    uint64_t v5 = v8;
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a2 = v5;

  return v3;
}

unint64_t sub_241C75918(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_bridgeObjectRetain();
    return a1;
  }
  sub_241CDA140();
  uint64_t v11 = sub_241CDA190();
  os_log_type_t v12 = sub_241CDB670();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    v20[1] = v13 + 4;
    uint64_t v21 = v14;
    uint64_t v22 = a3;
    swift_getMetatypeMetadata();
    uint64_t v15 = sub_241CDB120();
    uint64_t v22 = sub_241A33FE4(v15, v16, &v21);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v11, v12, "[%s]: No ongoing factors; using most recent sample", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v14, -1, -1);
    MEMORY[0x245637F20](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!a2) {
    return 0;
  }
  sub_241A33460();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_241CEB710;
  *(void *)(v17 + 32) = a2;
  uint64_t v22 = v17;
  sub_241CDB2E0();
  a1 = v22;
  id v18 = a2;
  return a1;
}

uint64_t sub_241C75B98()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries55OngoingFactorsCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241C75C40()
{
  return type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B030038);
}

id sub_241C75C6C(unint64_t *a1, uint64_t a2)
{
  return sub_241C75EDC(*a1, a2);
}

uint64_t sub_241C75C74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries55OngoingFactorsCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

_UNKNOWN **sub_241C75CEC()
{
  return &off_26F5C7438;
}

uint64_t sub_241C75CF8(uint64_t a1)
{
  uint64_t result = sub_241C75DB4(&qword_26B030020, (void (*)(uint64_t))type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241C75D50()
{
  return &off_26F5C7480;
}

uint64_t sub_241C75D5C(uint64_t a1)
{
  uint64_t result = sub_241C75DB4(&qword_26B030030, (void (*)(uint64_t))type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241C75DB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_241C75DFC()
{
  return &off_26F5C7498;
}

uint64_t sub_241C75E08(uint64_t a1)
{
  uint64_t result = sub_241C75DB4(&qword_26B0345F8, (void (*)(uint64_t))type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B02FF78);
}

uint64_t sub_241C75E80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_241C75EDC(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD6D00();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v52 - v8;
  sub_241A29C20(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v6);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v52 - v14;
  sub_241A29C20(0, &qword_26B032050, MEMORY[0x263F45780], v6);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v52 - v20;
  if (!a1)
  {
    sub_241CD7A80();
    uint64_t v47 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v21, 0, 1, v47);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v48 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v15, 1, 1, v48);
LABEL_9:
    int v51 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    sub_241C023E4((uint64_t)v21, (uint64_t)v19, &qword_26B032050, MEMORY[0x263F45780]);
    id v43 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v15, (uint64_t)v19, 0, 0);
    uint64_t v44 = (uint64_t)v21;
    uint64_t v45 = &qword_26B032050;
    uint64_t v46 = v51;
    goto LABEL_10;
  }
  uint64_t v53 = v15;
  sub_241A313AC(0, &qword_26B02E820);
  unint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = HKCodableSummaryOngoingFactorsValue.init(ongoingSamples:)(v22);
  if (!v23)
  {
    sub_241CD7A80();
    uint64_t v49 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v21, 0, 1, v49);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v50 = sub_241CD9970();
    uint64_t v15 = v53;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v53, 1, 1, v50);
    goto LABEL_9;
  }
  uint64_t v24 = (void *)v23;
  uint64_t v25 = a2
      + *(int *)(type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0) + 32);
  uint64_t v26 = sub_241CD9AA0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v13, v25, v26);
  uint64_t v27 = *MEMORY[0x263F46C58];
  uint64_t v28 = sub_241CD9970();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v13, v27, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v13, 0, 1, v28);
  objc_msgSend(v24, sel_earliestStartDate);
  id v30 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  objc_msgSend(v24, sel_latestEndDate);
  id v31 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  sub_241CD67C0();
  uint64_t v32 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v9, 0, 1, v32);
  uint64_t v33 = v24;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_241A313AC(0, &qword_26B034E48);
  id v35 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v9, v34, 0);
  id result = objc_msgSend(v24, sel_data);
  uint64_t v37 = (uint64_t)v53;
  if (result)
  {
    uint64_t v38 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v39 = sub_241CD6AE0();
    unint64_t v41 = v40;

    uint64_t v42 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
    sub_241C023E4((uint64_t)v13, v37, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    uint64_t v55 = 0;
    memset(v54, 0, sizeof(v54));
    id v43 = sub_241A54648(v39, v41, 12, v37, (uint64_t)v35, 0, (uint64_t)v54);

    sub_241A37374(v39, v41);
    uint64_t v44 = (uint64_t)v13;
    uint64_t v45 = (unint64_t *)&qword_26B0321F0;
    uint64_t v46 = v42;
LABEL_10:
    sub_241A32B84(v44, v45, v46);
    return v43;
  }
  __break(1u);
  return result;
}

void sub_241C765B8()
{
  if (!qword_26B0324B0)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D488];
    sub_241C766E4(255, &qword_26B032748, (unint64_t *)&unk_26B034CB0, MEMORY[0x263F8D488]);
    uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
    sub_241C766E4(255, (unint64_t *)&qword_26B032790, (unint64_t *)&qword_26B034E90, MEMORY[0x263F8D8F0]);
    sub_241C767DC(&qword_26B02EA38, &qword_26B032748, (unint64_t *)&unk_26B034CB0, v0);
    sub_241C767DC(&qword_26B038980, (unint64_t *)&qword_26B032790, (unint64_t *)&qword_26B034E90, v1);
    unint64_t v2 = sub_241CDA3F0();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_26B0324B0);
    }
  }
}

void sub_241C766E4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_241C7676C(255, a3, a4);
    sub_241A35FBC(255, (unint64_t *)&qword_26B038870);
    unint64_t v5 = sub_241CDA510();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241C7676C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241A313AC(255, &qword_26B0304D8);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241C767DC(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C766E4(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241C7682C()
{
  if (!qword_26B032440)
  {
    sub_241C765B8();
    sub_241C768D8();
    sub_241C75DB4(&qword_26B02E998, (void (*)(uint64_t))sub_241C765B8);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032440);
    }
  }
}

void sub_241C768D8()
{
  if (!qword_26B032CB8)
  {
    sub_241C7676C(255, (unint64_t *)&unk_26B034CB0, MEMORY[0x263F8D488]);
    unint64_t Output = type metadata accessor for SummaryModelQueryOutput();
    if (!v1) {
      atomic_store(Output, (unint64_t *)&qword_26B032CB8);
    }
  }
}

void sub_241C7694C()
{
  if (!qword_26B032410)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
    sub_241C766E4(255, (unint64_t *)&qword_26B032790, (unint64_t *)&qword_26B034E90, MEMORY[0x263F8D8F0]);
    sub_241C768D8();
    sub_241C767DC(&qword_26B038980, (unint64_t *)&qword_26B032790, (unint64_t *)&qword_26B034E90, v0);
    unint64_t v1 = sub_241CDA3E0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032410);
    }
  }
}

uint64_t sub_241C76A14()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

unint64_t sub_241C76A24(unint64_t a1, void *a2)
{
  return sub_241C75918(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_241C76A2C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241C76A64@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t *sub_241C76A9C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD6810();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_241CD9AA0();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    uint64_t v26 = *(void **)((char *)a2 + v24);
    *(uint64_t *)((char *)a1 + v24) = (uint64_t)v26;
    *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
    id v27 = v26;
  }
  return a1;
}

void sub_241C76D14(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_241CD9AA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = *(void **)(a1 + a2[9]);
}

char *sub_241C76E70(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_241CD9AA0();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = *(void **)&a2[v22];
  *(void *)&a1[v22] = v24;
  a1[v23] = a2[v23];
  id v25 = v24;
  return a1;
}

char *sub_241C77098(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  a1[a3[6]] = a2[a3[6]];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_241CD9AA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = *(void **)&a2[v23];
  id v25 = *(void **)&a1[v23];
  *(void *)&a1[v23] = v24;
  id v26 = v24;

  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *sub_241C77330(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_241CD9AA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v18] = a2[v18];
  return a1;
}

char *sub_241C77530(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_241CD9AA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  uint64_t v25 = a3[9];
  id v26 = *(void **)&a1[v25];
  *(void *)&a1[v25] = *(void *)&a2[v25];

  a1[a3[10]] = a2[a3[10]];
  return a1;
}

uint64_t sub_241C777B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C777C4);
}

uint64_t sub_241C777C4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD77C0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[7] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_241CD9AA0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_241C77978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C7798C);
}

uint64_t sub_241C7798C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_241A29C20(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_241CD77C0();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_241CD9AA0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_241C77B40()
{
  sub_241A29C20(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_241CD77C0();
    if (v1 <= 0x3F)
    {
      sub_241CD9AA0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_241C77C98@<X0>(uint64_t a1@<X8>)
{
  return sub_241C79DC4(v1, a1, (uint64_t (*)(void))sub_241A68508);
}

uint64_t *sub_241C77CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = *v3;
  uint64_t v32 = sub_241CD7650();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_241CD7690();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a1;
  id v29 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v11 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v37 = inited;
  sub_241CDB2E0();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v35 = a2;
  char v13 = *(unsigned char *)(a2 + v12);
  sub_241A29D4C(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_241CD73B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  if (v13)
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v18 + v17, *MEMORY[0x263F454D0], v14);
  }
  else
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB720;
    unint64_t v20 = v18 + v17;
    uint64_t v21 = *(void (**)(unint64_t, void, uint64_t))(v15 + 104);
    v21(v20, *MEMORY[0x263F45520], v14);
    v21(v20 + v16, *MEMORY[0x263F45538], v14);
  }
  id v19 = v29;
  sub_241C5D74C(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v22 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v7, *MEMORY[0x263F45690], v32);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries51AFibBurdenCurrentValueSummarySharableModelGenerator_domain, v9, v33);
  uint64_t v23 = sub_241C78B78(&qword_26B034360, (void (*)(uint64_t))type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  uint64_t v26 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v36, v35, v34, v23);
  sub_241C7A148(v25, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
  uint64_t v27 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v24, v27);
  v3[2] = v26;
  return v3;
}