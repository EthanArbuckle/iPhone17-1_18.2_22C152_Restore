uint64_t sub_241ADDC98(uint64_t a1, void (*a2)(void, void), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int (**v17)(char *, uint64_t, uint64_t);
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(void, void);
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  void (**v36)(char *, char *, uint64_t);
  char *v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  unsigned char v41[40];
  id v42;
  uint64_t v43;

  v43 = a3;
  sub_241ADE724(0, (unint64_t *)&unk_26B031AC8, MEMORY[0x263F43D30]);
  MEMORY[0x270FA5388](v5 - 8);
  v7 = (char *)&v31 - v6;
  v8 = sub_241CD84A0();
  v9 = MEMORY[0x270FA5388](v8);
  v37 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v33 = (char *)&v31 - v12;
  v34 = v11;
  v13 = *(void *)(a1 + 64);
  v39 = a1 + 64;
  v14 = 1 << *(unsigned char *)(a1 + 32);
  v15 = -1;
  if (v14 < 64) {
    v15 = ~(-1 << v14);
  }
  v16 = v15 & v13;
  v40 = (unint64_t)(v14 + 63) >> 6;
  v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v36 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v38 = MEMORY[0x263F8EE78];
  v32 = a2;
  if (!v16) {
    goto LABEL_7;
  }
LABEL_4:
  v20 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v20 | (v19 << 6); ; i = __clz(__rbit64(v23)) + (v19 << 6))
  {
    sub_241ADE86C(*(void *)(a1 + 48) + 40 * i, (uint64_t)v41);
    v42 = *(id *)(*(void *)(a1 + 56) + 8 * i);
    a2(v41, v42);
    sub_241ADE8C8((uint64_t)v41, (uint64_t (*)(void))sub_241ADE928);
    if ((*v17)(v7, 1, v8) == 1)
    {
      result = sub_241ADE9A4((uint64_t)v7, (unint64_t *)&unk_26B031AC8, MEMORY[0x263F43D30]);
      if (v16) {
        goto LABEL_4;
      }
    }
    else
    {
      v25 = *v36;
      v26 = v33;
      (*v36)(v33, v7, v8);
      v35 = v25;
      v25(v37, v26, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v38 = sub_241AF7234(0, *(void *)(v38 + 16) + 1, 1, v38);
      }
      v28 = *(void *)(v38 + 16);
      v27 = *(void *)(v38 + 24);
      a2 = v32;
      if (v28 >= v27 >> 1) {
        v38 = sub_241AF7234(v27 > 1, v28 + 1, 1, v38);
      }
      v29 = v37;
      v30 = v38;
      *(void *)(v38 + 16) = v28 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v35)(v30+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v28, v29, v8);
      if (v16) {
        goto LABEL_4;
      }
    }
LABEL_7:
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v40) {
      goto LABEL_29;
    }
    v23 = *(void *)(v39 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_29;
      }
      v23 = *(void *)(v39 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v40) {
          goto LABEL_29;
        }
        v23 = *(void *)(v39 + 8 * v19);
        if (!v23)
        {
          v19 = v22 + 3;
          if (v22 + 3 >= v40) {
            goto LABEL_29;
          }
          v23 = *(void *)(v39 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_22:
    v16 = (v23 - 1) & v23;
  }
  v24 = v22 + 4;
  if (v24 >= v40)
  {
LABEL_29:
    swift_release();
    return v38;
  }
  v23 = *(void *)(v39 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v40) {
      goto LABEL_29;
    }
    v23 = *(void *)(v39 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

id sub_241ADE0D8(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v16 = (char *)&v53 - v15;
  id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, a2);
  if (result)
  {
    v18 = result;
    uint64_t v58 = v11;
    uint64_t v59 = v10;
    id v19 = objc_msgSend(result, sel_displayTypeForObjectType_, a3);

    if (v19)
    {
      id v56 = v19;
      if ((uint64_t)objc_msgSend(a1, sel_dateIntervalsToTotalsCount) >= 1)
      {
        id v20 = objc_msgSend(a1, sel_dateIntervalsToTotals);
        if (v20)
        {
          v21 = v20;
          uint64_t v61 = 0;
          sub_241A313AC(0, &qword_26B02E810);
          sub_241CDB2B0();

          if (v61)
          {
            v22 = self;
            v23 = (void *)sub_241CDB2A0();
            swift_bridgeObjectRelease();
            id v24 = objc_msgSend(v22, sel_timePeriodDataWithCodableData_, v23);

            sub_241A313AC(0, (unint64_t *)&qword_26B0304E8);
            uint64_t v25 = sub_241CDAF90();

            MEMORY[0x270FA5388](v26);
            uint64_t v27 = v57;
            *(&v53 - 4) = a4;
            *(&v53 - 3) = v27;
            *(&v53 - 2) = a5;
            id v28 = v56;
            *(&v53 - 1) = (uint64_t)v56;
            uint64_t v29 = sub_241ADDC98(v25, (void (*)(void, void))sub_241ADE860, (uint64_t)(&v53 - 6));
            swift_bridgeObjectRelease();

            return (id)v29;
          }
        }
      }
      id v30 = objc_msgSend(a1, sel_dateIntervalsToTotalsCount);
      if ((uint64_t)v30 <= 0) {
        unint64_t v31 = 0x8000000241CDFBF0;
      }
      else {
        unint64_t v31 = 0x8000000241CDFC20;
      }
      sub_241CDA0F0();
      id v32 = a2;
      id v33 = a3;
      id v34 = v32;
      id v35 = v33;
      swift_bridgeObjectRetain();
      v36 = sub_241CDA190();
      os_log_type_t v37 = sub_241CDB650();
      if (os_log_type_enabled(v36, v37))
      {
        unint64_t v38 = 0xD000000000000026;
        if ((uint64_t)v30 > 0) {
          unint64_t v38 = 0xD00000000000003ELL;
        }
        unint64_t v54 = v38;
        uint64_t v39 = swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        uint64_t v61 = v55;
        *(_DWORD *)uint64_t v39 = 136315394;
        uint64_t v40 = sub_241AD8D78((uint64_t)v34, v35);
        uint64_t v60 = sub_241A33FE4(v40, v41, &v61);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v60 = sub_241A33FE4(v54, v31, &v61);
        sub_241CDBBF0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_241A23000, v36, v37, "%s: %{public}s", (uint8_t *)v39, 0x16u);
        uint64_t v42 = v55;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v42, -1, -1);
        MEMORY[0x245637F20](v39, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v59);
    }
    else
    {
      sub_241CDA0F0();
      id v43 = a2;
      id v44 = a3;
      id v45 = v43;
      id v46 = v44;
      v47 = sub_241CDA190();
      os_log_type_t v48 = sub_241CDB650();
      if (os_log_type_enabled(v47, v48))
      {
        v49 = (uint8_t *)swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        uint64_t v61 = v50;
        *(_DWORD *)v49 = 136315138;
        uint64_t v51 = sub_241AD8D78((uint64_t)v45, v46);
        uint64_t v60 = sub_241A33FE4(v51, v52, &v61);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v47, v48, "%s: Unable to instantiate display type", v49, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245637F20](v50, -1, -1);
        MEMORY[0x245637F20](v49, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v59);
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_241ADE724(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241ADE778(uint64_t a1, uint64_t a2)
{
  sub_241A55C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241ADE7DC(uint64_t a1, uint64_t a2)
{
  sub_241A55C0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241ADE840@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241ADAB70(a1, *(void *)(v2 + 16), *(char **)(v2 + 32), a2);
}

uint64_t sub_241ADE860@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_241ADAF4C(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 40), a3);
}

uint64_t sub_241ADE86C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_241ADE8C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_241ADE928()
{
  if (!qword_26B034EA0)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B0304E8);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B034EA0);
    }
  }
}

uint64_t sub_241ADE9A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241ADE724(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_241ADEA00()
{
  unint64_t result = qword_26B034D88;
  if (!qword_26B034D88)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B034D88);
  }
  return result;
}

uint64_t sub_241ADEA58()
{
  return 0;
}

uint64_t sub_241ADEA64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_241ADEA94(uint64_t a1)
{
  unint64_t v2 = sub_241ADEDD4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241ADEAD0(uint64_t a1)
{
  unint64_t v2 = sub_241ADEDD4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241ADEB0C(uint64_t a1)
{
  return sub_241A31190(a1);
}

uint64_t sub_241ADEB34(void *a1)
{
  sub_241ADED78();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A311E0(a1, a1[3]);
  sub_241ADEDD4();
  sub_241CDC230();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_241ADEC44()
{
  unint64_t result = qword_26B0335B8;
  if (!qword_26B0335B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0335B8);
  }
  return result;
}

uint64_t sub_241ADEC98(uint64_t a1)
{
  sub_241ADED20();
  uint64_t v3 = v2;
  sub_241CD8410();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

uint64_t sub_241ADED04()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241ADED20()
{
  if (!qword_268D42980)
  {
    unint64_t v0 = sub_241CD8450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42980);
    }
  }
}

void sub_241ADED78()
{
  if (!qword_268D42988)
  {
    sub_241ADEDD4();
    unint64_t v0 = sub_241CDC0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42988);
    }
  }
}

unint64_t sub_241ADEDD4()
{
  unint64_t result = qword_268D42990;
  if (!qword_268D42990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42990);
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptySnidgetVisualizationView.ViewModel.CodingKeys()
{
  return &type metadata for EmptySnidgetVisualizationView.ViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for EmptySnidgetVisualizationView.ViewModel()
{
  return &type metadata for EmptySnidgetVisualizationView.ViewModel;
}

ValueMetadata *type metadata accessor for EmptySnidgetVisualizationView()
{
  return &type metadata for EmptySnidgetVisualizationView;
}

uint64_t sub_241ADEE58()
{
  return MEMORY[0x263F1BA00];
}

unint64_t sub_241ADEE68()
{
  unint64_t result = qword_268D42998;
  if (!qword_268D42998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42998);
  }
  return result;
}

unint64_t sub_241ADEEC0()
{
  unint64_t result = qword_268D429A0;
  if (!qword_268D429A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D429A0);
  }
  return result;
}

uint64_t sub_241ADEF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241ADEF28);
}

uint64_t sub_241ADEF28(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241ADEFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241ADEFEC);
}

void *sub_241ADEFEC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for QuantityValueSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031DA0;
  if (!qword_26B031DA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241ADF0E0()
{
  return sub_241ADF4D0((unint64_t *)&qword_26B032110, sub_241A3A080);
}

uint64_t sub_241ADF128()
{
  return sub_241ADF4D0(&qword_26B0320B8, MEMORY[0x263F44058]);
}

uint64_t sub_241ADF170()
{
  return sub_241ADF274((unint64_t *)&qword_26B0320F0);
}

void sub_241ADF1A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241ADF4D0(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241ADF240()
{
  return sub_241ADF274((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241ADF274(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241ADF1A4(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241ADF4D0((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241ADF4D0(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241ADF358()
{
  return sub_241ADF4D0(&qword_26B0385C8, MEMORY[0x263F44308]);
}

uint64_t sub_241ADF3A0()
{
  return sub_241ADF4D0(&qword_26B032140, MEMORY[0x263F44308]);
}

uint64_t sub_241ADF3E8(uint64_t a1)
{
  uint64_t result = sub_241ADF4D0(&qword_26B036530, (void (*)(uint64_t))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241ADF440()
{
  return sub_241ADF4D0(&qword_26B0383F8, sub_241A3A4D8);
}

uint64_t sub_241ADF488()
{
  return sub_241ADF4D0(&qword_26B032E48, sub_241A3A540);
}

uint64_t sub_241ADF4D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241ADF518(void *a1)
{
}

void sub_241ADF558(void *a1)
{
}

void sub_241ADF598(void *a1)
{
}

void sub_241ADF5D8(void *a1)
{
}

void sub_241ADF618(void *a1)
{
}

void sub_241ADF658(void *a1)
{
}

void sub_241ADF698(void *a1)
{
}

void sub_241ADF6D8(void *a1)
{
}

void sub_241ADF718(void *a1)
{
}

void sub_241ADF758(void *a1)
{
}

void sub_241ADF798(void *a1)
{
}

void sub_241ADF7D8(void *a1)
{
}

void sub_241ADF818(void *a1)
{
}

void sub_241ADF858(void *a1)
{
}

void sub_241ADF898(void *a1)
{
}

void sub_241ADF8D8(void *a1)
{
}

void sub_241ADF918(void *a1)
{
}

void sub_241ADF958(void *a1)
{
}

void sub_241ADF998(void *a1)
{
}

void sub_241ADF9D8(void *a1)
{
}

void sub_241ADFA18(void *a1)
{
}

void sub_241ADFA58(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5)
{
  v65 = a5;
  uint64_t v66 = a2;
  sub_241AE3950(0, &qword_26B032050, MEMORY[0x263F45780]);
  uint64_t v68 = v8;
  MEMORY[0x270FA5388](v8);
  v67 = (char *)&v60 - v9;
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  v17 = (char *)&v60 - v16;
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v60 - v18;
  if (objc_msgSend(a1, sel_hasValueData))
  {
    uint64_t v61 = v19;
    uint64_t v63 = v10;
    uint64_t v64 = v11;
    id v20 = objc_msgSend(a1, sel_kindRawValue);
    if (!v20
      || (v21 = v20,
          sub_241CDB0D0(),
          uint64_t v62 = a3,
          v21,
          a3 = v62,
          char v22 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0(),
          v22 == 22))
    {
      if (objc_msgSend(a1, sel_hasKindRawValue))
      {
        id v23 = objc_msgSend(a1, sel_kindRawValue);
        if (!v23)
        {
          __break(1u);
          return;
        }
        id v24 = v23;
        uint64_t v25 = sub_241CDB0D0();
        unint64_t v27 = v26;
      }
      else
      {
        unint64_t v27 = 0xE90000000000003ELL;
        uint64_t v25 = 0x646E696B206F6E3CLL;
      }
      sub_241CDA0F0();
      id v28 = a1;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_241CDA190();
      os_log_type_t v30 = sub_241CDB650();
      int v31 = v30;
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v70 = v66;
        *(_DWORD *)uint64_t v32 = 136446722;
        LODWORD(v65) = v31;
        uint64_t v69 = sub_241A33FE4(a3, a4, &v70);
        sub_241CDBBF0();
        *(_WORD *)(v32 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v69 = sub_241A33FE4(v25, v27, &v70);
        sub_241CDBBF0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v32 + 22) = 2080;
        sub_241A313AC(0, &qword_26B030440);
        sub_241AE3B7C();
        sub_241CD8A10();
        uint64_t v33 = sub_241CDB120();
        uint64_t v69 = sub_241A33FE4(v33, v34, &v70);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v29, (os_log_type_t)v65, "[%{public}s] Unknown kind received: %s, this model should have bumped its version: %s", (uint8_t *)v32, 0x20u);
        uint64_t v35 = v66;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v35, -1, -1);
        MEMORY[0x245637F20](v32, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v64 + 8))(v14, v63);
      goto LABEL_21;
    }
    char v36 = v22;
    id v37 = objc_msgSend(a1, sel_kindRawValue);
    if (!v37
      || (unint64_t v38 = v37,
          sub_241CDB0D0(),
          v38,
          unsigned __int8 v39 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0(),
          v39 == 22)
      || (id v40 = sub_241A45AE0(v39)) == 0)
    {
      sub_241CDA0F0();
      unint64_t v52 = sub_241CDA190();
      os_log_type_t v53 = sub_241CDB650();
      BOOL v54 = os_log_type_enabled(v52, v53);
      uint64_t v55 = v63;
      if (v54)
      {
        uint64_t v56 = swift_slowAlloc();
        uint64_t v57 = swift_slowAlloc();
        uint64_t v70 = v57;
        *(_DWORD *)uint64_t v56 = 136446466;
        uint64_t v69 = sub_241A33FE4(v62, a4, &v70);
        sub_241CDBBF0();
        *(_WORD *)(v56 + 12) = 2080;
        unint64_t v58 = HKCodableSummaryCurrentValue.Kind.rawValue.getter(v36);
        uint64_t v69 = sub_241A33FE4(v58, v59, &v70);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v52, v53, "[%{public}s] Unable to unwrap value for kind %s", (uint8_t *)v56, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x245637F20](v57, -1, -1);
        MEMORY[0x245637F20](v56, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v55);
LABEL_21:
      sub_241A3A824();
      swift_allocError();
      swift_willThrow();
      return;
    }
    unint64_t v41 = v40;
    self;
    if (!swift_dynamicCastObjCClass())
    {
      uint64_t v42 = v61;
      sub_241CDA0F0();
      id v43 = v41;
      id v44 = sub_241CDA190();
      os_log_type_t v45 = sub_241CDB650();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        uint64_t v70 = v47;
        *(_DWORD *)uint64_t v46 = 136446722;
        uint64_t v69 = sub_241A33FE4(v62, a4, &v70);
        sub_241CDBBF0();
        *(_WORD *)(v46 + 12) = 2080;
        swift_getObjectType();
        uint64_t v48 = sub_241CDC270();
        uint64_t v69 = sub_241A33FE4(v48, v49, &v70);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 22) = 2080;
        sub_241A313AC(0, v65);
        uint64_t v50 = sub_241CDC270();
        uint64_t v69 = sub_241A33FE4(v50, v51, &v70);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v44, v45, "[%{public}s] Current value payload is of unknown type %s instead of %s", (uint8_t *)v46, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x245637F20](v47, -1, -1);
        MEMORY[0x245637F20](v46, -1, -1);

        (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v64 + 8))(v42, v63);
      }
      sub_241A3A824();
      swift_allocError();
      swift_willThrow();
    }
  }
}

uint64_t sub_241AE0298(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD000000000000020);
}

uint64_t sub_241AE02B4(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD000000000000029);
}

uint64_t sub_241AE02D0(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD00000000000002CLL);
}

uint64_t sub_241AE02EC(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD000000000000031);
}

uint64_t sub_241AE0308(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD000000000000022);
}

uint64_t sub_241AE0324(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD000000000000024);
}

uint64_t sub_241AE0340(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD000000000000029);
}

uint64_t sub_241AE035C(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD00000000000002CLL);
}

uint64_t sub_241AE0378(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD00000000000002CLL);
}

uint64_t sub_241AE0394(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD00000000000002ELL);
}

uint64_t sub_241AE03B0(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD000000000000030);
}

uint64_t sub_241AE03CC(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD000000000000039);
}

uint64_t sub_241AE03E8(uint64_t a1, uint64_t a2)
{
  return sub_241AE0404(a1, a2, 0xD00000000000002ELL);
}

uint64_t sub_241AE0404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_241CDB4D0();
  sub_241CD73D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return a3;
}

void sub_241AE04FC(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v398 = a3;
  v349 = a2;
  v405 = a1;
  v399 = a4;
  uint64_t v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v333 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AE3950(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v8 - 8);
  v397 = (char *)&v333 - v9;
  sub_241AE3950(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v10 - 8);
  v356 = (char *)&v333 - v11;
  sub_241AE3950(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v12 - 8);
  v396 = (char *)&v333 - v13;
  uint64_t v402 = sub_241CD6810();
  v401 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v402 - 8);
  MEMORY[0x270FA5388](v402);
  v341 = (char *)&v333 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v348 = sub_241CD6EE0();
  uint64_t v347 = *(void *)(v348 - 8);
  MEMORY[0x270FA5388](v348);
  v345 = (char *)&v333 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AE3950(0, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
  MEMORY[0x270FA5388](v16 - 8);
  v360 = (char *)&v333 - v17;
  uint64_t v346 = sub_241CD6D00();
  uint64_t v361 = *(void *)(v346 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v346);
  v340 = (char *)&v333 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v357 = (char *)&v333 - v21;
  MEMORY[0x270FA5388](v20);
  v359 = (char *)&v333 - v22;
  sub_241AE3950(0, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v381 = (uint64_t)&v333 - v24;
  uint64_t v392 = sub_241CD69B0();
  uint64_t v391 = *(void *)(v392 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v392);
  v355 = (char *)&v333 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  v380 = (char *)&v333 - v27;
  uint64_t v28 = type metadata accessor for QuantityValueSnidgetFeedItemModelProvider();
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  v373 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v333 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = (uint64_t *)((char *)&v333 - v32);
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  uint64_t v358 = (uint64_t)&v333 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v372 = (uint64_t *)((char *)&v333 - v37);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v343 = (uint64_t)&v333 - v39;
  MEMORY[0x270FA5388](v38);
  v374 = (uint64_t *)((char *)&v333 - v40);
  uint64_t v384 = sub_241CDA1A0();
  uint64_t v385 = *(void *)(v384 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v384);
  id v43 = (char *)&v333 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v41);
  v367 = (char *)&v333 - v45;
  MEMORY[0x270FA5388](v44);
  v344 = (char *)&v333 - v46;
  uint64_t v366 = sub_241CD9ED0();
  uint64_t v365 = *(void *)(v366 - 8);
  MEMORY[0x270FA5388](v366);
  v364 = (char *)&v333 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AE39A4();
  uint64_t v352 = v48;
  MEMORY[0x270FA5388](v48);
  v353 = (uint64_t *)((char *)&v333 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241AE3950(0, &qword_26B0321B0, MEMORY[0x263F46B90]);
  MEMORY[0x270FA5388](v50 - 8);
  v363 = (char *)&v333 - v51;
  uint64_t v378 = sub_241CD9DF0();
  uint64_t v377 = *(void *)(v378 - 8);
  uint64_t v52 = MEMORY[0x270FA5388](v378);
  v342 = (char *)&v333 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v52);
  uint64_t v369 = (uint64_t)&v333 - v54;
  uint64_t v376 = sub_241CD9D00();
  uint64_t v375 = *(void *)(v376 - 8);
  MEMORY[0x270FA5388](v376);
  v383 = (char *)&v333 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AE3950(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v57 = MEMORY[0x270FA5388](v56 - 8);
  uint64_t v400 = (uint64_t)&v333 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v368 = (uint64_t)&v333 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  uint64_t v63 = (char *)&v333 - v62;
  MEMORY[0x270FA5388](v61);
  uint64_t v386 = (uint64_t)&v333 - v64;
  sub_241AE3950(0, &qword_26B032258, MEMORY[0x263F471B8]);
  uint64_t v66 = MEMORY[0x270FA5388](v65 - 8);
  uint64_t v350 = (uint64_t)&v333 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  uint64_t v362 = (uint64_t)&v333 - v69;
  MEMORY[0x270FA5388](v68);
  uint64_t v388 = (uint64_t)&v333 - v70;
  sub_241AE3950(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  MEMORY[0x270FA5388](v71 - 8);
  v73 = (char *)&v333 - v72;
  uint64_t v390 = sub_241CD9970();
  uint64_t v393 = *(void *)(v390 - 8);
  uint64_t v74 = MEMORY[0x270FA5388](v390);
  v382 = (char *)&v333 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v74);
  v389 = (char *)&v333 - v76;
  sub_241AE3950(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v78 = MEMORY[0x270FA5388](v77 - 8);
  v354 = (char *)&v333 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  v371 = (char *)&v333 - v81;
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  v351 = (char *)&v333 - v83;
  uint64_t v84 = MEMORY[0x270FA5388](v82);
  v379 = (char *)&v333 - v85;
  uint64_t v86 = MEMORY[0x270FA5388](v84);
  uint64_t v394 = (uint64_t)&v333 - v87;
  MEMORY[0x270FA5388](v86);
  uint64_t v395 = (uint64_t)&v333 - v88;
  id v89 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v4);
  if (!v89)
  {
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v90 = v89;
  uint64_t v370 = v28;
  uint64_t v91 = *(int *)(v28 + 24);
  v387 = v4;
  uint64_t v92 = (uint64_t)v4 + v91;
  id v93 = objc_msgSend(v89, sel_displayTypeForObjectType_, *(void *)(v92 + 16));

  v404 = v93;
  if (!v93)
  {
    sub_241A3A824();
    swift_allocError();
    swift_willThrow();
    return;
  }
  uint64_t v339 = v92;
  id v94 = v403;
  sub_241ADFA58(v405, 0x263F46618, 0xD000000000000029, 0x8000000241CEDB90, &qword_26B034E30);
  if (v94)
  {

    return;
  }
  v96 = v95;
  if (!v95)
  {
LABEL_13:
    uint64_t v119 = sub_241CD7A10();
    uint64_t v120 = (uint64_t)v397;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v397, 1, 1, v119);
    uint64_t v121 = v400;
    v401[7](v400, 1, 1, v402);
    uint64_t v122 = v398;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v120, v122, v121, v7);
    sub_241CD89A0();
    uint64_t v123 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v396, 1, 1, v123);
    v124 = v404;
    uint64_t v125 = sub_241CD8990();
    sub_241A3A878();
    v127 = v399;
    sub_241AE3BE4((uint64_t)v7, (uint64_t)v399 + *(int *)(v126 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v127[1] = 0;
    v127[2] = 0;
    uint64_t *v127 = v125;
    sub_241AE3A44((uint64_t)v7, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  if (!objc_msgSend(v95, sel_hasValue)
    || (id v403 = objc_msgSend(v96, sel_value)) == 0)
  {

    goto LABEL_13;
  }
  id v338 = v96;
  uint64_t v97 = v391 + 56;
  v98 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v391 + 56);
  uint64_t v99 = v392;
  v98(v395, 1, 1, v392);
  v336 = v98;
  uint64_t v337 = v97;
  v98(v394, 1, 1, v99);
  v100 = v405;
  HKCodableSummaryCurrentValue.queryConfiguration.getter((uint64_t)v73);
  uint64_t v101 = v393;
  uint64_t v102 = v390;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v393 + 48))(v73, 1, v390) == 1)
  {
    sub_241A32A10((uint64_t)v73, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    sub_241CDA0F0();
    v103 = v387;
    sub_241AE3BE4((uint64_t)v387, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
    uint64_t v104 = (uint64_t)v373;
    sub_241AE3BE4((uint64_t)v103, (uint64_t)v373, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
    v105 = sub_241CDA190();
    os_log_type_t v106 = sub_241CDB650();
    int v107 = v106;
    if (os_log_type_enabled(v105, v106))
    {
      uint64_t v108 = swift_slowAlloc();
      LODWORD(v402) = v107;
      uint64_t v109 = v108;
      v405 = (void *)swift_slowAlloc();
      v406[0] = (uint64_t)v405;
      *(_DWORD *)uint64_t v109 = 136315394;
      uint64_t v110 = v370;
      uint64_t v111 = sub_241AE0404(*v33, *((unsigned __int8 *)v33 + *(int *)(v370 + 24) + 8), 0xD00000000000002CLL);
      uint64_t v407 = sub_241A33FE4(v111, v112, v406);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AE3A44((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      *(_WORD *)(v109 + 12) = 2080;
      v401 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 14);
      id v113 = objc_msgSend(*(id *)(v104 + *(int *)(v110 + 24) + 16), sel_sensitiveLoggingIdentifier);
      uint64_t v114 = v104;
      uint64_t v115 = sub_241CDB0D0();
      unint64_t v117 = v116;

      uint64_t v407 = sub_241A33FE4(v115, v117, v406);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AE3A44(v114, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_241A23000, v105, (os_log_type_t)v402, "[%s]: unreadable query configuration quantity type: %s", (uint8_t *)v109, 0x16u);
      v118 = v405;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v118, -1, -1);
      MEMORY[0x245637F20](v109, -1, -1);
    }
    else
    {
      sub_241AE3A44((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      sub_241AE3A44(v104, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
    }

    (*(void (**)(char *, uint64_t))(v385 + 8))(v43, v384);
    id v137 = v403;
    sub_241A41340();
    swift_allocError();
    unsigned char *v138 = 0;
    swift_willThrow();

    goto LABEL_65;
  }
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v389, v73, v102);
  sub_241CDB4B0();
  v128 = v401[7];
  int v129 = 1;
  uint64_t v130 = v402;
  v373 = v401 + 7;
  v335 = v128;
  v128(v386, 1, 1, v402);
  if (!objc_msgSend(v100, sel_hasSupplementaryValue))
  {
    id v136 = 0;
    goto LABEL_28;
  }
  id v131 = objc_msgSend(v100, sel_supplementaryValue);
  if (!v131) {
    goto LABEL_74;
  }
  v132 = v131;
  unsigned int v133 = objc_msgSend(v131, sel_hasDataCount);

  if (v133)
  {
    id v134 = objc_msgSend(v405, sel_supplementaryValue);
    if (!v134)
    {
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    v135 = v134;
    id v136 = objc_msgSend(v134, sel_dataCount);
  }
  else
  {
    id v136 = 0;
  }
  id v139 = objc_msgSend(v405, sel_supplementaryValue);
  if (!v139)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v140 = v139;
  int v129 = v133 ^ 1;
  unsigned int v141 = objc_msgSend(v139, sel_hasDateInterval);

  if (!v141) {
    goto LABEL_28;
  }
  id v142 = objc_msgSend(v405, sel_supplementaryValue);
  if (!v142) {
    goto LABEL_77;
  }
  v143 = v142;
  id v144 = objc_msgSend(v142, sel_dateInterval);

  if (!v144)
  {
LABEL_78:
    __break(1u);
    return;
  }
  sub_241CDB920();

  v145 = (void (*)(uint64_t))MEMORY[0x263F062D0];
  uint64_t v146 = v386;
  sub_241A32A10(v386, &qword_26B038F10, MEMORY[0x263F062D0]);
  v335((uint64_t)v63, 0, 1, v130);
  sub_241AE3AA4((uint64_t)v63, v146, &qword_26B038F10, v145);
LABEL_28:
  uint64_t v147 = v393;
  v148 = v382;
  (*(void (**)(char *, char *, uint64_t))(v393 + 16))(v382, v389, v102);
  int v149 = (*(uint64_t (**)(char *, uint64_t))(v147 + 88))(v148, v102);
  v150 = v374;
  if (v149 == *MEMORY[0x263F46C30])
  {
    v405 = v136;
    (*(void (**)(char *, uint64_t))(v147 + 96))(v148, v102);
    (*(void (**)(char *, char *, uint64_t))(v375 + 32))(v383, v148, v376);
    v151 = (void *)*v387;
    v152 = *(void **)(v339 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
    type metadata accessor for StatisticsSnidgetStringBuilder();
    inited = (id *)swift_initStackObject();
    inited[2] = v151;
    v154 = self;
    id v155 = v152;
    id v156 = v151;
    id v157 = objc_msgSend(v154, sel_sharedInstanceForHealthStore_, v156);
    inited[4] = v157;
    if (!v152)
    {
      id v158 = v157;
      id v155 = objc_msgSend(v158, sel_createHKUnitPreferenceController);
    }
    uint64_t v159 = (uint64_t)v363;

    inited[3] = v155;
    v160 = (void *)sub_241CDB860();
    uint64_t v161 = (uint64_t)v379;
    v162 = v404;
    StatisticsSnidgetStringBuilder.makeStatisticsQueryPrimaryAttributedString(displayType:quantity:)(v404, v160, (uint64_t)v379);

    v163 = (void (*)(uint64_t))MEMORY[0x263F06828];
    uint64_t v164 = v395;
    sub_241A32A10(v395, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    sub_241AE3AA4(v161, v164, (unint64_t *)&qword_26B031FB8, v163);
    uint64_t v165 = v362;
    sub_241AE3B10(v388, v362, &qword_26B032258, MEMORY[0x263F471B8]);
    uint64_t v166 = v377;
    uint64_t v167 = v378;
    int v168 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v377 + 48))(v165, 1, v378);
    uint64_t v334 = 0;
    if (v168 == 1)
    {
      sub_241A32A10(v165, &qword_26B032258, MEMORY[0x263F471B8]);
      uint64_t v102 = v390;
      uint64_t v169 = v392;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 32))(v369, v165, v167);
      uint64_t v187 = sub_241CD9CC0();
      uint64_t v188 = *(void *)(v187 + 16);
      uint64_t v189 = sub_241CD9840();
      uint64_t v190 = *(void *)(v189 - 8);
      if (v188)
      {
        (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v189 - 8) + 16))(v159, v187+ ((*(unsigned __int8 *)(*(void *)(v189 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v189 - 8) + 80)), v189);
        uint64_t v191 = 0;
      }
      else
      {
        uint64_t v191 = 1;
      }
      uint64_t v236 = (uint64_t)v351;
      uint64_t v237 = 1;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v190 + 56))(v159, v191, 1, v189);
      swift_bridgeObjectRelease();
      sub_241CD9CD0();
      uint64_t v238 = (uint64_t)v353;
      uint64_t v239 = (uint64_t)v405;
      void *v353 = v405;
      *(unsigned char *)(v238 + 8) = v129;
      uint64_t v240 = v238 + *(int *)(v352 + 48);
      sub_241AE3B10(v386, v240, &qword_26B038F10, MEMORY[0x263F062D0]);
      sub_241CD57BC(v369, v159, v240, v239, v129);
      if (v241)
      {
        SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
        swift_bridgeObjectRelease();
        uint64_t v237 = 0;
      }
      uint64_t v102 = v390;
      uint64_t v242 = v392;
      sub_241AE3A44(v238, (uint64_t (*)(void))sub_241AE39A4);
      uint64_t v169 = v242;
      v336(v236, v237, 1, v242);
      sub_241A32A10(v159, &qword_26B0321B0, MEMORY[0x263F46B90]);
      (*(void (**)(uint64_t, uint64_t))(v377 + 8))(v369, v378);
      v243 = (void (*)(uint64_t))MEMORY[0x263F06828];
      uint64_t v244 = v394;
      sub_241A32A10(v394, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
      sub_241AE3AA4(v236, v244, (unint64_t *)&qword_26B031FB8, v243);
    }
    id v200 = v403;
    v245 = (void *)sub_241CDB860();
    v405 = (void *)SnidgetStringBuilder.makeQuantityFormattedDouble(displayType:quantity:)(v162, v245);
    LODWORD(v378) = v246;

    v247 = (void *)sub_241CDB860();
    char v209 = StatisticsSnidgetStringBuilder.hasIndeterminateBaseline(displayType:quantity:)(v162, v247);

    swift_setDeallocating();
    (*(void (**)(char *, uint64_t))(v375 + 8))(v383, v376);
    int v208 = 0;
  }
  else
  {
    if (v149 == *MEMORY[0x263F46C78])
    {
      uint64_t v334 = 0;
      (*(void (**)(char *, uint64_t))(v147 + 96))(v148, v102);
      (*(void (**)(char *, char *, uint64_t))(v365 + 32))(v364, v148, v366);
      v170 = (void *)*v387;
      v171 = *(void **)(v339 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
      type metadata accessor for MostRecentSampleSnidgetStringBuilder();
      v172 = (id *)swift_initStackObject();
      v172[2] = v170;
      v173 = self;
      id v174 = v171;
      id v175 = v170;
      id v176 = objc_msgSend(v173, sel_sharedInstanceForHealthStore_, v175);
      v172[4] = v176;
      v177 = v404;
      uint64_t v178 = (uint64_t)v136;
      if (!v171)
      {
        id v179 = v176;
        id v174 = objc_msgSend(v179, sel_createHKUnitPreferenceController);
      }
      v172[3] = v174;
      v180 = (void *)sub_241CDB860();
      uint64_t v181 = (uint64_t)v379;
      MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleQuantityPrimaryAttributedString(displayType:quantity:)(v177, v180, (uint64_t)v379);

      v182 = (void (*)(uint64_t))MEMORY[0x263F06828];
      uint64_t v183 = v395;
      sub_241A32A10(v395, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
      sub_241AE3AA4(v181, v183, (unint64_t *)&qword_26B031FB8, v182);
      uint64_t v184 = v350;
      sub_241AE3B10(v388, v350, &qword_26B032258, MEMORY[0x263F471B8]);
      uint64_t v185 = v377;
      uint64_t v186 = v378;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v377 + 48))(v184, 1, v378) == 1)
      {
        sub_241A32A10(v184, &qword_26B032258, MEMORY[0x263F471B8]);
      }
      else
      {
        uint64_t v210 = (uint64_t)v342;
        (*(void (**)(char *, uint64_t, uint64_t))(v185 + 32))(v342, v184, v186);
        MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleSupplementaryString(supplementaryLabelConfiguration:supplementaryLabelInfo:)(v210, v178, v129, v386, v181);
        (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v210, v186);
        v211 = (void (*)(uint64_t))MEMORY[0x263F06828];
        uint64_t v212 = v394;
        sub_241A32A10(v394, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
        sub_241AE3AA4(v181, v212, (unint64_t *)&qword_26B031FB8, v211);
      }
      uint64_t v213 = v391;
      v214 = v372;
      v215 = v364;
      int v208 = sub_241CD9EB0();
      id v200 = v403;
      v216 = (void *)sub_241CDB860();
      v405 = (void *)SnidgetStringBuilder.makeQuantityFormattedDouble(displayType:quantity:)(v177, v216);
      LODWORD(v378) = v217;

      swift_setDeallocating();
      (*(void (**)(char *, uint64_t))(v365 + 8))(v215, v366);
      char v209 = 0;
      uint64_t v218 = (uint64_t)v371;
      uint64_t v102 = v390;
      uint64_t v169 = v392;
      goto LABEL_54;
    }
    v192 = v404;
    if (v149 != *MEMORY[0x263F46C38])
    {
      v219 = v344;
      sub_241CDA0F0();
      v220 = v387;
      sub_241AE3BE4((uint64_t)v387, (uint64_t)v150, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      uint64_t v221 = v343;
      sub_241AE3BE4((uint64_t)v220, v343, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      v222 = sub_241CDA190();
      os_log_type_t v223 = sub_241CDB650();
      int v224 = v223;
      if (os_log_type_enabled(v222, v223))
      {
        uint64_t v225 = swift_slowAlloc();
        LODWORD(v402) = v224;
        uint64_t v226 = v225;
        v405 = (void *)swift_slowAlloc();
        v406[0] = (uint64_t)v405;
        *(_DWORD *)uint64_t v226 = 136315394;
        uint64_t v227 = v370;
        uint64_t v228 = sub_241AE0404(*v150, *((unsigned __int8 *)v150 + *(int *)(v370 + 24) + 8), 0xD00000000000002CLL);
        uint64_t v407 = sub_241A33FE4(v228, v229, v406);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        sub_241AE3A44((uint64_t)v150, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
        *(_WORD *)(v226 + 12) = 2080;
        id v230 = objc_msgSend(*(id *)(v221 + *(int *)(v227 + 24) + 16), sel_sensitiveLoggingIdentifier);
        uint64_t v231 = sub_241CDB0D0();
        unint64_t v233 = v232;

        uint64_t v234 = v231;
        v192 = v404;
        uint64_t v407 = sub_241A33FE4(v234, v233, v406);
        uint64_t v102 = v390;
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        v148 = v382;
        sub_241AE3A44(v221, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
        _os_log_impl(&dword_241A23000, v222, (os_log_type_t)v402, "[%s]: unsupported query configuration for quantity type: %s", (uint8_t *)v226, 0x16u);
        v235 = v405;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v235, -1, -1);
        MEMORY[0x245637F20](v226, -1, -1);

        (*(void (**)(char *, uint64_t))(v385 + 8))(v344, v384);
      }
      else
      {
        sub_241AE3A44((uint64_t)v150, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
        sub_241AE3A44(v221, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);

        (*(void (**)(char *, uint64_t))(v385 + 8))(v219, v384);
      }
      id v302 = v403;
      sub_241A41340();
      swift_allocError();
      unsigned char *v303 = 0;
      swift_willThrow();

      sub_241A32A10(v386, &qword_26B038F10, MEMORY[0x263F062D0]);
      sub_241A32A10(v388, &qword_26B032258, MEMORY[0x263F471B8]);
      v304 = *(void (**)(char *, uint64_t))(v393 + 8);
      v304(v389, v102);
      v305 = (void (*)(uint64_t))MEMORY[0x263F06828];
      sub_241A32A10(v394, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
      sub_241A32A10(v395, (unint64_t *)&qword_26B031FB8, v305);
      v304(v148, v102);
      return;
    }
    uint64_t v334 = 0;
    v193 = (void *)*v387;
    v194 = *(void **)(v339 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
    type metadata accessor for SnidgetStringBuilder();
    v195 = (id *)swift_initStackObject();
    v195[2] = v193;
    v196 = self;
    id v197 = v194;
    id v198 = v193;
    id v199 = objc_msgSend(v196, sel_sharedInstanceForHealthStore_, v198);
    v195[4] = v199;
    id v200 = v403;
    if (!v194)
    {
      id v201 = v199;
      id v197 = objc_msgSend(v201, sel_createHKUnitPreferenceController);
    }
    v202 = v379;

    v195[3] = v197;
    v203 = (void *)sub_241CDB860();
    SnidgetStringBuilder.makeQuantityPrimaryAttributedString(displayType:quantity:)(v192, v203, v202);

    v204 = (void (*)(uint64_t))MEMORY[0x263F06828];
    uint64_t v205 = v395;
    sub_241A32A10(v395, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    sub_241AE3AA4((uint64_t)v202, v205, (unint64_t *)&qword_26B031FB8, v204);
    v206 = (void *)sub_241CDB860();
    v405 = (void *)SnidgetStringBuilder.makeQuantityFormattedDouble(displayType:quantity:)(v192, v206);
    LODWORD(v378) = v207;
    swift_setDeallocating();

    (*(void (**)(char *, uint64_t))(v393 + 8))(v382, v102);
    int v208 = 0;
    char v209 = 0;
    uint64_t v169 = v392;
  }
  uint64_t v213 = v391;
  v214 = v372;
  uint64_t v218 = (uint64_t)v371;
LABEL_54:
  sub_241AE3B10(v395, v218, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v213 + 48))(v218, 1, v169) == 1)
  {
    sub_241A32A10(v218, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    v248 = v367;
    sub_241CDA0F0();
    v249 = v387;
    sub_241AE3BE4((uint64_t)v387, (uint64_t)v214, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
    uint64_t v250 = v358;
    sub_241AE3BE4((uint64_t)v249, v358, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
    v251 = sub_241CDA190();
    os_log_type_t v252 = sub_241CDB650();
    int v253 = v252;
    if (os_log_type_enabled(v251, v252))
    {
      uint64_t v254 = swift_slowAlloc();
      LODWORD(v402) = v253;
      uint64_t v255 = v254;
      v405 = (void *)swift_slowAlloc();
      v406[0] = (uint64_t)v405;
      *(_DWORD *)uint64_t v255 = 136315394;
      uint64_t v256 = v370;
      uint64_t v257 = sub_241AE0404(*v214, *((unsigned __int8 *)v214 + *(int *)(v370 + 24) + 8), 0xD00000000000002CLL);
      uint64_t v407 = sub_241A33FE4(v257, v258, v406);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AE3A44((uint64_t)v214, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      *(_WORD *)(v255 + 12) = 2080;
      id v259 = objc_msgSend(*(id *)(v250 + *(int *)(v256 + 24) + 16), sel_sensitiveLoggingIdentifier);
      uint64_t v260 = sub_241CDB0D0();
      unint64_t v262 = v261;

      uint64_t v263 = v260;
      id v200 = v403;
      v264 = v404;
      uint64_t v407 = sub_241A33FE4(v263, v262, v406);
      uint64_t v102 = v390;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AE3A44(v250, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_241A23000, v251, (os_log_type_t)v402, "[%s]: unable to create primary string for: %s", (uint8_t *)v255, 0x16u);
      v265 = v405;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v265, -1, -1);
      MEMORY[0x245637F20](v255, -1, -1);

      (*(void (**)(char *, uint64_t))(v385 + 8))(v367, v384);
    }
    else
    {
      sub_241AE3A44((uint64_t)v214, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      sub_241AE3A44(v250, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);

      (*(void (**)(char *, uint64_t))(v385 + 8))(v248, v384);
      v264 = v404;
    }
    sub_241A41340();
    swift_allocError();
    unsigned char *v278 = 0;
    swift_willThrow();

    sub_241A32A10(v386, &qword_26B038F10, MEMORY[0x263F062D0]);
    sub_241A32A10(v388, &qword_26B032258, MEMORY[0x263F471B8]);
    (*(void (**)(char *, uint64_t))(v393 + 8))(v389, v102);
    goto LABEL_65;
  }
  uint64_t v266 = v169;
  char v267 = v209;
  LODWORD(v385) = v208;
  (*(void (**)(char *, uint64_t, uint64_t))(v213 + 32))(v380, v218, v266);
  uint64_t v268 = sub_241CD8A60();
  uint64_t v269 = *(void *)(v268 - 8);
  v270 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v269 + 56);
  v270(v381, 1, 1, v268);
  sub_241A313AC(0, qword_26B038448);
  sub_241A313AC(0, (unint64_t *)&qword_26B030398);
  v271 = (void *)MEMORY[0x245636A00]((id)*MEMORY[0x263F09C18]);
  char v272 = sub_241CDBB60();

  if (v272)
  {
    uint64_t v273 = v381;
    sub_241A32A10(v381, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
    (*(void (**)(uint64_t, void, uint64_t))(v269 + 104))(v273, *MEMORY[0x263F442D8], v268);
    v270(v273, 0, 1, v268);
  }
  v274 = v404;
  uint64_t v275 = v361;
  uint64_t v276 = (uint64_t)v360;
  v277 = v359;
  if (v267)
  {
    v335(v368, 1, 1, v402);
    v405 = 0;
  }
  else
  {
    v279 = (char *)*v387;
    v280 = (void *)v387[1];
    id v281 = v338;
    objc_msgSend(v338, sel_dateData);
    id v282 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    sub_241A3A71C();
    uint64_t v284 = v283;
    uint64_t v285 = v276 + *(int *)(v283 + 48);
    objc_msgSend(v281, sel_dateData);
    id v286 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v287 = v346;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v275 + 56))(v276, 0, 1, v346);
    *(void *)uint64_t v285 = v405;
    *(unsigned char *)(v285 + 8) = v378 & 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v284 - 8) + 56))(v276, 0, 1, v284);
    uint64_t v288 = (uint64_t)v345;
    sub_241CD6EA0();
    v289 = v279;
    uint64_t v290 = v381;
    uint64_t v291 = v334;
    id v292 = sub_241BACC30(v289, v280, v339, v349, v277, v276, v381, 0, v288);
    id v293 = v403;
    if (v291)
    {

      (*(void (**)(uint64_t, uint64_t))(v347 + 8))(v288, v348);
      sub_241A32A10(v276, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
      (*(void (**)(void *, uint64_t))(v275 + 8))(v277, v287);
      sub_241A32A10(v290, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
      (*(void (**)(char *, uint64_t))(v391 + 8))(v380, v392);
      sub_241A32A10(v386, &qword_26B038F10, MEMORY[0x263F062D0]);
      sub_241A32A10(v388, &qword_26B032258, MEMORY[0x263F471B8]);
      (*(void (**)(char *, uint64_t))(v393 + 8))(v389, v390);
LABEL_65:
      v294 = (void (*)(uint64_t))MEMORY[0x263F06828];
      sub_241A32A10(v394, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
      sub_241A32A10(v395, (unint64_t *)&qword_26B031FB8, v294);
      return;
    }
    uint64_t v334 = 0;
    v295 = *(void (**)(uint64_t, uint64_t))(v347 + 8);
    v405 = v292;
    v295(v288, v348);
    sub_241A32A10(v276, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
    (*(void (**)(void *, uint64_t))(v275 + 8))(v277, v287);
    uint64_t v296 = v402;
    v297 = v335;
    v335(v368, 1, 1, v402);
    if (v405)
    {
      swift_retain();
      v298 = v341;
      sub_241CD8A40();
      sub_241CD67E0();
      ((void (*)(char *, uint64_t))v401[1])(v298, v296);
      objc_msgSend(v338, sel_dateData);
      id v299 = (id)HKDecodeDateForValue();
      sub_241CD6CB0();

      uint64_t v300 = v400;
      sub_241CD67C0();
      swift_release();
      v301 = (void (*)(uint64_t))MEMORY[0x263F062D0];
      sub_241A32A10(v368, &qword_26B038F10, MEMORY[0x263F062D0]);
      v297(v300, 0, 1, v296);
      sub_241AE3AA4(v300, v368, &qword_26B038F10, v301);
    }
    else
    {
      v405 = 0;
    }
    v274 = v404;
  }
  sub_241CD89A0();
  sub_241A3A9CC();
  uint64_t v307 = *(int *)(v306 + 48);
  v401 = v274;
  objc_msgSend(v338, sel_dateData);
  id v308 = (id)HKDecodeDateForValue();
  v309 = v396;
  sub_241CD6CB0();

  v309[v307] = v385 & 1;
  uint64_t v310 = *MEMORY[0x263F43F18];
  uint64_t v311 = sub_241CD8610();
  uint64_t v312 = *(void *)(v311 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v312 + 104))(v309, v310, v311);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v312 + 56))(v309, 0, 1, v311);
  uint64_t v402 = sub_241CD8990();
  v404 = (void *)MEMORY[0x263F06828];
  sub_241AE3B10(v394, (uint64_t)v379, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v313 = v392;
  (*(void (**)(char *, char *, uint64_t))(v391 + 16))(v355, v380, v392);
  v336((uint64_t)v354, 1, 1, v313);
  v406[0] = 0x5F74656764696E53;
  v406[1] = 0xE800000000000000;
  id v314 = *(id *)(v339 + 16);
  id v315 = objc_msgSend(v314, sel_description);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  v316 = (void *)sub_241CDB860();
  objc_msgSend(v316, sel__value);

  v317 = v356;
  sub_241CD8E60();
  swift_bridgeObjectRelease();
  uint64_t v318 = sub_241CD8E70();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v318 - 8) + 56))(v317, 0, 1, v318);
  sub_241CD8FF0();
  swift_allocObject();
  v396 = (char *)sub_241CD8FE0();
  uint64_t v319 = (uint64_t)v405;
  swift_retain();
  id v320 = v338;
  objc_msgSend(v338, sel_dateData);
  id v321 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v322 = (uint64_t)v397;
  sub_241CD79D0();
  uint64_t v323 = sub_241CD7A10();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v323 - 8) + 56))(v322, 0, 1, v323);
  v324 = (void (*)(uint64_t))MEMORY[0x263F062D0];
  uint64_t v325 = v368;
  uint64_t v326 = v400;
  sub_241AE3B10(v368, v400, &qword_26B038F10, MEMORY[0x263F062D0]);
  sub_241A3A878();
  v328 = v399;
  v329 = (char *)v399 + *(int *)(v327 + 52);
  uint64_t v330 = v398;
  swift_bridgeObjectRetain();
  sub_241B4A1A8(1, v322, v330, v326, v329);
  swift_release();

  v331 = v396;
  uint64_t *v328 = v402;
  v328[1] = (uint64_t)v331;
  v328[2] = v319;
  sub_241A32A10(v325, &qword_26B038F10, v324);
  sub_241A32A10(v381, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
  (*(void (**)(char *, uint64_t))(v391 + 8))(v380, v392);
  sub_241A32A10(v386, &qword_26B038F10, v324);
  sub_241A32A10(v388, &qword_26B032258, MEMORY[0x263F471B8]);
  (*(void (**)(char *, uint64_t))(v393 + 8))(v389, v390);
  v332 = (void (*)(uint64_t))v404;
  sub_241A32A10(v394, (unint64_t *)&qword_26B031FB8, (void (*)(uint64_t))v404);
  sub_241A32A10(v395, (unint64_t *)&qword_26B031FB8, v332);
}

uint64_t sub_241AE38F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241AE3BE4(v2 + *(int *)(a1 + 24), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241AE392C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_241AE3950(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241AE39A4()
{
  if (!qword_26B034CF8)
  {
    sub_241A94320(255, &qword_26B034D00);
    sub_241AE3950(255, &qword_26B038F10, MEMORY[0x263F062D0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B034CF8);
    }
  }
}

uint64_t sub_241AE3A44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241AE3AA4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241AE3950(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_241AE3B10(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241AE3950(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_241AE3B7C()
{
  unint64_t result = qword_26B030438;
  if (!qword_26B030438)
  {
    sub_241A313AC(255, &qword_26B030440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030438);
  }
  return result;
}

uint64_t sub_241AE3BE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_241AE3C4C(void *a1, uint64_t a2, void (*a3)(id, void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = sub_241CD6D00();
  uint64_t v10 = *(void (***)(char *, uint64_t))(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v5 + qword_26B041200;
  uint64_t v14 = *(void **)(v13 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  self;
  uint64_t v15 = swift_dynamicCastObjCClass();
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v52 = v10;
    uint64_t v53 = a3;
    uint64_t v54 = a4;
    id v55 = v14;
    id v17 = objc_msgSend(v55, sel_identifier);
    if (!v17)
    {
      sub_241CDB0D0();
      id v17 = (id)sub_241CDB090();
      swift_bridgeObjectRelease();
    }
    uint64_t v18 = sub_241CDB0D0();
    uint64_t v20 = v19;
    if (v18 != sub_241CDB0D0() || v20 != v21)
    {
      char v23 = sub_241CDC100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_16;
      }
      uint64_t v24 = sub_241CDB0D0();
      uint64_t v26 = v25;
      if (v24 != sub_241CDB0D0() || v26 != v27)
      {
        char v29 = sub_241CDC100();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0)
        {
          uint64_t v51 = sub_241A313AC(0, (unint64_t *)&qword_26B030370);
          sub_241AE4430(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
          uint64_t v30 = swift_allocObject();
          *(_OWORD *)(v30 + 16) = xmmword_241CEB720;
          uint64_t v31 = sub_241CDB0D0();
          uint64_t v33 = v32;
          *(void *)(v30 + 56) = MEMORY[0x263F8D310];
          *(void *)(v30 + 64) = sub_241A55A74();
          *(void *)(v30 + 32) = v31;
          *(void *)(v30 + 40) = v33;
          sub_241CD6C00();
          uint64_t v34 = sub_241CD6C60();
          v52[1](v12, v9);
          *(void *)(v30 + 96) = sub_241A313AC(0, &qword_26B0304B8);
          *(void *)(v30 + 104) = sub_241AE4494();
          *(void *)(v30 + 72) = v34;
          uint64_t v52 = (void (**)(char *, uint64_t))sub_241CDB410();
          id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v16, v52);
          sub_241A33460();
          uint64_t v36 = swift_allocObject();
          *(_OWORD *)(v36 + 16) = xmmword_241CEB710;
          *(void *)(v36 + 32) = v35;
          aBlock[0] = v36;
          sub_241CDB2E0();
          uint64_t v37 = (void *)swift_allocObject();
          uint64_t v38 = v54;
          v37[2] = v53;
          v37[3] = v38;
          v37[4] = v5;
          v37[5] = a1;
          id v39 = objc_allocWithZone(MEMORY[0x263F0A6E0]);
          sub_241A313AC(0, &qword_26B036890);
          id v40 = a1;
          id v41 = v35;
          swift_retain();
          swift_retain();
          uint64_t v42 = (void *)sub_241CDB2A0();
          swift_bridgeObjectRelease();
          aBlock[4] = sub_241AE4544;
          aBlock[5] = v37;
          aBlock[0] = MEMORY[0x263EF8330];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_241C856FC;
          aBlock[3] = &unk_26F5C2290;
          id v43 = _Block_copy(aBlock);
          id v44 = objc_msgSend(v39, sel_initWithQueryDescriptors_limit_resultsHandler_, v42, 0, v43);

          _Block_release(v43);
          swift_release();
          objc_msgSend(*(id *)(v13 + 16), sel_executeQuery_, v44);

LABEL_17:
          return;
        }
LABEL_16:
        sub_241A33460();
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_241CEB710;
        *(void *)(inited + 32) = a1;
        aBlock[0] = inited;
        sub_241CDB2E0();
        unint64_t v46 = aBlock[0];
        id v47 = a1;
        id v48 = sub_241AE4568(v46);
        swift_bridgeObjectRelease();
        v53(v48, 0);

        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  sub_241A3F000();
  sub_241A3F068();
  uint64_t v49 = (void *)swift_allocError();
  *uint64_t v50 = 0;
  a3(v49, 1);
}

void sub_241AE4200(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(id, void), uint64_t a5, uint64_t a6, void *a7)
{
  if (!a2) {
    goto LABEL_8;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_8:
    sub_241A33460();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241CEB710;
    *(void *)(inited + 32) = a7;
    unint64_t v15 = inited;
    sub_241CDB2E0();
    id v12 = a7;
    id v13 = sub_241AE4568(v15);
    swift_bridgeObjectRelease();
    a4(v13, 0);

    return;
  }
  if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_4:
  id v14 = sub_241AE4568(a2);
  a4(v14, 0);
}

uint64_t sub_241AE432C()
{
  sub_241A3F384(v0 + qword_26B041200);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OngoingFactorsMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B037FC0;
  if (!qword_26B037FC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241AE4430(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_241AE4494()
{
  unint64_t result = qword_26B0304C0;
  if (!qword_26B0304C0)
  {
    sub_241A313AC(255, &qword_26B0304B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0304C0);
  }
  return result;
}

uint64_t sub_241AE44FC()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_241AE4544(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_241AE4200(a1, a2, a3, *(void (**)(id, void))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_241AE4550(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241AE4560()
{
  return swift_release();
}

id sub_241AE4568(unint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241AE4430(0, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)v44 - v7;
  uint64_t v9 = sub_241CD6D00();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  MEMORY[0x270FA5388](v10);
  sub_241AE4430(0, &qword_26B038F10, MEMORY[0x263F062D0], v2);
  MEMORY[0x270FA5388](v11 - 8);
  id v13 = (char *)v44 - v12;
  sub_241AE4430(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v2);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  id v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v44 - v18;
  sub_241A313AC(0, &qword_26B02E820);
  unint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = HKCodableSummaryOngoingFactorsValue.init(ongoingSamples:)(v20);
  if (!v21)
  {
    sub_241CD7A80();
    uint64_t v41 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v8, 0, 1, v41);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v42 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v17, 1, 1, v42);
    id v43 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    sub_241AE4B68((uint64_t)v8, (uint64_t)v6, &qword_26B032050, MEMORY[0x263F45780]);
    id v37 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v17, (uint64_t)v6, 0, 0);
    uint64_t v38 = (uint64_t)v8;
    id v39 = &qword_26B032050;
    id v40 = v43;
    goto LABEL_7;
  }
  uint64_t v22 = (void *)v21;
  sub_241CD9A90();
  uint64_t v23 = *MEMORY[0x263F46C58];
  uint64_t v24 = sub_241CD9970();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v19, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
  objc_msgSend(v22, sel_earliestStartDate);
  id v26 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  objc_msgSend(v22, sel_latestEndDate);
  id v27 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  sub_241CD67C0();
  uint64_t v28 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v13, 0, 1, v28);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_241A313AC(0, &qword_26B034E48);
  id v30 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v13, v29, 0);
  id result = objc_msgSend(v22, sel_data);
  if (result)
  {
    uint64_t v32 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v33 = sub_241CD6AE0();
    unint64_t v35 = v34;

    uint64_t v36 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
    sub_241AE4B68((uint64_t)v19, (uint64_t)v17, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    uint64_t v45 = 0;
    memset(v44, 0, sizeof(v44));
    id v37 = sub_241A54648(v33, v35, 12, (uint64_t)v17, (uint64_t)v30, 0, (uint64_t)v44);

    sub_241A37374(v33, v35);
    uint64_t v38 = (uint64_t)v19;
    id v39 = (unint64_t *)&qword_26B0321F0;
    id v40 = v36;
LABEL_7:
    sub_241AE4BE8(v38, v39, v40);
    return v37;
  }
  __break(1u);
  return result;
}

uint64_t sub_241AE4B68(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241AE4430(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241AE4BE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241AE4430(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241AE4C58()
{
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  sub_241CDC270();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  uint64_t v0 = (void *)sub_241CDB4D0();
  sub_241CD73D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return 91;
}

uint64_t sub_241AE4D7C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_241AE4FB4();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v11 = self;
    uint64_t v12 = (void *)sub_241CDB090();
    sub_241A48DB0(a6);
    id v13 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v11, sel_localizedUserNotificationStringForKey_arguments_, v12, v13);

    uint64_t v15 = sub_241CDB0D0();
    return v15;
  }
  else
  {
    if (qword_26B038428 != -1) {
      swift_once();
    }
    sub_241CD69E0();
    sub_241CD6DB0();
    uint64_t v17 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 0, 1, v17);
    sub_241A48ED8(a6);
    uint64_t v18 = sub_241CDB0E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_241AE5064((uint64_t)v10);
    return v18;
  }
}

void sub_241AE4FB4()
{
  if (!qword_26B02E8E8)
  {
    sub_241CD6DD0();
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B02E8E8);
    }
  }
}

id sub_241AE500C()
{
  type metadata accessor for SummariesHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_26B0413A0 = (uint64_t)result;
  return result;
}

uint64_t sub_241AE5064(uint64_t a1)
{
  sub_241AE4FB4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241AE50C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  v22[1] = a1;
  uint64_t v23 = a6;
  int v24 = a5;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = sub_241CD6940();
  MEMORY[0x270FA5388](v27);
  sub_241AE4FB4();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD6970();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CDB070();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v14 = sub_241CD69B0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_241CDB060();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v23, v9);
  if (qword_26B038428 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_26B0413A0;
  uint64_t v19 = sub_241CD6DD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 1, 1, v19);
  id v20 = v18;
  sub_241CD6990();
  sub_241CD6930();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_241AE5400();
  return sub_241CDB200();
}

unint64_t sub_241AE5400()
{
  unint64_t result = qword_26B035480;
  if (!qword_26B035480)
  {
    sub_241CD6940();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035480);
  }
  return result;
}

uint64_t sub_241AE5458()
{
  uint64_t v0 = sub_241CD6DD0();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241CDB070();
  MEMORY[0x270FA5388](v1 - 8);
  swift_bridgeObjectRetain();
  sub_241CDB060();
  if (qword_26B038428 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26B0413A0;
  sub_241CD6DC0();
  return sub_241CDB110();
}

uint64_t sub_241AE55A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v41 = a1;
  uint64_t v42 = a5;
  uint64_t v37 = a4;
  LODWORD(v40) = a3;
  uint64_t v39 = sub_241CD6940();
  MEMORY[0x270FA5388](v39);
  uint64_t v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AE4FB4();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD6970();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CDB070();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v36 - v18;
  uint64_t v20 = sub_241CD69B0();
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  int v24 = (char *)&v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v40)
  {
    uint64_t v25 = self;
    uint64_t v26 = (void *)sub_241CDB090();
    sub_241A48DB0(v42);
    uint64_t v27 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(v25, sel_localizedUserNotificationStringForKey_arguments_, v26, v27);

    uint64_t v29 = sub_241CDB0D0();
    return v29;
  }
  else
  {
    uint64_t v36 = v22;
    uint64_t v40 = v21;
    swift_bridgeObjectRetain();
    sub_241CDB060();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v37, v9);
    uint64_t v41 = v13;
    if (qword_26B038428 != -1) {
      swift_once();
    }
    uint64_t v31 = (void *)qword_26B0413A0;
    uint64_t v32 = sub_241CD6DD0();
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
    v33(v8, 1, 1, v32);
    id v34 = v31;
    sub_241CD6990();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v41);
    sub_241CD6930();
    sub_241AE5400();
    sub_241CDB200();
    sub_241CD6DB0();
    v33(v8, 0, 1, v32);
    sub_241A48ED8(v42);
    uint64_t v35 = sub_241CDB0E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_241AE5064((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v40);
    return v35;
  }
}

uint64_t sub_241AE5AA0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_241AE4FB4();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD6DD0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = sub_241CDB070();
  MEMORY[0x270FA5388](v11 - 8);
  if (a3)
  {
    uint64_t v12 = self;
    uint64_t v13 = (void *)sub_241CDB090();
    sub_241A48DB0(a4);
    uint64_t v14 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v12, sel_localizedUserNotificationStringForKey_arguments_, v13, v14);

    uint64_t v16 = sub_241CDB0D0();
    return v16;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_241CDB060();
    if (qword_26B038428 != -1) {
      swift_once();
    }
    id v18 = (id)qword_26B0413A0;
    sub_241CD6DC0();
    sub_241CDB110();
    sub_241CD6DB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    sub_241A48ED8(a4);
    uint64_t v19 = sub_241CDB0E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_241AE5064((uint64_t)v8);
    return v19;
  }
}

uint64_t sub_241AE5D94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_241CD6D00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v6 = (void *)sub_241CD7770();
  sub_241A313AC(0, (unint64_t *)&qword_26B030398);
  uint64_t v7 = (void *)MEMORY[0x245636A00]((id)*MEMORY[0x263F09BE0]);
  sub_241A313AC(0, (unint64_t *)&qword_26B038E58);
  char v8 = sub_241CDBB60();

  if (v8)
  {
    type metadata accessor for SleepingWristTemperatureStatisticsCurrentValueSharableModelStep();
    sub_241CD67B0();
    sub_241C99730(a1);
  }
  else
  {
    sub_241CD67B0();
    sub_241CD6770();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_241AE5F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241AE91C4(v2 + *(int *)(a1 + 28), a2, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
}

uint64_t *sub_241AE5F84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = *v3;
  uint64_t v30 = sub_241CD7650();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_241CD7690();
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  char v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  id v26 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v10 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v34 = inited;
  sub_241CDB2E0();
  char v11 = *(unsigned char *)(a2 + *(int *)(v10 + 36));
  sub_241A358B8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v12 = sub_241CD73B0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  if (v11)
  {
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v16 + v15, *MEMORY[0x263F454D0], v12);
  }
  else
  {
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_241CEB720;
    unint64_t v18 = v16 + v15;
    uint64_t v19 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
    v19(v18, *MEMORY[0x263F45520], v12);
    v19(v18 + v14, *MEMORY[0x263F45538], v12);
  }
  id v17 = v26;
  sub_241C5D74C(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v20 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v20);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, *MEMORY[0x263F45690], v30);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries50StatisticCurrentValueSummarySharableModelGenerator_domain, v8, v31);
  sub_241AE9104(a2, (uint64_t)v3 + OBJC_IVAR____TtC9Summaries50StatisticCurrentValueSummarySharableModelGenerator_request);
  uint64_t v21 = sub_241AE9058(&qword_26B02FAE0, (void (*)(uint64_t))type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator);
  uint64_t v22 = v33;
  uint64_t v23 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v33, a2, v32, v21);
  sub_241AE9168(a2);
  uint64_t v24 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v22, v24);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC9Summaries50StatisticCurrentValueSummarySharableModelGenerator_publisher) = v23;
  return v3;
}

id sub_241AE6448(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v157 = a3;
  v177 = a2;
  uint64_t v162 = a1;
  id v176 = (void *)sub_241CD9D00();
  uint64_t v3 = *(v176 - 1);
  MEMORY[0x270FA5388](v176);
  id v156 = (char *)&v144 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v163 = (uint64_t)&v144 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CDA1A0();
  uint64_t v164 = *(void *)(v7 - 8);
  uint64_t v165 = (void (*)(char *, uint64_t))v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v167 = (char *)&v144 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A358B8(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  v172 = (char *)&v144 - v11;
  sub_241A358B8(0, &qword_26B032050, MEMORY[0x263F45780], v9);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v168 = (uint64_t)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v169 = (char *)&v144 - v15;
  sub_241A358B8(0, &qword_26B038F10, MEMORY[0x263F062D0], v9);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  v148 = (char *)&v144 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v153 = (uint64_t)&v144 - v19;
  sub_241A358B8(0, &qword_26B0385B8, MEMORY[0x263F07490], v9);
  MEMORY[0x270FA5388](v20 - 8);
  v154 = (char *)&v144 - v21;
  uint64_t v159 = sub_241CD6D00();
  uint64_t v160 = *(void *)(v159 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v159);
  uint64_t v146 = (char *)&v144 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v147 = (char *)&v144 - v25;
  MEMORY[0x270FA5388](v24);
  v151 = (char *)&v144 - v26;
  uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x263F44B28];
  sub_241A358B8(0, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v144 - v29;
  sub_241A358B8(0, &qword_26B034D58, v27, v9);
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v33 = (char *)&v144 - v32;
  uint64_t v174 = sub_241CDB5B0();
  uint64_t v166 = *(void *)(v174 - 8);
  MEMORY[0x270FA5388](v174);
  uint64_t v161 = (char *)&v144 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A358B8(0, &qword_26B0321B0, MEMORY[0x263F46B90], v9);
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v37 = (char *)&v144 - v36;
  uint64_t v38 = sub_241CD9840();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v150 = (char *)&v144 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  id v175 = (char *)&v144 - v42;
  uint64_t v43 = sub_241CD9970();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  int v149 = (char *)&v144 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  id v48 = (char *)&v144 - v47;
  uint64_t v49 = *(void (**)(char *, uint64_t, void *))(v3 + 16);
  uint64_t v158 = v3 + 16;
  v152 = v49;
  v49((char *)&v144 - v47, (uint64_t)v177, v176);
  uint64_t v50 = *MEMORY[0x263F46C30];
  uint64_t v170 = v43;
  uint64_t v171 = v44;
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 104);
  v173 = v48;
  v51(v48, v50, v43);
  uint64_t v52 = sub_241CD9CC0();
  if (*(void *)(v52 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v37, v52 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80)), v38);
    uint64_t v53 = 0;
  }
  else
  {
    uint64_t v53 = 1;
  }
  uint64_t v54 = v38;
  uint64_t v55 = v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v37, v53, 1, v38);
  swift_bridgeObjectRelease();
  int v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38);
  uint64_t v57 = v174;
  if (v56 == 1)
  {
    sub_241AE9234((uint64_t)v37, &qword_26B0321B0, MEMORY[0x263F46B90]);
    uint64_t v58 = v167;
    sub_241CDA140();
    uint64_t v59 = v163;
    sub_241AE9104((uint64_t)v177, v163);
    uint64_t v60 = sub_241CDA190();
    os_log_type_t v61 = sub_241CDB660();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = v59;
      uint64_t v63 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      *(void *)&long long v180 = v64;
      *(_DWORD *)uint64_t v63 = 136315394;
      *(void *)&v178[0] = v155;
      swift_getMetatypeMetadata();
      uint64_t v65 = sub_241CDB120();
      *(void *)&v178[0] = sub_241A33FE4(v65, v66, (uint64_t *)&v180);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 12) = 2080;
      v152(v156, v62, v176);
      uint64_t v67 = sub_241CDB120();
      *(void *)&v178[0] = sub_241A33FE4(v67, v68, (uint64_t *)&v180);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AE9168(v62);
      _os_log_impl(&dword_241A23000, v60, v61, "[%s]: We're processing a model without a data model. How? %s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v64, -1, -1);
      MEMORY[0x245637F20](v63, -1, -1);

      (*(void (**)(char *, void))(v164 + 8))(v167, v165);
    }
    else
    {
      sub_241AE9168(v59);

      (*(void (**)(char *, void))(v164 + 8))(v58, v165);
    }
    uint64_t v76 = v173;
    id v77 = v169;
    sub_241CD7A80();
    uint64_t v78 = sub_241CD7AB0();
    (*(void (**)(id, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v77, 0, 1, v78);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v80 = v171;
    uint64_t v79 = (uint64_t)v172;
    uint64_t v81 = v170;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v171 + 56))(v172, 1, 1, v170);
    uint64_t v82 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v83 = v168;
    sub_241AE91C4((uint64_t)v77, v168, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    id v84 = sub_241A53EB0(0, 0xF000000000000000, 11, v79, v83, 0, 0);
    sub_241AE9234((uint64_t)v77, &qword_26B032050, v82);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v76, v81);
    return v84;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v175, v37, v38);
  sub_241AE91C4(v162, (uint64_t)v30, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  uint64_t v69 = v166;
  uint64_t v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48);
  uint64_t v71 = 1;
  if (v70(v30, 1, v57) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v33, v30, v57);
    uint64_t v71 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v33, v71, 1, v57);
  if (v70(v33, 1, v57) == 1)
  {
    uint64_t v72 = v55;
    uint64_t v73 = v38;
    uint64_t v74 = &qword_26B034D58;
    uint64_t v75 = (uint64_t (*)(uint64_t))MEMORY[0x263F44B28];
LABEL_17:
    sub_241AE9234((uint64_t)v33, v74, v75);
LABEL_18:
    uint64_t v94 = v171;
    uint64_t v93 = (uint64_t)v172;
    id v96 = v169;
    uint64_t v95 = v170;
    sub_241CD7A80();
    uint64_t v97 = sub_241CD7AB0();
    (*(void (**)(id, void, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v96, 0, 1, v97);
    sub_241A313AC(0, &qword_26B030440);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v93, 1, 1, v95);
    v98 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v99 = v168;
    sub_241AE91C4((uint64_t)v96, v168, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    id v84 = sub_241A53EB0(0, 0xF000000000000000, 11, v93, v99, 0, 0);
    sub_241AE9234((uint64_t)v96, &qword_26B032050, v98);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v175, v73);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v173, v95);
    return v84;
  }
  uint64_t v85 = v161;
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v161, v33, v57);
  uint64_t v86 = v153;
  sub_241AE91C4(v157, v153, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v87 = sub_241CD6810();
  uint64_t v88 = *(void *)(v87 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87) == 1)
  {
    sub_241AE9234(v86, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v33 = v154;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v154, 1, 1, v159);
LABEL_16:
    uint64_t v91 = v69;
    uint64_t v72 = v55;
    uint64_t v92 = v57;
    uint64_t v73 = v54;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v85, v92);
    uint64_t v74 = &qword_26B0385B8;
    uint64_t v75 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    goto LABEL_17;
  }
  uint64_t v33 = v154;
  sub_241CD67B0();
  uint64_t v85 = v161;
  (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v86, v87);
  uint64_t v89 = v160;
  uint64_t v90 = v159;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v33, 0, 1, v159);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v33, 1, v90) == 1) {
    goto LABEL_16;
  }
  id v176 = (void *)v88;
  uint64_t v101 = v33;
  uint64_t v102 = v151;
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v151, v101, v90);
  v103 = (void *)sub_241CDB5A0();
  uint64_t v104 = sub_241AE9B78((unint64_t)v103);

  v177 = v104;
  if (!v104)
  {
    uint64_t v106 = v69;
    uint64_t v72 = v55;
    uint64_t v107 = v57;
    uint64_t v73 = v54;
    (*(void (**)(char *, uint64_t))(v89 + 8))(v102, v90);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v161, v107);
    goto LABEL_18;
  }
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v150, *MEMORY[0x263F46B78], v54);
  sub_241AE9058(&qword_26B0321A8, MEMORY[0x263F46B90]);
  sub_241CDB260();
  sub_241CDB260();
  if (v178[0] == v180) {
    char v105 = 1;
  }
  else {
    char v105 = sub_241CDC100();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v108 = *(void (**)(char *, uint64_t))(v55 + 8);
  v108(v150, v54);
  uint64_t v145 = v54;
  uint64_t v167 = (char *)(v55 + 8);
  uint64_t v165 = v108;
  if (v105)
  {
    uint64_t v109 = v177;
    id v110 = objc_msgSend(v177, sel_mostRecentQuantity);
    if (!v110)
    {
      id v111 = v169;
      sub_241CD7A80();
      uint64_t v112 = sub_241CD7AB0();
      (*(void (**)(id, void, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v111, 0, 1, v112);
      sub_241A313AC(0, &qword_26B030440);
      uint64_t v114 = v170;
      uint64_t v113 = v171;
      uint64_t v115 = v109;
      uint64_t v116 = (uint64_t)v172;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v171 + 56))(v172, 1, 1, v170);
      unint64_t v117 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
      uint64_t v118 = v168;
      sub_241AE91C4((uint64_t)v111, v168, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
      id v84 = sub_241A53EB0(0, 0xF000000000000000, 11, v116, v118, 0, 0);
      sub_241AE9234((uint64_t)v111, &qword_26B032050, v117);

      (*(void (**)(char *, uint64_t))(v160 + 8))(v151, v159);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v161, v174);
      v165(v175, v145);
LABEL_33:
      (*(void (**)(char *, uint64_t))(v113 + 8))(v173, v114);
      return v84;
    }
  }
  else
  {
    uint64_t v109 = v177;
    uint64_t v119 = sub_241CDB4C0();
    if (!v119)
    {
      id v138 = v169;
      sub_241CD7A80();
      uint64_t v139 = sub_241CD7AB0();
      (*(void (**)(id, void, uint64_t, uint64_t))(*(void *)(v139 - 8) + 56))(v138, 0, 1, v139);
      sub_241A313AC(0, &qword_26B030440);
      uint64_t v114 = v170;
      uint64_t v113 = v171;
      v140 = v109;
      uint64_t v141 = (uint64_t)v172;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v171 + 56))(v172, 1, 1, v170);
      id v142 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
      uint64_t v143 = v168;
      sub_241AE91C4((uint64_t)v138, v168, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
      id v84 = sub_241A53EB0(0, 0xF000000000000000, 11, v141, v143, 0, 0);
      sub_241AE9234((uint64_t)v138, &qword_26B032050, v142);

      (*(void (**)(char *, uint64_t))(v160 + 8))(v151, v159);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v161, v57);
      v165(v175, v145);
      goto LABEL_33;
    }
    id v110 = (id)v119;
  }
  sub_241A313AC(0, &qword_26B034E48);
  uint64_t v120 = v109;
  id v121 = objc_msgSend(v109, sel_startDate);
  uint64_t v122 = (uint64_t)v147;
  sub_241CD6CB0();

  id v123 = objc_msgSend(v120, sel_endDate);
  sub_241CD6CB0();

  uint64_t v124 = (uint64_t)v148;
  sub_241CD67C0();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v176[7])(v124, 0, 1, v87);
  id v125 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)(v124, (uint64_t)objc_msgSend(v120, sel_dataCount), 0);
  sub_241A313AC(0, &qword_26B034E30);
  (*(void (**)(uint64_t, char *, uint64_t))(v160 + 16))(v122, v151, v159);
  id v176 = v110;
  uint64_t v126 = (char *)HKCodableSummaryQuantityValue.init(quantity:date:)(v176, v122);
  uint64_t v128 = v170;
  uint64_t v127 = v171;
  int v129 = *(void (**)(char *, char *, uint64_t))(v171 + 16);
  v129(v149, v173, v170);
  id v130 = v125;
  uint64_t v169 = v126;
  id result = objc_msgSend(v126, sel_data);
  if (result)
  {
    id v131 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v132 = sub_241CD6AE0();
    unint64_t v134 = v133;

    uint64_t v135 = (uint64_t)v172;
    id v136 = v149;
    v129(v172, v149, v128);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v127 + 56))(v135, 0, 1, v128);
    uint64_t v179 = 0;
    memset(v178, 0, sizeof(v178));
    id v84 = sub_241A54648(v132, v134, 14, v135, (uint64_t)v130, 0, (uint64_t)v178);

    sub_241A37374(v132, v134);
    id v137 = *(void (**)(char *, uint64_t))(v127 + 8);
    v137(v136, v128);

    (*(void (**)(char *, uint64_t))(v160 + 8))(v151, v159);
    (*(void (**)(char *, uint64_t))(v166 + 8))(v161, v174);
    v165(v175, v145);
    v137(v173, v128);
    return v84;
  }
  __break(1u);
  return result;
}

uint64_t sub_241AE7C50()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries50StatisticCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_241AE9168(v0 + OBJC_IVAR____TtC9Summaries50StatisticCurrentValueSummarySharableModelGenerator_request);

  return swift_deallocClassInstance();
}

uint64_t sub_241AE7D10()
{
  return type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B038A90);
}

uint64_t sub_241AE7D38()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B0389E0);
}

void *sub_241AE7E30(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD9D00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_241CD6810();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_241A358B8(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (void *)((char *)a1 + v19);
    uint64_t v22 = (void *)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241AE8074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_241CD6810();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_241AE81B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_241A358B8(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241AE83AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_241A358B8(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  void *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_241AE8620(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_241A358B8(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  return a1;
}

uint64_t sub_241AE8808(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_241A358B8(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_241AE8A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241AE8A7C);
}

uint64_t sub_241AE8A7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD77C0();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_241A358B8(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[8] + 8);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_241AE8C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241AE8C24);
}

void sub_241AE8C24(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_241CD9D00();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_241CD77C0();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      sub_241A358B8(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[8] + 8) = (a2 - 1);
        return;
      }
      uint64_t v10 = v16;
      uint64_t v14 = *(void *)(v16 - 8);
      uint64_t v15 = a4[7];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

void sub_241AE8DB4()
{
  sub_241CD9D00();
  if (v0 <= 0x3F)
  {
    sub_241CD77C0();
    if (v1 <= 0x3F)
    {
      sub_241A358B8(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

_UNKNOWN **sub_241AE8EFC()
{
  return &off_26F5C22B8;
}

uint64_t sub_241AE8F08(uint64_t a1)
{
  uint64_t result = sub_241AE9058(&qword_26B038A80, (void (*)(uint64_t))type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241AE8F60()
{
  return &off_26F5C2300;
}

uint64_t sub_241AE8F6C()
{
  return swift_retain();
}

uint64_t sub_241AE8F80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries50StatisticCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241AE9000(uint64_t a1)
{
  uint64_t result = sub_241AE9058(&qword_26B038A88, (void (*)(uint64_t))type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241AE9058(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_241AE90A0()
{
  return &off_26F5C2318;
}

uint64_t sub_241AE90AC(uint64_t a1)
{
  uint64_t result = sub_241AE9058(&qword_26B0342A8, (void (*)(uint64_t))type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241AE9104(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241AE9168(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241AE91C4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_241A358B8(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_241AE9234(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A358B8(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241AE92A4(char *a1, uint64_t a2, uint64_t a3)
{
  v44[1] = a2;
  uint64_t v47 = a1;
  uint64_t v4 = sub_241CD7650();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v51 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD7690();
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v58 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A358B8(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v44 - v10;
  uint64_t v45 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241A358B8(0, &qword_26B0385B8, MEMORY[0x263F07490], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (uint64_t)v44 - v13;
  uint64_t v49 = sub_241CDB5C0();
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241ABD6A4();
  uint64_t v55 = *(void *)(v17 - 8);
  uint64_t v56 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v50 = (char *)v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD76B0();
  sub_241A311E0(v60, v60[3]);
  uint64_t v19 = (void *)sub_241CD75B0();
  uint64_t v20 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v21 = (void *)sub_241CD7770();
  uint64_t v22 = sub_241CD6D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v14, 1, 1, v22);
  uint64_t v23 = sub_241CD6810();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v11, v47, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v11, 0, 1, v23);
  uint64_t v47 = v16;
  sub_241CDB5F0();

  sub_241AE9234((uint64_t)v11, &qword_26B038F10, v46);
  sub_241AE9234(v14, &qword_26B0385B8, v45);
  sub_241A31190((uint64_t)v60);
  sub_241CD7730();
  uint64_t v25 = (void *)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v59 = inited;
  sub_241CDB2E0();
  LOBYTE(v14) = *(unsigned char *)(a3 + *(int *)(v20 + 36));
  sub_241A358B8(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v27 = sub_241CD73B0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 72);
  unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = swift_allocObject();
  if (v14)
  {
    *(_OWORD *)(v31 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v28 + 104))(v31 + v30, *MEMORY[0x263F454D0], v27);
  }
  else
  {
    *(_OWORD *)(v31 + 16) = xmmword_241CEB720;
    unint64_t v33 = v31 + v30;
    uint64_t v34 = *(void (**)(unint64_t, void, uint64_t))(v28 + 104);
    v34(v33, *MEMORY[0x263F45520], v27);
    v34(v33 + v29, *MEMORY[0x263F45538], v27);
  }
  id v32 = v25;
  sub_241C5D74C(v31);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v35 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v35);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, *MEMORY[0x263F45690], v53);
  uint64_t v36 = v54;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241AE9058(&qword_26B034D68, MEMORY[0x263F44B38]);
  uint64_t v37 = v49;
  uint64_t v38 = v47;
  uint64_t v39 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v58);
  sub_241A31190((uint64_t)v60);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v37);
  v60[0] = v39;
  sub_241ABD780();
  sub_241A358B8(0, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_241AE9058(&qword_26B032768, (void (*)(uint64_t))sub_241ABD780);
  uint64_t v40 = v50;
  sub_241CDA710();
  swift_release();
  sub_241AE9058(&qword_26B0323D0, (void (*)(uint64_t))sub_241ABD6A4);
  uint64_t v41 = v56;
  uint64_t v42 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v41);
  return v42;
}

char *sub_241AE9B78(unint64_t a1)
{
  type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v2 = (void *)sub_241CD7770();
  sub_241A313AC(0, (unint64_t *)&qword_26B030398);
  uint64_t v3 = (void *)MEMORY[0x245636A00]((id)*MEMORY[0x263F09BE0]);
  sub_241A313AC(0, (unint64_t *)&qword_26B038E58);
  char v4 = sub_241CDBB60();

  if ((v4 & 1) == 0) {
    goto LABEL_9;
  }
  id v5 = objc_msgSend((id)a1, sel_statistics);
  sub_241A313AC(0, (unint64_t *)&qword_26B038E68);
  a1 = sub_241CDB2C0();

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (char *)sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (!v6) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v6 = *(char **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v6) {
      goto LABEL_18;
    }
  }
  uint64_t result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((a1 & 0xC000000000000001) != 0) {
    goto LABEL_22;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0) {
    goto LABEL_24;
  }
  if ((unint64_t)result < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    uint64_t v10 = (char *)*(id *)(a1 + 8 * (void)result + 32);
LABEL_17:
    uint64_t v6 = v10;
    goto LABEL_18;
  }
  __break(1u);
LABEL_9:
  uint64_t v8 = (void *)sub_241CD6C60();
  uint64_t v6 = (char *)objc_msgSend((id)a1, sel_statisticsForDate_, v8);

  if (v6) {
    return v6;
  }
  id v9 = objc_msgSend((id)a1, sel_statistics);
  sub_241A313AC(0, (unint64_t *)&qword_26B038E68);
  a1 = sub_241CDB2C0();

  if (!(a1 >> 62))
  {
    uint64_t v6 = *(char **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_12;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return v6;
  }
LABEL_25:
  swift_bridgeObjectRetain();
  uint64_t v6 = (char *)sub_241CDBF50();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_18;
  }
LABEL_12:
  uint64_t result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_22:
    uint64_t v10 = (char *)MEMORY[0x245637160](result, a1);
    goto LABEL_17;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((unint64_t)result < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_16;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t *sub_241AE9E08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = *v3;
  uint64_t v32 = sub_241CD7650();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_241CD7690();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  id v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a2;
  id v29 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v11 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v37 = inited;
  sub_241CDB2E0();
  uint64_t v12 = *(int *)(v11 + 36);
  uint64_t v36 = a1;
  char v13 = *(unsigned char *)(a1 + v12);
  sub_241AEBE64(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_241CD73B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  if (v13)
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v18 + v17, *MEMORY[0x263F454D0], v14);
  }
  else
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB720;
    unint64_t v20 = v18 + v17;
    uint64_t v21 = *(void (**)(unint64_t, void, uint64_t))(v15 + 104);
    v21(v20, *MEMORY[0x263F45520], v14);
    v21(v20 + v16, *MEMORY[0x263F45538], v14);
  }
  id v19 = v29;
  sub_241C5D74C(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v22 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v7, *MEMORY[0x263F45690], v32);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries48BalanceCurrentValueSummarySharableModelGenerator_domain, v9, v33);
  uint64_t v23 = sub_241AEF790(&qword_268D42A08, (void (*)(uint64_t))type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  uint64_t v26 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v35, v36, v34, v23);
  uint64_t v27 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v25, v27);
  sub_241A32A6C(v24, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
  v3[2] = v26;
  return v3;
}

uint64_t sub_241AEA2C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 16);
  uint64_t v5 = sub_241CD70F0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (v4)
  {
    uint64_t v10 = *(void *)(v5 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a2, v3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v5);
    uint64_t v6 = v10;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);

  return v8(a2, v7, 1, v5);
}

uint64_t sub_241AEA3A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_241AECDCC(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AEF3E4(a1, (uint64_t)v6, (uint64_t (*)(void))sub_241AECDCC);
  uint64_t v7 = sub_241CD70F0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_241A32A6C((uint64_t)v6, (uint64_t (*)(void))sub_241AECDCC);
    uint64_t v9 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
    uint64_t v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, v7);
}

id sub_241AEA4FC(uint64_t a1)
{
  uint64_t v2 = sub_241CDAF60();
  uint64_t v77 = *(void *)(v2 - 8);
  uint64_t v78 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD70F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v82 = (char *)v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v72 - v10;
  MEMORY[0x270FA5388](v9);
  char v13 = (char *)v72 - v12;
  sub_241A5D1DC();
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v80 = (char *)v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v83 = (uint64_t)v72 - v17;
  sub_241A72428(0);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v79 = (char *)v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)v72 - v21;
  uint64_t v23 = sub_241CDA1A0();
  uint64_t v84 = *(void *)(v23 - 8);
  uint64_t v85 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)v72 - v27;
  sub_241AEBEC8(0);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v31 = (char *)v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AEF3E4(a1, (uint64_t)v31, (uint64_t (*)(void))sub_241AEBEC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v31, 1, v5) == 1)
  {
    sub_241CDA0D0();
    uint64_t v32 = sub_241CDA190();
    os_log_type_t v33 = sub_241CDB670();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(void *)&v87[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v36 = sub_241CDC270();
      uint64_t v86 = sub_241A33FE4(v36, v37, (uint64_t *)v87);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v32, v33, "[%s] query received no data", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v35, -1, -1);
      MEMORY[0x245637F20](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v84 + 8))(v28, v85);
    uint64_t v38 = v83;
    uint64_t v39 = (uint64_t)v79;
    sub_241CD7A80();
    uint64_t v40 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v22, 0, 1, v40);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v41 = sub_241CD9970();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v38, 1, 1, v41);
    sub_241AEF3E4((uint64_t)v22, v39, (uint64_t (*)(void))sub_241A72428);
    id v42 = sub_241A53EB0(0, 0xF000000000000000, 11, v38, v39, 0, 0);
    sub_241A32A6C((uint64_t)v22, (uint64_t (*)(void))sub_241A72428);
    return v42;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v31, v5);
  sub_241CDA0D0();
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v43(v11, v13, v5);
  uint64_t v44 = sub_241CDA190();
  os_log_type_t v45 = sub_241CDB670();
  int v46 = v45;
  BOOL v47 = os_log_type_enabled(v44, v45);
  uint64_t v76 = v6;
  if (v47)
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v79 = v13;
    uint64_t v49 = v48;
    uint64_t v75 = swift_slowAlloc();
    *(void *)&v87[0] = v75;
    *(_DWORD *)uint64_t v49 = 136315394;
    os_log_t v74 = v44;
    uint64_t v50 = sub_241CDC270();
    uint64_t v81 = v43;
    uint64_t v86 = sub_241A33FE4(v50, v51, (uint64_t *)v87);
    int v73 = v46;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    v72[1] = v49 + 14;
    sub_241CD7090();
    sub_241AEF790(qword_26B0350A0, MEMORY[0x263F090E8]);
    uint64_t v52 = v78;
    uint64_t v53 = sub_241CDC0D0();
    unint64_t v55 = v54;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v4, v52);
    uint64_t v86 = sub_241A33FE4(v53, v55, (uint64_t *)v87);
    sub_241CDBBF0();
    uint64_t v43 = v81;
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v76 + 8);
    v56(v11, v5);
    os_log_t v57 = v74;
    _os_log_impl(&dword_241A23000, v74, (os_log_type_t)v73, "[%s] encoding summary with morning index: %s", (uint8_t *)v49, 0x16u);
    uint64_t v58 = v75;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v58, -1, -1);
    uint64_t v59 = v49;
    char v13 = v79;
    MEMORY[0x245637F20](v59, -1, -1);
  }
  else
  {
    uint64_t v56 = *(void (**)(char *, uint64_t))(v6 + 8);
    v56(v11, v5);
  }
  (*(void (**)(char *, uint64_t))(v84 + 8))(v26, v85);
  uint64_t v60 = v82;
  sub_241A313AC(0, &qword_26B036908);
  v43(v60, v13, v5);
  os_log_type_t v61 = (void *)sub_241A49124(v60);
  uint64_t v62 = (uint64_t)v80;
  sub_241CD9A90();
  uint64_t v63 = *MEMORY[0x263F46C50];
  uint64_t v64 = sub_241CD9970();
  uint64_t v65 = *(void *)(v64 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 104))(v62, v63, v64);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  id result = objc_msgSend(v61, sel_data);
  if (result)
  {
    uint64_t v67 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v68 = sub_241CD6AE0();
    unint64_t v70 = v69;

    uint64_t v71 = v83;
    sub_241AEF3E4(v62, v83, (uint64_t (*)(void))sub_241A5D1DC);
    uint64_t v88 = 0;
    memset(v87, 0, sizeof(v87));
    id v42 = sub_241A54648(v68, v70, 4, v71, 0, 0, (uint64_t)v87);
    sub_241A37374(v68, v70);

    sub_241A32A6C(v62, (uint64_t (*)(void))sub_241A5D1DC);
    v56(v13, v5);
    return v42;
  }
  __break(1u);
  return result;
}

uint64_t sub_241AEAEDC()
{
  sub_241A68508(0);
  uint64_t v1 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v49 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AEBE64(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v4 = v3;
  uint64_t v48 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v47 = (char *)&v36 - v5;
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD6D00();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v44 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v43 = (char *)&v36 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v36 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v36 - v18;
  sub_241CD6CF0();
  sub_241CDA0D0();
  id v42 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v42(v17, v19, v9);
  uint64_t v20 = sub_241CDA190();
  os_log_type_t v21 = sub_241CDB670();
  int v40 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v38 = v4;
    uint64_t v23 = v22;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v51 = v37;
    *(_DWORD *)uint64_t v23 = 136446466;
    os_log_t v36 = v20;
    uint64_t v24 = sub_241CDC270();
    uint64_t v39 = v1;
    uint64_t v50 = sub_241A33FE4(v24, v25, &v51);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    sub_241AEF790(&qword_26B02E8E0, MEMORY[0x263F07490]);
    uint64_t v26 = sub_241CDC0D0();
    uint64_t v50 = sub_241A33FE4(v26, v27, &v51);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void (**)(char *, uint64_t))(v10 + 8);
    v41(v17, v9);
    uint64_t v20 = v36;
    _os_log_impl(&dword_241A23000, v36, (os_log_type_t)v40, "[%{public}s] updating snippet with date: %{public}s", (uint8_t *)v23, 0x16u);
    uint64_t v28 = v37;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v28, -1, -1);
    uint64_t v29 = v23;
    uint64_t v4 = v38;
    MEMORY[0x245637F20](v29, -1, -1);
  }
  else
  {
    uint64_t v41 = *(void (**)(char *, uint64_t))(v10 + 8);
    v41(v17, v9);
  }

  (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v46);
  uint64_t v30 = v42;
  v42(v43, v19, v9);
  v30(v44, v19, v9);
  uint64_t v31 = v49;
  sub_241CD67C0();
  uint64_t v32 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
  os_log_type_t v33 = v47;
  sub_241CDA5D0();
  sub_241AED0C0();
  uint64_t v34 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v4);
  v41(v19, v9);
  return v34;
}

uint64_t sub_241AEB480()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries48BalanceCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241AEB528()
{
  return type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_268D429A8);
}

uint64_t sub_241AEB55C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries48BalanceCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

_UNKNOWN **sub_241AEB5D4()
{
  return &off_26F5C2330;
}

uint64_t sub_241AEB5E0(uint64_t a1)
{
  uint64_t result = sub_241AEF790(&qword_268D42230, (void (*)(uint64_t))type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241AEB638@<X0>(uint64_t a1@<X8>)
{
  return sub_241AEF3E4(v1, a1, (uint64_t (*)(void))sub_241A68508);
}

_UNKNOWN **sub_241AEB66C()
{
  return &off_26F5C2378;
}

uint64_t sub_241AEB678(uint64_t a1)
{
  uint64_t result = sub_241AEF790(&qword_268D429B8, (void (*)(uint64_t))type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241AEB6D0()
{
  return &off_26F5C2390;
}

uint64_t sub_241AEB6DC(uint64_t a1)
{
  uint64_t result = sub_241AEF790(&qword_268D429C0, (void (*)(uint64_t))type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241AEB734(uint64_t a1, void *a2, char a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v54 = a4;
  sub_241AEBE64(0, &qword_268D42A38, (uint64_t (*)(uint64_t))sub_241AEF7D8, MEMORY[0x263F449C8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (uint64_t *)((char *)&v49 - v13);
  uint64_t v15 = sub_241CDA1A0();
  uint64_t v56 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v49 - v19;
  if (a3)
  {
    uint64_t v54 = v12;
    uint64_t v31 = a2;
    sub_241CDA0D0();
    uint64_t v32 = a2;
    os_log_type_t v33 = a2;
    uint64_t v34 = sub_241CDA190();
    os_log_type_t v35 = sub_241CDB650();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      os_log_t v50 = v34;
      uint64_t v37 = v36;
      uint64_t v38 = (void *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      uint64_t v58 = v51;
      *(_DWORD *)uint64_t v37 = 136446466;
      uint64_t v52 = a5;
      _s30SleepSampleDaySummaryPublisherVMa(0);
      uint64_t v39 = sub_241CDC270();
      uint64_t v53 = v11;
      uint64_t v57 = sub_241A33FE4(v39, v40, &v58);
      uint64_t v55 = v15;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2114;
      uint64_t v41 = a2;
      uint64_t v42 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v57 = v42;
      uint64_t v11 = v53;
      sub_241CDBBF0();
      *uint64_t v38 = v42;
      a5 = v52;
      sub_241A96038(a2, 1);
      sub_241A96038(a2, 1);
      os_log_t v43 = v50;
      _os_log_impl(&dword_241A23000, v50, v35, "[%{public}s] query failed with error: %{public}@", (uint8_t *)v37, 0x16u);
      sub_241A96044();
      swift_arrayDestroy();
      MEMORY[0x245637F20](v38, -1, -1);
      uint64_t v44 = v51;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v44, -1, -1);
      MEMORY[0x245637F20](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v55);
    }
    else
    {
      sub_241A96038(a2, 1);
      sub_241A96038(a2, 1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v15);
    }
    void *v14 = a2;
    uint64_t v12 = v54;
    (*(void (**)(void *, void, uint64_t))(v54 + 104))(v14, *MEMORY[0x263F449B8], v11);
    BOOL v47 = a2;
    a5(v14);
    sub_241A96038(a2, 1);
  }
  else
  {
    uint64_t v55 = v15;
    uint64_t v51 = a6;
    swift_bridgeObjectRetain();
    sub_241CDA0D0();
    swift_bridgeObjectRetain_n();
    os_log_type_t v21 = sub_241CDA190();
    os_log_type_t v22 = sub_241CDB670();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v53 = v11;
      uint64_t v25 = v24;
      uint64_t v58 = v24;
      *(_DWORD *)uint64_t v23 = 136446466;
      _s30SleepSampleDaySummaryPublisherVMa(0);
      uint64_t v26 = sub_241CDC270();
      uint64_t v52 = a5;
      uint64_t v57 = sub_241A33FE4(v26, v27, &v58);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v57 = a2[2];
      uint64_t v28 = sub_241CDC0D0();
      uint64_t v57 = sub_241A33FE4(v28, v29, &v58);
      a5 = v52;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A96038(a2, 0);
      sub_241A96038(a2, 0);
      _os_log_impl(&dword_241A23000, v21, v22, "[%{public}s] query found %s summarie(s).", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      uint64_t v30 = v25;
      uint64_t v11 = v53;
      MEMORY[0x245637F20](v30, -1, -1);
      MEMORY[0x245637F20](v23, -1, -1);
    }
    else
    {
      sub_241A96038(a2, 0);
      sub_241A96038(a2, 0);
    }

    (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v55);
    int v45 = *(unsigned __int8 *)(v54 + *(int *)(_s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0) + 24));
    void *v14 = a2;
    if (v45 == 1) {
      uint64_t v46 = (unsigned int *)MEMORY[0x263F449C0];
    }
    else {
      uint64_t v46 = (unsigned int *)MEMORY[0x263F449B0];
    }
    (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *v46, v11);
    a5(v14);
  }
  return (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_241AEBD8C@<X0>(uint64_t a1@<X8>)
{
  return sub_241AEF3E4(v1, a1, _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa);
}

id sub_241AEBDC0(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_241AEBDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_241AEF790(&qword_268D42A30, (void (*)(uint64_t))_s30SleepSampleDaySummaryPublisherVMa);

  return MEMORY[0x270F34FF8](a1, a4, a2, v8, a3);
}

void sub_241AEBE64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241AEBEC8(uint64_t a1)
{
}

uint64_t sub_241AEBEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v97 = a3;
  uint64_t v110 = a2;
  uint64_t v104 = sub_241CD7650();
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v102 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241CD7690();
  uint64_t v106 = *(void *)(v4 - 8);
  uint64_t v107 = v4;
  MEMORY[0x270FA5388](v4);
  char v105 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A55554();
  uint64_t v108 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v89 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v85 = (char *)&v79 - v9;
  sub_241A95E5C();
  uint64_t v86 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v87 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  MEMORY[0x270FA5388](v90);
  uint64_t v91 = (uint64_t)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = _s30SleepSampleDaySummaryPublisherVMa(0);
  MEMORY[0x270FA5388](v96);
  uint64_t v94 = (uint64_t)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AECE34(0, &qword_268D429D0, (void (*)(uint64_t))_s30SleepSampleDaySummaryPublisherVMa, sub_241AECDCC, (void (*)(void))sub_241AECE00);
  uint64_t v95 = v14;
  uint64_t v93 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v92 = (char *)&v79 - v15;
  sub_241AECE34(0, &qword_268D429E0, (void (*)(uint64_t))sub_241AECEC4, sub_241AEBEC8, (void (*)(void))sub_241AECF34);
  uint64_t v101 = v16;
  uint64_t v100 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v99 = (char *)&v79 - v17;
  uint64_t v18 = sub_241CD6D00();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v19 = sub_241CDAF60();
  uint64_t v112 = *(void *)(v19 - 8);
  uint64_t v113 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  id v111 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v79 - v22;
  uint64_t v24 = sub_241CD6DE0();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  unint64_t v27 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_241CD6EE0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v79 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v79 - v33;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, *MEMORY[0x263F07740], v24);
  sub_241CD6DF0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  sub_241CD67E0();
  uint64_t v98 = v29;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  uint64_t v35 = v29 + 16;
  v36(v32, v34, v28);
  sub_241CDAF30();
  sub_241CD67B0();
  uint64_t v109 = v34;
  uint64_t v88 = v28;
  uint64_t v84 = (void (*)(uint64_t, char *, uint64_t))v36;
  v36(v32, v34, v28);
  uint64_t v37 = v111;
  sub_241CDAF30();
  sub_241CD76B0();
  sub_241A311E0(v116, v116[3]);
  uint64_t v38 = sub_241CD75B0();
  sub_241AECD58();
  uint64_t result = sub_241CDB030();
  if (result)
  {
    unint64_t v40 = v108;
    uint64_t v41 = v85;
    uint64_t v42 = &v85[v108[12]];
    uint64_t v82 = v38;
    uint64_t v43 = v112;
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
    uint64_t v83 = v23;
    uint64_t v45 = v113;
    v44(v85, v23, v113);
    uint64_t v80 = v42;
    v44(v42, v37, v45);
    uint64_t v46 = v89;
    BOOL v47 = &v89[v40[12]];
    v44(v89, v41, v45);
    v44(v47, v42, v45);
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
    uint64_t v81 = v35;
    uint64_t v49 = (uint64_t)v87;
    v48(v87, v46, v45);
    os_log_t v50 = *(void (**)(char *, uint64_t))(v43 + 8);
    v50(v47, v45);
    uint64_t v51 = &v46[v108[12]];
    v48(v46, v41, v45);
    v48(v51, v80, v45);
    v48((char *)(v49 + *(int *)(v86 + 36)), v51, v45);
    uint64_t v112 = v43 + 8;
    uint64_t v108 = (int *)v50;
    v50(v46, v45);
    uint64_t v52 = v91;
    sub_241AEF5BC(v49, v91, (uint64_t (*)(void))sub_241A95E5C);
    uint64_t v53 = v90;
    uint64_t v54 = v88;
    v84(v52 + *(int *)(v90 + 20), v109, v88);
    sub_241CD76C0();
    *(unsigned char *)(v52 + *(int *)(v53 + 24)) = sub_241CD7CA0() & 1;
    uint64_t v55 = v94;
    sub_241AEF3E4(v52, v94, _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa);
    *(void *)(v55 + *(int *)(v96 + 20)) = v82;
    sub_241A32A6C(v52, _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa);
    sub_241A31190((uint64_t)v116);
    sub_241AECDCC(0);
    sub_241AECE00();
    uint64_t v56 = v92;
    sub_241CDA710();
    sub_241A32A6C(v55, _s30SleepSampleDaySummaryPublisherVMa);
    sub_241AECF68();
    uint64_t v57 = v95;
    uint64_t v58 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v56, v57);
    uint64_t v115 = v58;
    sub_241CD7730();
    uint64_t v59 = (void *)sub_241CD76E0();
    sub_241A33460();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241CEB710;
    uint64_t v61 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
    uint64_t v62 = v97;
    *(void *)(inited + 32) = sub_241CD7770();
    uint64_t v114 = inited;
    sub_241CDB2E0();
    LOBYTE(v41) = *(unsigned char *)(v62 + *(int *)(v61 + 36));
    sub_241AEBE64(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
    uint64_t v63 = sub_241CD73B0();
    uint64_t v64 = *(void *)(v63 - 8);
    uint64_t v65 = *(void *)(v64 + 72);
    unint64_t v66 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    uint64_t v67 = swift_allocObject();
    if (v41)
    {
      *(_OWORD *)(v67 + 16) = xmmword_241CEB730;
      (*(void (**)(unint64_t, void, uint64_t))(v64 + 104))(v67 + v66, *MEMORY[0x263F454D0], v63);
    }
    else
    {
      *(_OWORD *)(v67 + 16) = xmmword_241CEB720;
      unint64_t v69 = v67 + v66;
      unint64_t v70 = *(void (**)(unint64_t, void, uint64_t))(v64 + 104);
      v70(v69, *MEMORY[0x263F45520], v63);
      v70(v69 + v65, *MEMORY[0x263F45538], v63);
    }
    id v68 = v59;
    sub_241C5D74C(v67);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    unint64_t v71 = swift_bridgeObjectRetain();
    sub_241C5D7A0(v71);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v103 + 104))(v102, *MEMORY[0x263F45690], v104);
    uint64_t v72 = v105;
    sub_241CD7680();

    swift_bridgeObjectRelease();
    sub_241AECEC4();
    sub_241AECF34();
    uint64_t v73 = sub_241CDA680();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v72, v107);
    sub_241A31190((uint64_t)v116);
    swift_release();
    v116[0] = v73;
    sub_241AEBEC8(0);
    os_log_t v74 = v99;
    sub_241CDA710();
    swift_release();
    sub_241AED024();
    uint64_t v75 = v101;
    uint64_t v76 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v74, v75);
    uint64_t v77 = v113;
    uint64_t v78 = (void (*)(char *, uint64_t))v108;
    ((void (*)(char *, uint64_t))v108)(v111, v113);
    v78(v83, v77);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v109, v54);
    return v76;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241AECD58()
{
  return sub_241AEF790(&qword_26B0356B8, MEMORY[0x263F090E8]);
}

uint64_t _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_268D42A20);
}

uint64_t _s30SleepSampleDaySummaryPublisherVMa(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_268D42A10);
}

void sub_241AECDCC(uint64_t a1)
{
}

uint64_t sub_241AECE00()
{
  return sub_241AEF790(&qword_268D429D8, (void (*)(uint64_t))_s30SleepSampleDaySummaryPublisherVMa);
}

void sub_241AECE34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_241CDA3E0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241AECEC4()
{
  if (!qword_268D429E8)
  {
    sub_241AECDCC(255);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D429E8);
    }
  }
}

uint64_t sub_241AECF34()
{
  return sub_241AEF790(&qword_268D429F0, (void (*)(uint64_t))sub_241AECEC4);
}

unint64_t sub_241AECF68()
{
  unint64_t result = qword_268D429F8;
  if (!qword_268D429F8)
  {
    sub_241AECE34(255, &qword_268D429D0, (void (*)(uint64_t))_s30SleepSampleDaySummaryPublisherVMa, sub_241AECDCC, (void (*)(void))sub_241AECE00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D429F8);
  }
  return result;
}

uint64_t type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B031EC8);
}

unint64_t sub_241AED024()
{
  unint64_t result = qword_268D42A00;
  if (!qword_268D42A00)
  {
    sub_241AECE34(255, &qword_268D429E0, (void (*)(uint64_t))sub_241AECEC4, sub_241AEBEC8, (void (*)(void))sub_241AECF34);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42A00);
  }
  return result;
}

unint64_t sub_241AED0C0()
{
  unint64_t result = qword_26B038988;
  if (!qword_26B038988)
  {
    sub_241AEBE64(255, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B038988);
  }
  return result;
}

void *sub_241AED148(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CDAF60();
    unint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    sub_241A95E5C();
    v8((void *)((char *)a1 + *(int *)(v9 + 36)), (void *)((char *)a2 + *(int *)(v9 + 36)), v7);
    uint64_t v10 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_241CD6EE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    *((unsigned char *)a1 + *(int *)(v10 + 24)) = *((unsigned char *)a2 + *(int *)(v10 + 24));
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = *(void **)((char *)a2 + v15);
    *(void *)((char *)a1 + v15) = v16;
    id v17 = v16;
  }
  return a1;
}

void sub_241AED2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDAF60();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  sub_241A95E5C();
  v5(a1 + *(int *)(v6 + 36), v4);
  uint64_t v7 = a1 + *(int *)(_s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0) + 20);
  uint64_t v8 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_241AED398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241CDAF60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  sub_241A95E5C();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  *(unsigned char *)(a1 + *(int *)(v9 + 24)) = *(unsigned char *)(a2 + *(int *)(v9 + 24));
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v15;
  id v16 = v15;
  return a1;
}

uint64_t sub_241AED4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241CDAF60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  sub_241A95E5C();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(unsigned char *)(a1 + *(int *)(v9 + 24)) = *(unsigned char *)(a2 + *(int *)(v9 + 24));
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = *(void **)(a2 + v14);
  id v16 = *(void **)(a1 + v14);
  *(void *)(a1 + v14) = v15;
  id v17 = v15;

  return a1;
}

uint64_t sub_241AED5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241CDAF60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  sub_241A95E5C();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(unsigned char *)(a1 + *(int *)(v9 + 24)) = *(unsigned char *)(a2 + *(int *)(v9 + 24));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_241AED6CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241CDAF60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  sub_241A95E5C();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  *(unsigned char *)(a1 + *(int *)(v9 + 24)) = *(unsigned char *)(a2 + *(int *)(v9 + 24));
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = *(void **)(a1 + v14);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);

  return a1;
}

uint64_t sub_241AED7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241AED7F4);
}

uint64_t sub_241AED7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_241AED8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241AED8C8);
}

uint64_t sub_241AED8C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_241AED984()
{
  uint64_t result = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_241AEDA1C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CDAF60();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    sub_241A95E5C();
    v8((void *)((char *)a1 + *(int *)(v9 + 36)), (void *)((char *)a2 + *(int *)(v9 + 36)), v7);
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_241CD6EE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_241AEDB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDAF60();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  sub_241A95E5C();
  v5(a1 + *(int *)(v6 + 36), v4);
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_241CD6EE0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_241AEDC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241CDAF60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  sub_241A95E5C();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_241AEDD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241CDAF60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  sub_241A95E5C();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_241AEDE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241CDAF60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  sub_241A95E5C();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_241AEDF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241CDAF60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  sub_241A95E5C();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_241AEE00C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241AEE020);
}

uint64_t sub_241AEE020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241A95E5C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_241CD6EE0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_241AEE144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241AEE158);
}

uint64_t sub_241AEE158(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_241A95E5C();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_241CD6EE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_241AEE268()
{
  sub_241A95E5C();
  if (v0 <= 0x3F)
  {
    sub_241CD6EE0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_241AEE338(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD6810();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_241A68508(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    id v16 = (uint64_t *)((char *)a1 + v15);
    id v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = *(void **)((char *)a2 + v19);
    *(uint64_t *)((char *)a1 + v19) = (uint64_t)v21;
    *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
    swift_bridgeObjectRetain();
    id v22 = v21;
  }
  return a1;
}

void sub_241AEE520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(a1 + *(int *)(a2 + 32));
}

char *sub_241AEE63C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A68508(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = *(void **)&a2[v17];
  *(void *)&a1[v17] = v19;
  a1[v18] = a2[v18];
  swift_bridgeObjectRetain();
  id v20 = v19;
  return a1;
}

char *sub_241AEE7D4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A68508(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  a1[a3[6]] = a2[a3[6]];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  id v20 = *(void **)&a2[v19];
  uint64_t v21 = *(void **)&a1[v19];
  *(void *)&a1[v19] = v20;
  id v22 = v20;

  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_241AEE9F4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A68508(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  a1[v14] = a2[v14];
  return a1;
}

char *sub_241AEEB7C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A68508(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  id v22 = *(void **)&a1[v21];
  *(void *)&a1[v21] = *(void *)&a2[v21];

  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t sub_241AEED84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241AEED98);
}

uint64_t sub_241AEED98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241A68508(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD77C0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_241AEEEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241AEEEC4);
}

uint64_t sub_241AEEEC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_241A68508(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_241CD77C0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_241AEEFD8()
{
  sub_241A68508(319);
  if (v0 <= 0x3F)
  {
    sub_241CD77C0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_241AEF0C8()
{
  return MEMORY[0x263F8E4E0];
}

id sub_241AEF0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v5 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = sub_241CD6EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A95E5C();
  MEMORY[0x270FA5388](v13 - 8);
  sub_241AEF3E4(a1, (uint64_t)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_241A95E5C);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1 + *(int *)(v6 + 28), v9);
  sub_241AEF3E4(a1, (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa);
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = swift_allocObject();
  sub_241AEF5BC((uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa);
  uint64_t v17 = (void *)(v16 + ((v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v17 = v24;
  v17[1] = a3;
  sub_241AEF6DC(0, (unint64_t *)&qword_26B035068, MEMORY[0x263F42D70], sub_241AEF75C, MEMORY[0x263F42E08]);
  id v19 = objc_allocWithZone(v18);
  swift_retain();
  id v20 = (id)sub_241CD7100();
  uint64_t v21 = (void *)sub_241CDB090();
  objc_msgSend(v20, sel_setDebugIdentifier_, v21);

  return v20;
}

uint64_t sub_241AEF3E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241AEF44C()
{
  unint64_t v1 = (int *)(_s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_241CDAF60();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  sub_241A95E5C();
  v8(v6 + *(int *)(v9 + 36), v7);
  uint64_t v10 = v6 + v1[7];
  uint64_t v11 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_241AEF5BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241AEF624(uint64_t a1, void *a2, char a3)
{
  char v6 = a3 & 1;
  uint64_t v7 = *(void *)(_s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v3 + v8;
  uint64_t v10 = v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void (**)(void))v10;
  uint64_t v12 = *(void *)(v10 + 8);

  return sub_241AEB734(a1, a2, v6, v9, v11, v12);
}

void sub_241AEF6DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_241AEF75C()
{
  return sub_241AEF790(&qword_26B035060, MEMORY[0x263F42D70]);
}

uint64_t sub_241AEF790(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241AEF7D8(uint64_t a1)
{
}

uint64_t sub_241AEF80C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_241CD6D00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(a1, sel_endDate);
  sub_241CD6CB0();

  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v4;
  v13[3] = a3;
  v13[4] = a4;
  swift_retain();
  swift_retain();
  sub_241AEFB48((uint64_t)v11, (uint64_t)sub_241AF1118, (uint64_t)v13);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_241AEF960(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  uint64_t v5 = type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (void **)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241AF1144();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (void **)&v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241AF11B4(a1, (uint64_t)v10, (uint64_t (*)(void))sub_241AF1144);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v11 = *v10;
    id v12 = v11;
    a3(v11, 1);
  }
  else
  {
    sub_241AF121C((uint64_t)v10, (uint64_t)v7, type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup);
    uint64_t v13 = sub_241AF03C4(v7);
    uint64_t v14 = v13;
    a3(v13, 0);

    sub_241AF1284((uint64_t)v7, type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup);
  }
}

void sub_241AEFB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v4 = sub_241CD6D00();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = self;
  uint64_t v8 = (void *)*MEMORY[0x263F09AD0];
  sub_241A31064(0, &qword_26B034FE8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_241CEB730;
  *(void *)(v9 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v9 + 32) = 0;
  id v10 = v8;
  unint64_t v11 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v7, sel_predicateForObjectsWithMetadataKey_allowedValues_, v10, v11);

  id v13 = objc_msgSend(v7, sel_predicateForObjectsWithMetadataKey_, v10);
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_notPredicateWithSubpredicate_, v13);

  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_241CEDF90;
  *(void *)(v16 + 32) = v12;
  *(void *)(v16 + 40) = v15;
  uint64_t v30 = v16;
  sub_241CDB2E0();
  sub_241A313AC(0, (unint64_t *)&qword_26B030370);
  id v26 = v12;
  id v17 = v15;
  Class v18 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v14, sel_orPredicateWithSubpredicates_, v18);

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v20 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v21 + v20, (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  id v22 = (void *)(v21 + ((v6 + v20 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v23 = v29;
  void *v22 = v28;
  v22[1] = v23;
  id v24 = v19;
  swift_retain();
  swift_retain();
  sub_241BBF554(a1, v19, (void (*)(void, void))sub_241AF14FC, v21);
  swift_release();
}

void sub_241AEFEA4(void *a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  sub_241AF1144();
  MEMORY[0x270FA5388](v10);
  id v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_241CD6D00();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  if (a2)
  {
    *id v12 = a1;
    swift_storeEnumTagMultiPayload();
    id v29 = a1;
    v33(v12);
    sub_241AF1284((uint64_t)v12, (uint64_t (*)(void))sub_241AF1144);
  }
  else
  {
    uint64_t v16 = self;
    uint64_t v31 = a6;
    id v17 = (void *)*MEMORY[0x263F09AD0];
    sub_241A31064(0, &qword_26B034FE8);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB730;
    *(void *)(v18 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v18 + 32) = 1;
    sub_241AF1514(a1);
    id v19 = v17;
    uint64_t v20 = sub_241CDB2A0();
    uint64_t v30 = a3;
    uint64_t v21 = (void *)v20;
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(v16, sel_predicateForObjectsWithMetadataKey_allowedValues_, v19, v21);

    uint64_t v23 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v13);
    unint64_t v24 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v25 + v24, (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
    id v26 = (void *)(v25 + ((v15 + v24 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v27 = v31;
    *id v26 = v33;
    v26[1] = v27;
    sub_241AF1514(a1);
    id v28 = v22;
    swift_retain();
    sub_241BBF554(v23, v22, (void (*)(void, void))sub_241AF160C, v25);

    sub_241A960B8(a1);
    swift_release();
  }
}

uint64_t sub_241AF01C4(void *a1, char a2, void *a3, uint64_t a4, void (*a5)(void *))
{
  sub_241AF1144();
  MEMORY[0x270FA5388](v10);
  id v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    *id v12 = a1;
    swift_storeEnumTagMultiPayload();
    id v22 = a1;
    a5(v12);
    uint64_t v20 = (uint64_t (*)(void))sub_241AF1144;
    uint64_t v21 = (uint64_t)v12;
  }
  else
  {
    id v17 = (char *)v16 + *(int *)(v14 + 24);
    uint64_t v18 = sub_241CD6D00();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a4, v18);
    void *v16 = a3;
    v16[1] = a1;
    sub_241AF11B4((uint64_t)v16, (uint64_t)v12, type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup);
    swift_storeEnumTagMultiPayload();
    sub_241AF1514(a1);
    id v19 = a3;
    a5(v12);
    sub_241AF1284((uint64_t)v12, (uint64_t (*)(void))sub_241AF1144);
    uint64_t v20 = type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup;
    uint64_t v21 = (uint64_t)v16;
  }
  return sub_241AF1284(v21, v20);
}

char *sub_241AF03C4(void **a1)
{
  sub_241A5D1DC();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v22 - v8;
  uint64_t v10 = sub_241AF0634(a1);
  if (v2) {
    return v1;
  }
  uint64_t v11 = v10;
  id v12 = &v1[qword_26B0411F0];
  uint64_t v13 = sub_241CD9D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v12, v13);
  uint64_t v14 = *MEMORY[0x263F46C70];
  uint64_t v15 = sub_241CD9970();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v9, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
  uint64_t result = (char *)objc_msgSend(v11, sel_data);
  if (result)
  {
    uint64_t v18 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v19 = sub_241CD6AE0();
    unint64_t v21 = v20;

    sub_241AF11B4((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))sub_241A5D1DC);
    uint64_t v23 = 0;
    memset(v22, 0, sizeof(v22));
    unint64_t v1 = (char *)sub_241A54648(v19, v21, 21, (uint64_t)v7, 0, 0, (uint64_t)v22);
    sub_241A37374(v19, v21);

    sub_241AF1284((uint64_t)v9, (uint64_t (*)(void))sub_241A5D1DC);
    return v1;
  }
  __break(1u);
  return result;
}

char *sub_241AF0634(void **a1)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v57 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD6D00();
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v52 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v52 - v14;
  uint64_t v16 = sub_241AF12E4(*a1);
  if (v1) {
    return v2;
  }
  uint64_t v2 = v16;
  uint64_t v53 = v15;
  uint64_t v54 = v10;
  uint64_t v55 = v13;
  uint64_t v56 = (uint8_t *)v7;
  id v17 = v59;
  uint64_t v52 = v4;
  uint64_t v18 = sub_241AF12E4(a1[1]);
  unint64_t v20 = v18;
  if (!v2)
  {
    if (!v18)
    {
      uint64_t v41 = v6;
      sub_241CDA0F0();
      swift_retain_n();
      uint64_t v42 = sub_241CDA190();
      os_log_type_t v43 = sub_241CDB660();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v58 = v45;
        *(_DWORD *)uint64_t v44 = 136315138;
        uint64_t v2 = (char *)(v44 + 12);
        uint64_t v61 = v45;
        uint64_t v56 = v44 + 4;
        id v46 = objc_msgSend(*(id *)&v17[qword_26B041200+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)], sel_identifier);
        uint64_t v47 = sub_241CDB0D0();
        unint64_t v49 = v48;

        uint64_t v60 = sub_241A33FE4(v47, v49, &v61);
        sub_241CDBBF0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v42, v43, "Unexpectedly received no maximum quantities for %s", v44, 0xCu);
        uint64_t v50 = v58;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v50, -1, -1);
        MEMORY[0x245637F20](v44, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v52);
      sub_241AB90B4();
      swift_allocError();
      *uint64_t v51 = 3;
      swift_willThrow();
      return v2;
    }
    unint64_t v21 = v18;
    id v33 = objc_msgSend(v21, sel_codableRepresentation);
    uint64_t v34 = type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(0);
    uint64_t v35 = v58;
    uint64_t v36 = v54;
    uint64_t v37 = v56;
    (*(void (**)(char *, char *, uint8_t *))(v58 + 16))(v54, (char *)a1 + *(int *)(v34 + 24), v56);
    uint64_t result = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F46668]), sel_init);
    if (!result)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v2 = result;
    objc_msgSend(v2, sel_setValue_, v33);
    objc_msgSend(v2, sel_setValueClamped_, 1);
LABEL_16:
    uint64_t v39 = (void *)sub_241CD6C60();
    double v40 = MEMORY[0x245637600]();

    objc_msgSend(v2, sel_setDateData_, v40);
    (*(void (**)(char *, uint8_t *))(v35 + 8))(v36, v37);
    goto LABEL_17;
  }
  if (v18)
  {
    unint64_t v21 = v2;
    id v22 = v20;
    uint64_t v23 = a1;
    id v24 = objc_msgSend(v21, sel_compare_, v22);
    if (v24 == (id)-1) {
      uint64_t v25 = v22;
    }
    else {
      uint64_t v25 = v21;
    }
    uint64_t v59 = v25;
    id v26 = objc_msgSend(v59, sel_codableRepresentation);
    uint64_t v27 = (char *)v23
        + *(int *)(type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(0)
                 + 24);
    uint64_t v28 = v58;
    uint64_t v30 = v55;
    id v29 = v56;
    (*(void (**)(char *, char *, uint8_t *))(v58 + 16))(v55, v27, v56);
    uint64_t result = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F46668]), sel_init);
    if (result)
    {
      uint64_t v2 = result;
      objc_msgSend(v2, sel_setValue_, v26);
      objc_msgSend(v2, sel_setValueClamped_, v24 == (id)-1);
      uint64_t v31 = (void *)sub_241CD6C60();
      double v32 = MEMORY[0x245637600]();

      objc_msgSend(v2, sel_setDateData_, v32);
      (*(void (**)(char *, uint8_t *))(v28 + 8))(v30, v29);

LABEL_17:
      return v2;
    }
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v21 = v2;
  id v33 = objc_msgSend(v21, sel_codableRepresentation);
  uint64_t v38 = type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(0);
  uint64_t v35 = v58;
  uint64_t v36 = v53;
  uint64_t v37 = v56;
  (*(void (**)(char *, char *, uint8_t *))(v58 + 16))(v53, (char *)a1 + *(int *)(v38 + 24), v56);
  uint64_t result = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F46668]), sel_init);
  if (result)
  {
    uint64_t v2 = result;
    objc_msgSend(v2, sel_setValue_, v33);
    objc_msgSend(v2, sel_setValueClamped_, 0);
    goto LABEL_16;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_241AF0CB8(uint64_t a1, char *a2)
{
  uint64_t v21 = a1;
  uint64_t v5 = sub_241CD9ED0();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v5);
  id v22 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD9D00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v21 - v15;
  sub_241AF11B4(a1, (uint64_t)&v21 - v15, type metadata accessor for SummariesFullProfileExecutor.Request);
  id v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v17(v10, (uint64_t)a2, v7);
  v17((char *)(v2 + qword_26B0411F0), (uint64_t)v10, v7);
  sub_241AF11B4((uint64_t)v16, (uint64_t)v14, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v18 = v22;
  sub_241CD9EC0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v10, v7);
  sub_241AF1284((uint64_t)v16, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_241AF121C((uint64_t)v14, v2 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v2 + qword_26B0411F8, v18, v24);
  v19(a2, v7);
  sub_241AF1284(v21, type metadata accessor for SummariesFullProfileExecutor.Request);
  return v2;
}

uint64_t sub_241AF0FA4()
{
  sub_241AF1284(v0 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_26B0411F0;
  uint64_t v4 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B037F18);
}

uint64_t sub_241AF10D8()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241AF1118(uint64_t a1)
{
  sub_241AEF960(a1, *(void *)(v1 + 16), *(void (**)(void *, uint64_t))(v1 + 24));
}

uint64_t type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B037F08);
}

void sub_241AF1144()
{
  if (!qword_26B0380E0)
  {
    type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(255);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDC210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0380E0);
    }
  }
}

uint64_t sub_241AF11B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241AF121C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241AF1284(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_241AF12E4(void *a1)
{
  id v1 = objc_msgSend(a1, sel_statistics);
  sub_241A313AC(0, (unint64_t *)&qword_26B038E68);
  unint64_t v2 = sub_241CDB2C0();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (char *)sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v3 = *(char **)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      id v6 = objc_msgSend(v3, sel_maximumQuantity);

      return (char *)v6;
    }
  }
  uint64_t result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    uint64_t v5 = (char *)MEMORY[0x245637160](result, v2);
    goto LABEL_8;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)result < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v5 = (char *)*(id *)(v2 + 8 * (void)result + 32);
LABEL_8:
    uint64_t v3 = v5;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_241AF1410()
{
  uint64_t v1 = sub_241CD6D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241AF14FC(uint64_t a1, char a2)
{
  return sub_241AF1624(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_241AEFEA4);
}

id sub_241AF1514(id a1)
{
  return a1;
}

uint64_t sub_241AF1520()
{
  uint64_t v1 = sub_241CD6D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6 + 16, v5);
}

uint64_t sub_241AF160C(uint64_t a1, char a2)
{
  return sub_241AF1624(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_241AF01C4);
}

uint64_t sub_241AF1624(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = a2 & 1;
  uint64_t v6 = *(void *)(sub_241CD6D00() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = v3 + v7;
  uint64_t v10 = (uint64_t *)(v3 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return a3(a1, v5, v8, v9, v11, v12);
}

char *sub_241AF16EC(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[1];
    *((void *)a1 + 1) = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_241CD6D00();
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    uint64_t v12 = v4;
    uint64_t v13 = v6;
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_241AF17D8(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_241CD6D00();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_241AF1858(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_241CD6D00();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  id v11 = v4;
  id v12 = v5;
  v10(v7, v8, v9);
  return a1;
}

uint64_t sub_241AF18F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_241CD6D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

_OWORD *sub_241AF1994(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_241CD6D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_241AF1A10(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_241CD6D00();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_241AF1AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241AF1AC0);
}

uint64_t sub_241AF1AC0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_241CD6D00();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241AF1B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241AF1B84);
}

void *sub_241AF1B84(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_241CD6D00();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_241AF1C2C()
{
  uint64_t result = sub_241CD6D00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_241AF1CC8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v102 = a2;
  id v103 = a3;
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD9970();
  uint64_t v104 = *(void *)(v8 - 8);
  uint64_t v105 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v100 - v12;
  uint64_t v14 = sub_241CD6D00();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A5D1DC();
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  unint64_t v20 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v101 = (uint64_t)&v100 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v100 - v23;
  self;
  uint64_t v25 = swift_dynamicCastObjCClass();
  if (v25)
  {
    id v26 = (void *)v25;
    id v27 = a1;
    sub_241AF2818(v26);
    if (v28)
    {
      id v29 = v28;
      uint64_t v30 = sub_241CD9ED0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v24, v102, v30);
      uint64_t v32 = v104;
      uint64_t v31 = v105;
      (*(void (**)(char *, void, uint64_t))(v104 + 104))(v24, *MEMORY[0x263F46C78], v105);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v24, 0, 1, v31);
      id v33 = v103;
      id result = objc_msgSend(v29, sel_data);
      if (result)
      {
        uint64_t v35 = result;
        sub_241A313AC(0, &qword_26B030440);
        uint64_t v36 = sub_241CD6AE0();
        unint64_t v38 = v37;

        uint64_t v39 = v101;
        sub_241A5D234((uint64_t)v24, v101);
        uint64_t v108 = 0;
        long long v106 = 0u;
        long long v107 = 0u;
        id v40 = sub_241A54648(v36, v38, 19, v39, (uint64_t)v33, 0, (uint64_t)&v106);

        sub_241A37374(v36, v38);
        sub_241A5D298((uint64_t)v24);

        return v40;
      }
      __break(1u);
      goto LABEL_26;
    }
    sub_241A313AC(0, &qword_26B034E30);
    id v49 = objc_msgSend(v26, sel_quantity);
    sub_241AF30A4(v26);
    id v50 = HKCodableSummaryQuantityValue.init(quantity:date:)(v49, (uint64_t)v16);
    uint64_t v51 = sub_241CD9ED0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v13, v102, v51);
    (*(void (**)(char *, void, uint64_t))(v104 + 104))(v13, *MEMORY[0x263F46C78], v105);
    id v52 = objc_msgSend(v27, sel_metadata);
    id v100 = v27;
    if (v52)
    {
      uint64_t v53 = v52;
      uint64_t v54 = sub_241CDAF90();
    }
    else
    {
      uint64_t v54 = 0;
    }
    id v76 = v103;
    id result = objc_msgSend(v50, sel_data);
    if (!result) {
      goto LABEL_27;
    }
    uint64_t v77 = result;
    uint64_t v78 = v50;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v79 = sub_241CD6AE0();
    unint64_t v81 = v80;

    uint64_t v83 = v104;
    uint64_t v82 = v105;
    uint64_t v84 = v101;
    (*(void (**)(uint64_t, char *, uint64_t))(v104 + 16))(v101, v13, v105);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v82);
    uint64_t v108 = 0;
    long long v106 = 0u;
    long long v107 = 0u;
    id v40 = sub_241A54648(v79, v81, 14, v84, (uint64_t)v76, v54, (uint64_t)&v106);

    sub_241A37374(v79, v81);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v13, v82);
    goto LABEL_19;
  }
  self;
  uint64_t v41 = swift_dynamicCastObjCClass();
  if (v41)
  {
    uint64_t v42 = (void *)v41;
    id v43 = a1;
    id v44 = sub_241AF2F50(v42);
    uint64_t v45 = sub_241CD9ED0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v11, v102, v45);
    (*(void (**)(char *, void, uint64_t))(v104 + 104))(v11, *MEMORY[0x263F46C78], v105);
    id v46 = objc_msgSend(v43, sel_metadata);
    id v100 = v43;
    if (v46)
    {
      uint64_t v47 = v46;
      uint64_t v48 = sub_241CDAF90();
    }
    else
    {
      uint64_t v48 = 0;
    }
    id v68 = v103;
    id result = objc_msgSend(v44, sel_data);
    if (!result)
    {
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    unint64_t v69 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v70 = sub_241CD6AE0();
    unint64_t v72 = v71;

    uint64_t v73 = v104;
    uint64_t v74 = v105;
    uint64_t v75 = v101;
    (*(void (**)(uint64_t, char *, uint64_t))(v104 + 16))(v101, v11, v105);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v75, 0, 1, v74);
    uint64_t v108 = 0;
    long long v106 = 0u;
    long long v107 = 0u;
    id v40 = sub_241A54648(v70, v72, 6, v75, (uint64_t)v68, v48, (uint64_t)&v106);

    sub_241A37374(v70, v72);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v11, v74);
LABEL_19:

    return v40;
  }
  self;
  uint64_t v55 = swift_dynamicCastObjCClass();
  if (!v55)
  {
    uint64_t v85 = v7;
    sub_241CDA140();
    id v86 = a1;
    uint64_t v87 = sub_241CDA190();
    os_log_type_t v88 = sub_241CDB650();
    int v89 = v88;
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v90 = swift_slowAlloc();
      uint64_t v105 = (uint64_t)v85;
      LODWORD(v103) = v89;
      uint64_t v91 = v90;
      uint64_t v104 = swift_slowAlloc();
      *(void *)&long long v106 = v104;
      *(_DWORD *)uint64_t v91 = 136315394;
      uint64_t v109 = &type metadata for MostRecentSampleCurrentValueSharableModelUtilities;
      sub_241AF3348();
      uint64_t v92 = sub_241CDB120();
      uint64_t v109 = (ValueMetadata *)sub_241A33FE4(v92, v93, (uint64_t *)&v106);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v91 + 12) = 2080;
      id v94 = v86;
      id v95 = objc_msgSend(v94, sel_description);
      uint64_t v96 = sub_241CDB0D0();
      unint64_t v98 = v97;

      uint64_t v109 = (ValueMetadata *)sub_241A33FE4(v96, v98, (uint64_t *)&v106);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v87, (os_log_type_t)v103, "[%s]: Unsupported most recent sample type: %s", (uint8_t *)v91, 0x16u);
      uint64_t v99 = v104;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v99, -1, -1);
      MEMORY[0x245637F20](v91, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v105, v4);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v85, v4);
    }
    return 0;
  }
  uint64_t v56 = (void *)v55;
  sub_241A313AC(0, &qword_26B030460);
  id v57 = a1;
  id v58 = HKCodableSummaryAudiogramValue.init(audiogram:)(v56);
  uint64_t v59 = sub_241CD9ED0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v20, v102, v59);
  uint64_t v61 = v104;
  uint64_t v60 = v105;
  (*(void (**)(char *, void, uint64_t))(v104 + 104))(v20, *MEMORY[0x263F46C78], v105);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v20, 0, 1, v60);
  id v62 = v103;
  id result = objc_msgSend(v58, sel_data);
  if (result)
  {
    uint64_t v63 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v64 = sub_241CD6AE0();
    unint64_t v66 = v65;

    uint64_t v67 = v101;
    sub_241A5D234((uint64_t)v20, v101);
    uint64_t v108 = 0;
    long long v106 = 0u;
    long long v107 = 0u;
    id v40 = sub_241A54648(v64, v66, 3, v67, (uint64_t)v62, 0, (uint64_t)&v106);

    sub_241A37374(v64, v66);
    sub_241A5D298((uint64_t)v20);

    return v40;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_241AF2818(void *a1)
{
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v47 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v48 = sub_241CDA080();
  uint64_t v3 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD6D00();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v45 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CDA090();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v46 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(a1, sel_sampleType);
  id v12 = objc_msgSend(v11, sel_identifier);

  uint64_t v13 = sub_241CDB0D0();
  uint64_t v15 = v14;

  if (v13 == sub_241CDB0D0() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = sub_241CDC100();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      return;
    }
  }
  uint64_t v18 = &off_2650F5000;
  id v19 = objc_msgSend(a1, sel_quantity);
  uint64_t v47 = sub_241CDBA70();
  id v44 = a1;
  int64_t v20 = *(void *)(sub_241CDBAA0() + 16);
  if (v20)
  {
    uint64_t v42 = v9;
    uint64_t v43 = v8;
    uint64_t v49 = MEMORY[0x263F8EE78];
    sub_241A52108(0, v20, 0);
    uint64_t v21 = 0;
    uint64_t v22 = v49;
    while (1)
    {
      uint64_t v23 = (void *)sub_241CDBA90();
      objc_msgSend(v23, sel__value);
      double v25 = v24;

      id v26 = (void *)sub_241CDBA80();
      objc_msgSend(v26, sel__value);
      double v28 = v27;

      if (v25 > v28) {
        break;
      }
      sub_241CDA050();
      uint64_t v49 = v22;
      unint64_t v30 = *(void *)(v22 + 16);
      unint64_t v29 = *(void *)(v22 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_241A52108(v29 > 1, v30 + 1, 1);
        uint64_t v22 = v49;
      }
      ++v21;
      *(void *)(v22 + 16) = v30 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v22+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v30, v5, v48);
      if (v20 == v21)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v42;
        uint64_t v8 = v43;
        uint64_t v18 = &off_2650F5000;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v31 = (const char *)v18[216];
    uint64_t v32 = v18;
    id v33 = v44;
    id v34 = [v44 v31];
    objc_msgSend(v34, sel__value);

    uint64_t v35 = v46;
    sub_241CDA020();
    sub_241A313AC(0, &qword_26B034E30);
    id v36 = [v33 (SEL)v32 + 1243];
    uint64_t v37 = (uint64_t)v45;
    sub_241AF30A4(v33);
    id v38 = HKCodableSummaryQuantityValue.init(quantity:date:)(v36, v37);
    id v39 = sub_241A42E90();
    id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46688]), sel_init);
    if (v40)
    {
      id v41 = v40;
      objc_msgSend(v41, sel_setQuantity_, v38);
      objc_msgSend(v41, sel_setClassificationRawValue_, v47);
      objc_msgSend(v41, sel_setLevelViewDataConfiguration_, v39);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v35, v8);
      return;
    }
  }
  __break(1u);
}

id sub_241AF2F50(void *a1)
{
  uint64_t v2 = sub_241CD6D00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, sel_value);
  sub_241AF30A4(a1);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F465C8]), sel_init);
  if (result)
  {
    id v8 = result;
    objc_msgSend(v8, sel_setCategoryValue_, v6);
    uint64_t v9 = (void *)sub_241CD6C60();
    double v10 = MEMORY[0x245637600]();

    objc_msgSend(v8, sel_setDateData_, v10);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241AF30A4(void *a1)
{
  uint64_t v2 = sub_241CD6D00();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v8 = (char *)&v23 - v7;
  id v9 = objc_msgSend(a1, sel_sampleType);
  id v10 = objc_msgSend(v9, sel_identifier);

  uint64_t v11 = sub_241CDB0D0();
  uint64_t v13 = v12;

  if (sub_241CDB0D0() == v11 && v14 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_241CDC100();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      id v24 = objc_msgSend(a1, sel_endDate);
      sub_241CD6CB0();
      char v17 = v24;

      return;
    }
  }
  id v18 = objc_msgSend(a1, sel_endDate);
  sub_241CD6CB0();

  id v19 = objc_msgSend(a1, sel__creationDate);
  sub_241CD6CB0();

  LOBYTE(v19) = sub_241CD6C80();
  int64_t v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20(v6, v2);
  v20(v8, v2);
  if (v19) {
    id v21 = objc_msgSend(a1, sel_endDate);
  }
  else {
    id v21 = objc_msgSend(a1, sel__creationDate);
  }
  id v22 = v21;
  sub_241CD6CB0();
}

unint64_t sub_241AF3348()
{
  unint64_t result = qword_268D42A48;
  if (!qword_268D42A48)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D42A48);
  }
  return result;
}

ValueMetadata *type metadata accessor for MostRecentSampleCurrentValueSharableModelUtilities()
{
  return &type metadata for MostRecentSampleCurrentValueSharableModelUtilities;
}

uint64_t sub_241AF3394@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_241AF346C();
  uint64_t v7 = a3 + *(int *)(v6 + 48);
  sub_241AF395C(a1, a3, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
  uint64_t v8 = sub_241CD7C10();
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);

  return v9(v7, a2, v8);
}

uint64_t sub_241AF343C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241AF395C(a1, a2, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
}

void sub_241AF346C()
{
  if (!qword_26B038418)
  {
    type metadata accessor for TrendCoalescingNotificationViewModel();
    sub_241CD7C10();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B038418);
    }
  }
}

uint64_t sub_241AF34DC(void *a1)
{
  sub_241AF3690();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A311E0(a1, a1[3]);
  v9[1] = sub_241CD7900();
  sub_241AF379C(0, (unint64_t *)&qword_26B032690, MEMORY[0x263EFDCF0]);
  sub_241AF379C(0, &qword_26B031F48, MEMORY[0x263F8E848]);
  sub_241AF3814();
  sub_241CDA710();
  swift_release();
  sub_241AF3904();
  uint64_t v7 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

void sub_241AF3690()
{
  if (!qword_26B031B58)
  {
    sub_241AF379C(255, (unint64_t *)&qword_26B032690, MEMORY[0x263EFDCF0]);
    sub_241AF379C(255, &qword_26B031F48, MEMORY[0x263F8E848]);
    sub_241AF3814();
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031B58);
    }
  }
}

void sub_241AF3744()
{
  if (!qword_26B032060)
  {
    sub_241CD7C10();
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032060);
    }
  }
}

void sub_241AF379C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_241AF3744();
    uint64_t v7 = v6;
    unint64_t v8 = sub_241A3DA64();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_241AF3814()
{
  unint64_t result = qword_26B032688;
  if (!qword_26B032688)
  {
    sub_241AF379C(255, (unint64_t *)&qword_26B032690, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032688);
  }
  return result;
}

uint64_t sub_241AF3888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_241AF395C(a1, a2, (uint64_t (*)(void))sub_241AF3744);
  sub_241AF379C(0, &qword_26B031F48, MEMORY[0x263F8E848]);

  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_241AF3904()
{
  unint64_t result = qword_26B031B50;
  if (!qword_26B031B50)
  {
    sub_241AF3690();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B031B50);
  }
  return result;
}

uint64_t sub_241AF395C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t HKCodableSummaryTrendTileViewModel.originalEventDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_241AF3E04((SEL *)&selRef_hasOriginalEventDateData, (SEL *)&selRef_originalEventDateData, a1);
}

uint64_t HKCodableSummaryTrendTileViewModel.coveredDateRange.getter()
{
  uint64_t v1 = v0;
  if (!objc_msgSend(v0, sel_hasCoveredDateRangeRawValue)
    || (id v2 = objc_msgSend(v0, sel_coveredDateRangeRawValue)) == 0
    || (uint64_t v3 = v2,
        uint64_t v4 = sub_241CDB0D0(),
        uint64_t v6 = v5,
        v3,
        uint64_t result = MEMORY[0x2456352D0](v4, v6),
        result == 6))
  {
    sub_241CDBE00();
    sub_241CDB180();
    id v8 = objc_msgSend(v1, sel_coveredDateRangeRawValue);
    if (v8)
    {
      unint64_t v9 = v8;
      sub_241CDB0D0();
    }
    sub_241A307E0(0, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    sub_241CDB120();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t result = sub_241CDBF10();
    __break(1u);
  }
  return result;
}

Swift::OpaquePointer_optional __swiftcall HKCodableStatisticsCollection.codableStatisticsArray()()
{
  unint64_t v0 = (void *)sub_241AF3BA8((SEL *)&selRef_statistics, (unint64_t *)&unk_26B0303C0);
  result.value._rawValue = v0;
  result.is_nil = v1;
  return result;
}

Swift::OpaquePointer_optional __swiftcall HKCodableChartQuantityDistributionDataSourceQueryData.quantityDistributionArray()()
{
  unint64_t v0 = (void *)sub_241AF3BA8((SEL *)&selRef_quantityDistributionDatas, &qword_26B030470);
  result.value._rawValue = v0;
  result.is_nil = v1;
  return result;
}

uint64_t sub_241AF3BA8(SEL *a1, unint64_t *a2)
{
  uint64_t v5 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_241CDA1A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [v5 *a1];
  if (!v11 || (uint64_t v12 = v11, v21 = 0, sub_241A313AC(0, a2), sub_241CDB2B0(), v12, (result = v21) == 0))
  {
    sub_241CDA140();
    uint64_t v14 = sub_241CDA190();
    os_log_type_t v15 = sub_241CDB650();
    if (os_log_type_enabled(v14, v15))
    {
      char v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v20 = v17;
      uint64_t v21 = ObjectType;
      *(_DWORD *)char v16 = 136315138;
      swift_getMetatypeMetadata();
      uint64_t v18 = sub_241CDB120();
      uint64_t v21 = sub_241A33FE4(v18, v19, &v20);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v14, v15, "[%s]: Unexpected array type received", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v17, -1, -1);
      MEMORY[0x245637F20](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 0;
  }
  return result;
}

uint64_t HKCodableSummaryTrendTileViewModel.discoveryDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_241AF3E04((SEL *)&selRef_hasDiscoveryDateData, (SEL *)&selRef_discoveryDateData, a1);
}

uint64_t sub_241AF3E04@<X0>(SEL *a1@<X0>, SEL *a2@<X1>, uint64_t a3@<X8>)
{
  if ([v3 *a1])
  {
    [v3 *a2];
    id v6 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v7 = sub_241CD6D00();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a3;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = sub_241CD6D00();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a3;
    uint64_t v11 = 1;
  }

  return v8(v10, v11, 1, v9);
}

id HKCodableSummaryTrendTileViewModel.init(trendDescription:changeType:diagramStyle:dataType:coveredDateRange:baseTrendLine:changeTrendLine:visualizationPoints:notificationIdentifier:discoveryDate:originalEventDate:sharingPreviewString:cellHeaderViewModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, void *a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  id v45 = a5;
  id v46 = a7;
  unint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A32CC8(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v20 - 8);
  id v22 = (char *)&v43 - v21;
  sub_241A32CC8(0, &qword_26B0321C0, MEMORY[0x263F46BE0], v19);
  MEMORY[0x270FA5388](v23 - 8);
  double v25 = (char *)&v43 - v24;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v27 = result;
    double v28 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_setTrendDescription_, v28);

    uint64_t v44 = a3;
    sub_241AF82A0(a3, (uint64_t)v25, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    uint64_t v29 = sub_241CD98D0();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 1, v29) == 1)
    {
      sub_241AF8320((uint64_t)v25, &qword_26B0321C0, MEMORY[0x263F46BE0]);
      uint64_t v31 = 0;
    }
    else
    {
      sub_241CD98C0();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v29);
      uint64_t v31 = (void *)sub_241CDB090();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v27, sel_setChangeTypeRawValue_, v31);

    objc_msgSend(v27, sel_setDiagramStyle_, a4);
    id v32 = objc_msgSend(v45, sel_identifier);
    if (!v32)
    {
      sub_241CDB0D0();
      id v32 = (id)sub_241CDB090();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v27, sel_setObjectTypeIdentifier_, v32);

    sub_241CD9FA0();
    id v33 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_setCoveredDateRangeRawValue_, v33);

    objc_msgSend(v27, sel_setBaseTrendLine_, v46);
    if (a8) {
      objc_msgSend(v27, sel_setChangeTrendLine_, a8);
    }
    sub_241A48FD4(a9);
    swift_bridgeObjectRelease();
    id v34 = objc_allocWithZone(MEMORY[0x263EFF980]);
    uint64_t v35 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v36 = objc_msgSend(v34, sel_initWithArray_, v35);

    objc_msgSend(v27, sel_setVisualizationPoints_, v36);
    if (a11)
    {
      uint64_t v37 = (void *)sub_241CDB090();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = 0;
    }
    objc_msgSend(v27, sel_setNotificationIdentifier_, v37);

    id v38 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_241AF82A0(a12, (uint64_t)v22, &qword_26B0385B8, MEMORY[0x263F07490]);
    HKCodableSummaryTrendTileViewModel.discoveryDate.setter((uint64_t)v22);
    sub_241AF82A0(a13, (uint64_t)v22, &qword_26B0385B8, v38);
    HKCodableSummaryTrendTileViewModel.originalEventDate.setter((uint64_t)v22);
    if (a15)
    {
      id v39 = (void *)sub_241CDB090();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v39 = 0;
    }
    uint64_t v40 = v44;
    objc_msgSend(v27, sel_setTrendDescriptionSharingPreviewOverride_, v39);

    if (a16)
    {
      swift_retain();
      id v41 = (void *)sub_241CD8520();
      swift_release();
    }
    else
    {
      id v41 = 0;
    }
    objc_msgSend(v27, sel_setCellHeaderViewModel_, v41);

    swift_release();
    uint64_t v42 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_241AF8320(a13, &qword_26B0385B8, MEMORY[0x263F07490]);
    sub_241AF8320(a12, &qword_26B0385B8, v42);
    sub_241AF8320(v40, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    return v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void HKCodableSummaryTrendTileViewModel.coveredDateRange.setter()
{
  sub_241CD9FA0();
  id v1 = (id)sub_241CDB090();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setCoveredDateRangeRawValue_, v1);
}

uint64_t HKCodableSummaryTrendTileViewModel.discoveryDate.setter(uint64_t a1)
{
  return sub_241AF44F8(a1, (SEL *)&selRef_setDiscoveryDateData_, (SEL *)&selRef_setHasDiscoveryDateData_);
}

uint64_t HKCodableSummaryTrendTileViewModel.originalEventDate.setter(uint64_t a1)
{
  return sub_241AF44F8(a1, (SEL *)&selRef_setOriginalEventDateData_, (SEL *)&selRef_setHasOriginalEventDateData_);
}

uint64_t sub_241AF44F8(uint64_t a1, SEL *a2, SEL *a3)
{
  id v6 = v3;
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241A32CC8(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = sub_241CD6D00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  os_log_type_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AF82A0(a1, (uint64_t)v11, &qword_26B0385B8, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    char v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_241AF8320((uint64_t)v11, &qword_26B0385B8, MEMORY[0x263F07490]);
    objc_msgSend(v6, *a3, 0);
    return sub_241AF8320(a1, &qword_26B0385B8, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    uint64_t v18 = (void *)sub_241CD6C60();
    double v19 = MEMORY[0x245637600]();

    objc_msgSend(v6, *a2, v19);
    sub_241AF8320(a1, &qword_26B0385B8, MEMORY[0x263F07490]);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

void (*HKCodableSummaryTrendTileViewModel.coveredDateRange.modify(uint64_t a1))(void **a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
  return sub_241AF4798;
}

void sub_241AF4798(void **a1)
{
  uint64_t v1 = *a1;
  sub_241CD9FA0();
  id v2 = (id)sub_241CDB090();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setCoveredDateRangeRawValue_, v2);
}

uint64_t HKCodableSummaryTrendTileViewModel.visualizationPointsArray.getter()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(v1, sel_visualizationPoints);
  if (!v7
    || (v8 = v7, v17 = 0, sub_241A313AC(0, &qword_26B038438), sub_241CDB2B0(), v8, (uint64_t result = v17) == 0))
  {
    sub_241CDA140();
    uint64_t v10 = sub_241CDA190();
    os_log_type_t v11 = sub_241CDB650();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v16 = v13;
      uint64_t v17 = ObjectType;
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_getMetatypeMetadata();
      uint64_t v14 = sub_241CDB120();
      uint64_t v17 = sub_241A33FE4(v14, v15, &v16);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v10, v11, "[%s]: Unexpected array type received", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v13, -1, -1);
      MEMORY[0x245637F20](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return MEMORY[0x263F8EE78];
  }
  return result;
}

id HKCodableSummaryTrendTileViewModel.coreChartTrendDataSeries.getter()
{
  uint64_t v0 = sub_241CD6D00();
  MEMORY[0x270FA5388](v0 - 8);
  id v34 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_241CD6810();
  unint64_t v2 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  id v32 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A32CC8(0, &qword_268D42A50, MEMORY[0x263F47080], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v30 - v5;
  uint64_t v7 = sub_241CD9BF0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v41 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v35 = (char *)&v30 - v11;
  unint64_t v12 = HKCodableSummaryTrendTileViewModel.visualizationPointsArray.getter();
  unint64_t v13 = v12;
  if (v12 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_241CDBF50();
    if (v14) {
      goto LABEL_3;
    }
LABEL_27:
    unint64_t v2 = MEMORY[0x263F8EE78];
LABEL_28:
    swift_bridgeObjectRelease_n();
    return (id)v2;
  }
  uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v14) {
    goto LABEL_27;
  }
LABEL_3:
  unint64_t v40 = v13 & 0xC000000000000001;
  uint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  id v38 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v30 = (void (**)(char *, uint64_t))(v2 + 8);
  unint64_t v2 = MEMORY[0x263F8EE78];
  unint64_t v15 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v16 = 4;
  uint64_t v31 = v8;
  unint64_t v36 = v13;
  uint64_t v39 = v14;
  while (1)
  {
    if (v40) {
      id v17 = (id)MEMORY[0x245637160](v16 - 4, v13);
    }
    else {
      id v17 = *(id *)(v13 + 8 * v16);
    }
    uint64_t v18 = v17;
    uint64_t v19 = v16 - 3;
    if (__OFADD__(v16 - 4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (!objc_msgSend(v17, sel_hasDateInterval) || !objc_msgSend(v18, sel_hasValue))
    {
      (*v38)(v6, 1, 1, v7);

      if ((*v37)(v6, 1, v7) != 1) {
        goto LABEL_20;
      }
      goto LABEL_4;
    }
    unsigned int v20 = objc_msgSend(v18, sel_hasValue2);
    id result = objc_msgSend(v18, sel_dateInterval);
    id v22 = result;
    if (v20) {
      break;
    }
    if (!result) {
      goto LABEL_30;
    }
    uint64_t v24 = v32;
    sub_241CDB920();

    sub_241CD67E0();
    (*v30)(v24, v33);
    objc_msgSend(v18, sel_value);
LABEL_19:
    sub_241CD9BE0();
    (*v38)(v6, 0, 1, v7);

    unsigned int v25 = (*v37)(v6, 1, v7);
    uint64_t v8 = v31;
    unint64_t v13 = v36;
    if (v25 != 1)
    {
LABEL_20:
      id v26 = *v15;
      id v27 = v35;
      (*v15)(v35, v6, v7);
      v26(v41, v27, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = sub_241AF727C(0, *(void *)(v2 + 16) + 1, 1, v2, &qword_268D42A70, MEMORY[0x263F47080], MEMORY[0x263F47080], MEMORY[0x263F47080]);
      }
      unint64_t v29 = *(void *)(v2 + 16);
      unint64_t v28 = *(void *)(v2 + 24);
      if (v29 >= v28 >> 1) {
        unint64_t v2 = sub_241AF727C(v28 > 1, v29 + 1, 1, v2, &qword_268D42A70, MEMORY[0x263F47080], MEMORY[0x263F47080], MEMORY[0x263F47080]);
      }
      *(void *)(v2 + 16) = v29 + 1;
      v26((char *)(v2+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v29), v41, v7);
      unint64_t v13 = v36;
      goto LABEL_5;
    }
LABEL_4:
    sub_241AF8320((uint64_t)v6, &qword_268D42A50, MEMORY[0x263F47080]);
LABEL_5:
    ++v16;
    if (v19 == v39) {
      goto LABEL_28;
    }
  }
  if (result)
  {
    uint64_t v23 = v32;
    sub_241CDB920();

    sub_241CD67E0();
    (*v30)(v23, v33);
    objc_msgSend(v18, sel_value);
    objc_msgSend(v18, sel_value2);
    goto LABEL_19;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void (*HKCodableSummaryTrendTileViewModel.discoveryDate.modify(void *a1))(uint64_t a1, char a2)
{
  unint64_t v2 = v1;
  *a1 = v1;
  sub_241A32CC8(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  size_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  a1[1] = malloc(v5);
  id v6 = malloc(v5);
  a1[2] = v6;
  if (objc_msgSend(v2, sel_hasDiscoveryDateData))
  {
    objc_msgSend(v2, sel_discoveryDateData);
    id v7 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v8 = sub_241CD6D00();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  }
  else
  {
    uint64_t v9 = sub_241CD6D00();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  }
  return sub_241AF5220;
}

void sub_241AF5220(uint64_t a1, char a2)
{
}

void (*HKCodableSummaryTrendTileViewModel.originalEventDate.modify(void *a1))(uint64_t a1, char a2)
{
  unint64_t v2 = v1;
  *a1 = v1;
  sub_241A32CC8(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  size_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  a1[1] = malloc(v5);
  id v6 = malloc(v5);
  a1[2] = v6;
  if (objc_msgSend(v2, sel_hasOriginalEventDateData))
  {
    objc_msgSend(v2, sel_originalEventDateData);
    id v7 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v8 = sub_241CD6D00();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  }
  else
  {
    uint64_t v9 = sub_241CD6D00();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  }
  return sub_241AF53A0;
}

void sub_241AF53A0(uint64_t a1, char a2)
{
}

void sub_241AF53B8(uint64_t a1, char a2, void (*a3)(void *))
{
  uint64_t v4 = *(void **)(a1 + 8);
  size_t v5 = *(void **)(a1 + 16);
  if (a2)
  {
    id v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_241AF82A0(*(void *)(a1 + 16), (uint64_t)v4, &qword_26B0385B8, MEMORY[0x263F07490]);
    a3(v4);
    sub_241AF8320((uint64_t)v5, &qword_26B0385B8, v6);
  }
  else
  {
    a3(*(void **)(a1 + 16));
  }
  free(v5);

  free(v4);
}

void HKCodableSummaryTrendTileViewModel.coreChartTrendModel.getter(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v35 = a1;
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A32CC8(0, &qword_268D42A58, MEMORY[0x263F470E0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = sub_241CD9C70();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  if (!objc_msgSend(v2, sel_hasObjectTypeIdentifier)
    || (unint64_t v12 = self,
        id v13 = objc_msgSend(v2, sel_objectTypeIdentifier),
        id v14 = objc_msgSend(v12, sel__typeWithIdentifier_, v13),
        v13,
        !v14))
  {
    sub_241CDA140();
    uint64_t v9 = v2;
    unsigned int v20 = sub_241CDA190();
    os_log_type_t v21 = sub_241CDB660();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v33 = v4;
      uint64_t v34 = v3;
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v37 = v23;
      *(_DWORD *)id v22 = 136315138;
      id v24 = objc_msgSend(v9, sel_objectTypeIdentifier);
      if (!v24)
      {
LABEL_15:

        __break(1u);
        return;
      }
      unsigned int v25 = v24;
      uint64_t v26 = sub_241CDB0D0();
      unint64_t v28 = v27;

      uint64_t v36 = sub_241A33FE4(v26, v28, &v37);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v20, v21, "TrendTileViewModel: failed to find object type for %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v23, -1, -1);
      MEMORY[0x245637F20](v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v34);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    uint64_t v29 = sub_241CD9A80();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v35, 1, 1, v29);
    return;
  }
  objc_msgSend(v2, sel_diagramStyle);
  HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
  id v15 = objc_msgSend(v2, sel_baseTrendLine);
  if (!v15)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v16 = v15;
  HKCodableSummaryTrendLineViewModel.coreChartTrendLineViewModel.getter();

  id v17 = objc_msgSend(v2, sel_changeTrendLine);
  if (v17)
  {
    uint64_t v18 = v17;
    HKCodableSummaryTrendLineViewModel.coreChartTrendLineViewModel.getter();

    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v19, 1, v10);
  HKCodableSummaryTrendTileViewModel.coreChartTrendDataSeries.getter();
  uint64_t v30 = v35;
  sub_241CD9A70();
  uint64_t v31 = sub_241CD9A80();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
}

id HKCodableSummaryTrendLineViewModel.coreChartTrendLineViewModel.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241CD6810();
  MEMORY[0x270FA5388](v2 - 8);
  id result = objc_msgSend(v0, sel_dateInterval);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = result;
  sub_241CDB920();

  objc_msgSend(v1, sel_average);
  id result = objc_msgSend(v1, sel_xAxisLabel);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  sub_241CDB0D0();

  id result = objc_msgSend(v1, sel_lineLabel);
  if (result)
  {
    id v6 = result;
    sub_241CDB0D0();

    return (id)sub_241CD9C60();
  }
LABEL_7:
  __break(1u);
  return result;
}

id HKCodableSummaryTrendTileViewModel.dataTypeHeaderModel.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v13 - v5;
  if (!objc_msgSend(v1, sel_hasCellHeaderViewModel))
  {
    sub_241CDA140();
    uint64_t v9 = sub_241CDA190();
    os_log_type_t v10 = sub_241CDB660();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_241A23000, v9, v10, "No header model was saved with this trend", v11, 2u);
      MEMORY[0x245637F20](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  id result = objc_msgSend(v1, sel_cellHeaderViewModel);
  if (result)
  {
    uint64_t v8 = result;
    sub_241CD89A0();
    uint64_t v12 = sub_241CD8510();

    return (id)v12;
  }
  __break(1u);
  return result;
}

uint64_t HKCodableSummaryTrendTileViewModel.dataTypeHeaderModel.setter(uint64_t a1)
{
  if (a1) {
    uint64_t v2 = (void *)sub_241CD8520();
  }
  else {
    uint64_t v2 = 0;
  }
  objc_msgSend(v1, sel_setCellHeaderViewModel_, v2);

  return swift_release();
}

void (*HKCodableSummaryTrendTileViewModel.dataTypeHeaderModel.modify(id *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = HKCodableSummaryTrendTileViewModel.dataTypeHeaderModel.getter();
  return sub_241AF5E94;
}

void sub_241AF5E94(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  if (a2)
  {
    if (v3)
    {
      swift_retain();
      uint64_t v4 = sub_241CD8520();
    }
    else
    {
      uint64_t v4 = 0;
    }
    id v6 = (id)v4;
    objc_msgSend((id)a1[1], sel_setCellHeaderViewModel_);
    swift_release();
  }
  else
  {
    if (v3) {
      uint64_t v5 = sub_241CD8520();
    }
    else {
      uint64_t v5 = 0;
    }
    id v6 = (id)v5;
    objc_msgSend((id)a1[1], sel_setCellHeaderViewModel_);
  }
  swift_release();
}

uint64_t HKCodableSummaryTrendTileViewModel.trendDescriptionText(presentation:)()
{
  uint64_t v1 = sub_241CD83C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F43BA8], v1);
  char v5 = sub_241CD83B0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0 && objc_msgSend(v0, sel_hasTrendDescriptionSharingPreviewOverride))
  {
    id v6 = objc_msgSend(v0, sel_trendDescriptionSharingPreviewOverride);
  }
  else
  {
    if (!objc_msgSend(v0, sel_hasTrendDescription)) {
      return 0;
    }
    id v6 = objc_msgSend(v0, sel_trendDescription);
  }
  id v7 = v6;
  if (!v7) {
    return 0;
  }
  uint64_t v8 = sub_241CDB0D0();

  return v8;
}

id HKCodableSummaryTrendLineViewModel.init(dateInterval:average:xAxisLabel:lineLabel:)(uint64_t a1, double a2)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    char v5 = result;
    sub_241A313AC(0, &qword_26B0303E8);
    id v6 = v5;
    id v7 = (void *)sub_241CDB930();
    objc_msgSend(v6, sel_setDateInterval_, v7);

    objc_msgSend(v6, sel_setAverage_, a2);
    uint64_t v8 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setXAxisLabel_, v8);

    uint64_t v9 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setLineLabel_, v9);

    uint64_t v10 = sub_241CD6810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryVisualizationPoint.init(dateInterval:value:)(char *a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, a1, v6);
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v11 = result;
    sub_241A313AC(0, &qword_26B0303E8);
    id v12 = v11;
    uint64_t v13 = (void *)sub_241CDB930();
    objc_msgSend(v12, sel_setDateInterval_, v13);

    if ((a3 & 1) == 0) {
      objc_msgSend(v12, sel_setValue_, *(double *)&a2);
    }
    id v14 = *(void (**)(char *, uint64_t))(v7 + 8);
    v14(v9, v6);

    v14(a1, v6);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryVisualizationPoint.init(dateInterval:value:value2:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v11 = result;
    sub_241A313AC(0, &qword_26B0303E8);
    id v12 = v11;
    uint64_t v13 = (void *)sub_241CDB930();
    objc_msgSend(v12, sel_setDateInterval_, v13);

    if ((a3 & 1) == 0) {
      objc_msgSend(v12, sel_setValue_, *(double *)&a2);
    }
    if (a5)
    {
      uint64_t v15 = sub_241CD6810();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
    }
    else
    {
      objc_msgSend(v12, sel_setValue2_, *(double *)&a4);

      uint64_t v14 = sub_241CD6810();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
    }
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HKCodableSummaryVisualizationPoint.valueOrNil.getter()
{
  if (!objc_msgSend(v0, sel_hasValue)) {
    return 0;
  }
  objc_msgSend(v0, sel_value);
  return v1;
}

id HKCodableSummaryVisualizationPoint.init(swiftChartPoint:)(uint64_t a1)
{
  uint64_t v2 = sub_241CD6810();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD8460();
  sub_241CD8480();
  double v7 = v6;
  uint64_t v8 = sub_241CD8490();
  char v10 = v9;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v12 = result;
    sub_241A313AC(0, &qword_26B0303E8);
    id v13 = v12;
    uint64_t v14 = (void *)sub_241CDB930();
    objc_msgSend(v13, sel_setDateInterval_, v14);

    objc_msgSend(v13, sel_setValue_, v7);
    if (v10)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      objc_msgSend(v13, sel_setValue2_, *(double *)&v8);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    uint64_t v15 = sub_241CD84A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryVisualizationDataPresencePoint.init(dateInterval:dataPresent:)(uint64_t a1, char a2)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    char v5 = result;
    sub_241A313AC(0, &qword_26B0303E8);
    id v6 = v5;
    double v7 = (void *)sub_241CDB930();
    objc_msgSend(v6, sel_setDateInterval_, v7);

    objc_msgSend(v6, sel_setDataPresent_, a2 & 1);
    uint64_t v8 = sub_241CD6810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryTrendChartViewModel.init(chartString:changeType:dataType:coveredTimeScope:baselineDateInterval:baselineQuantity:changeDateInterval:changeQuantity:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10)
{
  id v51 = a8;
  uint64_t v52 = a7;
  id v50 = a5;
  id v54 = a4;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A32CC8(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = sub_241CD6810();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v47 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A32CC8(0, &qword_26B0321C0, MEMORY[0x263F46BE0], v11);
  MEMORY[0x270FA5388](v18 - 8);
  unsigned int v20 = (char *)&v47 - v19;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v53 = a9;
    id v22 = result;
    uint64_t v23 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
    objc_msgSend(v22, sel_setChartString_, v23);

    sub_241AF82A0(a3, (uint64_t)v20, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    uint64_t v24 = sub_241CD98D0();
    uint64_t v25 = *(void *)(v24 - 8);
    int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24);
    uint64_t v48 = a3;
    uint64_t v49 = v14;
    if (v26 == 1)
    {
      sub_241AF8320((uint64_t)v20, &qword_26B0321C0, MEMORY[0x263F46BE0]);
      unint64_t v27 = 0;
    }
    else
    {
      sub_241CD98C0();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v24);
      unint64_t v27 = (void *)sub_241CDB090();
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = v16;
    objc_msgSend(v22, sel_setChangeTypeRawValue_, v27);

    id v29 = objc_msgSend(v54, sel_identifier);
    uint64_t v30 = v52;
    if (!v29)
    {
      sub_241CDB0D0();
      id v29 = (id)sub_241CDB090();
      swift_bridgeObjectRelease();
    }
    id v50 = a10;
    objc_msgSend(v22, sel_setObjectTypeIdentifier_, v29);

    sub_241CDBA60();
    sub_241A313AC(0, &qword_26B0303E8);
    uint64_t v31 = (void *)sub_241CDB930();
    objc_msgSend(v22, sel_setBaselineDateInterval_, v31);

    sub_241A313AC(0, &qword_26B038918);
    id v32 = v51;
    uint64_t v33 = (void *)sub_241CDB870();
    objc_msgSend(v22, sel_setBaselineQuantity_, v33);

    uint64_t v34 = v53;
    uint64_t v35 = (uint64_t)v49;
    sub_241AF82A0(v53, (uint64_t)v49, &qword_26B038F10, MEMORY[0x263F062D0]);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v35, 1, v15) == 1)
    {

      uint64_t v36 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
      sub_241AF8320(v34, &qword_26B038F10, MEMORY[0x263F062D0]);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v15);
      sub_241AF8320(v48, &qword_26B0321C0, MEMORY[0x263F46BE0]);
      sub_241AF8320(v35, &qword_26B038F10, v36);
    }
    else
    {
      uint64_t v37 = v30;
      id v38 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v47, v35, v15);
      uint64_t v39 = v28;
      if (v50)
      {
        id v40 = v50;
        id v41 = v38;
        uint64_t v42 = (void *)sub_241CDB930();
        objc_msgSend(v22, sel_setChangeDateInterval_, v42);

        id v43 = v40;
        uint64_t v44 = (void *)sub_241CDB870();
        objc_msgSend(v22, sel_setChangeQuantity_, v44);

        sub_241AF8320(v53, &qword_26B038F10, MEMORY[0x263F062D0]);
        id v45 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
        v45(v37, v15);
        sub_241AF8320(v48, &qword_26B0321C0, MEMORY[0x263F46BE0]);
        v45((uint64_t)v41, v15);
      }
      else
      {

        sub_241AF8320(v53, &qword_26B038F10, MEMORY[0x263F062D0]);
        id v46 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
        v46(v37, v15);
        sub_241AF8320(v48, &qword_26B0321C0, MEMORY[0x263F46BE0]);
        v46((uint64_t)v38, v15);
      }
    }
    return v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id _sSo34HKCodableSummaryTrendTileViewModelC9SummariesE10objectTypeSo08HKObjectI0CSgvg_0()
{
  if (!objc_msgSend(v0, sel_hasObjectTypeIdentifier)) {
    return 0;
  }
  uint64_t v1 = self;
  id v2 = objc_msgSend(v0, sel_objectTypeIdentifier);
  id v3 = objc_msgSend(v1, sel__typeWithIdentifier_, v2);

  return v3;
}

uint64_t _sSo34HKCodableSummaryTrendTileViewModelC9SummariesE10changeType19HealthVisualization17SignificantChangeV6PeriodV0mI0OSgvg_0@<X0>(uint64_t a1@<X8>)
{
  if (objc_msgSend(v1, sel_hasChangeTypeRawValue)
    && (id v3 = objc_msgSend(v1, sel_changeTypeRawValue)) != 0)
  {
    uint64_t v4 = v3;
    sub_241CDB0D0();

    return sub_241CD98B0();
  }
  else
  {
    uint64_t v6 = sub_241CD98D0();
    double v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    return v7(a1, 1, 1, v6);
  }
}

uint64_t sub_241AF70BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241AF727C(a1, a2, a3, a4, &qword_26B034F20, MEMORY[0x263F45618], MEMORY[0x263F45618], MEMORY[0x263F45618]);
}

void *sub_241AF7104(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241A307E0(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241AF8554(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_241AF7234(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241AF727C(a1, a2, a3, a4, &qword_26B030840, MEMORY[0x263F43D30], MEMORY[0x263F43D30], MEMORY[0x263F43D30]);
}

uint64_t sub_241AF727C(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_241A32CC8(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  size_t v20 = j__malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_241CDBF00();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_241AF83F8(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

uint64_t sub_241AF7518(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241AF727C(a1, a2, a3, a4, &qword_26B036960, (uint64_t (*)(uint64_t))sub_241A55E2C, (uint64_t (*)(void))sub_241A55E2C, (uint64_t (*)(void))sub_241A55E2C);
}

char *sub_241AF7560(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_241A307E0(0, &qword_26B034F80, MEMORY[0x263F47200], MEMORY[0x263F8E0F8]);
      char v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      unint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = (char *)MEMORY[0x263F8EE78];
      unint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_241AF8734(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_241AF767C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241AF727C(a1, a2, a3, a4, &qword_26B034F88, (uint64_t (*)(uint64_t))sub_241A68948, (uint64_t (*)(void))sub_241A68948, (uint64_t (*)(void))sub_241A68948);
}

uint64_t sub_241AF76C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241AF727C(a1, a2, a3, a4, &qword_26B034F38, MEMORY[0x263F45738], MEMORY[0x263F45738], MEMORY[0x263F45738]);
}

void *sub_241AF770C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241A32CC8(0, &qword_26B0380C8, (uint64_t (*)(uint64_t))sub_241AF8E44, MEMORY[0x263F8E0F8]);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241AF8AAC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_241AF7848(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241AF8F78();
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241AF8CBC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_241AF7954(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241A32CC8(0, qword_26B035408, (uint64_t (*)(uint64_t))sub_241AF9034, MEMORY[0x263F8E0F8]);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241AF8BB4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_241AF7A90(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_241AF7AD0(a1, a2, a3, a4, &qword_26B034FC8, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain);
}

void *sub_241AF7AB0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_241AF7AD0(a1, a2, a3, a4, &qword_26B034FC0, (uint64_t (*)(uint64_t))type metadata accessor for Label);
}

void *sub_241AF7AD0(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_241A32CC8(0, a5, a6, MEMORY[0x263F8E0F8]);
      uint64_t v12 = (void *)swift_allocObject();
      int64_t v13 = j__malloc_size(v12);
      uint64_t v14 = v13 - 32;
      if (v13 < 32) {
        uint64_t v14 = v13 - 25;
      }
      v12[2] = v10;
      v12[3] = 2 * (v14 >> 3);
      uint64_t v15 = v12 + 4;
      if (v7) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[v10 + 4]) {
          memmove(v15, a4 + 4, 8 * v10);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241AF8648(0, v10, (char *)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_241AF7BF8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241AF727C(a1, a2, a3, a4, &qword_268D421D8, (uint64_t (*)(uint64_t))type metadata accessor for TrendNotificationModel, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
}

void *sub_241AF7C40(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_241AF811C(a1, a2, a3, a4, (void (*)(void))sub_241AF8928, &qword_26B0357D0);
}

uint64_t sub_241AF7C68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241AF727C(a1, a2, a3, a4, &qword_26B0369B0, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
}

void *sub_241AF7CB0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241A307E0(0, &qword_26B034FB0, MEMORY[0x263F8D538], MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      int64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241AF8648(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_241AF7DE0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241AF727C(a1, a2, a3, a4, &qword_26B0380B8, MEMORY[0x263F46290], MEMORY[0x263F46290], MEMORY[0x263F46290]);
}

void *sub_241AF7E28(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241A32CC8(0, &qword_26B0369B8, (uint64_t (*)(uint64_t))sub_241AF8390, MEMORY[0x263F8E0F8]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_241AF881C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_241AF7F7C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_241AF811C(a1, a2, a3, a4, (void (*)(void))sub_241A78918, (unint64_t *)&qword_26B035648);
}

uint64_t sub_241AF7FA4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241AF727C(a1, a2, a3, a4, &qword_268D42A68, MEMORY[0x263F459A8], MEMORY[0x263F459A8], MEMORY[0x263F459A8]);
}

void *sub_241AF7FEC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_241AF811C(a1, a2, a3, a4, (void (*)(void))sub_241AF8F0C, (unint64_t *)&qword_26B030960);
}

void *sub_241AF8014(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_241AF811C(a1, a2, a3, a4, (void (*)(void))sub_241A55A0C, (unint64_t *)&qword_26B032070);
}

uint64_t sub_241AF803C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241AF727C(a1, a2, a3, a4, &qword_268D42A60, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState);
}

uint64_t sub_241AF8084(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241AF727C(a1, a2, a3, a4, &qword_26B034F08, (uint64_t (*)(uint64_t))sub_241A558EC, (uint64_t (*)(void))sub_241A558EC, (uint64_t (*)(void))sub_241A558EC);
}

void *sub_241AF80CC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_241AF811C(a1, a2, a3, a4, (void (*)(void))sub_241AF8DD8, &qword_26B032038);
}

void *sub_241AF80F4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_241AF811C(a1, a2, a3, a4, (void (*)(void))sub_241A559A4, &qword_26B032068);
}

void *sub_241AF811C(void *result, int64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      a5(0);
      int64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_241AF8994(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_241AF8258(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241AF727C(a1, a2, a3, a4, &qword_26B038858, MEMORY[0x263F45630], MEMORY[0x263F45630], MEMORY[0x263F45630]);
}

uint64_t sub_241AF82A0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A32CC8(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241AF8320(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A32CC8(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241AF8390()
{
  if (!qword_26B0367C8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B0367C8);
    }
  }
}

uint64_t sub_241AF83F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241AF8554(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

char *sub_241AF8648(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_241CDBFB0();
  __break(1u);
  return result;
}

char *sub_241AF8734(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    size_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241AF881C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_241AF8390();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

void sub_241AF8928()
{
  if (!qword_26B0369A8)
  {
    sub_241AF8FE4(255, &qword_26B0357D0);
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0369A8);
    }
  }
}

uint64_t sub_241AF8994(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_241AF8FE4(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241AF8AAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_241AF8EC8();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241AF8BB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_241AF9034();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241AF8CBC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_241AF8FE4(0, &qword_26B0353F0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

void sub_241AF8DD8()
{
  if (!qword_26B034F30)
  {
    sub_241AF8FE4(255, &qword_26B032038);
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034F30);
    }
  }
}

unint64_t sub_241AF8E44()
{
  unint64_t result = qword_26B036B88[0];
  if (!qword_26B036B88[0])
  {
    sub_241A32CC8(255, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, qword_26B036B88);
  }
  return result;
}

unint64_t sub_241AF8EC8()
{
  unint64_t result = qword_26B031F50;
  if (!qword_26B031F50)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_26B031F50);
  }
  return result;
}

void sub_241AF8F0C()
{
  if (!qword_26B030B48)
  {
    sub_241AF8FE4(255, (unint64_t *)&qword_26B030960);
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B030B48);
    }
  }
}

void sub_241AF8F78()
{
  if (!qword_26B035400)
  {
    sub_241AF8FE4(255, &qword_26B0353F0);
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035400);
    }
  }
}

uint64_t sub_241AF8FE4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_241AF9034()
{
  if (!qword_26B0353F8)
  {
    sub_241AF8FE4(255, &qword_26B0353F0);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0353F8);
    }
  }
}

uint64_t type metadata accessor for ActivityDataTypeDetailChartDataSource()
{
  uint64_t result = qword_26B030A88;
  if (!qword_26B030A88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241AF90EC()
{
  uint64_t result = sub_241CD8C50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_241AF91BC()
{
  id result = objc_msgSend(self, sel_activitySummaryType);
  qword_26B041398 = (uint64_t)result;
  return result;
}

uint64_t sub_241AF91F8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  sub_241AFB73C(0, &qword_26B030890, MEMORY[0x263F43E48]);
  uint64_t v72 = v9;
  uint64_t v71 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v73 = (char *)&v68 - v10;
  *(void *)&long long v74 = sub_241CD8BA0();
  uint64_t v69 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  unint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = qword_26B041160;
  *((unsigned char *)v3 + qword_26B041160) = 2;
  size_t v14 = (uint64_t *)((char *)v3 + qword_26B0412F8);
  uint64_t *v14 = 0;
  v14[1] = 0;
  uint64_t v70 = qword_26B041158;
  *(uint64_t *)((char *)v3 + qword_26B041158) = 0;
  *(uint64_t *)((char *)v3 + qword_26B041198) = 0;
  uint64_t v15 = (char *)v3 + qword_26B0411A0;
  uint64_t v16 = sub_241CD8C50();
  uint64_t v75 = *(void *)(v16 - 8);
  uint64_t v76 = v16;
  (*(void (**)(char *, uint64_t))(v75 + 16))(v15, a1);
  uint64_t v17 = (char *)v4 + qword_26B041140;
  uint64_t v68 = a2;
  *(void *)uint64_t v17 = a2;
  v17[8] = a3 & 1;
  swift_retain();
  sub_241CD8C10();
  sub_241A311E0(&v83, *((uint64_t *)&v84 + 1));
  sub_241CD7260();
  unint64_t v18 = (void *)sub_241CD8C30();
  id v19 = objc_msgSend(v18, sel_profileIdentifier);

  sub_241CD8340();
  swift_allocObject();
  uint64_t v20 = sub_241CD8330();
  sub_241A31190((uint64_t)&v83);
  *(uint64_t *)((char *)v4 + qword_26B041190) = v20;
  char v21 = sub_241BA8B08(a1, v8);
  *((unsigned char *)v4 + v13) = v21;
  uint64_t v77 = a1;
  if ((sub_241CD8C40() & 0xFE) == 2)
  {
    if (qword_26B0381A0 != -1) {
      swift_once();
    }
    id v22 = (id)qword_26B041398;
    sub_241CD8B90();
    *(unsigned char *)(swift_allocObject() + 16) = v21;
    uint64_t v23 = sub_241CD8B80();
    uint64_t v25 = v24;

    uint64_t *v14 = v23;
    v14[1] = v25;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    uint64_t v27 = *v14;
    uint64_t v28 = v14[1];
    swift_unknownObjectRetain();
    id v29 = sub_241AF7954(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v31 = v29[2];
    unint64_t v30 = v29[3];
    if (v31 >= v30 >> 1) {
      id v29 = sub_241AF7954((void *)(v30 > 1), v31 + 1, 1, v29);
    }
    v29[2] = v31 + 1;
    id v32 = &v29[2 * v31];
    v32[4] = v27;
    v32[5] = v28;
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, void))(v69 + 8))(v12, v74);
    uint64_t v33 = v29[2];
    if (v33)
    {
LABEL_7:
      swift_bridgeObjectRetain_n();
      uint64_t v34 = v29 + 5;
      uint64_t v35 = (void *)MEMORY[0x263F8EE78];
      do
      {
        uint64_t v37 = *(v34 - 1);
        if (v37)
        {
          uint64_t v38 = *v34;
          swift_unknownObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v35 = sub_241AF7848(0, v35[2] + 1, 1, v35);
          }
          unint64_t v40 = v35[2];
          unint64_t v39 = v35[3];
          if (v40 >= v39 >> 1) {
            uint64_t v35 = sub_241AF7848((void *)(v39 > 1), v40 + 1, 1, v35);
          }
          v35[2] = v40 + 1;
          uint64_t v36 = &v35[2 * v40];
          v36[4] = v37;
          v36[5] = v38;
        }
        v34 += 2;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    char v41 = (a3 & 1) == 0;
    if ((a3 & 1) != 0 || v68 != 2)
    {
      sub_241CB9F30(v21, v41, (uint64_t)v81);
      uint64_t v79 = &type metadata for ActivityDataTypeDetailChartCell.ActiveEnergyDataSourceItem;
      unint64_t v80 = sub_241AFB670();
    }
    else
    {
      sub_241CBA074(v21, v41, (uint64_t)v81);
      uint64_t v79 = &type metadata for ActivityDataTypeDetailChartCell.MoveTimeDataSourceItem;
      unint64_t v80 = sub_241AFB618();
    }
    uint64_t v42 = swift_allocObject();
    v78[0] = v42;
    long long v43 = v81[1];
    *(_OWORD *)(v42 + 16) = v81[0];
    *(_OWORD *)(v42 + 32) = v43;
    *(void *)(v42 + 48) = v82;
    sub_241CD8EC0();
    uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
    sub_241AFB9FC(0, &qword_26B030B50, (uint64_t (*)(uint64_t))sub_241AFB708, MEMORY[0x263F8E0F8]);
    uint64_t v45 = swift_allocObject();
    long long v74 = xmmword_241CEB730;
    *(_OWORD *)(v45 + 16) = xmmword_241CEB730;
    sub_241AFB9FC(0, (unint64_t *)&qword_26B030B48, (uint64_t (*)(uint64_t))sub_241AFB568, v44);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v74;
    sub_241A37260((uint64_t)v78, v46 + 32);
    *(void *)(v45 + 32) = v46;
    uint64_t v47 = sub_241CD8ED0();
    uint64_t v48 = MEMORY[0x263F440A0];
    uint64_t *v14 = v47;
    v14[1] = v48;
    swift_unknownObjectRelease();
    uint64_t v49 = *v14;
    uint64_t v50 = v14[1];
    swift_unknownObjectRetain();
    id v29 = sub_241AF7954(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v52 = v29[2];
    unint64_t v51 = v29[3];
    if (v52 >= v51 >> 1) {
      id v29 = sub_241AF7954((void *)(v51 > 1), v52 + 1, 1, v29);
    }
    v29[2] = v52 + 1;
    uint64_t v53 = &v29[2 * v52];
    v53[4] = v49;
    v53[5] = v50;
    char v54 = sub_241CD8C40();
    sub_241BB3120(v54, (uint64_t)&v83);
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = v74;
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = v74;
    *(void *)(v56 + 56) = &_s38ActivityShowActiveEnergyDataSourceItemVN;
    *(void *)(v56 + 64) = sub_241AFB510();
    uint64_t v57 = swift_allocObject();
    *(void *)(v56 + 32) = v57;
    long long v58 = v84;
    *(_OWORD *)(v57 + 16) = v83;
    *(_OWORD *)(v57 + 32) = v58;
    *(void *)(v57 + 48) = v85;
    *(void *)(v55 + 32) = v56;
    sub_241CD8ED0();
    (*(void (**)(char *, void, uint64_t))(v71 + 104))(v73, *MEMORY[0x263F43E38], v72);
    sub_241AFB73C(0, &qword_26B030898, MEMORY[0x263F43E58]);
    swift_allocObject();
    swift_retain();
    uint64_t v59 = sub_241CD84F0();
    uint64_t v60 = v70;
    *(uint64_t *)((char *)v4 + v70) = v59;
    swift_release();
    uint64_t v61 = *(uint64_t *)((char *)v4 + v60);
    swift_retain();
    swift_release();
    if (v61) {
      unint64_t v62 = sub_241AFB7A4();
    }
    else {
      unint64_t v62 = 0;
    }
    unint64_t v64 = v29[2];
    unint64_t v63 = v29[3];
    if (v64 >= v63 >> 1) {
      id v29 = sub_241AF7954((void *)(v63 > 1), v64 + 1, 1, v29);
    }
    v29[2] = v64 + 1;
    unint64_t v65 = &v29[2 * v64];
    v65[4] = v61;
    v65[5] = v62;
    swift_release();
    sub_241A31190((uint64_t)v78);
    uint64_t v33 = v29[2];
    if (v33) {
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v66 = sub_241CD8AE0();
  if (a3)
  {
    swift_retain();
    if (sub_241CD8C40() <= 1u) {
      sub_241AFAB78();
    }
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v77, v76);
  return v66;
}

uint64_t sub_241AF9B60()
{
  uint64_t v0 = sub_241CD8550();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD8540();
  uint64_t v4 = sub_241CD8530();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_241AF9C38()
{
  uint64_t v0 = sub_241CD8910();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD88F0();
  uint64_t v4 = sub_241CD8900();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

unint64_t sub_241AF9D0C@<X0>(void *a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  id v5 = a1;
  uint64_t v6 = sub_241CDBA00();
  *(void *)(a3 + 24) = &type metadata for SharableModelActivityChartItem;
  unint64_t result = sub_241AFB830();
  *(void *)(a3 + 32) = result;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = a2;
  return result;
}

uint64_t sub_241AF9D64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x270FA5388](v3);
  id v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_241CD8020();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v34 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = &v30[-v11];
  MEMORY[0x270FA5388](v10);
  size_t v14 = &v30[-v13];
  *((unsigned char *)v0 + qword_26B041160) = sub_241BA8B08((uint64_t)v0 + qword_26B0411A0, v2);
  sub_241CD7F00();
  sub_241CDA0E0();
  uint64_t v15 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16);
  v15(v12, v14, v6);
  uint64_t v35 = v5;
  uint64_t v16 = sub_241CDA190();
  os_log_type_t v17 = sub_241CDB670();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v38 = v6;
    uint64_t v20 = v19;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v40 = v33;
    *(_DWORD *)uint64_t v20 = 136315394;
    os_log_t v32 = v16;
    uint64_t v21 = sub_241CDC270();
    uint64_t v39 = sub_241A33FE4(v21, v22, &v40);
    int v31 = v18;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v15(v34, v12, v38);
    uint64_t v23 = sub_241CDB120();
    uint64_t v39 = sub_241A33FE4(v23, v24, &v40);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
    v25(v12, v38);
    uint64_t v16 = v32;
    _os_log_impl(&dword_241A23000, v32, (os_log_type_t)v31, "[%s]: Profile information updated. Updating data sources with activityMoveModeState: %s", (uint8_t *)v20, 0x16u);
    uint64_t v26 = v33;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v26, -1, -1);
    uint64_t v27 = v20;
    uint64_t v6 = v38;
    MEMORY[0x245637F20](v27, -1, -1);
  }
  else
  {
    uint64_t v25 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
    v25(v12, v6);
  }

  (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v35, v37);
  char v28 = (*((unsigned char *)v1 + qword_26B041140 + 8) & 1) == 0;
  sub_241AFA178((uint64_t)v14, v28);
  sub_241AFA574((uint64_t)v14, v28);
  return ((uint64_t (*)(unsigned char *, uint64_t))v25)(v14, v6);
}

uint64_t sub_241AFA178(uint64_t a1, char a2)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v25 - v9;
  uint64_t v11 = sub_241CD8010();
  if (v11 == 2)
  {
    sub_241CBA074(*(unsigned char *)(v2 + qword_26B041160), a2 & 1, (uint64_t)v28);
    uint64_t v26 = &type metadata for ActivityDataTypeDetailChartCell.MoveTimeDataSourceItem;
    unint64_t v27 = sub_241AFB618();
LABEL_5:
    uint64_t v12 = swift_allocObject();
    v25[0] = v12;
    long long v13 = v28[1];
    *(_OWORD *)(v12 + 16) = v28[0];
    *(_OWORD *)(v12 + 32) = v13;
    *(void *)(v12 + 48) = v29;
    if (*(void *)(v2 + qword_26B0412F8) && (sub_241CD8EC0(), swift_dynamicCastClass()))
    {
      sub_241AFB9FC(0, (unint64_t *)&qword_26B030B48, (uint64_t (*)(uint64_t))sub_241AFB568, MEMORY[0x263F8E0F8]);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_241CEB730;
      sub_241A37260((uint64_t)v25, v14 + 32);
      swift_unknownObjectRetain();
      sub_241CD8800();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_241CDA140();
      uint64_t v15 = sub_241CDA190();
      os_log_type_t v16 = sub_241CDB650();
      if (os_log_type_enabled(v15, v16))
      {
        os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v17 = 0;
        _os_log_impl(&dword_241A23000, v15, v16, "Can not update chart data source: Unexpected data source format", v17, 2u);
        MEMORY[0x245637F20](v17, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    return sub_241A31190((uint64_t)v25);
  }
  if (v11 == 1)
  {
    sub_241CB9F30(*(unsigned char *)(v2 + qword_26B041160), a2 & 1, (uint64_t)v28);
    uint64_t v26 = &type metadata for ActivityDataTypeDetailChartCell.ActiveEnergyDataSourceItem;
    unint64_t v27 = sub_241AFB670();
    goto LABEL_5;
  }
  sub_241CDA140();
  uint64_t v19 = sub_241CDA190();
  os_log_type_t v20 = sub_241CDB650();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(void *)&v28[0] = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v23 = sub_241CDB8D0();
    v25[0] = sub_241A33FE4(v23, v24, (uint64_t *)v28);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v19, v20, "Can not configure chart data source: Unhandled HKActivityMoveMode: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v22, -1, -1);
    MEMORY[0x245637F20](v21, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_241AFA574(uint64_t a1, char a2)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AFB73C(0, &qword_26B030890, MEMORY[0x263F43E48]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v28 - v10;
  char v12 = sub_241CD8000();
  uint64_t v13 = qword_26B041158;
  if (*(void *)(v2 + qword_26B041158))
  {
    uint64_t v14 = (unsigned int *)MEMORY[0x263F43E38];
    if (!(a2 & 1 | ((v12 & 1) == 0))) {
      uint64_t v14 = (unsigned int *)MEMORY[0x263F43E40];
    }
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *v14, v8);
    swift_retain();
    sub_241CD84E0();
    swift_release();
  }
  uint64_t v15 = sub_241CD8010();
  if (v15 == 2)
  {
    char v17 = sub_241CD8C40();
    sub_241BB3120(v17, (uint64_t)v33);
    int v31 = &_s38ActivityShowActiveEnergyDataSourceItemVN;
    unint64_t v32 = sub_241AFB510();
    goto LABEL_9;
  }
  if (v15 == 1)
  {
    char v16 = sub_241CD8C40();
    sub_241BB3274(v16, (uint64_t)v33);
    int v31 = &_s37ActivityShowMoveMinutesDataSourceItemVN;
    unint64_t v32 = sub_241AFB5C0();
LABEL_9:
    uint64_t v18 = swift_allocObject();
    v30[0] = v18;
    long long v19 = v33[1];
    *(_OWORD *)(v18 + 16) = v33[0];
    *(_OWORD *)(v18 + 32) = v19;
    *(void *)(v18 + 48) = v34;
    if (*(void *)(v2 + v13))
    {
      swift_retain();
      sub_241CD84D0();
      swift_release();
      sub_241AFB9FC(0, (unint64_t *)&qword_26B030B48, (uint64_t (*)(uint64_t))sub_241AFB568, MEMORY[0x263F8E0F8]);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_241CEB730;
      sub_241A37260((uint64_t)v30, v20 + 32);
      sub_241CD8800();
      swift_release();
      swift_bridgeObjectRelease();
    }
    return sub_241A31190((uint64_t)v30);
  }
  sub_241CDA140();
  uint64_t v22 = sub_241CDA190();
  os_log_type_t v23 = sub_241CDB650();
  if (os_log_type_enabled(v22, v23))
  {
    unint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(void *)&v33[0] = v25;
    *(_DWORD *)unint64_t v24 = 136315138;
    uint64_t v26 = sub_241CDB8D0();
    v30[0] = sub_241A33FE4(v26, v27, (uint64_t *)v33);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v22, v23, "Can not configure chart data source: Unhandled ActivityMoveModeState: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v25, -1, -1);
    MEMORY[0x245637F20](v24, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v6, v4);
}

void sub_241AFA9AC()
{
}

uint64_t sub_241AFA9DC()
{
  uint64_t v1 = v0 + qword_26B0411A0;
  uint64_t v2 = sub_241CD8C50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_241AFAA88()
{
  uint64_t v0 = sub_241CD8AD0() + qword_26B0411A0;
  uint64_t v1 = sub_241CD8C50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0, v1);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241AFAB70()
{
  return type metadata accessor for ActivityDataTypeDetailChartDataSource();
}

uint64_t sub_241AFAB78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0E0();
  uint64_t v6 = sub_241CDA190();
  os_log_type_t v7 = sub_241CDB630();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v13 = sub_241A33FE4(0xD000000000000025, 0x8000000241CEE040, &v14);
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v6, v7, "[%s]: Set up profile information observer", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v9, -1, -1);
    MEMORY[0x245637F20](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_retain();
  uint64_t v10 = sub_241CD8280();
  swift_release();
  uint64_t v14 = v10;
  swift_allocObject();
  swift_weakInit();
  sub_241AFB90C();
  sub_241AFB9A4();
  uint64_t v11 = sub_241CDA820();
  swift_release();
  swift_release();
  *(void *)(v1 + qword_26B041198) = v11;
  return swift_release();
}

uint64_t sub_241AFADFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0E0();
  uint64_t v6 = sub_241CDA190();
  os_log_type_t v7 = sub_241CDB630();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v13 = sub_241A33FE4(0xD00000000000002BLL, 0x8000000241CE03C0, &v14);
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v6, v7, "[%s]: Set up profile information observer", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v9, -1, -1);
    MEMORY[0x245637F20](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_retain();
  uint64_t v10 = sub_241CD8280();
  swift_release();
  uint64_t v14 = v10;
  swift_allocObject();
  swift_weakInit();
  sub_241AFB90C();
  sub_241AFB9A4();
  uint64_t v11 = sub_241CDA820();
  swift_release();
  swift_release();
  *(void *)(v1 + qword_26B0411C0) = v11;
  return swift_release();
}

uint64_t sub_241AFB088(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, unint64_t a5, uint64_t a6)
{
  v27[1] = a6;
  uint64_t v28 = a4;
  unint64_t v29 = a5;
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AFB9FC(0, &qword_26B030950, MEMORY[0x263F43548], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v27 - v12;
  uint64_t v14 = sub_241CD7F10();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_241AFBAA0(a1, (uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
      a3(v17);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    swift_release();
    sub_241AFBB34((uint64_t)v13);
  }
  sub_241CDA0E0();
  swift_retain_n();
  uint64_t v18 = sub_241CDA190();
  os_log_type_t v19 = sub_241CDB670();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v34 = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v33 = sub_241A33FE4(v28, v29, &v34);
    sub_241CDBBF0();
    *(_WORD *)(v20 + 12) = 2080;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      uint64_t v22 = (void *)sub_241CD8C30();
      swift_release();
      id v23 = objc_msgSend(v22, sel_profileIdentifier);
    }
    else
    {
      id v23 = 0;
    }
    uint64_t v32 = (uint64_t)v23;
    sub_241AFB9FC(0, &qword_268D42A88, (uint64_t (*)(uint64_t))sub_241AFBA60, MEMORY[0x263F8D8F0]);
    uint64_t v25 = sub_241CDB120();
    uint64_t v32 = sub_241A33FE4(v25, v26, &v34);
    sub_241CDBBF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v18, v19, "[%s]: Profile information for identifier %s does not exist", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v21, -1, -1);
    MEMORY[0x245637F20](v20, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v10, v31);
}

unint64_t sub_241AFB510()
{
  unint64_t result = qword_26B0308A8;
  if (!qword_26B0308A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0308A8);
  }
  return result;
}

unint64_t sub_241AFB568()
{
  unint64_t result = qword_26B030960;
  if (!qword_26B030960)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B030960);
  }
  return result;
}

unint64_t sub_241AFB5C0()
{
  unint64_t result = qword_26B0308A0;
  if (!qword_26B0308A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0308A0);
  }
  return result;
}

unint64_t sub_241AFB618()
{
  unint64_t result = qword_268D42A78;
  if (!qword_268D42A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42A78);
  }
  return result;
}

unint64_t sub_241AFB670()
{
  unint64_t result = qword_26B0308F8;
  if (!qword_26B0308F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0308F8);
  }
  return result;
}

uint64_t sub_241AFB6C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_241AFB708(uint64_t a1)
{
}

void sub_241AFB73C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD8EC0();
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F440A0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_241AFB7A4()
{
  unint64_t result = qword_26B0353E8;
  if (!qword_26B0353E8)
  {
    sub_241AFB73C(255, &qword_26B030898, MEMORY[0x263F43E58]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0353E8);
  }
  return result;
}

uint64_t sub_241AFB818()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unint64_t sub_241AFB828@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241AF9D0C(a1, *(unsigned char *)(v2 + 16), a2);
}

unint64_t sub_241AFB830()
{
  unint64_t result = qword_268D42A80;
  if (!qword_268D42A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42A80);
  }
  return result;
}

uint64_t sub_241AFB884()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241AFB8BC(uint64_t a1)
{
  return sub_241AFB088(a1, v1, (void (*)(char *))sub_241AF9D64, 0xD000000000000025, 0x8000000241CEE040, (uint64_t)&qword_26B0411A0);
}

void sub_241AFB90C()
{
  if (!qword_26B0309B0)
  {
    sub_241AFB9FC(255, &qword_26B030950, MEMORY[0x263F43548], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0309B0);
    }
  }
}

unint64_t sub_241AFB9A4()
{
  unint64_t result = qword_26B0309A8;
  if (!qword_26B0309A8)
  {
    sub_241AFB90C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0309A8);
  }
  return result;
}

void sub_241AFB9FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_241AFBA60()
{
  unint64_t result = qword_268D42A90;
  if (!qword_268D42A90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268D42A90);
  }
  return result;
}

uint64_t sub_241AFBAA0(uint64_t a1, uint64_t a2)
{
  sub_241AFB9FC(0, &qword_26B030950, MEMORY[0x263F43548], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241AFBB34(uint64_t a1)
{
  sub_241AFB9FC(0, &qword_26B030950, MEMORY[0x263F43548], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241AFBBC0(uint64_t a1)
{
  return sub_241AFB088(a1, v1, (void (*)(char *))sub_241B561E0, 0xD00000000000002BLL, 0x8000000241CE03C0, (uint64_t)&qword_26B0411D0);
}

uint64_t sub_241AFBC14()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AFD254(0, &qword_26B0321C0, MEMORY[0x263F46BE0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v39 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v39 - v14;
  if (!objc_msgSend(v1, sel_hasChangeTypeRawValue)
    || (id v16 = objc_msgSend(v1, sel_changeTypeRawValue)) == 0)
  {
    uint64_t v24 = sub_241CD98D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v15, 1, 1, v24);
    goto LABEL_7;
  }
  char v17 = v16;
  uint64_t v43 = ObjectType;
  uint64_t v44 = v4;
  sub_241CDB0D0();

  sub_241CD98B0();
  uint64_t v18 = sub_241CD98D0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) == 1)
  {
LABEL_7:
    sub_241A3600C();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_241CEB730;
    uint64_t v22 = sub_241CD78B0();
    goto LABEL_8;
  }
  sub_241AFD134((uint64_t)v15, (uint64_t)v13, &qword_26B0321C0, MEMORY[0x263F46BE0]);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v13, v18);
  if (v20 == *MEMORY[0x263F46BD8])
  {
    sub_241A3600C();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_241CEB730;
    uint64_t v22 = sub_241CD78A0();
LABEL_8:
    *(void *)(v21 + 32) = v22;
    *(void *)(v21 + 40) = v23;
    goto LABEL_9;
  }
  if (v20 == *MEMORY[0x263F46BD0])
  {
    sub_241A3600C();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_241CEB730;
    uint64_t v22 = sub_241CD7890();
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v18);
  sub_241CDA0F0();
  id v26 = v1;
  unint64_t v27 = sub_241CDA190();
  int v28 = sub_241CDB650();
  if (os_log_type_enabled(v27, (os_log_type_t)v28))
  {
    int v41 = v28;
    uint64_t v40 = v27;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v46 = v39;
    *(_DWORD *)uint64_t v29 = 136315394;
    id v42 = v26;
    uint64_t v30 = sub_241ABB668();
    uint64_t v45 = sub_241A33FE4(v30, v31, &v46);
    uint64_t v32 = v42;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    if (objc_msgSend(v32, sel_hasChangeTypeRawValue)
      && (id v33 = objc_msgSend(v32, sel_changeTypeRawValue)) != 0)
    {
      uint64_t v34 = v33;
      sub_241CDB0D0();

      sub_241CD98B0();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v10, 1, 1, v18);
    }
    uint64_t v36 = v39;
    uint64_t v35 = v40;
    uint64_t v37 = sub_241CDB120();
    uint64_t v45 = sub_241A33FE4(v37, v38, &v46);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v35, (os_log_type_t)v41, "[%s]: Unknown changeType: %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v36, -1, -1);
    MEMORY[0x245637F20](v29, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v44 + 8))(v6, v3);
  uint64_t v21 = MEMORY[0x263F8EE78];
LABEL_9:
  sub_241AFD1A0((uint64_t)v15, &qword_26B0321C0, MEMORY[0x263F46BE0]);
  return v21;
}

void sub_241AFC1CC(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v37 = sub_241CD6810();
  uint64_t v4 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD6D00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v36 = (char *)&v34 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v16 = (char *)&v34 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v34 - v17;
  id v19 = objc_msgSend(v2, sel_baseTrendLine);
  if (!v19)
  {
    __break(1u);
    goto LABEL_11;
  }
  int v20 = v19;
  uint64_t v34 = v11;
  uint64_t v35 = a1;
  id v21 = objc_msgSend(v19, sel_dateInterval);

  if (!v21)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_241CDB920();

  sub_241CD67B0();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v6, v37);
  id v23 = objc_msgSend(v2, sel_baseTrendLine);
  if (!v23)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v24 = v23;
  id v25 = objc_msgSend(v23, sel_dateInterval);

  if (!v25)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_241CDB920();

  sub_241CD6800();
  v22(v6, v37);
  id v26 = objc_msgSend(v2, sel_changeTrendLine);
  if (!v26)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v16, v18, v7);
    goto LABEL_9;
  }
  unint64_t v27 = v26;
  id v28 = objc_msgSend(v26, sel_dateInterval);
  if (v28)
  {
    uint64_t v29 = v28;
    sub_241CDB920();

    sub_241CD67B0();
    v22(v6, v37);
LABEL_9:
    sub_241CD6C40();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v30(v36, v18, v7);
    v30(v34, v18, v7);
    sub_241CD67C0();
    uint64_t v31 = v35;
    sub_241CD79F0();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v8 + 8);
    v32(v16, v7);
    v32(v18, v7);
    uint64_t v33 = sub_241CD7A10();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 0, 1, v33);
    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_241AFC5E8()
{
  sub_241AFD254(0, &qword_26B0321C0, MEMORY[0x263F46BE0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v10 - v2;
  if (objc_msgSend(v0, sel_hasChangeTypeRawValue)
    && (id v4 = objc_msgSend(v0, sel_changeTypeRawValue)) != 0)
  {
    uint64_t v5 = v4;
    sub_241CDB0D0();

    sub_241CD98B0();
    uint64_t v6 = sub_241CD98D0();
    uint64_t v7 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6) != 1)
    {
      sub_241AFD1A0((uint64_t)v3, &qword_26B0321C0, MEMORY[0x263F46BE0]);
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_241CD98D0();
    uint64_t v7 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  }
  return v7;
}

uint64_t sub_241AFC77C(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v2 = sub_241CD9370();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  MEMORY[0x270FA5388](v2);
  id v26 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AFD254(0, &qword_26B031AE8, MEMORY[0x263F45A90]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = sub_241CD79B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void (*)(uint64_t))MEMORY[0x263F45758];
  sub_241AFD254(0, &qword_26B032048, MEMORY[0x263F45758]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  int v20 = (char *)&v25 - v19;
  uint64_t v28 = v1;
  sub_241AFCBA8((uint64_t)&v25 - v19);
  sub_241AFD134((uint64_t)v20, (uint64_t)v18, &qword_26B032048, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v18, 1, v10) == 1)
  {
    sub_241AFD1A0((uint64_t)v18, &qword_26B032048, MEMORY[0x263F45758]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v18, v10);
    sub_241CD7460();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  sub_241AFD1A0((uint64_t)v20, &qword_26B032048, MEMORY[0x263F45758]);
  sub_241AFCFAC((uint64_t)v9);
  sub_241AFD134((uint64_t)v9, (uint64_t)v7, &qword_26B031AE8, MEMORY[0x263F45A90]);
  uint64_t v22 = v29;
  uint64_t v21 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v7, 1, v30) == 1)
  {
    sub_241AFD1A0((uint64_t)v7, &qword_26B031AE8, MEMORY[0x263F45A90]);
  }
  else
  {
    id v23 = v26;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v7, v21);
    sub_241AFD1FC();
    sub_241CD7460();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v21);
  }
  return sub_241AFD1A0((uint64_t)v9, &qword_26B031AE8, MEMORY[0x263F45A90]);
}

uint64_t sub_241AFCBA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD7820();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v29 - v13;
  int v15 = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
  if (v15 == 4)
  {
    uint64_t v16 = (unsigned int *)MEMORY[0x263F456E0];
    goto LABEL_5;
  }
  if (v15 == 5)
  {
    uint64_t v16 = (unsigned int *)MEMORY[0x263F456D8];
LABEL_5:
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v14, *v16, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    sub_241CD79C0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    uint64_t v17 = sub_241CD79B0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 0, 1, v17);
  }
  sub_241CDA0F0();
  id v19 = v1;
  int v20 = sub_241CDA190();
  os_log_type_t v21 = sub_241CDB650();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = v30;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v32 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v23 = sub_241CDB120();
    uint64_t v32 = sub_241A33FE4(v23, v24, &v31);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    LOBYTE(v32) = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
    uint64_t v25 = sub_241CDB120();
    uint64_t v32 = sub_241A33FE4(v25, v26, &v31);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v20, v21, "[%s]: Date range not handled: %s", (uint8_t *)v22, 0x16u);
    uint64_t v27 = v30;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v27, -1, -1);
    MEMORY[0x245637F20](v22, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v28 = sub_241CD79B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a1, 1, 1, v28);
}

uint64_t sub_241AFCFAC@<X0>(uint64_t a1@<X8>)
{
  if (objc_msgSend(v1, sel_hasObjectTypeIdentifier)
    && (uint64_t v3 = self,
        id v4 = objc_msgSend(v1, sel_objectTypeIdentifier),
        id v5 = objc_msgSend(v3, sel__typeWithIdentifier_, v4),
        v4,
        v5))
  {
    id v6 = objc_msgSend(v5, sel_description, 0x5F646E657254, 0xE600000000000000);
    sub_241CDB0D0();

    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CD9380();

    uint64_t v7 = sub_241CD9370();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = sub_241CD9370();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t sub_241AFD134(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241AFD254(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241AFD1A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241AFD254(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_241AFD1FC()
{
  unint64_t result = qword_26B031AE0;
  if (!qword_26B031AE0)
  {
    sub_241CD9370();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B031AE0);
  }
  return result;
}

void sub_241AFD254(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241AFD2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_241CD9ED0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v18 - v13;
  sub_241AFE17C(a2, (uint64_t)&v18, &qword_26B037EB0, (void (*)(uint64_t))sub_241AFDB3C);
  sub_241A7A618(a1, (uint64_t)v14);
  if (v19)
  {
    swift_retain();
    sub_241A3F384((uint64_t)v14);
    sub_241A5598C(&v18, (uint64_t)&v20);
  }
  else
  {
    int v15 = (void *)*((void *)v14 + 2);
    os_log_type_t v21 = &type metadata for HealthStoreVisionPrescriptionImageAttachmentProvider;
    uint64_t v22 = &off_26F5C2660;
    *(void *)&long long v20 = v15;
    swift_retain();
    id v16 = v15;
    sub_241A3F384((uint64_t)v14);
    sub_241A32ACC((uint64_t)&v18, &qword_26B037EB0, (void (*)(uint64_t))sub_241AFDB3C);
  }
  sub_241A5598C(&v20, v2 + qword_26B037FF8);
  swift_release();
  sub_241A7A618(a1, (uint64_t)v12);
  sub_241CD9EC0();
  sub_241A32ACC(a2, &qword_26B037EB0, (void (*)(uint64_t))sub_241AFDB3C);
  sub_241A3F384(a1);
  sub_241A7A6EC((uint64_t)v12, v2 + qword_26B041200);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2 + qword_26B0411F8, v8, v5);
  return v2;
}

void sub_241AFD534(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void **)sub_241A311E0((void *)(v4 + qword_26B037FF8), *(void *)(v4 + qword_26B037FF8 + 24));
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  uint64_t v11 = *v9;
  id v12 = objc_allocWithZone(MEMORY[0x263F0A0D8]);
  id v13 = a1;
  id v14 = a2;
  swift_retain();
  id v15 = objc_msgSend(v12, sel_initWithHealthStore_, v11);
  id v16 = (void *)swift_allocObject();
  v16[2] = sub_241AFE0A8;
  v16[3] = v10;
  v16[4] = v11;
  v19[4] = sub_241AFE0F8;
  v19[5] = v16;
  v19[0] = MEMORY[0x263EF8330];
  v19[1] = 1107296256;
  v19[2] = sub_241BFF6F8;
  v19[3] = &unk_26F5C2610;
  uint64_t v17 = _Block_copy(v19);
  swift_retain();
  id v18 = v11;
  swift_release();
  objc_msgSend(v15, sel_getAttachmentsForObject_completion_, v13, v17);
  _Block_release(v17);
  swift_release();
}

void sub_241AFD6CC(void *a1, char a2, void *a3, void *a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  sub_241AFE11C(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  id v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v32 - v16;
  if (a2)
  {
    id v31 = a1;
    a5(a1, 1);
    sub_241AFE170(a1, 1);
  }
  else
  {
    uint64_t v32 = a6;
    uint64_t v33 = a5;
    sub_241A313AC(0, &qword_268D421E0);
    id v18 = HKCodableSummaryVisionPrescriptionValue.init(visionPrescription:hasImage:)(a3, a1 & 1);
    sub_241CD9A90();
    uint64_t v19 = *MEMORY[0x263F46C80];
    uint64_t v20 = sub_241CD9970();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v17, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    id v22 = a4;
    id v23 = objc_msgSend(v18, sel_data);
    if (v23)
    {
      unint64_t v24 = v23;
      sub_241A313AC(0, &qword_26B030440);
      uint64_t v25 = sub_241CD6AE0();
      unint64_t v27 = v26;

      uint64_t v28 = (void (*)(uint64_t))MEMORY[0x263F46CA8];
      sub_241AFE17C((uint64_t)v17, (uint64_t)v15, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
      uint64_t v35 = 0;
      memset(v34, 0, sizeof(v34));
      id v29 = sub_241A54648(v25, v27, 18, (uint64_t)v15, (uint64_t)v22, 0, (uint64_t)v34);

      sub_241A37374(v25, v27);
      sub_241A32ACC((uint64_t)v17, (unint64_t *)&qword_26B0321F0, v28);
      id v30 = v29;
      v33(v29, 0);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_241AFD9D4()
{
  return sub_241A31190(v0 + qword_26B037FF8);
}

uint64_t sub_241AFD9E4()
{
  sub_241A3F384(v0 + qword_26B041200);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_241A31190(v0 + qword_26B037FF8);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B038000;
  if (!qword_26B038000) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241AFDAF8()
{
  return swift_initClassMetadata2();
}

unint64_t sub_241AFDB3C()
{
  unint64_t result = qword_26B037EA8;
  if (!qword_26B037EA8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B037EA8);
  }
  return result;
}

void sub_241AFDB94(unint64_t a1, id a2, void (*a3)(id, uint64_t))
{
  if (a2)
  {
    id v5 = a2;
    a3(a2, 1);
  }
  else
  {
    if (a1) {
      unint64_t v6 = a1;
    }
    else {
      unint64_t v6 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRetain();
    id v7 = (id)HKVisionPrescriptionSupportedImageUTTypeIdentifiers();
    sub_241CDA0B0();
    uint64_t v8 = sub_241CDB2C0();

    uint64_t v9 = sub_241C6A134(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    id v10 = sub_241AFDCBC(v6, v9);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (v10) {

    }
    a3((id)(v10 != 0), 0);
  }
}

id sub_241AFDCBC(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = a2;
  uint64_t v5 = sub_241CDA0B0();
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v35 = (char *)v24 - v9;
  if (!(a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_241CDBF50();
  if (!v10) {
    goto LABEL_20;
  }
LABEL_3:
  v24[1] = v3;
  uint64_t v11 = 0;
  unint64_t v28 = a1;
  unint64_t v29 = a1 & 0xC000000000000001;
  unint64_t v25 = a1 + 32;
  uint64_t v32 = v26 + 16;
  uint64_t v33 = v34 + 56;
  uint64_t v12 = (void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v27 = v10;
  while (1)
  {
    if (v29)
    {
      id v13 = (id)MEMORY[0x245637160](v11, v28);
      BOOL v14 = __OFADD__(v11, 1);
      uint64_t v3 = v11 + 1;
      if (v14) {
        goto LABEL_18;
      }
    }
    else
    {
      id v13 = *(id *)(v25 + 8 * v11);
      BOOL v14 = __OFADD__(v11, 1);
      uint64_t v3 = v11 + 1;
      if (v14)
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    uint64_t v30 = v3;
    id v31 = v13;
    a1 = (unint64_t)objc_msgSend(v13, sel_contentType);
    sub_241CDA0A0();

    if (*(void *)(v34 + 16))
    {
      uint64_t v15 = v34;
      sub_241AFE01C(&qword_268D42A98);
      a1 = (unint64_t)v35;
      uint64_t v16 = sub_241CDAFC0();
      uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
      unint64_t v18 = v16 & ~v17;
      if ((*(void *)(v33 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18)) {
        break;
      }
    }
LABEL_4:
    (*v12)(v35, v5);

    uint64_t v11 = v30;
    if (v30 == v27) {
      goto LABEL_20;
    }
  }
  uint64_t v19 = ~v17;
  uint64_t v20 = *(void *)(v26 + 72);
  uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
  while (1)
  {
    v21(v8, *(void *)(v34 + 48) + v20 * v18, v5);
    sub_241AFE01C(&qword_268D42AA0);
    a1 = sub_241CDB050();
    id v22 = *v12;
    (*v12)(v8, v5);
    if (a1) {
      break;
    }
    unint64_t v18 = (v18 + 1) & v19;
    if (((*(void *)(v33 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      goto LABEL_4;
    }
  }
  v22(v35, v5);
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_241AFE01C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241CDA0B0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241AFE060()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_241AFE0A8(void *a1, char a2)
{
  sub_241AFD6CC(a1, a2 & 1, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void (**)(void *, uint64_t))(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_241AFE0B8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241AFE0F8(unint64_t a1, void *a2)
{
  sub_241AFDB94(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_241AFE104(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241AFE114()
{
  return swift_release();
}

void sub_241AFE11C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241AFE170(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_241AFE17C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241AFE11C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

ValueMetadata *type metadata accessor for HealthStoreVisionPrescriptionImageAttachmentProvider()
{
  return &type metadata for HealthStoreVisionPrescriptionImageAttachmentProvider;
}

void sub_241AFE1F8(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  sub_241B0E548(0, (unint64_t *)&unk_26B031AC8, MEMORY[0x263F43D30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = (void *)sub_241CD84A0();
  uint64_t v27 = *(v9 - 1);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v32 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v26 = (char *)&v24 - v12;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v13; uint64_t v13 = sub_241CDBF50())
  {
    uint64_t v30 = (unsigned int (**)(char *, uint64_t, void *))(v27 + 48);
    unint64_t v31 = a3 & 0xC000000000000001;
    unint64_t v29 = (void (**)(char *, char *, void *))(v27 + 32);
    unint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t v14 = 4;
    unint64_t v25 = a3;
    while (1)
    {
      uint64_t v15 = v9;
      uint64_t v16 = v31 ? (void *)MEMORY[0x245637160](v14 - 4, a3) : *(id *)(a3 + 8 * v14);
      uint64_t v9 = v16;
      uint64_t v17 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      id v36 = v16;
      v33(&v36);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }

      uint64_t v9 = v15;
      if ((*v30)(v8, 1, v15) == 1)
      {
        sub_241B076A4((uint64_t)v8, (unint64_t *)&unk_26B031AC8, MEMORY[0x263F43D30]);
      }
      else
      {
        uint64_t v28 = 0;
        unint64_t v18 = *v29;
        uint64_t v19 = v26;
        (*v29)(v26, v8, v15);
        v18(v32, v19, v15);
        unint64_t v20 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v20 = sub_241AF7234(0, *(void *)(v20 + 16) + 1, 1, v20);
        }
        unint64_t v22 = *(void *)(v20 + 16);
        unint64_t v21 = *(void *)(v20 + 24);
        unint64_t v35 = v20;
        uint64_t v4 = v28;
        if (v22 >= v21 >> 1) {
          unint64_t v35 = sub_241AF7234(v21 > 1, v22 + 1, 1, v35);
        }
        unint64_t v23 = v35;
        *(void *)(v35 + 16) = v22 + 1;
        uint64_t v9 = v15;
        v18((char *)(v23+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v22), v32, v15);
        a3 = v25;
      }
      ++v14;
      if (v17 == v13) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
}

unint64_t sub_241AFE5C0(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  unint64_t v29 = a1;
  sub_241B0E548(0, &qword_26B0354E8, (uint64_t (*)(uint64_t))sub_241A55E2C, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v22 - v6;
  sub_241A55E2C();
  uint64_t v28 = v8;
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v27 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v23 = (uint64_t)&v22 - v11;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v12 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; uint64_t v12 = sub_241CDBF50())
  {
    unint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    unint64_t v26 = a3 & 0xC000000000000001;
    unint64_t v13 = MEMORY[0x263F8EE78];
    uint64_t v14 = 4;
    unint64_t v22 = a3;
    while (1)
    {
      id v15 = v26 ? (id)MEMORY[0x245637160](v14 - 4, a3) : *(id *)(a3 + 8 * v14);
      uint64_t v16 = v15;
      uint64_t v17 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      id v30 = v15;
      v29(&v30);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v13;
      }

      if ((*v25)(v7, 1, v28) == 1)
      {
        sub_241B076A4((uint64_t)v7, &qword_26B0354E8, (uint64_t (*)(uint64_t))sub_241A55E2C);
      }
      else
      {
        uint64_t v18 = v23;
        sub_241B07714((uint64_t)v7, v23, (uint64_t (*)(void))sub_241A55E2C);
        sub_241B07714(v18, v27, (uint64_t (*)(void))sub_241A55E2C);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = sub_241AF7518(0, *(void *)(v13 + 16) + 1, 1, v13);
        }
        unint64_t v20 = *(void *)(v13 + 16);
        unint64_t v19 = *(void *)(v13 + 24);
        if (v20 >= v19 >> 1) {
          unint64_t v13 = sub_241AF7518(v19 > 1, v20 + 1, 1, v13);
        }
        *(void *)(v13 + 16) = v20 + 1;
        sub_241B07714(v27, v13+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v20, (uint64_t (*)(void))sub_241A55E2C);
        a3 = v22;
      }
      ++v14;
      if (v17 == v12)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

unint64_t sub_241AFE950(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a2;
  sub_241B0E548(0, &qword_26B032270, (uint64_t (*)(uint64_t))sub_241A68948, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v22 - v7;
  sub_241A68948();
  uint64_t v10 = v9;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v26 = (uint64_t)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v24 = (uint64_t)&v22 - v14;
  uint64_t v25 = *(void *)(a3 + 16);
  if (!v25) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v22 = v13;
  id v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  unint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v23 = a1;
  do
  {
    char v28 = *(unsigned char *)(a3 + v16 + 32);
    a1(&v28);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*v15)(v8, 1, v10) == 1)
    {
      sub_241B076A4((uint64_t)v8, &qword_26B032270, (uint64_t (*)(uint64_t))sub_241A68948);
    }
    else
    {
      uint64_t v18 = v24;
      sub_241B07714((uint64_t)v8, v24, (uint64_t (*)(void))sub_241A68948);
      sub_241B07714(v18, v26, (uint64_t (*)(void))sub_241A68948);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_241AF767C(0, *(void *)(v17 + 16) + 1, 1, v17);
      }
      unint64_t v20 = *(void *)(v17 + 16);
      unint64_t v19 = *(void *)(v17 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v17 = sub_241AF767C(v19 > 1, v20 + 1, 1, v17);
      }
      *(void *)(v17 + 16) = v20 + 1;
      sub_241B07714(v26, v17+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v20, (uint64_t (*)(void))sub_241A68948);
      a1 = v23;
    }
    ++v16;
  }
  while (v25 != v16);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_241AFEC80(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (a3 >> 62) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_241CDBF50())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x245637160](i - 4, a3) : *(id *)(a3 + 8 * i);
      uint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v7;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v12)
      {
        MEMORY[0x2456365D0]();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241CDB2F0();
        }
        sub_241CDB310();
        sub_241CDB2E0();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_241AFEE20(void *(*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v6; ++i)
    {
      char v11 = *(unsigned char *)(a3 + i + 32);
      uint64_t v9 = a1(&v10, &v11);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v10)
      {
        MEMORY[0x2456365D0](v9);
        if (*(void *)(v12 + 16) >= *(void *)(v12 + 24) >> 1) {
          sub_241CDB2F0();
        }
        sub_241CDB310();
        sub_241CDB2E0();
      }
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_241AFEF48(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_241AFEFA0(a1, a2, a3, MEMORY[0x263F46CD8]);
}

uint64_t sub_241AFEF74(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_241AFEFA0(a1, a2, a3, MEMORY[0x263F459A8]);
}

uint64_t sub_241AFEFA0(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v9 = *(void *)(a4(0) - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v12 = a1(&v13, v10);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v13)
      {
        MEMORY[0x2456365D0](v12);
        if (*(void *)(v14 + 16) >= *(void *)(v14 + 24) >> 1) {
          sub_241CDB2F0();
        }
        sub_241CDB310();
        sub_241CDB2E0();
      }
      v10 += v11;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

uint64_t sub_241AFF118(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_241CDBD50();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_241CDBB50(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_241A313AC(0, (unint64_t *)&qword_26B038440);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_241CDBB60();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_241CDBB60();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

uint64_t sub_241AFF278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_241CDC1D0();
    sub_241CDB170();
    uint64_t v6 = sub_241CDC200();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      char v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_241CDC100() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_241CDC100() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_241AFF3B0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_241AF70BC(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(sub_241CD7520() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241AFF560(unint64_t a1)
{
  return sub_241A2FA58(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_241B0A818);
}

uint64_t sub_241AFF578(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_241AF7E28(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  sub_241AF8390();
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241AFF6E0(uint64_t a1)
{
  return sub_241AFFE4C(a1, (uint64_t (*)(void))sub_241AF7F7C, (unint64_t *)&qword_26B035648);
}

uint64_t sub_241AFF708(unint64_t a1)
{
  return sub_241A2FA58(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_241B0AA5C);
}

uint64_t sub_241AFF720(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  int64_t v4 = *v1;
  int64_t v5 = (*v1)[2];
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = result;
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v4;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    int64_t v4 = sub_241AF8014(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    *uint64_t v1 = v4;
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_241A5AEB8((uint64_t)&v45, (uint64_t)&v4[5 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_17;
  }
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFADD__(v13, result);
  uint64_t v15 = v13 + result;
  if (!v14)
  {
    v4[2] = v15;
LABEL_12:
    if (result != v12)
    {
      return sub_241A5B0F4();
    }
LABEL_18:
    int64_t v2 = v4[2];
    int64_t v4 = v45;
    uint64_t v7 = v46;
    int64_t v6 = v48;
    if (v49)
    {
      unint64_t v16 = (v49 - 1) & v49;
      unint64_t v17 = __clz(__rbit64(v49)) | (v48 << 6);
LABEL_20:
      sub_241A37260(v4[7] + 40 * v17, (uint64_t)&v42);
      int64_t v18 = v6;
      goto LABEL_41;
    }
    goto LABEL_22;
  }
  __break(1u);
LABEL_22:
  int64_t v19 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_79;
  }
  int64_t v20 = (unint64_t)(v47 + 64) >> 6;
  int64_t v18 = v6;
  if (v19 < v20)
  {
    unint64_t v21 = *(void *)(v7 + 8 * v19);
    if (v21)
    {
LABEL_25:
      unint64_t v16 = (v21 - 1) & v21;
      unint64_t v17 = __clz(__rbit64(v21)) + (v19 << 6);
      int64_t v6 = v19;
      goto LABEL_20;
    }
    int64_t v22 = v6 + 2;
    int64_t v18 = v6 + 1;
    if (v6 + 2 < v20)
    {
      unint64_t v21 = *(void *)(v7 + 8 * v22);
      if (v21)
      {
LABEL_28:
        int64_t v19 = v22;
        goto LABEL_25;
      }
      int64_t v18 = v6 + 2;
      if (v6 + 3 < v20)
      {
        unint64_t v21 = *(void *)(v7 + 8 * (v6 + 3));
        if (v21)
        {
          int64_t v19 = v6 + 3;
          goto LABEL_25;
        }
        int64_t v22 = v6 + 4;
        int64_t v18 = v6 + 3;
        if (v6 + 4 < v20)
        {
          unint64_t v21 = *(void *)(v7 + 8 * v22);
          if (v21) {
            goto LABEL_28;
          }
          int64_t v19 = v6 + 5;
          int64_t v18 = v6 + 4;
          if (v6 + 5 < v20)
          {
            unint64_t v21 = *(void *)(v7 + 8 * v19);
            if (v21) {
              goto LABEL_25;
            }
            int64_t v18 = v20 - 1;
            int64_t v23 = v6 + 6;
            while (v20 != v23)
            {
              unint64_t v21 = *(void *)(v7 + 8 * v23++);
              if (v21)
              {
                int64_t v19 = v23 - 1;
                goto LABEL_25;
              }
            }
          }
        }
      }
    }
  }
  unint64_t v16 = 0;
  uint64_t v44 = 0;
  long long v42 = 0u;
  long long v43 = 0u;
LABEL_41:
  int64_t v48 = v18;
  unint64_t v49 = v16;
  sub_241B03F60((uint64_t)&v42, (uint64_t)&v40, (uint64_t (*)(void))sub_241B0C564);
  if (!v41)
  {
LABEL_77:
    sub_241B03FC8((uint64_t)&v42, (uint64_t (*)(void))sub_241B0C564);
    sub_241A5B0F4();
    return sub_241B03FC8((uint64_t)&v40, (uint64_t (*)(void))sub_241B0C564);
  }
  while (1)
  {
    sub_241B03FC8((uint64_t)&v40, (uint64_t (*)(void))sub_241B0C564);
    uint64_t v24 = *v1;
    unint64_t v25 = (*v1)[3];
    int64_t v26 = v25 >> 1;
    if ((uint64_t)(v25 >> 1) < v2 + 1)
    {
      uint64_t v24 = sub_241AF8014((void *)(v25 > 1), v2 + 1, 1, *v1);
      *uint64_t v1 = v24;
      int64_t v26 = v24[3] >> 1;
    }
    sub_241B03F60((uint64_t)&v42, (uint64_t)&v38, (uint64_t (*)(void))sub_241B0C564);
    if (v39) {
      break;
    }
LABEL_43:
    sub_241B03FC8((uint64_t)&v38, (uint64_t (*)(void))sub_241B0C564);
LABEL_44:
    (*v1)[2] = v2;
    sub_241B03F60((uint64_t)&v42, (uint64_t)&v40, (uint64_t (*)(void))sub_241B0C564);
    if (!v41) {
      goto LABEL_77;
    }
  }
  uint64_t v27 = v24 + 4;
  sub_241A5598C(&v38, (uint64_t)&v40);
  if (v2 <= v26) {
    int64_t v28 = v26;
  }
  else {
    int64_t v28 = v2;
  }
  if (v2 >= v26)
  {
LABEL_76:
    sub_241A31190((uint64_t)&v40);
    int64_t v2 = v28;
    goto LABEL_44;
  }
  while (1)
  {
    sub_241B03FC8((uint64_t)&v42, (uint64_t (*)(void))sub_241B0C564);
    uint64_t result = sub_241A5598C(&v40, (uint64_t)&v27[5 * v2]);
    int64_t v29 = v48;
    if (!v49) {
      break;
    }
    unint64_t v30 = (v49 - 1) & v49;
    unint64_t v31 = __clz(__rbit64(v49)) | (v48 << 6);
LABEL_54:
    sub_241A37260(v45[7] + 40 * v31, (uint64_t)&v42);
    int64_t v32 = v29;
LABEL_74:
    ++v2;
    int64_t v48 = v32;
    unint64_t v49 = v30;
    sub_241B03F60((uint64_t)&v42, (uint64_t)&v38, (uint64_t (*)(void))sub_241B0C564);
    if (!v39) {
      goto LABEL_43;
    }
    sub_241A5598C(&v38, (uint64_t)&v40);
    if (v2 == v28) {
      goto LABEL_76;
    }
  }
  int64_t v33 = v48 + 1;
  if (!__OFADD__(v48, 1))
  {
    int64_t v34 = (unint64_t)(v47 + 64) >> 6;
    int64_t v32 = v48;
    if (v33 >= v34) {
      goto LABEL_73;
    }
    unint64_t v35 = *(void *)(v46 + 8 * v33);
    if (v35) {
      goto LABEL_58;
    }
    int64_t v36 = v48 + 2;
    int64_t v32 = v48 + 1;
    if (v48 + 2 >= v34) {
      goto LABEL_73;
    }
    unint64_t v35 = *(void *)(v46 + 8 * v36);
    if (v35)
    {
LABEL_61:
      int64_t v33 = v36;
    }
    else
    {
      int64_t v32 = v48 + 2;
      if (v48 + 3 >= v34) {
        goto LABEL_73;
      }
      unint64_t v35 = *(void *)(v46 + 8 * (v48 + 3));
      if (!v35)
      {
        int64_t v36 = v48 + 4;
        int64_t v32 = v48 + 3;
        if (v48 + 4 >= v34) {
          goto LABEL_73;
        }
        unint64_t v35 = *(void *)(v46 + 8 * v36);
        if (!v35)
        {
          int64_t v33 = v48 + 5;
          int64_t v32 = v48 + 4;
          if (v48 + 5 >= v34) {
            goto LABEL_73;
          }
          unint64_t v35 = *(void *)(v46 + 8 * v33);
          if (!v35)
          {
            int64_t v32 = v34 - 1;
            int64_t v37 = v48 + 6;
            while (v34 != v37)
            {
              unint64_t v35 = *(void *)(v46 + 8 * v37++);
              if (v35)
              {
                int64_t v33 = v37 - 1;
                goto LABEL_58;
              }
            }
LABEL_73:
            unint64_t v30 = 0;
            uint64_t v44 = 0;
            long long v42 = 0u;
            long long v43 = 0u;
            goto LABEL_74;
          }
          goto LABEL_58;
        }
        goto LABEL_61;
      }
      int64_t v33 = v48 + 3;
    }
LABEL_58:
    unint64_t v30 = (v35 - 1) & v35;
    unint64_t v31 = __clz(__rbit64(v35)) + (v33 << 6);
    int64_t v29 = v33;
    goto LABEL_54;
  }
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_241AFFC80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_241AF7BF8(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for TrendNotificationModel() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241AFFE24(uint64_t a1)
{
  return sub_241AFFE4C(a1, (uint64_t (*)(void))sub_241AF80CC, &qword_26B032038);
}

uint64_t sub_241AFFE4C(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3)
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v5 = a2();
  unint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  if ((*(void *)(v5 + 24) >> 1) - v11 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v12 = v5 + 40 * v11 + 32;
  if (a1 + 32 < v12 + 40 * v10 && v12 < a1 + 32 + 40 * v10) {
    goto LABEL_21;
  }
  sub_241A35FBC(0, a3);
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v14 = *(void *)(v5 + 16);
  BOOL v15 = __OFADD__(v14, v10);
  uint64_t v16 = v14 + v10;
  if (!v15)
  {
    *(void *)(v5 + 16) = v16;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241AFFFE0(uint64_t a1)
{
  return sub_241AFFE4C(a1, (uint64_t (*)(void))sub_241AF80F4, &qword_26B032068);
}

uint64_t sub_241B00008(void *a1)
{
  uint64_t v2 = sub_241CD6D70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(a1, sel_profileIdentifier, 0xD000000000000017, 0x8000000241CE04C0);
  id v7 = objc_msgSend(v6, sel_identifier);

  sub_241CD6D50();
  sub_241CD6D20();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CD95A0();
  sub_241B035D4(&qword_26B0355E8, 255, MEMORY[0x263F45398]);
  return sub_241CDC140();
}

id sub_241B001E8(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v94 = a3;
  sub_241AABAD0();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = &v78[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v87 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  MEMORY[0x270FA5388](v87);
  unint64_t v12 = &v78[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v86 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x270FA5388](v86);
  os_log_type_t v88 = &v78[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_241CDA1A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = &v78[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s8WorkPlanVMa();
  uint64_t v85 = a1;
  uint64_t v18 = sub_241CD95C0();
  id result = objc_msgSend(self, sel_dataTypeWithCode_, v18);
  if (result)
  {
    BOOL v20 = result;
    uint64_t v89 = v15;
    uint64_t v90 = (void (*)(void))v14;
    uint64_t v21 = v4[2];
    uint64_t v22 = v4[3];
    uint64_t ObjectType = (void *)swift_getObjectType();
    uint64_t v93 = v22;
    uint64_t v84 = *(void *)(v22 + 8);
    uint64_t v91 = v21;
    id v92 = ObjectType;
    sub_241CD93F0();
    swift_retain_n();
    id v24 = v20;
    unint64_t v25 = sub_241CDA190();
    os_log_type_t v26 = sub_241CDB670();
    int v27 = v26;
    BOOL v28 = os_log_type_enabled(v25, v26);
    long long v83 = v10;
    uint64_t v82 = v8;
    if (v28)
    {
      uint64_t v29 = swift_slowAlloc();
      unint64_t v81 = v12;
      uint64_t v30 = v29;
      uint64_t v80 = swift_slowAlloc();
      v99[0] = v80;
      *(_DWORD *)uint64_t v30 = 136446466;
      swift_retain();
      int v79 = v27;
      uint64_t v31 = sub_241B033BC();
      unint64_t v33 = v32;
      swift_release();
      v96[0] = sub_241A33FE4(v31, v33, v99);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      id v34 = objc_msgSend(v24, sel_sensitiveLoggingIdentifier, v30 + 14);
      unint64_t v35 = v4;
      uint64_t v36 = sub_241CDB0D0();
      int64_t v37 = a2;
      unint64_t v39 = v38;

      uint64_t v40 = v36;
      uint64_t v4 = v35;
      v96[0] = sub_241A33FE4(v40, v39, v99);
      sub_241CDBBF0();

      uint64_t v41 = v24;
      a2 = v37;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v25, (os_log_type_t)v79, "%{public}s Starting work for work plan with sample type %{public}s", (uint8_t *)v30, 0x16u);
      uint64_t v42 = v80;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v42, -1, -1);
      uint64_t v43 = v30;
      unint64_t v12 = v81;
      MEMORY[0x245637F20](v43, -1, -1);
    }
    else
    {

      uint64_t v41 = v24;
      swift_release_n();
    }
    (*(void (**)(unsigned char *, void (*)(void)))(v89 + 8))(v17, v90);
    sub_241B035D4(&qword_26B035718, v44, (void (*)(uint64_t))type metadata accessor for SummariesFullProfileExecutor);
    uint64_t v45 = v91;
    sub_241CD7360();
    uint64_t v46 = sub_241CD7330();
    uint64_t v47 = v45;
    int64_t v48 = (void *)v4[4];
    unint64_t v49 = (int *)v86;
    uint64_t v50 = *(int *)(v86 + 24);
    unint64_t v51 = v88;
    uint64_t v89 = v52;
    uint64_t v53 = v46;
    sub_241B03F60(v85, (uint64_t)&v88[v50], (uint64_t (*)(void))_s8WorkPlanVMa);
    sub_241A37260((uint64_t)v99, (uint64_t)v51 + v49[8]);
    id v54 = v41;
    uint64_t v90 = a2;
    id v55 = v54;
    swift_unknownObjectRetain();
    id v56 = v48;
    swift_unknownObjectRetain();
    uint64_t v57 = (void *)sub_241CD7230();
    id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46A40]), sel_initWithHealthStore_, v57);

    uint64_t v59 = v93;
    *unint64_t v51 = v47;
    v51[1] = v59;
    v51[2] = v56;
    *(void *)((char *)v51 + v49[7]) = v55;
    uint64_t v60 = (void *)((char *)v51 + v49[9]);
    uint64_t v93 = v53;
    uint64_t v61 = v89;
    *uint64_t v60 = v53;
    v60[1] = v61;
    uint64_t v62 = v49[10];
    *(void *)((char *)v51 + v62) = objc_msgSend(objc_allocWithZone((Class)sub_241CD8110()), sel_init);
    *(void *)((char *)v51 + v49[11]) = v58;
    *(_OWORD *)unint64_t v12 = xmmword_241CEBF30;
    *((void *)v12 + 3) = 0;
    *((void *)v12 + 4) = 0;
    *((void *)v12 + 2) = 1;
    unint64_t v63 = &v12[*(int *)(v87 + 28)];
    uint64_t v64 = sub_241CD6EE0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 1, 1, v64);
    sub_241A311E0(v4 + 5, v4[8]);
    unint64_t v65 = sub_241B0363C((uint64_t)v51);
    uint64_t v66 = (void *)swift_allocObject();
    v66[2] = v4;
    v66[3] = v55;
    uint64_t v67 = v90;
    v66[4] = v90;
    v66[5] = v94;
    if (v65[2])
    {
      sub_241A37260((uint64_t)(v65 + 4), (uint64_t)v96);
      swift_retain_n();
      id v68 = v55;
      swift_retain_n();
      id v92 = v68;
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      uint64_t v70 = v97;
      uint64_t v71 = v98;
      sub_241A311E0(v96, v97);
      sub_241A37260((uint64_t)v96, (uint64_t)v95);
      uint64_t v72 = (CFAbsoluteTime *)swift_allocObject();
      void v72[2] = Current;
      *((void *)v72 + 3) = MEMORY[0x263F8EE78];
      sub_241A5598C(v95, (uint64_t)(v72 + 4));
      *((void *)v72 + 9) = v4;
      *((void *)v72 + 10) = v65;
      v72[11] = 0.0;
      *((void *)v72 + 12) = sub_241B03F54;
      *((void *)v72 + 13) = v66;
      uint64_t v73 = *(void (**)(unsigned char *, uint64_t (*)(), CFAbsoluteTime *, uint64_t, uint64_t))(v71 + 8);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v73(v12, sub_241B0402C, v72, v70, v71);
      swift_release();
      sub_241A31190((uint64_t)v96);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      id v74 = v92;
    }
    else
    {
      uint64_t v75 = (uint64_t)v83;
      sub_241B03F60((uint64_t)v12, (uint64_t)v83, type metadata accessor for SummariesFullProfileExecutor.StepResult);
      swift_storeEnumTagMultiPayload();
      swift_retain_n();
      id v76 = v55;
      uint64_t v77 = v94;
      swift_retain_n();
      id v74 = v76;
      sub_241B00B5C(v75, MEMORY[0x263F8EE78], (uint64_t)v4, v74, v67, v77);
      sub_241B03FC8(v75, (uint64_t (*)(void))sub_241AABAD0);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_release();
    swift_release();
    sub_241B03FC8((uint64_t)v12, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    sub_241B03FC8((uint64_t)v88, type metadata accessor for SummariesFullProfileExecutor.Request);
    return (id)sub_241A31190((uint64_t)v99);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241B00B5C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v82 = a2;
  long long v83 = a5;
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v73 - v14;
  sub_241AABAD0();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (void **)((char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241B03F60(a1, (uint64_t)v18, (uint64_t (*)(void))sub_241AABAD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v79 = v10;
    uint64_t v80 = v9;
    uint64_t v81 = a6;
    uint64_t v19 = *v18;
    swift_getObjectType();
    sub_241CD93F0();
    swift_retain();
    id v20 = a4;
    id v21 = v19;
    swift_retain();
    id v22 = v20;
    id v23 = v19;
    id v24 = sub_241CDA190();
    os_log_type_t v25 = sub_241CDB650();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      uint64_t v85 = v82;
      *(_DWORD *)uint64_t v27 = 136446722;
      swift_retain();
      LODWORD(v78) = v26;
      uint64_t v28 = sub_241B033BC();
      unint64_t v30 = v29;
      swift_release();
      uint64_t v88 = sub_241A33FE4(v28, v30, &v85);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      id v31 = objc_msgSend(v22, sel_sensitiveLoggingIdentifier);
      uint64_t v32 = sub_241CDB0D0();
      unint64_t v34 = v33;

      uint64_t v88 = sub_241A33FE4(v32, v34, &v85);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2082;
      uint64_t v88 = (uint64_t)v19;
      id v35 = v19;
      sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
      uint64_t v36 = sub_241CDB120();
      uint64_t v88 = sub_241A33FE4(v36, v37, &v85);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241A23000, v24, (os_log_type_t)v78, "%{public}s Work for work plan with sample type %{public}s failed with error: %{public}s", (uint8_t *)v27, 0x20u);
      uint64_t v38 = v82;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v38, -1, -1);
      unint64_t v39 = v83;
      MEMORY[0x245637F20](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v79 + 8))(v13, v80);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v13, v80);
      unint64_t v39 = v83;
    }
    unint64_t v65 = (void *)sub_241CD6A30();
    v39();

    return;
  }
  swift_getObjectType();
  sub_241CD93F0();
  swift_retain_n();
  id v40 = a4;
  swift_bridgeObjectRetain_n();
  id v41 = v40;
  uint64_t v42 = sub_241CDA190();
  uint64_t v43 = sub_241CDB670();
  if (!os_log_type_enabled(v42, (os_log_type_t)v43))
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    ((void (*)(void))v83)(0);
LABEL_19:
    sub_241B03FC8((uint64_t)v18, (uint64_t (*)(void))sub_241AABAD0);
    return;
  }
  os_log_t v76 = v42;
  uint64_t v77 = v15;
  uint64_t v78 = v18;
  uint64_t v79 = v10;
  uint64_t v80 = v9;
  uint64_t v81 = a6;
  uint64_t v44 = swift_slowAlloc();
  uint64_t v74 = swift_slowAlloc();
  uint64_t v88 = v74;
  *(_DWORD *)uint64_t v44 = 136446722;
  swift_retain();
  uint64_t v45 = sub_241B033BC();
  unint64_t v47 = v46;
  swift_release();
  uint64_t v85 = sub_241A33FE4(v45, v47, &v88);
  sub_241CDBBF0();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v44 + 12) = 2082;
  id v48 = objc_msgSend(v41, sel_sensitiveLoggingIdentifier);
  uint64_t v49 = sub_241CDB0D0();
  unint64_t v51 = v50;

  uint64_t v52 = v82;
  uint64_t v85 = sub_241A33FE4(v49, v51, &v88);
  sub_241CDBBF0();

  swift_bridgeObjectRelease();
  uint64_t v75 = (uint8_t *)v44;
  *(_WORD *)(v44 + 22) = 2080;
  int64_t v53 = *(void *)(v52 + 16);
  uint64_t v54 = MEMORY[0x263F8EE78];
  if (!v53)
  {
    uint64_t v66 = v83;
LABEL_18:
    uint64_t v67 = v75;
    uint64_t v85 = v54;
    sub_241AAD70C(0, (unint64_t *)&qword_26B034C78, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_241B075C0();
    uint64_t v68 = sub_241CDAFF0();
    unint64_t v70 = v69;
    swift_bridgeObjectRelease();
    uint64_t v85 = sub_241A33FE4(v68, v70, &v88);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v71 = v76;
    _os_log_impl(&dword_241A23000, v76, (os_log_type_t)v43, "%{public}s Work for work plan with sample type %{public}s succeeded: %s", v67, 0x20u);
    uint64_t v72 = v74;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v72, -1, -1);
    MEMORY[0x245637F20](v67, -1, -1);

    (*(void (**)(char *, uint64_t))(v79 + 8))(v77, v80);
    uint64_t v18 = v78;
    ((void (*)(void))v66)(0);
    goto LABEL_19;
  }
  uint64_t v87 = MEMORY[0x263F8EE78];
  sub_241A521D8(0, v53, 0);
  uint64_t v54 = v87;
  id v55 = (double *)(v52 + 48);
  while (1)
  {
    uint64_t v56 = *((void *)v55 - 1);
    double v57 = *v55;
    uint64_t v85 = *((void *)v55 - 2);
    uint64_t v86 = v56;
    swift_bridgeObjectRetain_n();
    sub_241CDB180();
    double v58 = v57 * 1000.0;
    if ((~COERCE__INT64(v57 * 1000.0) & 0x7FF0000000000000) == 0) {
      break;
    }
    if (v58 <= -9.22337204e18) {
      goto LABEL_21;
    }
    if (v58 >= 9.22337204e18) {
      goto LABEL_22;
    }
    uint64_t v59 = v43;
    uint64_t v84 = (uint64_t)v58;
    sub_241CDC0D0();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v61 = v85;
    uint64_t v60 = v86;
    uint64_t v87 = v54;
    unint64_t v63 = *(void *)(v54 + 16);
    unint64_t v62 = *(void *)(v54 + 24);
    if (v63 >= v62 >> 1)
    {
      sub_241A521D8(v62 > 1, v63 + 1, 1);
      uint64_t v54 = v87;
    }
    *(void *)(v54 + 16) = v63 + 1;
    uint64_t v64 = v54 + 16 * v63;
    *(void *)(v64 + 32) = v61;
    *(void *)(v64 + 40) = v60;
    v55 += 3;
    --v53;
    uint64_t v43 = v59;
    if (!v53)
    {
      uint64_t v66 = v83;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
}

uint64_t sub_241B0145C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t), uint64_t a6)
{
  sub_241AABAD0();
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) <= a2)
  {
    sub_241B03F60(a3, (uint64_t)v16, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
    a5(v16, a4);
    return sub_241B03FC8((uint64_t)v16, (uint64_t (*)(void))sub_241AABAD0);
  }
  else if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = (void *)(a1 + 40 * a2);
    uint64_t v18 = v17 + 4;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    uint64_t v20 = v17[7];
    uint64_t v21 = v17[8];
    id v24 = sub_241A311E0(v18, v20);
    sub_241A37260((uint64_t)v18, (uint64_t)v25);
    id v22 = (CFAbsoluteTime *)swift_allocObject();
    _OWORD v22[2] = Current;
    *((void *)v22 + 3) = a4;
    sub_241A5598C(v25, (uint64_t)(v22 + 4));
    *((void *)v22 + 9) = v6;
    *((void *)v22 + 10) = a1;
    *((void *)v22 + 11) = a2;
    *((void *)v22 + 12) = a5;
    *((void *)v22 + 13) = a6;
    id v23 = *(void (**)(uint64_t, uint64_t (*)(), CFAbsoluteTime *, uint64_t, uint64_t))(v21 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v23(a3, sub_241B0402C, v22, v20, v21);
    return swift_release();
  }
  return result;
}

uint64_t sub_241B01654(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *, uint64_t), uint64_t a8, double a9)
{
  uint64_t v37 = a6;
  uint64_t v38 = a8;
  v36[0] = a5;
  v36[1] = a4;
  uint64_t v41 = *MEMORY[0x263EF8340];
  uint64_t v14 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AABAD0();
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  id v22 = (void **)((char *)v36 - v21);
  CFAbsoluteTime v23 = CFAbsoluteTimeGetCurrent() - a9;
  sub_241B0E548(0, &qword_26B0369B8, (uint64_t (*)(uint64_t))sub_241AF8390, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB730;
  sub_241A311E0(a3, a3[3]);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v26 = a3[4];
  uint64_t v39 = DynamicType;
  uint64_t v40 = v26;
  sub_241B07574();
  *(void *)(inited + 32) = sub_241CDB120();
  *(void *)(inited + 40) = v27;
  *(CFAbsoluteTime *)(inited + 48) = v23;
  uint64_t v39 = a2;
  swift_bridgeObjectRetain();
  sub_241AFF578(inited);
  uint64_t v28 = v39;
  sub_241B03F60(a1, (uint64_t)v22, (uint64_t (*)(void))sub_241AABAD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    unint64_t v29 = *v22;
    *(void *)uint64_t v20 = *v22;
    swift_storeEnumTagMultiPayload();
    id v30 = v29;
    a7(v20, a2);

    id v31 = (uint64_t (*)(void))sub_241AABAD0;
    uint64_t v32 = (uint64_t)v20;
  }
  else
  {
    unint64_t v33 = a7;
    uint64_t v34 = v38;
    sub_241B07714((uint64_t)v22, (uint64_t)v16, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    if (__OFADD__(v37, 1)) {
      __break(1u);
    }
    sub_241B0145C(v36[0], v37 + 1, (uint64_t)v16, v28, v33, v34);
    swift_bridgeObjectRelease();
    id v31 = type metadata accessor for SummariesFullProfileExecutor.StepResult;
    uint64_t v32 = (uint64_t)v16;
  }
  return sub_241B03FC8(v32, v31);
}

uint64_t sub_241B01954()
{
  swift_unknownObjectRelease();

  sub_241A31190(v0 + 40);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SummariesFullProfileExecutor()
{
  return self;
}

void *sub_241B019C0(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    uint64_t v3 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    uint64_t v7 = (void *)a2[2];
    *a1 = v5;
    a1[1] = v6;
    a1[2] = v7;
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v11 = _s8WorkPlanVMa();
    uint64_t v12 = *(int *)(v11 + 20);
    unint64_t v51 = &v9[v12];
    uint64_t v13 = &v10[v12];
    uint64_t v14 = sub_241CD95E0();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_unknownObjectRetain();
    id v16 = v7;
    uint64_t v17 = v11;
    v15(v51, v13, v14);
    uint64_t v18 = *(int *)(v11 + 24);
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    uint64_t v21 = sub_241CD78F0();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_241B0E548(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = *(int *)(v17 + 28);
    os_log_type_t v25 = &v9[v24];
    uint64_t v26 = &v10[v24];
    sub_241AC7534();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = *(int *)(v17 + 32);
    unint64_t v29 = &v9[v28];
    id v30 = &v10[v28];
    sub_241AC75E4();
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
    {
      sub_241B0E548(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
      memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
    }
    uint64_t v35 = a3[7];
    uint64_t v36 = a3[8];
    uint64_t v37 = *(void **)((char *)a2 + v35);
    *(void *)((char *)v3 + v35) = v37;
    uint64_t v38 = (char *)v3 + v36;
    uint64_t v39 = (char *)a2 + v36;
    long long v40 = *(_OWORD *)((char *)a2 + v36 + 24);
    *(_OWORD *)((char *)v3 + v36 + 24) = v40;
    uint64_t v41 = v40;
    uint64_t v42 = **(void (***)(char *, char *, uint64_t))(v40 - 8);
    id v43 = v37;
    v42(v38, v39, v41);
    uint64_t v44 = a3[10];
    *(_OWORD *)((char *)v3 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
    uint64_t v45 = *(void **)((char *)a2 + v44);
    *(void *)((char *)v3 + v44) = v45;
    uint64_t v46 = a3[11];
    unint64_t v47 = *(void **)((char *)a2 + v46);
    *(void *)((char *)v3 + v46) = v47;
    swift_unknownObjectRetain();
    id v48 = v45;
    id v49 = v47;
  }
  return v3;
}

void sub_241B01DD0(uint64_t a1, int *a2)
{
  swift_unknownObjectRelease();

  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = (int *)_s8WorkPlanVMa();
  uint64_t v6 = v4 + v5[5];
  uint64_t v7 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v4 + v5[6];
  uint64_t v9 = sub_241CD78F0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = v4 + v5[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v4 + v5[8];
  sub_241AC75E4();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
  }

  sub_241A31190(a1 + a2[8]);
  swift_unknownObjectRelease();

  uint64_t v17 = *(void **)(a1 + a2[11]);
}

uint64_t sub_241B01FF0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a3[6];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(a2 + v5);
  uint64_t v8 = (int *)_s8WorkPlanVMa();
  uint64_t v9 = v8[5];
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v7 + v9;
  uint64_t v12 = sub_241CD95E0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_unknownObjectRetain();
  id v14 = v4;
  v13(v10, v11, v12);
  uint64_t v15 = v8[6];
  uint64_t v16 = (void *)(v6 + v15);
  uint64_t v17 = (const void *)(v7 + v15);
  uint64_t v18 = sub_241CD78F0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_241B0E548(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = v8[7];
  uint64_t v22 = v6 + v21;
  uint64_t v23 = v7 + v21;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = v8[8];
  uint64_t v26 = (void *)(v6 + v25);
  uint64_t v27 = (const void *)(v7 + v25);
  sub_241AC75E4();
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v28))
  {
    sub_241B0E548(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v26, v27, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
  }
  uint64_t v32 = a3[7];
  uint64_t v33 = a3[8];
  uint64_t v34 = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = v34;
  uint64_t v35 = a1 + v33;
  uint64_t v36 = a2 + v33;
  long long v37 = *(_OWORD *)(a2 + v33 + 24);
  *(_OWORD *)(a1 + v33 + 24) = v37;
  uint64_t v38 = v37;
  uint64_t v39 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
  id v40 = v34;
  v39(v35, v36, v38);
  uint64_t v41 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  uint64_t v42 = *(void **)(a2 + v41);
  *(void *)(a1 + v41) = v42;
  uint64_t v43 = a3[11];
  uint64_t v44 = *(void **)(a2 + v43);
  *(void *)(a1 + v43) = v44;
  swift_unknownObjectRetain();
  id v45 = v42;
  id v46 = v44;
  return a1;
}

void *sub_241B023AC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v6;
  uint64_t v7 = (void *)a2[2];
  uint64_t v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  uint64_t v59 = a3;
  uint64_t v60 = a2;
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  uint64_t v13 = _s8WorkPlanVMa();
  uint64_t v14 = *(int *)(v13 + 20);
  uint64_t v15 = &v11[v14];
  uint64_t v16 = &v12[v14];
  uint64_t v17 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v58 = v13;
  uint64_t v18 = *(int *)(v13 + 24);
  uint64_t v19 = &v11[v18];
  uint64_t v20 = &v12[v18];
  uint64_t v21 = sub_241CD78F0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
LABEL_6:
    sub_241B0E548(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
LABEL_7:
  uint64_t v27 = *(int *)(v58 + 28);
  uint64_t v28 = &v11[v27];
  uint64_t v29 = &v12[v27];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = *(int *)(v58 + 32);
  uint64_t v32 = &v11[v31];
  uint64_t v33 = &v12[v31];
  sub_241AC75E4();
  uint64_t v35 = v34;
  uint64_t v36 = *(void *)(v34 - 8);
  long long v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v32, 1, v34);
  int v39 = v37(v33, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 24))(v32, v33, v35);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v35);
    goto LABEL_12;
  }
  if (v39)
  {
LABEL_12:
    sub_241B0E548(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
    memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v32, v33, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
LABEL_13:
  uint64_t v41 = v59[7];
  uint64_t v42 = *(void **)((char *)v60 + v41);
  uint64_t v43 = *(void **)((char *)a1 + v41);
  *(void *)((char *)a1 + v41) = v42;
  id v44 = v42;

  sub_241AC8320((void *)((char *)a1 + v59[8]), (void *)((char *)v60 + v59[8]));
  uint64_t v45 = v59[9];
  id v46 = (void *)((char *)a1 + v45);
  unint64_t v47 = (void *)((char *)v60 + v45);
  uint64_t v48 = v47[1];
  *id v46 = *v47;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v46[1] = v48;
  uint64_t v49 = v59[10];
  unint64_t v50 = *(void **)((char *)v60 + v49);
  unint64_t v51 = *(void **)((char *)a1 + v49);
  *(void *)((char *)a1 + v49) = v50;
  id v52 = v50;

  uint64_t v53 = v59[11];
  uint64_t v54 = *(void **)((char *)v60 + v53);
  id v55 = *(void **)((char *)a1 + v53);
  *(void *)((char *)a1 + v53) = v54;
  id v56 = v54;

  return a1;
}

uint64_t sub_241B02834(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  id v9 = (int *)_s8WorkPlanVMa();
  uint64_t v10 = v9[5];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = (void *)(v7 + v14);
  uint64_t v16 = (const void *)(v8 + v14);
  uint64_t v17 = sub_241CD78F0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_241B0E548(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = v9[7];
  uint64_t v21 = v7 + v20;
  uint64_t v22 = v8 + v20;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = v9[8];
  int v25 = (void *)(v7 + v24);
  uint64_t v26 = (const void *)(v8 + v24);
  sub_241AC75E4();
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_241B0E548(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  uint64_t v31 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  long long v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  uint64_t v35 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(void *)(a1 + v35) = *(void *)(a2 + v35);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

void *sub_241B02B8C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v7 = a2[2];
  uint64_t v8 = (void *)a1[2];
  a1[1] = v6;
  a1[2] = v7;

  id v56 = a3;
  double v57 = a2;
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  uint64_t v12 = _s8WorkPlanVMa();
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = &v10[v13];
  uint64_t v15 = &v11[v13];
  uint64_t v16 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v55 = v12;
  uint64_t v17 = *(int *)(v12 + 24);
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  uint64_t v20 = sub_241CD78F0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    sub_241B0E548(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_7:
  uint64_t v26 = *(int *)(v55 + 28);
  uint64_t v27 = &v10[v26];
  uint64_t v28 = &v11[v26];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  uint64_t v30 = *(int *)(v55 + 32);
  uint64_t v31 = &v10[v30];
  uint64_t v32 = &v11[v30];
  sub_241AC75E4();
  uint64_t v34 = v33;
  uint64_t v35 = *(void *)(v33 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v31, 1, v33);
  int v38 = v36(v32, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v31, v32, v34);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v34);
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    sub_241B0E548(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
    memcpy(v31, v32, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v31, v32, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
LABEL_13:
  uint64_t v40 = v56[7];
  uint64_t v41 = *(void **)((char *)a1 + v40);
  *(void *)((char *)a1 + v40) = *(void *)((char *)v57 + v40);

  uint64_t v42 = v56[8];
  uint64_t v43 = (char *)a1 + v42;
  id v44 = (char *)v57 + v42;
  sub_241A31190((uint64_t)a1 + v42);
  long long v45 = *((_OWORD *)v44 + 1);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *((_OWORD *)v43 + 1) = v45;
  *((void *)v43 + 4) = *((void *)v44 + 4);
  uint64_t v46 = v56[9];
  unint64_t v47 = (void *)((char *)a1 + v46);
  uint64_t v48 = (void *)((char *)v57 + v46);
  uint64_t v49 = v48[1];
  void *v47 = *v48;
  swift_unknownObjectRelease();
  v47[1] = v49;
  uint64_t v50 = v56[10];
  unint64_t v51 = *(void **)((char *)a1 + v50);
  *(void *)((char *)a1 + v50) = *(void *)((char *)v57 + v50);

  uint64_t v52 = v56[11];
  uint64_t v53 = *(void **)((char *)a1 + v52);
  *(void *)((char *)a1 + v52) = *(void *)((char *)v57 + v52);

  return a1;
}

uint64_t sub_241B03004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B03018);
}

uint64_t sub_241B03018(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = _s8WorkPlanVMa();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241B030C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B030DC);
}

void *sub_241B030DC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = _s8WorkPlanVMa();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SummariesFullProfileExecutor.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B031CA0);
}

uint64_t sub_241B031A4()
{
  uint64_t result = _s8WorkPlanVMa();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241B03260()
{
  return sub_241B00008(*(void **)(v0 + 32));
}

uint64_t sub_241B0327C(uint64_t a1)
{
  uint64_t v3 = sub_241CD94E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(v1 + 32);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  long long v12 = *(_OWORD *)(v1 + 16);
  v8(v6, a1, v3);
  type metadata accessor for SummariesFullProfilePlanner();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = v12;
  *(void *)(v9 + 32) = v7;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v9 + OBJC_IVAR____TtC9Summaries27SummariesFullProfilePlanner_signals, v6, v3);
  swift_unknownObjectRetain();
  id v10 = v7;
  return v9;
}

uint64_t sub_241B033BC()
{
  uint64_t v1 = sub_241CD6D70();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 91;
  v8[1] = 0xE100000000000000;
  sub_241CDC270();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  id v5 = objc_msgSend(*(id *)(v0 + 32), sel_profileIdentifier);
  id v6 = objc_msgSend(v5, sel_identifier);

  sub_241CD6D50();
  sub_241CD6D20();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  return v8[0];
}

uint64_t sub_241B03564()
{
  return sub_241B033BC();
}

uint64_t sub_241B03588()
{
  return sub_241B035D4(&qword_26B0356C8, 255, (void (*)(uint64_t))type metadata accessor for SummariesFullProfilePlanner);
}

uint64_t sub_241B035D4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SummariesFullProfileExecutor.StepResult(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B035050);
}

void *sub_241B0363C(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B0E548(0, &qword_26B035098, MEMORY[0x263F46CD8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v61 = (char *)&v56 - v4;
  uint64_t v5 = type metadata accessor for SharingChartFeedItemStep(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v63 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SnidgetFeedItemStep(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v10 = MEMORY[0x270FA5388](v60);
  uint64_t v62 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v59 = (uint64_t)&v56 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v56 - v14;
  sub_241B0E548(0, &qword_26B035A68, (uint64_t (*)(uint64_t))type metadata accessor for ChartSharableModelStep, v2);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v56 - v17;
  long long v71 = xmmword_241CEE200;
  id v19 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier);
  id v20 = objc_msgSend(v19, sel_type);

  if (v20 == (id)2)
  {
    *((void *)&v73 + 1) = type metadata accessor for FetchExistingModelsStep();
    uint64_t v74 = &off_26F5C7730;
    uint64_t v21 = sub_241A25BC8((uint64_t *)&v72);
    sub_241B03F60(a1, (uint64_t)v21, type metadata accessor for SummariesFullProfileExecutor.Request);
  }
  else
  {
    uint64_t v74 = 0;
    long long v72 = 0u;
    long long v73 = 0u;
  }
  uint64_t v58 = &v72;
  sub_241B04030(a1, (uint64_t)&v67);
  uint64_t v22 = *((void *)&v68 + 1);
  if (*((void *)&v68 + 1))
  {
    int v23 = v18;
    uint64_t v24 = a1;
    uint64_t v25 = v9;
    uint64_t v26 = v7;
    uint64_t v27 = v5;
    uint64_t v28 = v15;
    uint64_t v29 = v69;
    double v57 = sub_241A311E0(&v67, *((uint64_t *)&v68 + 1));
    *((void *)&v76 + 1) = v22;
    uint64_t v30 = *(void *)(v29 + 8);
    uint64_t v15 = v28;
    uint64_t v5 = v27;
    uint64_t v7 = v26;
    uint64_t v9 = v25;
    a1 = v24;
    uint64_t v18 = v23;
    uint64_t v77 = v30;
    uint64_t v31 = sub_241A25BC8((uint64_t *)&v75);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v31, v57, v22);
    sub_241A31190((uint64_t)&v67);
  }
  else
  {
    sub_241B03FC8((uint64_t)&v67, (uint64_t (*)(void))sub_241B0763C);
    uint64_t v77 = 0;
    long long v75 = 0u;
    long long v76 = 0u;
  }
  sub_241B0602C(a1, (uint64_t)v18);
  uint64_t v32 = type metadata accessor for ChartSharableModelStep();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v18, 1, v32) == 1)
  {
    sub_241B076A4((uint64_t)v18, &qword_26B035A68, (uint64_t (*)(uint64_t))type metadata accessor for ChartSharableModelStep);
    long long v78 = 0u;
    long long v79 = 0u;
    uint64_t v80 = 0;
  }
  else
  {
    *((void *)&v79 + 1) = v32;
    uint64_t v80 = &off_26F5C3208;
    uint64_t v33 = sub_241A25BC8((uint64_t *)&v78);
    sub_241B07714((uint64_t)v18, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
  }
  sub_241B03F60(a1, (uint64_t)v15, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v69 = 0;
  long long v67 = 0u;
  long long v68 = 0u;
  v81[3] = v7;
  v81[4] = (uint64_t)&off_26F5C7DD0;
  uint64_t v34 = sub_241A25BC8(v81);
  sub_241B03F60((uint64_t)v15, (uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v35 = (uint64_t)v15;
  uint64_t v36 = v59;
  sub_241B07714(v35, v59, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v37 = v60;
  sub_241A37260(v36 + *(int *)(v60 + 32), (uint64_t)v66);
  sub_241B03FC8(v36, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_241B03FC8((uint64_t)&v67, (uint64_t (*)(void))sub_241B0777C);
  sub_241A5598C(v66, (uint64_t)&v9[*(int *)(v7 + 20)]);
  sub_241B07714((uint64_t)v9, (uint64_t)v34, type metadata accessor for SnidgetFeedItemStep);
  sub_241B06308(a1, v82);
  uint64_t v38 = v62;
  sub_241B03F60(a1, v62, type metadata accessor for SummariesFullProfileExecutor.Request);
  v83[3] = v5;
  v83[4] = (uint64_t)&off_26F5C5200;
  uint64_t v39 = sub_241A25BC8(v83);
  uint64_t v40 = v63;
  sub_241B03F60(v38, v63, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_241A37260(v38 + *(int *)(v37 + 32), v40 + *(int *)(v5 + 20));
  uint64_t v41 = sub_241CD99D0();
  uint64_t v42 = *(void *)(v41 + 16);
  uint64_t v43 = sub_241CD9A30();
  uint64_t v44 = *(void *)(v43 - 8);
  if (v42)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v61, v41+ ((*(unsigned __int8 *)(*(void *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v43 - 8) + 80)), v43);
    uint64_t v45 = 0;
  }
  else
  {
    uint64_t v45 = 1;
  }
  uint64_t v46 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v61, v45, 1, v43);
  swift_bridgeObjectRelease();
  sub_241B03FC8(v62, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v47 = v63;
  sub_241B077E4(v46, v63 + *(int *)(v5 + 24));
  sub_241B07714(v47, (uint64_t)v39, type metadata accessor for SharingChartFeedItemStep);
  sub_241B06FE0(a1, (uint64_t)&v84);
  id v48 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier, sub_241B07410(a1, (uint64_t)&v85));
  unint64_t v49 = (unint64_t)objc_msgSend(v48, sel_type);

  if ((v49 | 2) == 3)
  {
    *((void *)&v87 + 1) = type metadata accessor for CommitModelsStep();
    uint64_t v88 = &off_26F5C2100;
    uint64_t v50 = sub_241A25BC8((uint64_t *)&v86);
    sub_241B03F60(a1, (uint64_t)v50, type metadata accessor for SummariesFullProfileExecutor.Request);
  }
  else
  {
    uint64_t v88 = 0;
    long long v86 = 0u;
    long long v87 = 0u;
  }
  unint64_t v51 = (void *)MEMORY[0x263F8EE78];
  for (uint64_t i = 32; i != 392; i += 40)
  {
    sub_241B03F60((uint64_t)&v70[i], (uint64_t)&v67, (uint64_t (*)(void))sub_241B07878);
    sub_241B07714((uint64_t)&v67, (uint64_t)&v64, (uint64_t (*)(void))sub_241B07878);
    if (v65)
    {
      sub_241A5598C(&v64, (uint64_t)v66);
      sub_241A5598C(v66, (uint64_t)&v64);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v51 = sub_241AF7C40(0, v51[2] + 1, 1, v51);
      }
      unint64_t v54 = v51[2];
      unint64_t v53 = v51[3];
      if (v54 >= v53 >> 1) {
        unint64_t v51 = sub_241AF7C40((void *)(v53 > 1), v54 + 1, 1, v51);
      }
      v51[2] = v54 + 1;
      sub_241A5598C(&v64, (uint64_t)&v51[5 * v54 + 4]);
    }
    else
    {
      sub_241B03FC8((uint64_t)&v64, (uint64_t (*)(void))sub_241B07878);
    }
  }
  sub_241B07878();
  swift_arrayDestroy();
  return v51;
}

uint64_t sub_241B03F0C()
{
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_241B03F54(uint64_t a1, uint64_t a2)
{
  sub_241B00B5C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_241B03F60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241B03FC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_241B04030(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_241CD9D00();
  uint64_t v235 = *(void *)(v4 - 8);
  uint64_t v236 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  v206 = (char *)&v203 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v234 = (char *)&v203 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v233 = (char *)&v203 - v9;
  uint64_t v228 = sub_241CD9BD0();
  uint64_t v227 = *(void *)(v228 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v228);
  uint64_t v225 = (char *)&v203 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v226 = (char *)&v203 - v12;
  uint64_t v209 = sub_241CD9D80();
  uint64_t v208 = *(void *)(v209 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v209);
  int v207 = (char *)&v203 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  v211 = (char *)&v203 - v15;
  uint64_t v219 = sub_241CD9EA0();
  uint64_t v218 = *(void *)(v219 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v219);
  v216 = (char *)&v203 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  int v217 = (char *)&v203 - v18;
  uint64_t v224 = sub_241CD9F10();
  uint64_t v223 = *(void *)(v224 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v224);
  uint64_t v221 = (char *)&v203 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  v222 = (char *)&v203 - v21;
  uint64_t v231 = sub_241CD9F00();
  uint64_t v230 = *(void *)(v231 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v231);
  unint64_t v229 = (char *)&v203 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  unint64_t v232 = (char *)&v203 - v24;
  uint64_t v25 = sub_241CD9ED0();
  uint64_t v239 = *(void *)(v25 - 8);
  uint64_t v240 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  v220 = (char *)&v203 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v210 = (char *)&v203 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v238 = (char *)&v203 - v30;
  uint64_t v214 = sub_241CD9DE0();
  uint64_t v213 = *(void *)(v214 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v214);
  uint64_t v33 = (char *)&v203 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v212 = (char *)&v203 - v34;
  uint64_t v35 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v237 = (uint64_t)&v203 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v241 = (uint64_t)&v203 - v38;
  uint64_t v39 = sub_241CD9E40();
  uint64_t v215 = *(void *)(v39 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v39);
  uint64_t v42 = (char *)&v203 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v44 = (char *)&v203 - v43;
  sub_241B0E548(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  uint64_t v46 = MEMORY[0x270FA5388](v45 - 8);
  uint64_t v242 = (uint64_t)&v203 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v46);
  unint64_t v49 = (char *)&v203 - v48;
  id v50 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier);
  id v51 = objc_msgSend(v50, sel_type);

  if (v51 == (id)2)
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  uint64_t v205 = (uint64_t *)a2;
  uint64_t v52 = *(void **)(a1 + *(int *)(v35 + 28));
  sub_241CDB490();
  uint64_t v53 = sub_241CD9970();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v49, 1, v53) == 1) {
    goto LABEL_4;
  }
  uint64_t v58 = a1;
  uint64_t v59 = v242;
  sub_241A32FDC((uint64_t)v49, v242, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  int v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 88))(v59, v53);
  if (v60 == *MEMORY[0x263F46C30])
  {
    uint64_t v61 = v58;
    v204 = v49;
    (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v59, v53);
    uint64_t v63 = v235;
    uint64_t v62 = v236;
    long long v64 = v233;
    (*(void (**)(char *, uint64_t, uint64_t))(v235 + 32))(v233, v59, v236);
    id v65 = objc_msgSend(v52, sel_code);
    uint64_t v66 = v241;
    sub_241B03F60(v61, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    long long v67 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
    long long v68 = v234;
    v67(v234, v64, v62);
    if (v65 == (id)256)
    {
      uint64_t v69 = type metadata accessor for SleepingWristTemperatureStatisticsCurrentValueSharableModelStep();
      swift_allocObject();
      uint64_t v70 = sub_241C99A70(v66, v68);
      long long v71 = v205;
      v205[3] = v69;
      v71[4] = (uint64_t)&off_26F5C5350;
      *long long v71 = v70;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v62);
    }
    else
    {
      uint64_t v86 = type metadata accessor for StatisticsCurrentValueSharableModelStep();
      uint64_t v87 = swift_allocObject();
      v67((char *)(v87 + qword_26B0411F0), v68, v62);
      uint64_t v88 = v237;
      sub_241B03F60(v66, v237, type metadata accessor for SummariesFullProfileExecutor.Request);
      uint64_t v89 = v238;
      sub_241CD9EC0();
      uint64_t v90 = *(void (**)(char *, uint64_t))(v63 + 8);
      v90(v68, v62);
      sub_241B03FC8(v66, type metadata accessor for SummariesFullProfileExecutor.Request);
      sub_241B07714(v88, v87 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
      (*(void (**)(uint64_t, char *, uint64_t))(v239 + 32))(v87 + qword_26B0411F8, v89, v240);
      uint64_t v91 = v205;
      v205[3] = v86;
      v91[4] = (uint64_t)&off_26F5C5350;
      *uint64_t v91 = v87;
      v90(v64, v62);
    }
    goto LABEL_17;
  }
  if (v60 == *MEMORY[0x263F46C88])
  {
    (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v59, v53);
    uint64_t v72 = v230;
    long long v73 = v232;
    uint64_t v74 = v231;
    (*(void (**)(char *, uint64_t, uint64_t))(v230 + 32))(v232, v59, v231);
    uint64_t v75 = v58;
    uint64_t v76 = v241;
    sub_241B03F60(v75, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
    long long v78 = v229;
    v77(v229, v73, v74);
    long long v79 = v49;
    uint64_t v80 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelStep();
    uint64_t v81 = swift_allocObject();
    v77((char *)(v81 + qword_26B041388), v78, v74);
    uint64_t v82 = v237;
    sub_241B03F60(v76, v237, type metadata accessor for SummariesFullProfileExecutor.Request);
    long long v83 = v238;
    sub_241CD9EC0();
    uint64_t v84 = *(void (**)(char *, uint64_t))(v72 + 8);
    v84(v78, v74);
    sub_241B03FC8(v76, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_241B07714(v82, v81 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(uint64_t, char *, uint64_t))(v239 + 32))(v81 + qword_26B0411F8, v83, v240);
    uint64_t v85 = v205;
    v205[3] = v80;
    v85[4] = (uint64_t)&off_26F5C5350;
    *uint64_t v85 = v81;
    v84(v232, v74);
    uint64_t v56 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
    uint64_t v57 = (uint64_t)v79;
    goto LABEL_18;
  }
  BOOL v92 = v60 == *MEMORY[0x263F46C98];
  v204 = v49;
  if (v92)
  {
    (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v59, v53);
    uint64_t v93 = v227;
    uint64_t v94 = v226;
    uint64_t v95 = v228;
    (*(void (**)(char *, uint64_t, uint64_t))(v227 + 32))(v226, v59, v228);
    uint64_t v96 = v241;
    sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v97 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
    uint64_t v98 = v225;
    v97(v225, v94, v95);
    uint64_t v99 = type metadata accessor for SleepDurationCurrentValueSharableModelStep();
    uint64_t v100 = swift_allocObject();
    uint64_t v101 = v100;
    uint64_t v102 = &qword_26B041380;
LABEL_16:
    v97((char *)(v100 + *v102), v98, v95);
    uint64_t v103 = v237;
    sub_241B03F60(v96, v237, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v104 = v238;
    sub_241CD9EC0();
    uint64_t v105 = *(void (**)(char *, uint64_t))(v93 + 8);
    v105(v98, v95);
    sub_241B03FC8(v96, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_241B07714(v103, v101 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(uint64_t, char *, uint64_t))(v239 + 32))(v101 + qword_26B0411F8, v104, v240);
    long long v106 = v205;
    v205[3] = v99;
    v106[4] = (uint64_t)&off_26F5C5350;
    *long long v106 = v101;
    v105(v94, v95);
LABEL_17:
    uint64_t v56 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
    uint64_t v57 = (uint64_t)v204;
    goto LABEL_18;
  }
  if (v60 == *MEMORY[0x263F46C90])
  {
    (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v59, v53);
    uint64_t v93 = v223;
    uint64_t v94 = v222;
    uint64_t v95 = v224;
    (*(void (**)(char *, uint64_t, uint64_t))(v223 + 32))(v222, v59, v224);
    uint64_t v96 = v241;
    sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v97 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
    uint64_t v98 = v221;
    v97(v221, v94, v95);
    uint64_t v99 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSharableModelStep(0);
    uint64_t v100 = swift_allocObject();
    uint64_t v101 = v100;
    uint64_t v102 = &qword_268D4B198;
    goto LABEL_16;
  }
  if (v60 == *MEMORY[0x263F46C78])
  {
    (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v59, v53);
    uint64_t v107 = v59;
    uint64_t v108 = v239;
    uint64_t v109 = v240;
    uint64_t v110 = *(void (**)(char *, uint64_t, uint64_t))(v239 + 32);
    v110(v220, v107, v240);
    id v111 = objc_msgSend(v52, sel_code);
    uint64_t v112 = v205;
    uint64_t v113 = v241;
    switch((unint64_t)v111)
    {
      case 0x113uLL:
        sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
        uint64_t v114 = v238;
        uint64_t v115 = v220;
        (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v238, v220, v109);
        uint64_t v116 = type metadata accessor for BreathingDisturbancesMostRecentSampleCurrentValueSharableModelStep();
        goto LABEL_36;
      case 0x114uLL:
      case 0x115uLL:
      case 0x116uLL:
      case 0x117uLL:
      case 0x118uLL:
      case 0x119uLL:
      case 0x11AuLL:
      case 0x11BuLL:
      case 0x11DuLL:
      case 0x11EuLL:
        goto LABEL_32;
      case 0x11CuLL:
        sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
        uint64_t v114 = v238;
        uint64_t v115 = v220;
        (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v238, v220, v109);
        uint64_t v116 = type metadata accessor for StateOfMindMostRecentSampleCurrentValueSharableModelStep();
        goto LABEL_36;
      case 0x11FuLL:
        sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
        uint64_t v114 = v238;
        uint64_t v115 = v220;
        (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v238, v220, v109);
        uint64_t v116 = type metadata accessor for GAD7AssessmentMostRecentSampleCurrentValueSharableModelStep();
        goto LABEL_36;
      case 0x120uLL:
        sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
        uint64_t v114 = v238;
        uint64_t v115 = v220;
        (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v238, v220, v109);
        uint64_t v116 = type metadata accessor for PHQ9AssessmentMostRecentSampleCurrentValueSharableModelStep();
        goto LABEL_36;
      default:
        uint64_t v112 = v205;
        uint64_t v113 = v241;
        if (v111 == (id)144)
        {
          sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
          uint64_t v132 = (uint64_t)v238;
          unint64_t v133 = v220;
          (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v238, v220, v109);
          uint64_t v134 = sub_241B0F088(v113, v132);
          v112[3] = type metadata accessor for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep();
          v112[4] = (uint64_t)&off_26F5C5350;
          *uint64_t v112 = v134;
          (*(void (**)(char *, uint64_t))(v108 + 8))(v133, v109);
        }
        else
        {
LABEL_32:
          sub_241B03F60(v58, v113, type metadata accessor for SummariesFullProfileExecutor.Request);
          uint64_t v114 = v238;
          uint64_t v115 = v220;
          (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v238, v220, v109);
          sub_241B0C2F8();
LABEL_36:
          uint64_t v139 = v116;
          uint64_t v140 = swift_allocObject();
          sub_241B07714(v113, v140 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
          v110((char *)(v140 + qword_26B0411F8), (uint64_t)v114, v109);
          v112[3] = v139;
          v112[4] = (uint64_t)&off_26F5C5350;
          *uint64_t v112 = v140;
          (*(void (**)(char *, uint64_t))(v108 + 8))(v115, v109);
        }
        break;
    }
    goto LABEL_17;
  }
  if (v60 == *MEMORY[0x263F46C68])
  {
    (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v59, v53);
    uint64_t v117 = v218;
    uint64_t v118 = v217;
    uint64_t v119 = v219;
    (*(void (**)(char *, uint64_t, uint64_t))(v218 + 32))(v217, v59, v219);
    uint64_t v120 = v241;
    sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v121 = (uint64_t)v216;
    (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v216, v118, v119);
    uint64_t v122 = v49;
    uint64_t v123 = type metadata accessor for MostRecentRangeStatisticsCurrentValueSharableModelStep();
    swift_allocObject();
    uint64_t v124 = sub_241BD02C8(v120, v121);
    id v125 = v205;
    v205[3] = v123;
    v125[4] = (uint64_t)&off_26F5C5350;
    *id v125 = v124;
    (*(void (**)(char *, uint64_t))(v117 + 8))(v118, v119);
    uint64_t v56 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
    uint64_t v57 = (uint64_t)v122;
    goto LABEL_18;
  }
  if (v60 == *MEMORY[0x263F46C60])
  {
    (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v59, v53);
    uint64_t v126 = v215;
    (*(void (**)(char *, uint64_t, uint64_t))(v215 + 32))(v44, v59, v39);
    uint64_t v127 = v58;
    uint64_t v128 = v241;
    sub_241B03F60(v127, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v42, v44, v39);
    uint64_t v129 = type metadata accessor for ActivitySummaryCurrentValueSharableModelStep();
    swift_allocObject();
    uint64_t v130 = (uint64_t)sub_241C83CA8(v128, (uint64_t)v42);
    id v131 = v205;
    v205[3] = v129;
LABEL_30:
    v131[4] = (uint64_t)&off_26F5C5350;
    *id v131 = v130;
    id v137 = *(void (**)(char *, uint64_t))(v126 + 8);
    id v138 = v44;
LABEL_31:
    v137(v138, v39);
    goto LABEL_17;
  }
  if (v60 == *MEMORY[0x263F46C40])
  {
    (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v59, v53);
    uint64_t v126 = v213;
    uint64_t v44 = v212;
    uint64_t v39 = v214;
    (*(void (**)(char *, uint64_t, uint64_t))(v213 + 32))(v212, v59, v214);
    uint64_t v135 = v241;
    sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v33, v44, v39);
    uint64_t v136 = type metadata accessor for AudioExposureCurrentValueSharableModelStep();
    swift_allocObject();
    uint64_t v130 = sub_241AB8174(v135, (uint64_t)v33);
    id v131 = v205;
    v205[3] = v136;
    goto LABEL_30;
  }
  if (v60 == *MEMORY[0x263F46CA0])
  {
    (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v59, v53);
    id v142 = v238;
    uint64_t v141 = v239;
    uint64_t v143 = *(void (**)(char *, uint64_t, uint64_t))(v239 + 32);
    uint64_t v144 = v59;
    uint64_t v145 = v240;
    v143(v238, v144, v240);
    uint64_t v146 = v58;
    uint64_t v147 = v241;
    sub_241B03F60(v146, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    v148 = v210;
    (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v210, v142, v145);
    sub_241B0C2F8();
    uint64_t v150 = v149;
    uint64_t v151 = swift_allocObject();
    sub_241B07714(v147, v151 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
    v143((char *)(v151 + qword_26B0411F8), (uint64_t)v148, v145);
    v152 = v205;
    v205[3] = v150;
    v152[4] = (uint64_t)&off_26F5C5350;
    uint64_t *v152 = v151;
    (*(void (**)(char *, uint64_t))(v141 + 8))(v142, v145);
    goto LABEL_17;
  }
  uint64_t v153 = v239;
  uint64_t v154 = v240;
  if (v60 == *MEMORY[0x263F46C38])
  {
    uint64_t v155 = v242;
    (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v242, v53);
    uint64_t v156 = v208;
    uint64_t v157 = v211;
    uint64_t v158 = v209;
    (*(void (**)(char *, uint64_t, uint64_t))(v208 + 32))(v211, v155, v209);
    uint64_t v159 = v241;
    sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v160 = *(void (**)(char *, char *, uint64_t))(v156 + 16);
    uint64_t v161 = v207;
    v160(v207, v157, v158);
    uint64_t v162 = type metadata accessor for SampleCountMostRecentSampleCurrentValueSharableModelStep();
    uint64_t v163 = swift_allocObject();
    v160((char *)(v163 + qword_268D4B190), v161, v158);
    uint64_t v164 = v237;
    sub_241B03F60(v159, v237, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v165 = v238;
    sub_241CD9EC0();
    uint64_t v166 = *(void (**)(char *, uint64_t))(v156 + 8);
    v166(v161, v158);
    sub_241B03FC8(v159, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_241B07714(v164, v163 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(uint64_t, char *, uint64_t))(v153 + 32))(v163 + qword_26B0411F8, v165, v240);
    uint64_t v167 = v205;
    v205[3] = v162;
    v167[4] = (uint64_t)&off_26F5C5350;
    *uint64_t v167 = v163;
    v166(v211, v158);
    goto LABEL_17;
  }
  if (v60 == *MEMORY[0x263F46C28])
  {
    uint64_t v168 = v242;
    (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v242, v53);
    uint64_t v169 = v223;
    uint64_t v170 = v222;
    uint64_t v39 = v224;
    (*(void (**)(char *, uint64_t, uint64_t))(v223 + 32))(v222, v168, v224);
    uint64_t v171 = v241;
    sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    v172 = v221;
    (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v221, v170, v39);
    uint64_t v173 = type metadata accessor for StandHoursCurrentValueSharableModelStep(0);
    swift_allocObject();
    uint64_t v174 = sub_241AC6428(v171, v172);
LABEL_43:
    id v175 = v205;
    v205[3] = v173;
    v175[4] = (uint64_t)&off_26F5C5350;
    *id v175 = v174;
    id v137 = *(void (**)(char *, uint64_t))(v169 + 8);
    id v138 = v170;
    goto LABEL_31;
  }
  uint64_t v176 = v53;
  if (v60 == *MEMORY[0x263F46C58])
  {
    uint64_t v177 = v241;
    sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v178 = type metadata accessor for OngoingFactorsMostRecentSampleCurrentValueSharableModelStep();
    uint64_t v179 = swift_allocObject();
    uint64_t v180 = v237;
    sub_241B03F60(v177, v237, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v181 = v238;
    sub_241CD9EC0();
    sub_241B03FC8(v177, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_241B07714(v180, v179 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(uint64_t, char *, uint64_t))(v153 + 32))(v179 + qword_26B0411F8, v181, v154);
    v182 = v205;
    v205[3] = v178;
    v182[4] = (uint64_t)&off_26F5C5350;
    uint64_t *v182 = v179;
LABEL_53:
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v242, v176);
    goto LABEL_17;
  }
  if (v60 == *MEMORY[0x263F46C48])
  {
    uint64_t v183 = v241;
    sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v247 = 0;
    long long v245 = 0u;
    long long v246 = 0u;
    uint64_t v184 = type metadata accessor for CardioFitnessMostRecentSampleCurrentValueSharableModelStep();
    memset(v243, 0, sizeof(v243));
    uint64_t v244 = 0;
    swift_allocObject();
    uint64_t v185 = sub_241A79538(v183, (uint64_t)&v245, (uint64_t)v243);
LABEL_52:
    uint64_t v188 = v205;
    v205[3] = v184;
    v188[4] = (uint64_t)&off_26F5C5350;
    *uint64_t v188 = v185;
    goto LABEL_53;
  }
  if (v60 == *MEMORY[0x263F46C20])
  {
    uint64_t v186 = v241;
    sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v184 = type metadata accessor for AFibBurdenMostRecentSampleCurrentValueSharableModelStep();
    long long v245 = 0u;
    long long v246 = 0u;
    uint64_t v247 = 0;
    swift_allocObject();
    uint64_t v185 = sub_241C27844(v186, (uint64_t)&v245);
    goto LABEL_52;
  }
  if (v60 == *MEMORY[0x263F46C80])
  {
    uint64_t v187 = v241;
    sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v184 = type metadata accessor for VisionPrescriptionMostRecentSampleCurrentValueSharableModelStep();
    long long v245 = 0u;
    long long v246 = 0u;
    uint64_t v247 = 0;
    swift_allocObject();
    uint64_t v185 = sub_241AFD2A8(v187, (uint64_t)&v245);
    goto LABEL_52;
  }
  if (v60 == *MEMORY[0x263F46C70])
  {
    uint64_t v189 = v242;
    (*(void (**)(uint64_t, uint64_t))(v54 + 96))(v242, v53);
    uint64_t v170 = v234;
    uint64_t v169 = v235;
    uint64_t v39 = v236;
    (*(void (**)(char *, uint64_t, uint64_t))(v235 + 32))(v234, v189, v236);
    uint64_t v190 = v241;
    sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v191 = v206;
    (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v206, v170, v39);
    uint64_t v173 = type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep(0);
    swift_allocObject();
    uint64_t v174 = sub_241AF0CB8(v190, v191);
    goto LABEL_43;
  }
  if (v60 == *MEMORY[0x263F46C50])
  {
    id v192 = objc_msgSend(self, sel_sharedBehavior);
    if (v192)
    {
      v193 = v192;
      id v194 = objc_msgSend(v192, sel_features);

      if (v194)
      {
        unsigned int v195 = objc_msgSend(v194, sel_harmonia);

        if (v195)
        {
          uint64_t v196 = v241;
          sub_241B03F60(v58, v241, type metadata accessor for SummariesFullProfileExecutor.Request);
          uint64_t v197 = type metadata accessor for BalanceCurrentValueSharableModelStep();
          uint64_t v198 = swift_allocObject();
          id v199 = (uint64_t (**)())(v198
                                + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_currentDateProvider);
          *id v199 = sub_241A947CC;
          v199[1] = 0;
          id v200 = (uint64_t (**)())(v198
                                + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_gregorianCalendarInCurrentTimeZoneProvider);
          *id v200 = sub_241A947D0;
          v200[1] = 0;
          sub_241B07714(v196, v198 + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_request, type metadata accessor for SummariesFullProfileExecutor.Request);
          id v201 = v205;
          v205[3] = v197;
          v201[4] = (uint64_t)&off_26F5C12A0;
        }
        else
        {
          uint64_t v198 = 0;
          v202 = v205;
          *(_OWORD *)(v205 + 3) = 0u;
          *(_OWORD *)(v202 + 1) = 0u;
        }
        *uint64_t v205 = v198;
        goto LABEL_53;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x241B05FF4);
  }
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v242, v53);
  unint64_t v49 = v204;
LABEL_4:
  uint64_t v55 = v205;
  v205[4] = 0;
  *(_OWORD *)uint64_t v55 = 0u;
  *((_OWORD *)v55 + 1) = 0u;
  uint64_t v56 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
  uint64_t v57 = (uint64_t)v49;
LABEL_18:
  sub_241B076A4(v57, (unint64_t *)&qword_26B0321F0, v56);
}

void sub_241B0602C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (id *)((char *)v24 - v8);
  id v10 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier);
  id v11 = objc_msgSend(v10, sel_type);

  sub_241B03F60(a1, (uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
  if (v11 == (id)2)
  {
    sub_241B03FC8((uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
LABEL_10:
    uint64_t v20 = type metadata accessor for ChartSharableModelStep();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 1, 1, v20);
    return;
  }
  id v12 = objc_msgSend(v9[2], sel_profileIdentifier);
  id v13 = objc_msgSend(v12, sel_type);

  if (v13 == (id)3)
  {
    id v14 = objc_msgSend(self, sel_sharedBehavior);
    if (v14)
    {
      uint64_t v15 = v14;
      id v16 = objc_msgSend(v14, sel_features);

      if (v16)
      {
        unsigned __int8 v17 = objc_msgSend(v16, sel_snidgetsTinker);

        sub_241B03FC8((uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
        if ((v17 & 1) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  sub_241B03FC8((uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
LABEL_9:
  uint64_t v18 = HKObjectType.summaryChartModelConfiguration.getter();
  if (v18 == (void *)1) {
    goto LABEL_10;
  }
  uint64_t v21 = (uint64_t)v18;
  uint64_t v22 = v19;
  sub_241B03F60(a1, (uint64_t)v7, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
  sub_241B3F7AC((uint64_t)v7, v21, v22, (uint64_t)v24, a2);
  uint64_t v23 = type metadata accessor for ChartSharableModelStep();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a2, 0, 1, v23);
}

void sub_241B06308(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v120 = a2;
  uint64_t v100 = sub_241CDA1A0();
  uint64_t v101 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v102 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B0E548(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v99 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v105 = (uint64_t)&v94 - v8;
  uint64_t v117 = sub_241CD9BD0();
  uint64_t v114 = *(void *)(v117 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v117);
  uint64_t v103 = (uint64_t)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v104 = (char *)&v94 - v11;
  uint64_t v109 = sub_241CD9BA0();
  uint64_t v116 = *(uint8_t **)(v109 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v109);
  uint64_t v110 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v119 = (char *)&v94 - v14;
  uint64_t v115 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x270FA5388](v115);
  uint64_t v112 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_241CD9D00();
  uint64_t v107 = *(void *)(v16 - 8);
  uint64_t v108 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  long long v106 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  id v111 = (char *)&v94 - v19;
  uint64_t v20 = sub_241CD9970();
  uint64_t v113 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B0E548(0, &qword_26B035098, MEMORY[0x263F46CD8], v4);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v94 - v24;
  uint64_t v26 = sub_241CD9A30();
  uint64_t v118 = *(void *)(v26 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v94 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v94 - v33;
  uint64_t v35 = a1;
  id v36 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier);
  id v37 = objc_msgSend(v36, sel_type);

  if (v37 == (id)1)
  {
    uint64_t v95 = v29;
    uint64_t v96 = v32;
    uint64_t v97 = v22;
    uint64_t v98 = v20;
    uint64_t v38 = v116;
    uint64_t v39 = v117;
    uint64_t v40 = v118;
    uint64_t v115 = v35;
    uint64_t v41 = sub_241CD99D0();
    if (*(void *)(v41 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v40 + 16))(v25, v41 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80)), v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v25, 0, 1, v26);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v25, 1, 1, v26);
    }
    uint64_t v43 = v38;
    uint64_t v44 = v119;
    uint64_t v45 = v39;
    uint64_t v46 = v114;
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v25, 1, v26) == 1)
    {
      sub_241B076A4((uint64_t)v25, &qword_26B035098, MEMORY[0x263F46CD8]);
      uint64_t v47 = v120;
      *(_OWORD *)uint64_t v120 = 0u;
      *((_OWORD *)v47 + 1) = 0u;
      v47[4] = 0;
    }
    else
    {
      uint64_t v48 = v34;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v34, v25, v26);
      unint64_t v49 = v97;
      sub_241CD9990();
      uint64_t v50 = v113;
      uint64_t v51 = v98;
      int v52 = (*(uint64_t (**)(char *, uint64_t))(v113 + 88))(v49, v98);
      if (v52 == *MEMORY[0x263F46C30])
      {
        (*(void (**)(char *, uint64_t))(v50 + 96))(v49, v51);
        uint64_t v53 = v107;
        uint64_t v54 = v111;
        uint64_t v55 = v49;
        uint64_t v56 = v108;
        (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v111, v55, v108);
        sub_241B03F60(v115, v112, type metadata accessor for SummariesFullProfileExecutor.Request);
        uint64_t v57 = (uint64_t)v96;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v96, v48, v26);
        uint64_t v58 = v44;
        sub_241CD9B90();
        uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
        uint64_t v117 = v26;
        uint64_t v60 = v109;
        uint64_t v61 = (uint64_t)v106;
        v59(v106, v54, v56);
        uint64_t v62 = (uint64_t)v110;
        (*((void (**)(char *, char *, uint64_t))v43 + 2))(v110, v58, v60);
        uint64_t v63 = sub_241B0ACA0(v112, v57, v62, v61);
        long long v64 = v48;
        id v65 = v63;
        (*((void (**)(char *, uint64_t))v43 + 1))(v58, v60);
        uint64_t v66 = type metadata accessor for StatisticsTrendSharableModelStep();
        long long v67 = (uint64_t **)v120;
        v120[3] = v66;
        v67[4] = (uint64_t *)&off_26F5C34D0;
        uint8_t *v67 = v65;
        (*(void (**)(char *, uint64_t))(v53 + 8))(v111, v56);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v64, v117);
      }
      else if (v52 == *MEMORY[0x263F46C98])
      {
        (*(void (**)(char *, uint64_t))(v113 + 96))(v49, v51);
        long long v68 = v104;
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v104, v49, v45);
        sub_241B03F60(v115, v112, type metadata accessor for SummariesFullProfileExecutor.Request);
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v96, v48, v26);
        sub_241CD9B90();
        (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v103, v68, v45);
        uint64_t v69 = sub_241CD6D00();
        uint64_t v117 = (uint64_t)v48;
        uint64_t v70 = v69;
        long long v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56);
        v71(v105, 1, 1, v69);
        uint64_t v72 = (uint64_t)v99;
        v71((uint64_t)v99, 1, 1, v70);
        uint64_t v73 = type metadata accessor for SleepTrendSharableModelStep();
        uint64_t v74 = (uint64_t *)swift_allocObject();
        uint64_t v75 = (uint64_t)v110;
        uint64_t v76 = v44;
        uint64_t v77 = v109;
        (*((void (**)(char *, char *, uint64_t))v43 + 2))(v110, v76, v109);
        long long v78 = sub_241B0B18C(v112, (uint64_t)v96, v75, v103, v105, v72, v74);
        (*((void (**)(char *, uint64_t))v43 + 1))(v119, v77);
        long long v79 = (uint64_t **)v120;
        v120[3] = v73;
        v79[4] = (uint64_t *)&off_26F5C34D0;
        *long long v79 = v78;
        (*(void (**)(char *, uint64_t))(v46 + 8))(v104, v45);
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v117, v26);
      }
      else
      {
        uint64_t v80 = (uint64_t)v48;
        swift_getObjectType();
        uint64_t v81 = v102;
        sub_241CD93F0();
        uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
        long long v83 = v95;
        v82(v95, v48, v26);
        uint64_t v84 = sub_241CDA190();
        os_log_type_t v85 = sub_241CDB650();
        if (os_log_type_enabled(v84, v85))
        {
          uint64_t v86 = (uint8_t *)swift_slowAlloc();
          uint64_t v119 = (char *)swift_slowAlloc();
          uint64_t v122 = v119;
          uint64_t v117 = v80;
          *(_DWORD *)uint64_t v86 = 136315138;
          uint64_t v116 = v86 + 4;
          v82(v96, v83, v26);
          uint64_t v87 = sub_241CDB120();
          uint64_t v121 = sub_241A33FE4(v87, v88, (uint64_t *)&v122);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          uint64_t v89 = *(void (**)(char *, uint64_t))(v118 + 8);
          v89(v83, v26);
          _os_log_impl(&dword_241A23000, v84, v85, "Unimplemented trend generator type for %s", v86, 0xCu);
          uint64_t v90 = v119;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v90, -1, -1);
          MEMORY[0x245637F20](v86, -1, -1);

          (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v100);
          v89((char *)v117, v26);
        }
        else
        {

          uint64_t v91 = *(void (**)(char *, uint64_t))(v40 + 8);
          v91(v83, v26);
          (*(void (**)(char *, uint64_t))(v101 + 8))(v81, v100);
          v91((char *)v80, v26);
        }
        BOOL v92 = v120;
        uint64_t v93 = v113;
        v120[4] = 0;
        *BOOL v92 = 0u;
        v92[1] = 0u;
        (*(void (**)(char *, uint64_t))(v93 + 8))(v97, v98);
      }
    }
  }
  else
  {
    uint64_t v42 = v120;
    v120[4] = 0;
    *uint64_t v42 = 0u;
    v42[1] = 0u;
  }
}

double sub_241B06FE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  sub_241B0E548(0, &qword_26B035098, MEMORY[0x263F46CD8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v33 - v4;
  uint64_t v6 = sub_241CD9A30();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v35 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v34 = (char *)&v33 - v10;
  uint64_t v11 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v33 = (uint64_t)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (id *)((char *)&v33 - v14);
  id v16 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier);
  id v17 = objc_msgSend(v16, sel_type);

  sub_241B03F60(a1, (uint64_t)v15, type metadata accessor for SummariesFullProfileExecutor.Request);
  if (v17 == (id)1)
  {
    sub_241B03FC8((uint64_t)v15, type metadata accessor for SummariesFullProfileExecutor.Request);
  }
  else
  {
    id v18 = objc_msgSend(v15[2], sel_profileIdentifier);
    id v19 = objc_msgSend(v18, sel_type);

    sub_241B03FC8((uint64_t)v15, type metadata accessor for SummariesFullProfileExecutor.Request);
    if (v19 != (id)2)
    {
      uint64_t v32 = (_OWORD *)v36;
      *(void *)(v36 + 32) = 0;
      double result = 0.0;
      *uint64_t v32 = 0u;
      v32[1] = 0u;
      return result;
    }
  }
  uint64_t v20 = sub_241CD99D0();
  if (*(void *)(v20 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v20 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v21, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_241B076A4((uint64_t)v5, &qword_26B035098, MEMORY[0x263F46CD8]);
    double result = 0.0;
    uint64_t v23 = v36;
    *(_OWORD *)uint64_t v36 = 0u;
    *(_OWORD *)(v23 + 16) = 0u;
    *(void *)(v23 + 32) = 0;
  }
  else
  {
    uint64_t v24 = v34;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v34, v5, v6);
    uint64_t v25 = a1;
    uint64_t v26 = v33;
    sub_241B03F60(v25, v33, type metadata accessor for SummariesFullProfileExecutor.Request);
    double v27 = *(double *)&v35;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v24, v6);
    uint64_t v28 = type metadata accessor for TrendFeedItemStep();
    uint64_t v29 = (uint64_t *)v36;
    *(void *)(v36 + 24) = v28;
    v29[4] = (uint64_t)&off_26F5C1DA8;
    uint64_t v30 = sub_241A25BC8(v29);
    double v31 = sub_241AC6BA4(v26, v27, (uint64_t)v30);
    (*(void (**)(char *, uint64_t, double))(v7 + 8))(v24, v6, v31);
  }
  return result;
}

double sub_241B07410@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A313AC(0, (unint64_t *)&qword_26B038440);
  uint64_t v8 = sub_241CDB460();
  id v9 = *(id *)(a1 + *(int *)(v5 + 36));
  char v10 = sub_241AFF118(v9, v8);

  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0
    && (id v11 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier),
        uint64_t v12 = (char *)objc_msgSend(v11, sel_type),
        v11,
        (unint64_t)(v12 - 1) <= 1))
  {
    sub_241B03F60(a1, (uint64_t)v7, type metadata accessor for SummariesFullProfileExecutor.Request);
    *(void *)(a2 + 24) = type metadata accessor for AlertFeedItemStep();
    *(void *)(a2 + 32) = &off_26F5C4ED0;
    uint64_t v13 = sub_241A25BC8((uint64_t *)a2);
    sub_241BCBF94((uint64_t)v7, (uint64_t)v13);
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

unint64_t sub_241B07574()
{
  unint64_t result = qword_26B0357E0;
  if (!qword_26B0357E0)
  {
    sub_241A35FBC(255, &qword_26B0357D0);
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0357E0);
  }
  return result;
}

unint64_t sub_241B075C0()
{
  unint64_t result = qword_26B038E50;
  if (!qword_26B038E50)
  {
    sub_241AAD70C(255, (unint64_t *)&qword_26B034C78, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B038E50);
  }
  return result;
}

void sub_241B0763C()
{
  if (!qword_268D42AA8)
  {
    sub_241A35FBC(255, &qword_268D42AB0);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42AA8);
    }
  }
}

uint64_t sub_241B076A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241B0E548(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241B07714(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_241B0777C()
{
  if (!qword_26B035520)
  {
    sub_241A35FBC(255, &qword_26B035518);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035520);
    }
  }
}

uint64_t sub_241B077E4(uint64_t a1, uint64_t a2)
{
  sub_241B0E548(0, &qword_26B035098, MEMORY[0x263F46CD8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241B07878()
{
  if (!qword_26B0357D8)
  {
    sub_241A35FBC(255, &qword_26B0357D0);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0357D8);
    }
  }
}

void sub_241B078E0(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = sub_241CD9B00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68948();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (unsigned __int8 *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v58) = a2;
  uint64_t v54 = v3;
  uint64_t v55 = v16;
  id v17 = &v15[*(int *)(v12 + 48)];
  unint64_t v53 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = a1 + v53;
  uint64_t v60 = *(void *)(v13 + 72);
  uint64_t v57 = a1;
  swift_bridgeObjectRetain();
  sub_241B03F60(v18, (uint64_t)v15, (uint64_t (*)(void))sub_241A68948);
  uint64_t v56 = v8;
  id v19 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 32);
  unsigned __int8 v66 = *v15;
  uint64_t v20 = v66;
  uint64_t v61 = v7;
  uint64_t v62 = v10;
  uint64_t v59 = v17;
  v19(v10, v17, v7);
  uint64_t v21 = (void *)*a3;
  unint64_t v23 = sub_241C0B70C(v20);
  uint64_t v24 = v21[2];
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25)) {
    goto LABEL_23;
  }
  char v27 = v22;
  if (v21[3] >= v26)
  {
    if (v58)
    {
      if (v22) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_241B081E0();
      if (v27) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v32 = (void *)*a3;
    *(void *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    *(unsigned char *)(v32[6] + v23) = v20;
    uint64_t v33 = v32[7];
    uint64_t v58 = *(void *)(v56 + 72);
    uint64_t v34 = v61;
    v19((char *)(v33 + v58 * v23), (unsigned __int8 *)v62, v61);
    uint64_t v35 = v32[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v32[2] = v37;
    uint64_t v38 = v55 - 1;
    if (v55 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v39 = v57 + v60 + v53;
    while (1)
    {
      sub_241B03F60(v39, (uint64_t)v15, (uint64_t (*)(void))sub_241A68948);
      unsigned __int8 v66 = *v15;
      uint64_t v40 = v66;
      v19(v62, v59, v34);
      uint64_t v41 = (void *)*a3;
      unint64_t v42 = sub_241C0B70C(v40);
      uint64_t v44 = v41[2];
      BOOL v45 = (v43 & 1) == 0;
      BOOL v36 = __OFADD__(v44, v45);
      uint64_t v46 = v44 + v45;
      if (v36) {
        break;
      }
      char v47 = v43;
      if (v41[3] < v46)
      {
        sub_241B093C8(v46, 1);
        unint64_t v42 = sub_241C0B70C(v40);
        if ((v47 & 1) != (v48 & 1)) {
          goto LABEL_25;
        }
      }
      if (v47) {
        goto LABEL_10;
      }
      unint64_t v49 = (void *)*a3;
      *(void *)(*a3 + 8 * (v42 >> 6) + 64) |= 1 << v42;
      *(unsigned char *)(v49[6] + v42) = v40;
      uint64_t v34 = v61;
      v19((char *)(v49[7] + v58 * v42), (unsigned __int8 *)v62, v61);
      uint64_t v50 = v49[2];
      BOOL v36 = __OFADD__(v50, 1);
      uint64_t v51 = v50 + 1;
      if (v36) {
        goto LABEL_24;
      }
      v49[2] = v51;
      v39 += v60;
      if (!--v38) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_241B093C8(v26, v58 & 1);
  unint64_t v28 = sub_241C0B70C(v20);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v23 = v28;
    if ((v27 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v30 = (void *)swift_allocError();
    swift_willThrow();
    id v65 = v30;
    id v31 = v30;
    sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v62, v61);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_241CDC170();
  __break(1u);
LABEL_26:
  uint64_t v63 = 0;
  unint64_t v64 = 0xE000000000000000;
  sub_241CDBE00();
  sub_241CDB180();
  sub_241CDBEB0();
  sub_241CDB180();
  sub_241CDBF10();
  __break(1u);
}

void *sub_241B07E3C()
{
  uint64_t v42 = sub_241CD7190();
  uint64_t v45 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_241CD7020();
  uint64_t v44 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A55D80();
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_241CDBF70();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v46 = v4;
  if (!v5)
  {
    unint64_t result = (void *)swift_release();
    uint64_t v31 = v46;
    uint64_t v30 = v32;
LABEL_25:
    *uint64_t v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  unint64_t result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v46;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  uint64_t v43 = v3;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v45;
  uint64_t v14 = v44;
  uint64_t v37 = v45 + 16;
  uint64_t v38 = v44 + 16;
  uint64_t v35 = v45 + 32;
  uint64_t v36 = v44 + 32;
  uint64_t v15 = v39;
  uint64_t v16 = v40;
  uint64_t v17 = v42;
  uint64_t v18 = v46;
  while (1)
  {
    if (v12)
    {
      unint64_t v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v47 = v9;
      unint64_t v20 = v19 | (v9 << 6);
      uint64_t v21 = v43;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v21 = v43;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    int64_t v28 = v9 + 1;
    if (!v27)
    {
      int64_t v28 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v28);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    int64_t v47 = v28;
    unint64_t v20 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v14 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(void *)(v21 + 48) + v22, v16);
    unint64_t v23 = *(void *)(v13 + 72) * v20;
    unint64_t v24 = *(void *)(v21 + 56) + v23;
    BOOL v25 = v41;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v41, v24, v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v18 + 48) + v22, v15, v16);
    unint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v18 + 56) + v23, v25, v17);
    int64_t v9 = v47;
  }
  int64_t v29 = v26 + 2;
  if (v29 >= v34)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    uint64_t v30 = v32;
    uint64_t v31 = v46;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_241B081E0()
{
  uint64_t v1 = sub_241CD9B00();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A687C0();
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_241CDBF70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  unint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    unint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    char v17 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
    unint64_t v18 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(unsigned char *)(*(void *)(v7 + 48) + v16) = v17;
    unint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_241B08464()
{
  uint64_t v1 = v0;
  sub_241B0C634(0, &qword_268D42AE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241CDBF70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_241A340B8(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_241A54AA0(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_241B0866C()
{
  uint64_t v36 = sub_241CD6D00();
  uint64_t v1 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B0C5CC();
  uint64_t v31 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_241CDBF70();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v37 = v5;
  if (!v6)
  {
    unint64_t result = (void *)swift_release();
    uint64_t v29 = v37;
    int64_t v28 = v31;
LABEL_28:
    *int64_t v28 = v29;
    return result;
  }
  uint64_t v7 = v5;
  unint64_t result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    unint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v37;
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  uint64_t v32 = v4 + 64;
  int64_t v33 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v34 = v1 + 32;
  uint64_t v35 = v1 + 16;
  uint64_t v15 = v36;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      int64_t v11 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v11);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v26 - 1) & v26;
    unint64_t v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v22, v15);
    uint64_t v23 = v37;
    int64_t v24 = (void *)(*(void *)(v37 + 48) + v18);
    *int64_t v24 = v20;
    v24[1] = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v23 + 56) + v22, v3, v15);
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    int64_t v28 = v31;
    uint64_t v29 = v37;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_241B08928()
{
  uint64_t v1 = v0;
  sub_241B0C634(0, &qword_268D42AD8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241CDBF70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_241ADE86C(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_241A340B8(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    unint64_t result = sub_241A54AA0(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_241B08B30()
{
  uint64_t v1 = v0;
  sub_241B0C634(0, &qword_268D42AD0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241CDBF70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_241B08D04()
{
  uint64_t v1 = v0;
  sub_241B0C4C8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241CDBF70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    sub_241A37260(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_241A5598C(v22, *(void *)(v4 + 56) + v18);
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_241B08ECC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = sub_241CD7190();
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD7020();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_241A55D80();
  int v50 = a2;
  uint64_t v12 = sub_241CDBF80();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v44 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v45 = v5 + 16;
  uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v48 = v5;
  uint64_t v49 = v8;
  uint64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v51 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v43) {
      break;
    }
    unint64_t v26 = v44;
    unint64_t v27 = v44[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v27 = v44[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v44[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v43) {
              goto LABEL_34;
            }
            unint64_t v27 = v44[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v49 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v50)
    {
      (*v18)(v10, v30, v7);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      (*v46)(v10, v30, v7);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_241B035D4(&qword_26B0354C8, 255, MEMORY[0x263F42CD0]);
    uint64_t result = sub_241CDAFC0();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v7);
    uint64_t result = (*v51)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v26 = v44;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_241B093C8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v45 = sub_241CD9B00();
  uint64_t v5 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_241A687C0();
  int v43 = a2;
  uint64_t v8 = sub_241CDBF80();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v41 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  BOOL v39 = v2;
  int64_t v40 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v40) {
      break;
    }
    unint64_t v22 = v41;
    unint64_t v23 = v41[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v23 = v41[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v41[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v23 = v41[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v7 + 56);
    uint64_t v26 = v7;
    char v27 = *(unsigned char *)(*(void *)(v7 + 48) + v20);
    uint64_t v28 = v5;
    uint64_t v29 = *(void *)(v5 + 72);
    uint64_t v30 = v25 + v29 * v20;
    if (v43) {
      (*v14)(v44, v30, v45);
    }
    else {
      (*v42)(v44, v30, v45);
    }
    sub_241CDC1D0();
    sub_241CD9FA0();
    sub_241CDB170();
    swift_bridgeObjectRelease();
    uint64_t result = sub_241CDC200();
    uint64_t v31 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(unsigned char *)(*(void *)(v9 + 48) + v18) = v27;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v29 * v18, v44, v45);
    ++*(void *)(v9 + 16);
    uint64_t v5 = v28;
    uint64_t v7 = v26;
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v22 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v7 + 32);
  if (v38 >= 64) {
    bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v38;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_241B097BC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_241B0C634(0, &qword_268D42AE8);
  char v6 = a2;
  uint64_t v7 = sub_241CDBF80();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v35 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v14 << 6);
      }
      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34) {
          goto LABEL_34;
        }
        unint64_t v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          int64_t v14 = v19 + 1;
          if (v19 + 1 >= v34) {
            goto LABEL_34;
          }
          unint64_t v20 = v35[v14];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v14 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v34) {
                  goto LABEL_34;
                }
                unint64_t v20 = v35[v14];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v14 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      unint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      uint64_t v25 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v18);
      if (v6)
      {
        sub_241A54AA0(v25, v36);
      }
      else
      {
        sub_241A340B8((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_241CDC1D0();
      sub_241CDB170();
      uint64_t result = sub_241CDC200();
      uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = (void *)(*(void *)(v8 + 48) + 16 * v15);
      void *v16 = v24;
      v16[1] = v23;
      uint64_t result = (uint64_t)sub_241A54AA0(v36, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_241B09AE0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_241CD6D00();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_241B0C5CC();
  int v47 = a2;
  uint64_t v8 = sub_241CDBF80();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  int64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    uint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    unint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_241CDC1D0();
    sub_241CDB170();
    uint64_t result = sub_241CDC200();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    *int64_t v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  uint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_241B09EC4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_241B0C634(0, &qword_268D42AD8);
  uint64_t v6 = sub_241CDBF80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_241A54AA0((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_241ADE86C(v25, (uint64_t)&v38);
      sub_241A340B8(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_241CDBD80();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_241A54AA0(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_241B0A1FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_241B0C634(0, &qword_268D42AD0);
  char v42 = a2;
  uint64_t v6 = sub_241CDBF80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_241CDC1D0();
    sub_241CDB170();
    uint64_t result = sub_241CDC200();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_241B0A53C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_241B0C4C8();
  uint64_t v6 = sub_241CDBF80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    unint64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    int64_t v23 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (a2)
    {
      sub_241A5598C(v23, (uint64_t)v34);
    }
    else
    {
      sub_241A37260((uint64_t)v23, (uint64_t)v34);
      id v24 = v22;
    }
    uint64_t result = sub_241CDBB50();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = sub_241A5598C(v34, *(void *)(v7 + 56) + 40 * v15);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_241B0A818(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_241B0C3D8();
        sub_241B035D4(&qword_268D42AC8, 255, (void (*)(uint64_t))sub_241B0C3D8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_241B5D06C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241A313AC(0, (unint64_t *)&qword_26B038440);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241B0AA5C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_241A68C1C();
        sub_241B035D4(&qword_268D42AB8, 255, (void (*)(uint64_t))sub_241A68C1C);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_241B5D000(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241A313AC(0, &qword_268D421C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t *sub_241B0ACA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = a1;
  uint64_t v58 = a4;
  uint64_t v53 = a3;
  uint64_t v55 = a2;
  uint64_t v4 = sub_241CD6D00();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v56 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v54 = (char *)&v41 - v7;
  uint64_t v8 = sub_241CD97E0();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v52 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = sub_241CD9D00();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  uint64_t v44 = v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v16;
  uint64_t v17 = sub_241CD9A30();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v48 = v17;
  uint64_t v49 = v18;
  MEMORY[0x270FA5388](v17);
  unint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v42 = v20;
  uint64_t v21 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x270FA5388](v21 - 8);
  int64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v23;
  uint64_t v46 = sub_241CD9BA0();
  uint64_t v24 = *(void *)(v46 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v46);
  int v47 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  char v28 = (char *)&v41 - v27;
  (*(void (**)(char *, uint64_t))(v24 + 32))((char *)&v41 - v27, v53);
  sub_241B03F60(v57, (uint64_t)v23, type metadata accessor for SummariesFullProfileExecutor.Request);
  unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v30 = v55;
  v29(v20, v55, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v58, v13);
  sub_241CD9CB0();
  uint64_t v31 = (uint64_t)v54;
  sub_241CD97D0();
  uint64_t v32 = v51;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v50 + 8);
  v33(v12, v51);
  uint64_t v34 = v52;
  sub_241CD99B0();
  uint64_t v35 = (uint64_t)v56;
  sub_241CD97D0();
  v33(v34, v32);
  type metadata accessor for StatisticsTrendSharableModelStep();
  uint64_t v36 = (uint64_t *)swift_allocObject();
  uint64_t v37 = v46;
  uint64_t v38 = (uint64_t)v47;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v47, v28, v46);
  long long v39 = sub_241B0BCA4((uint64_t)v45, (uint64_t)v42, v38, (uint64_t)v41, v31, v35, v36);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v58, v43);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v37);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v30, v48);
  sub_241B03FC8(v57, type metadata accessor for SummariesFullProfileExecutor.Request);
  return v39;
}

uint64_t *sub_241B0B18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v103 = a7;
  uint64_t v110 = a6;
  uint64_t v111 = a5;
  uint64_t v117 = a2;
  uint64_t v112 = a1;
  uint64_t v8 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v102 = (uint64_t)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_241CD9A30();
  uint64_t v99 = *(void *)(v113 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v113);
  uint64_t v101 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v97 = (char *)&v83 - v12;
  uint64_t v107 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241B0E548(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v91 = (uint64_t)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v89 = (uint64_t)&v83 - v16;
  uint64_t v114 = sub_241CD6D00();
  uint64_t v106 = *(void *)(v114 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v114);
  uint64_t v100 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v98 = (char *)&v83 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v116 = (char *)&v83 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v115 = (char *)&v83 - v23;
  uint64_t v24 = sub_241CD97E0();
  uint64_t v105 = *(void (***)(void, uint64_t))(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_241CD9D00();
  uint64_t v108 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v94 = (char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v90 = (char *)&v83 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (uint64_t (*)(uint64_t))((char *)&v83 - v32);
  uint64_t v34 = sub_241CD9BA0();
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  BOOL v92 = (char *)&v83 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v95 = v37;
  uint64_t v38 = *(void (**)(void))(v37 + 32);
  uint64_t v93 = (char *)&v83 - v39;
  uint64_t v96 = v40;
  v38();
  uint64_t v104 = a4;
  sub_241CD9BC0();
  sub_241B0E548(0, &qword_26B034F70, MEMORY[0x263F46B90], MEMORY[0x263F8E0F8]);
  uint64_t v41 = sub_241CD9840();
  uint64_t v42 = *(void *)(v41 - 8);
  unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_241CEB730;
  unint64_t v45 = v44 + v43;
  uint64_t v46 = v105;
  uint64_t v47 = v41;
  uint64_t v48 = v108;
  (*(void (**)(unint64_t, void, uint64_t))(v42 + 104))(v45, *MEMORY[0x263F46B80], v47);
  ((void (*)(char *, void, uint64_t))v46[13])(v26, *MEMORY[0x263F46AB8], v24);
  uint64_t v49 = v106;
  sub_241CD9CE0();
  uint64_t v50 = v89;
  sub_241A32FDC(v111, v89, &qword_26B0385B8, v107);
  uint64_t v51 = *(void (**)(void))(v48 + 16);
  uint64_t v52 = v90;
  uint64_t v107 = v33;
  uint64_t v88 = v48 + 16;
  uint64_t v87 = v51;
  v51();
  uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  int v53 = v86(v50, 1, v114);
  uint64_t v109 = v27;
  uint64_t v85 = v24;
  uint64_t v84 = v26;
  if (v53 == 1)
  {
    sub_241CD9CB0();
    sub_241CD97D0();
    ((void (**)(char *, uint64_t))v46)[1](v26, v24);
    uint64_t v90 = *(char **)(v48 + 8);
    ((void (*)(char *, uint64_t))v90)(v52, v27);
    sub_241B076A4(v50, &qword_26B0385B8, MEMORY[0x263F07490]);
    uint64_t v54 = v114;
  }
  else
  {
    uint64_t v90 = *(char **)(v48 + 8);
    ((void (*)(char *, uint64_t))v90)(v52, v27);
    uint64_t v54 = v114;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v115, v50, v114);
  }
  uint64_t v55 = v91;
  sub_241A32FDC(v110, v91, &qword_26B0385B8, MEMORY[0x263F07490]);
  uint64_t v56 = v99;
  uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 16);
  uint64_t v58 = v97;
  uint64_t v59 = v113;
  v57(v97, v117, v113);
  int v60 = v86(v55, 1, v54);
  uint64_t v61 = v116;
  if (v60 == 1)
  {
    uint64_t v62 = v84;
    sub_241CD99B0();
    sub_241CD97D0();
    uint64_t v59 = v113;
    ((void (**)(char *, uint64_t))v105)[1](v62, v85);
    uint64_t v63 = *(void (***)(void, uint64_t))(v56 + 8);
    uint64_t v99 = (v56 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v105 = v63;
    ((void (*)(char *, uint64_t))v63)(v58, v59);
    sub_241B076A4(v55, &qword_26B0385B8, MEMORY[0x263F07490]);
    uint64_t v64 = v106;
  }
  else
  {
    id v65 = *(void (***)(void, uint64_t))(v56 + 8);
    uint64_t v99 = (v56 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v105 = v65;
    ((void (*)(char *, uint64_t))v65)(v58, v59);
    uint64_t v64 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 32))(v61, v55, v54);
  }
  uint64_t v66 = v54;
  uint64_t v67 = v102;
  sub_241B03F60(v112, v102, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v68 = (uint64_t)v101;
  v57(v101, v117, v59);
  uint64_t v69 = (uint64_t)v94;
  ((void (*)(char *, uint64_t (*)(uint64_t), uint64_t))v87)(v94, v107, v109);
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  uint64_t v71 = (uint64_t)v98;
  v70(v98, v115, v66);
  uint64_t v72 = (uint64_t)v100;
  v70(v100, v116, v66);
  uint64_t v73 = v95;
  uint64_t v74 = (uint64_t)v92;
  uint64_t v75 = v93;
  uint64_t v76 = v96;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v92, v93, v96);
  uint64_t v77 = sub_241B0BCA4(v67, v68, v74, v69, v71, v72, v103);
  long long v78 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241B076A4(v110, &qword_26B0385B8, MEMORY[0x263F07490]);
  sub_241B076A4(v111, &qword_26B0385B8, v78);
  uint64_t v79 = sub_241CD9BD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v104, v79);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v76);
  ((void (*)(uint64_t, uint64_t))v105)(v117, v113);
  sub_241B03FC8(v112, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v80 = *(void (**)(char *, uint64_t))(v64 + 8);
  uint64_t v81 = v114;
  v80(v116, v114);
  v80(v115, v81);
  ((void (*)(uint64_t (*)(uint64_t), uint64_t))v90)(v107, v109);
  return v77;
}

uint64_t *sub_241B0BCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v63 = a5;
  uint64_t v49 = a2;
  uint64_t v51 = *a7;
  uint64_t v58 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v58);
  int v60 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_241CD6810();
  uint64_t v14 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_241CD9BA0();
  v67[3] = v17;
  v67[4] = MEMORY[0x263F47068];
  uint64_t v18 = sub_241A25BC8(v67);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v18, a3, v17);
  uint64_t v62 = a1;
  sub_241B03F60(a1, (uint64_t)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v19 = (char *)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_configuration;
  uint64_t v20 = sub_241CD9A30();
  uint64_t v57 = *(void *)(v20 - 8);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  uint64_t v52 = v20;
  uint64_t v54 = v57 + 16;
  int v53 = v21;
  ((void (*)(char *, uint64_t))v21)(v19, a2);
  sub_241A37260((uint64_t)v67, (uint64_t)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_trendAnalysisEngine);
  uint64_t v22 = (char *)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_statisticsQueryConfiguration;
  uint64_t v23 = sub_241CD9D00();
  uint64_t v55 = *(void *)(v23 - 8);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v55 + 16);
  uint64_t v56 = v23;
  v24(v22, a4);
  uint64_t v25 = (char *)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_anchorDate;
  uint64_t v26 = sub_241CD6D00();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v28(v25, v63, v26);
  v28((char *)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_endingDate, a6, v26);
  uint64_t v59 = a6;
  uint64_t v61 = a4;
  sub_241BD8BE8(a6, a4, v51, (uint64_t)v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))((uint64_t)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_queryDateInterval, v16, v50);
  uint64_t v29 = v49;
  uint64_t v30 = sub_241CD99A0();
  uint64_t v65 = v29;
  unint64_t v31 = sub_241AFE950((void (*)(void))sub_241B0C2DC, (uint64_t)v64, v30);
  swift_bridgeObjectRelease();
  if (*(void *)(v31 + 16))
  {
    sub_241A687C0();
    uint64_t v32 = sub_241CDBF90();
  }
  else
  {
    uint64_t v32 = MEMORY[0x263F8EE80];
  }
  unint64_t v66 = v32;
  uint64_t v33 = swift_bridgeObjectRetain();
  sub_241B078E0(v33, 1, &v66);
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_engineParameters) = v66;
  sub_241AAD70C(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v35 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v36 = v62;
  uint64_t v37 = *(void **)(v62 + *(int *)(v35 + 28));
  *(void *)(inited + 32) = v37;
  unint64_t v66 = inited;
  sub_241CDB2E0();
  unint64_t v38 = v66;
  uint64_t v39 = (uint64_t)v60;
  uint64_t v40 = v52;
  v53(v60, v29, v52);
  swift_storeEnumTagMultiPayload();
  id v41 = v37;
  uint64_t v42 = sub_241B7417C(v38, v39, 1);
  uint64_t v44 = v43;
  swift_bridgeObjectRelease();
  unint64_t v45 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v45(v59, v26);
  v45(v63, v26);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v61, v56);
  sub_241A31190((uint64_t)v67);
  sub_241B03FC8(v36, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_241B03FC8(v39, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v29, v40);
  uint64_t v46 = (uint64_t *)((char *)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_uniqueIdentifier);
  *uint64_t v46 = v42;
  v46[1] = v44;
  return a7;
}

uint64_t sub_241B0C2DC@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_241B51700(a1, a2);
}

void sub_241B0C2F8()
{
  if (!qword_26B037F28)
  {
    sub_241A313AC(255, &qword_26B0304D8);
    unint64_t v0 = type metadata accessor for MostRecentSampleCurrentValueSharableModelStep();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B037F28);
    }
  }
}

uint64_t sub_241B0C364()
{
  swift_bridgeObjectRelease();
  sub_241A31190(v0 + 32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_241B0C3BC(uint64_t a1)
{
  return sub_241B01654(a1, *(void *)(v1 + 24), (void *)(v1 + 32), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void (**)(char *, uint64_t))(v1 + 96), *(void *)(v1 + 104), *(double *)(v1 + 16));
}

void sub_241B0C3D8()
{
  if (!qword_268D42AC0)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B038440);
    unint64_t v0 = sub_241CDB320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42AC0);
    }
  }
}

unint64_t sub_241B0C440()
{
  unint64_t result = qword_26B034C70;
  if (!qword_26B034C70)
  {
    sub_241B0E548(255, &qword_26B034C68, type metadata accessor for SummaryModelConfiguration, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B034C70);
  }
  return result;
}

void sub_241B0C4C8()
{
  if (!qword_26B034ED8)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B038440);
    sub_241A35FBC(255, (unint64_t *)&qword_26B032070);
    sub_241AD5E58();
    unint64_t v0 = sub_241CDBFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034ED8);
    }
  }
}

void sub_241B0C564()
{
  if (!qword_26B032078)
  {
    sub_241A35FBC(255, (unint64_t *)&qword_26B032070);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032078);
    }
  }
}

void sub_241B0C5CC()
{
  if (!qword_268D42AE0)
  {
    sub_241CD6D00();
    unint64_t v0 = sub_241CDBFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42AE0);
    }
  }
}

void sub_241B0C634(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_241CDBFA0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

ValueMetadata *type metadata accessor for SummariesFullProfileExecutor.StepFactory()
{
  return &type metadata for SummariesFullProfileExecutor.StepFactory;
}

char *sub_241B0C694(char *a1, char **a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    if (*a2 == (char *)1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v9 = a2[1];
      *(void *)a1 = v7;
      *((void *)a1 + 1) = v9;
      uint64_t v10 = v7;
      uint64_t v11 = v9;
    }
    uint64_t v12 = a2[2];
    if (v12 == (char *)1)
    {
      *((_OWORD *)v4 + 1) = *((_OWORD *)a2 + 1);
    }
    else
    {
      uint64_t v13 = a2[3];
      *((void *)v4 + 2) = v12;
      *((void *)v4 + 3) = v13;
      uint64_t v14 = v12;
      uint64_t v15 = v13;
    }
    uint64_t v16 = a2[4];
    *((void *)v4 + 4) = v16;
    uint64_t v17 = *(int *)(a3 + 28);
    uint64_t v18 = &v4[v17];
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_241CD6EE0();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    uint64_t v23 = v16;
    if (v22(v19, 1, v20))
    {
      sub_241B0E548(0, &qword_26B032000, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
      memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  return v4;
}

uint64_t sub_241B0C890(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != 1)
  {
  }
  uint64_t v4 = *(void **)(a1 + 16);
  if (v4 != (void *)1)
  {
  }
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_241CD6EE0();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_241B0C990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  if (*(void *)a2 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v7 = *(void **)(a2 + 8);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    id v8 = v6;
    id v9 = v7;
  }
  uint64_t v10 = *(void **)(a2 + 16);
  if (v10 == (void *)1)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  else
  {
    uint64_t v11 = *(void **)(a2 + 24);
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v11;
    id v12 = v10;
    id v13 = v11;
  }
  uint64_t v14 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v14;
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_241CD6EE0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  id v21 = v14;
  if (v20(v17, 1, v18))
  {
    sub_241B0E548(0, &qword_26B032000, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

void *sub_241B0CB3C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)*a1;
  uint64_t v7 = *(void **)a2;
  if (*a1 == 1)
  {
    if (v7 != (void *)1)
    {
      *a1 = v7;
      id v8 = *(void **)(a2 + 8);
      a1[1] = v8;
      id v9 = v7;
      id v10 = v8;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == (void *)1)
  {
    sub_241B03FC8((uint64_t)a1, (uint64_t (*)(void))sub_241B0CDFC);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = v7;
  id v11 = v7;

  id v12 = (void *)a1[1];
  id v13 = *(void **)(a2 + 8);
  a1[1] = v13;
  id v14 = v13;

LABEL_8:
  uint64_t v15 = (void *)a1[2];
  uint64_t v16 = *(void **)(a2 + 16);
  if (v15 == (void *)1)
  {
    if (v16 != (void *)1)
    {
      a1[2] = v16;
      uint64_t v17 = *(void **)(a2 + 24);
      a1[3] = v17;
      id v18 = v16;
      id v19 = v17;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v16 == (void *)1)
  {
    sub_241B03FC8((uint64_t)(a1 + 2), (uint64_t (*)(void))sub_241B0CE7C);
LABEL_13:
    *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
    goto LABEL_15;
  }
  a1[2] = v16;
  id v20 = v16;

  id v21 = (void *)a1[3];
  uint64_t v22 = *(void **)(a2 + 24);
  a1[3] = v22;
  id v23 = v22;

LABEL_15:
  uint64_t v24 = (void *)a1[4];
  uint64_t v25 = *(void **)(a2 + 32);
  a1[4] = v25;
  id v26 = v25;

  uint64_t v27 = *(int *)(a3 + 28);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)(a2 + v27);
  uint64_t v30 = sub_241CD6EE0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v28, v29, v30);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_20;
  }
  if (v34)
  {
LABEL_20:
    sub_241B0E548(0, &qword_26B032000, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  return a1;
}

void sub_241B0CDFC()
{
  if (!qword_26B038190)
  {
    sub_241A313AC(255, &qword_26B030440);
    unint64_t v0 = type metadata accessor for SharableModelAudiencePair();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B038190);
    }
  }
}

uint64_t type metadata accessor for SharableModelAudiencePair()
{
  return sub_241A91234();
}

void sub_241B0CE7C()
{
  if (!qword_26B038188)
  {
    sub_241A313AC(255, &qword_26B030428);
    unint64_t v0 = type metadata accessor for SharableModelAudiencePair();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B038188);
    }
  }
}

uint64_t sub_241B0CEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_241CD6EE0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_241B0E548(0, &qword_26B032000, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_241B0D02C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)*a1;
  if (*a1 == 1) {
    goto LABEL_4;
  }
  if (*(void *)a2 == 1)
  {
    sub_241B03FC8((uint64_t)a1, (uint64_t (*)(void))sub_241B0CDFC);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *a1 = *(void *)a2;

  uint64_t v7 = (void *)a1[1];
  a1[1] = *(void *)(a2 + 8);

LABEL_6:
  uint64_t v8 = (void *)a1[2];
  uint64_t v9 = *(void *)(a2 + 16);
  if (v8 == (void *)1)
  {
LABEL_9:
    *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
    goto LABEL_11;
  }
  if (v9 == 1)
  {
    sub_241B03FC8((uint64_t)(a1 + 2), (uint64_t (*)(void))sub_241B0CE7C);
    goto LABEL_9;
  }
  a1[2] = v9;

  uint64_t v10 = (void *)a1[3];
  a1[3] = *(void *)(a2 + 24);

LABEL_11:
  id v11 = (void *)a1[4];
  a1[4] = *(void *)(a2 + 32);

  uint64_t v12 = *(int *)(a3 + 28);
  id v13 = (char *)a1 + v12;
  id v14 = (char *)(a2 + v12);
  uint64_t v15 = sub_241CD6EE0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_16;
  }
  if (v19)
  {
LABEL_16:
    sub_241B0E548(0, &qword_26B032000, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_241B0D298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B0D2AC);
}

uint64_t sub_241B0D2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_241B0E548(0, &qword_26B032000, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_241B0D398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B0D3AC);
}

uint64_t sub_241B0D3AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 32) = a2;
  }
  else
  {
    sub_241B0E548(0, &qword_26B032000, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_241B0D484()
{
  sub_241B0E548(319, &qword_26B032000, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_241B0D558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_241B0D560()
{
  uint64_t result = sub_241CDBBD0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_241B0D5F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  size_t v10 = v7 + v8;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || ((v7 + v8) & ~v8) + v7 > 0x18)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    id v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48);
    if (v14(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    uint64_t v15 = (void *)(((unint64_t)a2 + v10) & v9);
    if (v14(v15, 1, v5))
    {
      memcpy((void *)(((unint64_t)a1 + v10) & v9), v15, v7);
    }
    else
    {
      (*(void (**)(unint64_t, void *, uint64_t))(v6 + 16))(((unint64_t)a1 + v10) & v9, v15, v5);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v6 + 56))(((unint64_t)a1 + v10) & v9, 0, 1, v5);
    }
  }
  return a1;
}

uint64_t sub_241B0D7D0(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(v3 - 8);
  unint64_t v4 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v4(a1, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(a1, v3);
  }
  unint64_t v5 = *(void *)(v9 + 64) + a1;
  if (!*(_DWORD *)(v9 + 84)) {
    ++v5;
  }
  unint64_t v6 = (v5 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t result = v4(v6, 1, v3);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, v3);
  }
  return result;
}

void *sub_241B0D8FC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    int v8 = *(_DWORD *)(v6 + 84);
    size_t v9 = *(void *)(v6 + 64);
    if (v8) {
      size_t v10 = *(void *)(v6 + 64);
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    int v8 = *(_DWORD *)(v6 + 84);
    size_t v9 = *(void *)(v6 + 64);
  }
  if (!v8) {
    ++v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = (void *)(((unint64_t)a1 + v9 + v11) & ~v11);
  uint64_t v13 = (const void *)(((unint64_t)a2 + v9 + v11) & ~v11);
  if (v7(v13, 1, v5))
  {
    memcpy(v12, v13, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v12, v13, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
  }
  return a1;
}

void *sub_241B0DAA0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    size_t v13 = *(void *)(v6 + 64);
  }
  else {
    size_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = (void *)(((unint64_t)a1 + v13 + v14) & ~v14);
  uint64_t v16 = (void *)(((unint64_t)a2 + v13 + v14) & ~v14);
  int v17 = v7(v15, 1, v5);
  int v18 = v7(v16, 1, v5);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v15, v16, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v15, v5);
    goto LABEL_20;
  }
  if (v18)
  {
LABEL_20:
    memcpy(v15, v16, v13);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v15, v16, v5);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
  return a1;
}

void *sub_241B0DD14(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    int v8 = *(_DWORD *)(v6 + 84);
    size_t v9 = *(void *)(v6 + 64);
    if (v8) {
      size_t v10 = *(void *)(v6 + 64);
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    int v8 = *(_DWORD *)(v6 + 84);
    size_t v9 = *(void *)(v6 + 64);
  }
  if (!v8) {
    ++v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  size_t v12 = (void *)(((unint64_t)a1 + v9 + v11) & ~v11);
  size_t v13 = (const void *)(((unint64_t)a2 + v9 + v11) & ~v11);
  if (v7(v13, 1, v5))
  {
    memcpy(v12, v13, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v12, v13, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
  }
  return a1;
}

void *sub_241B0DEB8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    size_t v13 = *(void *)(v6 + 64);
  }
  else {
    size_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = (void *)(((unint64_t)a1 + v13 + v14) & ~v14);
  uint64_t v16 = (void *)(((unint64_t)a2 + v13 + v14) & ~v14);
  int v17 = v7(v15, 1, v5);
  int v18 = v7(v16, 1, v5);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v15, v16, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v15, v5);
    goto LABEL_20;
  }
  if (v18)
  {
LABEL_20:
    memcpy(v15, v16, v13);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v15, v16, v5);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
  return a1;
}

uint64_t sub_241B0E12C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    uint64_t v9 = ((v7 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v7;
    char v10 = 8 * v9;
    if (v9 > 3) {
      goto LABEL_8;
    }
    unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (v11) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v11 = *((unsigned __int8 *)a1 + v9);
        if (!*((unsigned char *)a1 + v9)) {
          goto LABEL_23;
        }
LABEL_15:
        int v13 = (v11 - 1) << v10;
        if (v9 > 3) {
          int v13 = 0;
        }
        if (v9)
        {
          if (v9 > 3) {
            LODWORD(v9) = 4;
          }
          switch((int)v9)
          {
            case 2:
              LODWORD(v9) = *a1;
              break;
            case 3:
              LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v9) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v9) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v6 + (v9 | v13) + 1;
      }
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v15 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v15 >= 2) {
    return v15 - 1;
  }
  else {
    return 0;
  }
}

void sub_241B0E2D4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v10;
  }
  size_t v11 = ((v10 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v10;
  BOOL v12 = a3 >= v9;
  unsigned int v13 = a3 - v9;
  if (v13 == 0 || !v12)
  {
LABEL_14:
    if (v9 < a2) {
      goto LABEL_15;
    }
    goto LABEL_22;
  }
  if (v11 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_15;
    }
    goto LABEL_22;
  }
  unsigned int v14 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
  if (!HIWORD(v14))
  {
    if (v14 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v14 > 1;
    }
    goto LABEL_14;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_15:
    unsigned int v15 = ~v9 + a2;
    if (v11 < 4)
    {
      int v16 = (v15 >> (8 * v11)) + 1;
      if (v11)
      {
        int v17 = v15 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_40;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
LABEL_22:
  switch(v6)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_40:
      __break(1u);
      JUMPOUT(0x241B0E520);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if (v8 >= 2)
        {
          int v18 = *(void (**)(void))(v7 + 56);
          v18();
        }
      }
      return;
  }
}

void sub_241B0E548(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

char *sub_241B0E5AC(uint64_t a1)
{
  v24[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v6 = self;
  v24[0] = 0;
  id v7 = objc_msgSend(v6, sel_versionWithHealthStore_error_, a1, v24);
  unint64_t v8 = v7;
  if (v24[0])
  {
    id v9 = v24[0];

    swift_willThrow();
    sub_241CDA0F0();
    id v10 = v9;
    size_t v11 = sub_241CDA190();
    os_log_type_t v12 = sub_241CDB650();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v22 = v2;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v21 = v3;
      unsigned int v14 = (uint8_t *)v13;
      unsigned int v15 = (void *)swift_slowAlloc();
      uint64_t v23 = (uint64_t)v10;
      v24[0] = v15;
      *(_DWORD *)unsigned int v14 = 136315138;
      uint64_t v20 = v14 + 4;
      sub_241A3DA64();
      id v16 = v10;
      uint64_t v17 = sub_241CDB120();
      uint64_t v23 = sub_241A33FE4(v17, v18, (uint64_t *)v24);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v11, v12, "Failed to fetch ECG active algorithm version: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v15, -1, -1);
      MEMORY[0x245637F20](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v22);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    swift_willThrow();
  }
  else if (v7)
  {
    unsigned int v5 = (char *)objc_msgSend(v7, sel_integerValue);
  }
  else
  {
    return 0;
  }
  return v5;
}

void sub_241B0E89C(void *a1, void *a2, void (*a3)(id, void), uint64_t a4)
{
  uint64_t v5 = v4;
  sub_241A5D1DC();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unsigned int v15 = (char *)&v37 - v14;
  uint64_t v16 = sub_241CD6D00();
  MEMORY[0x270FA5388](v16 - 8);
  unint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v19 = sub_241B0EC6C(a1);
  uint64_t v37 = a4;
  unint64_t v38 = a3;
  sub_241A313AC(0, &qword_26B02E828);
  id v20 = objc_msgSend(a1, sel_privateClassification);
  id v21 = objc_msgSend(a1, sel_endDate);
  sub_241CD6CB0();

  id v22 = HKCodableSummaryElectrocardiogramValue.init(algorithmVersion:classification:timestamp:averageHeartRate:)((uint64_t)v19, (uint64_t)v20, (uint64_t)v18, objc_msgSend(a1, sel_averageHeartRate));
  uint64_t v23 = v5 + qword_26B0411F8;
  uint64_t v24 = sub_241CD9ED0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v15, v23, v24);
  uint64_t v25 = *MEMORY[0x263F46C78];
  uint64_t v26 = sub_241CD9970();
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v15, v25, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v15, 0, 1, v26);
  id v28 = v22;
  id v29 = a2;
  id v30 = objc_msgSend(v28, sel_data);
  if (v30)
  {
    uint64_t v31 = v30;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v32 = sub_241CD6AE0();
    unint64_t v34 = v33;

    sub_241B0F350((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))sub_241A5D1DC);
    uint64_t v40 = 0;
    memset(v39, 0, sizeof(v39));
    id v35 = sub_241A54648(v32, v34, 8, (uint64_t)v13, (uint64_t)v29, 0, (uint64_t)v39);

    sub_241A37374(v32, v34);
    sub_241B0F3B8((uint64_t)v15, (uint64_t (*)(void))sub_241A5D1DC);
    id v36 = v35;
    v38(v35, 0);
  }
  else
  {
    __break(1u);
  }
}

char *sub_241B0EC6C(void *a1)
{
  uint64_t v5 = sub_241CDA1A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v25 - v10;
  uint64_t v12 = sub_241A311E0((void *)(v1 + qword_26B037FE0), *(void *)(v1 + qword_26B037FE0 + 24));
  uint64_t v13 = sub_241B0E5AC(*v12);
  if (!v2)
  {
    if (v14)
    {
      sub_241CDA0F0();
      unsigned int v15 = sub_241CDA190();
      os_log_type_t v16 = sub_241CDB670();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl(&dword_241A23000, v15, v16, "No active algorithm version for current device, falling back to sample's algorithm version", v17, 2u);
        MEMORY[0x245637F20](v17, -1, -1);
      }

      uint64_t v3 = *(void (**)(char *, uint64_t))(v6 + 8);
      v3(v11, v5);
      id v18 = objc_msgSend(a1, sel__algorithmVersion);
      if (v18)
      {
        int v19 = v18;
        uint64_t v3 = (void (*)(char *, uint64_t))objc_msgSend(v18, sel_integerValue);
      }
      else
      {
        sub_241CDA0F0();
        id v21 = sub_241CDA190();
        os_log_type_t v22 = sub_241CDB660();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v23 = 0;
          _os_log_impl(&dword_241A23000, v21, v22, "Unexpectedly received nil algorithm version from sample", v23, 2u);
          MEMORY[0x245637F20](v23, -1, -1);
        }

        v3(v9, v5);
        sub_241B0F418();
        swift_allocError();
        *uint64_t v24 = 0;
        swift_willThrow();
      }
    }
    else
    {
      return v13;
    }
  }
  return (char *)v3;
}

uint64_t sub_241B0EF0C()
{
  return sub_241A31190(v0 + qword_26B037FE0);
}

uint64_t sub_241B0EF1C()
{
  sub_241B0F3B8(v0 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_241A31190(v0 + qword_26B037FE0);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B037FE8;
  if (!qword_26B037FE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B0F044()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241B0F088(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_241CD9ED0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(a1 + 16);
  sub_241B0F350(a1, (uint64_t)v10, type metadata accessor for SummariesFullProfileExecutor.Request);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v22[3] = &type metadata for HealthStoreElectrocardiogramAlgorithmVersionProvider;
  v22[4] = &off_26F5C2828;
  v22[0] = v11;
  type metadata accessor for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = sub_241B0F300((uint64_t)v22, (uint64_t)&type metadata for HealthStoreElectrocardiogramAlgorithmVersionProvider);
  MEMORY[0x270FA5388](v13);
  unsigned int v15 = (void *)((char *)&v22[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = *v15;
  id v18 = (void *)(v12 + qword_26B037FE0);
  v18[3] = &type metadata for HealthStoreElectrocardiogramAlgorithmVersionProvider;
  v18[4] = &off_26F5C2828;
  void *v18 = v17;
  sub_241A7A6EC((uint64_t)v10, v12 + qword_26B041200);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v12 + qword_26B0411F8, v7, v4);
  id v19 = v11;
  sub_241A31190((uint64_t)v22);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v21, v4);
  sub_241B0F3B8(a1, type metadata accessor for SummariesFullProfileExecutor.Request);
  return v12;
}

uint64_t sub_241B0F300(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_241B0F350(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241B0F3B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_241B0F418()
{
  unint64_t result = qword_268D42AF0;
  if (!qword_268D42AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42AF0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep.VersionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241B0F538);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep.VersionError()
{
  return &type metadata for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep.VersionError;
}

ValueMetadata *type metadata accessor for HealthStoreElectrocardiogramAlgorithmVersionProvider()
{
  return &type metadata for HealthStoreElectrocardiogramAlgorithmVersionProvider;
}

unint64_t sub_241B0F584()
{
  unint64_t result = qword_268D42AF8;
  if (!qword_268D42AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42AF8);
  }
  return result;
}

uint64_t sub_241B0F5D8(void *a1)
{
  if (!objc_msgSend(a1, sel_hasNotificationIdentifier)) {
    return 0;
  }
  id v2 = objc_msgSend(a1, sel_notificationIdentifier);
  if (!v2) {
    return 0;
  }
  int v3 = v2;
  uint64_t v4 = sub_241CDB0D0();

  return v4;
}

uint64_t sub_241B0F654(void *a1, void *a2, uint64_t a3, uint64_t a4, int a5, void *a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v92 = a8;
  LODWORD(v11) = a5;
  uint64_t v96 = a4;
  uint64_t v97 = a3;
  uint64_t v88 = a2;
  uint64_t v100 = a9;
  sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  uint64_t v89 = *(void *)(v13 - 8);
  uint64_t v90 = *(void *)(v89 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v91 = (uint64_t)v76 - v14;
  uint64_t v87 = (void *)sub_241CD8DD0();
  uint64_t v86 = *(v87 - 1);
  MEMORY[0x270FA5388](v87);
  uint64_t v85 = (char *)v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A75828();
  uint64_t v94 = *(void *)(v16 - 8);
  uint64_t v95 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v93 = (char *)v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B2F7A8();
  uint64_t v104 = v18;
  uint64_t v102 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v99 = (char *)v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B2F998();
  uint64_t v103 = v20;
  uint64_t v101 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v98 = (char *)v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241CD6D70();
  uint64_t v81 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_241CDA1A0();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v26 = (char *)v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  uint64_t v27 = (void *)sub_241CDB4D0();
  HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
  *(void *)&long long v107 = sub_241CA2010(a6);
  *((void *)&v107 + 1) = v28;
  sub_241CDB180();

  unint64_t v29 = *((void *)&v107 + 1);
  uint64_t v105 = v107;
  sub_241CDA160();
  id v30 = a1;
  swift_bridgeObjectRetain_n();
  id v31 = v30;
  uint64_t v32 = sub_241CDA190();
  os_log_type_t v33 = sub_241CDB670();
  int v34 = v33;
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v35 = swift_slowAlloc();
    int v80 = v11;
    uint64_t v11 = v35;
    uint64_t v78 = swift_slowAlloc();
    *(void *)&long long v107 = v78;
    *(_DWORD *)uint64_t v11 = 136315650;
    int v77 = v34;
    uint64_t v106 = sub_241A33FE4(0xD000000000000034, 0x8000000241CEE6A0, (uint64_t *)&v107);
    sub_241CDBBF0();
    *(_WORD *)(v11 + 12) = 2080;
    v76[1] = v11 + 14;
    id v36 = objc_msgSend(v31, sel_profileIdentifier);
    id v37 = objc_msgSend(v36, sel_identifier);
    uint64_t v79 = a7;
    id v38 = v37;

    sub_241CD6D50();
    uint64_t v39 = sub_241CD6D20();
    unint64_t v41 = v40;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v24, v22);
    uint64_t v106 = sub_241A33FE4(v39, v41, (uint64_t *)&v107);
    sub_241CDBBF0();

    a7 = v79;
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v106 = sub_241A33FE4(v105, v29, (uint64_t *)&v107);
    sub_241CDBBF0();
    unint64_t v42 = v29;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_241A23000, v32, (os_log_type_t)v77, "[%s]_%s: [Trend Notification] Proceeding with notification for %s", (uint8_t *)v11, 0x20u);
    uint64_t v43 = v78;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v43, -1, -1);
    uint64_t v44 = v11;
    LOBYTE(v11) = v80;
    MEMORY[0x245637F20](v44, -1, -1);
  }
  else
  {

    unint64_t v42 = v29;
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v82 + 8))(v26, v83);
  LODWORD(v83) = v11 & 1;
  uint64_t v45 = v86;
  uint64_t v46 = v85;
  uint64_t v47 = v87;
  (*(void (**)(char *, void, void *))(v86 + 104))(v85, *MEMORY[0x263F444B0], v87);
  sub_241B31130(&qword_268D42B08, (void (*)(uint64_t))type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  uint64_t v48 = sub_241CD8820();
  (*(void (**)(char *, void *))(v45 + 8))(v46, v47);
  *(void *)&long long v107 = v48;
  uint64_t v49 = (void *)swift_allocObject();
  uint64_t v50 = v88;
  v49[2] = v31;
  v49[3] = v50;
  uint64_t v51 = v105;
  v49[4] = a7;
  v49[5] = v51;
  unint64_t v52 = v42;
  v49[6] = v42;
  uint64_t v87 = v31;
  swift_bridgeObjectRetain();
  id v53 = v50;
  id v54 = a7;
  sub_241CDA4F0();
  sub_241A6853C();
  sub_241A72D34(0);
  sub_241B31130(&qword_26B02EA48, (void (*)(uint64_t))sub_241A6853C);
  sub_241B31130(&qword_26B036A20, sub_241A72D34);
  uint64_t v55 = v93;
  sub_241CDA840();
  swift_release();
  swift_release();
  uint64_t v56 = v91;
  sub_241B2FB90(v92, v91, &qword_26B032040, MEMORY[0x263F45718]);
  unint64_t v57 = (*(unsigned __int8 *)(v89 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  unint64_t v58 = (v90 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v59 = (void *)swift_allocObject();
  int v60 = v87;
  v59[2] = v87;
  v59[3] = v51;
  v59[4] = v52;
  v59[5] = v54;
  sub_241B2FD90(v56, (uint64_t)v59 + v57);
  uint64_t v61 = (char *)v59 + v58;
  uint64_t v62 = v96;
  *(void *)uint64_t v61 = v97;
  *((void *)v61 + 1) = v62;
  v61[16] = v83;
  id v63 = v60;
  id v64 = v54;
  swift_unknownObjectRetain();
  sub_241CDA4F0();
  uint64_t v65 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_241B2F894(0, &qword_26B038348, (uint64_t (*)(uint64_t))sub_241AF346C, MEMORY[0x263EFDCF0]);
  sub_241A75B08();
  sub_241B2F910();
  unint64_t v66 = v99;
  uint64_t v67 = v95;
  sub_241CDA830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v55, v67);
  sub_241A37260(v100, (uint64_t)&v107);
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = v63;
  sub_241A5598C(&v107, v68 + 24);
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = sub_241B2FF50;
  *(void *)(v69 + 24) = v68;
  id v70 = v63;
  sub_241CDA4F0();
  type metadata accessor for TrendCoalescingNotificationViewModel();
  sub_241B2F894(0, &qword_26B038350, (uint64_t (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel, v65);
  sub_241B31130(&qword_26B038310, (void (*)(uint64_t))sub_241B2F7A8);
  sub_241B2FA84();
  uint64_t v71 = v98;
  uint64_t v72 = v104;
  sub_241CDA7C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v66, v72);
  sub_241B31130(&qword_26B038320, (void (*)(uint64_t))sub_241B2F998);
  uint64_t v73 = v103;
  uint64_t v74 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v71, v73);
  return v74;
}

uint64_t sub_241B10268(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v127 = a8;
  uint64_t v126 = a7;
  uint64_t v125 = a6;
  id v153 = a5;
  uint64_t v151 = a3;
  sub_241B2F894(0, &qword_268D42B20, (uint64_t (*)(uint64_t))sub_241AF346C, MEMORY[0x263EFDE08]);
  uint64_t v147 = *(void *)(v11 - 8);
  uint64_t v148 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v146 = (char *)v121 - v12;
  uint64_t v13 = MEMORY[0x263F8D4F8];
  sub_241A3082C(0, &qword_268D42B28, MEMORY[0x263F8D4F8], MEMORY[0x263EFDDF8]);
  uint64_t v133 = v14;
  uint64_t v131 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v128 = (char *)v121 - v15;
  sub_241A3082C(0, &qword_268D42B30, v13, MEMORY[0x263EFDE90]);
  uint64_t v17 = v16;
  uint64_t v136 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v130 = (char *)v121 - v18;
  sub_241B30368(0);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v132 = (char *)v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B3039C(0, &qword_268D42B40, sub_241B30368, (void (*)(void))sub_241B30434);
  uint64_t v135 = v23;
  uint64_t v134 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v129 = (char *)v121 - v24;
  sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v123 = (uint64_t)v121 - v26;
  uint64_t v124 = type metadata accessor for TrendCoalescingNotificationViewModel();
  MEMORY[0x270FA5388](v124);
  uint64_t v145 = (void *)((char *)v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v144 = sub_241CD7C10();
  uint64_t v156 = *(void *)(v144 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v144);
  uint64_t v141 = (char *)v121 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v122 = (char *)v121 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v143 = (char *)v121 - v32;
  uint64_t v33 = sub_241CD6D70();
  uint64_t v154 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)v121 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_241CDA1A0();
  uint64_t v157 = *(void *)(v36 - 8);
  uint64_t v158 = v36;
  uint64_t v37 = MEMORY[0x270FA5388](v36);
  uint64_t v155 = (char *)v121 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v140 = (char *)v121 - v40;
  MEMORY[0x270FA5388](v39);
  unint64_t v42 = (char *)v121 - v41;
  sub_241CDA160();
  id v43 = a2;
  unint64_t v152 = a4;
  swift_bridgeObjectRetain_n();
  id v44 = v43;
  uint64_t v45 = sub_241CDA190();
  os_log_type_t v46 = sub_241CDB670();
  BOOL v47 = os_log_type_enabled(v45, v46);
  uint64_t v139 = v20;
  uint64_t v138 = v21;
  uint64_t v137 = v17;
  uint64_t v142 = v33;
  uint64_t v149 = v35;
  if (v47)
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v150 = (char *)swift_slowAlloc();
    uint64_t v160 = v150;
    *(_DWORD *)uint64_t v48 = 136315651;
    uint64_t v159 = sub_241A33FE4(0xD000000000000034, 0x8000000241CEE6A0, (uint64_t *)&v160);
    sub_241CDBBF0();
    *(_WORD *)(v48 + 12) = 2080;
    v121[1] = v48 + 14;
    id v49 = objc_msgSend(v44, sel_profileIdentifier);
    id v50 = objc_msgSend(v49, sel_identifier);

    sub_241CD6D50();
    uint64_t v51 = sub_241CD6D20();
    unint64_t v53 = v52;
    (*(void (**)(char *, uint64_t))(v154 + 8))(v35, v33);
    uint64_t v159 = sub_241A33FE4(v51, v53, (uint64_t *)&v160);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 22) = 2081;
    unint64_t v54 = v152;
    swift_bridgeObjectRetain();
    uint64_t v159 = sub_241A33FE4(v151, v54, (uint64_t *)&v160);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_241A23000, v45, v46, "[%s]_%s: [Trend Notification] Creating coalesced notification for %{private}s", (uint8_t *)v48, 0x20u);
    uint64_t v55 = v150;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v55, -1, -1);
    MEMORY[0x245637F20](v48, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v56 = v158;
  uint64_t v150 = *(char **)(v157 + 8);
  ((void (*)(char *, uint64_t))v150)(v42, v158);
  uint64_t v57 = v156;
  id v58 = v153;
  if (objc_msgSend(v153, sel_hasNotificationIdentifier)
    && (id v59 = objc_msgSend(v58, sel_notificationIdentifier)) != 0)
  {
    int v60 = v59;
    LODWORD(v155) = a9 & 1;
    sub_241CDB0D0();
    uint64_t v61 = v58;

    swift_bridgeObjectRetain();
    sub_241CD6D60();
    uint64_t v62 = v143;
    sub_241CD7BA0();
    id v63 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
    uint64_t v64 = (uint64_t)v122;
    uint64_t v65 = v144;
    v63(v122, v62, v144);
    uint64_t v66 = v123;
    sub_241B2FB90(v125, v123, &qword_26B032040, MEMORY[0x263F45718]);
    id v67 = v44;
    id v68 = v61;
    sub_241B8FF30(v67, v68, v64, v66, v145);
    swift_getObjectType();
    sub_241B31130(&qword_268D42B58, (void (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel);
    char v69 = sub_241CD7C20();
    id v70 = v140;
    sub_241CDA160();
    uint64_t v71 = v141;
    v63(v141, v62, v65);
    id v72 = v67;
    uint64_t v73 = sub_241CDA190();
    os_log_type_t v74 = sub_241CDB670();
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v75 = swift_slowAlloc();
      uint64_t v155 = (char *)swift_slowAlloc();
      uint64_t v160 = v155;
      *(_DWORD *)uint64_t v75 = 136315907;
      uint64_t v159 = sub_241A33FE4(0xD000000000000034, 0x8000000241CEE6A0, (uint64_t *)&v160);
      char v76 = v69;
      int v77 = v149;
      sub_241CDBBF0();
      *(_WORD *)(v75 + 12) = 2080;
      uint64_t v78 = v156;
      id v153 = (id)(v75 + 14);
      id v79 = objc_msgSend(v72, sel_profileIdentifier);
      id v80 = objc_msgSend(v79, sel_identifier);

      sub_241CD6D50();
      uint64_t v81 = sub_241CD6D20();
      unint64_t v83 = v82;
      uint64_t v84 = v77;
      char v69 = v76;
      (*(void (**)(char *, uint64_t))(v154 + 8))(v84, v142);
      uint64_t v159 = sub_241A33FE4(v81, v83, (uint64_t *)&v160);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v75 + 22) = 2081;
      uint64_t v85 = v141;
      uint64_t v86 = sub_241CD7BC0();
      uint64_t v159 = sub_241A33FE4(v86, v87, (uint64_t *)&v160);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      uint64_t v88 = v85;
      uint64_t v89 = v144;
      uint64_t v156 = *(void *)(v78 + 8);
      ((void (*)(char *, uint64_t))v156)(v88, v144);
      *(_WORD *)(v75 + 32) = 1026;
      LODWORD(v159) = v69 & 1;
      sub_241CDBBF0();
      _os_log_impl(&dword_241A23000, v73, v74, "[%s]_%s: [Trend Notification] Scheduled %{private}s. Success: %{BOOL,public}d", (uint8_t *)v75, 0x26u);
      uint64_t v90 = v155;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v90, -1, -1);
      MEMORY[0x245637F20](v75, -1, -1);

      (*(void (**)(char *, uint64_t))(v157 + 8))(v140, v158);
    }
    else
    {

      uint64_t v89 = v144;
      uint64_t v156 = *(void *)(v156 + 8);
      ((void (*)(char *, uint64_t))v156)(v71, v144);

      ((void (*)(char *, uint64_t))v150)(v70, v158);
    }
    uint64_t v109 = v139;
    LOBYTE(v160) = v69 & 1;
    uint64_t v110 = v128;
    sub_241CDA5D0();
    uint64_t v111 = v130;
    uint64_t v112 = v133;
    MEMORY[0x2456358E0](sub_241A553A0, 0, v133);
    uint64_t v113 = (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v110, v112);
    MEMORY[0x270FA5388](v113);
    uint64_t v114 = v145;
    uint64_t v115 = v143;
    v121[-2] = v145;
    v121[-1] = v115;
    sub_241AF346C();
    uint64_t v116 = v132;
    uint64_t v117 = v137;
    sub_241CDBBC0();
    (*(void (**)(char *, uint64_t))(v136 + 8))(v111, v117);
    sub_241A3DA64();
    sub_241B30434();
    uint64_t v118 = v129;
    sub_241CDA810();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v116, v109);
    sub_241B304F8();
    uint64_t v119 = v135;
    uint64_t v108 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v134 + 8))(v118, v119);
    sub_241B30580((uint64_t)v114, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
    ((void (*)(char *, uint64_t))v156)(v115, v89);
  }
  else
  {
    uint64_t v91 = v155;
    sub_241CDA160();
    id v92 = v44;
    uint64_t v93 = sub_241CDA190();
    os_log_type_t v94 = sub_241CDB670();
    if (os_log_type_enabled(v93, v94))
    {
      uint64_t v95 = swift_slowAlloc();
      uint64_t v96 = swift_slowAlloc();
      uint64_t v160 = (char *)v96;
      *(_DWORD *)uint64_t v95 = 136315394;
      uint64_t v159 = sub_241A33FE4(0xD000000000000034, 0x8000000241CEE6A0, (uint64_t *)&v160);
      sub_241CDBBF0();
      *(_WORD *)(v95 + 12) = 2080;
      id v97 = objc_msgSend(v92, sel_profileIdentifier);
      id v98 = objc_msgSend(v97, sel_identifier);

      uint64_t v99 = v149;
      sub_241CD6D50();

      uint64_t v100 = sub_241CD6D20();
      unint64_t v102 = v101;
      (*(void (**)(char *, uint64_t))(v154 + 8))(v99, v142);
      uint64_t v159 = sub_241A33FE4(v100, v102, (uint64_t *)&v160);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v93, v94, "[%s]_%s: [Trend Notification] Trend does not have valid notification identifier", (uint8_t *)v95, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v96, -1, -1);
      MEMORY[0x245637F20](v95, -1, -1);

      uint64_t v103 = v158;
      uint64_t v104 = v155;
    }
    else
    {

      uint64_t v104 = v91;
      uint64_t v103 = v56;
    }
    ((void (*)(char *, uint64_t))v150)(v104, v103);
    uint64_t v106 = v147;
    uint64_t v105 = v148;
    long long v107 = v146;
    sub_241AF346C();
    sub_241A3DA64();
    sub_241CDA5E0();
    sub_241B30468();
    uint64_t v108 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v107, v105);
  }
  return v108;
}

uint64_t sub_241B11468(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v57 = a4;
  uint64_t v61 = a1;
  uint64_t v6 = type metadata accessor for TrendCoalescingNotificationViewModel();
  uint64_t v59 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v60 = v7;
  uint64_t v62 = (uint64_t)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B2FFAC(0, &qword_268D42B10, (void (*)(uint64_t))sub_241A97D54, (void (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel, (void (*)(void))sub_241A725E0);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v63 = (char *)v46 - v11;
  uint64_t v12 = sub_241CD6D70();
  uint64_t v53 = *(void *)(v12 - 8);
  uint64_t v54 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241CD7C10();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_241CDA1A0();
  uint64_t v55 = *(void *)(v19 - 8);
  uint64_t v56 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA160();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v58 = a2;
  v22(v18, a2, v15);
  id v23 = a3;
  uint64_t v24 = sub_241CDA190();
  os_log_type_t v25 = sub_241CDB670();
  int v52 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v49 = v10;
    uint64_t v27 = v26;
    uint64_t v48 = swift_slowAlloc();
    v65[0] = v48;
    *(_DWORD *)uint64_t v27 = 136315651;
    os_log_t v47 = v24;
    uint64_t v64 = sub_241A33FE4(0xD000000000000034, 0x8000000241CEE6A0, v65);
    uint64_t v51 = v6;
    sub_241CDBBF0();
    *(_WORD *)(v27 + 12) = 2080;
    v46[1] = v27 + 14;
    id v28 = objc_msgSend(v23, sel_profileIdentifier);
    id v29 = objc_msgSend(v28, sel_identifier);
    uint64_t v50 = v9;
    id v30 = v29;

    sub_241CD6D50();
    uint64_t v31 = sub_241CD6D20();
    unint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v54);
    uint64_t v64 = sub_241A33FE4(v31, v33, v65);
    sub_241CDBBF0();

    uint64_t v9 = v50;
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2081;
    uint64_t v34 = sub_241CD7BC0();
    uint64_t v64 = sub_241A33FE4(v34, v35, v65);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    os_log_t v36 = v47;
    _os_log_impl(&dword_241A23000, v47, (os_log_type_t)v52, "[%s]_%s: [Trend Notification] Updating content state %{private}s", (uint8_t *)v27, 0x20u);
    uint64_t v37 = v48;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v37, -1, -1);
    uint64_t v38 = v27;
    uint64_t v10 = v49;
    MEMORY[0x245637F20](v38, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v56);
  sub_241A311E0(v57, v57[3]);
  v65[0] = sub_241CD7910();
  uint64_t v39 = v62;
  sub_241B3003C(v61, v62, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
  unint64_t v40 = (*(unsigned __int8 *)(v59 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  uint64_t v41 = swift_allocObject();
  sub_241B301F4(v39, v41 + v40, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = sub_241B3025C;
  *(void *)(v42 + 24) = v41;
  sub_241A97D54();
  sub_241A725E0();
  id v43 = v63;
  sub_241CDA710();
  swift_release();
  swift_release();
  sub_241B302CC();
  uint64_t v44 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v9);
  return v44;
}

void sub_241B11B44(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v61 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v61 - v17;
  if (a2)
  {
    uint64_t v67 = v16;
    swift_bridgeObjectRetain();
    if (objc_msgSend(a3, sel_hasObjectTypeIdentifier))
    {
      id v19 = objc_msgSend(a3, sel_objectTypeIdentifier);
      if (!v19)
      {
        __break(1u);
        goto LABEL_32;
      }
      uint64_t v20 = v19;
      uint64_t v66 = sub_241CDB0D0();
      id v3 = v21;
    }
    else
    {
      id v3 = (id)0xE300000000000000;
      uint64_t v66 = 7104878;
    }
    if (objc_msgSend(a3, sel_hasNotificationIdentifier))
    {
      uint64_t v65 = v9;
      id v22 = objc_msgSend(a3, sel_notificationIdentifier);
      if (v22)
      {
        id v23 = v22;
        uint64_t v24 = sub_241CDB0D0();
        uint64_t v26 = v25;

        if (v24 == a1 && v26 == a2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
        char v31 = sub_241CDC100();
        swift_bridgeObjectRelease();
        if (v31)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          swift_bridgeObjectRelease();
          if (objc_msgSend(a3, sel_hasNotificationIdentifier)
            && (id v32 = objc_msgSend(a3, sel_notificationIdentifier)) != 0)
          {
            unint64_t v33 = v32;
            uint64_t v34 = sub_241CDB0D0();
            uint64_t v36 = v35;
          }
          else
          {
            uint64_t v34 = 0;
            uint64_t v36 = 0;
          }
          uint64_t v48 = v65;
          sub_241CDA160();
          swift_bridgeObjectRetain_n();
          id v3 = a3;
          uint64_t v49 = sub_241CDA190();
          int v50 = sub_241CDB670();
          if (!os_log_type_enabled(v49, (os_log_type_t)v50))
          {

            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v67);
            return;
          }
          LODWORD(v64) = v50;
          uint64_t v66 = (uint64_t)v49;
          uint64_t v51 = swift_slowAlloc();
          uint64_t v63 = swift_slowAlloc();
          uint64_t v69 = v63;
          *(_DWORD *)uint64_t v51 = 136315650;
          v68[0] = sub_241A33FE4(0xD000000000000034, 0x8000000241CEE6A0, &v69);
          sub_241CDBBF0();
          *(_WORD *)(v51 + 12) = 2080;
          v68[0] = v34;
          v68[1] = v36;
          sub_241A3082C(0, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
          swift_bridgeObjectRetain();
          uint64_t v52 = sub_241CDB120();
          v68[0] = sub_241A33FE4(v52, v53, &v69);
          sub_241CDBBF0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v51 + 22) = 2080;
          id v54 = objc_msgSend(v3, sel_notificationIdentifier);
          if (v54)
          {
            uint64_t v55 = v54;
            uint64_t v56 = sub_241CDB0D0();
            unint64_t v58 = v57;

            v68[0] = sub_241A33FE4(v56, v58, &v69);
            sub_241CDBBF0();

            swift_bridgeObjectRelease();
            os_log_t v59 = (os_log_t)v66;
            _os_log_impl(&dword_241A23000, (os_log_t)v66, (os_log_type_t)v64, "%s Migrating %s for trend with identifier: %s", (uint8_t *)v51, 0x20u);
            uint64_t v60 = v63;
            swift_arrayDestroy();
            MEMORY[0x245637F20](v60, -1, -1);
            MEMORY[0x245637F20](v51, -1, -1);

            (*(void (**)(char *, uint64_t))(v65 + 8))(v15, v67);
            return;
          }
          goto LABEL_33;
        }
      }
      sub_241CDA160();
      id v37 = a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v4 = v37;
      uint64_t v38 = sub_241CDA190();
      int v39 = sub_241CDB670();
      if (!os_log_type_enabled(v38, (os_log_type_t)v39))
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        goto LABEL_28;
      }
      LODWORD(v63) = v39;
      os_log_t v64 = v38;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      v68[0] = v62;
      *(_DWORD *)uint64_t v40 = 136315906;
      uint64_t v69 = sub_241A33FE4(0xD000000000000034, 0x8000000241CEE6A0, v68);
      sub_241CDBBF0();
      *(_WORD *)(v40 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_241A33FE4(v66, (unint64_t)v3, v68);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v40 + 22) = 2080;
      id v41 = objc_msgSend(v4, sel_notificationIdentifier);
      if (v41)
      {
        uint64_t v42 = v41;
        uint64_t v43 = sub_241CDB0D0();
        unint64_t v45 = v44;

        uint64_t v69 = sub_241A33FE4(v43, v45, v68);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 32) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v69 = sub_241A33FE4(a1, a2, v68);
        sub_241CDBBF0();
        swift_bridgeObjectRelease_n();
        os_log_t v46 = v64;
        _os_log_impl(&dword_241A23000, v64, (os_log_type_t)v63, "%s [Migration] Current trend %s is different from persisted: %s != %s; nothing to migrate",
          (uint8_t *)v40,
          0x2Au);
        uint64_t v47 = v62;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v47, -1, -1);
        MEMORY[0x245637F20](v40, -1, -1);

LABEL_28:
        (*(void (**)(char *, uint64_t))(v65 + 8))(v12, v67);
        return;
      }
LABEL_32:

      swift_bridgeObjectRelease();
      __break(1u);
LABEL_33:

      __break(1u);
      return;
    }
    swift_bridgeObjectRelease();
    sub_241CDA160();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_241CDA190();
    os_log_type_t v28 = sub_241CDB670();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v68[0] = v30;
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v69 = sub_241A33FE4(0xD000000000000034, 0x8000000241CEE6A0, v68);
      sub_241CDBBF0();
      *(_WORD *)(v29 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_241A33FE4(v66, (unint64_t)v3, v68);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v27, v28, "%s [Migration] Current trend %s has no notification identifier for trend; nothing to migrate",
        (uint8_t *)v29,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v30, -1, -1);
      MEMORY[0x245637F20](v29, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v67);
  }
}

uint64_t sub_241B1246C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_241B2E770(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_241CDA1A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0F0();
  id v11 = a1;
  id v12 = a1;
  uint64_t v13 = sub_241CDA190();
  os_log_type_t v14 = sub_241CDB650();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = v7;
    uint64_t v16 = v15;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v28 = v24;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v26 = a2;
    uint64_t v27 = sub_241A33FE4(0xD000000000000034, 0x8000000241CEE6A0, &v28);
    sub_241CDBBF0();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v27 = (uint64_t)a1;
    id v17 = a1;
    sub_241A3DA64();
    uint64_t v18 = sub_241CDB130();
    uint64_t v27 = sub_241A33FE4(v18, v19, &v28);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v13, v14, "%s Error: %s", (uint8_t *)v16, 0x16u);
    uint64_t v20 = v24;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v20, -1, -1);
    MEMORY[0x245637F20](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  void *v6 = a1;
  swift_storeEnumTagMultiPayload();
  id v21 = a1;
  return sub_241CDA5D0();
}

void sub_241B12768(void *a1@<X0>, uint64_t a2@<X1>, void (**a3)(void, void *)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v109 = a2;
  uint64_t v110 = a4;
  uint64_t v114 = a3;
  uint64_t v120 = a5;
  uint64_t v6 = sub_241CD6F50();
  uint64_t v105 = *(void *)(v6 - 8);
  uint64_t v106 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v104 = &v98[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241B2B810(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  uint64_t v103 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v102 = &v98[-v9];
  sub_241B2B810(0, &qword_26B0327F8, (uint64_t (*)(uint64_t))sub_241B2B874, MEMORY[0x263EFDDF8]);
  uint64_t v116 = v10;
  id v11 = (void (**)(void, void *))*((void *)v10 - 1);
  MEMORY[0x270FA5388](v10);
  uint64_t v115 = &v98[-v12];
  uint64_t v13 = sub_241CD6D70();
  uint64_t v112 = *(void *)(v13 - 8);
  uint64_t v113 = (unsigned char *)v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v111 = &v98[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v101 = type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  uint64_t v15 = MEMORY[0x270FA5388](v101);
  long long v107 = &v98[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v108 = &v98[-v18];
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v21 = (id *)&v98[-v20];
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (id *)&v98[-v23];
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (id *)&v98[-v26];
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (id *)&v98[-v28];
  uint64_t v30 = sub_241CDA1A0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v118 = v30;
  uint64_t v119 = v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v34 = &v98[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  id v37 = &v98[-v36];
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  uint64_t v40 = &v98[-v39];
  MEMORY[0x270FA5388](v38);
  uint64_t v42 = &v98[-v41];
  sub_241B2B8C8();
  if (a1 == (void *)1)
  {
    uint64_t v114 = v11;
    sub_241CDA0F0();
    sub_241B3003C((uint64_t)v117, (uint64_t)v29, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    uint64_t v43 = sub_241CDA190();
    os_log_type_t v44 = sub_241CDB630();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)unint64_t v45 = 136446210;
      uint64_t v117 = v45 + 4;
      uint64_t v121 = 0xD000000000000037;
      unint64_t v122 = 0x8000000241CE05B0;
      v123[0] = v46;
      id v47 = objc_msgSend(*v29, sel_profileIdentifier);
      id v48 = objc_msgSend(v47, sel_identifier);

      uint64_t v49 = v111;
      sub_241CD6D50();

      sub_241CD6D20();
      (*(void (**)(unsigned char *, unsigned char *))(v112 + 8))(v49, v113);
      sub_241CDB180();
      swift_bridgeObjectRelease();
      uint64_t v121 = sub_241A33FE4(v121, v122, v123);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B30580((uint64_t)v29, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      _os_log_impl(&dword_241A23000, v43, v44, "%{public}s: no trend model, returning no desired feedItem", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v46, -1, -1);
      MEMORY[0x245637F20](v45, -1, -1);
    }
    else
    {
      sub_241B30580((uint64_t)v29, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    }

    (*(void (**)(unsigned char *, uint64_t))(v119 + 8))(v42, v118);
LABEL_21:
    uint64_t v121 = MEMORY[0x263F8EE78];
    sub_241B2B874(0);
    uint64_t v96 = v115;
    sub_241CDA5D0();
    sub_241B2BAD8();
    id v97 = v116;
    uint64_t v95 = sub_241CDA6D0();
    ((void (**)(unsigned char *, void *))v114)[1](v96, v97);
    goto LABEL_22;
  }
  int v50 = a1;
  uint64_t v51 = (uint64_t)v117;
  uint64_t v52 = v114;
  if (v114 == (void (**)(void, void *))1)
  {
    uint64_t v114 = v11;
    sub_241CDA0F0();
    sub_241B3003C(v51, (uint64_t)v27, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    unint64_t v53 = sub_241CDA190();
    os_log_type_t v54 = sub_241CDB650();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 136446210;
      uint64_t v117 = v55 + 4;
      uint64_t v121 = 0xD000000000000037;
      unint64_t v122 = 0x8000000241CE05B0;
      v123[0] = v56;
      id v57 = objc_msgSend(*v27, sel_profileIdentifier);
      id v58 = objc_msgSend(v57, sel_identifier);

      os_log_t v59 = v111;
      sub_241CD6D50();

      sub_241CD6D20();
      (*(void (**)(unsigned char *, unsigned char *))(v112 + 8))(v59, v113);
      sub_241CDB180();
      swift_bridgeObjectRelease();
      uint64_t v121 = sub_241A33FE4(v121, v122, v123);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B30580((uint64_t)v27, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      _os_log_impl(&dword_241A23000, v53, v54, "%{public}s: No chart model found, but one is expected", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v56, -1, -1);
      MEMORY[0x245637F20](v55, -1, -1);
    }
    else
    {
      sub_241B30580((uint64_t)v27, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    }

    (*(void (**)(unsigned char *, uint64_t))(v119 + 8))(v40, v118);
    goto LABEL_21;
  }
  if (!v50 || !v114)
  {
    uint64_t v114 = v11;
    sub_241CDA0F0();
    sub_241B3003C(v51, (uint64_t)v24, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    uint64_t v85 = sub_241CDA190();
    os_log_type_t v86 = sub_241CDB670();
    if (os_log_type_enabled(v85, v86))
    {
      unint64_t v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      *(_DWORD *)unint64_t v87 = 136446210;
      uint64_t v117 = v87 + 4;
      uint64_t v121 = 0xD000000000000037;
      unint64_t v122 = 0x8000000241CE05B0;
      v123[0] = v88;
      id v89 = objc_msgSend(*v24, sel_profileIdentifier);
      id v90 = objc_msgSend(v89, sel_identifier);

      uint64_t v91 = v111;
      sub_241CD6D50();

      sub_241CD6D20();
      (*(void (**)(unsigned char *, unsigned char *))(v112 + 8))(v91, v113);
      sub_241CDB180();
      swift_bridgeObjectRelease();
      uint64_t v121 = sub_241A33FE4(v121, v122, v123);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B30580((uint64_t)v24, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      _os_log_impl(&dword_241A23000, v85, v86, "%{public}s: version mismatch detected, returning no feed items", v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v88, -1, -1);
      MEMORY[0x245637F20](v87, -1, -1);
    }
    else
    {
      sub_241B30580((uint64_t)v24, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    }

    (*(void (**)(unsigned char *, uint64_t))(v119 + 8))(v37, v118);
    goto LABEL_21;
  }
  uint64_t v116 = v50;
  sub_241A91968(v50);
  sub_241A91968(v52);
  sub_241CDA0F0();
  uint64_t v60 = v21;
  sub_241B3003C(v51, (uint64_t)v21, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  uint64_t v61 = v108;
  sub_241B3003C(v51, (uint64_t)v108, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  uint64_t v62 = v107;
  sub_241B3003C(v51, (uint64_t)v107, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  uint64_t v63 = sub_241CDA190();
  os_log_type_t v64 = sub_241CDB630();
  int v65 = v64;
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v66 = swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v115 = (unsigned char *)v67;
    *(_DWORD *)uint64_t v66 = 136315650;
    uint64_t v121 = 0xD000000000000037;
    unint64_t v122 = 0x8000000241CE05B0;
    v123[0] = v67;
    id v68 = objc_msgSend(*v60, sel_profileIdentifier);
    os_log_t v100 = v63;
    id v69 = v68;
    id v70 = objc_msgSend(v68, sel_identifier);
    int v99 = v65;
    uint64_t v71 = (uint64_t)v60;
    id v72 = v70;

    uint64_t v73 = v111;
    sub_241CD6D50();

    sub_241CD6D20();
    (*(void (**)(unsigned char *, unsigned char *))(v112 + 8))(v73, v113);
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v121 = sub_241A33FE4(v121, v122, v123);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B30580(v71, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    *(_WORD *)(v66 + 12) = 2080;
    uint64_t v113 = v34;
    os_log_type_t v74 = v108;
    sub_241CD6E80();
    uint64_t v75 = sub_241CDB120();
    uint64_t v121 = sub_241A33FE4(v75, v76, v123);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B30580((uint64_t)v74, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    *(_WORD *)(v66 + 22) = 2080;
    int v77 = v104;
    sub_241CD6EB0();
    sub_241B31130((unint64_t *)&qword_26B032008, MEMORY[0x263F079C8]);
    uint64_t v78 = v106;
    uint64_t v79 = sub_241CDC0D0();
    uint64_t v80 = (uint64_t)v62;
    unint64_t v82 = v81;
    (*(void (**)(unsigned char *, uint64_t))(v105 + 8))(v77, v78);
    uint64_t v121 = sub_241A33FE4(v79, v82, v123);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    uint64_t v52 = v114;
    sub_241B30580(v80, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    os_log_t v83 = v100;
    _os_log_impl(&dword_241A23000, v100, (os_log_type_t)v99, "%s Using calendar with locale: %s, timeZone: %s", (uint8_t *)v66, 0x20u);
    uint64_t v84 = v115;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v84, -1, -1);
    MEMORY[0x245637F20](v66, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v119 + 8))(v113, v118);
  }
  else
  {
    sub_241B30580((uint64_t)v60, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    sub_241B30580((uint64_t)v61, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    sub_241B30580((uint64_t)v62, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);

    (*(void (**)(unsigned char *, uint64_t))(v119 + 8))(v34, v118);
  }
  uint64_t v121 = v109;
  swift_bridgeObjectRetain();
  uint64_t v92 = swift_bridgeObjectRetain();
  sub_241AFF3B0(v92);
  uint64_t v93 = v116;
  uint64_t v94 = sub_241B14AAC(v116, (uint64_t)v52, v121);
  swift_bridgeObjectRelease();
  uint64_t v121 = v94;
  sub_241B2E6FC(0, (unint64_t *)&qword_26B032708, (uint64_t (*)(uint64_t))sub_241B2B874, MEMORY[0x263EFDCF0]);
  sub_241B2BA50();
  uint64_t v95 = sub_241CDA6D0();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
LABEL_22:
  *uint64_t v120 = v95;
}

uint64_t sub_241B1374C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries29SummaryTrendFeedItemGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_241B30580(v0 + OBJC_IVAR____TtC9Summaries29SummaryTrendFeedItemGenerator_request, type metadata accessor for SummaryTrendFeedItemGenerator.Request);

  return swift_deallocClassInstance();
}

uint64_t sub_241B13830()
{
  return type metadata accessor for SummaryTrendFeedItemGenerator(0);
}

uint64_t type metadata accessor for SummaryTrendFeedItemGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B02F098);
}

uint64_t sub_241B13858()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SummaryTrendFeedItemGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for SummaryTrendFeedItemGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B033688);
}

char *sub_241B1395C(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[8] = *((unsigned char *)a2 + 8);
    uint64_t v8 = a3[6];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241CD78F0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v14 = v4;
    if (v13(v10, 1, v11))
    {
      sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = &v7[v16];
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = sub_241CD7DE0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    id v21 = &v7[v20];
    uint64_t v22 = (uint64_t)a2 + v20;
    *(void *)id v21 = *(void *)v22;
    v21[8] = *(unsigned char *)(v22 + 8);
  }
  return v7;
}

uint64_t sub_241B13B70(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_241CD78F0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_241CD7DE0();
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_241B13C74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_241CD78F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v6;
  if (v12(v9, 1, v10))
  {
    sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_241CD7DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  return a1;
}

uint64_t sub_241B13E3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_241CD78F0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_241CD7DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  char v25 = *(unsigned char *)(v24 + 8);
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = v25;
  return a1;
}

uint64_t sub_241B14068(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_241CD78F0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_241CD7DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  return a1;
}

uint64_t sub_241B14224(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v7 = a3[6];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_241CD78F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_241CD7DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  return a1;
}

uint64_t sub_241B1444C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B14460);
}

uint64_t sub_241B14460(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_241CD7DE0();
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_241B145BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B145D0);
}

void *sub_241B145D0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_241CD7DE0();
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_241B1472C()
{
  sub_241B2B810(319, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_241CD7DE0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_241B14844()
{
  return swift_retain();
}

uint64_t sub_241B14858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries29SummaryTrendFeedItemGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241B148D4(uint64_t a1)
{
  uint64_t result = sub_241B31130(&qword_26B02F090, (void (*)(uint64_t))type metadata accessor for SummaryTrendFeedItemGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241B1492C(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_241B14958()
{
  uint64_t v1 = sub_241CD6D70();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 0xD000000000000037;
  v8[1] = 0x8000000241CE05B0;
  id v5 = objc_msgSend(*v0, sel_profileIdentifier);
  id v6 = objc_msgSend(v5, sel_identifier);

  sub_241CD6D50();
  sub_241CD6D20();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v8[0];
}

uint64_t sub_241B14AAC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v63 = a3;
  uint64_t v61 = a2;
  sub_241B2BB60(0);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v65 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B2BC10(0, &qword_26B032540, (uint64_t (*)(uint64_t))sub_241B2BB60, sub_241B2BC90, MEMORY[0x263EFDC10]);
  uint64_t v66 = *(void *)(v10 - 8);
  uint64_t v67 = v10;
  MEMORY[0x270FA5388](v10);
  os_log_type_t v64 = (char *)&v51 - v11;
  uint64_t v12 = sub_241CD6D70();
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v56 = v12;
  MEMORY[0x270FA5388](v12);
  int v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  MEMORY[0x270FA5388](v60);
  uint64_t v16 = (id *)((char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_241CDA1A0();
  uint64_t v57 = *(void *)(v17 - 8);
  uint64_t v58 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = objc_msgSend(a1, sel_trendValues);
  if (!v20
    || (v21 = v20, v68 = 0, sub_241A313AC(0, &qword_26B0303F8), sub_241CDB2B0(), v21, (uint64_t v22 = v68) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x263F8EE78];
  }
  uint64_t v59 = v22;
  uint64_t v23 = sub_241B2D700(a1);
  sub_241CDA0F0();
  uint64_t v62 = v4;
  sub_241B3003C(v4, (uint64_t)v16, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  uint64_t v24 = sub_241CDA190();
  os_log_type_t v25 = sub_241CDB630();
  int v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v54 = v7;
    uint64_t v28 = v27;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v53 = v29;
    *(_DWORD *)uint64_t v28 = 136446466;
    uint64_t v51 = v28 + 4;
    uint64_t v68 = 0xD000000000000037;
    unint64_t v69 = 0x8000000241CE05B0;
    v70[0] = v29;
    id v30 = objc_msgSend(*v16, sel_profileIdentifier, v28 + 4);
    int v52 = v26;
    id v31 = v30;
    id v32 = objc_msgSend(v30, sel_identifier);

    sub_241CD6D50();
    sub_241CD6D20();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v56);
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v68 = sub_241A33FE4(v68, v69, v70);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B30580((uint64_t)v16, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    *(_WORD *)(v28 + 12) = 2080;
    uint64_t v68 = v23;
    uint64_t v33 = sub_241CDB120();
    uint64_t v68 = sub_241A33FE4(v33, v34, v70);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v24, (os_log_type_t)v52, "%{public}s: determined these visibility overrides: %s", (uint8_t *)v28, 0x16u);
    uint64_t v35 = v53;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v35, -1, -1);
    uint64_t v36 = v28;
    uint64_t v7 = v54;
    MEMORY[0x245637F20](v36, -1, -1);
  }
  else
  {
    sub_241B30580((uint64_t)v16, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v19, v58);
  uint64_t v37 = v62;
  uint64_t v38 = *(void **)(v62 + 8);
  uint64_t v39 = *(void **)(v62 + *(int *)(v60 + 48));
  sub_241CD7320();
  swift_allocObject();
  id v40 = v38;
  id v41 = v39;
  uint64_t v42 = sub_241CD72F0();
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  *(&v51 - 6) = v59;
  *(&v51 - 5) = v37;
  uint64_t v44 = v63;
  *(&v51 - 4) = v61;
  *(&v51 - 3) = v44;
  *(&v51 - 2) = v23;
  *(&v51 - 1) = v43;
  uint64_t v45 = sub_241AFEE20((void *(*)(uint64_t *__return_ptr, char *))sub_241B2E444, (uint64_t)(&v51 - 8), (uint64_t)&unk_26F5C0358);
  swift_bridgeObjectRelease();
  uint64_t v68 = v45;
  sub_241B2BBA8(0);
  sub_241B2B810(0, &qword_26B034C48, (uint64_t (*)(uint64_t))sub_241B2BBA8, MEMORY[0x263F8D488]);
  sub_241B2BBDC();
  sub_241B2E468();
  uint64_t v46 = v65;
  sub_241CDA4C0();
  sub_241B2BC90();
  id v47 = v64;
  sub_241CDA7A0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v46, v7);
  sub_241B2E4F0();
  uint64_t v48 = v67;
  uint64_t v49 = sub_241CDA6D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v47, v48);
  return v49;
}

uint64_t sub_241B15220@<X0>(unsigned __int8 *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v70 = a3;
  uint64_t v57 = a6;
  uint64_t v58 = a7;
  uint64_t v55 = a4;
  uint64_t v56 = a5;
  unint64_t v69 = a8;
  uint64_t v10 = sub_241CD6D70();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v62 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B2E58C();
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v61 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v59 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (void **)((char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_241CDA1A0();
  uint64_t v65 = *(void *)(v17 - 8);
  uint64_t v66 = v17;
  MEMORY[0x270FA5388](v17);
  unsigned int v71 = *a1;
  uint64_t v67 = v16;
  uint64_t v68 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62) {
    goto LABEL_18;
  }
  uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v19; uint64_t v19 = sub_241CDBF50())
  {
    uint64_t v72 = a2 & 0xC000000000000001;
    uint64_t v20 = 4;
    uint64_t v21 = &off_2650F5000;
    while (1)
    {
      id v23 = v72 ? (id)MEMORY[0x245637160](v20 - 4, a2) : *(id *)(a2 + 8 * v20);
      uint64_t v24 = v23;
      uint64_t v25 = v20 - 3;
      if (__OFADD__(v20 - 4, 1)) {
        break;
      }
      if ([v23 (SEL)v21[243]])
      {
        id v26 = objc_msgSend(v24, sel_coveredDateRangeRawValue);
        if (v26)
        {
          uint64_t v27 = v26;
          uint64_t v28 = v21;
          uint64_t v29 = sub_241CDB0D0();
          uint64_t v31 = v30;

          uint64_t v32 = v29;
          uint64_t v21 = v28;
          if (MEMORY[0x2456352D0](v32, v31) != 6)
          {
            uint64_t v33 = sub_241CD9FA0();
            uint64_t v35 = v34;
            if (v33 == sub_241CD9FA0() && v35 == v36)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_16:
              swift_bridgeObjectRelease();
              uint64_t v37 = v58;
              swift_retain();
              uint64_t v38 = sub_241B2BCCC((char *)v24, v55, v56, v71, v57, v37, v70);
              swift_release();
              uint64_t v73 = v38;
              uint64_t v39 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
              sub_241B2E6FC(0, (unint64_t *)&qword_26B032648, (uint64_t (*)(uint64_t))sub_241A29620, MEMORY[0x263EFDCF0]);
              sub_241CD75A0();
              sub_241B2E66C(&qword_26B02E9F0, (unint64_t *)&qword_26B032648, v39);
              id v40 = v59;
              sub_241CDA6E0();
              sub_241B31130(&qword_26B032290, (void (*)(uint64_t))sub_241B2E58C);
              uint64_t v41 = v61;
              uint64_t v42 = sub_241CDA6D0();

              swift_release();
              uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v40, v41);
              goto LABEL_23;
            }
            char v22 = sub_241CDC100();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v21 = v28;
            if (v22) {
              goto LABEL_16;
            }
          }
        }
      }

      ++v20;
      if (v25 == v19) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  uint64_t v44 = v68;
  sub_241CDA0F0();
  uint64_t v45 = v67;
  sub_241B3003C(v70, (uint64_t)v67, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  uint64_t v46 = sub_241CDA190();
  os_log_type_t v47 = sub_241CDB670();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    uint64_t v75 = v72;
    *(_DWORD *)uint64_t v48 = 136446466;
    uint64_t v70 = v48 + 4;
    uint64_t v73 = 0xD000000000000037;
    unint64_t v74 = 0x8000000241CE05B0;
    id v49 = objc_msgSend(*v45, sel_profileIdentifier, v55, v56, v57);
    id v50 = objc_msgSend(v49, sel_identifier);

    uint64_t v51 = v62;
    sub_241CD6D50();

    sub_241CD6D20();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v51, v64);
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v73 = sub_241A33FE4(v73, v74, &v75);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B30580((uint64_t)v45, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    *(_WORD *)(v48 + 12) = 2080;
    LOBYTE(v73) = v71;
    uint64_t v52 = sub_241CDB120();
    uint64_t v73 = sub_241A33FE4(v52, v53, &v75);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v46, v47, "%{public}s: No trends within trend model, not generating trend feedItem for %s", (uint8_t *)v48, 0x16u);
    uint64_t v54 = v72;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v54, -1, -1);
    MEMORY[0x245637F20](v48, -1, -1);
  }
  else
  {
    sub_241B30580((uint64_t)v45, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v44, v66);
  uint64_t v42 = 0;
LABEL_23:
  *unint64_t v69 = v42;
  return result;
}

uint64_t sub_241B15984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241B3003C(a1, a2, (uint64_t (*)(void))sub_241A29620);
}

uint64_t sub_241B159B4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, char a12, uint64_t a13)
{
  uint64_t v105 = a7;
  uint64_t v106 = a8;
  uint64_t v103 = a6;
  uint64_t v107 = a9;
  uint64_t v108 = a3;
  unsigned int v104 = a11;
  uint64_t v100 = a13;
  uint64_t v101 = a10;
  unsigned int v102 = a12 & 1;
  sub_241A29620(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v95 = (uint64_t)v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v112 = (char *)v90 - v20;
  uint64_t v21 = sub_241CD6D70();
  uint64_t v97 = *(void *)(v21 - 8);
  uint64_t v98 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v96 = (char *)v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  int v99 = (id *)((char *)v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (id *)((char *)v90 - v26);
  uint64_t v28 = sub_241CDA1A0();
  uint64_t v109 = *(void *)(v28 - 8);
  uint64_t v110 = v28;
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v111 = (char *)v90 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)v90 - v31;
  sub_241AF3744();
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v35 = (char *)v90 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B2E770(0);
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)v90 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B3003C(a1, (uint64_t)v38, (uint64_t (*)(void))sub_241B2E770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_241B30580((uint64_t)v38, (uint64_t (*)(void))sub_241B2E770);
    BOOL v39 = 0;
    uint64_t v41 = v111;
    uint64_t v40 = (uint64_t)v112;
    uint64_t v42 = v104;
    uint64_t v43 = v106;
    uint64_t v44 = v107;
    uint64_t v45 = v105;
    uint64_t v46 = a2;
    uint64_t v47 = v103;
    uint64_t v48 = v102;
    uint64_t v50 = v100;
    uint64_t v49 = v101;
    uint64_t v51 = v108;
    uint64_t v52 = v99;
  }
  else
  {
    sub_241B301F4((uint64_t)v38, (uint64_t)v35, (uint64_t (*)(void))sub_241AF3744);
    BOOL v94 = sub_241A3AD40(a2, (uint64_t)v35);
    char v53 = sub_241A3CD14(a2, (uint64_t)v35);
    sub_241B30580((uint64_t)v35, (uint64_t (*)(void))sub_241AF3744);
    uint64_t v46 = a2;
    if (v53)
    {
      sub_241CDA160();
      sub_241B3003C(v108, (uint64_t)v27, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      unint64_t v54 = a5;
      swift_bridgeObjectRetain_n();
      uint64_t v55 = sub_241CDA190();
      os_log_type_t v56 = sub_241CDB670();
      int v57 = v56;
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v58 = swift_slowAlloc();
        os_log_t v92 = v55;
        uint64_t v59 = v58;
        uint64_t v60 = swift_slowAlloc();
        uint64_t v93 = v60;
        *(_DWORD *)uint64_t v59 = 136446466;
        v90[1] = v59 + 4;
        uint64_t v113 = 0xD000000000000037;
        unint64_t v114 = 0x8000000241CE05B0;
        v115[0] = v60;
        id v61 = objc_msgSend(*v27, sel_profileIdentifier);
        int v91 = v57;
        id v62 = v61;
        uint64_t v63 = v46;
        id v64 = objc_msgSend(v61, sel_identifier);

        uint64_t v65 = v96;
        sub_241CD6D50();

        sub_241CD6D20();
        (*(void (**)(char *, uint64_t))(v97 + 8))(v65, v98);
        uint64_t v46 = v63;
        unint64_t v54 = a5;
        sub_241CDB180();
        swift_bridgeObjectRelease();
        uint64_t v113 = sub_241A33FE4(v113, v114, v115);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        sub_241B30580((uint64_t)v27, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
        *(_WORD *)(v59 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v113 = sub_241A33FE4(a4, a5, v115);
        sub_241CDBBF0();
        swift_bridgeObjectRelease_n();
        os_log_t v66 = v92;
        _os_log_impl(&dword_241A23000, v92, (os_log_type_t)v91, "%{public}s: Removing any notifications that may have been delivered: %s", (uint8_t *)v59, 0x16u);
        uint64_t v67 = v93;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v67, -1, -1);
        MEMORY[0x245637F20](v59, -1, -1);
      }
      else
      {
        sub_241B30580((uint64_t)v27, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v109 + 8))(v32, v110);
      uint64_t v51 = v108;
      swift_getObjectType();
      sub_241A3082C(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      uint64_t v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = xmmword_241CEB730;
      *(void *)(v68 + 32) = a4;
      *(void *)(v68 + 40) = v54;
      swift_bridgeObjectRetain();
      sub_241CD7B50();
      swift_bridgeObjectRelease();
      uint64_t v41 = v111;
      uint64_t v40 = (uint64_t)v112;
      uint64_t v42 = v104;
      uint64_t v43 = v106;
      uint64_t v44 = v107;
      uint64_t v45 = v105;
      uint64_t v47 = v103;
      uint64_t v48 = v102;
      uint64_t v50 = v100;
      uint64_t v49 = v101;
    }
    else
    {
      uint64_t v41 = v111;
      uint64_t v40 = (uint64_t)v112;
      uint64_t v42 = v104;
      uint64_t v43 = v106;
      uint64_t v44 = v107;
      uint64_t v45 = v105;
      uint64_t v47 = v103;
      uint64_t v48 = v102;
      uint64_t v50 = v100;
      uint64_t v49 = v101;
      uint64_t v51 = v108;
    }
    uint64_t v52 = v99;
    BOOL v39 = v94;
  }
  sub_241B16568(v47, v45, v43, v49, v46, v42, v48, v39, v50);
  sub_241CDA0F0();
  sub_241B3003C(v51, (uint64_t)v52, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  sub_241B3003C(v44, v40, (uint64_t (*)(void))sub_241A29620);
  unint64_t v69 = sub_241CDA190();
  os_log_type_t v70 = sub_241CDB670();
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v71 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    uint64_t v108 = v72;
    *(_DWORD *)uint64_t v71 = 136446722;
    uint64_t v113 = 0xD000000000000037;
    unint64_t v114 = 0x8000000241CE05B0;
    v115[0] = v72;
    id v73 = objc_msgSend(*v52, sel_profileIdentifier);
    char v74 = v42;
    id v75 = objc_msgSend(v73, sel_identifier);

    unint64_t v76 = v96;
    sub_241CD6D50();

    sub_241CD6D20();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v76, v98);
    uint64_t v77 = (uint64_t)v112;
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v113 = sub_241A33FE4(v113, v114, v115);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B30580((uint64_t)v52, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    *(_WORD *)(v71 + 12) = 2080;
    LOBYTE(v113) = v74;
    uint64_t v78 = sub_241CDB120();
    uint64_t v113 = sub_241A33FE4(v78, v79, v115);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 22) = 2082;
    uint64_t v80 = v95;
    sub_241B3003C(v77, v95, (uint64_t (*)(void))sub_241A29620);
    uint64_t v81 = sub_241CD75A0();
    uint64_t v82 = *(void *)(v81 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81) == 1)
    {
      sub_241B30580(v80, (uint64_t (*)(void))sub_241A29620);
      uint64_t v83 = 0;
      unint64_t v84 = 0;
    }
    else
    {
      uint64_t v83 = sub_241CD74B0();
      unint64_t v84 = v86;
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v81);
    }
    uint64_t v87 = v108;
    uint64_t v113 = v83;
    unint64_t v114 = v84;
    sub_241A3082C(0, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    uint64_t v88 = sub_241CDB120();
    uint64_t v113 = sub_241A33FE4(v88, v89, v115);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B30580(v77, (uint64_t (*)(void))sub_241A29620);
    _os_log_impl(&dword_241A23000, v69, v70, "%{public}s: Created trend feed item at date range %s: %{public}s", (uint8_t *)v71, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v87, -1, -1);
    MEMORY[0x245637F20](v71, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v111, v110);
  }
  else
  {
    sub_241B30580((uint64_t)v52, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    sub_241B30580(v40, (uint64_t (*)(void))sub_241A29620);

    return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v41, v110);
  }
}

#error "241B16568: too big function (funcsize=0)"

uint64_t sub_241B2B274(uint64_t a1)
{
  id v1 = objc_msgSend(*(id *)(a1 + 32), sel_sensitiveLoggingIdentifier);
  uint64_t v2 = sub_241CDB0D0();

  return v2;
}

uint64_t sub_241B2B2CC(uint64_t a1, char a2, void **a3, void *a4, uint64_t a5)
{
  uint64_t v9 = sub_241CD6D70();
  uint64_t v42 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (id *)((char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (id *)((char *)v37 - v16);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_241B0F654(*a3, a3[2], *(uint64_t *)((char *)a3 + v12[11]), *(uint64_t *)((char *)a3 + v12[11] + 8), *((unsigned __int8 *)a3 + v12[13]), a3[4], a4, (uint64_t)a3 + v12[10], a5);
    type metadata accessor for TrendCoalescingNotificationViewModel();
    sub_241A3DA64();
    sub_241B31130(&qword_26B02F358, (void (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel);
    sub_241CDA500();
    return swift_release();
  }
  else
  {
    uint64_t v40 = v20;
    uint64_t v41 = v19;
    sub_241CDA160();
    sub_241B3003C((uint64_t)a3, (uint64_t)v17, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    sub_241B3003C((uint64_t)a3, (uint64_t)v15, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    uint64_t v24 = sub_241CDA190();
    os_log_type_t v25 = sub_241CDB670();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v39 = v28;
      *(_DWORD *)uint64_t v27 = 136446466;
      v37[1] = v27 + 4;
      uint64_t v43 = 0xD000000000000037;
      unint64_t v44 = 0x8000000241CE05B0;
      uint64_t v45 = v28;
      id v29 = objc_msgSend(*v17, sel_profileIdentifier);
      int v38 = v26;
      id v30 = v29;
      id v31 = objc_msgSend(v29, sel_identifier);

      sub_241CD6D50();
      sub_241CD6D20();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v9);
      sub_241CDB180();
      swift_bridgeObjectRelease();
      uint64_t v43 = sub_241A33FE4(v43, v44, &v45);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B30580((uint64_t)v17, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      *(_WORD *)(v27 + 12) = 2080;
      id v32 = objc_msgSend(v15[4], sel_sensitiveLoggingIdentifier);
      uint64_t v33 = sub_241CDB0D0();
      unint64_t v35 = v34;

      uint64_t v43 = sub_241A33FE4(v33, v35, &v45);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B30580((uint64_t)v15, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      _os_log_impl(&dword_241A23000, v24, (os_log_type_t)v38, "%{public}s: Not generating notification for %s", (uint8_t *)v27, 0x16u);
      uint64_t v36 = v39;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      MEMORY[0x245637F20](v27, -1, -1);
    }
    else
    {
      sub_241B30580((uint64_t)v17, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      sub_241B30580((uint64_t)v15, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v22, v41);
  }
}

void sub_241B2B810(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241B2B874(uint64_t a1)
{
}

uint64_t type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B031ED8);
}

void sub_241B2B8C8()
{
  if (!qword_26B033590)
  {
    sub_241B2B9E0(255, &qword_26B033588, &qword_26B033268, &qword_26B030450, 0x263F46650);
    sub_241B2B9E0(255, &qword_26B033580, &qword_26B033260, &qword_26B030428, 0x263F46498);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B033590);
    }
  }
}

void sub_241B2B978(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241A313AC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241B2B9E0(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_241B2B978(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelDerivedContent);
    unint64_t v6 = type metadata accessor for SummaryModelProcessingResult();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_241B2BA50()
{
  unint64_t result = qword_26B032700;
  if (!qword_26B032700)
  {
    sub_241B2E6FC(255, (unint64_t *)&qword_26B032708, (uint64_t (*)(uint64_t))sub_241B2B874, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032700);
  }
  return result;
}

unint64_t sub_241B2BAD8()
{
  unint64_t result = qword_268D42B00;
  if (!qword_268D42B00)
  {
    sub_241B2B810(255, &qword_26B0327F8, (uint64_t (*)(uint64_t))sub_241B2B874, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42B00);
  }
  return result;
}

void sub_241B2BB60(uint64_t a1)
{
}

void sub_241B2BBA8(uint64_t a1)
{
}

uint64_t sub_241B2BBDC()
{
  return sub_241B31130(&qword_26B032650, sub_241B2BBA8);
}

void sub_241B2BC10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_241B2BC90()
{
  return sub_241B31130(&qword_26B0325E0, sub_241B2BB60);
}

uint64_t sub_241B2BCC4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241B1246C(*a1, a2);
}

uint64_t sub_241B2BCCC(char *a1, void *a2, uint64_t a3, unsigned int a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v119 = a5;
  unsigned int v137 = a4;
  uint64_t v117 = a3;
  uint64_t v118 = a2;
  uint64_t v135 = a1;
  sub_241B2E6FC(0, &qword_26B032828, (uint64_t (*)(uint64_t))sub_241A29620, MEMORY[0x263EFDE08]);
  uint64_t v128 = *(void *)(v9 - 8);
  uint64_t v129 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v127 = (char *)&v104 - v10;
  uint64_t v124 = sub_241CD6D70();
  uint64_t v123 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  unint64_t v122 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CDA1A0();
  uint64_t v130 = *(void *)(v12 - 8);
  uint64_t v131 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v126 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v111 = (char *)&v104 - v15;
  uint64_t v121 = type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  uint64_t v112 = *(void *)(v121 - 8);
  uint64_t v16 = *(void *)(v112 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v121);
  uint64_t v125 = (id *)((char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v110 = (id *)((char *)&v104 - v19);
  MEMORY[0x270FA5388](v18);
  uint64_t v113 = (uint64_t)&v104 - v20;
  sub_241B2FFAC(0, &qword_26B031B78, sub_241B2E6C8, sub_241A29620, (void (*)(void))sub_241B2E7A4);
  uint64_t v116 = v21;
  uint64_t v115 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  unint64_t v114 = (char *)&v104 - v22;
  uint64_t v23 = sub_241CD9B80();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v120 = (char *)&v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v26 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B2B810(0, &qword_26B032228, MEMORY[0x263F47050], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v27 - 8);
  id v29 = (char *)&v104 - v28;
  sub_241B2B810(0, &qword_26B0321D0, MEMORY[0x263F46C00], v26);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v134 = (char *)&v104 - v31;
  uint64_t v136 = sub_241CD9940();
  uint64_t v32 = *(void *)(v136 - 8);
  uint64_t v33 = *(void *)(v32 + 64);
  uint64_t v34 = MEMORY[0x270FA5388](v136);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v104 - v35;
  v140[3] = sub_241CD7320();
  v140[4] = sub_241B31130(&qword_26B031AA0, MEMORY[0x263F454B0]);
  v140[0] = a6;
  uint64_t v37 = *(void **)(a7 + 32);
  uint64_t v133 = a7;
  swift_retain();
  int v38 = (void *)sub_241CDB4D0();
  uint64_t v39 = sub_241CA2010(v37);
  uint64_t v132 = v40;

  HKCodableSummaryTrendValue.engineOutput.getter((uint64_t)v29);
  uint64_t v41 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v29, 1, v23))
  {
    sub_241B30FD8((uint64_t)v29, &qword_26B032228, MEMORY[0x263F47050]);
    uint64_t v42 = (uint64_t)v134;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v134, 1, 1, v136);
LABEL_4:
    swift_bridgeObjectRelease();
    sub_241B30FD8(v42, &qword_26B0321D0, MEMORY[0x263F46C00]);
    uint64_t v46 = v126;
    sub_241CDA0F0();
    uint64_t v47 = v125;
    sub_241B3003C(v133, (uint64_t)v125, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    uint64_t v48 = sub_241CDA190();
    os_log_type_t v49 = sub_241CDB630();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      uint64_t v139 = v51;
      *(_DWORD *)uint64_t v50 = 136446466;
      uint64_t v136 = v50 + 4;
      *(void *)&long long v138 = 0xD000000000000037;
      *((void *)&v138 + 1) = 0x8000000241CE05B0;
      id v52 = objc_msgSend(*v47, sel_profileIdentifier);
      id v53 = objc_msgSend(v52, sel_identifier);

      unint64_t v54 = v122;
      sub_241CD6D50();

      sub_241CD6D20();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v54, v124);
      sub_241CDB180();
      swift_bridgeObjectRelease();
      *(void *)&long long v138 = sub_241A33FE4(v138, *((unint64_t *)&v138 + 1), &v139);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B30580((uint64_t)v47, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      *(_WORD *)(v50 + 12) = 2080;
      uint64_t v55 = sub_241CD9FA0();
      *(void *)&long long v138 = sub_241A33FE4(v55, v56, &v139);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v48, v49, "%{public}s: No meanShiftChange, displaying no trend for coveredDateRange=%s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v51, -1, -1);
      MEMORY[0x245637F20](v50, -1, -1);
    }
    else
    {
      sub_241B30580((uint64_t)v47, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    }

    (*(void (**)(char *, uint64_t))(v130 + 8))(v46, v131);
    sub_241A29620(0);
    int v57 = v127;
    sub_241CDA5E0();
    sub_241B2E66C(&qword_26B032820, &qword_26B032828, MEMORY[0x263EFDE08]);
    uint64_t v58 = v129;
    uint64_t v59 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v128 + 8))(v57, v58);
    goto LABEL_8;
  }
  uint64_t v106 = v39;
  uint64_t v107 = v33;
  uint64_t v135 = (char *)&v104 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = (int *)v121;
  uint64_t v108 = v16;
  uint64_t v109 = v36;
  unint64_t v44 = v120;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v120, v29, v41);
  sub_241B30FD8((uint64_t)v29, &qword_26B032228, MEMORY[0x263F47050]);
  uint64_t v42 = (uint64_t)v134;
  sub_241CD9B10();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v44, v41);
  uint64_t v45 = v136;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v42, 1, v136) == 1) {
    goto LABEL_4;
  }
  uint64_t v61 = v32;
  id v62 = *(char **)(v32 + 32);
  uint64_t v63 = v109;
  uint64_t v134 = v62;
  ((void (*)(char *, uint64_t, uint64_t))v62)(v109, v42, v45);
  type metadata accessor for TrendComponentBuilder();
  uint64_t v64 = v133;
  uint64_t v65 = *(void **)v133;
  os_log_t v66 = *(void **)(v133 + 32);
  id v67 = sub_241CA2B34(*(void **)v133, *(void **)(v133 + 24), v66, v133 + v43[9], v63, v137, v118, v119, v133 + v43[10]);
  if (v67)
  {
    uint64_t v68 = v67;
    uint64_t v69 = sub_241CDB4D0();
    uint64_t v105 = v61;
    os_log_type_t v70 = (void *)v69;
    *(void *)&long long v138 = sub_241CA2010(v66);
    *((void *)&v138 + 1) = v71;
    sub_241CDB180();

    uint64_t v130 = *((void *)&v138 + 1);
    uint64_t v131 = v138;
    uint64_t v139 = sub_241B2CE50(v140[0], v65, v68, v138, *((uint64_t *)&v138 + 1), *(void *)(v64 + v43[12]));
    uint64_t v72 = v113;
    sub_241B3003C(v64, v113, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    uint64_t v73 = v105;
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v135, v63, v136);
    sub_241A37260((uint64_t)v140, (uint64_t)&v138);
    unint64_t v74 = (*(unsigned __int8 *)(v112 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80);
    unint64_t v75 = (v108 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v76 = (v75 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v77 = (*(unsigned __int8 *)(v73 + 80) + v76 + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    unint64_t v78 = (v107 + v77 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v79 = swift_allocObject();
    *(void *)(v79 + 16) = v68;
    sub_241B301F4(v72, v79 + v74, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    uint64_t v80 = (uint64_t *)(v79 + v75);
    uint64_t v81 = v130;
    *uint64_t v80 = v131;
    v80[1] = v81;
    uint64_t v82 = (uint64_t *)(v79 + v76);
    uint64_t v83 = v132;
    *uint64_t v82 = v106;
    v82[1] = v83;
    uint64_t v84 = v136;
    ((void (*)(unint64_t, char *, uint64_t))v134)(v79 + v77, v135, v136);
    unint64_t v85 = v79 + v78;
    *(void *)unint64_t v85 = v117;
    *(_WORD *)(v85 + 8) = v137;
    sub_241A5598C(&v138, v79 + ((v78 + 17) & 0xFFFFFFFFFFFFFFF8));
    sub_241B2E6C8(0);
    sub_241A29620(0);
    sub_241B2E7A4();
    id v86 = v68;
    swift_bridgeObjectRetain();
    uint64_t v87 = v114;
    sub_241CDA710();
    swift_release();
    swift_release();
    sub_241B2EE28();
    uint64_t v88 = v116;
    uint64_t v59 = sub_241CDA6D0();

    (*(void (**)(char *, uint64_t))(v115 + 8))(v87, v88);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v109, v84);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v89 = v111;
    sub_241CDA0F0();
    id v90 = v110;
    sub_241B3003C(v64, (uint64_t)v110, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    int v91 = sub_241CDA190();
    os_log_type_t v92 = sub_241CDB630();
    BOOL v93 = os_log_type_enabled(v91, v92);
    uint64_t v94 = v136;
    if (v93)
    {
      uint64_t v95 = swift_slowAlloc();
      uint64_t v139 = swift_slowAlloc();
      uint64_t v96 = v139;
      *(_DWORD *)uint64_t v95 = 136446466;
      uint64_t v135 = (char *)(v95 + 4);
      *(void *)&long long v138 = 0xD000000000000037;
      *((void *)&v138 + 1) = 0x8000000241CE05B0;
      id v97 = objc_msgSend(*v90, sel_profileIdentifier);
      id v98 = objc_msgSend(v97, sel_identifier);

      int v99 = v122;
      sub_241CD6D50();

      sub_241CD6D20();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v99, v124);
      sub_241CDB180();
      swift_bridgeObjectRelease();
      *(void *)&long long v138 = sub_241A33FE4(v138, *((unint64_t *)&v138 + 1), &v139);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B30580((uint64_t)v90, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      *(_WORD *)(v95 + 12) = 2080;
      uint64_t v100 = sub_241CD9FA0();
      *(void *)&long long v138 = sub_241A33FE4(v100, v101, &v139);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v91, v92, "%{public}s: No meanShiftViewModel, displaying no trend for coveredDateRange=%s", (uint8_t *)v95, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v96, -1, -1);
      MEMORY[0x245637F20](v95, -1, -1);

      (*(void (**)(char *, uint64_t))(v130 + 8))(v111, v131);
    }
    else
    {
      sub_241B30580((uint64_t)v90, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);

      (*(void (**)(char *, uint64_t))(v130 + 8))(v89, v131);
    }
    sub_241A29620(0);
    unsigned int v102 = v127;
    sub_241CDA5E0();
    sub_241B2E66C(&qword_26B032820, &qword_26B032828, MEMORY[0x263EFDE08]);
    uint64_t v103 = v129;
    uint64_t v59 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v128 + 8))(v102, v103);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v109, v94);
  }
LABEL_8:
  sub_241A31190((uint64_t)v140);
  return v59;
}

uint64_t sub_241B2CE50(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v59 = a6;
  uint64_t v46 = a5;
  uint64_t v45 = a4;
  id v52 = a3;
  sub_241B30AF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  uint64_t v56 = v9;
  MEMORY[0x270FA5388](v8);
  id v53 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B30C34();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v57 = v11;
  uint64_t v58 = v12;
  MEMORY[0x270FA5388](v11);
  unint64_t v54 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_241B2B810(0, (unint64_t *)&qword_26B034DA8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v44 - v15;
  sub_241B30DA8();
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B30F08();
  uint64_t v49 = v22;
  uint64_t v50 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_241CD7320();
  v62[3] = v51;
  uint64_t v48 = sub_241B31130(&qword_26B031AA0, MEMORY[0x263F454B0]);
  v62[4] = v48;
  v62[0] = a1;
  id v25 = objc_allocWithZone(MEMORY[0x263F0A470]);
  swift_retain();
  id v26 = a2;
  uint64_t v27 = (void *)sub_241CDB090();
  id v44 = objc_msgSend(v25, sel_initWithCategory_domainName_healthStore_, 1, v27, v26);

  *(void *)&v60[0] = sub_241CDB770();
  uint64_t v61 = v59;
  uint64_t v28 = sub_241CDB8A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v16, 1, 1, v28);
  sub_241B30E74();
  sub_241A313AC(0, &qword_26B0303B8);
  sub_241B31130(&qword_26B032860, (void (*)(uint64_t))sub_241B30E74);
  sub_241AAD6A4();
  sub_241CDA7E0();
  sub_241B30FD8((uint64_t)v16, (unint64_t *)&qword_26B034DA8, v47);
  swift_release();
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v52;
  *(void *)(v29 + 16) = v52;
  sub_241A3082C(0, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
  sub_241B31130(&qword_26B032610, (void (*)(uint64_t))sub_241B30DA8);
  id v31 = v30;
  sub_241CDA710();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_241B31130(&qword_26B032480, (void (*)(uint64_t))sub_241B30F08);
  uint64_t v32 = v49;
  sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v32);
  uint64_t v33 = v45;
  uint64_t v34 = v46;
  uint64_t v35 = v44;
  uint64_t v61 = sub_241CD7DA0();
  sub_241A37260((uint64_t)v62, (uint64_t)v60);
  uint64_t v36 = swift_allocObject();
  sub_241A5598C(v60, v36 + 16);
  *(void *)(v36 + 56) = v33;
  *(void *)(v36 + 64) = v34;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = sub_241B310F4;
  *(void *)(v37 + 24) = v36;
  swift_bridgeObjectRetain();
  sub_241CDA4F0();
  sub_241A97D54();
  sub_241B2E770(0);
  sub_241B2F894(0, &qword_26B031C60, (uint64_t (*)(uint64_t))sub_241B2E770, MEMORY[0x263EFDCF0]);
  sub_241A725E0();
  sub_241B30BAC();
  int v38 = v53;
  sub_241CDA7C0();
  swift_release();
  swift_release();
  sub_241B2B810(0, &qword_26B031C70, (uint64_t (*)(uint64_t))sub_241B2E770, MEMORY[0x263EFDDF8]);
  sub_241B31130(&qword_26B031BF8, (void (*)(uint64_t))sub_241B30AF0);
  sub_241B30D20();
  uint64_t v40 = v54;
  uint64_t v39 = v55;
  sub_241CDA750();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v38, v39);
  sub_241B31130(&qword_26B031BC8, (void (*)(uint64_t))sub_241B30C34);
  uint64_t v41 = v57;
  uint64_t v42 = sub_241CDA6D0();

  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v40, v41);
  sub_241A31190((uint64_t)v62);
  return v42;
}

uint64_t sub_241B2D700(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B2B810(0, &qword_26B0321C8, MEMORY[0x263F46BF8], MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  unint64_t v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (uint64_t)&v78 - v7;
  uint64_t v9 = sub_241CD9B80();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v89 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B2B810(0, &qword_26B032228, MEMORY[0x263F47050], v2);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v92 = (uint64_t)&v78 - v16;
  sub_241B2B810(0, &qword_26B0321D0, MEMORY[0x263F46C00], v2);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v94 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (void (**)(char *, uint64_t))((char *)&v78 - v20);
  uint64_t v95 = sub_241CD9940();
  uint64_t v22 = *(void (***)(void, void, void))(v95 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v95);
  uint64_t v88 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  id v26 = (char *)&v78 - v25;
  if (!a1) {
    return 0;
  }
  id v80 = a1;
  id v27 = objc_msgSend(v80, sel_trendValues);
  if (!v27
    || (uint64_t v28 = v27, v96 = 0, sub_241A313AC(0, &qword_26B0303F8), sub_241CDB2B0(), v28, (v29 = v96) == 0))
  {
    swift_bridgeObjectRelease();
    unint64_t v29 = MEMORY[0x263F8EE78];
  }
  id v86 = v21;
  uint64_t v84 = v9;
  BOOL v93 = v15;
  if (v29 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_241CDBF50();
    if (v30) {
      goto LABEL_7;
    }
LABEL_35:
    swift_bridgeObjectRelease_n();
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    uint64_t v43 = v84;
    goto LABEL_36;
  }
  uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v30) {
    goto LABEL_35;
  }
LABEL_7:
  unint64_t v85 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v26;
  uint64_t v83 = v8;
  id v90 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v10;
  unint64_t v91 = (unint64_t)v22;
  uint64_t v87 = v6;
  uint64_t v8 = 4;
  uint64_t v10 = (uint64_t)&off_2650F5000;
  while (1)
  {
    uint64_t v22 = (void (**)(void, void, void))(v8 - 4);
    if ((v29 & 0xC000000000000001) != 0) {
      uint64_t v32 = (char *)MEMORY[0x245637160](v8 - 4, v29);
    }
    else {
      uint64_t v32 = (char *)*(id *)(v29 + 8 * v8);
    }
    unint64_t v6 = v32;
    id v26 = (char *)(v8 - 3);
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (objc_msgSend(v32, sel_hasCoveredDateRangeRawValue))
    {
      id v33 = objc_msgSend(v6, sel_coveredDateRangeRawValue);
      if (v33)
      {
        uint64_t v34 = v33;
        uint64_t v35 = sub_241CDB0D0();
        uint64_t v37 = v36;

        if (MEMORY[0x2456352D0](v35, v37) != 6) {
          break;
        }
      }
    }
LABEL_9:

    ++v8;
    uint64_t v15 = v93;
    if (v26 == (char *)v30)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v78 = 0;
      uint64_t v79 = 0;
      unint64_t v6 = v87;
      uint64_t v43 = v84;
      uint64_t v10 = (uint64_t)v90;
      uint64_t v22 = (void (**)(void, void, void))v91;
      goto LABEL_36;
    }
  }
  uint64_t v38 = sub_241CD9FA0();
  uint64_t v40 = v39;
  if (v38 != sub_241CD9FA0() || v40 != v41)
  {
    char v31 = sub_241CDC100();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_22;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRelease_n();
LABEL_22:
  swift_bridgeObjectRelease_n();
  uint64_t v44 = v92;
  HKCodableSummaryTrendValue.engineOutput.getter(v92);
  uint64_t v10 = (uint64_t)v90;
  uint64_t v43 = v84;
  int v45 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v90[6])(v44, 1, v84);
  uint64_t v46 = v85;
  if (v45)
  {
    sub_241B30FD8(v44, &qword_26B032228, MEMORY[0x263F47050]);
    uint64_t v22 = (void (**)(void, void, void))v91;
    uint64_t v47 = (uint64_t)v86;
    (*(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(v91 + 56))(v86, 1, 1, v95);
    uint64_t v15 = v93;
    goto LABEL_25;
  }
  uint64_t v48 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v89, v44, v43);
  sub_241B30FD8(v44, &qword_26B032228, MEMORY[0x263F47050]);
  uint64_t v47 = (uint64_t)v86;
  sub_241CD9B10();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v48, v43);
  uint64_t v22 = (void (**)(void, void, void))v91;
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v47, 1, v95);
  uint64_t v15 = v93;
  if (v49 == 1)
  {
LABEL_25:

    sub_241B30FD8(v47, &qword_26B0321D0, MEMORY[0x263F46C00]);
LABEL_26:
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    unint64_t v6 = v87;
    goto LABEL_36;
  }
  ((void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v22)[4](v46, v47, v95);
  uint64_t v50 = sub_241CD9920();
  uint64_t v51 = *(void *)(v50 + 16);
  if (v51)
  {
    uint64_t v52 = v51 - 1;
    uint64_t v53 = sub_241CD9910();
    uint64_t v54 = *(void *)(v53 - 8);
    uint64_t v55 = v54;
    unint64_t v56 = v50
        + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))
        + *(void *)(v54 + 72) * v52;
    uint64_t v22 = (void (**)(void, void, void))v91;
    uint64_t v57 = v83;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v54 + 16))(v83, v56, v53);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v57, 0, 1, v53);
    uint64_t v58 = v57;
    uint64_t v46 = v85;
  }
  else
  {
    uint64_t v53 = sub_241CD9910();
    uint64_t v58 = v83;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v83, 1, 1, v53);
  }
  swift_bridgeObjectRelease();
  sub_241CD9910();
  uint64_t v59 = (void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))(v22 + 1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v58, 1, v53) != 1)
  {

    sub_241B30FD8(v58, &qword_26B0321C8, MEMORY[0x263F46BF8]);
    (*v59)(v46, v95);
    goto LABEL_26;
  }
  sub_241B30FD8(v58, &qword_26B0321C8, MEMORY[0x263F46BF8]);

  (*v59)(v46, v95);
  uint64_t v78 = 1;
  uint64_t v79 = 1;
  unint64_t v6 = v87;
LABEL_36:
  id v60 = objc_msgSend(v80, sel_trendValues, v78);
  if (!v60
    || (uint64_t v61 = v60, v96 = 0, sub_241A313AC(0, &qword_26B0303F8), sub_241CDB2B0(), v61, (v62 = v96) == 0))
  {
    swift_bridgeObjectRelease();
    unint64_t v62 = MEMORY[0x263F8EE78];
  }
  if (!(v62 >> 62))
  {
    uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v92 = v63;
    if (v63) {
      goto LABEL_41;
    }
LABEL_60:
    swift_bridgeObjectRelease_n();

    return v79;
  }
  while (2)
  {
    swift_bridgeObjectRetain();
    uint64_t v92 = sub_241CDBF50();
    if (!v92) {
      goto LABEL_60;
    }
LABEL_41:
    uint64_t v64 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    id v90 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 7);
    unint64_t v91 = v62 & 0xC000000000000001;
    id v86 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v87 = (char *)(v10 + 16);
    unint64_t v85 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 6);
    uint64_t v81 = (void (**)(char *, uint64_t))(v22 + 1);
    uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v22 + 4);
    uint64_t v10 = 4;
    uint64_t v83 = v62;
LABEL_45:
    if (v91) {
      id v66 = (id)MEMORY[0x245637160](v10 - 4, v62);
    }
    else {
      id v66 = *(id *)(v62 + 8 * v10);
    }
    uint64_t v22 = (void (**)(void, void, void))v66;
    uint64_t v67 = v10 - 3;
    if (__OFADD__(v10 - 4, 1))
    {
      __break(1u);
      continue;
    }
    break;
  }
  HKCodableSummaryTrendValue.engineOutput.getter((uint64_t)v15);
  if ((*v64)(v15, 1, v43))
  {
    sub_241B30FD8((uint64_t)v15, &qword_26B032228, MEMORY[0x263F47050]);
    uint64_t v65 = (uint64_t)v94;
    (*v90)(v94, 1, 1, v95);
LABEL_43:
    sub_241B30FD8(v65, &qword_26B0321D0, MEMORY[0x263F46C00]);
    goto LABEL_44;
  }
  uint64_t v68 = v89;
  (*(void (**)(char *, char *, uint64_t))v87)(v89, v15, v43);
  sub_241B30FD8((uint64_t)v15, &qword_26B032228, MEMORY[0x263F47050]);
  uint64_t v65 = (uint64_t)v94;
  sub_241CD9B10();
  (*v86)(v68, v43);
  if ((*v85)(v65, 1, v95) == 1) {
    goto LABEL_43;
  }
  (*v82)(v88, v65, v95);
  uint64_t v69 = sub_241CD9920();
  uint64_t v70 = *(void *)(v69 + 16);
  if (v70)
  {
    uint64_t v71 = v70 - 1;
    uint64_t v72 = sub_241CD9910();
    uint64_t v73 = *(void *)(v72 - 8);
    unint64_t v74 = v6;
    uint64_t v75 = v73;
    unint64_t v76 = v69
        + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))
        + *(void *)(v73 + 72) * v71;
    uint64_t v15 = v93;
    (*(void (**)(char *, unint64_t, uint64_t))(v73 + 16))(v74, v76, v72);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v74, 0, 1, v72);
    unint64_t v6 = v74;
    uint64_t v43 = v84;
  }
  else
  {
    uint64_t v72 = sub_241CD9910();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v6, 1, 1, v72);
  }
  swift_bridgeObjectRelease();
  sub_241CD9910();
  int v77 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v6, 1, v72);
  sub_241B30FD8((uint64_t)v6, &qword_26B0321C8, MEMORY[0x263F46BF8]);
  (*v81)(v88, v95);
  unint64_t v62 = v83;
  if (v77 == 1)
  {
LABEL_44:

    ++v10;
    if (v67 == v92) {
      goto LABEL_60;
    }
    goto LABEL_45;
  }

  swift_bridgeObjectRelease_n();
  if (v78) {
    return v79 | 2;
  }
  else {
    return 3;
  }
}

uint64_t sub_241B2E444@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241B15220(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void *)(v2 + 56), a2);
}

unint64_t sub_241B2E468()
{
  unint64_t result = qword_26B034C50;
  if (!qword_26B034C50)
  {
    sub_241B2B810(255, &qword_26B034C48, (uint64_t (*)(uint64_t))sub_241B2BBA8, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B034C50);
  }
  return result;
}

unint64_t sub_241B2E4F0()
{
  unint64_t result = qword_26B032538;
  if (!qword_26B032538)
  {
    sub_241B2BC10(255, &qword_26B032540, (uint64_t (*)(uint64_t))sub_241B2BB60, sub_241B2BC90, MEMORY[0x263EFDC10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032538);
  }
  return result;
}

void sub_241B2E58C()
{
  if (!qword_26B032298)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_241B2E6FC(255, (unint64_t *)&qword_26B032648, (uint64_t (*)(uint64_t))sub_241A29620, MEMORY[0x263EFDCF0]);
    sub_241CD75A0();
    sub_241B2E66C(&qword_26B02E9F0, (unint64_t *)&qword_26B032648, v0);
    unint64_t v1 = sub_241CDA370();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032298);
    }
  }
}

uint64_t sub_241B2E66C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B2E6FC(255, a2, (uint64_t (*)(uint64_t))sub_241A29620, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B2E6C8(uint64_t a1)
{
}

void sub_241B2E6FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241B2E770(uint64_t a1)
{
}

uint64_t sub_241B2E7A4()
{
  return sub_241B31130(&qword_26B031C48, sub_241B2E6C8);
}

uint64_t sub_241B2E7D8(void *a1, uint64_t a2, uint64_t a3)
{
  char v4 = 0;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v13 = MEMORY[0x263F8EE88];
  do
  {
    char v6 = v4;
    if (v5)
    {
      char v10 = v4;
      swift_bridgeObjectRetain();
      uint64_t v7 = 0;
      do
      {
        ++v7;
        uint64_t v11 = 0;
        uint64_t v12 = 0xE000000000000000;
        sub_241CDBE00();
        sub_241CDBEB0();
        sub_241CDB180();
        sub_241CDBEB0();
        sub_241CDB180();
        sub_241CDBEB0();
        sub_241CDB180();
        id v8 = objc_msgSend(a1, sel_identifier);
        sub_241CDB0D0();

        sub_241CDB180();
        swift_bridgeObjectRelease();
        sub_241CDB180();
        sub_241CD73D0();
        sub_241CDB180();
        swift_bridgeObjectRelease();
        sub_241C59F0C(&v11, v11, v12);
        swift_bridgeObjectRelease();
      }
      while (v5 != v7);
      swift_bridgeObjectRelease();
      char v6 = v10;
    }
    char v4 = 1;
  }
  while ((v6 & 1) == 0);
  return v13;
}

uint64_t sub_241B2EA10()
{
  unint64_t v1 = (int *)type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  uint64_t v15 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v15 + 24) & ~v15;
  uint64_t v14 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v16 = sub_241CD9940();
  uint64_t v3 = *(void *)(v16 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);

  uint64_t v6 = v0 + v2 + v1[9];
  uint64_t v7 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + v2 + v1[10];
  uint64_t v9 = sub_241CD78F0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  unint64_t v11 = (((((v14 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v4 + 16) & ~v4;
  unint64_t v12 = (((v5 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v11, v16);
  swift_bridgeObjectRelease();
  sub_241A31190(v0 + v12);

  return MEMORY[0x270FA0238](v0, v12 + 40, v15 | v4 | 7);
}

uint64_t sub_241B2ECCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_241CD9940() - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_241B159B4(a1, *(void **)(v2 + 16), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(void *)(v2 + v8), *(void *)(v2 + v8 + 8), v2 + v10, a2, *(void *)(v2 + v11), *(unsigned char *)(v2 + v11 + 8), *(unsigned char *)(v2 + v11 + 9), v2 + ((v11 + 17) & 0xFFFFFFFFFFFFFFF8));
}

unint64_t sub_241B2EE28()
{
  unint64_t result = qword_26B031B70;
  if (!qword_26B031B70)
  {
    sub_241B2FFAC(255, &qword_26B031B78, sub_241B2E6C8, sub_241A29620, (void (*)(void))sub_241B2E7A4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B031B70);
  }
  return result;
}

uint64_t sub_241B2EED0()
{
  unint64_t v1 = (int *)type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = v0 + v3 + v1[9];
  uint64_t v6 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + v3 + v1[10];
  uint64_t v8 = sub_241CD78F0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_unknownObjectRelease();

  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241B2F09C()
{
  uint64_t v1 = *(void *)(type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_241B2B274(v2);
}

uint64_t sub_241B2F0FC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char **sub_241B2F10C(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_241A51FC8(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_241B2F114()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241B2F124()
{
  return sub_241A51DB8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_241B2F12C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_241A51DE0(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_241B2F134()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241B2F144()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unint64_t sub_241B2F154()
{
  unint64_t result = qword_26B0385B0;
  if (!qword_26B0385B0)
  {
    sub_241A3082C(255, qword_26B0384D8, MEMORY[0x263F8E778], MEMORY[0x263F8D8D0]);
    sub_241B2B810(255, &qword_26B038590, (uint64_t (*)(uint64_t))sub_241B2F228, MEMORY[0x263F8D8F0]);
    sub_241B2F2AC();
    unint64_t result = swift_getFunctionTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0385B0);
  }
  return result;
}

void sub_241B2F228()
{
  if (!qword_26B038588)
  {
    sub_241B2B978(255, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241CDBB80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B038588);
    }
  }
}

void sub_241B2F2AC()
{
  if (!qword_26B0385A0)
  {
    sub_241A3082C(255, &qword_26B038598, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8D0]);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0385A0);
    }
  }
}

uint64_t sub_241B2F330()
{
  return sub_241B14958();
}

uint64_t sub_241B2F38C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241B2F39C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241B2F3AC()
{
  uint64_t v1 = (int *)type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 17) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;

  uint64_t v6 = v0 + v3 + v1[9];
  uint64_t v7 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + v3 + v1[10];
  uint64_t v9 = sub_241CD78F0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  unint64_t v11 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  swift_release();
  sub_241A31190(v0 + v12);

  return MEMORY[0x270FA0238](v0, v12 + 40, v2 | 7);
}

uint64_t sub_241B2F59C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v6 = *(unsigned char *)(v1 + 16);
  uint64_t v7 = *(void **)(v1 + v5);

  return sub_241B2B2CC(a1, v6, (void **)(v1 + v4), v7, v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_241B2F64C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241B2F684()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241B2F6B4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241B2F6C4()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_241B2F6CC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241B2F6DC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241B2F6EC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241B2F6FC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241B2F70C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241B2F71C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241B2F72C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241B2F764()
{
  return sub_241C59EB8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_241B2F76C()
{
  return sub_241C59EE4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_241B2F774@<X0>(_DWORD *a1@<X8>)
{
  return sub_241C59E88(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_241B2F77C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_241C59E28(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_241B2F788()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241B2F798()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

void sub_241B2F7A8()
{
  if (!qword_26B038318)
  {
    sub_241B2F894(255, &qword_26B038348, (uint64_t (*)(uint64_t))sub_241AF346C, MEMORY[0x263EFDCF0]);
    sub_241B3039C(255, &qword_26B0382D8, (void (*)(uint64_t))sub_241A75828, (void (*)(void))sub_241A75B08);
    sub_241B2F910();
    sub_241A75B3C();
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B038318);
    }
  }
}

void sub_241B2F894(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_241A3DA64();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_241B2F910()
{
  unint64_t result = qword_26B038340;
  if (!qword_26B038340)
  {
    sub_241B2F894(255, &qword_26B038348, (uint64_t (*)(uint64_t))sub_241AF346C, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B038340);
  }
  return result;
}

void sub_241B2F998()
{
  if (!qword_26B038328)
  {
    sub_241B2F894(255, &qword_26B038350, (uint64_t (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel, MEMORY[0x263EFDCF0]);
    sub_241B2F7A8();
    sub_241B2FA84();
    sub_241B31130(&qword_26B038310, (void (*)(uint64_t))sub_241B2F7A8);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B038328);
    }
  }
}

unint64_t sub_241B2FA84()
{
  unint64_t result = qword_26B02EA08;
  if (!qword_26B02EA08)
  {
    sub_241B2F894(255, &qword_26B038350, (uint64_t (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B02EA08);
  }
  return result;
}

uint64_t sub_241B2FB0C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_241B2FB5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_241B305E0(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
  *a1 = result;
  return result;
}

uint64_t sub_241B2FB90(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241B2B810(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241B2FC10()
{
  sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  swift_bridgeObjectRelease();
  uint64_t v5 = sub_241CD78F0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 17, v2 | 7);
}

uint64_t sub_241B2FD90(uint64_t a1, uint64_t a2)
{
  sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241B2FE24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v7 = (*(void *)(*(void *)(v5 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t result = sub_241B10268(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(unsigned char *)(v2 + v7 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_241B2FF10()
{
  sub_241A31190(v0 + 24);

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_241B2FF50(uint64_t a1, uint64_t a2)
{
  return sub_241B11468(a1, a2, *(void **)(v2 + 16), (void *)(v2 + 24));
}

uint64_t sub_241B2FF5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);
  sub_241AF346C();
  uint64_t result = v5(a1, a1 + *(int *)(v6 + 48));
  *a2 = result;
  return result;
}

void sub_241B2FFAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_241CDA3E0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B3003C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241B300A4()
{
  uint64_t v1 = type metadata accessor for TrendCoalescingNotificationViewModel();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v6 = sub_241CD78F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241B301F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241B3025C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for TrendCoalescingNotificationViewModel() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_241AF343C(v4, a1);
}

unint64_t sub_241B302CC()
{
  unint64_t result = qword_268D42B18;
  if (!qword_268D42B18)
  {
    sub_241B2FFAC(255, &qword_268D42B10, (void (*)(uint64_t))sub_241A97D54, (void (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel, (void (*)(void))sub_241A725E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42B18);
  }
  return result;
}

void sub_241B30368(uint64_t a1)
{
}

void sub_241B3039C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_241A3DA64();
    a4();
    unint64_t v6 = sub_241CDA3B0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_241B30434()
{
  return sub_241B31130(&qword_268D42B48, sub_241B30368);
}

unint64_t sub_241B30468()
{
  unint64_t result = qword_268D42B50;
  if (!qword_268D42B50)
  {
    sub_241B2F894(255, &qword_268D42B20, (uint64_t (*)(uint64_t))sub_241AF346C, MEMORY[0x263EFDE08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42B50);
  }
  return result;
}

uint64_t sub_241B304F0@<X0>(uint64_t a1@<X8>)
{
  return sub_241AF3394(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_241B304F8()
{
  unint64_t result = qword_268D42B60;
  if (!qword_268D42B60)
  {
    sub_241B3039C(255, &qword_268D42B40, sub_241B30368, (void (*)(void))sub_241B30434);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42B60);
  }
  return result;
}

uint64_t sub_241B30580(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241B305E0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v50 = a3;
  sub_241B2B810(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v52 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v51 = (uint64_t)v42 - v12;
  uint64_t v13 = sub_241CD6D70();
  uint64_t v47 = *(void *)(v13 - 8);
  uint64_t v48 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_241CDA1A0();
  uint64_t v16 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA160();
  id v19 = a1;
  uint64_t v20 = sub_241CDA190();
  os_log_type_t v21 = sub_241CDB670();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v44 = a2;
    uint64_t v23 = v22;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v54 = v43;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v53 = sub_241A33FE4(0xD000000000000034, 0x8000000241CEE6A0, &v54);
    uint64_t v46 = a5;
    sub_241CDBBF0();
    *(_WORD *)(v23 + 12) = 2080;
    v42[1] = v23 + 14;
    id v24 = objc_msgSend(v19, sel_profileIdentifier);
    id v25 = objc_msgSend(v24, sel_identifier);
    uint64_t v45 = a4;
    id v26 = v25;

    sub_241CD6D50();
    uint64_t v27 = sub_241CD6D20();
    unint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v48);
    uint64_t v53 = sub_241A33FE4(v27, v29, &v54);
    a5 = v46;
    sub_241CDBBF0();

    a4 = v45;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v20, v21, "[%s]_%s: [Trend Notification] Notifications are enabled", (uint8_t *)v23, 0x16u);
    uint64_t v30 = v43;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v30, -1, -1);
    uint64_t v31 = v23;
    a2 = v44;
    MEMORY[0x245637F20](v31, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v49);
  uint64_t v32 = v51;
  sub_241A78530(v51);
  id v33 = v50;
  unsigned int v34 = objc_msgSend(v50, sel_hasDiscoveryDateData);
  uint64_t v35 = (uint64_t)v52;
  if (v34)
  {
    objc_msgSend(v33, sel_discoveryDateData);
    id v36 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v37 = sub_241CD6D00();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v35, 0, 1, v37);
  }
  else
  {
    uint64_t v38 = sub_241CD6D00();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v35, 1, 1, v38);
  }
  uint64_t v39 = sub_241A6EF0C(v19, a2, v35, v32, a4, a5);
  uint64_t v40 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241B30FD8(v35, &qword_26B0385B8, MEMORY[0x263F07490]);
  sub_241B30FD8(v32, &qword_26B0385B8, v40);
  return v39;
}

void sub_241B30AF0()
{
  if (!qword_26B031C00)
  {
    sub_241B2F894(255, &qword_26B031C60, (uint64_t (*)(uint64_t))sub_241B2E770, MEMORY[0x263EFDCF0]);
    sub_241A97D54();
    sub_241B30BAC();
    sub_241A725E0();
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031C00);
    }
  }
}

unint64_t sub_241B30BAC()
{
  unint64_t result = qword_26B031C58;
  if (!qword_26B031C58)
  {
    sub_241B2F894(255, &qword_26B031C60, (uint64_t (*)(uint64_t))sub_241B2E770, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B031C58);
  }
  return result;
}

void sub_241B30C34()
{
  if (!qword_26B031BD0)
  {
    sub_241B30AF0();
    sub_241B2B810(255, &qword_26B031C70, (uint64_t (*)(uint64_t))sub_241B2E770, MEMORY[0x263EFDDF8]);
    sub_241B31130(&qword_26B031BF8, (void (*)(uint64_t))sub_241B30AF0);
    sub_241B30D20();
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031BD0);
    }
  }
}

unint64_t sub_241B30D20()
{
  unint64_t result = qword_26B031C68;
  if (!qword_26B031C68)
  {
    sub_241B2B810(255, &qword_26B031C70, (uint64_t (*)(uint64_t))sub_241B2E770, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B031C68);
  }
  return result;
}

void sub_241B30DA8()
{
  if (!qword_26B032618)
  {
    sub_241B30E74();
    sub_241A313AC(255, &qword_26B0303B8);
    sub_241B31130(&qword_26B032860, (void (*)(uint64_t))sub_241B30E74);
    sub_241AAD6A4();
    unint64_t v0 = sub_241CDA4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032618);
    }
  }
}

void sub_241B30E74()
{
  if (!qword_26B032868)
  {
    sub_241A3082C(255, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032868);
    }
  }
}

void sub_241B30F08()
{
  if (!qword_26B032488)
  {
    sub_241B30DA8();
    sub_241A3082C(255, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    sub_241B31130(&qword_26B032610, (void (*)(uint64_t))sub_241B30DA8);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032488);
    }
  }
}

uint64_t sub_241B30FD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241B2B810(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241B31048()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_241B31080(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_241B11B44(*(void *)a1, *(void *)(a1 + 8), *(void **)(v2 + 16));
  *a2 = v4;
  a2[1] = v5;
}

uint64_t sub_241B310B4()
{
  sub_241A31190(v0 + 16);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_241B310F4()
{
  return sub_241AF34DC((void *)(v0 + 16));
}

uint64_t sub_241B31100@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_241B31130(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TrendVisibilityOverrides()
{
  return &type metadata for TrendVisibilityOverrides;
}

char *sub_241B31188(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    unint64_t v8 = a2[1];
    uint64_t v9 = a2[2];
    *((void *)a1 + 1) = v8;
    *((void *)a1 + 2) = v9;
    uint64_t v11 = a2[3];
    uint64_t v10 = a2[4];
    *((void *)a1 + 3) = v11;
    *((void *)a1 + 4) = v10;
    uint64_t v12 = a3[9];
    uint64_t v38 = (uint64_t)a2 + v12;
    uint64_t v39 = &a1[v12];
    uint64_t v13 = sub_241CD6EE0();
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v14 = v4;
    uint64_t v15 = v8;
    uint64_t v16 = v9;
    uint64_t v17 = v11;
    uint64_t v18 = v10;
    v37(v39, v38, v13);
    uint64_t v19 = a3[10];
    uint64_t v20 = &v7[v19];
    os_log_type_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_241CD78F0();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v25 = a3[12];
    *(_OWORD *)&v7[a3[11]] = *(_OWORD *)((char *)a2 + a3[11]);
    id v26 = *(char **)((char *)a2 + v25);
    *(void *)&v7[v25] = v26;
    uint64_t v27 = a3[14];
    v7[a3[13]] = *((unsigned char *)a2 + a3[13]);
    unint64_t v28 = &v7[v27];
    uint64_t v29 = (uint64_t)a2 + v27;
    *(void *)unint64_t v28 = *(void *)v29;
    v28[8] = *(unsigned char *)(v29 + 8);
    uint64_t v30 = a3[15];
    uint64_t v31 = a3[16];
    uint64_t v32 = &v7[v30];
    id v33 = (char **)((char *)a2 + v30);
    uint64_t v34 = v33[1];
    *(void *)uint64_t v32 = *v33;
    *((void *)v32 + 1) = v34;
    v7[v31] = *((unsigned char *)a2 + v31);
    swift_unknownObjectRetain();
    id v35 = v26;
  }
  swift_retain();
  return v7;
}

uint64_t sub_241B3140C(id *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[9];
  uint64_t v5 = sub_241CD6EE0();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t v6 = (char *)a1 + a2[10];
  uint64_t v7 = sub_241CD78F0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_unknownObjectRelease();

  return swift_release();
}

void *sub_241B31558(void *a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = *(void **)(a2 + 16);
  uint64_t v9 = *(void **)(a2 + 24);
  a1[2] = v8;
  a1[3] = v9;
  uint64_t v10 = *(void **)(a2 + 32);
  a1[4] = v10;
  uint64_t v11 = a3[9];
  uint64_t v37 = a2 + v11;
  uint64_t v38 = (char *)a1 + v11;
  uint64_t v12 = sub_241CD6EE0();
  id v36 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  id v13 = v6;
  id v14 = v7;
  id v15 = v8;
  id v16 = v9;
  id v17 = v10;
  v36(v38, v37, v12);
  uint64_t v18 = a3[10];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_241CD78F0();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v25 = *(void **)(a2 + v24);
  *(void *)((char *)a1 + v24) = v25;
  uint64_t v26 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a3[15];
  uint64_t v30 = a3[16];
  uint64_t v31 = (void *)((char *)a1 + v29);
  uint64_t v32 = (void *)(a2 + v29);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  *((unsigned char *)a1 + v30) = *(unsigned char *)(a2 + v30);
  swift_unknownObjectRetain();
  id v34 = v25;
  swift_retain();
  return a1;
}

uint64_t sub_241B31798(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(void **)(a2 + 16);
  id v13 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  id v14 = v12;

  id v15 = *(void **)(a2 + 24);
  id v16 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v15;
  id v17 = v15;

  uint64_t v18 = *(void **)(a2 + 32);
  uint64_t v19 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v18;
  id v20 = v18;

  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = a3[10];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = sub_241CD78F0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 24))(v26, v27, v28);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_6;
  }
  if (v32)
  {
LABEL_6:
    sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v29 + 16))(v26, v27, v28);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_7:
  uint64_t v34 = a3[11];
  id v35 = (void *)(a1 + v34);
  id v36 = (void *)(a2 + v34);
  uint64_t v37 = v36[1];
  *id v35 = *v36;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v35[1] = v37;
  uint64_t v38 = a3[12];
  uint64_t v39 = *(void **)(a2 + v38);
  uint64_t v40 = *(void **)(a1 + v38);
  *(void *)(a1 + v38) = v39;
  id v41 = v39;

  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v42 = a3[14];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  char v45 = *(unsigned char *)(v44 + 8);
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = v45;
  uint64_t v46 = a3[15];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = v48[1];
  void *v47 = *v48;
  v47[1] = v49;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_241B31A88(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[10];
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_241CD78F0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  return a1;
}

uint64_t sub_241B31C74(uint64_t a1, void *a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = a2[2];

  uint64_t v9 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = a2[3];

  uint64_t v10 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = a2[4];

  uint64_t v11 = a3[9];
  uint64_t v12 = a1 + v11;
  id v13 = (char *)a2 + v11;
  uint64_t v14 = sub_241CD6EE0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_241CD78F0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_7:
  uint64_t v24 = a3[11];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  swift_unknownObjectRelease();
  v25[1] = v27;
  uint64_t v28 = a3[12];
  uint64_t v29 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = *(void *)((char *)a2 + v28);

  uint64_t v30 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  uint64_t v31 = a1 + v30;
  int v32 = (char *)a2 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = v32[8];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)((char *)a2 + a3[15]);
  swift_release();
  *(unsigned char *)(a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  return a1;
}

uint64_t sub_241B31F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B31F48);
}

uint64_t sub_241B31F48(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_241CD6EE0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_241B320A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B320B8);
}

void *sub_241B320B8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_241CD6EE0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      sub_241B2B810(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 40);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_241B32214()
{
  sub_241CD6EE0();
  if (v0 <= 0x3F)
  {
    sub_241B2B810(319, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_241B32358(uint64_t a1)
{
  uint64_t result = sub_241B31130(&qword_268D42B08, (void (*)(uint64_t))type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_241B323B4()
{
  unint64_t result = qword_268D42B68;
  if (!qword_268D42B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42B68);
  }
  return result;
}

unint64_t sub_241B3240C()
{
  unint64_t result = qword_268D42B70;
  if (!qword_268D42B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42B70);
  }
  return result;
}

unint64_t sub_241B32464()
{
  unint64_t result = qword_268D42B78;
  if (!qword_268D42B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42B78);
  }
  return result;
}

unint64_t sub_241B324BC()
{
  unint64_t result = qword_268D42B80;
  if (!qword_268D42B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42B80);
  }
  return result;
}

void *sub_241B32564(void *a1, uint64_t a2)
{
  return sub_241B3258C(a1, a2, (uint64_t (*)(void))sub_241C0B1DC, (unint64_t *)&qword_26B0304E8);
}

void *sub_241B3258C(void *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v9 = a3();
      if (v10)
      {
        uint64_t v8 = *(void **)(*(void *)(a2 + 56) + 8 * v9);
        id v11 = v8;
        return v8;
      }
    }
    return 0;
  }
  id v6 = a1;
  uint64_t v7 = sub_241CDBEE0();

  if (!v7) {
    return 0;
  }
  sub_241A313AC(0, a4);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v8 = v13;
  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_241B32674()
{
  return sub_241B3AA48();
}

uint64_t sub_241B32680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241B3ADE8(a2, a3, sub_241A9962C) & 1;
}

unint64_t sub_241B326B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v32 = MEMORY[0x263F8EE78];
  id v6 = self;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  *(void *)(v7 + 24) = &v32;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_241B3A900;
  *(void *)(v8 + 24) = v7;
  aBlock[4] = (uint64_t)sub_241B3A918;
  uint64_t v31 = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_241B334E8;
  aBlock[3] = (uint64_t)&unk_26F5C3060;
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = v31;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel__enumerateObjectTypesWithHandler_, v9);
  _Block_release(v9);
  swift_getObjectType();
  id v11 = v5;
  sub_241CD93F0();
  swift_retain_n();
  uint64_t v12 = sub_241CDA190();
  os_log_type_t v13 = sub_241CDB670();
  if (!os_log_type_enabled(v12, v13))
  {

    swift_release_n();
    int v21 = *(void (**)(char *, uint64_t))(v3 + 8);
    v3 += 8;
    v21(v11, v2);
    goto LABEL_6;
  }
  uint64_t v26 = v11;
  uint64_t v27 = v2;
  uint64_t v10 = swift_slowAlloc();
  uint64_t v25 = swift_slowAlloc();
  aBlock[0] = v25;
  *(_DWORD *)uint64_t v10 = 136446466;
  swift_retain();
  uint64_t v14 = sub_241B39708();
  unint64_t v16 = v15;
  swift_release();
  uint64_t v29 = sub_241A33FE4(v14, v16, aBlock);
  sub_241CDBBF0();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v10 + 12) = 2048;
  swift_beginAccess();
  if (v32 >> 62) {
    goto LABEL_9;
  }
  uint64_t v17 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v18 = v27;
    uint64_t v28 = v17;
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v12, v13, "%{public}s Creating %ld work criterias", (uint8_t *)v10, 0x16u);
    uint64_t v19 = v25;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v19, -1, -1);
    MEMORY[0x245637F20](v10, -1, -1);

    uint64_t v20 = *(void (**)(char *, uint64_t))(v3 + 8);
    v3 += 8;
    v20(v26, v18);
LABEL_6:
    swift_beginAccess();
    unint64_t v22 = v32;
    swift_release();
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_9:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  return v22;
}

void sub_241B32AD4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_241CD9410();
  MEMORY[0x270FA5388](v6 - 8);
  if (a1)
  {
    id v22 = a1;
    if (objc_msgSend(v22, sel_enabled))
    {
      uint64_t v7 = *(void **)(a2 + 32);
      id v8 = objc_msgSend(v7, sel_profileIdentifier);
      id v9 = objc_msgSend(v8, sel_type);

      if (v9 == (id)2)
      {
        sub_241B333EC();
        sub_241B3A9E0(0, (unint64_t *)&qword_26B036980, (unint64_t *)&qword_26B035648, MEMORY[0x263F45410], MEMORY[0x263F8E0F8]);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_241CEB720;
        sub_241CD7D00();
        uint64_t v11 = sub_241CD9680();
        *(void *)(v10 + 56) = v11;
        uint64_t v12 = sub_241B39964((unint64_t *)&qword_26B035600, MEMORY[0x263F453F0]);
        *(void *)(v10 + 64) = v12;
        sub_241A25BC8((uint64_t *)(v10 + 32));
        sub_241CD7CF0();
        sub_241CD7E60();
        *(void *)(v10 + 96) = v11;
        *(void *)(v10 + 104) = v12;
        sub_241A25BC8((uint64_t *)(v10 + 72));
        sub_241CD7E50();
        sub_241CD9460();
        swift_allocObject();
        sub_241CD9430();
        uint64_t v13 = swift_retain();
        MEMORY[0x2456365D0](v13);
        if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241CDB2F0();
        }
        sub_241CDB310();
        sub_241CDB2E0();

        swift_release();
      }
      else
      {
        switch((unint64_t)objc_msgSend(v22, sel_code))
        {
          case 0uLL:
          case 1uLL:
          case 2uLL:
          case 3uLL:
          case 4uLL:
          case 5uLL:
          case 7uLL:
          case 8uLL:
          case 9uLL:
          case 0xAuLL:
          case 0xCuLL:
          case 0xDuLL:
          case 0xEuLL:
          case 0xFuLL:
          case 0x12uLL:
          case 0x13uLL:
          case 0x14uLL:
          case 0x15uLL:
          case 0x16uLL:
          case 0x17uLL:
          case 0x18uLL:
          case 0x19uLL:
          case 0x1AuLL:
          case 0x1BuLL:
          case 0x1CuLL:
          case 0x1DuLL:
          case 0x1EuLL:
          case 0x1FuLL:
          case 0x20uLL:
          case 0x21uLL:
          case 0x22uLL:
          case 0x23uLL:
          case 0x24uLL:
          case 0x25uLL:
          case 0x26uLL:
          case 0x27uLL:
          case 0x28uLL:
          case 0x29uLL:
          case 0x2AuLL:
          case 0x2BuLL:
          case 0x2CuLL:
          case 0x2DuLL:
          case 0x2EuLL:
          case 0x2FuLL:
          case 0x30uLL:
          case 0x31uLL:
          case 0x32uLL:
          case 0x33uLL:
          case 0x34uLL:
          case 0x35uLL:
          case 0x36uLL:
          case 0x37uLL:
          case 0x38uLL:
          case 0x39uLL:
          case 0x3AuLL:
          case 0x3CuLL:
          case 0x3DuLL:
          case 0x3EuLL:
          case 0x3FuLL:
          case 0x46uLL:
          case 0x47uLL:
          case 0x48uLL:
          case 0x49uLL:
          case 0x4BuLL:
          case 0x4EuLL:
          case 0x4FuLL:
          case 0x50uLL:
          case 0x53uLL:
          case 0x57uLL:
          case 0x59uLL:
          case 0x5AuLL:
          case 0x5BuLL:
          case 0x5CuLL:
          case 0x5FuLL:
          case 0x60uLL:
          case 0x61uLL:
          case 0x63uLL:
          case 0x64uLL:
          case 0x65uLL:
          case 0x6EuLL:
          case 0x6FuLL:
          case 0x71uLL:
          case 0x72uLL:
          case 0x76uLL:
          case 0x7CuLL:
          case 0x7DuLL:
          case 0x89uLL:
          case 0x8AuLL:
          case 0x8BuLL:
          case 0x8CuLL:
          case 0x90uLL:
          case 0x91uLL:
          case 0x93uLL:
          case 0x9CuLL:
          case 0x9DuLL:
          case 0x9EuLL:
          case 0x9FuLL:
          case 0xA0uLL:
          case 0xA1uLL:
          case 0xA2uLL:
          case 0xA3uLL:
          case 0xA4uLL:
          case 0xA5uLL:
          case 0xA6uLL:
          case 0xA7uLL:
          case 0xA8uLL:
          case 0xA9uLL:
          case 0xAAuLL:
          case 0xABuLL:
          case 0xACuLL:
          case 0xADuLL:
          case 0xB2uLL:
          case 0xB3uLL:
          case 0xB6uLL:
          case 0xB7uLL:
          case 0xBAuLL:
          case 0xBBuLL:
          case 0xBCuLL:
          case 0xBDuLL:
          case 0xBFuLL:
          case 0xC0uLL:
          case 0xC1uLL:
          case 0xC2uLL:
          case 0xC3uLL:
          case 0xC4uLL:
          case 0xC7uLL:
          case 0xC9uLL:
          case 0xCAuLL:
          case 0xCBuLL:
          case 0xCCuLL:
          case 0xCDuLL:
          case 0xCEuLL:
          case 0xCFuLL:
          case 0xDCuLL:
          case 0xDDuLL:
          case 0xDEuLL:
          case 0xDFuLL:
          case 0xE0uLL:
          case 0xE1uLL:
          case 0xE2uLL:
          case 0xE5uLL:
          case 0xE6uLL:
          case 0xE7uLL:
          case 0xE8uLL:
          case 0xE9uLL:
          case 0xEAuLL:
          case 0xEBuLL:
          case 0xECuLL:
          case 0xEDuLL:
          case 0xF0uLL:
          case 0xF1uLL:
          case 0xF2uLL:
          case 0xF3uLL:
          case 0xF4uLL:
          case 0xF8uLL:
          case 0xF9uLL:
          case 0xFAuLL:
          case 0xFBuLL:
          case 0x100uLL:
          case 0x101uLL:
          case 0x102uLL:
          case 0x103uLL:
          case 0x104uLL:
          case 0x106uLL:
          case 0x107uLL:
          case 0x108uLL:
          case 0x109uLL:
          case 0x10AuLL:
          case 0x10DuLL:
          case 0x10EuLL:
          case 0x110uLL:
          case 0x112uLL:
          case 0x113uLL:
          case 0x114uLL:
          case 0x115uLL:
          case 0x117uLL:
          case 0x118uLL:
          case 0x119uLL:
          case 0x11AuLL:
          case 0x11BuLL:
          case 0x11CuLL:
          case 0x11EuLL:
          case 0x11FuLL:
          case 0x120uLL:
          case 0x126uLL:
          case 0x127uLL:
          case 0x128uLL:
          case 0x129uLL:
          case 0x12DuLL:
          case 0x12EuLL:
          case 0x12FuLL:
          case 0x131uLL:
          case 0x139uLL:
          case 0x13AuLL:
            id v14 = objc_msgSend(self, sel_appleBalanceMetricsType);
            if (v14)
            {
              unint64_t v15 = v14;
              sub_241A313AC(0, (unint64_t *)&qword_26B038440);
              id v21 = v22;
              char v16 = sub_241CDBB60();

              if (v16)
              {
                id v17 = objc_msgSend(v7, sel_profileIdentifier);
                id v18 = objc_msgSend(v17, sel_type);

                if (v18 == (id)3)
                {
                  uint64_t v19 = v21;
                  goto LABEL_13;
                }
              }
            }
            sub_241B399AC(v7);
            sub_241B333EC();
            sub_241CD9460();
            swift_allocObject();
            sub_241CD9430();
            uint64_t v20 = swift_retain();
            MEMORY[0x2456365D0](v20);
            if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_241CDB2F0();
            }
            sub_241CDB310();
            sub_241CDB2E0();
            swift_release();

            break;
          default:
            goto LABEL_12;
        }
      }
    }
    else
    {
LABEL_12:
      uint64_t v19 = v22;
LABEL_13:
    }
  }
}

uint64_t sub_241B333EC()
{
  uint64_t v0 = (void *)sub_241CDB430();
  unsigned int v1 = objc_msgSend(v0, sel_isAbleToWriteHealthSensitiveLogs);

  uint64_t v2 = (void *)sub_241CDB430();
  id v3 = objc_msgSend(v2, sel_identifier);

  uint64_t v4 = sub_241CDB0D0();
  uint64_t v6 = v5;

  if (v1)
  {
    uint64_t v7 = v4;
    uint64_t v8 = v6;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = (void *)sub_241CDB430();
    id v12 = objc_msgSend(v11, sel_sensitiveLoggingIdentifier);

    uint64_t v13 = sub_241CDB0D0();
    uint64_t v15 = v14;

    uint64_t v7 = v4;
    uint64_t v8 = v6;
    uint64_t v9 = v13;
    uint64_t v10 = v15;
  }

  return MEMORY[0x270F35F20](v7, v8, v9, v10);
}

void sub_241B334E8(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  id v4 = a2;
  v3(a2);
}

uint64_t sub_241B33544(unsigned int (*a1)(char *, uint64_t, uint64_t), uint64_t a2, void (*a3)(uint64_t, void, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v205 = a4;
  long long v246 = a3;
  v251 = (unsigned int (*)(char *, uint64_t, uint64_t))a2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B3BF50(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v207 = (uint64_t)&v203 - v7;
  uint64_t v209 = sub_241CD6D00();
  uint64_t v208 = *(void *)(v209 - 8);
  MEMORY[0x270FA5388](v209);
  v206 = (char *)&v203 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F45330];
  sub_241B3BF50(0, &qword_26B035080, MEMORY[0x263F458C0], MEMORY[0x263F45330]);
  uint64_t v213 = v10;
  uint64_t v212 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  v211 = (char *)&v203 - v11;
  sub_241B3BF50(0, &qword_26B035640, (uint64_t (*)(uint64_t))sub_241B3AF48, v5);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v214 = (char *)&v203 - v13;
  uint64_t v14 = sub_241CDA1A0();
  uint64_t v15 = *(void (***)(char *, uint64_t))(v14 - 8);
  uint64_t v244 = v14;
  long long v245 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v247 = (char *)&v203 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v216 = (char *)&v203 - v19;
  MEMORY[0x270FA5388](v18);
  int v217 = (char *)&v203 - v20;
  sub_241B3BF50(0, &qword_26B035088, MEMORY[0x263F459C8], v9);
  uint64_t v220 = v21;
  uint64_t v219 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v218 = (char *)&v203 - v22;
  sub_241B3BF50(0, &qword_26B0355F8, (uint64_t (*)(uint64_t))sub_241B3AFF0, v5);
  MEMORY[0x270FA5388](v23 - 8);
  v222 = (char *)&v203 - v24;
  sub_241B3BF50(0, &qword_26B032040, MEMORY[0x263F45718], v5);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v221 = (char *)&v203 - v26;
  sub_241B3BF50(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, v5);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v215 = (char *)&v203 - v28;
  sub_241AC7534();
  uint64_t v240 = v29;
  uint64_t v236 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v235 = (char *)&v203 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = sub_241CD95E0();
  uint64_t v239 = *(void *)(v234 - 8);
  MEMORY[0x270FA5388](v234);
  uint64_t v237 = (char *)&v203 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v238 = _s8WorkPlanVMa();
  uint64_t v233 = *(void *)(v238 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v238);
  unint64_t v232 = (char *)&v203 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v242 = (char *)&v203 - v34;
  uint64_t v231 = sub_241CD6D70();
  uint64_t v229 = *(void *)(v231 - 8);
  MEMORY[0x270FA5388](v231);
  v204 = (char *)&v203 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v36 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
  sub_241B3BED8(0, (unint64_t *)&qword_26B0354B0, &qword_26B0354A8, MEMORY[0x263F07508]);
  uint64_t v223 = v37;
  MEMORY[0x270FA5388](v37);
  uint64_t v230 = (char *)&v203 - v38;
  sub_241B3BF50(0, &qword_26B0354A8, v36, v5);
  uint64_t v40 = MEMORY[0x270FA5388](v39 - 8);
  uint64_t v210 = (uint64_t)&v203 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v241 = (uint64_t)&v203 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v249 = (uint64_t)&v203 - v44;
  uint64_t v228 = sub_241CD6EE0();
  uint64_t v227 = *(void *)(v228 - 8);
  MEMORY[0x270FA5388](v228);
  uint64_t v226 = (char *)&v203 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B3BF50(0, &qword_26B0355B8, MEMORY[0x263F45948], v9);
  v243 = v46;
  uint64_t v225 = *((void *)v46 - 1);
  uint64_t v47 = MEMORY[0x270FA5388](v46);
  uint64_t v224 = (char *)&v203 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  id v50 = (char *)&v203 - v49;
  sub_241B3BF50(0, &qword_26B035658, (uint64_t (*)(uint64_t))sub_241B3B0F4, v5);
  uint64_t v52 = MEMORY[0x270FA5388](v51 - 8);
  uint64_t v54 = (char *)&v203 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v52);
  unint64_t v56 = (char *)&v203 - v55;
  uint64_t v57 = sub_241CD9410();
  uint64_t v58 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  id v60 = (char *)&v203 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = self;
  v248 = a1;
  sub_241CD9450();
  sub_241CD9400();
  unint64_t v62 = *(void (**)(char *, uint64_t))(v58 + 8);
  v62(v60, v57);
  uint64_t v63 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  uint64_t v64 = (char *)objc_msgSend(v61, sel__typeWithIdentifier_, v63);

  if (!v64)
  {
    swift_getObjectType();
    sub_241CD93F0();
    swift_retain_n();
    swift_retain_n();
    uint64_t v71 = sub_241CDA190();
    os_log_type_t v72 = sub_241CDB660();
    int v73 = v72;
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v74 = swift_slowAlloc();
      v251 = (unsigned int (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
      os_log_type_t v252 = v251;
      *(_DWORD *)uint64_t v74 = 136446466;
      swift_retain();
      LODWORD(v249) = v73;
      uint64_t v75 = sub_241B39708();
      unint64_t v77 = v76;
      swift_release();
      uint64_t v256 = sub_241A33FE4(v75, v77, (uint64_t *)&v252);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2082;
      uint64_t v250 = (id *)(v74 + 14);
      sub_241CD9450();
      sub_241B39964(&qword_268D42B90, MEMORY[0x263F45318]);
      uint64_t v78 = sub_241CDC0D0();
      unint64_t v80 = v79;
      v62(v60, v57);
      uint64_t v256 = sub_241A33FE4(v78, v80, (uint64_t *)&v252);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v249, "[%{public}s Unexpected work criteria identifier received: %{public}s", (uint8_t *)v74, 0x16u);
      uint64_t v81 = (uint64_t)v251;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v81, -1, -1);
      MEMORY[0x245637F20](v74, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    v245[1](v247, v244);
    return MEMORY[0x263F8EE78];
  }
  id v65 = objc_msgSend(v250[4], sel_profileIdentifier);
  id v66 = objc_msgSend(v65, sel_type);

  if (v66 == (id)2)
  {
    uint64_t v247 = v64;
    sub_241CD7D00();
    sub_241CD9490();
    sub_241B39964(&qword_268D42B98, MEMORY[0x263F45948]);
    sub_241CD9660();
    uint64_t v67 = *(void (***)(char *, uint64_t))(v225 + 8);
    ((void (*)(char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t)))v67)(v50, v243);
    sub_241B3B0F4();
    uint64_t v69 = v68;
    uint64_t v70 = *(void *)(v68 - 8);
    v248 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
    if (v248(v56, 1, v68) == 1)
    {
      sub_241B3AED8((uint64_t)v56, &qword_26B035658, (uint64_t (*)(uint64_t))sub_241B3B0F4);
      uint64_t v250 = 0;
    }
    else
    {
      sub_241CD9720();
      id v97 = v252;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v56, v69);
      uint64_t v256 = (uint64_t)v97;
      id v98 = v226;
      sub_241CD6EA0();
      sub_241B3B1FC();
      long long v245 = v67;
      sub_241B39964(&qword_268D42BA8, (void (*)(uint64_t))sub_241B3B1FC);
      uint64_t v67 = v245;
      uint64_t v250 = (id *)sub_241CDB240();
      (*(void (**)(char *, uint64_t))(v227 + 8))(v98, v228);
      swift_bridgeObjectRelease();
    }
    int v99 = v224;
    sub_241CD9490();
    sub_241CD9660();
    ((void (*)(char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t)))v67)(v99, v243);
    if (v248(v54, 1, v69) == 1)
    {
      sub_241B3AED8((uint64_t)v54, &qword_26B035658, (uint64_t (*)(uint64_t))sub_241B3B0F4);
      uint64_t v100 = 0;
    }
    else
    {
      sub_241CD9720();
      uint64_t v119 = v252;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v54, v69);
      uint64_t v256 = (uint64_t)v119;
      uint64_t v120 = v226;
      sub_241CD6EA0();
      sub_241B3B1FC();
      sub_241B39964(&qword_268D42BA8, (void (*)(uint64_t))sub_241B3B1FC);
      uint64_t v100 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_241CDB240();
      (*(void (**)(char *, uint64_t))(v227 + 8))(v120, v228);
      swift_bridgeObjectRelease();
    }
    uint64_t v121 = v231;
    uint64_t v122 = (uint64_t)v230;
    uint64_t v123 = v229;
    if (v250)
    {
      id v124 = objc_msgSend(v250, sel_UUID);
      uint64_t v125 = v249;
      sub_241CD6D50();

      uint64_t v126 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v123 + 56);
      v126(v125, 0, 1, v121);
    }
    else
    {
      uint64_t v126 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v229 + 56);
      v126(v249, 1, 1, v231);
    }
    v248 = v100;
    if (v100)
    {
      id v127 = objc_msgSend(v100, sel_UUID);
      uint64_t v128 = v241;
      sub_241CD6D50();

      uint64_t v129 = 0;
      uint64_t v130 = v249;
    }
    else
    {
      uint64_t v129 = 1;
      uint64_t v130 = v249;
      uint64_t v128 = v241;
    }
    uint64_t v131 = v223;
    v126(v128, v129, 1, v121);
    uint64_t v132 = v122 + *(int *)(v131 + 48);
    uint64_t v133 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
    sub_241B3BCE8(v130, v122, &qword_26B0354A8, MEMORY[0x263F07508]);
    sub_241B3BCE8(v128, v132, &qword_26B0354A8, v133);
    uint64_t v134 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48);
    if (v134(v122, 1, v121) == 1)
    {
      uint64_t v135 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
      sub_241B3AED8(v128, &qword_26B0354A8, MEMORY[0x263F07508]);
      sub_241B3AED8(v130, &qword_26B0354A8, v135);
      if (v134(v132, 1, v121) == 1)
      {
        sub_241B3AED8(v122, &qword_26B0354A8, MEMORY[0x263F07508]);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v136 = v210;
      sub_241B3BCE8(v122, v210, &qword_26B0354A8, MEMORY[0x263F07508]);
      if (v134(v132, 1, v121) != 1)
      {
        uint64_t v156 = v204;
        (*(void (**)(char *, uint64_t, uint64_t))(v123 + 32))(v204, v132, v121);
        sub_241B39964(&qword_26B0369F8, MEMORY[0x263F07508]);
        char v157 = sub_241CDB050();
        uint64_t v158 = *(void (**)(char *, uint64_t))(v123 + 8);
        v158(v156, v121);
        uint64_t v159 = v136;
        uint64_t v160 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
        sub_241B3AED8(v241, &qword_26B0354A8, MEMORY[0x263F07508]);
        sub_241B3AED8(v249, &qword_26B0354A8, v160);
        v158((char *)v159, v121);
        sub_241B3AED8(v122, &qword_26B0354A8, v160);
        if (v157)
        {
LABEL_42:
          sub_241CD7C70();
          uint64_t v254 = sub_241CD9680();
          uint64_t v255 = sub_241B39964((unint64_t *)&qword_26B035600, MEMORY[0x263F453F0]);
          sub_241A25BC8((uint64_t *)&v252);
          sub_241CD7C60();
          char v161 = sub_241CD9650();
          sub_241A31190((uint64_t)&v252);
          if (v161)
          {

            return MEMORY[0x263F8EE78];
          }
        }
LABEL_45:
        uint64_t v163 = (int *)v238;
        uint64_t v164 = v242;
        uint64_t v165 = (uint64_t)&v242[*(int *)(v238 + 24)];
        uint64_t v166 = sub_241CD78F0();
        uint64_t v167 = *(void *)(v166 - 8);
        uint64_t v168 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v167 + 56);
        uint64_t v249 = v165;
        v243 = v168;
        uint64_t v244 = v166;
        uint64_t v241 = v167 + 56;
        ((void (*)(uint64_t, uint64_t, uint64_t))v168)(v165, 1, 1);
        uint64_t v169 = (uint64_t)&v164[v163[8]];
        sub_241AC75E4();
        uint64_t v171 = v170;
        uint64_t v172 = *(void *)(v170 - 8);
        uint64_t v173 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v172 + 56);
        long long v245 = (void (**)(char *, uint64_t))(v172 + 56);
        long long v246 = v173;
        v173(v169, 1, 1, v170);
        uint64_t v174 = v247;
        objc_msgSend(v174, sel_code);
        id v175 = v237;
        sub_241CD95D0();
        uint64_t v176 = v239;
        uint64_t v177 = v234;
        (*(void (**)(unsigned char *, char *, uint64_t))(v239 + 16))(&v164[v163[5]], v175, v234);
        *uint64_t v164 = 1;
        os_log_type_t v252 = 0;
        char v253 = 1;
        type metadata accessor for HKMCPregnancyState(0);
        sub_241B39964((unint64_t *)&unk_26B031F00, type metadata accessor for HKMCPregnancyState);
        uint64_t v178 = v235;
        sub_241CD8080();
        uint64_t v247 = v174;

        (*(void (**)(char *, uint64_t))(v176 + 8))(v175, v177);
        uint64_t v179 = v178;
        uint64_t v180 = v250;
        (*(void (**)(unsigned char *, char *, uint64_t))(v236 + 32))(&v164[v163[7]], v179, v240);
        if (v180)
        {
          sub_241A313AC(0, (unint64_t *)&qword_26B031F28);
          uint64_t v181 = v180;
          uint64_t v182 = (uint64_t)v215;
          sub_241CDAED0();
          v246(v182, 0, 1, v171);
          sub_241B3BDC4(v182, v169, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4);
        }
        else
        {
          sub_241B3AED8(v169, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4);
          v246(v169, 1, 1, v171);
        }
        uint64_t v183 = v233;
        uint64_t v184 = (uint64_t)v222;
        uint64_t v185 = (uint64_t)v221;
        uint64_t v186 = v220;
        uint64_t v187 = v219;
        uint64_t v188 = v218;
        uint64_t v189 = v249;
        uint64_t v190 = v247;
        sub_241CD7E60();
        sub_241CD94B0();
        sub_241B39964(&qword_268D42BA0, MEMORY[0x263F459C8]);
        sub_241CD9660();
        (*(void (**)(char *, uint64_t))(v187 + 8))(v188, v186);
        sub_241B3AFF0();
        uint64_t v192 = v191;
        uint64_t v193 = *(void *)(v191 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v193 + 48))(v184, 1, v191) == 1)
        {
          sub_241B3AED8(v184, &qword_26B0355F8, (uint64_t (*)(uint64_t))sub_241B3AFF0);
          v243(v185, 1, 1, v244);
        }
        else
        {
          sub_241CD9600();
          (*(void (**)(uint64_t, uint64_t))(v193 + 8))(v184, v192);
        }
        sub_241B3BDC4(v185, v189, &qword_26B032040, MEMORY[0x263F45718]);
        sub_241B3BF50(0, &qword_26B0369A0, (uint64_t (*)(uint64_t))_s8WorkPlanVMa, MEMORY[0x263F8E0F8]);
        unint64_t v194 = (*(unsigned __int8 *)(v183 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v183 + 80);
        uint64_t v162 = swift_allocObject();
        *(_OWORD *)(v162 + 16) = xmmword_241CEB730;
        sub_241B3BC84((uint64_t)v242, v162 + v194);

        return v162;
      }
      unsigned int v137 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
      sub_241B3AED8(v241, &qword_26B0354A8, MEMORY[0x263F07508]);
      sub_241B3AED8(v249, &qword_26B0354A8, v137);
      (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v136, v121);
    }
    sub_241B3BD68(v122, (unint64_t *)&qword_26B0354B0, &qword_26B0354A8, MEMORY[0x263F07508]);
    goto LABEL_45;
  }
  char v82 = sub_241B3591C(v64, (uint64_t)v251, v246);
  if (v82 == 2)
  {
    swift_getObjectType();
    uint64_t v83 = v216;
    sub_241CD93F0();
    uint64_t v84 = v64;
    swift_retain_n();
    unint64_t v85 = v84;
    id v86 = sub_241CDA190();
    os_log_type_t v87 = sub_241CDB670();
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v88 = swift_slowAlloc();
      unint64_t v89 = (unsigned int (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
      os_log_type_t v252 = v89;
      *(_DWORD *)uint64_t v88 = 136446466;
      swift_retain();
      uint64_t v90 = sub_241B39708();
      unint64_t v92 = v91;
      swift_release();
      uint64_t v256 = sub_241A33FE4(v90, v92, (uint64_t *)&v252);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v88 + 12) = 2082;
      id v93 = objc_msgSend(v85, sel_identifier);
      uint64_t v94 = sub_241CDB0D0();
      unint64_t v96 = v95;

      uint64_t v256 = sub_241A33FE4(v94, v96, (uint64_t *)&v252);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v86, v87, "%{public}s No update needed for work criteria with sample type %{public}s", (uint8_t *)v88, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v89, -1, -1);
      MEMORY[0x245637F20](v88, -1, -1);

      v245[1](v216, v244);
    }
    else
    {

      swift_release_n();
      v245[1](v83, v244);
    }

    return MEMORY[0x263F8EE78];
  }
  int v101 = v82 & 1;
  swift_getObjectType();
  unsigned int v102 = v217;
  sub_241CD93F0();
  uint64_t v103 = v64;
  swift_retain_n();
  uint64_t v104 = v103;
  uint64_t v105 = sub_241CDA190();
  os_log_type_t v106 = sub_241CDB670();
  BOOL v107 = os_log_type_enabled(v105, v106);
  LODWORD(v249) = v101;
  if (v107)
  {
    uint64_t v108 = swift_slowAlloc();
    v248 = (unsigned int (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
    os_log_type_t v252 = v248;
    *(_DWORD *)uint64_t v108 = 136446722;
    swift_retain();
    uint64_t v109 = sub_241B39708();
    unint64_t v111 = v110;
    swift_release();
    uint64_t v256 = sub_241A33FE4(v109, v111, (uint64_t *)&v252);
    sub_241CDBBF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v108 + 12) = 2082;
    id v112 = objc_msgSend(v104, sel_identifier);
    uint64_t v113 = sub_241CDB0D0();
    unint64_t v115 = v114;

    uint64_t v256 = sub_241A33FE4(v113, v115, (uint64_t *)&v252);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v108 + 22) = 2082;
    if (v101) {
      uint64_t v116 = 0x6D65744964656566;
    }
    else {
      uint64_t v116 = 0xD00000000000001ALL;
    }
    if (v101) {
      unint64_t v117 = 0xED0000796C6E4F73;
    }
    else {
      unint64_t v117 = 0x8000000241CDD100;
    }
    uint64_t v256 = sub_241A33FE4(v116, v117, (uint64_t *)&v252);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v105, v106, "%{public}s Creating work plan work criteria with sample type %{public}s with updateNeeded: %{public}s", (uint8_t *)v108, 0x20u);
    uint64_t v118 = v248;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v118, -1, -1);
    MEMORY[0x245637F20](v108, -1, -1);

    v245[1](v217, v244);
  }
  else
  {

    swift_release_n();
    v245[1](v102, v244);
  }
  uint64_t v138 = v236;
  uint64_t v139 = v235;
  uint64_t v140 = v234;
  uint64_t v141 = (int *)v238;
  uint64_t v142 = v232;
  uint64_t v143 = &v232[*(int *)(v238 + 24)];
  uint64_t v144 = sub_241CD78F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56))(v143, 1, 1, v144);
  uint64_t v145 = &v142[v141[8]];
  sub_241AC75E4();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 56))(v145, 1, 1, v146);
  uint64_t v147 = v104;
  objc_msgSend(v147, sel_code);
  uint64_t v148 = v237;
  sub_241CD95D0();
  uint64_t v149 = v239;
  (*(void (**)(unsigned char *, char *, uint64_t))(v239 + 16))(&v142[v141[5]], v148, v140);
  *uint64_t v142 = v249;
  os_log_type_t v252 = 0;
  char v253 = 1;
  type metadata accessor for HKMCPregnancyState(0);
  sub_241B39964((unint64_t *)&unk_26B031F00, type metadata accessor for HKMCPregnancyState);
  sub_241CD8080();

  (*(void (**)(char *, uint64_t))(v149 + 8))(v148, v140);
  (*(void (**)(unsigned char *, char *, uint64_t))(v138 + 32))(&v142[v141[7]], v139, v240);
  sub_241CD7C50();
  uint64_t v150 = v211;
  sub_241CD9480();
  sub_241B39964(&qword_26B035550, MEMORY[0x263F458C0]);
  uint64_t v151 = (uint64_t)v214;
  sub_241CD9660();
  (*(void (**)(char *, uint64_t))(v212 + 8))(v150, v213);
  sub_241B3AF48();
  uint64_t v153 = v152;
  uint64_t v154 = *(void *)(v152 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))(v151, 1, v152) == 1)
  {
    sub_241B3AED8(v151, &qword_26B035640, (uint64_t (*)(uint64_t))sub_241B3AF48);
    uint64_t v155 = 0;
  }
  else
  {
    uint64_t v155 = (void *)sub_241CD96F0();
    (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v151, v153);
  }
  uint64_t v195 = v209;
  uint64_t v196 = v208;
  uint64_t v197 = v207;
  uint64_t v198 = v206;
  uint64_t v199 = v233;
  sub_241B3BCE8(v205, v207, &qword_26B0385B8, MEMORY[0x263F07490]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v196 + 48))(v197, 1, v195) == 1)
  {
    sub_241CD6CF0();
    sub_241B3AED8(v197, &qword_26B0385B8, MEMORY[0x263F07490]);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v196 + 32))(v198, v197, v195);
  }
  id v200 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_241B3B9FC(v155);
  (*(void (**)(char *, uint64_t))(v196 + 8))(v198, v195);
  os_log_type_t v252 = v200;
  char v253 = 0;
  sub_241CD8070();
  sub_241B3BF50(0, &qword_26B0369A0, (uint64_t (*)(uint64_t))_s8WorkPlanVMa, MEMORY[0x263F8E0F8]);
  unint64_t v201 = (*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80);
  uint64_t v162 = swift_allocObject();
  *(_OWORD *)(v162 + 16) = xmmword_241CEB730;
  sub_241B3BC84((uint64_t)v232, v162 + v201);

  return v162;
}

uint64_t sub_241B3591C(void *a1, uint64_t a2, void (*a3)(void, void, void, void))
{
  v436 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B3BF50(0, &qword_26B031F80, MEMORY[0x263F063B0], MEMORY[0x263F8D8F0]);
  uint64_t v375 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v374 = (uint64_t)&v364 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v379 = (uint64_t)&v364 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v376 = (uint64_t)&v364 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v384 = (uint64_t)&v364 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v389 = (uint64_t)&v364 - v15;
  sub_241B3BF50(0, &qword_26B0385B8, MEMORY[0x263F07490], v5);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v391 = (char *)&v364 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v393 = (char *)&v364 - v19;
  uint64_t v400 = sub_241CD6D00();
  uint64_t v401 = *(void *)(v400 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v400);
  uint64_t v378 = (char *)&v364 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v390 = (char *)&v364 - v22;
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F45330];
  sub_241B3BF50(0, &qword_26B035080, MEMORY[0x263F458C0], MEMORY[0x263F45330]);
  uint64_t v402 = v24;
  uint64_t v403 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v394 = (char *)&v364 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v388 = (char *)&v364 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v385 = (char *)&v364 - v29;
  sub_241B3BF50(0, &qword_26B035640, (uint64_t (*)(uint64_t))sub_241B3AF48, v5);
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  uint64_t v395 = (char *)&v364 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  v387 = (char *)&v364 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v386 = (char *)&v364 - v35;
  sub_241B3BF50(0, &qword_26B0355D0, MEMORY[0x263F45390], v23);
  uint64_t v404 = v36;
  uint64_t v405 = *(void *)(v36 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v36);
  uint64_t v398 = (char *)&v364 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  v396 = (char *)&v364 - v39;
  sub_241B3BF50(0, &qword_26B0355E0, MEMORY[0x263F45380], v5);
  uint64_t v41 = MEMORY[0x270FA5388](v40 - 8);
  v399 = (char *)&v364 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  v397 = (char *)&v364 - v43;
  uint64_t v413 = sub_241CDA1A0();
  uint64_t v414 = *(void *)(v413 - 8);
  uint64_t v44 = MEMORY[0x270FA5388](v413);
  uint64_t v377 = (char *)&v364 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v392 = (char *)&v364 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  v406 = (char *)&v364 - v49;
  MEMORY[0x270FA5388](v48);
  uint64_t v407 = (char *)&v364 - v50;
  sub_241B3BF50(0, &qword_26B0355C0, MEMORY[0x263F454A0], v23);
  uint64_t v415 = v51;
  uint64_t v417 = *(void *)(v51 - 8);
  uint64_t v52 = MEMORY[0x270FA5388](v51);
  v411 = (char *)&v364 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v52);
  v408 = (char *)&v364 - v54;
  sub_241B3BF50(0, &qword_26B035510, MEMORY[0x263F45498], v5);
  uint64_t v56 = MEMORY[0x270FA5388](v55 - 8);
  v410 = (char *)&v364 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v56);
  v409 = (char *)&v364 - v58;
  uint64_t v59 = (void *)sub_241CD6F50();
  id v60 = (void (**)(void))*(v59 - 1);
  v431 = v59;
  v432 = v60;
  MEMORY[0x270FA5388](v59);
  v412 = (char *)&v364 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v62 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
  sub_241B3BED8(0, &qword_26B0354B8, &qword_26B02E8F0, MEMORY[0x263F079C8]);
  uint64_t v418 = v63;
  MEMORY[0x270FA5388](v63);
  uint64_t v419 = (uint64_t)&v364 - v64;
  uint64_t v427 = sub_241CD68F0();
  uint64_t v426 = *(void *)(v427 - 8);
  MEMORY[0x270FA5388](v427);
  v422 = (char *)&v364 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B3BF50(0, &qword_26B0355C8, MEMORY[0x263F45400], v23);
  uint64_t v425 = v66;
  os_log_t v435 = *(os_log_t *)(v66 - 8);
  uint64_t v67 = MEMORY[0x270FA5388](v66);
  v383 = (char *)&v364 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v381 = (char *)&v364 - v70;
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  v420 = (char *)&v364 - v72;
  MEMORY[0x270FA5388](v71);
  v423 = (char *)&v364 - v73;
  sub_241B3BF50(0, &qword_26B0355A0, (uint64_t (*)(uint64_t))sub_241B3BFB4, v5);
  uint64_t v75 = MEMORY[0x270FA5388](v74 - 8);
  v382 = (char *)&v364 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  v380 = (char *)&v364 - v78;
  uint64_t v79 = MEMORY[0x270FA5388](v77);
  v424 = (char *)&v364 - v80;
  MEMORY[0x270FA5388](v79);
  v430 = (void (**)(uint64_t, uint64_t))((char *)&v364 - v81);
  sub_241B3BF50(0, &qword_26B02E8F0, v62, v5);
  uint64_t v83 = MEMORY[0x270FA5388](v82 - 8);
  uint64_t v416 = (uint64_t)&v364 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = MEMORY[0x270FA5388](v83);
  uint64_t v428 = (uint64_t)&v364 - v86;
  uint64_t v87 = MEMORY[0x270FA5388](v85);
  v429 = ((char *)&v364 - v88);
  uint64_t v89 = MEMORY[0x270FA5388](v87);
  v421 = (char *)&v364 - v90;
  uint64_t v91 = MEMORY[0x270FA5388](v89);
  uint64_t v434 = (uint64_t)&v364 - v92;
  MEMORY[0x270FA5388](v91);
  uint64_t v433 = (uint64_t)&v364 - v93;
  uint64_t v94 = sub_241CD96A0();
  uint64_t v95 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  id v97 = (char *)&v364 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AD7F70((uint64_t)&v437);
  if (v438)
  {
    sub_241A5598C(&v437, (uint64_t)&v439);
    uint64_t v98 = v442;
    sub_241A311E0(&v439, v441);
    int v99 = a1;
    uint64_t v100 = a2;
    char v101 = (*(uint64_t (**)(void *, uint64_t))(v98 + 16))(a1, a2);
    sub_241A31190((uint64_t)&v439);
    if (v101) {
      return 0;
    }
  }
  else
  {
    int v99 = a1;
    uint64_t v100 = a2;
    sub_241B3A958((uint64_t)&v437);
  }
  uint64_t v102 = sub_241CD9680();
  uint64_t v441 = v102;
  uint64_t v103 = sub_241B39964((unint64_t *)&qword_26B035600, MEMORY[0x263F453F0]);
  uint64_t v442 = v103;
  sub_241A25BC8((uint64_t *)&v439);
  if (qword_26B035628 != -1) {
    swift_once();
  }
  uint64_t v104 = sub_241A55850(v94, (uint64_t)qword_26B035608);
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v97, v104, v94);
  sub_241CD9670();
  uint64_t v105 = v100;
  char v106 = sub_241CD9650();
  sub_241A31190((uint64_t)&v439);
  if (v106) {
    return 0;
  }
  self;
  uint64_t v107 = swift_dynamicCastObjCClass();
  uint64_t v108 = v434;
  uint64_t v109 = (uint64_t)v430;
  if (!v107) {
    goto LABEL_14;
  }
  uint64_t v110 = v107;
  sub_241A310AC(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = v110;
  unint64_t v439 = inited;
  sub_241CDB2E0();
  unint64_t v112 = v439;
  if (!(v439 >> 62))
  {
    uint64_t v113 = *(void *)((v439 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v114 = v99;
    if (!v113) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  id v115 = v99;
  swift_bridgeObjectRetain();
  uint64_t v116 = sub_241CDBF50();
  swift_bridgeObjectRelease();
  if (v116) {
LABEL_11:
  }
    sub_241C69AD0(v112);
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v441 = sub_241CD7DC0();
  uint64_t v442 = sub_241B39964(&qword_26B035580, MEMORY[0x263F459A0]);
  sub_241A25BC8((uint64_t *)&v439);
  sub_241CD7DB0();
  char v117 = sub_241CD9650();
  sub_241A31190((uint64_t)&v439);
  if (v117) {
    return 0;
  }
LABEL_14:
  id v369 = v99;
  uint64_t v367 = v103;
  uint64_t v368 = v102;
  uint64_t v118 = sub_241CD96C0();
  uint64_t v119 = v423;
  sub_241CD94C0();
  uint64_t v120 = sub_241B39964(&qword_26B0380F0, MEMORY[0x263F45400]);
  uint64_t v373 = v118;
  uint64_t v372 = v120;
  uint64_t v370 = v105;
  sub_241CD9660();
  Class isa = v435[1].isa;
  uint64_t v122 = v425;
  ++v435;
  v423 = (char *)isa;
  ((void (*)(char *, uint64_t))isa)(v119, v425);
  sub_241B3BFB4();
  uint64_t v124 = v123;
  uint64_t v125 = *(void *)(v123 - 8);
  uint64_t v127 = v125 + 48;
  uint64_t v126 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
  unsigned int v128 = v126(v109, 1, v123);
  uint64_t v371 = v125;
  uint64_t v129 = v108;
  if (v128 == 1)
  {
    sub_241B3AED8(v109, &qword_26B0355A0, (uint64_t (*)(uint64_t))sub_241B3BFB4);
    uint64_t v130 = v433;
    v432[7]();
  }
  else
  {
    uint64_t v131 = v422;
    sub_241CD93D0();
    (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v109, v124);
    uint64_t v130 = v433;
    sub_241CD68E0();
    (*(void (**)(char *, uint64_t))(v426 + 8))(v131, v427);
  }
  uint64_t v132 = v420;
  sub_241CD94C0();
  uint64_t v133 = (uint64_t)v424;
  sub_241CD9660();
  ((void (*)(char *, uint64_t))v423)(v132, v122);
  unsigned int v134 = v126(v133, 1, v124);
  uint64_t v366 = v124;
  if (v134 == 1)
  {
    sub_241B3AED8(v133, &qword_26B0355A0, (uint64_t (*)(uint64_t))sub_241B3BFB4);
    uint64_t v136 = v431;
    uint64_t v135 = v432;
    ((void (*)(uint64_t, uint64_t, uint64_t, void *))v432[7])(v129, 1, 1, v431);
  }
  else
  {
    unsigned int v137 = v422;
    sub_241CD93D0();
    (*(void (**)(uint64_t, uint64_t))(v371 + 8))(v133, v124);
    sub_241CD68E0();
    (*(void (**)(char *, uint64_t))(v426 + 8))(v137, v427);
    uint64_t v136 = v431;
    uint64_t v135 = v432;
  }
  uint64_t v138 = (uint64_t)v421;
  uint64_t v139 = v130;
  uint64_t v140 = v135[6];
  int v141 = ((uint64_t (*)(uint64_t, uint64_t, void *))v140)(v130, 1, v136);
  sub_241B3BCE8(v129, v138, &qword_26B02E8F0, MEMORY[0x263F079C8]);
  if (v141 == 1)
  {
    uint64_t v142 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
    sub_241B3AED8(v138, &qword_26B02E8F0, MEMORY[0x263F079C8]);
    uint64_t v143 = v429;
    sub_241B3BCE8(v139, (uint64_t)v429, &qword_26B02E8F0, v142);
    uint64_t v144 = v428;
    sub_241B3BCE8(v129, v428, &qword_26B02E8F0, v142);
LABEL_23:
    uint64_t v148 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
    sub_241B3AED8(v144, &qword_26B02E8F0, MEMORY[0x263F079C8]);
    sub_241B3AED8((uint64_t)v143, &qword_26B02E8F0, v148);
LABEL_24:
    uint64_t v149 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
    sub_241B3AED8(v434, &qword_26B02E8F0, MEMORY[0x263F079C8]);
    sub_241B3AED8(v139, &qword_26B02E8F0, v149);
    return 0;
  }
  uint64_t v364 = v127;
  uint64_t v365 = v126;
  int v145 = ((uint64_t (*)(uint64_t, uint64_t, void *))v140)(v138, 1, v136);
  uint64_t v146 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
  sub_241B3AED8(v138, &qword_26B02E8F0, MEMORY[0x263F079C8]);
  uint64_t v143 = v429;
  sub_241B3BCE8(v433, (uint64_t)v429, &qword_26B02E8F0, v146);
  uint64_t v144 = v428;
  uint64_t v147 = v146;
  uint64_t v139 = v433;
  sub_241B3BCE8(v129, v428, &qword_26B02E8F0, v147);
  if (v145 == 1) {
    goto LABEL_23;
  }
  uint64_t v151 = v419;
  uint64_t v152 = v419 + *(int *)(v418 + 48);
  uint64_t v153 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
  sub_241B3BCE8((uint64_t)v143, v419, &qword_26B02E8F0, MEMORY[0x263F079C8]);
  sub_241B3BCE8(v144, v152, &qword_26B02E8F0, v153);
  if (((unsigned int (*)(uint64_t, uint64_t, void *))v140)(v151, 1, v136) == 1)
  {
    uint64_t v154 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
    sub_241B3AED8(v144, &qword_26B02E8F0, MEMORY[0x263F079C8]);
    uint64_t v155 = v154;
    uint64_t v151 = v419;
    sub_241B3AED8((uint64_t)v143, &qword_26B02E8F0, v155);
    if (((unsigned int (*)(uint64_t, uint64_t, void *))v140)(v152, 1, v136) == 1)
    {
      sub_241B3AED8(v151, &qword_26B02E8F0, MEMORY[0x263F079C8]);
      uint64_t v156 = v365;
      goto LABEL_33;
    }
LABEL_31:
    sub_241B3BD68(v151, &qword_26B0354B8, &qword_26B02E8F0, MEMORY[0x263F079C8]);
    goto LABEL_24;
  }
  uint64_t v157 = v416;
  sub_241B3BCE8(v151, v416, &qword_26B02E8F0, MEMORY[0x263F079C8]);
  int v158 = ((uint64_t (*)(uint64_t, uint64_t, void *))v140)(v152, 1, v136);
  uint64_t v156 = v365;
  if (v158 == 1)
  {
    uint64_t v159 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
    sub_241B3AED8(v428, &qword_26B02E8F0, MEMORY[0x263F079C8]);
    sub_241B3AED8((uint64_t)v429, &qword_26B02E8F0, v159);
    ((void (*)(uint64_t, void *))v432[1])(v157, v136);
    goto LABEL_31;
  }
  uint64_t v160 = v432;
  char v161 = v412;
  ((void (*)(char *, uint64_t, void *))v432[4])(v412, v152, v136);
  sub_241B39964(&qword_26B036A00, MEMORY[0x263F079C8]);
  char v162 = sub_241CDB050();
  uint64_t v163 = v160[1];
  ((void (*)(char *, void *))v163)(v161, v136);
  uint64_t v164 = v151;
  uint64_t v165 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
  sub_241B3AED8(v428, &qword_26B02E8F0, MEMORY[0x263F079C8]);
  sub_241B3AED8((uint64_t)v429, &qword_26B02E8F0, v165);
  ((void (*)(uint64_t, void *))v163)(v157, v136);
  uint64_t v139 = v433;
  sub_241B3AED8(v164, &qword_26B02E8F0, v165);
  if ((v162 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_33:
  self;
  id v166 = v369;
  uint64_t v167 = (void *)swift_dynamicCastObjCClass();
  uint64_t v168 = v371;
  if (!v167) {
    goto LABEL_51;
  }
  v431 = v167;
  sub_241CD72E0();
  uint64_t v169 = (void (**)(void))v166;
  uint64_t v170 = v408;
  sub_241CD94A0();
  sub_241B39964(&qword_26B0380F8, MEMORY[0x263F454A0]);
  uint64_t v171 = (uint64_t)v409;
  sub_241CD9660();
  uint64_t v172 = *(void (**)(char *, uint64_t))(v417 + 8);
  v417 += 8;
  uint64_t v173 = v172;
  v172(v170, v415);
  uint64_t v174 = sub_241CD72D0();
  id v175 = *(char **)(v174 - 8);
  uint64_t v176 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)v175 + 6);
  int v177 = v176(v171, 1, v174);
  v432 = v169;
  v430 = (void (**)(uint64_t, uint64_t))v175;
  if (v177 == 1)
  {
    sub_241B3AED8(v171, &qword_26B035510, MEMORY[0x263F45498]);
    uint64_t v178 = 0;
  }
  else
  {
    uint64_t v179 = sub_241CD72C0();
    (*((void (**)(uint64_t, uint64_t))v175 + 1))(v171, v174);
    uint64_t v180 = v169;
    uint64_t v178 = sub_241B3258C(v431, v179, (uint64_t (*)(void))sub_241C0B794, qword_26B038100);

    swift_bridgeObjectRelease();
  }
  uint64_t v181 = v411;
  sub_241CD94A0();
  uint64_t v182 = (uint64_t)v410;
  sub_241CD9660();
  v173(v181, v415);
  if (v176(v182, 1, v174) == 1)
  {
    sub_241B3AED8(v182, &qword_26B035510, MEMORY[0x263F45498]);
    if (v178)
    {
      uint64_t v183 = 0;
      goto LABEL_45;
    }
  }
  else
  {
    uint64_t v184 = sub_241CD72C0();
    v430[1](v182, v174);
    uint64_t v185 = v432;
    uint64_t v183 = sub_241B3258C(v431, v184, (uint64_t (*)(void))sub_241C0B794, qword_26B038100);

    swift_bridgeObjectRelease();
    if (v178)
    {
      if (!v183
        || (sub_241A313AC(0, qword_26B038100),
            uint64_t v186 = v183,
            id v187 = v178,
            char v188 = sub_241CDBB60(),
            v187,
            v186,
            (v188 & 1) == 0))
      {
LABEL_45:
        swift_getObjectType();
        uint64_t v189 = v407;
        sub_241CD93F0();
        id v190 = v178;
        swift_retain_n();
        uint64_t v191 = v432;
        id v192 = v183;
        id v193 = v190;
        unint64_t v194 = v191;
        uint64_t v195 = (void (**)(void))v178;
        id v196 = v192;
        uint64_t v197 = sub_241CDA190();
        os_log_type_t v198 = sub_241CDB670();
        int v199 = v198;
        if (os_log_type_enabled(v197, v198))
        {
          uint64_t v200 = swift_slowAlloc();
          v432 = v195;
          uint64_t v201 = v200;
          v436 = (void (*)(void, void, void, void))swift_slowAlloc();
          unint64_t v439 = (unint64_t)v436;
          *(_DWORD *)uint64_t v201 = 136446978;
          swift_retain();
          os_log_t v435 = v197;
          uint64_t v202 = sub_241B39708();
          unint64_t v204 = v203;
          swift_release();
          *(void *)&long long v437 = sub_241A33FE4(v202, v204, (uint64_t *)&v439);
          sub_241CDBBF0();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v201 + 12) = 2082;
          id v205 = objc_msgSend(v194, sel_identifier);
          uint64_t v206 = sub_241CDB0D0();
          LODWORD(v431) = v199;
          uint64_t v207 = v206;
          unint64_t v209 = v208;

          *(void *)&long long v437 = sub_241A33FE4(v207, v209, (uint64_t *)&v439);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          *(_WORD *)(v201 + 22) = 2080;
          *(void *)&long long v437 = v183;
          sub_241B3C120();
          id v210 = v196;
          uint64_t v211 = sub_241CDB120();
          *(void *)&long long v437 = sub_241A33FE4(v211, v212, (uint64_t *)&v439);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          *(_WORD *)(v201 + 32) = 2080;
          *(void *)&long long v437 = v432;
          id v213 = v193;
          uint64_t v214 = sub_241CDB120();
          *(void *)&long long v437 = sub_241A33FE4(v214, v215, (uint64_t *)&v439);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          os_log_t v216 = v435;
          _os_log_impl(&dword_241A23000, v435, (os_log_type_t)v431, "%{public}s Work criteria for sample type %{public}s detected different unit preferences:\n%s\n%s", (uint8_t *)v201, 0x2Au);
          int v217 = v436;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v217, -1, -1);
          MEMORY[0x245637F20](v201, -1, -1);

          (*(void (**)(char *, uint64_t))(v414 + 8))(v407, v413);
        }
        else
        {
          swift_release_n();

          (*(void (**)(char *, uint64_t))(v414 + 8))(v189, v413);
        }
        sub_241B3AED8(v434, &qword_26B02E8F0, MEMORY[0x263F079C8]);
        uint64_t v218 = v433;
        uint64_t v219 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
        goto LABEL_72;
      }

      goto LABEL_50;
    }
    if (v183) {
      goto LABEL_45;
    }
  }
  uint64_t v186 = v432;
LABEL_50:

  uint64_t v139 = v433;
  uint64_t v168 = v371;
  uint64_t v156 = v365;
LABEL_51:
  uint64_t v441 = sub_241CD9550();
  uint64_t v442 = sub_241B39964(&qword_26B0355D8, MEMORY[0x263F45378]);
  sub_241A25BC8((uint64_t *)&v439);
  sub_241CD9540();
  char v220 = sub_241CD9650();
  sub_241A31190((uint64_t)&v439);
  if (v220)
  {
    swift_getObjectType();
    uint64_t v221 = v406;
    sub_241CD93F0();
    id v222 = v369;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    id v223 = v222;
    uint64_t v224 = sub_241CDA190();
    int v225 = sub_241CDB670();
    if (os_log_type_enabled(v224, (os_log_type_t)v225))
    {
      LODWORD(v432) = v225;
      os_log_t v435 = v224;
      uint64_t v226 = swift_slowAlloc();
      uint64_t v428 = swift_slowAlloc();
      *(void *)&long long v437 = v428;
      *(_DWORD *)uint64_t v226 = 136446978;
      swift_retain();
      uint64_t v227 = sub_241B39708();
      unint64_t v229 = v228;
      swift_release();
      unint64_t v439 = sub_241A33FE4(v227, v229, (uint64_t *)&v437);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v226 + 12) = 2082;
      id v230 = objc_msgSend(v223, sel_identifier);
      uint64_t v231 = sub_241CDB0D0();
      unint64_t v233 = v232;

      unint64_t v439 = sub_241A33FE4(v231, v233, (uint64_t *)&v437);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v226 + 22) = 2082;
      sub_241CD9580();
      uint64_t v234 = v396;
      sub_241CD94D0();
      uint64_t v235 = (void *)sub_241B39964(&qword_268D42BB8, MEMORY[0x263F45390]);
      uint64_t v236 = (uint64_t)v397;
      sub_241CD9660();
      uint64_t v237 = v405 + 8;
      uint64_t v238 = *(void (**)(char *, uint64_t))(v405 + 8);
      v238(v234, v404);
      uint64_t v239 = sub_241CD9570();
      uint64_t v240 = *(void *)(v239 - 8);
      uint64_t v241 = *(NSObject **)(v240 + 48);
      unsigned int v242 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v241)(v236, 1, v239);
      uint64_t v405 = v237;
      v431 = v235;
      v430 = (void (**)(uint64_t, uint64_t))v238;
      v429 = v241;
      if (v242 == 1)
      {
        sub_241B3AED8(v236, &qword_26B0355E0, MEMORY[0x263F45380]);
        uint64_t v243 = 0;
        uint64_t v244 = 0;
      }
      else
      {
        uint64_t v243 = sub_241CD9560();
        uint64_t v244 = v279;
        (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v236, v239);
      }
      unint64_t v439 = v243;
      uint64_t v440 = v244;
      sub_241A310AC(0, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
      uint64_t v280 = sub_241CDB120();
      unint64_t v439 = sub_241A33FE4(v280, v281, (uint64_t *)&v437);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v226 + 32) = 2082;
      id v282 = v398;
      sub_241CD94D0();
      uint64_t v283 = (uint64_t)v399;
      sub_241CD9660();
      ((void (*)(char *, uint64_t))v430)(v282, v404);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v429)(v283, 1, v239) == 1)
      {
        sub_241B3AED8(v283, &qword_26B0355E0, MEMORY[0x263F45380]);
        uint64_t v284 = 0;
        uint64_t v285 = 0;
      }
      else
      {
        uint64_t v284 = sub_241CD9560();
        uint64_t v285 = v292;
        (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v283, v239);
      }
      uint64_t v139 = v433;
      uint64_t v293 = v428;
      unint64_t v439 = v284;
      uint64_t v440 = v285;
      uint64_t v294 = sub_241CDB120();
      unint64_t v439 = sub_241A33FE4(v294, v295, (uint64_t *)&v437);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v296 = v435;
      _os_log_impl(&dword_241A23000, v435, (os_log_type_t)v432, "%{public}s Work criteria for sample type %{public}s detected different locales:\n%{public}s\n%{public}s", (uint8_t *)v226, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v293, -1, -1);
      MEMORY[0x245637F20](v226, -1, -1);

      (*(void (**)(char *, uint64_t))(v414 + 8))(v406, v413);
    }
    else
    {
      swift_release_n();

      swift_release_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v414 + 8))(v221, v413);
    }
    goto LABEL_70;
  }
  uint64_t v245 = sub_241CD7C50();
  uint64_t v441 = v368;
  uint64_t v442 = v367;
  sub_241A25BC8((uint64_t *)&v439);
  sub_241CD7C40();
  char v246 = sub_241CD9650();
  sub_241A31190((uint64_t)&v439);
  if (v246)
  {
    if (HKShowSensitiveLogItems())
    {
      swift_getObjectType();
      uint64_t v247 = v392;
      sub_241CD93F0();
      id v248 = v369;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      id v249 = v248;
      uint64_t v250 = sub_241CDA190();
      int v251 = sub_241CDB670();
      if (os_log_type_enabled(v250, (os_log_type_t)v251))
      {
        LODWORD(v432) = v251;
        v429 = v250;
        uint64_t v252 = swift_slowAlloc();
        uint64_t v428 = swift_slowAlloc();
        unint64_t v439 = v428;
        *(_DWORD *)uint64_t v252 = 136446978;
        swift_retain();
        uint64_t v253 = sub_241B39708();
        unint64_t v255 = v254;
        swift_release();
        *(void *)&long long v437 = sub_241A33FE4(v253, v255, (uint64_t *)&v439);
        sub_241CDBBF0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v252 + 12) = 2082;
        id v256 = objc_msgSend(v249, sel_identifier);
        uint64_t v257 = v245;
        uint64_t v258 = sub_241CDB0D0();
        unint64_t v260 = v259;

        *(void *)&long long v437 = sub_241A33FE4(v258, v260, (uint64_t *)&v439);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v252 + 22) = 2080;
        unint64_t v261 = v385;
        sub_241CD9480();
        unint64_t v262 = (void *)sub_241B39964(&qword_26B035550, MEMORY[0x263F458C0]);
        uint64_t v263 = (uint64_t)v386;
        os_log_t v435 = v257;
        sub_241CD9660();
        uint64_t v264 = v403 + 8;
        v265 = *(void (**)(char *, uint64_t))(v403 + 8);
        uint64_t v266 = v402;
        v265(v261, v402);
        sub_241B3AF48();
        uint64_t v268 = v267;
        uint64_t v269 = *(void *)(v267 - 8);
        v270 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v269 + 48);
        int v271 = v270(v263, 1, v267);
        uint64_t v403 = v264;
        v431 = v262;
        v430 = (void (**)(uint64_t, uint64_t))v265;
        if (v271 == 1)
        {
          sub_241B3AED8(v263, &qword_26B035640, (uint64_t (*)(uint64_t))sub_241B3AF48);
          uint64_t v272 = 0;
        }
        else
        {
          uint64_t v272 = sub_241CD96F0();
          (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v263, v268);
        }
        *(void *)&long long v437 = v272;
        sub_241B3C0B8();
        uint64_t v312 = sub_241CDB140();
        *(void *)&long long v437 = sub_241A33FE4(v312, v313, (uint64_t *)&v439);
        sub_241CDBBF0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v252 + 32) = 2080;
        id v314 = v388;
        sub_241CD9480();
        uint64_t v315 = (uint64_t)v387;
        sub_241CD9660();
        ((void (*)(char *, uint64_t))v430)(v314, v266);
        if (v270(v315, 1, v268) == 1)
        {
          sub_241B3AED8(v315, &qword_26B035640, (uint64_t (*)(uint64_t))sub_241B3AF48);
          uint64_t v316 = 0;
        }
        else
        {
          uint64_t v316 = sub_241CD96F0();
          (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v315, v268);
        }
        v317 = v392;
        uint64_t v318 = v429;
        uint64_t v319 = v428;
        *(void *)&long long v437 = v316;
        uint64_t v320 = sub_241CDB140();
        *(void *)&long long v437 = sub_241A33FE4(v320, v321, (uint64_t *)&v439);
        sub_241CDBBF0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v318, (os_log_type_t)v432, "%{public}s Work criteria for sample type %{public}s detected different pregnancy states:\n%s\n%s", (uint8_t *)v252, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x245637F20](v319, -1, -1);
        MEMORY[0x245637F20](v252, -1, -1);

        (*(void (**)(char *, uint64_t))(v414 + 8))(v317, v413);
        sub_241B3AED8(v434, &qword_26B02E8F0, MEMORY[0x263F079C8]);
        uint64_t v139 = v433;
        goto LABEL_71;
      }
      swift_release_n();

      swift_release_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v414 + 8))(v247, v413);
LABEL_70:
      sub_241B3AED8(v434, &qword_26B02E8F0, MEMORY[0x263F079C8]);
LABEL_71:
      uint64_t v219 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
      uint64_t v218 = v139;
LABEL_72:
      sub_241B3AED8(v218, &qword_26B02E8F0, v219);
      return 1;
    }
LABEL_98:
    v360 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
    sub_241B3AED8(v434, &qword_26B02E8F0, MEMORY[0x263F079C8]);
    uint64_t v218 = v139;
    uint64_t v219 = v360;
    goto LABEL_72;
  }
  uint64_t v273 = v394;
  sub_241CD9480();
  sub_241B39964(&qword_26B035550, MEMORY[0x263F458C0]);
  uint64_t v274 = (uint64_t)v395;
  sub_241CD9660();
  (*(void (**)(char *, uint64_t))(v403 + 8))(v273, v402);
  sub_241B3AF48();
  uint64_t v276 = v275;
  uint64_t v277 = *(void *)(v275 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v277 + 48))(v274, 1, v275) == 1)
  {
    sub_241B3AED8(v274, &qword_26B035640, (uint64_t (*)(uint64_t))sub_241B3AF48);
    uint64_t v278 = (uint64_t)v393;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v401 + 56))(v393, 1, 1, v400);
LABEL_76:
    v297 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
    sub_241B3AED8(v434, &qword_26B02E8F0, MEMORY[0x263F079C8]);
    sub_241B3AED8(v139, &qword_26B02E8F0, v297);
    v298 = &qword_26B0385B8;
    id v299 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    uint64_t v300 = v278;
    goto LABEL_77;
  }
  id v286 = (void *)sub_241CD96F0();
  (*(void (**)(uint64_t, uint64_t))(v277 + 8))(v274, v276);
  id v287 = objc_msgSend(v286, sel_physiologicalWashoutEndDate);

  uint64_t v288 = v401;
  uint64_t v289 = v400;
  uint64_t v278 = (uint64_t)v393;
  if (v287)
  {
    uint64_t v290 = (uint64_t)v391;
    sub_241CD6CB0();

    uint64_t v291 = 0;
  }
  else
  {
    uint64_t v291 = 1;
    uint64_t v290 = (uint64_t)v391;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v288 + 56))(v290, v291, 1, v289);
  sub_241B3BE44(v290, v278);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v288 + 48))(v278, 1, v289) == 1) {
    goto LABEL_76;
  }
  uint64_t v301 = v278;
  id v302 = v390;
  (*(void (**)(char *, uint64_t, uint64_t))(v288 + 32))(v390, v301, v289);
  uint64_t v441 = v368;
  uint64_t v442 = v367;
  sub_241A25BC8((uint64_t *)&v439);
  sub_241CD96B0();
  char v303 = sub_241CD9650();
  sub_241A31190((uint64_t)&v439);
  if (v303)
  {
    v304 = v381;
    sub_241CD94C0();
    v305 = v380;
    sub_241CD9660();
    uint64_t v306 = (uint64_t)v305;
    uint64_t v307 = v425;
    ((void (*)(char *, uint64_t))v423)(v304, v425);
    uint64_t v308 = v366;
    if (v156(v306, 1, v366) == 1)
    {
      sub_241B3AED8(v306, &qword_26B0355A0, (uint64_t (*)(uint64_t))sub_241B3BFB4);
      v309 = *(void (**)(void, void, void, void))(v426 + 56);
      uint64_t v310 = v389;
      uint64_t v311 = 1;
    }
    else
    {
      uint64_t v322 = v389;
      sub_241CD93D0();
      (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v306, v308);
      v309 = *(void (**)(void, void, void, void))(v426 + 56);
      uint64_t v310 = v322;
      uint64_t v311 = 0;
    }
    v436 = v309;
    v309(v310, v311, 1, v427);
    uint64_t v323 = v383;
    sub_241CD94C0();
    uint64_t v324 = (uint64_t)v382;
    sub_241CD9660();
    ((void (*)(char *, uint64_t))v423)(v323, v307);
    if (v156(v324, 1, v308) == 1)
    {
      sub_241B3AED8(v324, &qword_26B0355A0, (uint64_t (*)(uint64_t))sub_241B3BFB4);
      uint64_t v325 = 1;
      uint64_t v326 = v384;
    }
    else
    {
      uint64_t v326 = v384;
      sub_241CD93D0();
      (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v324, v308);
      uint64_t v325 = 0;
    }
    uint64_t v327 = v390;
    uint64_t v328 = v401;
    v436(v326, v325, 1, v427);
    uint64_t v329 = v389;
    if (sub_241B3B2A4(v389, v326, v327))
    {
      if (HKShowSensitiveLogItems())
      {
        swift_getObjectType();
        sub_241CD93F0();
        uint64_t v330 = (uint64_t (*)(uint64_t))MEMORY[0x263F063B0];
        uint64_t v331 = v376;
        sub_241B3BCE8(v329, v376, &qword_26B031F80, MEMORY[0x263F063B0]);
        sub_241B3BCE8(v326, v379, &qword_26B031F80, v330);
        (*(void (**)(char *, char *, uint64_t))(v328 + 16))(v378, v327, v289);
        id v332 = v369;
        swift_retain_n();
        id v333 = v332;
        uint64_t v334 = sub_241CDA190();
        os_log_type_t v335 = sub_241CDB670();
        LODWORD(v436) = v335;
        if (os_log_type_enabled(v334, v335))
        {
          uint64_t v336 = swift_slowAlloc();
          os_log_t v435 = (os_log_t)swift_slowAlloc();
          unint64_t v439 = (unint64_t)v435;
          *(_DWORD *)uint64_t v336 = 136447234;
          swift_retain();
          uint64_t v337 = sub_241B39708();
          unint64_t v339 = v338;
          swift_release();
          *(void *)&long long v437 = sub_241A33FE4(v337, v339, (uint64_t *)&v439);
          sub_241CDBBF0();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v336 + 12) = 2080;
          id v340 = objc_msgSend(v333, sel_identifier);
          uint64_t v341 = sub_241CDB0D0();
          unint64_t v343 = v342;

          *(void *)&long long v437 = sub_241A33FE4(v341, v343, (uint64_t *)&v439);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          *(_WORD *)(v336 + 22) = 2080;
          v344 = (uint64_t (*)(uint64_t))MEMORY[0x263F063B0];
          uint64_t v345 = v374;
          sub_241B3BCE8(v331, v374, &qword_26B031F80, MEMORY[0x263F063B0]);
          uint64_t v346 = sub_241CDB120();
          *(void *)&long long v437 = sub_241A33FE4(v346, v347, (uint64_t *)&v439);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241B3AED8(v331, &qword_26B031F80, v344);
          *(_WORD *)(v336 + 32) = 2080;
          uint64_t v348 = v379;
          sub_241B3BCE8(v379, v345, &qword_26B031F80, v344);
          uint64_t v349 = sub_241CDB120();
          *(void *)&long long v437 = sub_241A33FE4(v349, v350, (uint64_t *)&v439);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241B3AED8(v348, &qword_26B031F80, v344);
          *(_WORD *)(v336 + 42) = 2080;
          sub_241B39964(&qword_26B02E8E0, MEMORY[0x263F07490]);
          v351 = v378;
          uint64_t v352 = v400;
          uint64_t v353 = sub_241CDC0D0();
          *(void *)&long long v437 = sub_241A33FE4(v353, v354, (uint64_t *)&v439);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          v355 = *(void (**)(char *, uint64_t))(v401 + 8);
          v355(v351, v352);
          _os_log_impl(&dword_241A23000, v334, (os_log_type_t)v436, "%{public}s Work criteria for sample type %s detected end of physiological washout for pregnancy :\n%s\n%s\n%s", (uint8_t *)v336, 0x34u);
          os_log_t v356 = v435;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v356, -1, -1);
          MEMORY[0x245637F20](v336, -1, -1);

          (*(void (**)(char *, uint64_t))(v414 + 8))(v377, v413);
          sub_241B3AED8(v384, &qword_26B031F80, v344);
          sub_241B3AED8(v389, &qword_26B031F80, v344);
          v355(v390, v352);
        }
        else
        {

          uint64_t v361 = *(void (**)(char *, uint64_t))(v401 + 8);
          uint64_t v362 = v400;
          v361(v378, v400);
          v363 = (uint64_t (*)(uint64_t))MEMORY[0x263F063B0];
          sub_241B3AED8(v379, &qword_26B031F80, MEMORY[0x263F063B0]);
          sub_241B3AED8(v331, &qword_26B031F80, v363);
          swift_release_n();

          (*(void (**)(char *, uint64_t))(v414 + 8))(v377, v413);
          sub_241B3AED8(v384, &qword_26B031F80, v363);
          sub_241B3AED8(v389, &qword_26B031F80, v363);
          v361(v390, v362);
        }
        sub_241B3AED8(v434, &qword_26B02E8F0, MEMORY[0x263F079C8]);
        uint64_t v219 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
        uint64_t v218 = v433;
        goto LABEL_72;
      }
      v359 = (uint64_t (*)(uint64_t))MEMORY[0x263F063B0];
      sub_241B3AED8(v326, &qword_26B031F80, MEMORY[0x263F063B0]);
      sub_241B3AED8(v329, &qword_26B031F80, v359);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v327, v289);
      goto LABEL_98;
    }
    v357 = (uint64_t (*)(uint64_t))MEMORY[0x263F063B0];
    sub_241B3AED8(v326, &qword_26B031F80, MEMORY[0x263F063B0]);
    sub_241B3AED8(v329, &qword_26B031F80, v357);
    (*(void (**)(char *, uint64_t))(v328 + 8))(v327, v289);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v288 + 8))(v302, v289);
  }
  uint64_t v358 = (uint64_t (*)(uint64_t))MEMORY[0x263F079C8];
  sub_241B3AED8(v434, &qword_26B02E8F0, MEMORY[0x263F079C8]);
  uint64_t v300 = v139;
  v298 = &qword_26B02E8F0;
  id v299 = v358;
LABEL_77:
  sub_241B3AED8(v300, v298, v299);
  return 2;
}

uint64_t sub_241B391AC()
{
  swift_unknownObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries27SummariesFullProfilePlanner_signals;
  uint64_t v2 = sub_241CD94E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241B3925C()
{
  return type metadata accessor for SummariesFullProfilePlanner();
}

uint64_t type metadata accessor for SummariesFullProfilePlanner()
{
  uint64_t result = qword_26B0356D0;
  if (!qword_26B0356D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B392B0()
{
  uint64_t result = sub_241CD94E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241B39358()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_241B39380@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Summaries27SummariesFullProfilePlanner_signals;
  uint64_t v4 = sub_241CD94E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241B393F8()
{
  type metadata accessor for SummariesFullProfileExecutor();
  return sub_241B00008(*(void **)(v0 + 32));
}

uint64_t sub_241B39434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B3964C(a1, a2, a3, a4, MEMORY[0x263F45460]);
}

uint64_t sub_241B3944C(unsigned int (*a1)(char *, uint64_t, uint64_t), uint64_t a2, void (*a3)(uint64_t, void, uint64_t, uint64_t))
{
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241B3BF50(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = sub_241CD6D00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = sub_241B33544(a1, a2, a3, (uint64_t)v9);
  sub_241B3AED8((uint64_t)v9, &qword_26B0385B8, v6);
  return v11;
}

uint64_t sub_241B39574(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_241B39964(&qword_26B0356C0, (void (*)(uint64_t))type metadata accessor for SummariesFullProfilePlanner);

  return MEMORY[0x270F36170](a1, a2, v5, v6);
}

uint64_t sub_241B3961C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B3964C(a1, a2, a3, a4, MEMORY[0x263F45470]);
}

uint64_t sub_241B39634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B3964C(a1, a2, a3, a4, MEMORY[0x263F45468]);
}

uint64_t sub_241B3964C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = *v5;
  uint64_t v9 = sub_241B39964(&qword_26B0356C0, (void (*)(uint64_t))type metadata accessor for SummariesFullProfilePlanner);

  return a5(a1, a2, v8, v9);
}

uint64_t sub_241B39708()
{
  uint64_t v1 = sub_241CD6D70();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 91;
  v8[1] = 0xE100000000000000;
  sub_241CDC270();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  id v5 = objc_msgSend(*(id *)(v0 + 32), sel_profileIdentifier);
  id v6 = objc_msgSend(v5, sel_identifier);

  sub_241CD6D50();
  sub_241CD6D20();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  return v8[0];
}

uint64_t sub_241B398B0()
{
  return sub_241B39708();
}

uint64_t sub_241B398D4()
{
  return sub_241B39964(&qword_268D42B88, (void (*)(uint64_t))_s8WorkPlanVMa);
}

uint64_t sub_241B3991C()
{
  return sub_241B39964(&qword_26B0356C8, (void (*)(uint64_t))type metadata accessor for SummariesFullProfilePlanner);
}

uint64_t sub_241B39964(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_241B399AC(void *a1)
{
  uint64_t v76 = a1;
  uint64_t v1 = sub_241CD9680();
  uint64_t v68 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v71 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_241CD72B0();
  uint64_t v74 = *(void *)(v3 - 8);
  uint64_t v75 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v78 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v70 = (char *)&v67 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v79 = (char *)&v67 - v8;
  sub_241B3BF50(0, &qword_26B035588, MEMORY[0x263F459A0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v67 - v10;
  uint64_t v12 = sub_241CD7DC0();
  uint64_t v77 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v73 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v72 = (char *)&v67 - v15;
  uint64_t v16 = sub_241CD96A0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B3A9E0(0, (unint64_t *)&qword_26B036980, (unint64_t *)&qword_26B035648, MEMORY[0x263F45410], MEMORY[0x263F8E0F8]);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_241CEC2D0;
  sub_241CD96C0();
  *(void *)(v20 + 56) = v1;
  uint64_t v21 = sub_241B39964((unint64_t *)&qword_26B035600, MEMORY[0x263F453F0]);
  *(void *)(v20 + 64) = v21;
  sub_241A25BC8((uint64_t *)(v20 + 32));
  sub_241CD96B0();
  *(void *)(v20 + 96) = sub_241CD9550();
  *(void *)(v20 + 104) = sub_241B39964(&qword_26B0355D8, MEMORY[0x263F45378]);
  sub_241A25BC8((uint64_t *)(v20 + 72));
  sub_241CD9540();
  uint64_t v69 = v1;
  *(void *)(v20 + 136) = v1;
  *(void *)(v20 + 144) = v21;
  uint64_t v67 = v21;
  sub_241A25BC8((uint64_t *)(v20 + 112));
  if (qword_26B035628 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_241A55850(v16, (uint64_t)qword_26B035608);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v22, v16);
  sub_241CD9670();
  uint64_t v84 = (void *)v20;
  uint64_t v23 = v80;
  sub_241B3A408(v11);
  uint64_t v24 = v77;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v11, 1, v12) == 1)
  {
    sub_241B3AED8((uint64_t)v11, &qword_26B035588, MEMORY[0x263F459A0]);
    uint64_t v25 = v75;
    uint64_t v26 = v76;
    uint64_t v27 = v74;
  }
  else
  {
    uint64_t v28 = v72;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v72, v11, v12);
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
    v29(v73, v28, v12);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v84 = (void *)v20;
    uint64_t v27 = v74;
    uint64_t v25 = v75;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v20 = (uint64_t)sub_241AF7F7C(0, *(void *)(v20 + 16) + 1, 1, (void *)v20);
      uint64_t v84 = (void *)v20;
    }
    unint64_t v32 = *(void *)(v20 + 16);
    unint64_t v31 = *(void *)(v20 + 24);
    if (v32 >= v31 >> 1)
    {
      uint64_t v20 = (uint64_t)sub_241AF7F7C((void *)(v31 > 1), v32 + 1, 1, (void *)v20);
      uint64_t v84 = (void *)v20;
    }
    uint64_t v82 = v12;
    uint64_t v83 = sub_241B39964(&qword_26B035580, MEMORY[0x263F459A0]);
    uint64_t v33 = sub_241A25BC8((uint64_t *)&v81);
    uint64_t v34 = v73;
    v29((char *)v33, v73, v12);
    *(void *)(v20 + 16) = v32 + 1;
    sub_241A5598C(&v81, v20 + 40 * v32 + 32);
    uint64_t v35 = *(void (**)(char *, uint64_t))(v24 + 8);
    v35(v34, v12);
    v35(v72, v12);
    uint64_t v26 = v76;
    uint64_t v23 = v80;
  }
  self;
  uint64_t v36 = swift_dynamicCastObjCClass();
  uint64_t v37 = v78;
  if (v36)
  {
    uint64_t v38 = v36;
    sub_241A310AC(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241CEB710;
    *(void *)(inited + 32) = v38;
    *(void *)&long long v81 = inited;
    sub_241CDB2E0();
    unint64_t v40 = v81;
    if ((unint64_t)v81 >> 62)
    {
      id v43 = v23;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_241CDBF50();
      swift_bridgeObjectRelease();
      if (!v44) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v41 = *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v42 = v23;
      if (!v41)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        uint64_t v45 = v70;
        sub_241CD72A0();
        uint64_t v46 = v79;
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v79, v45, v25);
        uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
        v47(v37, v46, v25);
        uint64_t v48 = v84;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v48 = sub_241AF7F7C(0, v48[2] + 1, 1, v48);
          uint64_t v84 = v48;
        }
        unint64_t v50 = v48[2];
        unint64_t v49 = v48[3];
        if (v50 >= v49 >> 1)
        {
          uint64_t v48 = sub_241AF7F7C((void *)(v49 > 1), v50 + 1, 1, v48);
          uint64_t v84 = v48;
        }
        uint64_t v82 = v25;
        uint64_t v83 = sub_241B39964(&qword_26B035508, MEMORY[0x263F45490]);
        uint64_t v51 = sub_241A25BC8((uint64_t *)&v81);
        v47((char *)v51, v37, v25);
        v48[2] = v50 + 1;
        sub_241A5598C(&v81, (uint64_t)&v48[5 * v50 + 4]);
        uint64_t v52 = *(void (**)(char *, uint64_t))(v27 + 8);
        v52(v37, v25);
        v52(v79, v25);
        goto LABEL_20;
      }
    }
    sub_241C6B9E8(v40);
    goto LABEL_15;
  }
LABEL_20:
  sub_241AD7F70((uint64_t)&v81);
  uint64_t v53 = v82;
  if (v82)
  {
    uint64_t v54 = v83;
    sub_241A311E0(&v81, v82);
    uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v53, v54);
    sub_241A31190((uint64_t)&v81);
    sub_241AFF6E0(v55);
  }
  else
  {
    sub_241B3A958((uint64_t)&v81);
  }
  id v56 = objc_msgSend(v26, sel_profileIdentifier);
  id v57 = objc_msgSend(v56, sel_type);

  if (v57 == (id)1)
  {
    uint64_t v58 = *(void *)(sub_241CD99D0() + 16);
    swift_bridgeObjectRelease();
    if (v58)
    {
      sub_241CD7C50();
      sub_241CD7C40();
      uint64_t v59 = v84;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v59 = sub_241AF7F7C(0, v59[2] + 1, 1, v59);
        uint64_t v84 = v59;
      }
      unint64_t v61 = v59[2];
      unint64_t v60 = v59[3];
      if (v61 >= v60 >> 1)
      {
        uint64_t v59 = sub_241AF7F7C((void *)(v60 > 1), v61 + 1, 1, v59);
        uint64_t v84 = v59;
      }
      uint64_t v62 = v69;
      uint64_t v82 = v69;
      uint64_t v83 = v67;
      uint64_t v63 = sub_241A25BC8((uint64_t *)&v81);
      uint64_t v64 = v68;
      uint64_t v65 = v71;
      (*(void (**)(uint64_t *, char *, uint64_t))(v68 + 16))(v63, v71, v62);
      v59[2] = v61 + 1;
      sub_241A5598C(&v81, (uint64_t)&v59[5 * v61 + 4]);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v62);
    }
  }
  return v84;
}

void sub_241B3A408(id a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    id v34 = v2;
    id v10 = objc_msgSend(v9, sel_code);
    if (v10 == (id)191 || v10 == (id)305)
    {
      uint64_t v11 = sub_241CD7DC0();
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
      id v12 = v34;

      return;
    }
    sub_241A310AC(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241CEB710;
    *(void *)(inited + 32) = v9;
    unint64_t v36 = inited;
    sub_241CDB2E0();
    unint64_t v24 = v36;
    if (v36 >> 62)
    {
      id v28 = v34;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_241CDBF50();
      swift_bridgeObjectRelease();
      if (!v29) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v25 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v26 = v34;
      if (!v25)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        sub_241CD7DB0();

        uint64_t v30 = sub_241CD7DC0();
        (*(void (**)(id, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a1, 0, 1, v30);
        return;
      }
    }
    sub_241C69AD0(v24);
    goto LABEL_15;
  }
  sub_241CDA100();
  id v13 = v2;
  uint64_t v14 = sub_241CDA190();
  os_log_type_t v15 = sub_241CDB660();
  if (os_log_type_enabled(v14, v15))
  {
    id v34 = a1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    unint64_t v36 = v33;
    *(_DWORD *)uint64_t v16 = 136446210;
    v31[1] = v16 + 4;
    unint64_t v32 = v16;
    id v17 = objc_msgSend(v13, sel_identifier);
    uint64_t v18 = sub_241CDB0D0();
    unint64_t v20 = v19;

    a1 = v34;
    uint64_t v35 = sub_241A33FE4(v18, v20, (uint64_t *)&v36);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    uint64_t v21 = v32;
    _os_log_impl(&dword_241A23000, v14, v15, "Unable to create database changes input signal for non-sample type: %{public}s", v32, 0xCu);
    uint64_t v22 = v33;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v22, -1, -1);
    MEMORY[0x245637F20](v21, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v27 = sub_241CD7DC0();
  (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a1, 1, 1, v27);
}

uint64_t sub_241B3A84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241B3ADE8(a2, a3, sub_241B589D4) & 1;
}

uint64_t sub_241B3A884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241B3ADE8(a2, a3, (uint64_t (*)(void))sub_241B8FD1C) & 1;
}

uint64_t sub_241B3A8BC()
{
  return sub_241B3AC30();
}

uint64_t sub_241B3A8C8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241B3A900(void *a1)
{
  sub_241B32AD4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_241B3A908()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241B3A918()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_241B3A940(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241B3A950()
{
  return swift_release();
}

uint64_t sub_241B3A958(uint64_t a1)
{
  sub_241B3A9E0(0, &qword_26B035C60, &qword_26B035C58, (uint64_t)&protocol descriptor for AdditionalInputSignalsProvider, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241B3A9E0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241A35FBC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241B3AA48()
{
  uint64_t v0 = sub_241CD96A0();
  MEMORY[0x270FA5388](v0 - 8);
  sub_241B3A9E0(0, (unint64_t *)&qword_26B036980, (unint64_t *)&qword_26B035648, MEMORY[0x263F45410], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB720;
  uint64_t v2 = sub_241CD9680();
  *(void *)(inited + 56) = v2;
  uint64_t v3 = sub_241B39964((unint64_t *)&qword_26B035600, MEMORY[0x263F453F0]);
  *(void *)(inited + 64) = v3;
  sub_241A25BC8((uint64_t *)(inited + 32));
  sub_241CD9690();
  sub_241CD9670();
  sub_241CD96C0();
  *(void *)(inited + 96) = v2;
  *(void *)(inited + 104) = v3;
  sub_241A25BC8((uint64_t *)(inited + 72));
  sub_241CD96B0();
  sub_241A37260(inited + 32, (uint64_t)v7);
  char v4 = sub_241CD9650();
  sub_241A31190((uint64_t)v7);
  if (v4)
  {
    char v5 = 1;
  }
  else
  {
    sub_241A37260(inited + 72, (uint64_t)v7);
    char v5 = sub_241CD9650();
    sub_241A31190((uint64_t)v7);
  }
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_241B3AC30()
{
  sub_241B3A9E0(0, (unint64_t *)&qword_26B036980, (unint64_t *)&qword_26B035648, MEMORY[0x263F45410], MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB720;
  sub_241BF69E8();
  *(void *)(inited + 56) = sub_241CD7DC0();
  *(void *)(inited + 64) = sub_241B39964(&qword_26B035580, MEMORY[0x263F459A0]);
  sub_241A25BC8((uint64_t *)(inited + 32));
  sub_241CD7DB0();
  sub_241CD96C0();
  *(void *)(inited + 96) = sub_241CD9680();
  *(void *)(inited + 104) = sub_241B39964((unint64_t *)&qword_26B035600, MEMORY[0x263F453F0]);
  sub_241A25BC8((uint64_t *)(inited + 72));
  sub_241CD96B0();
  sub_241A37260(inited + 32, (uint64_t)v4);
  char v1 = sub_241CD9650();
  sub_241A31190((uint64_t)v4);
  if (v1)
  {
    char v2 = 1;
  }
  else
  {
    sub_241A37260(inited + 72, (uint64_t)v4);
    char v2 = sub_241CD9650();
    sub_241A31190((uint64_t)v4);
  }
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_241B3ADE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5) {
    goto LABEL_9;
  }
  sub_241A37260(v3 + 32, (uint64_t)v12);
  char v6 = sub_241CD9650();
  sub_241A31190((uint64_t)v12);
  if (v6)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v5 == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    uint64_t v8 = v4 + 72;
    uint64_t v9 = 1;
    while (1)
    {
      uint64_t result = sub_241A37260(v8, (uint64_t)v12);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_241CD9650();
      sub_241A31190((uint64_t)v12);
      if (v11) {
        goto LABEL_3;
      }
      ++v9;
      v8 += 40;
      if (v10 == v5) {
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_241B3AED8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241B3BF50(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241B3AF48()
{
  if (!qword_26B035638)
  {
    sub_241A313AC(255, (unint64_t *)&unk_26B0368A8);
    sub_241A54FDC(&qword_26B0368A0, (unint64_t *)&unk_26B0368A8);
    unint64_t v0 = sub_241CD9700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035638);
    }
  }
}

void sub_241B3AFF0()
{
  if (!qword_26B0355F0)
  {
    sub_241CD78F0();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F45718];
    sub_241B39964(&qword_26B035538, MEMORY[0x263F45718]);
    sub_241B39964(&qword_26B035528, v0);
    sub_241B39964(&qword_26B035530, v0);
    unint64_t v1 = sub_241CD9610();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B0355F0);
    }
  }
}

void sub_241B3B0F4()
{
  if (!qword_26B035650)
  {
    sub_241B3B1FC();
    sub_241B39964(&qword_26B036810, (void (*)(uint64_t))sub_241B3B1FC);
    sub_241B39964(&qword_26B036818, (void (*)(uint64_t))sub_241B3B1FC);
    sub_241A54FDC(&qword_26B0368E8, (unint64_t *)&qword_26B031F28);
    unint64_t v0 = sub_241CD9730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035650);
    }
  }
}

void sub_241B3B1FC()
{
  if (!qword_26B036808)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B031F28);
    sub_241A54FDC(&qword_26B0368F0, (unint64_t *)&qword_26B031F28);
    unint64_t v0 = sub_241CDB3D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B036808);
    }
  }
}

uint64_t sub_241B3B2A4(uint64_t a1, uint64_t a2, char *a3)
{
  unint64_t v61 = a3;
  uint64_t v70 = a2;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B3BF50(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v63 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v57 - v8;
  uint64_t v66 = sub_241CD6D00();
  uint64_t v69 = *(void *)(v66 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v66);
  unint64_t v60 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v59 = (char *)&v57 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v62 = (char *)&v57 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v68 = (char *)&v57 - v16;
  uint64_t v17 = sub_241CD6EE0();
  uint64_t v64 = *(void *)(v17 - 8);
  uint64_t v65 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v67 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = (uint64_t (*)(uint64_t))MEMORY[0x263F063B0];
  sub_241B3BF50(0, &qword_26B031F80, MEMORY[0x263F063B0], v4);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v57 - v24;
  uint64_t v26 = sub_241CD68F0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v57 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  unint64_t v32 = (char *)&v57 - v31;
  sub_241B3BCE8(a1, (uint64_t)v25, &qword_26B031F80, v19);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v33(v25, 1, v26) == 1)
  {
    id v34 = &qword_26B031F80;
    uint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x263F063B0];
    uint64_t v36 = (uint64_t)v25;
LABEL_10:
    sub_241B3AED8(v36, v34, v35);
    char v44 = 0;
    return v44 & 1;
  }
  uint64_t v58 = v30;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v37(v32, v25, v26);
  sub_241B3BCE8(v70, (uint64_t)v23, &qword_26B031F80, MEMORY[0x263F063B0]);
  if (v33(v23, 1, v26) == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v26);
    id v34 = &qword_26B031F80;
    uint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x263F063B0];
    uint64_t v36 = (uint64_t)v23;
    goto LABEL_10;
  }
  uint64_t v38 = v58;
  v37(v58, v23, v26);
  uint64_t v39 = v67;
  sub_241CD6EA0();
  sub_241CD6E60();
  uint64_t v40 = v69;
  uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  uint64_t v42 = v66;
  if (v41(v9, 1, v66) == 1)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v39, v65);
    id v43 = *(void (**)(char *, uint64_t))(v27 + 8);
    v43(v38, v26);
LABEL_9:
    v43(v32, v26);
    id v34 = &qword_26B0385B8;
    uint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    uint64_t v36 = (uint64_t)v9;
    goto LABEL_10;
  }
  uint64_t v70 = *(void *)(v40 + 32);
  ((void (*)(char *, char *, uint64_t))v70)(v68, v9, v42);
  uint64_t v9 = v63;
  sub_241CD6E60();
  if (v41(v9, 1, v42) == 1)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v42);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v39, v65);
    id v43 = *(void (**)(char *, uint64_t))(v27 + 8);
    v43(v58, v26);
    goto LABEL_9;
  }
  uint64_t v46 = v62;
  ((void (*)(char *, char *, uint64_t))v70)(v62, v9, v42);
  uint64_t v47 = v61;
  LODWORD(v70) = sub_241CD6C80();
  uint64_t v48 = v69;
  unint64_t v49 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  unint64_t v50 = v59;
  v49(v59, v46, v42);
  uint64_t v51 = v60;
  v49(v60, v47, v42);
  if (v70)
  {
    sub_241B39964((unint64_t *)&qword_26B02E8D0, MEMORY[0x263F07490]);
    char v52 = sub_241CDB010();
    uint64_t v53 = v51;
    char v44 = v52 ^ 1;
  }
  else
  {
    uint64_t v53 = v51;
    char v44 = 0;
  }
  uint64_t v54 = v67;
  uint64_t v55 = *(void (**)(char *, uint64_t))(v48 + 8);
  v55(v53, v42);
  v55(v50, v42);
  v55(v62, v42);
  v55(v68, v42);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v54, v65);
  id v56 = *(void (**)(char *, uint64_t))(v27 + 8);
  v56(v58, v26);
  v56(v32, v26);
  return v44 & 1;
}

uint64_t sub_241B3B9FC(void *a1)
{
  sub_241B3BF50(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = sub_241CD6D00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t result = (uint64_t)objc_msgSend(a1, sel_state);
    if (result == 1) {
      return result;
    }
    if (result == 2)
    {
      id v13 = objc_msgSend(a1, sel_physiologicalWashoutEndDate);
      if (v13)
      {
        uint64_t v14 = v13;
        sub_241CD6CB0();

        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
      }
      sub_241B3BE44((uint64_t)v5, (uint64_t)v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_241B3AED8((uint64_t)v7, &qword_26B0385B8, MEMORY[0x263F07490]);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        char v15 = sub_241CD6C70();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        if (v15) {
          return 2;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_241B3BC84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s8WorkPlanVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241B3BCE8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241B3BF50(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241B3BD68(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241B3BED8(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_241B3BDC4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241B3BF50(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_241B3BE44(uint64_t a1, uint64_t a2)
{
  sub_241B3BF50(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241B3BED8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_241B3BF50(255, a3, a4, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_241B3BF50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241B3BFB4()
{
  if (!qword_26B035598)
  {
    sub_241CD68F0();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F063B0];
    sub_241B39964(&qword_26B035478, MEMORY[0x263F063B0]);
    sub_241B39964(&qword_26B035468, v0);
    sub_241B39964(&qword_26B035470, v0);
    unint64_t v1 = sub_241CD93E0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B035598);
    }
  }
}

void sub_241B3C0B8()
{
  if (!qword_268D42BB0)
  {
    sub_241A313AC(255, (unint64_t *)&unk_26B0368A8);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42BB0);
    }
  }
}

void sub_241B3C120()
{
  if (!qword_268D42BC0)
  {
    sub_241A313AC(255, qword_26B038100);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42BC0);
    }
  }
}

void *sub_241B3C188(uint64_t a1, uint64_t a2, id a3)
{
  id v7 = objc_msgSend(a3, sel_profileIdentifier);
  id v8 = objc_msgSend(v7, sel_type);

  if (v8 == (id)1)
  {
    type metadata accessor for SummariesHealthPluginDelegate();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    id v11 = objc_msgSend(v10, sel_bundleIdentifier);

    if (v11)
    {
      uint64_t v12 = sub_241CDB0D0();
      uint64_t v14 = v13;

      v3[2] = a1;
      v3[3] = a2;
      v3[4] = a3;
      v3[5] = v12;
      v3[6] = v14;
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = (void *)sub_241CDBF10();
  __break(1u);
  return result;
}

uint64_t sub_241B3C2D4(uint64_t a1, void (*a2)(uint64_t, void))
{
  uint64_t v3 = v2;
  sub_241B3C834();
  sub_241CD9630();
  uint64_t v5 = sub_241BBD6DC(v8);
  swift_retain();
  uint64_t v6 = sub_241B3CBE8(v5, v3);
  swift_bridgeObjectRelease();
  swift_release();
  a2(v6, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_241B3C3B0()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC9Summaries30WheelchairSettingModelExecutor7Planner_signals;
  uint64_t v2 = sub_241CD94E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241B3C458@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC9Summaries30WheelchairSettingModelExecutor7Planner_signals;
  uint64_t v4 = sub_241CD94E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241B3C4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B3C5CC(a1, a2, a3, a4, MEMORY[0x263F45460]);
}

uint64_t sub_241B3C4E8(uint64_t a1, uint64_t a2)
{
  return sub_241B3CF2C(a2);
}

uint64_t sub_241B3C4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_241B3C908(&qword_26B035C68, 255, (void (*)(uint64_t))type metadata accessor for WheelchairSettingModelExecutor.Planner);

  return MEMORY[0x270F36170](a1, a2, v5, v6);
}

uint64_t sub_241B3C59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B3C5CC(a1, a2, a3, a4, MEMORY[0x263F45470]);
}

uint64_t sub_241B3C5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B3C5CC(a1, a2, a3, a4, MEMORY[0x263F45468]);
}

uint64_t sub_241B3C5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = *v5;
  uint64_t v9 = sub_241B3C908(&qword_26B035C68, 255, (void (*)(uint64_t))type metadata accessor for WheelchairSettingModelExecutor.Planner);

  return a5(a1, a2, v8, v9);
}

uint64_t sub_241B3C68C()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WheelchairSettingModelExecutor()
{
  return self;
}

uint64_t sub_241B3C6F8()
{
  return type metadata accessor for WheelchairSettingModelExecutor.Planner();
}

uint64_t type metadata accessor for WheelchairSettingModelExecutor.Planner()
{
  uint64_t result = qword_26B035C78;
  if (!qword_26B035C78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B3C74C()
{
  uint64_t result = sub_241CD94E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241B3C7E8()
{
  return sub_241B3C908(&qword_268D42BC8, 255, (void (*)(uint64_t))sub_241B3C834);
}

void sub_241B3C834()
{
  if (!qword_268D42BD0)
  {
    type metadata accessor for HKWheelchairUse(255);
    sub_241B3C908(&qword_26B036870, 255, type metadata accessor for HKWheelchairUse);
    sub_241B3C908(&qword_26B036860, 255, type metadata accessor for HKWheelchairUse);
    unint64_t v0 = sub_241CD9640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42BD0);
    }
  }
}

uint64_t sub_241B3C908(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B3C950()
{
  return sub_241B3C908(&qword_26B035C70, 255, (void (*)(uint64_t))type metadata accessor for WheelchairSettingModelExecutor.Planner);
}

uint64_t sub_241B3C9A0()
{
  return MEMORY[0x270F35FE8](0xD00000000000002DLL, 0x8000000241CE0F00);
}

uint64_t sub_241B3C9BC(uint64_t a1)
{
  uint64_t v3 = sub_241CD94E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  long long v10 = *(_OWORD *)(v1 + 16);
  v7(v6, a1, v3);
  type metadata accessor for WheelchairSettingModelExecutor.Planner();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8 + OBJC_IVAR____TtCC9Summaries30WheelchairSettingModelExecutor7Planner_signals, v6, v3);
  swift_unknownObjectRetain();
  return v8;
}

uint64_t sub_241B3CAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = sub_241B3C908(&qword_268D42BD8, a2, (void (*)(uint64_t))type metadata accessor for WheelchairSettingModelExecutor);

  return MEMORY[0x270F36BB8](a1, a2, a3, v7, v8);
}

uint64_t sub_241B3CBA0(uint64_t a1, uint64_t a2)
{
  return sub_241B3C908(&qword_26B035D30, a2, (void (*)(uint64_t))type metadata accessor for WheelchairSettingModelExecutor);
}

uint64_t sub_241B3CBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = sub_241CD79A0();
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_241CDBE80();
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    unint64_t v11 = sub_241B3CD8C();
    uint64_t v16 = *(void *)(a2 + 40);
    unint64_t v17 = v11;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v14 = *(void *)(v5 + 72);
    char v15 = v12;
    while (1)
    {
      v15(v7, v10, v18);
      swift_bridgeObjectRetain();
      sub_241CDB740();
      if (v2) {
        break;
      }
      sub_241CDBE60();
      sub_241CDBE90();
      sub_241CDBEA0();
      sub_241CDBE70();
      v10 += v14;
      if (!--v8) {
        return v19;
      }
    }
    return swift_release();
  }
  return result;
}

unint64_t sub_241B3CD8C()
{
  unint64_t result = qword_26B036858;
  if (!qword_26B036858)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B036858);
  }
  return result;
}

uint64_t sub_241B3CDCC()
{
  sub_241CD9460();
  sub_241B3D8CC(0, (unint64_t *)&qword_26B036980, (void (*)(uint64_t))sub_241A78970);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_241CEB730;
  sub_241B3D7B4(0, (unint64_t *)&qword_26B035578, MEMORY[0x263F45950]);
  *(void *)(v0 + 56) = sub_241CD9680();
  *(void *)(v0 + 64) = sub_241B3C908((unint64_t *)&qword_26B035600, 255, MEMORY[0x263F453F0]);
  sub_241A25BC8((uint64_t *)(v0 + 32));
  sub_241CD7D60();
  uint64_t v1 = sub_241CD9440();
  sub_241A33460();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241CEB710;
  *(void *)(v2 + 32) = v1;
  uint64_t v4 = v2;
  sub_241CDB2E0();
  return v4;
}

uint64_t sub_241B3CF2C(uint64_t a1)
{
  uint64_t v45 = a1;
  uint64_t v1 = sub_241CD95E0();
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v49 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B3C834();
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v50 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F45950];
  sub_241B3D74C(0, &qword_268D42BE0, (unint64_t *)&qword_26B035578, MEMORY[0x263F45950], MEMORY[0x263F45330]);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v40 = (char *)&v35 - v6;
  uint64_t v41 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F453D8];
  sub_241B3D74C(0, &qword_268D42BE8, &qword_268D42BF0, MEMORY[0x263F453D8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (char *)&v35 - v8;
  uint64_t v9 = sub_241CD9530();
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v46 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v38 = (char *)&v35 - v12;
  uint64_t v37 = sub_241CD94F0();
  uint64_t v13 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  char v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B3D8CC(0, &qword_26B036978, MEMORY[0x263F45368]);
  uint64_t v35 = *(void *)(*(void *)(sub_241CD9510() - 8) + 72);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_241CEB720;
  sub_241B3D8CC(0, &qword_26B036988, MEMORY[0x263F45420]);
  sub_241CD9780();
  uint64_t v16 = swift_allocObject();
  long long v53 = xmmword_241CEB730;
  *(_OWORD *)(v16 + 16) = xmmword_241CEB730;
  sub_241CD9750();
  unint64_t v17 = *(void (**)(char *, void, uint64_t))(v13 + 104);
  uint64_t v18 = v37;
  v17(v15, *MEMORY[0x263F45350], v37);
  sub_241CD9500();
  *(_OWORD *)(swift_allocObject() + 16) = v53;
  uint64_t v19 = v38;
  sub_241CD9760();
  v17(v15, *MEMORY[0x263F45348], v18);
  sub_241CD9500();
  v17(v15, *MEMORY[0x263F45360], v18);
  uint64_t v20 = (uint64_t)v39;
  sub_241CD9500();
  sub_241B3D7B4(0, (unint64_t *)&qword_26B035578, v42);
  uint64_t v21 = v40;
  sub_241CD9470();
  sub_241B3D920();
  sub_241CD9660();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v44);
  sub_241B3D7B4(0, &qword_268D42BF0, v41);
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v20, 1, v22) == 1)
  {
    sub_241B3D994(v20);
LABEL_6:
    uint64_t v27 = 0;
    goto LABEL_7;
  }
  sub_241CD9600();
  uint64_t v25 = v54;
  char v26 = v55;
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v20, v23);
  if ((v26 & 1) != 0 || v25 != 2) {
    goto LABEL_6;
  }
  uint64_t v27 = 2;
LABEL_7:
  sub_241CD95D0();
  uint64_t v28 = v47;
  uint64_t v29 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v46, v19, v48);
  uint64_t v54 = v27;
  type metadata accessor for HKWheelchairUse(0);
  sub_241B3C908(&qword_26B036870, 255, type metadata accessor for HKWheelchairUse);
  sub_241B3C908(&qword_26B036860, 255, type metadata accessor for HKWheelchairUse);
  uint64_t v30 = v50;
  sub_241CD9620();
  sub_241B3D8CC(0, &qword_268D42BF8, (void (*)(uint64_t))sub_241B3C834);
  uint64_t v31 = v51;
  unint64_t v32 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v53;
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v33 + v32, v30, v52);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v29);
  return v33;
}

void sub_241B3D74C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, void *), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_241B3D7B4(255, a3, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241B3D7B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    type metadata accessor for HKWheelchairUse(255);
    v9[0] = v6;
    v9[1] = sub_241B3C908(&qword_26B036870, 255, type metadata accessor for HKWheelchairUse);
    void v9[2] = sub_241B3C908(&qword_26B036860, 255, type metadata accessor for HKWheelchairUse);
    v9[3] = sub_241B3C908(&qword_26B036868, 255, type metadata accessor for HKWheelchairUse);
    unint64_t v7 = a3(a1, v9);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241B3D8CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDC0E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_241B3D920()
{
  unint64_t result = qword_26B035570;
  if (!qword_26B035570)
  {
    sub_241B3D7B4(255, (unint64_t *)&qword_26B035578, MEMORY[0x263F45950]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035570);
  }
  return result;
}

uint64_t sub_241B3D994(uint64_t a1)
{
  sub_241B3D74C(0, &qword_268D42BE8, &qword_268D42BF0, MEMORY[0x263F453D8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ChartSharableModelProviding.chartQueryDataPublisher(for:timeScopes:timeScopeReferenceDate:audience:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v42 = a6;
  uint64_t v37 = a2;
  uint64_t v38 = a4;
  uint64_t v35 = a3;
  uint64_t v36 = a1;
  uint64_t v8 = sub_241CD6D00();
  uint64_t v33 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  id v34 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a5 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B3DE68();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v40 = v15;
  uint64_t v41 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v39 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v6, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v8);
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v19 = (v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + v20 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v42;
  *(void *)(v22 + 16) = a5;
  *(void *)(v22 + 24) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v22 + v18, v14, a5);
  uint64_t v24 = v36;
  *(void *)(v22 + v19) = v36;
  *(void *)(v22 + v20) = v37;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v22 + v21, v34, v33);
  *(void *)(v22 + ((v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8)) = v38;
  sub_241B3DF54();
  swift_allocObject();
  id v25 = v24;
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_241CDA610();
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v42;
  *(void *)(v26 + 16) = a5;
  *(void *)(v26 + 24) = v27;
  sub_241B3E000();
  sub_241B3E094(&qword_26B038998, (void (*)(uint64_t))sub_241B3DF54);
  sub_241B3E094(&qword_26B038990, (void (*)(uint64_t))sub_241B3E000);
  uint64_t v28 = v39;
  sub_241CDA750();
  swift_release();
  swift_release();
  sub_241B3E094(&qword_26B038938, (void (*)(uint64_t))sub_241B3DE68);
  uint64_t v29 = v40;
  uint64_t v30 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v29);
  return v30;
}

void sub_241B3DE68()
{
  if (!qword_26B0324E8)
  {
    sub_241B3DF54();
    sub_241B3E000();
    sub_241B3E094(&qword_26B038998, (void (*)(uint64_t))sub_241B3DF54);
    sub_241B3E094(&qword_26B038990, (void (*)(uint64_t))sub_241B3E000);
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0324E8);
    }
  }
}

void sub_241B3DF54()
{
  if (!qword_26B032880)
  {
    sub_241B3F6D0(255, (unint64_t *)&qword_26B034DF0, (uint64_t)&qword_26B030428, 0x263F46498, (void (*)(uint64_t, uint64_t, uint64_t))sub_241A313AC);
    sub_241A35FBC(255, (unint64_t *)&qword_26B038870);
    unint64_t v0 = sub_241CDA600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032880);
    }
  }
}

void sub_241B3E000()
{
  if (!qword_26B032840)
  {
    sub_241B3F6D0(255, (unint64_t *)&qword_26B034DF0, (uint64_t)&qword_26B030428, 0x263F46498, (void (*)(uint64_t, uint64_t, uint64_t))sub_241A313AC);
    unint64_t v0 = sub_241CDA5F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032840);
    }
  }
}

uint64_t sub_241B3E094(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_241B3E0DC()
{
  id v1 = objc_msgSend(*v0, sel_healthStore);

  return v1;
}

uint64_t sub_241B3E114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = *v7;
  uint64_t v12 = (void *)sub_241CDB090();
  sub_241A313AC(0, (unint64_t *)&qword_26B0304E8);
  sub_241A54FDC(qword_26B0304F0, (unint64_t *)&qword_26B0304E8);
  uint64_t v13 = (void *)sub_241CDB360();
  uint64_t v14 = (void *)sub_241CD6C60();
  v17[4] = a6;
  v17[5] = a7;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  v17[2] = sub_241BC63F8;
  v17[3] = &unk_26F5C3190;
  uint64_t v15 = _Block_copy(v17);
  swift_retain();
  objc_msgSend(v11, sel_encodeChartQueryDataForTypeIdentifier_forTimeScopes_timeScopeReferenceDate_audience_completionHandler_, v12, v13, v14, a5, v15);
  _Block_release(v15);

  return swift_release();
}

uint64_t sub_241B3E280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  v8[4] = a2;
  v8[5] = a3;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  void v8[2] = sub_241BC63F8;
  v8[3] = &unk_26F5C3168;
  uint64_t v6 = _Block_copy(v8);
  swift_retain();
  objc_msgSend(v5, sel_encodeActivityChartDataForActivityMoveMode_completion_, a1, v6);
  _Block_release(v6);
  return swift_release();
}

uint64_t DataTypeMostRecentSamplesQuery.encodeChartQueryData(forTypeIdentifier:forTimeScopes:timeScopeReferenceDate:audience:completionHandler:)()
{
  return sub_241CD8E00();
}

void DataTypeMostRecentSamplesQuery.encodeActivityChartData(for:completion:)()
{
}

uint64_t sub_241B3E3A4()
{
  return sub_241CD8E30();
}

uint64_t sub_241B3E3C8()
{
  return sub_241CD8E00();
}

void sub_241B3E3F4()
{
}

uint64_t ChartSharableModelProviding.encodeChartQueryData(for:timeScopes:timeScopeReferenceDate:audience:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v43[1] = *(id *)MEMORY[0x263EF8340];
  id v13 = objc_msgSend(a1, sel_identifier);
  uint64_t v14 = sub_241CDB0D0();
  uint64_t v16 = v15;

  if (v14 == sub_241CDB0D0() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  char v19 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_14:
    uint64_t v31 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a8 + 8))(a7, a8);
    v43[0] = 0;
    id v32 = objc_msgSend(v31, sel_activityMoveModeWithError_, v43);

    if (v32)
    {
      id v33 = v43[0];
      uint64_t v34 = (uint64_t)objc_msgSend(v32, sel_activityMoveMode);
    }
    else
    {
      id v35 = v43[0];
      uint64_t v36 = (void *)sub_241CD6A40();

      swift_willThrow();
      uint64_t v34 = 1;
    }
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = a5;
    *(void *)(v37 + 24) = a6;
    uint64_t v38 = *(void (**)(uint64_t, void (*)(void *, void *), uint64_t, uint64_t, uint64_t))(a8 + 24);
    swift_retain();
    v38(v34, sub_241B3F7A8, v37, a7, a8);
    return swift_release();
  }
  id v20 = objc_msgSend(a1, sel_identifier);
  uint64_t v39 = sub_241CDB0D0();
  uint64_t v22 = v21;

  uint64_t v23 = *(void *)(a2 + 16);
  id v24 = (id)MEMORY[0x263F8EE78];
  if (v23)
  {
    v43[0] = (id)MEMORY[0x263F8EE78];
    sub_241CDBE80();
    id v25 = (uint64_t *)(a2 + 32);
    do
    {
      uint64_t v26 = *v25++;
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v26);
      sub_241CDBE60();
      sub_241CDBE90();
      sub_241CDBEA0();
      sub_241CDBE70();
      --v23;
    }
    while (v23);
    id v24 = v43[0];
  }
  uint64_t v27 = sub_241C6A2F0((unint64_t)v24);
  swift_bridgeObjectRelease();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a5;
  *(void *)(v28 + 24) = a6;
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(void *, void *), uint64_t, uint64_t, uint64_t))(a8 + 16);
  swift_retain();
  v29(v39, v22, v27, a3, a4, sub_241B3F62C, v28, a7, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_241B3E80C(void *a1, void *a2, void (*a3)(void *, uint64_t))
{
  sub_241A72428(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v9 = a2;
    a3(a2, 1);
  }
  else
  {
    if (a1)
    {
      sub_241CD7A80();
      uint64_t v10 = sub_241CD7AB0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
      sub_241A313AC(0, &qword_26B030428);
      sub_241A54FDC(&qword_26B030420, &qword_26B030428);
      sub_241CD8A20();
    }
    a3(a1, 0);
  }
}

uint64_t sub_241B3E9AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_241B3F77C;
  *(void *)(v17 + 24) = v16;
  swift_retain();
  ChartSharableModelProviding.encodeChartQueryData(for:timeScopes:timeScopeReferenceDate:audience:completion:)(a4, a5, a6, a7, (uint64_t)sub_241B3F788, v17, a8, a9);

  return swift_release();
}

uint64_t sub_241B3EAA8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x270FA0238](v0, v10, v12);
}

uint64_t sub_241B3EC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v8 = (*(void *)(*(void *)(v5 - 8) + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(sub_241CD6D00() - 8);
  unint64_t v11 = (v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return sub_241B3E9AC(a1, a2, v2 + v7, *(void **)(v2 + v8), *(void *)(v2 + v9), v2 + v11, *(void *)(v2 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8)), v5, v6);
}

void sub_241B3ED60(id a1, char a2, void (*a3)(id, uint64_t))
{
  if (a2)
  {
    id v5 = a1;
    uint64_t v6 = 1;
  }
  else
  {
    id v7 = a1;
    uint64_t v6 = 0;
  }
  a3(a1, v6);

  sub_241A960B8(a1);
}

uint64_t sub_241B3EDD4(void **a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  sub_241CDA0F0();
  id v9 = v8;
  id v10 = v8;
  unint64_t v11 = sub_241CDA190();
  os_log_type_t v12 = sub_241CDB650();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v4;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = a2;
    uint64_t v25 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_getMetatypeMetadata();
    uint64_t v16 = sub_241CDB120();
    uint64_t v24 = sub_241A33FE4(v16, v17, &v25);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v24 = (uint64_t)v8;
    id v18 = v8;
    sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
    uint64_t v19 = sub_241CDB130();
    uint64_t v24 = sub_241A33FE4(v19, v20, &v25);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v11, v12, "[%s]: error when creating chart data: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v15, -1, -1);
    MEMORY[0x245637F20](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_241B3F6D0(0, (unint64_t *)&qword_26B034DF0, (uint64_t)&qword_26B030428, 0x263F46498, (void (*)(uint64_t, uint64_t, uint64_t))sub_241A313AC);
  return sub_241CDA5E0();
}

uint64_t sub_241B3F0C0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241B3F0D0(void **a1)
{
  return sub_241B3EDD4(a1, *(void *)(v1 + 16));
}

void sub_241B3F0D8(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v34 = sub_241CD6EE0();
  uint64_t v5 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  id v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD6D00();
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD8E20();
  uint64_t v32 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  if (!swift_dynamicCastObjCClass()) {
    goto LABEL_6;
  }
  id v14 = v2;
  if ((sub_241B3F54C() & 1) == 0)
  {

LABEL_6:
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46780]), sel_initWithHealthStore_, a1);
    uint64_t v22 = a2;
    id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A130]), sel_init);
    id v24 = objc_msgSend(v23, sel_currentCalendar);

    sub_241CD6E50();
    id v25 = objc_allocWithZone(MEMORY[0x263F466D8]);
    uint64_t v26 = (void *)sub_241CD6E40();
    uint64_t v27 = (void *)sub_241CDB090();
    id v28 = objc_msgSend(v25, sel_initWithCalendar_queryIdentifier_, v26, v27);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v34);
    objc_msgSend(v21, sel_setSleepDataSourceProvider_, v28);

    v22[3] = sub_241A313AC(0, (unint64_t *)&qword_26B038E78);
    v22[4] = &protocol witness table for HKHealthChartFactory;
    goto LABEL_9;
  }
  uint64_t v31 = a2;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46A40]), sel_initWithHealthStore_, a1);
  id v30 = objc_msgSend(v14, sel_code);
  id v29 = v14;
  id v16 = a1;
  id v17 = v15;
  sub_241CD6CF0();
  sub_241CD6EA0();
  sub_241CD6780();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v34);
  id v18 = v29;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v8);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v13, *MEMORY[0x263F444E8], v11);
  if (v30 == (id)144)
  {
    uint64_t v19 = sub_241CD9220();
    swift_allocObject();
    uint64_t v20 = sub_241CD9210();
  }
  else
  {
    uint64_t v19 = sub_241CD8E40();
    swift_allocObject();
    uint64_t v20 = sub_241CD8E10();
  }
  id v21 = (id)v20;
  uint64_t v22 = v31;
  v31[3] = v19;
  v22[4] = &protocol witness table for DataTypeMostRecentSamplesQuery;

LABEL_9:
  void *v22 = v21;
}

uint64_t sub_241B3F54C()
{
  sub_241A313AC(0, (unint64_t *)&qword_26B038440);
  sub_241A35FBC(0, &qword_26B032150);
  id v1 = v0;
  if (swift_dynamicCast())
  {
    sub_241A5598C(v4, (uint64_t)v6);
    sub_241A311E0(v6, v6[3]);
    char v2 = sub_241CD8C70();
    sub_241A31190((uint64_t)v6);
  }
  else
  {
    uint64_t v5 = 0;
    memset(v4, 0, sizeof(v4));
    sub_241B3F648((uint64_t)v4);
    char v2 = 0;
  }
  return v2 & 1;
}

void sub_241B3F62C(void *a1, void *a2)
{
  sub_241B3E80C(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_241B3F648(uint64_t a1)
{
  sub_241B3F6D0(0, &qword_26B032158, (uint64_t)&qword_26B032150, MEMORY[0x263F44448], (void (*)(uint64_t, uint64_t, uint64_t))sub_241A35FBC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241B3F6D0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_241CDBBD0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_241B3F72C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241B3F73C()
{
  return swift_release();
}

uint64_t sub_241B3F744()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241B3F77C(uint64_t a1, char a2)
{
  return sub_241BC68F0(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

void sub_241B3F788(void *a1, char a2)
{
  sub_241B3ED60(a1, a2 & 1, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_241B3F7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (void **)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241B4485C(a1, a5, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v13 = type metadata accessor for ChartSharableModelStep();
  id v14 = (void *)(a5 + *(int *)(v13 + 20));
  void *v14 = a2;
  v14[1] = a3;
  sub_241B4485C(a4, (uint64_t)&v16, (uint64_t (*)(void))sub_241B3F9E0);
  sub_241B4485C(a1, (uint64_t)v12, type metadata accessor for SummariesFullProfileExecutor.Request);
  if (v17)
  {
    sub_241B45AD4(a4, (uint64_t (*)(void))sub_241B3F9E0);
    sub_241B45AD4(a1, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_241A5598C(&v16, (uint64_t)v18);
  }
  else
  {
    sub_241B3F0D8(v12[2], v18);
    sub_241B45AD4(a4, (uint64_t (*)(void))sub_241B3F9E0);
    sub_241B45AD4(a1, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_241B45AD4((uint64_t)&v16, (uint64_t (*)(void))sub_241B3F9E0);
  }
  sub_241B45AD4((uint64_t)v12, type metadata accessor for SummariesFullProfileExecutor.Request);
  return sub_241A5598C(v18, a5 + *(int *)(v13 + 24));
}

uint64_t type metadata accessor for ChartSharableModelStep()
{
  uint64_t result = qword_26B035A28;
  if (!qword_26B035A28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241B3F9E0()
{
  if (!qword_26B035C38)
  {
    sub_241A35FBC(255, &qword_26B035C30);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035C38);
    }
  }
}

void *sub_241B3FA48(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    uint64_t v3 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    uint64_t v8 = (void *)a2[2];
    *a1 = v5;
    a1[1] = v7;
    a1[2] = v8;
    uint64_t v63 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
    uint64_t v9 = v63[6];
    uint64_t v10 = (char *)v3 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *((unsigned char *)v3 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v12 = _s8WorkPlanVMa();
    uint64_t v13 = *(int *)(v12 + 20);
    unint64_t v61 = &v11[v13];
    uint64_t v62 = &v10[v13];
    uint64_t v14 = sub_241CD95E0();
    id v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_unknownObjectRetain();
    id v16 = v8;
    v15(v62, v61, v14);
    uint64_t v17 = v12;
    uint64_t v18 = *(int *)(v12 + 24);
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = sub_241CD78F0();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_241B3FED8(0, &qword_26B032040, MEMORY[0x263F45718]);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = *(int *)(v17 + 28);
    id v25 = &v10[v24];
    uint64_t v26 = &v11[v24];
    sub_241AC7534();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = *(int *)(v17 + 32);
    id v29 = &v10[v28];
    id v30 = &v11[v28];
    sub_241AC75E4();
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
    {
      sub_241B3FED8(0, &qword_26B031C88, (void (*)(uint64_t))sub_241AC75E4);
      memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
    }
    uint64_t v35 = v63[7];
    uint64_t v36 = *(void **)((char *)a2 + v35);
    *(void *)((char *)v3 + v35) = v36;
    uint64_t v37 = v63[8];
    uint64_t v38 = (char *)v3 + v37;
    uint64_t v39 = (char *)a2 + v37;
    long long v40 = *(_OWORD *)((char *)a2 + v37 + 24);
    *(_OWORD *)((char *)v3 + v37 + 24) = v40;
    uint64_t v41 = v40;
    uint64_t v42 = **(void (***)(char *, char *, uint64_t))(v40 - 8);
    id v43 = v36;
    v42(v38, v39, v41);
    *(_OWORD *)((char *)v3 + v63[9]) = *(_OWORD *)((char *)a2 + v63[9]);
    uint64_t v44 = v63[10];
    uint64_t v45 = *(void **)((char *)a2 + v44);
    *(void *)((char *)v3 + v44) = v45;
    uint64_t v46 = v63[11];
    uint64_t v47 = *(void **)((char *)a2 + v46);
    *(void *)((char *)v3 + v46) = v47;
    uint64_t v48 = *(int *)(a3 + 20);
    uint64_t v49 = *(int *)(a3 + 24);
    unint64_t v50 = (void *)((char *)v3 + v48);
    uint64_t v51 = (void *)((char *)a2 + v48);
    uint64_t v52 = v51[1];
    *unint64_t v50 = *v51;
    v50[1] = v52;
    long long v53 = (char *)v3 + v49;
    uint64_t v54 = (char *)a2 + v49;
    long long v55 = *(_OWORD *)(v54 + 24);
    *(_OWORD *)((char *)v3 + v49 + 24) = v55;
    uint64_t v56 = v55;
    uint64_t v57 = **(void (***)(char *, char *, uint64_t))(v55 - 8);
    swift_unknownObjectRetain();
    id v58 = v45;
    id v59 = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v57(v53, v54, v56);
  }
  return v3;
}

void sub_241B3FED8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241B3FF2C(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();

  unint64_t v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = a1 + v4[6];
  unint64_t v6 = (int *)_s8WorkPlanVMa();
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v5 + v6[6];
  uint64_t v10 = sub_241CD78F0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v5 + v6[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v5 + v6[8];
  sub_241AC75E4();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }

  sub_241A31190(a1 + v4[8]);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = a1 + *(int *)(a2 + 24);

  return sub_241A31190(v18);
}

uint64_t sub_241B4017C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  id v59 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = v59[6];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(a2 + v5);
  uint64_t v8 = (int *)_s8WorkPlanVMa();
  uint64_t v9 = v8[5];
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v7 + v9;
  uint64_t v12 = sub_241CD95E0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_unknownObjectRetain();
  id v14 = v4;
  v13(v10, v11, v12);
  uint64_t v15 = v8[6];
  uint64_t v16 = (void *)(v6 + v15);
  uint64_t v17 = (const void *)(v7 + v15);
  uint64_t v18 = sub_241CD78F0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_241B3FED8(0, &qword_26B032040, MEMORY[0x263F45718]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = v8[7];
  uint64_t v22 = v6 + v21;
  uint64_t v23 = v7 + v21;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = v8[8];
  uint64_t v26 = (void *)(v6 + v25);
  uint64_t v27 = (const void *)(v7 + v25);
  sub_241AC75E4();
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v28))
  {
    sub_241B3FED8(0, &qword_26B031C88, (void (*)(uint64_t))sub_241AC75E4);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v26, v27, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
  }
  uint64_t v32 = v59[7];
  uint64_t v33 = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = v33;
  uint64_t v34 = v59[8];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  long long v37 = *(_OWORD *)(a2 + v34 + 24);
  *(_OWORD *)(a1 + v34 + 24) = v37;
  uint64_t v38 = v37;
  uint64_t v39 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
  id v40 = v33;
  v39(v35, v36, v38);
  *(_OWORD *)(a1 + v59[9]) = *(_OWORD *)(a2 + v59[9]);
  uint64_t v41 = v59[10];
  uint64_t v42 = *(void **)(a2 + v41);
  *(void *)(a1 + v41) = v42;
  uint64_t v43 = v59[11];
  uint64_t v44 = *(void **)(a2 + v43);
  *(void *)(a1 + v43) = v44;
  uint64_t v45 = *(int *)(a3 + 20);
  uint64_t v46 = *(int *)(a3 + 24);
  uint64_t v47 = (void *)(a1 + v45);
  uint64_t v48 = (void *)(a2 + v45);
  uint64_t v49 = v48[1];
  void *v47 = *v48;
  v47[1] = v49;
  uint64_t v50 = a1 + v46;
  uint64_t v51 = a2 + v46;
  long long v52 = *(_OWORD *)(v51 + 24);
  *(_OWORD *)(v50 + 24) = v52;
  uint64_t v53 = v52;
  uint64_t v54 = **(void (***)(uint64_t, uint64_t, uint64_t))(v52 - 8);
  swift_unknownObjectRetain();
  id v55 = v42;
  id v56 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v54(v50, v51, v53);
  return a1;
}

void *sub_241B405C0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v5;
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  unint64_t v61 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v9 = v61[6];
  uint64_t v10 = (char *)a1 + v9;
  unint64_t v60 = a2;
  uint64_t v11 = (char *)a2 + v9;
  *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  uint64_t v12 = (int *)_s8WorkPlanVMa();
  uint64_t v13 = v12[5];
  id v14 = &v10[v13];
  uint64_t v15 = &v11[v13];
  uint64_t v16 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = v12[6];
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  uint64_t v20 = sub_241CD78F0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    sub_241B3FED8(0, &qword_26B032040, MEMORY[0x263F45718]);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  uint64_t v26 = v12[7];
  uint64_t v27 = &v10[v26];
  uint64_t v28 = &v11[v26];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  uint64_t v30 = v12[8];
  uint64_t v31 = &v10[v30];
  uint64_t v32 = &v11[v30];
  sub_241AC75E4();
  uint64_t v34 = v33;
  uint64_t v35 = *(void *)(v33 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v31, 1, v33);
  int v38 = v36(v32, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v31, v32, v34);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v34);
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    sub_241B3FED8(0, &qword_26B031C88, (void (*)(uint64_t))sub_241AC75E4);
    memcpy(v31, v32, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v31, v32, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
LABEL_13:
  uint64_t v40 = v61[7];
  uint64_t v41 = *(void **)((char *)v60 + v40);
  uint64_t v42 = *(void **)((char *)a1 + v40);
  *(void *)((char *)a1 + v40) = v41;
  id v43 = v41;

  sub_241AC8320((void *)((char *)a1 + v61[8]), (void *)((char *)v60 + v61[8]));
  uint64_t v44 = v61[9];
  uint64_t v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (void *)((char *)v60 + v44);
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v45[1] = v47;
  uint64_t v48 = v61[10];
  uint64_t v49 = *(void **)((char *)v60 + v48);
  uint64_t v50 = *(void **)((char *)a1 + v48);
  *(void *)((char *)a1 + v48) = v49;
  id v51 = v49;

  uint64_t v52 = v61[11];
  uint64_t v53 = *(void **)((char *)v60 + v52);
  uint64_t v54 = *(void **)((char *)a1 + v52);
  *(void *)((char *)a1 + v52) = v53;
  id v55 = v53;

  uint64_t v56 = *(int *)(a3 + 20);
  uint64_t v57 = (char *)a1 + v56;
  id v58 = (char *)v60 + v56;
  *(void *)((char *)a1 + v56) = *(void *)((char *)v60 + v56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v57 + 1) = *((void *)v58 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_241AC8320((void *)((char *)a1 + *(int *)(a3 + 24)), (void *)((char *)v60 + *(int *)(a3 + 24)));
  return a1;
}

uint64_t sub_241B40A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)_s8WorkPlanVMa();
  uint64_t v10 = v9[5];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = (void *)(v7 + v14);
  uint64_t v16 = (const void *)(v8 + v14);
  uint64_t v17 = sub_241CD78F0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_241B3FED8(0, &qword_26B032040, MEMORY[0x263F45718]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = v9[7];
  uint64_t v21 = v7 + v20;
  uint64_t v22 = v8 + v20;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = v9[8];
  uint64_t v25 = (void *)(v7 + v24);
  uint64_t v26 = (const void *)(v8 + v24);
  sub_241AC75E4();
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_241B3FED8(0, &qword_26B031C88, (void (*)(uint64_t))sub_241AC75E4);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
  uint64_t v31 = v5[8];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  long long v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  *(void *)(a1 + v5[10]) = *(void *)(a2 + v5[10]);
  *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
  uint64_t v35 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  long long v38 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  *(void *)(v36 + 32) = *(void *)(v37 + 32);
  return a1;
}

void *sub_241B40DF4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v6 = a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[1] = v5;
  a1[2] = v6;

  uint64_t v64 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v8 = v64[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  uint64_t v11 = (int *)_s8WorkPlanVMa();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v9[v12];
  uint64_t v14 = &v10[v12];
  uint64_t v15 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  uint64_t v19 = sub_241CD78F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  uint64_t v63 = v17;
  LODWORD(v17) = v21(v17, 1, v19);
  int v22 = v21(v18, 1, v19);
  if (v17)
  {
    if (v22)
    {
      sub_241B3FED8(0, &qword_26B032040, MEMORY[0x263F45718]);
      size_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
      uint64_t v25 = v63;
LABEL_6:
      memcpy(v25, v18, v24);
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v63, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v63, 0, 1, v19);
  }
  else
  {
    if (v22)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v63, v19);
      sub_241B3FED8(0, &qword_26B032040, MEMORY[0x263F45718]);
      size_t v24 = *(void *)(*(void *)(v26 - 8) + 64);
      uint64_t v25 = v63;
      goto LABEL_6;
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v63, v18, v19);
  }
LABEL_9:
  uint64_t v27 = v11[7];
  uint64_t v28 = &v9[v27];
  uint64_t v29 = &v10[v27];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = v11[8];
  uint64_t v32 = &v9[v31];
  uint64_t v33 = &v10[v31];
  sub_241AC75E4();
  uint64_t v35 = v34;
  uint64_t v36 = *(void *)(v34 - 8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v32, 1, v34);
  int v39 = v37(v33, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v32, v33, v35);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v35);
    goto LABEL_14;
  }
  if (v39)
  {
LABEL_14:
    sub_241B3FED8(0, &qword_26B031C88, (void (*)(uint64_t))sub_241AC75E4);
    memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v32, v33, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
LABEL_15:
  uint64_t v41 = v64[7];
  uint64_t v42 = *(void **)((char *)a1 + v41);
  *(void *)((char *)a1 + v41) = *(void *)((char *)a2 + v41);

  uint64_t v43 = v64[8];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  sub_241A31190((uint64_t)a1 + v43);
  long long v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  *((void *)v44 + 4) = *((void *)v45 + 4);
  uint64_t v47 = v64[9];
  uint64_t v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  swift_unknownObjectRelease();
  v48[1] = v50;
  uint64_t v51 = v64[10];
  uint64_t v52 = *(void **)((char *)a1 + v51);
  *(void *)((char *)a1 + v51) = *(void *)((char *)a2 + v51);

  uint64_t v53 = v64[11];
  uint64_t v54 = *(void **)((char *)a1 + v53);
  *(void *)((char *)a1 + v53) = *(void *)((char *)a2 + v53);

  uint64_t v55 = *(int *)(a3 + 20);
  uint64_t v56 = (char *)a1 + v55;
  uint64_t v57 = (char *)a2 + v55;
  *(void *)((char *)a1 + v55) = *(void *)((char *)a2 + v55);
  swift_bridgeObjectRelease();
  *((void *)v56 + 1) = *((void *)v57 + 1);
  swift_bridgeObjectRelease();
  uint64_t v58 = *(int *)(a3 + 24);
  id v59 = (char *)a1 + v58;
  unint64_t v60 = (char *)a2 + v58;
  sub_241A31190((uint64_t)a1 + v58);
  long long v61 = *((_OWORD *)v60 + 1);
  *(_OWORD *)id v59 = *(_OWORD *)v60;
  *((_OWORD *)v59 + 1) = v61;
  *((void *)v59 + 4) = *((void *)v60 + 4);
  return a1;
}

uint64_t sub_241B412E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B412F8);
}

uint64_t sub_241B412F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_241B413BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B413D0);
}

uint64_t sub_241B413D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t sub_241B41490()
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241B41530(void *a1, void *a2, char a3, uint64_t a4, void (*a5)(void *))
{
  sub_241B459F4(0, (unint64_t *)&qword_26B0369E0, (void (*)(uint64_t))type metadata accessor for SummariesFullProfileExecutor.StepResult);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v23 - v11);
  uint64_t v13 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v16 = (char *)&v23 - v15;
  if (a3)
  {
    *uint64_t v12 = a1;
    swift_storeEnumTagMultiPayload();
    id v22 = a1;
    a5(v12);
    return sub_241B45A78((uint64_t)v12, (unint64_t *)&qword_26B0369E0, (void (*)(uint64_t))type metadata accessor for SummariesFullProfileExecutor.StepResult);
  }
  else
  {
    sub_241B4485C(a4, (uint64_t)&v23 - v15, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    uint64_t v17 = (void *)*((void *)v16 + 2);
    uint64_t v18 = (void *)*((void *)v16 + 3);
    sub_241AABB40(a1, a2, 0);
    id v19 = a2;
    id v20 = a1;
    sub_241AABB8C(v17, v18);
    *((void *)v16 + 2) = a1;
    *((void *)v16 + 3) = a2;
    sub_241B4485C((uint64_t)v16, (uint64_t)v12, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
    a5(v12);
    sub_241AABBD0(a1, a2, 0);
    sub_241B45A78((uint64_t)v12, (unint64_t *)&qword_26B0369E0, (void (*)(uint64_t))type metadata accessor for SummariesFullProfileExecutor.StepResult);
    return sub_241B45AD4((uint64_t)v16, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  }
}

uint64_t sub_241B41750(uint64_t a1, void (*a2)(void *, void, uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v86 = a2;
  uint64_t v87 = a3;
  sub_241B459F4(0, &qword_26B0369D0, MEMORY[0x263F07490]);
  uint64_t v75 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v76 = (id *)((char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6);
  uint64_t v79 = (char *)&v68 - v8;
  uint64_t v78 = sub_241CD6D00();
  uint64_t v74 = *(void *)(v78 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v78);
  uint64_t v80 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v77 = (char *)&v68 - v11;
  uint64_t v12 = type metadata accessor for ChartSharableModelStep();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v82 = (uint64_t)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v83 = (uint64_t)&v68 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v68 - v19;
  MEMORY[0x270FA5388](v18);
  id v22 = (char *)&v68 - v21;
  sub_241B4485C(v4, (uint64_t)&v68 - v21, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
  uint64_t v85 = v20;
  sub_241B4485C((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
  uint64_t v23 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v24 = (v23 + 16) & ~v23;
  unint64_t v25 = (v24 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  sub_241B44BB8((uint64_t)v22, v26 + v24, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
  uint64_t v27 = (void *)(v26 + v25);
  uint64_t v28 = v86;
  *uint64_t v27 = v86;
  v27[1] = v87;
  uint64_t v81 = v12;
  uint64_t v29 = *(void *)((char *)v84 + *(int *)(v12 + 20));
  if (v29)
  {
    uint64_t v30 = v83;
    sub_241B4485C((uint64_t)v84, v83, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
    uint64_t v31 = swift_allocObject();
    sub_241B44BB8(v30, v31 + v24, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
    unint64_t v32 = v31 + v25;
    *(void *)unint64_t v32 = v29;
    *(unsigned char *)(v32 + 8) = 0;
    uint64_t v33 = (void (**)(void *, char))(v31 + ((v24 + v14 + 23) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v33 = sub_241B44C20;
    v33[1] = (void (*)(void *, char))v26;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_241B43124(0, sub_241B45070, v31);
    swift_release();
    swift_release();
    uint64_t v34 = (uint64_t)v85;
  }
  else
  {
    uint64_t v70 = v14;
    uint64_t v71 = v23;
    uint64_t v72 = v23 | 7;
    uint64_t v73 = v26;
    uint64_t v35 = v80;
    uint64_t v36 = v82;
    uint64_t v37 = (void *)swift_allocObject();
    void v37[2] = 0;
    v37[3] = v28;
    v37[4] = v87;
    uint64_t v34 = (uint64_t)v85;
    uint64_t v38 = *(void *)&v85[*(int *)(v81 + 20) + 8];
    if (v38)
    {
      sub_241B4485C((uint64_t)v85, v36, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v84 = v37;
      uint64_t v39 = v35;
      sub_241CD6CF0();
      uint64_t v40 = (void *)sub_241CD6C60();
      uint64_t v41 = v74;
      uint64_t v42 = *(void (**)(char *, uint64_t))(v74 + 8);
      uint64_t v68 = v38;
      uint64_t v43 = v78;
      uint64_t v69 = v42;
      v42((char *)v35, v78);
      id v44 = (id)HKEndOfDayForDate();

      uint64_t v45 = v77;
      sub_241CD6CB0();

      uint64_t v46 = (uint64_t)v79;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v79, v45, v43);
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = v76;
      sub_241B44CE4(v46, (uint64_t)v76);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        id v48 = *v47;
        id v49 = *v47;
        v86(v48, 0, 1);

        uint64_t v50 = v69;
      }
      else
      {
        uint64_t v51 = v39;
        uint64_t v52 = v71;
        uint64_t v53 = ~v71;
        (*(void (**)(uint64_t, id *, uint64_t))(v41 + 32))(v51, v47, v43);
        uint64_t v54 = v82;
        sub_241A37260(v82 + *(int *)(v81 + 24), (uint64_t)v88);
        uint64_t v55 = v89;
        uint64_t v56 = v90;
        sub_241A311E0(v88, v89);
        uint64_t v57 = *(void **)(v54 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
        uint64_t v58 = v54;
        uint64_t v59 = v83;
        sub_241B4485C(v58, v83, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
        uint64_t v60 = (v52 + 32) & v53;
        uint64_t v61 = swift_allocObject();
        uint64_t v62 = (uint64_t)v84;
        *(void *)(v61 + 16) = sub_241B44CD4;
        *(void *)(v61 + 24) = v62;
        uint64_t v43 = v78;
        sub_241B44BB8(v59, v61 + v60, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
        swift_retain();
        uint64_t v63 = v57;
        uint64_t v45 = v77;
        uint64_t v64 = v80;
        uint64_t v65 = v56;
        uint64_t v34 = (uint64_t)v85;
        uint64_t v46 = (uint64_t)v79;
        ChartSharableModelProviding.encodeChartQueryData(for:timeScopes:timeScopeReferenceDate:audience:completion:)(v63, v68, v80, 1, (uint64_t)sub_241B44D68, v61, v55, v65);
        swift_release();
        uint64_t v66 = v64;
        uint64_t v50 = v69;
        v69((char *)v66, v43);
        sub_241A31190((uint64_t)v88);
      }
      sub_241B45A78(v46, &qword_26B0369D0, MEMORY[0x263F07490]);
      v50(v45, v43);
      sub_241B45AD4(v82, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
      swift_release();
      swift_release_n();
      swift_release_n();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain_n();
      sub_241B42650(0, 0, 0, v28);
      swift_release();
      swift_release_n();
      swift_release();
    }
  }
  sub_241B45AD4(v34, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
  return swift_release();
}

void sub_241B41F7C(void *a1, char a2, uint64_t a3, void (*a4)(void *, void, uint64_t), uint64_t a5)
{
  uint64_t v72 = a4;
  uint64_t v73 = a5;
  uint64_t v71 = a3;
  sub_241B459F4(0, &qword_26B0369D0, MEMORY[0x263F07490]);
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (id *)((char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v58 - v12;
  uint64_t v14 = sub_241CD6D00();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v58 - v19;
  uint64_t v21 = type metadata accessor for ChartSharableModelStep();
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  if (a2)
  {
    id v47 = a1;
    v72(a1, 0, 1);
    id v48 = a1;
  }
  else
  {
    uint64_t v63 = v15;
    uint64_t v64 = v8;
    uint64_t v61 = v26;
    uint64_t v62 = v25;
    uint64_t v65 = v11;
    uint64_t v66 = v18;
    uint64_t v69 = (void *)v23;
    uint64_t v70 = (uint64_t)&v58 - v24;
    uint64_t v67 = v13;
    uint64_t v68 = v20;
    uint64_t v27 = (void *)swift_allocObject();
    uint64_t v29 = v72;
    uint64_t v28 = v73;
    void v27[2] = a1;
    v27[3] = v29;
    v27[4] = v28;
    uint64_t v30 = *(void *)(v71 + *((int *)v69 + 5) + 8);
    if (v30)
    {
      sub_241B4485C(v71, v70, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
      sub_241AF1514(a1);
      sub_241AF1514(a1);
      swift_retain();
      sub_241AF1514(a1);
      swift_retain();
      sub_241AF1514(a1);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v31 = (uint64_t)v66;
      sub_241CD6CF0();
      uint64_t v60 = v30;
      unint64_t v32 = (void *)sub_241CD6C60();
      uint64_t v33 = v63;
      uint64_t v34 = *(void (**)(char *, uint64_t))(v63 + 8);
      uint64_t v58 = v27;
      uint64_t v59 = v34;
      v34((char *)v31, v14);
      id v35 = (id)HKEndOfDayForDate();

      uint64_t v36 = v68;
      sub_241CD6CB0();

      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
      uint64_t v38 = (uint64_t)v67;
      uint64_t v71 = v14;
      uint64_t v39 = v14;
      uint64_t v40 = v70;
      v37(v67, v36, v39);
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = v65;
      sub_241B44CE4(v38, (uint64_t)v65);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        id v42 = *v41;
        id v43 = *v41;
        v72(v42, 0, 1);

        id v44 = v59;
        uint64_t v45 = v40;
        uint64_t v46 = v71;
      }
      else
      {
        (*(void (**)(uint64_t, id *, uint64_t))(v33 + 32))(v31, v41, v71);
        sub_241A37260(v40 + *((int *)v69 + 6), (uint64_t)v74);
        uint64_t v49 = v75;
        uint64_t v72 = v76;
        uint64_t v69 = sub_241A311E0(v74, v75);
        uint64_t v50 = *(void **)(v40 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
        uint64_t v51 = v62;
        sub_241B4485C(v40, v62, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
        unint64_t v52 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
        uint64_t v53 = swift_allocObject();
        uint64_t v54 = v58;
        *(void *)(v53 + 16) = sub_241B45B34;
        *(void *)(v53 + 24) = v54;
        uint64_t v55 = v53 + v52;
        uint64_t v45 = v70;
        sub_241B44BB8(v51, v55, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
        swift_retain();
        uint64_t v56 = v50;
        uint64_t v36 = v68;
        ChartSharableModelProviding.encodeChartQueryData(for:timeScopes:timeScopeReferenceDate:audience:completion:)(v56, v60, v31, 1, (uint64_t)sub_241B44D68, v53, v49, (uint64_t)v72);
        swift_release();
        uint64_t v57 = v31;
        uint64_t v46 = v71;
        id v44 = v59;
        v59((char *)v57, v71);
        sub_241A31190((uint64_t)v74);
      }
      sub_241B45A78(v38, &qword_26B0369D0, MEMORY[0x263F07490]);
      v44(v36, v46);
      sub_241B45AD4(v45, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
      swift_release_n();
      swift_bridgeObjectRelease();
      sub_241A960B8(a1);
      swift_release();
      sub_241A960B8(a1);
      swift_release();
      sub_241A960B8(a1);
      return;
    }
    sub_241AF1514(a1);
    sub_241AF1514(a1);
    swift_retain();
    sub_241AF1514(a1);
    swift_retain();
    sub_241AF1514(a1);
    swift_retain();
    sub_241B42650(0, 0, a1, v29);
    swift_release();
    sub_241A960B8(a1);
    swift_release();
    sub_241A960B8(a1);
    swift_release();
    id v48 = a1;
  }

  sub_241A960B8(v48);
}

void sub_241B42650(void *a1, char a2, void *a3, void (*a4)(void *, void, uint64_t))
{
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v20 = a1;
    a4(a1, 0, 1);
    sub_241A960B8(a1);
  }
  else
  {
    id v12 = a1;
    sub_241CDA0F0();
    sub_241AF1514(a1);
    id v13 = a3;
    uint64_t v14 = sub_241CDA190();
    os_log_type_t v15 = sub_241CDB630();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v25 = a3;
      uint64_t v17 = v16;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v27 = v23;
      *(_DWORD *)uint64_t v17 = 136446722;
      uint64_t v24 = a4;
      uint64_t v26 = sub_241A33FE4(0xD000000000000016, 0x8000000241CEEC30, &v27);
      sub_241CDBBF0();
      *(_WORD *)(v17 + 12) = 1024;
      LODWORD(v26) = v25 != 0;
      sub_241CDBBF0();

      *(_WORD *)(v17 + 18) = 1024;
      LODWORD(v26) = a1 != 0;
      a4 = v24;
      sub_241CDBBF0();
      sub_241A960B8(a1);
      _os_log_impl(&dword_241A23000, v14, v15, "[%{public}s] Generated chart sharable models successfully, primary: %{BOOL}d, sharing: %{BOOL}d", (uint8_t *)v17, 0x18u);
      uint64_t v18 = v23;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v18, -1, -1);
      uint64_t v19 = v17;
      a3 = v25;
      MEMORY[0x245637F20](v19, -1, -1);
    }
    else
    {

      sub_241A960B8(a1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_241AF1514(a1);
    id v21 = v13;
    a4(a3, a1, 0);
    sub_241A960B8(a1);

    sub_241A960B8(a1);
  }
}

void sub_241B42980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id, uint64_t), uint64_t a6)
{
  uint64_t v32 = a6;
  uint64_t v33 = a5;
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t v8 = type metadata accessor for ChartSharableModelStep();
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v29 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = sub_241CD6D00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B459F4(0, &qword_26B0369D0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (id *)((char *)v26 - v15);
  sub_241B44CE4(a1, (uint64_t)v26 - v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v17 = *v16;
    id v18 = *v16;
    v33(v17, 1);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, id *, uint64_t))(v11 + 32);
    uint64_t v28 = v10;
    v19(v13, v16, v10);
    sub_241A37260(a2 + *(int *)(v8 + 24), (uint64_t)v34);
    uint64_t v20 = v35;
    uint64_t v27 = v36;
    v26[1] = sub_241A311E0(v34, v35);
    id v21 = *(void **)(a2 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
    uint64_t v22 = v30 & 1;
    sub_241B4485C(a2, (uint64_t)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
    unint64_t v23 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v32;
    *(void *)(v24 + 16) = v33;
    *(void *)(v24 + 24) = v25;
    sub_241B44BB8((uint64_t)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
    swift_retain();
    ChartSharableModelProviding.encodeChartQueryData(for:timeScopes:timeScopeReferenceDate:audience:completion:)(v21, v31, (uint64_t)v13, v22, (uint64_t)sub_241B44D68, v24, v20, v27);
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v28);
    sub_241A31190((uint64_t)v34);
  }
}

void sub_241B42CB4(void *a1, char a2, void (*a3)(void, void), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for ChartSharableModelStep();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CDA1A0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v18 = a1;
    sub_241CDA0F0();
    sub_241B4485C(a5, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
    id v19 = a1;
    id v20 = a1;
    id v21 = sub_241CDA190();
    os_log_type_t v22 = sub_241CDB650();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      int v41 = v23;
      uint64_t v25 = v24;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v46 = v42;
      *(_DWORD *)uint64_t v25 = 136446722;
      uint64_t v26 = sub_241A33FE4(0xD000000000000016, 0x8000000241CEEC30, &v46);
      id v44 = a3;
      uint64_t v45 = v26;
      sub_241CDBBF0();
      *(_WORD *)(v25 + 12) = 2080;
      id v27 = objc_msgSend(*(id *)&v12[*(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)], sel_identifier);
      uint64_t v43 = a4;
      id v28 = v27;
      uint64_t v29 = sub_241CDB0D0();
      os_log_t v39 = v21;
      uint64_t v40 = v14;
      uint64_t v30 = v29;
      unint64_t v32 = v31;

      uint64_t v45 = sub_241A33FE4(v30, v32, &v46);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B45AD4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
      *(_WORD *)(v25 + 22) = 2082;
      uint64_t v45 = (uint64_t)a1;
      id v33 = a1;
      sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
      uint64_t v34 = sub_241CDB120();
      uint64_t v45 = sub_241A33FE4(v34, v35, &v46);
      a3 = v44;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A960B8(a1);
      sub_241A960B8(a1);
      os_log_t v36 = v39;
      _os_log_impl(&dword_241A23000, v39, (os_log_type_t)v41, "[%{public}s] Failed to make chart sharable model for %s: %{public}s", (uint8_t *)v25, 0x20u);
      uint64_t v37 = v42;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v37, -1, -1);
      MEMORY[0x245637F20](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v13);
    }
    else
    {
      sub_241B45AD4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
      sub_241A960B8(a1);
      sub_241A960B8(a1);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    id v38 = a1;
    a3(a1, 1);
    sub_241A960B8(a1);
    sub_241A960B8(a1);
  }
  else
  {
    id v17 = a1;
    a3(a1, 0);
    sub_241A960B8(a1);
  }
}

uint64_t sub_241B43124(int a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v63 = a2;
  uint64_t v66 = a3;
  LODWORD(v58) = a1;
  sub_241B459F4(0, &qword_26B0369D0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v55 - v4;
  uint64_t v6 = type metadata accessor for ChartSharableModelStep();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v56 + 64);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v62 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v57 = (uint64_t)&v55 - v9;
  uint64_t v10 = sub_241CD6D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v59 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v55 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  id v19 = (char *)&v55 - v18;
  MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v55 - v20;
  sub_241CD6CF0();
  os_log_type_t v22 = (void *)sub_241CD6C60();
  int v23 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  uint64_t v65 = v10;
  uint64_t v60 = v23;
  uint64_t v61 = v11 + 8;
  v23(v19, v10);
  id v24 = (id)HKEndOfDayForDate();

  sub_241CD6CB0();
  if (v58)
  {
    uint64_t v50 = v65;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v5, v21, v65);
    swift_storeEnumTagMultiPayload();
    v63((uint64_t)v5);
    sub_241B45A78((uint64_t)v5, &qword_26B0369D0, MEMORY[0x263F07490]);
    return v60(v21, v50);
  }
  else
  {
    uint64_t v25 = v57;
    sub_241B4485C(v64, v57, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v58 = v21;
    uint64_t v27 = v65;
    v26(v16, v21, v65);
    sub_241B4485C(v25, v62, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
    v26(v59, v16, v27);
    unint64_t v28 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    unint64_t v29 = (v7 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (*(unsigned __int8 *)(v11 + 80) + v29 + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v31 = swift_allocObject();
    sub_241B44BB8(v25, v31 + v28, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
    unint64_t v32 = (void *)(v31 + v29);
    uint64_t v33 = v66;
    *unint64_t v32 = v63;
    v32[1] = v33;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v31 + v30, v16, v27);
    uint64_t v34 = *(void **)(v64 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
    self;
    uint64_t v35 = swift_dynamicCastObjCClass();
    if (v35)
    {
      uint64_t v36 = v35;
      uint64_t v37 = self;
      swift_retain_n();
      uint64_t v63 = v34;
      id v38 = objc_msgSend(v37, sel_queryDescriptorWithSampleType_, v36);
      id v39 = objc_msgSend(self, sel_sortDescriptorsForMostRecentSamples);
      sub_241A313AC(0, (unint64_t *)&qword_26B038848);
      sub_241CDB2C0();

      sub_241A33460();
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_241CEB710;
      *(void *)(v40 + 32) = v38;
      aBlock[0] = v40;
      sub_241CDB2E0();
      uint64_t v41 = v31;
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = sub_241B454A8;
      *(void *)(v42 + 24) = v41;
      id v43 = objc_allocWithZone(MEMORY[0x263F0A6E0]);
      sub_241A313AC(0, &qword_26B036890);
      id v44 = v38;
      swift_retain();
      uint64_t v45 = (void *)sub_241CDB2A0();
      swift_bridgeObjectRelease();
      uint64_t v46 = (void *)sub_241CDB2A0();
      uint64_t v27 = v65;
      swift_bridgeObjectRelease();
      aBlock[4] = sub_241B455D8;
      uint64_t aBlock[5] = v42;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_241C856FC;
      aBlock[3] = &unk_26F5C3330;
      id v47 = _Block_copy(aBlock);
      id v48 = objc_msgSend(v43, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v45, 1, v46, v47);

      _Block_release(v47);
      swift_release();
      objc_msgSend(*(id *)(v64 + 16), sel_executeQuery_, v48);
      swift_release();

      sub_241B45AD4(v62, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
      swift_release();
      uint64_t v49 = (uint64_t)v59;
    }
    else
    {
      swift_retain_n();
      uint64_t v52 = v62;
      uint64_t v53 = (uint64_t)v59;
      sub_241B4384C(0, 0, v62, v63, v33, (uint64_t)v59);
      swift_release();
      sub_241B45AD4(v52, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
      swift_release();
      uint64_t v49 = v53;
    }
    uint64_t v54 = v60;
    v60((char *)v49, v27);
    return v54(v58, v27);
  }
}

uint64_t sub_241B4384C(void *a1, char a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v93 = a6;
  uint64_t v95 = a5;
  uint64_t v96 = a4;
  sub_241B459F4(0, &qword_26B0369D0, MEMORY[0x263F07490]);
  uint64_t v94 = v9;
  MEMORY[0x270FA5388](v9);
  id v97 = (os_log_t *)((char *)&v88 - v10);
  uint64_t v11 = sub_241CD6D00();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ChartSharableModelStep();
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  id v21 = (char *)&v88 - v20;
  MEMORY[0x270FA5388](v19);
  int v23 = (char *)&v88 - v22;
  uint64_t v24 = sub_241CDA1A0();
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v98 = MEMORY[0x270FA5388](v28);
  uint64_t v99 = v29;
  if (a2)
  {
    id v56 = a1;
    sub_241CDA0F0();
    sub_241B4485C(a3, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
    id v57 = a1;
    id v58 = a1;
    uint64_t v59 = sub_241CDA190();
    os_log_type_t v60 = sub_241CDB650();
    int v61 = v60;
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v62 = swift_slowAlloc();
      LODWORD(v92) = v61;
      uint64_t v63 = v62;
      uint64_t v93 = swift_slowAlloc();
      uint64_t v101 = v93;
      *(_DWORD *)uint64_t v63 = 136446722;
      uint64_t v100 = sub_241A33FE4(0xD000000000000016, 0x8000000241CEEC30, &v101);
      sub_241CDBBF0();
      *(_WORD *)(v63 + 12) = 2080;
      id v64 = objc_msgSend(*(id *)&v18[*(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)], sel_sensitiveLoggingIdentifier);
      uint64_t v65 = sub_241CDB0D0();
      unint64_t v67 = v66;

      uint64_t v100 = sub_241A33FE4(v65, v67, &v101);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B45AD4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
      *(_WORD *)(v63 + 22) = 2082;
      uint64_t v100 = (uint64_t)a1;
      id v68 = a1;
      sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
      uint64_t v69 = sub_241CDB120();
      uint64_t v100 = sub_241A33FE4(v69, v70, &v101);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A960B8(a1);
      sub_241A960B8(a1);
      _os_log_impl(&dword_241A23000, v59, (os_log_type_t)v92, "[%{public}s] Error fetching most recent sample for chart end date for %s: %{public}s", (uint8_t *)v63, 0x20u);
      uint64_t v71 = v93;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v71, -1, -1);
      MEMORY[0x245637F20](v63, -1, -1);
    }
    else
    {
      sub_241B45AD4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
      sub_241A960B8(a1);
      sub_241A960B8(a1);
    }

    (*(void (**)(char *, uint64_t))(v99 + 8))(v27, v98);
    uint64_t v72 = (uint64_t)v97;
    *id v97 = a1;
    swift_storeEnumTagMultiPayload();
    id v73 = a1;
    v96(v72);
    uint64_t v74 = a1;
    goto LABEL_13;
  }
  uint64_t v90 = (uint64_t)v14;
  uint64_t v91 = v12;
  uint64_t v92 = v11;
  if (a1)
  {
    unint64_t v32 = (char *)&v88 - v31;
    id v33 = a1;
    sub_241CDA0F0();
    sub_241B4485C(a3, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
    sub_241AF1514(a1);
    id v34 = v33;
    uint64_t v35 = sub_241CDA190();
    os_log_type_t v36 = sub_241CDB630();
    int v37 = v36;
    id v38 = &off_2650F5000;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      uint64_t v101 = v93;
      *(_DWORD *)uint64_t v39 = 136446722;
      uint64_t v100 = sub_241A33FE4(0xD000000000000016, 0x8000000241CEEC30, &v101);
      sub_241CDBBF0();
      *(_WORD *)(v39 + 12) = 2080;
      id v40 = objc_msgSend(*(id *)&v23[*(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)], sel_sensitiveLoggingIdentifier);
      int v89 = v37;
      id v41 = v40;
      uint64_t v42 = sub_241CDB0D0();
      os_log_t v88 = v35;
      unint64_t v44 = v43;

      uint64_t v100 = sub_241A33FE4(v42, v44, &v101);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B45AD4((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
      *(_WORD *)(v39 + 22) = 2080;
      id v45 = objc_msgSend(v34, sel_endDate);
      uint64_t v46 = v90;
      sub_241CD6CB0();

      sub_241B455F8(&qword_26B02E8E0, MEMORY[0x263F07490]);
      id v47 = v34;
      uint64_t v48 = v92;
      uint64_t v49 = sub_241CDC0D0();
      unint64_t v51 = v50;
      uint64_t v52 = v48;
      id v34 = v47;
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v46, v52);
      uint64_t v53 = v49;
      id v38 = &off_2650F5000;
      uint64_t v100 = sub_241A33FE4(v53, v51, &v101);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A960B8(a1);
      sub_241A960B8(a1);
      os_log_t v54 = v88;
      _os_log_impl(&dword_241A23000, v88, (os_log_type_t)v89, "[%{public}s] Determined chart end date for %s from most recent data end date: %s", (uint8_t *)v39, 0x20u);
      uint64_t v55 = v93;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v55, -1, -1);
      MEMORY[0x245637F20](v39, -1, -1);
    }
    else
    {
      sub_241B45AD4((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
      sub_241A960B8(a1);
      sub_241A960B8(a1);
    }
    (*(void (**)(char *, uint64_t))(v99 + 8))(v32, v98);
    uint64_t v72 = (uint64_t)v97;
    id v86 = [v34 (SEL)v38[81]];
    sub_241CD6CB0();

    swift_storeEnumTagMultiPayload();
    v96(v72);
    uint64_t v74 = a1;
LABEL_13:
    sub_241A960B8(v74);
    return sub_241B45A78(v72, &qword_26B0369D0, MEMORY[0x263F07490]);
  }
  uint64_t v75 = v30;
  sub_241CDA0F0();
  uint64_t v76 = a3;
  uint64_t v77 = v75;
  sub_241B4485C(v76, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
  uint64_t v78 = sub_241CDA190();
  os_log_type_t v79 = sub_241CDB630();
  if (os_log_type_enabled(v78, v79))
  {
    uint64_t v80 = swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    uint64_t v101 = v90;
    *(_DWORD *)uint64_t v80 = 136446466;
    uint64_t v100 = sub_241A33FE4(0xD000000000000016, 0x8000000241CEEC30, &v101);
    sub_241CDBBF0();
    *(_WORD *)(v80 + 12) = 2080;
    id v81 = objc_msgSend(*(id *)&v21[*(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)], sel_sensitiveLoggingIdentifier);
    uint64_t v82 = sub_241CDB0D0();
    unint64_t v84 = v83;

    uint64_t v100 = sub_241A33FE4(v82, v84, &v101);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B45AD4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
    _os_log_impl(&dword_241A23000, v78, v79, "[%{public}s] No data for chart end date for %s, using end of today", (uint8_t *)v80, 0x16u);
    uint64_t v85 = v90;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v85, -1, -1);
    MEMORY[0x245637F20](v80, -1, -1);
  }
  else
  {
    sub_241B45AD4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ChartSharableModelStep);
  }

  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v77, v98);
  uint64_t v72 = (uint64_t)v97;
  (*(void (**)(void *, uint64_t, uint64_t))(v91 + 16))(v97, v93, v92);
  swift_storeEnumTagMultiPayload();
  v96(v72);
  return sub_241B45A78(v72, &qword_26B0369D0, MEMORY[0x263F07490]);
}

void sub_241B44388(int a1, unint64_t a2, id a3, void (*a4)(void))
{
  if (a3)
  {
    id v6 = a3;
    ((void (*)(id, uint64_t))a4)(a3, 1);
    id v7 = a3;
LABEL_4:

    return;
  }
  if (!a2) {
    goto LABEL_14;
  }
  if (!(a2 >> 62))
  {
    uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  if (!sub_241CDBF50())
  {
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    id v11 = 0;
LABEL_15:
    id v13 = v11;
    a4();
    id v7 = v13;
    goto LABEL_4;
  }
LABEL_8:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v10 = (id)MEMORY[0x245637160](0, a2);
    goto LABEL_11;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(a2 + 32);
LABEL_11:
    id v12 = v10;
    swift_bridgeObjectRelease();
    id v11 = v12;
    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_241B444C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  sub_241B4485C(a1, (uint64_t)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  sub_241B44BB8((uint64_t)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  id v11 = (void *)(v10 + ((v8 + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  *id v11 = a2;
  v11[1] = a3;
  swift_retain();
  sub_241B41750(a1, (void (*)(void *, void, uint64_t))sub_241B447A4, v10);
  return swift_release();
}

uint64_t sub_241B44620()
{
  uint64_t v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void **)(v0 + v3);
  if (v6 != (void *)1)
  {
  }
  uint64_t v7 = *(void **)(v5 + 16);
  if (v7 != (void *)1)
  {
  }
  uint64_t v8 = v5 + *(int *)(v1 + 28);
  uint64_t v9 = sub_241CD6EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_241B447A4(void *a1, void *a2, char a3)
{
  char v6 = a3 & 1;
  uint64_t v7 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void (**)(void *))(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241B41530(a1, a2, v6, v3 + v8, v9);
}

uint64_t sub_241B4485C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241B448C4()
{
  uint64_t v1 = type metadata accessor for ChartSharableModelStep();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v20 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v21 = v0;
  uint64_t v4 = v0 + v3;
  swift_unknownObjectRelease();

  uint64_t v5 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v6 = v0 + v3 + v5[6];
  uint64_t v7 = (int *)_s8WorkPlanVMa();
  uint64_t v8 = v6 + v7[5];
  uint64_t v9 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v6 + v7[6];
  uint64_t v11 = sub_241CD78F0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v13 = v6 + v7[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v6 + v7[8];
  sub_241AC75E4();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }

  sub_241A31190(v4 + v5[8]);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241A31190(v4 + *(int *)(v1 + 24));
  swift_release();

  return MEMORY[0x270FA0238](v21, ((v20 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_241B44BB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_241B44C20(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for ChartSharableModelStep() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(void *, void, uint64_t))v8;
  uint64_t v10 = *(void *)(v8 + 8);

  sub_241B41F7C(a1, v4, v7, v9, v10);
}

void sub_241B44CD4(void *a1, char a2)
{
  sub_241B42650(a1, a2 & 1, *(void **)(v2 + 16), *(void (**)(void *, void, uint64_t))(v2 + 24));
}

uint64_t sub_241B44CE4(uint64_t a1, uint64_t a2)
{
  sub_241B459F4(0, &qword_26B0369D0, MEMORY[0x263F07490]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241B44D6C()
{
  uint64_t v20 = type metadata accessor for ChartSharableModelStep();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v20 - 8) + 80);
  uint64_t v2 = (v1 + 16) & ~v1;
  uint64_t v19 = *(void *)(*(void *)(v20 - 8) + 64);
  uint64_t v3 = v0 + v2;
  swift_unknownObjectRelease();

  uint64_t v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = v0 + v2 + v4[6];
  unint64_t v6 = (int *)_s8WorkPlanVMa();
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v5 + v6[6];
  uint64_t v10 = sub_241CD78F0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v5 + v6[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v5 + v6[8];
  sub_241AC75E4();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }

  sub_241A31190(v3 + v4[8]);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241A31190(v3 + *(int *)(v20 + 24));
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, ((v2 + v19 + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v1 | 7);
}

void sub_241B45070(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ChartSharableModelStep() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  unint64_t v6 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = *(unsigned __int8 *)(v1 + v6 + 8);
  uint64_t v10 = v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void (**)(id, uint64_t))v10;
  uint64_t v12 = *(void *)(v10 + 8);

  sub_241B42980(a1, v7, v8, v9, v11, v12);
}

uint64_t sub_241B45124()
{
  uint64_t v24 = type metadata accessor for ChartSharableModelStep();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v24 - 8) + 80);
  uint64_t v23 = *(void *)(*(void *)(v24 - 8) + 64);
  uint64_t v25 = sub_241CD6D00();
  uint64_t v2 = *(void *)(v25 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v22 = *(void *)(v2 + 64);
  uint64_t v26 = v0;
  uint64_t v4 = v0 + ((v1 + 16) & ~v1);
  swift_unknownObjectRelease();

  unint64_t v5 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v6 = v4 + v5[6];
  uint64_t v7 = (int *)_s8WorkPlanVMa();
  uint64_t v8 = v6 + v7[5];
  uint64_t v9 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v6 + v7[6];
  uint64_t v11 = sub_241CD78F0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v13 = v6 + v7[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v6 + v7[8];
  sub_241AC75E4();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  uint64_t v19 = v1 | v3 | 7;
  unint64_t v20 = (((v23 + ((v1 + 16) & ~v1) + 7) & 0xFFFFFFFFFFFFFFF8) + v3 + 16) & ~v3;

  sub_241A31190(v4 + v5[8]);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241A31190(v4 + *(int *)(v24 + 24));
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v26 + v20, v25);

  return MEMORY[0x270FA0238](v26, v20 + v22, v19);
}

uint64_t sub_241B454A8(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for ChartSharableModelStep() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_241CD6D00() - 8);
  uint64_t v9 = *(void (**)(uint64_t))(v2 + v7);
  uint64_t v10 = *(void *)(v2 + v7 + 8);
  uint64_t v11 = v2 + ((v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_241B4384C(a1, v4, v2 + v6, v9, v10, v11);
}

uint64_t sub_241B455A0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241B455D8(int a1, unint64_t a2, void *a3)
{
  sub_241B44388(a1, a2, a3, *(void (**)(void))(v3 + 16));
}

uint64_t sub_241B455E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241B455F0()
{
  return swift_release();
}

uint64_t sub_241B455F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B45644()
{
  uint64_t v1 = type metadata accessor for ChartSharableModelStep();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v20 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v21 = v0;
  uint64_t v4 = v0 + v3;
  swift_unknownObjectRelease();

  uint64_t v5 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v6 = v0 + v3 + v5[6];
  unint64_t v7 = (int *)_s8WorkPlanVMa();
  uint64_t v8 = v6 + v7[5];
  uint64_t v9 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v6 + v7[6];
  uint64_t v11 = sub_241CD78F0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v13 = v6 + v7[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v6 + v7[8];
  sub_241AC75E4();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }

  sub_241A31190(v4 + v5[8]);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241A31190(v4 + *(int *)(v1 + 24));

  return MEMORY[0x270FA0238](v21, v3 + v20, v2 | 7);
}

uint64_t sub_241B4592C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241B45970(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for ChartSharableModelStep() - 8);
  uint64_t v6 = *(void (**)(void, void))(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_241B42CB4(a1, v4, v6, v7, v8);
}

void sub_241B459F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_241A35FBC(255, (unint64_t *)&qword_26B038870);
    unint64_t v4 = sub_241CDC210();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241B45A78(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241B459F4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241B45AD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241B45B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B45B4C);
}

uint64_t sub_241B45B4C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241B45BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B45C10);
}

void *sub_241B45C10(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CategoryValueSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031D90;
  if (!qword_26B031D90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B45D04()
{
  return sub_241B4601C(&qword_26B0320B8, MEMORY[0x263F44058]);
}

uint64_t sub_241B45D4C()
{
  return sub_241B45E50((unint64_t *)&qword_26B0320F0);
}

void sub_241B45D80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241B4601C(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B45E1C()
{
  return sub_241B45E50((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241B45E50(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B45D80(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241B4601C((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241B4601C(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B45F34()
{
  return sub_241B4601C(&qword_26B0385C8, MEMORY[0x263F44308]);
}

uint64_t sub_241B45F7C()
{
  return sub_241B4601C(&qword_26B032140, MEMORY[0x263F44308]);
}

uint64_t sub_241B45FC4(uint64_t a1)
{
  uint64_t result = sub_241B4601C(&qword_26B037EA0, (void (*)(uint64_t))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241B4601C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B46064()
{
  return sub_241B46104(&qword_26B0383F8, &qword_26B038400, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241B460B4()
{
  return sub_241B46104(&qword_26B032E48, &qword_26B032E50, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241B46104(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B46148(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B46148(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241B45D80(255, &qword_26B032118, MEMORY[0x263F44150]);
    uint64_t v15 = v6;
    uint64_t v7 = sub_241CD86F0();
    unint64_t v8 = sub_241A3F5B0();
    uint64_t v9 = sub_241B4601C(&qword_26B0320B8, MEMORY[0x263F44058]);
    uint64_t v10 = sub_241B45E50((unint64_t *)&qword_26B0320F0);
    uint64_t v11 = sub_241B45E50((unint64_t *)&qword_26B0320E0);
    uint64_t v12 = (void (*)(uint64_t))MEMORY[0x263F44308];
    v16[0] = v15;
    v16[1] = v7;
    v16[2] = v8;
    v16[3] = v9;
    v16[4] = v10;
    v16[5] = v11;
    v16[6] = sub_241B4601C(&qword_26B0385C8, MEMORY[0x263F44308]);
    v16[7] = sub_241B4601C(&qword_26B032140, v12);
    unint64_t v13 = a3(a1, v16);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

void sub_241B462F0(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v318 = a3;
  id v287 = a2;
  id v327 = a1;
  uint64_t v319 = a4;
  uint64_t v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v261 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B48C54(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v8 - 8);
  v317 = (char *)v261 - v9;
  sub_241B48C54(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v274 = (char *)v261 - v11;
  uint64_t v12 = (void (*)(uint64_t))sub_241CD6810();
  uint64_t v324 = (void (*)(uint64_t))*((void *)v12 - 1);
  uint64_t v325 = v12;
  MEMORY[0x270FA5388](v12);
  int v271 = (char *)v261 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v286 = sub_241CD6EE0();
  uint64_t v285 = *(void *)(v286 - 8);
  MEMORY[0x270FA5388](v286);
  uint64_t v284 = (char *)v261 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B48C54(0, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
  MEMORY[0x270FA5388](v15 - 8);
  unint64_t v281 = (char *)v261 - v16;
  sub_241B48C54(0, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v280 = (char *)v261 - v18;
  uint64_t v283 = sub_241CD6D00();
  uint64_t v282 = *(void *)(v283 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v283);
  v270 = (char *)v261 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v275 = (char *)v261 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v293 = (char *)v261 - v23;
  uint64_t v311 = sub_241CD69B0();
  uint64_t v312 = *(void *)(v311 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v311);
  uint64_t v273 = (char *)v261 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  unint64_t v295 = (char *)v261 - v26;
  uint64_t v27 = type metadata accessor for CategoryValueSnidgetFeedItemModelProvider();
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v300 = (char *)v261 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  unint64_t v32 = (void *)((char *)v261 - v31);
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v279 = (uint64_t)v261 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v278 = (void *)((char *)v261 - v36);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v296 = (uint64_t)v261 - v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v301 = (void *)((char *)v261 - v39);
  uint64_t v306 = sub_241CDA1A0();
  uint64_t v307 = *(void *)(v306 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v306);
  uint64_t v42 = (char *)v261 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v40);
  uint64_t v288 = (char *)v261 - v44;
  MEMORY[0x270FA5388](v43);
  v297 = (char *)v261 - v45;
  uint64_t v292 = sub_241CD9DF0();
  uint64_t v291 = *(void *)(v292 - 8);
  MEMORY[0x270FA5388](v292);
  uint64_t v277 = (char *)v261 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v304 = sub_241CD9ED0();
  uint64_t v303 = *(void *)(v304 - 8);
  MEMORY[0x270FA5388](v304);
  id v302 = (char *)v261 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B48C54(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v49 = MEMORY[0x270FA5388](v48 - 8);
  uint64_t v320 = (uint64_t)v261 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v276 = (uint64_t)v261 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v55 = (char *)v261 - v54;
  MEMORY[0x270FA5388](v53);
  uint64_t v309 = (uint64_t)v261 - v56;
  sub_241B48C54(0, &qword_26B032258, MEMORY[0x263F471B8]);
  uint64_t v58 = MEMORY[0x270FA5388](v57 - 8);
  uint64_t v289 = (uint64_t)v261 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v58);
  uint64_t v310 = (uint64_t)v261 - v60;
  sub_241B48C54(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  MEMORY[0x270FA5388](v61 - 8);
  uint64_t v63 = (char *)v261 - v62;
  uint64_t v64 = sub_241CD9970();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v314 = v64;
  uint64_t v315 = v65;
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  v305 = (char *)v261 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v66);
  unint64_t v313 = (char *)v261 - v68;
  sub_241B48C54(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  uint64_t v70 = MEMORY[0x270FA5388](v69 - 8);
  uint64_t v322 = (uint64_t)v261 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v70);
  uint64_t v321 = (uint64_t)v261 - v72;
  sub_241B48C54(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v74 = MEMORY[0x270FA5388](v73 - 8);
  uint64_t v272 = (char *)v261 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  uint64_t v290 = (char *)v261 - v77;
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  uint64_t v294 = (char *)v261 - v79;
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  uint64_t v316 = (uint64_t)v261 - v81;
  MEMORY[0x270FA5388](v80);
  uint64_t v323 = (uint64_t)v261 - v82;
  id v83 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v4);
  if (!v83)
  {
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  unint64_t v84 = v83;
  uint64_t v299 = v27;
  uint64_t v85 = *(int *)(v27 + 24);
  uint64_t v308 = v4;
  uint64_t v298 = (uint64_t)v4 + v85;
  id v86 = objc_msgSend(v83, sel_displayTypeForObjectType_, *(id *)((char *)v4 + v85 + 16));

  if (!v86)
  {
    sub_241A3A824();
    swift_allocError();
    swift_willThrow();
    return;
  }
  uint64_t v87 = v86;
  uint64_t v88 = v326;
  id v89 = v327;
  sub_241ADF858(v327);
  uint64_t v326 = v88;
  if (v88)
  {

    return;
  }
  uint64_t v91 = v90;
  if (!v90)
  {
LABEL_12:
    uint64_t v115 = sub_241CD7A10();
    uint64_t v116 = (uint64_t)v317;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v317, 1, 1, v115);
    uint64_t v117 = v320;
    (*((void (**)(uint64_t, uint64_t, uint64_t, void (*)(uint64_t)))v324 + 7))(v320, 1, 1, v325);
    uint64_t v118 = v318;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v116, v118, v117, v7);
    sub_241CD89A0();
    uint64_t v119 = sub_241CD8610();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v322, 1, 1, v119);
    id v120 = v87;
    uint64_t v121 = sub_241CD8990();
    sub_241A3A878();
    uint64_t v123 = v319;
    sub_241B48D04((uint64_t)v7, (uint64_t)v319 + *(int *)(v122 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v123[1] = 0;
    uint64_t v123[2] = 0;
    *uint64_t v123 = v121;
    sub_241B48D6C((uint64_t)v7, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  if (!objc_msgSend(v90, sel_hasCategoryValue))
  {

    goto LABEL_12;
  }
  uint64_t v268 = v87;
  id v269 = v91;
  uint64_t v92 = v89;
  uint64_t v94 = v312 + 56;
  uint64_t v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v312 + 56);
  uint64_t v95 = v311;
  v93(v323, 1, 1, v311);
  uint64_t v263 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v93;
  v93(v316, 1, 1, v95);
  uint64_t v96 = sub_241CD8610();
  uint64_t v264 = *(void *)(v96 - 8);
  id v97 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v264 + 56);
  uint64_t v267 = v96;
  uint64_t v266 = v264 + 56;
  v265 = v97;
  ((void (*)(uint64_t, uint64_t, uint64_t))v97)(v321, 1, 1);
  HKCodableSummaryCurrentValue.queryConfiguration.getter((uint64_t)v63);
  uint64_t v98 = v314;
  uint64_t v99 = v315;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v315 + 48))(v63, 1, v314) == 1)
  {
    sub_241B48CA8((uint64_t)v63, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    sub_241CDA0F0();
    uint64_t v100 = (uint64_t)v308;
    sub_241B48D04((uint64_t)v308, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    uint64_t v101 = v300;
    sub_241B48D04(v100, (uint64_t)v300, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    uint64_t v102 = sub_241CDA190();
    os_log_type_t v103 = sub_241CDB650();
    int v104 = v103;
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v105 = swift_slowAlloc();
      LODWORD(v326) = v104;
      uint64_t v106 = v105;
      id v327 = (id)swift_slowAlloc();
      v328[0] = (uint64_t)v327;
      *(_DWORD *)uint64_t v106 = 136315394;
      uint64_t v107 = v299;
      uint64_t v108 = sub_241AE0378(*v32, *((unsigned __int8 *)v32 + *(int *)(v299 + 24) + 8));
      uint64_t v329 = sub_241A33FE4(v108, v109, v328);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B48D6C((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      *(_WORD *)(v106 + 12) = 2080;
      uint64_t v325 = (void (*)(uint64_t))(v106 + 14);
      id v110 = objc_msgSend(*(id *)&v101[*(int *)(v107 + 24) + 16], sel_sensitiveLoggingIdentifier);
      uint64_t v111 = sub_241CDB0D0();
      unint64_t v113 = v112;

      uint64_t v329 = sub_241A33FE4(v111, v113, v328);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B48D6C((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_241A23000, v102, (os_log_type_t)v326, "[%s]: unreadable query configuration category type: %s", (uint8_t *)v106, 0x16u);
      id v114 = v327;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v114, -1, -1);
      MEMORY[0x245637F20](v106, -1, -1);
    }
    else
    {
      sub_241B48D6C((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      sub_241B48D6C((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    }

    (*(void (**)(char *, uint64_t))(v307 + 8))(v42, v306);
    sub_241A41340();
    swift_allocError();
    *uint64_t v133 = 0;
    swift_willThrow();

    goto LABEL_50;
  }
  v261[1] = v94;
  (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v313, v63, v98);
  sub_241CDB4B0();
  uint64_t v124 = v325;
  uint64_t v125 = (char *)v324 + 56;
  char v126 = 1;
  uint64_t v300 = (char *)*((void *)v324 + 7);
  ((void (*)(uint64_t, uint64_t, uint64_t, void (*)(uint64_t)))v300)(v309, 1, 1, v325);
  if (!objc_msgSend(v92, sel_hasSupplementaryValue))
  {
    id v262 = 0;
    uint64_t v130 = v301;
    goto LABEL_27;
  }
  id v127 = objc_msgSend(v92, sel_supplementaryValue);
  if (!v127) {
    goto LABEL_56;
  }
  unsigned int v128 = v127;
  unsigned int v129 = objc_msgSend(v127, sel_hasDataCount);

  uint64_t v130 = v301;
  if (v129)
  {
    id v131 = objc_msgSend(v327, sel_supplementaryValue);
    uint64_t v98 = v314;
    if (!v131)
    {
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    uint64_t v132 = v131;
    id v262 = objc_msgSend(v131, sel_dataCount);
  }
  else
  {
    id v262 = 0;
    uint64_t v98 = v314;
  }
  id v134 = objc_msgSend(v327, sel_supplementaryValue);
  if (!v134)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v135 = v134;
  char v126 = v129 ^ 1;
  unsigned int v136 = objc_msgSend(v134, sel_hasDateInterval);

  if (!v136) {
    goto LABEL_27;
  }
  id v137 = objc_msgSend(v327, sel_supplementaryValue);
  if (!v137) {
    goto LABEL_59;
  }
  uint64_t v138 = v137;
  id v139 = objc_msgSend(v137, sel_dateInterval);

  if (!v139)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  sub_241CDB920();

  uint64_t v140 = (void (*)(uint64_t))MEMORY[0x263F062D0];
  uint64_t v141 = v309;
  sub_241B48CA8(v309, &qword_26B038F10, MEMORY[0x263F062D0]);
  ((void (*)(char *, void, uint64_t, void (*)(uint64_t)))v300)(v55, 0, 1, v124);
  sub_241B48E38((uint64_t)v55, v141, &qword_26B038F10, v140);
LABEL_27:
  uint64_t v142 = v315;
  uint64_t v143 = v305;
  (*(void (**)(char *, char *, uint64_t))(v315 + 16))(v305, v313, v98);
  int v144 = (*(uint64_t (**)(char *, uint64_t))(v142 + 88))(v143, v98);
  int v145 = v308;
  if (v144 != *MEMORY[0x263F46C78])
  {
    uint64_t v153 = v297;
    sub_241CDA0F0();
    sub_241B48D04((uint64_t)v145, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    uint64_t v154 = v296;
    sub_241B48D04((uint64_t)v145, v296, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    uint64_t v155 = sub_241CDA190();
    os_log_type_t v156 = sub_241CDB650();
    if (os_log_type_enabled(v155, v156))
    {
      uint64_t v157 = swift_slowAlloc();
      id v327 = (id)swift_slowAlloc();
      v328[0] = (uint64_t)v327;
      *(_DWORD *)uint64_t v157 = 136315394;
      uint64_t v158 = v299;
      uint64_t v159 = sub_241AE0378(*v130, *((unsigned __int8 *)v130 + *(int *)(v299 + 24) + 8));
      uint64_t v329 = sub_241A33FE4(v159, v160, v328);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B48D6C((uint64_t)v130, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      *(_WORD *)(v157 + 12) = 2080;
      uint64_t v326 = v157 + 14;
      uint64_t v161 = v296;
      id v162 = objc_msgSend(*(id *)(v296 + *(int *)(v158 + 24) + 16), sel_sensitiveLoggingIdentifier);
      uint64_t v163 = sub_241CDB0D0();
      unint64_t v165 = v164;

      uint64_t v143 = v305;
      uint64_t v329 = sub_241A33FE4(v163, v165, v328);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B48D6C(v161, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_241A23000, v155, v156, "[%s]: unsupported query configuration for category type: %s", (uint8_t *)v157, 0x16u);
      id v166 = v327;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v166, -1, -1);
      MEMORY[0x245637F20](v157, -1, -1);

      (*(void (**)(char *, uint64_t))(v307 + 8))(v297, v306);
    }
    else
    {
      sub_241B48D6C((uint64_t)v130, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      sub_241B48D6C(v154, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);

      (*(void (**)(char *, uint64_t))(v307 + 8))(v153, v306);
    }
    sub_241A41340();
    swift_allocError();
    unsigned char *v182 = 0;
    swift_willThrow();

    sub_241B48CA8(v309, &qword_26B038F10, MEMORY[0x263F062D0]);
    sub_241B48CA8(v310, &qword_26B032258, MEMORY[0x263F471B8]);
    uint64_t v183 = v314;
    uint64_t v184 = *(void (**)(char *, uint64_t))(v315 + 8);
    v184(v313, v314);
    sub_241B48CA8(v321, &qword_26B0320B0, MEMORY[0x263F43F20]);
    uint64_t v185 = (void (*)(uint64_t))MEMORY[0x263F06828];
    sub_241B48CA8(v316, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    sub_241B48CA8(v323, (unint64_t *)&qword_26B031FB8, v185);
    v184(v143, v183);
    return;
  }
  (*(void (**)(char *, uint64_t))(v142 + 96))(v143, v98);
  (*(void (**)(char *, char *, uint64_t))(v303 + 32))(v302, v143, v304);
  uint64_t v146 = (void *)sub_241B5920C(MEMORY[0x263F8EE78]);
  uint64_t v147 = v327;
  unsigned int v148 = objc_msgSend(v327, sel_hasMetadataDictionary);
  v261[0] = v125;
  if (v148)
  {
    swift_bridgeObjectRelease();
    id v149 = objc_msgSend(v147, sel_metadataDictionary);
    uint64_t v150 = v298;
    if (v149)
    {
      uint64_t v151 = v149;
      id v152 = objc_msgSend(self, sel_dictionaryWithCodableMetadata_, v149);

      v328[0] = 0;
      sub_241CDAF80();

      uint64_t v146 = (void *)v328[0];
      if (!v328[0]) {
        uint64_t v146 = (void *)sub_241B5920C(MEMORY[0x263F8EE78]);
      }
      goto LABEL_35;
    }
LABEL_61:
    __break(1u);
    return;
  }
  uint64_t v150 = v298;
LABEL_35:
  uint64_t v167 = *v145;
  uint64_t v168 = *(void **)(v150 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
  type metadata accessor for MostRecentSampleSnidgetStringBuilder();
  uint64_t inited = (void *)swift_initStackObject();
  inited[2] = v167;
  uint64_t v170 = self;
  id v171 = v168;
  id v172 = v167;
  id v173 = objc_msgSend(v170, sel_sharedInstanceForHealthStore_, v172);
  inited[4] = v173;
  if (!v168)
  {
    id v174 = v173;
    id v171 = objc_msgSend(v174, sel_createHKUnitPreferenceController);
  }
  inited[3] = v171;
  id v175 = objc_msgSend(v269, sel_categoryValue);
  uint64_t v176 = v294;
  MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleCategoryValuePrimaryAttributedString(displayType:categoryValue:metadata:)(v268, v146, v294, (double)(uint64_t)v175);
  swift_bridgeObjectRelease();
  int v177 = (void (*)(uint64_t))MEMORY[0x263F06828];
  uint64_t v178 = v323;
  sub_241B48CA8(v323, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  sub_241B48E38((uint64_t)v176, v178, (unint64_t *)&qword_26B031FB8, v177);
  uint64_t v179 = v289;
  sub_241B48DCC(v310, v289, &qword_26B032258, MEMORY[0x263F471B8]);
  uint64_t v180 = v291;
  uint64_t v181 = v292;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v291 + 48))(v179, 1, v292) == 1)
  {
    sub_241B48CA8(v179, &qword_26B032258, MEMORY[0x263F471B8]);
  }
  else
  {
    uint64_t v186 = (uint64_t)v277;
    (*(void (**)(char *, uint64_t, uint64_t))(v180 + 32))(v277, v179, v181);
    MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleSupplementaryString(supplementaryLabelConfiguration:supplementaryLabelInfo:)(v186, (uint64_t)v262, v126, v309, (uint64_t)v176);
    (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v186, v181);
    id v187 = (void (*)(uint64_t))MEMORY[0x263F06828];
    uint64_t v188 = v316;
    sub_241B48CA8(v316, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    sub_241B48E38((uint64_t)v176, v188, (unint64_t *)&qword_26B031FB8, v187);
  }
  uint64_t v189 = v293;
  uint64_t v190 = (uint64_t)v290;
  sub_241A3A9CC();
  uint64_t v192 = *(int *)(v191 + 48);
  id v193 = v269;
  objc_msgSend(v269, sel_dateData);
  id v194 = (id)HKDecodeDateForValue();
  uint64_t v195 = v322;
  sub_241CD6CB0();

  id v196 = v302;
  LOBYTE(v194) = sub_241CD9EB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v303 + 8))(v196, v304);
  uint64_t v197 = (void (*)(uint64_t))MEMORY[0x263F43F20];
  uint64_t v198 = v321;
  sub_241B48CA8(v321, &qword_26B0320B0, MEMORY[0x263F43F20]);
  *(unsigned char *)(v195 + v192) = v194 & 1;
  uint64_t v199 = v267;
  (*(void (**)(uint64_t, void, uint64_t))(v264 + 104))(v195, *MEMORY[0x263F43F18], v267);
  v265(v195, 0, 1, v199);
  sub_241B48E38(v195, v198, &qword_26B0320B0, v197);
  sub_241B48DCC(v323, v190, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v200 = v312;
  uint64_t v201 = v311;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v312 + 48))(v190, 1, v311) == 1)
  {
    sub_241B48CA8(v190, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    uint64_t v202 = v288;
    sub_241CDA0F0();
    uint64_t v203 = (uint64_t)v308;
    unint64_t v204 = v278;
    sub_241B48D04((uint64_t)v308, (uint64_t)v278, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    uint64_t v205 = v279;
    sub_241B48D04(v203, v279, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    uint64_t v206 = sub_241CDA190();
    os_log_type_t v207 = sub_241CDB650();
    if (os_log_type_enabled(v206, v207))
    {
      uint64_t v208 = swift_slowAlloc();
      id v327 = (id)swift_slowAlloc();
      v328[0] = (uint64_t)v327;
      *(_DWORD *)uint64_t v208 = 136315394;
      uint64_t v209 = v299;
      uint64_t v210 = sub_241AE0378(*v204, *((unsigned __int8 *)v204 + *(int *)(v299 + 24) + 8));
      uint64_t v329 = sub_241A33FE4(v210, v211, v328);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B48D6C((uint64_t)v204, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      *(_WORD *)(v208 + 12) = 2080;
      uint64_t v326 = v208 + 14;
      uint64_t v212 = v205;
      id v213 = objc_msgSend(*(id *)(v205 + *(int *)(v209 + 24) + 16), sel_sensitiveLoggingIdentifier);
      uint64_t v214 = sub_241CDB0D0();
      unint64_t v216 = v215;

      uint64_t v329 = sub_241A33FE4(v214, v216, v328);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B48D6C(v212, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_241A23000, v206, v207, "[%s]: unable to create primary string for: %s", (uint8_t *)v208, 0x16u);
      id v217 = v327;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v217, -1, -1);
      MEMORY[0x245637F20](v208, -1, -1);

      (*(void (**)(char *, uint64_t))(v307 + 8))(v288, v306);
    }
    else
    {
      sub_241B48D6C((uint64_t)v204, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      sub_241B48D6C(v205, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);

      (*(void (**)(char *, uint64_t))(v307 + 8))(v202, v306);
    }
    sub_241A41340();
    swift_allocError();
    *unint64_t v233 = 0;
    swift_willThrow();

    goto LABEL_49;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v200 + 32))(v295, v190, v201);
  uint64_t v218 = v193;
  id v219 = v308[1];
  id v327 = *v308;
  objc_msgSend(v193, sel_dateData);
  id v220 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  sub_241A3A71C();
  uint64_t v222 = v221;
  uint64_t v223 = v201;
  uint64_t v224 = (uint64_t)v280;
  int v225 = &v280[*(int *)(v221 + 48)];
  objc_msgSend(v218, sel_dateData);
  id v226 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v227 = v282;
  uint64_t v228 = v283;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v282 + 56))(v224, 0, 1, v283);
  *(double *)int v225 = (double)(uint64_t)objc_msgSend(v218, sel_categoryValue);
  v225[8] = 0;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v222 - 8) + 56))(v224, 0, 1, v222);
  uint64_t v229 = sub_241CD8A60();
  uint64_t v230 = (uint64_t)v281;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v229 - 8) + 56))(v281, 1, 1, v229);
  uint64_t v231 = (uint64_t)v284;
  sub_241CD6EA0();
  uint64_t v232 = v326;
  id v327 = sub_241BACC30((char *)v327, v219, v298, v287, v189, v224, v230, 0, v231);
  if (v232)
  {

    (*(void (**)(uint64_t, uint64_t))(v285 + 8))(v231, v286);
    sub_241B48CA8(v230, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
    sub_241B48CA8(v224, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
    (*(void (**)(void *, uint64_t))(v227 + 8))(v189, v228);
    (*(void (**)(char *, uint64_t))(v312 + 8))(v295, v223);
LABEL_49:
    sub_241B48CA8(v309, &qword_26B038F10, MEMORY[0x263F062D0]);
    sub_241B48CA8(v310, &qword_26B032258, MEMORY[0x263F471B8]);
    (*(void (**)(char *, uint64_t))(v315 + 8))(v313, v314);
LABEL_50:
    sub_241B48CA8(v321, &qword_26B0320B0, MEMORY[0x263F43F20]);
    uint64_t v234 = (void (*)(uint64_t))MEMORY[0x263F06828];
    sub_241B48CA8(v316, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    sub_241B48CA8(v323, (unint64_t *)&qword_26B031FB8, v234);
    return;
  }
  uint64_t v326 = 0;
  (*(void (**)(uint64_t, uint64_t))(v285 + 8))(v231, v286);
  sub_241B48CA8(v230, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
  sub_241B48CA8(v224, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
  (*(void (**)(void *, uint64_t))(v227 + 8))(v189, v228);
  uint64_t v235 = v276;
  uint64_t v236 = v325;
  uint64_t v237 = v300;
  ((void (*)(uint64_t, uint64_t, uint64_t, void (*)(uint64_t)))v300)(v276, 1, 1, v325);
  if (v327)
  {
    swift_retain();
    uint64_t v238 = v271;
    sub_241CD8A40();
    sub_241CD67E0();
    (*((void (**)(char *, void (*)(uint64_t)))v324 + 1))(v238, v236);
    objc_msgSend(v269, sel_dateData);
    id v239 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v240 = v320;
    sub_241CD67C0();
    swift_release();
    uint64_t v241 = (void (*)(uint64_t))MEMORY[0x263F062D0];
    sub_241B48CA8(v235, &qword_26B038F10, MEMORY[0x263F062D0]);
    ((void (*)(uint64_t, void, uint64_t, void (*)(uint64_t)))v237)(v240, 0, 1, v236);
    sub_241B48E38(v240, v235, &qword_26B038F10, v241);
  }
  sub_241CD89A0();
  uint64_t v325 = (void (*)(uint64_t))MEMORY[0x263F43F20];
  sub_241B48DCC(v321, v322, &qword_26B0320B0, MEMORY[0x263F43F20]);
  uint64_t v308 = v268;
  uint64_t v322 = sub_241CD8990();
  uint64_t v324 = (void (*)(uint64_t))MEMORY[0x263F06828];
  sub_241B48DCC(v316, (uint64_t)v294, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v242 = v311;
  (*(void (**)(char *, char *, uint64_t))(v312 + 16))(v273, v295, v311);
  v263(v272, 1, 1, v242);
  v328[0] = 0x5F74656764696E53;
  v328[1] = 0xE800000000000000;
  id v243 = *(id *)(v298 + 16);
  id v244 = objc_msgSend(v243, sel_description);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  uint64_t v245 = v274;
  sub_241CD8E50();
  swift_bridgeObjectRelease();
  uint64_t v246 = sub_241CD8E70();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v246 - 8) + 56))(v245, 0, 1, v246);
  sub_241CD8FF0();
  swift_allocObject();
  uint64_t v307 = sub_241CD8FE0();
  uint64_t v247 = (uint64_t)v327;
  swift_retain();
  objc_msgSend(v269, sel_dateData);
  id v248 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v249 = v242;
  uint64_t v250 = (uint64_t)v317;
  sub_241CD79D0();
  uint64_t v251 = sub_241CD7A10();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v251 - 8) + 56))(v250, 0, 1, v251);
  uint64_t v252 = (void (*)(uint64_t))MEMORY[0x263F062D0];
  uint64_t v253 = v276;
  uint64_t v254 = v320;
  sub_241B48DCC(v276, v320, &qword_26B038F10, MEMORY[0x263F062D0]);
  sub_241A3A878();
  uint64_t v256 = v318;
  uint64_t v257 = v319;
  uint64_t v258 = (char *)v319 + *(int *)(v255 + 52);
  swift_bridgeObjectRetain();
  sub_241B4A1A8(1, v250, v256, v254, v258);
  swift_release();

  uint64_t v259 = v307;
  *uint64_t v257 = v322;
  v257[1] = v259;
  v257[2] = v247;
  sub_241B48CA8(v253, &qword_26B038F10, v252);
  (*(void (**)(char *, uint64_t))(v312 + 8))(v295, v249);
  sub_241B48CA8(v309, &qword_26B038F10, v252);
  sub_241B48CA8(v310, &qword_26B032258, MEMORY[0x263F471B8]);
  (*(void (**)(char *, uint64_t))(v315 + 8))(v313, v314);
  sub_241B48CA8(v321, &qword_26B0320B0, v325);
  unint64_t v260 = v324;
  sub_241B48CA8(v316, (unint64_t *)&qword_26B031FB8, v324);
  sub_241B48CA8(v323, (unint64_t *)&qword_26B031FB8, v260);
}

uint64_t sub_241B48BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241B48D04(v2 + *(int *)(a1 + 24), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241B48C30(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_241B48C54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241B48CA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241B48C54(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241B48D04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241B48D6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241B48DCC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241B48C54(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241B48E38(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241B48C54(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t *sub_241B48EA4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_241CD7A10();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_241B49130(0, &qword_26B038880, MEMORY[0x263F45770]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_241CD6810();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      sub_241B49130(0, &qword_26B038F10, MEMORY[0x263F062D0]);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

void sub_241B49130(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241B49184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_241CD7A10();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_241CD6810();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

unsigned char *sub_241B49300(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_241CD7A10();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_241B49130(0, &qword_26B038880, MEMORY[0x263F45770]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD6810();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    sub_241B49130(0, &qword_26B038F10, MEMORY[0x263F062D0]);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

unsigned char *sub_241B4953C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_241CD7A10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_241B49130(0, &qword_26B038880, MEMORY[0x263F45770]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_241CD6810();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_241B49130(0, &qword_26B038F10, MEMORY[0x263F062D0]);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

unsigned char *sub_241B49844(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_241CD7A10();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_241B49130(0, &qword_26B038880, MEMORY[0x263F45770]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  int v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD6810();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_241B49130(0, &qword_26B038F10, MEMORY[0x263F062D0]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

unsigned char *sub_241B49A78(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_241CD7A10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_241B49130(0, &qword_26B038880, MEMORY[0x263F45770]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_241CD6810();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 40))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_241B49130(0, &qword_26B038F10, MEMORY[0x263F062D0]);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t sub_241B49D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B49D8C);
}

uint64_t sub_241B49D8C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_241B49130(0, &qword_26B038880, MEMORY[0x263F45770]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[6]);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    sub_241B49130(0, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[7];
    return v14(v16, a2, v15);
  }
}

uint64_t sub_241B49EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B49F08);
}

void sub_241B49F08(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_241B49130(0, &qword_26B038880, MEMORY[0x263F45770]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6]) = (a2 - 1);
  }
  else
  {
    sub_241B49130(0, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[7];
    v14(v16, a2, a2, v15);
  }
}

uint64_t type metadata accessor for SnidgetFeedItemMetadata(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B032C08);
}

void sub_241B4A090()
{
  sub_241B49130(319, &qword_26B038880, MEMORY[0x263F45770]);
  if (v0 <= 0x3F)
  {
    sub_241B49130(319, &qword_26B038F10, MEMORY[0x263F062D0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_241B4A1A8@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v55 = a2;
  LODWORD(v51) = a1;
  uint64_t v6 = sub_241CD6D00();
  MEMORY[0x270FA5388](v6 - 8);
  v45[1] = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B49130(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v54 = (uint64_t)v45 - v9;
  uint64_t v10 = sub_241CD7A10();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v47 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = (void (*)(uint64_t))MEMORY[0x263F062D0];
  sub_241B49130(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  v45[0] = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v45 - v16;
  uint64_t v18 = sub_241CD6810();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  int v22 = (char *)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v46 = (char *)v45 - v23;
  uint64_t v24 = (int *)type metadata accessor for SnidgetFeedItemMetadata(0);
  uint64_t v25 = &a5[v24[5]];
  uint64_t v48 = v11;
  uint64_t v49 = v10;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v25, 1, 1, v10);
  uint64_t v26 = (uint64_t)&a5[v24[7]];
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v27(v26, 1, 1, v18);
  *a5 = (_BYTE)v51;
  uint64_t v28 = (uint64_t)v25;
  uint64_t v29 = v18;
  sub_241B50F78(v55, v28);
  uint64_t v30 = v24[6];
  uint64_t v31 = v53;
  *(void *)&a5[v30] = v52;
  sub_241B4E98C(v31, (uint64_t)v17, &qword_26B038F10, v50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    uint64_t v46 = v22;
    uint64_t v50 = (void (*)(uint64_t))(v19 + 56);
    uint64_t v51 = v27;
    uint64_t v52 = v26;
    unint64_t v32 = v47;
    sub_241B4E9F8((uint64_t)v17, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v33 = v54;
    uint64_t v34 = v55;
    sub_241B4E98C(v55, v54, &qword_26B038880, MEMORY[0x263F45770]);
    uint64_t v36 = v48;
    uint64_t v35 = v49;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v33, 1, v49) == 1)
    {
      sub_241B4E9F8(v31, &qword_26B038F10, MEMORY[0x263F062D0]);
      uint64_t v37 = (void (*)(uint64_t))MEMORY[0x263F45770];
      sub_241B4E9F8(v34, &qword_26B038880, MEMORY[0x263F45770]);
      return sub_241B4E9F8(v54, &qword_26B038880, v37);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v32, v54, v35);
      uint64_t v42 = v46;
      uint64_t v43 = v29;
      sub_241CD79E0();
      sub_241CD67B0();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v42, v29);
      uint64_t v44 = v45[0];
      sub_241CD67D0();
      sub_241B4E9F8(v31, &qword_26B038F10, MEMORY[0x263F062D0]);
      sub_241B4E9F8(v34, &qword_26B038880, MEMORY[0x263F45770]);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v35);
      v51(v44, 0, 1, v43);
      return sub_241A6862C(v44, v52);
    }
  }
  else
  {
    uint64_t v39 = (void (*)(uint64_t))MEMORY[0x263F062D0];
    sub_241B4E9F8(v31, &qword_26B038F10, MEMORY[0x263F062D0]);
    sub_241B4E9F8(v55, &qword_26B038880, MEMORY[0x263F45770]);
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v41 = v46;
    v40(v46, v17, v18);
    sub_241B4E9F8(v26, &qword_26B038F10, v39);
    v40((char *)v26, v41, v18);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v27)(v26, 0, 1, v18);
  }
}

uint64_t sub_241B4A7B4()
{
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  sub_241CD73E0();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  id v1 = *(id *)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_description);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return 0x7250656372756F73;
}

uint64_t sub_241B4A928@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v173 = a3;
  id v172 = a2;
  uint64_t v188 = a1;
  uint64_t v189 = a6;
  id v196 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v171 = type metadata accessor for HostingConfigurationContent();
  uint64_t v170 = *(void *)(v171 - 8);
  MEMORY[0x270FA5388](v171);
  uint64_t v182 = ((char *)&v169 - v8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v191 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v187 = (char *)&v169 - v10;
  uint64_t v11 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v178 = (char *)&v169 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = *(void *)(a4 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v174 = (void (*)(uint64_t, uint64_t))((char *)&v169 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v169 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  os_log_t v181 = (os_log_t)((char *)&v169 - v20);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v176 = (void (*)(uint64_t, uint64_t))((char *)&v169 - v22);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  int v177 = ((char *)&v169 - v24);
  MEMORY[0x270FA5388](v23);
  id v175 = ((char *)&v169 - v25);
  uint64_t v26 = sub_241CDA1A0();
  uint64_t v192 = *(void *)(v26 - 8);
  uint64_t v193 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v183 = (char *)&v169 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = ((char *)&v169 - v30);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v180 = (char *)&v169 - v33;
  MEMORY[0x270FA5388](v32);
  os_log_t v179 = (os_log_t)((char *)&v169 - v34);
  uint64_t v197 = a5;
  uint64_t v35 = a4;
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = ((char *)&v169 - v38);
  uint64_t v40 = type metadata accessor for SummaryModelProcessingResult();
  uint64_t v41 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v169 - v42;
  uint64_t v186 = AssociatedTypeWitness;
  uint64_t v190 = sub_241CDBBD0();
  uint64_t v185 = *(void *)(v190 - 8);
  uint64_t v44 = MEMORY[0x270FA5388](v190);
  uint64_t v184 = (char *)&v169 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v48 = (char *)&v169 - v47;
  MEMORY[0x270FA5388](v46);
  id v194 = (char *)&v169 - v49;
  uint64_t v50 = v40;
  uint64_t v51 = (char *)v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v43, v188, v50);
  uint64_t v52 = v37;
  int v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v43, 2, v36);
  if (v53)
  {
    if (v53 == 1)
    {
      os_log_t v54 = v179;
      sub_241CDA0F0();
      uint64_t v55 = v195;
      uint64_t v56 = *(void (**)(NSObject *, uint64_t, uint64_t))(v195 + 16);
      uint64_t v57 = v175;
      uint64_t v58 = v198;
      uint64_t v59 = v35;
      v56(v175, v198, v35);
      uint64_t v60 = v177;
      v56(v177, v58, v35);
      uint64_t v61 = sub_241CDA190();
      os_log_type_t v62 = sub_241CDB670();
      int v63 = v62;
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v64 = swift_slowAlloc();
        uint64_t v188 = swift_slowAlloc();
        uint64_t v200 = (char *)v188;
        *(_DWORD *)uint64_t v64 = 136315394;
        id v174 = (void (*)(uint64_t, uint64_t))(v64 + 4);
        os_log_t v181 = v61;
        uint64_t v65 = v197;
        uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t))(v197 + 64);
        LODWORD(v180) = v63;
        uint64_t v67 = v57;
        uint64_t v68 = (void *)v66(v35, v197);
        uint64_t v176 = *(void (**)(uint64_t, uint64_t))(v65 + 72);
        uint64_t v69 = (uint64_t)v178;
        v176(v35, v65);
        sub_241B4EB18(v69);
        uint64_t v70 = sub_241AE4C58();
        unint64_t v72 = v71;

        uint64_t v199 = sub_241A33FE4(v70, v72, (uint64_t *)&v200);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        uint64_t v195 = *(void *)(v195 + 8);
        ((void (*)(NSObject *, uint64_t))v195)(v67, v59);
        *(_WORD *)(v64 + 12) = 2080;
        id v175 = (v64 + 14);
        v176(v59, v65);
        id v73 = *(id *)(v69 + 16);
        sub_241B4EB18(v69);
        id v74 = objc_msgSend(v73, sel_sensitiveLoggingIdentifier);

        uint64_t v75 = sub_241CDB0D0();
        unint64_t v77 = v76;

        uint64_t v199 = sub_241A33FE4(v75, v77, (uint64_t *)&v200);
        uint64_t v78 = v65;
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        ((void (*)(NSObject *, uint64_t))v195)(v60, v59);
        os_log_t v79 = v181;
        _os_log_impl(&dword_241A23000, v181, (os_log_type_t)v180, "%s: Version mismatch deleted, deleting snidget feedItem for %s", (uint8_t *)v64, 0x16u);
        uint64_t v80 = v188;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v80, -1, -1);
        MEMORY[0x245637F20](v64, -1, -1);

        (*(void (**)(os_log_t, uint64_t))(v192 + 8))(v179, v193);
        uint64_t v81 = v185;
        uint64_t v82 = v186;
        uint64_t v84 = v190;
        uint64_t v83 = v191;
      }
      else
      {
        uint64_t v146 = *(void (**)(NSObject *, uint64_t))(v55 + 8);
        v146(v57, v35);
        v146(v60, v35);

        (*(void (**)(os_log_t, uint64_t))(v192 + 8))(v54, v193);
        uint64_t v84 = v190;
        uint64_t v83 = v191;
        uint64_t v81 = v185;
        uint64_t v82 = v186;
        uint64_t v78 = v197;
      }
      uint64_t v118 = v194;
      uint64_t v117 = v184;
      (*(void (**)(uint64_t, uint64_t))(v78 + 104))(v59, v78);
    }
    else
    {
      id v120 = v180;
      sub_241CDA0F0();
      uint64_t v121 = v195;
      uint64_t v122 = *(void (**)(char *, uint64_t, uint64_t))(v195 + 16);
      uint64_t v123 = (char *)v176;
      uint64_t v124 = v198;
      uint64_t v59 = v35;
      v122((char *)v176, v198, v35);
      os_log_t v125 = v181;
      v122((char *)v181, v124, v35);
      char v126 = sub_241CDA190();
      os_log_type_t v127 = sub_241CDB670();
      int v128 = v127;
      if (os_log_type_enabled(v126, v127))
      {
        uint64_t v129 = swift_slowAlloc();
        uint64_t v188 = swift_slowAlloc();
        uint64_t v200 = (char *)v188;
        *(_DWORD *)uint64_t v129 = 136315394;
        id v175 = (v129 + 4);
        uint64_t v78 = v197;
        uint64_t v130 = *(uint64_t (**)(uint64_t, uint64_t))(v197 + 64);
        os_log_t v179 = v126;
        id v131 = (void *)v130(v35, v197);
        LODWORD(v177) = v128;
        id v174 = *(void (**)(uint64_t, uint64_t))(v78 + 72);
        uint64_t v132 = (uint64_t)v178;
        v174(v59, v78);
        sub_241B4EB18(v132);
        uint64_t v133 = sub_241AE4C58();
        id v134 = v123;
        unint64_t v136 = v135;

        uint64_t v199 = sub_241A33FE4(v133, v136, (uint64_t *)&v200);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        id v137 = *(NSObject **)(v195 + 8);
        v195 += 8;
        id v175 = v137;
        ((void (*)(char *, uint64_t))v137)(v134, v59);
        *(_WORD *)(v129 + 12) = 2080;
        os_log_t v138 = v181;
        v174(v59, v78);
        id v139 = *(id *)(v132 + 16);
        sub_241B4EB18(v132);
        id v140 = objc_msgSend(v139, sel_sensitiveLoggingIdentifier);

        uint64_t v141 = sub_241CDB0D0();
        unint64_t v143 = v142;

        uint64_t v199 = sub_241A33FE4(v141, v143, (uint64_t *)&v200);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        ((void (*)(os_log_t, uint64_t))v175)(v138, v59);
        os_log_t v144 = v179;
        _os_log_impl(&dword_241A23000, v179, (os_log_type_t)v177, "%s: No model found, deleting snidget feedItem for %s", (uint8_t *)v129, 0x16u);
        uint64_t v145 = v188;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v145, -1, -1);
        MEMORY[0x245637F20](v129, -1, -1);

        (*(void (**)(char *, uint64_t))(v192 + 8))(v180, v193);
        uint64_t v81 = v185;
        uint64_t v82 = v186;
        uint64_t v84 = v190;
        uint64_t v83 = v191;
      }
      else
      {
        uint64_t v147 = *(void (**)(char *, uint64_t))(v121 + 8);
        v147(v123, v35);
        v147((char *)v125, v35);

        (*(void (**)(char *, uint64_t))(v192 + 8))(v120, v193);
        uint64_t v81 = v185;
        uint64_t v82 = v186;
        uint64_t v84 = v190;
        uint64_t v83 = v191;
        uint64_t v78 = v197;
      }
      uint64_t v118 = v194;
      uint64_t v117 = v184;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v194, 1, 1, v82);
    }
  }
  else
  {
    uint64_t v85 = v18;
    id v86 = v31;
    (*(void (**)(NSObject *, char *, char *))(v52 + 32))(v39, v43, v51);
    uint64_t v87 = v198;
    uint64_t v88 = v196;
    (*(void (**)(NSObject *, uint64_t))(v197 + 96))(v39, v35);
    id v196 = v88;
    if (v88)
    {
      uint64_t v180 = v51;
      os_log_t v181 = v39;
      uint64_t v188 = v52;
      id v89 = v86;
      sub_241CDA0F0();
      uint64_t v90 = v195;
      uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t))(v195 + 16);
      uint64_t v92 = v85;
      v91(v85, v87, v35);
      uint64_t v93 = (char *)v174;
      v91((char *)v174, v87, v35);
      uint64_t v94 = sub_241CDA190();
      os_log_type_t v95 = sub_241CDB670();
      int v96 = v95;
      uint64_t v59 = v35;
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v97 = swift_slowAlloc();
        LODWORD(v176) = v96;
        uint64_t v98 = v97;
        int v177 = swift_slowAlloc();
        uint64_t v200 = (char *)v177;
        *(_DWORD *)uint64_t v98 = 136315394;
        uint64_t v169 = v98 + 4;
        uint64_t v99 = v197;
        uint64_t v100 = *(uint64_t (**)(uint64_t, uint64_t))(v197 + 64);
        id v175 = v94;
        uint64_t v101 = v100(v35, v197);
        os_log_t v179 = v89;
        uint64_t v102 = (void *)v101;
        os_log_type_t v103 = *(void (**)(uint64_t, uint64_t))(v99 + 72);
        uint64_t v104 = (uint64_t)v178;
        v103(v35, v197);
        sub_241B4EB18(v104);
        uint64_t v105 = sub_241AE4C58();
        uint64_t v106 = v92;
        unint64_t v108 = v107;

        uint64_t v199 = sub_241A33FE4(v105, v108, (uint64_t *)&v200);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        uint64_t v195 = *(void *)(v90 + 8);
        ((void (*)(char *, uint64_t))v195)(v106, v59);
        *(_WORD *)(v98 + 12) = 2080;
        uint64_t v169 = v98 + 14;
        unint64_t v109 = v174;
        v103(v59, v197);
        id v110 = *(id *)(v104 + 16);
        sub_241B4EB18(v104);
        id v111 = objc_msgSend(v110, sel_sensitiveLoggingIdentifier);

        uint64_t v112 = sub_241CDB0D0();
        unint64_t v114 = v113;

        uint64_t v78 = v197;
        uint64_t v199 = sub_241A33FE4(v112, v114, (uint64_t *)&v200);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        ((void (*)(void, uint64_t))v195)(v109, v59);
        os_log_t v115 = v175;
        _os_log_impl(&dword_241A23000, v175, (os_log_type_t)v176, "%s: Unreadable model, attempting to proceed with error case feedItem for %s", (uint8_t *)v98, 0x16u);
        uint64_t v116 = v177;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v116, -1, -1);
        MEMORY[0x245637F20](v98, -1, -1);

        (*(void (**)(os_log_t, uint64_t))(v192 + 8))(v179, v193);
        uint64_t v84 = v190;
        uint64_t v83 = v191;
        uint64_t v117 = v184;
        uint64_t v81 = v185;
        uint64_t v118 = v194;
        uint64_t v119 = v196;
      }
      else
      {
        uint64_t v150 = *(void (**)(char *, uint64_t))(v90 + 8);
        v150(v85, v35);
        v150(v93, v35);

        (*(void (**)(NSObject *, uint64_t))(v192 + 8))(v89, v193);
        uint64_t v84 = v190;
        uint64_t v83 = v191;
        uint64_t v117 = v184;
        uint64_t v81 = v185;
        uint64_t v118 = v194;
        uint64_t v119 = v196;
        uint64_t v78 = v197;
      }
      (*(void (**)(uint64_t, uint64_t))(v78 + 104))(v59, v78);

      (*(void (**)(os_log_t, char *))(v188 + 8))(v181, v180);
      id v196 = 0;
      uint64_t v82 = v186;
    }
    else
    {
      (*(void (**)(NSObject *, char *))(v52 + 8))(v39, v51);
      uint64_t v83 = v191;
      uint64_t v148 = v186;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v191 + 56))(v48, 0, 1, v186);
      uint64_t v81 = v185;
      uint64_t v118 = v194;
      id v149 = v48;
      uint64_t v84 = v190;
      (*(void (**)(char *, char *, uint64_t))(v185 + 32))(v194, v149, v190);
      uint64_t v117 = v184;
      uint64_t v59 = v35;
      uint64_t v82 = v148;
      uint64_t v78 = v197;
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v117, v118, v84);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v117, 1, v82) == 1)
  {
    uint64_t v151 = *(void (**)(char *, uint64_t))(v81 + 8);
    v151(v118, v84);
    v151(v117, v84);
  }
  else
  {
    id v152 = v187;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v187, v117, v82);
    uint64_t v153 = v182;
    uint64_t v154 = v196;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 112))(v152, v59, v78);
    if (!v154)
    {
      sub_241B4C278(v172, v173, v153, v59, v78, v189);
      (*(void (**)(NSObject *, uint64_t))(v170 + 8))(v153, v171);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v187, v82);
      return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v194, v84);
    }
    uint64_t v155 = v183;
    sub_241CDA0F0();
    id v156 = v154;
    id v157 = v154;
    uint64_t v158 = sub_241CDA190();
    os_log_type_t v159 = sub_241CDB650();
    if (os_log_type_enabled(v158, v159))
    {
      uint64_t v160 = swift_slowAlloc();
      uint64_t v161 = swift_slowAlloc();
      uint64_t v200 = (char *)v161;
      *(_DWORD *)uint64_t v160 = 136315394;
      uint64_t v162 = sub_241CDC270();
      uint64_t v199 = sub_241A33FE4(v162, v163, (uint64_t *)&v200);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v160 + 12) = 2080;
      uint64_t v199 = (uint64_t)v154;
      id v164 = v154;
      sub_241A3DA64();
      uint64_t v165 = sub_241CDB120();
      uint64_t v199 = sub_241A33FE4(v165, v166, (uint64_t *)&v200);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241A23000, v158, v159, "[%s]: Unable to make feedItem from provided feedItemModel: %s", (uint8_t *)v160, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v161, -1, -1);
      MEMORY[0x245637F20](v160, -1, -1);

      (*(void (**)(char *, uint64_t))(v192 + 8))(v183, v193);
      (*(void (**)(char *, uint64_t))(v191 + 8))(v187, v82);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v194, v190);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v192 + 8))(v155, v193);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v187, v82);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v194, v84);
    }
  }
  uint64_t v167 = sub_241CD75A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v167 - 8) + 56))(v189, 1, 1, v167);
}

uint64_t sub_241B4BF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (id *)((char *)&v20 - v9);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (id *)((char *)&v20 - v11);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(a2 + 72);
  v13(a1, a2);
  id v14 = v12[2];
  sub_241B4EB18((uint64_t)v12);
  v13(a1, a2);
  id v15 = *v10;
  id v16 = *v10;
  sub_241B4EB18((uint64_t)v10);
  v13(a1, a2);
  uint64_t v17 = v7[8];
  sub_241B4EB18((uint64_t)v7);
  uint64_t v18 = sub_241CA21A0(v14, (uint64_t)v15, v17);

  return v18;
}

uint64_t sub_241B4C108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a7;
  swift_getAssociatedTypeWitness();
  uint64_t v11 = type metadata accessor for SummaryModelProcessingResult();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v19 - v13;
  id v15 = sub_241B4BF90(a5, a6);
  uint64_t v17 = v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 80))(a1, a2, v20, v21, a5, a6);
  sub_241B4A928((uint64_t)v14, v15, v17, a5, a6, v22);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void sub_241B4C278(NSObject *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v221 = a2;
  os_log_t v220 = a1;
  uint64_t v209 = a6;
  uint64_t AssociatedTypeWitness = (uint64_t (*)(uint64_t, uint64_t))swift_getAssociatedTypeWitness();
  os_log_t AssociatedConformanceWitness = (os_log_t)swift_getAssociatedConformanceWitness();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v188 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v187 = (char *)&v185 - v11;
  uint64_t v211 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v211);
  uint64_t v186 = (uint64_t)&v185 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = v10;
  uint64_t v13 = type metadata accessor for HostingConfigurationContent();
  uint64_t v190 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v198 = (char *)&v185 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  id v196 = (char *)&v185 - v17;
  uint64_t v205 = *(void *)(a4 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v192 = (char *)&v185 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v206 = (char *)&v185 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v195 = (char *)&v185 - v23;
  MEMORY[0x270FA5388](v22);
  id v194 = (char *)&v185 - v24;
  uint64_t v204 = sub_241CDA1A0();
  uint64_t v203 = *(void *)(v204 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v204);
  uint64_t v193 = (char *)&v185 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v197 = (char *)&v185 - v27;
  sub_241B49130(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v202 = (char *)&v185 - v29;
  uint64_t v208 = sub_241CD75A0();
  uint64_t v207 = *(void *)(v208 - 8);
  MEMORY[0x270FA5388](v208);
  int v225 = (char *)&v185 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v32 = MEMORY[0x270FA5388](v31 - 8);
  uint64_t v201 = (char *)&v185 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v200 = (char *)&v185 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v199 = (char *)&v185 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (id *)((char *)&v185 - v38);
  uint64_t v40 = sub_241CD73B0();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v215 = v40;
  uint64_t v216 = v41;
  MEMORY[0x270FA5388](v40);
  uint64_t v224 = (uint64_t)&v185 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = (char *)a3 + *(int *)(v13 + 32);
  char v43 = *v210;
  uint64_t v226 = v6;
  uint64_t v227 = a4;
  sub_241B4DA24(v43, a4, a5, v224);
  v229[0] = sub_241CDB0D0();
  v229[1] = v44;
  sub_241CDB180();
  uint64_t v45 = a5 + 72;
  uint64_t v223 = *(void (**)(uint64_t, uint64_t))(a5 + 72);
  v223(a4, a5);
  id v46 = v39[2];
  uint64_t v212 = v39;
  sub_241B4EB18((uint64_t)v39);
  id v47 = objc_msgSend(v46, sel_identifier);

  sub_241CDB0D0();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  uint64_t v217 = v229[0];
  swift_checkMetadataState();
  uint64_t v191 = v13;
  uint64_t v49 = (a5 + 64);
  uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 64);
  uint64_t v213 = a5;
  uint64_t AssociatedTypeWitness = v48;
  uint64_t v50 = (void *)v48(v227, a5);
  uint64_t v51 = (void *)sub_241CDB4D0();

  uint64_t v52 = v224;
  id v53 = v222;
  sub_241CD7440();
  if (v53)
  {
    (*(void (**)(uint64_t, uint64_t))(v216 + 8))(v52, v215);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v214 = v45;
    os_log_t AssociatedConformanceWitness = a3;
    uint64_t v221 = 0;
    swift_bridgeObjectRelease();

    os_log_t v54 = self;
    uint64_t v55 = v226;
    uint64_t v56 = v227;
    uint64_t v57 = v213;
    os_log_t v220 = v49;
    uint64_t v58 = (void *)AssociatedTypeWitness(v227, v213);
    id v59 = objc_msgSend(v54, sel_sharedInstanceForHealthStore_, v58);

    if (v59)
    {
      uint64_t v60 = v55;
      uint64_t v61 = (uint64_t)v212;
      os_log_type_t v62 = v223;
      v223(v56, v57);
      id v63 = *(id *)(v61 + 16);
      sub_241B4EB18(v61);
      id v64 = objc_msgSend(v59, sel_displayTypeForObjectType_, v63);

      uint64_t v65 = v57;
      id v222 = v64;
      if (v64)
      {
        uint64_t v230 = MEMORY[0x263F8EE88];
        uint64_t v66 = (uint64_t)v199;
        v62(v56, v65);
        int v67 = *(unsigned __int8 *)(v66 + 8);
        sub_241B4EB18(v66);
        uint64_t v68 = (uint64_t)v200;
        if (v67 == 1)
        {
          if (*v210 == 1) {
            uint64_t v69 = sub_241CD7860();
          }
          else {
            uint64_t v69 = sub_241CD7850();
          }
          sub_241C59F0C(v229, v69, v70);
          swift_bridgeObjectRelease();
        }
        uint64_t v99 = v227;
        uint64_t v100 = v223;
        v223(v227, v65);
        int v101 = *(unsigned __int8 *)(v68 + 8);
        sub_241B4EB18(v68);
        uint64_t v102 = v99;
        os_log_type_t v103 = v100;
        v100(v102, v65);
        id v104 = *(id *)(v61 + 16);
        sub_241B4EB18(v61);
        unsigned __int8 v105 = sub_241B4DB70();

        if (v101 == 1 && (v105 & 1) != 0)
        {
          uint64_t v106 = sub_241CD7880();
          sub_241C59F0C(v229, v106, v107);
          swift_bridgeObjectRelease();
        }
        uint64_t v108 = (uint64_t)v201;
        uint64_t v109 = v227;
        v100(v227, v65);
        int v110 = *(unsigned __int8 *)(v108 + 8);
        sub_241B4EB18(v108);
        id v111 = v210;
        int v112 = *v210;
        v103(v109, v65);
        id v113 = *(id *)(v61 + 16);
        sub_241B4EB18(v61);
        unsigned __int8 v114 = sub_241B4DB70();

        id v115 = v222;
        if (v110 == 1 && v112 && (v114 & 1) != 0)
        {
          uint64_t v116 = sub_241CD91A0();
          uint64_t v117 = *(void *)(v116 + 16);
          if (v117)
          {
            uint64_t v118 = (uint64_t *)(v116 + 40);
            do
            {
              uint64_t v119 = *(v118 - 1);
              uint64_t v120 = *v118;
              swift_bridgeObjectRetain();
              sub_241C59F0C(v229, v119, v120);
              swift_bridgeObjectRelease();
              v118 += 2;
              --v117;
            }
            while (v117);
          }
          swift_bridgeObjectRelease();
          os_log_type_t v103 = v223;
          id v111 = v210;
        }
        sub_241CD7570();
        sub_241A33460();
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_241CEB710;
        uint64_t v122 = (uint64_t)v212;
        uint64_t v123 = v213;
        v103(v227, v213);
        id v124 = *(id *)(v122 + 16);
        sub_241B4EB18(v122);
        *(void *)(inited + 32) = v124;
        v229[0] = inited;
        sub_241CDB2E0();
        unint64_t v125 = v229[0];
        if ((unint64_t)v229[0] >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v126 = sub_241CDBF50();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v126 = *(void *)((v229[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v127 = v211;
        uint64_t v128 = (uint64_t)v202;
        if (v126) {
          sub_241C69200(v125);
        }
        swift_bridgeObjectRelease();
        sub_241CD74C0();
        uint64_t v129 = v227;
        sub_241B4DC60(v227, v123);
        sub_241CD7480();
        sub_241B4DD08(v129, v123);
        sub_241CD7530();
        sub_241B4E98C((uint64_t)&v111[*(int *)(v127 + 20)], v128, &qword_26B038880, MEMORY[0x263F45770]);
        sub_241CD74E0();
        id v130 = objc_msgSend(v115, sel_localization);
        id v131 = objc_msgSend(v130, sel_displayName);

        sub_241CDB0D0();
        sub_241CD7490();
        id v132 = objc_msgSend(v115, sel_localization);
        id v133 = objc_msgSend(v132, sel_summary);

        if (v133)
        {
          sub_241CDB0D0();
        }
        sub_241CD74D0();
        id v134 = objc_msgSend(v115, sel_displayCategory);
        sub_241CD7500();

        uint64_t v135 = *(void *)&v111[*(int *)(v211 + 24)];
        uint64_t v136 = (uint64_t)v212;
        uint64_t v137 = v226;
        uint64_t v138 = v227;
        uint64_t v139 = v213;
        id v140 = v223;
        v223(v227, v213);
        id v141 = *(id *)(v136 + 16);
        sub_241B4EB18(v136);
        unint64_t v142 = sub_241BBE5A4(v141);

        v229[0] = v135;
        swift_bridgeObjectRetain();
        sub_241AFF3B0(v142);
        sub_241C69EE0(v229[0]);
        swift_bridgeObjectRelease();
        sub_241CD7540();
        v140(v138, v139);
        id v143 = *(id *)(v136 + 16);
        sub_241B4EB18(v136);
        LODWORD(v135) = objc_msgSend(v143, sel_isAbleToWriteHealthSensitiveLogs);

        if (v135)
        {
          sub_241CDA0F0();
          uint64_t v144 = v205;
          uint64_t v145 = *(void (**)(char *, uint64_t, uint64_t))(v205 + 16);
          v145(v194, v137, v138);
          v145(v195, v137, v138);
          uint64_t v146 = v190;
          uint64_t v147 = *(void (**)(char *, os_log_t, uint64_t))(v190 + 16);
          os_log_t v148 = AssociatedConformanceWitness;
          uint64_t v149 = v191;
          v147(v196, AssociatedConformanceWitness, v191);
          v147(v198, v148, v149);
          uint64_t v150 = sub_241CDA190();
          os_log_type_t v151 = sub_241CDB670();
          int v152 = v151;
          if (os_log_type_enabled(v150, v151))
          {
            uint64_t v153 = swift_slowAlloc();
            os_log_t AssociatedConformanceWitness = v150;
            uint64_t v154 = v139;
            uint64_t v155 = v153;
            uint64_t v226 = swift_slowAlloc();
            v229[0] = v226;
            *(_DWORD *)uint64_t v155 = 136315907;
            uint64_t v210 = (char *)(v155 + 4);
            LODWORD(v217) = v152;
            id v156 = v194;
            id v157 = (void *)AssociatedTypeWitness(v138, v154);
            uint64_t v158 = (uint64_t)v212;
            v223(v138, v154);
            sub_241B4EB18(v158);
            uint64_t v159 = sub_241AE4C58();
            uint64_t v160 = v138;
            unint64_t v162 = v161;

            uint64_t v228 = sub_241A33FE4(v159, v162, v229);
            sub_241CDBBF0();
            swift_bridgeObjectRelease();
            unint64_t v163 = *(void (**)(char *, uint64_t))(v144 + 8);
            v163(v156, v160);
            *(_WORD *)(v155 + 12) = 2080;
            os_log_t v220 = (os_log_t)(v155 + 14);
            id v164 = v195;
            v223(v160, v154);
            id v165 = *(id *)(v158 + 16);
            sub_241B4EB18(v158);
            id v166 = objc_msgSend(v165, sel_sensitiveLoggingIdentifier);

            uint64_t v167 = sub_241CDB0D0();
            unint64_t v169 = v168;

            uint64_t v228 = sub_241A33FE4(v167, v169, v229);
            sub_241CDBBF0();
            swift_bridgeObjectRelease();
            v163(v164, v160);
            *(_WORD *)(v155 + 22) = 2080;
            uint64_t v170 = v191;
            uint64_t v171 = v196;
            sub_241B4EB8C((uint64_t)&v196[*(int *)(v191 + 32)], v186);
            uint64_t v172 = sub_241CDB120();
            uint64_t v228 = sub_241A33FE4(v172, v173, v229);
            sub_241CDBBF0();
            swift_bridgeObjectRelease();
            id v174 = *(void (**)(char *, uint64_t))(v190 + 8);
            v174(v171, v170);
            *(_WORD *)(v155 + 32) = 2081;
            id v175 = v198;
            (*(void (**)(char *, char *, uint64_t))(v188 + 16))(v187, v198, v189);
            uint64_t v176 = sub_241CDB120();
            uint64_t v228 = sub_241A33FE4(v176, v177, v229);
            sub_241CDBBF0();
            swift_bridgeObjectRelease();
            v174(v175, v170);
            os_log_t v178 = AssociatedConformanceWitness;
            _os_log_impl(&dword_241A23000, AssociatedConformanceWitness, (os_log_type_t)v217, "%s: Created pluginFeedItem for hkType=%s with metadata=%s, viewModel=%{private}s", (uint8_t *)v155, 0x2Au);
            uint64_t v179 = v226;
            swift_arrayDestroy();
            MEMORY[0x245637F20](v179, -1, -1);
            MEMORY[0x245637F20](v155, -1, -1);
          }
          else
          {

            uint64_t v180 = *(void (**)(char *, uint64_t))(v146 + 8);
            v180(v198, v149);
            v180(v196, v149);
            os_log_t v181 = *(void (**)(char *, uint64_t))(v144 + 8);
            v181(v195, v138);
            v181(v194, v138);
          }
          (*(void (**)(char *, uint64_t))(v203 + 8))(v197, v204);
          (*(void (**)(uint64_t, uint64_t))(v216 + 8))(v224, v215);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v216 + 8))(v224, v215);
        }
        uint64_t v182 = v209;
        uint64_t v183 = v208;
        uint64_t v184 = v207;
        (*(void (**)(uint64_t, char *, uint64_t))(v207 + 32))(v209, v225, v208);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v184 + 56))(v182, 0, 1, v183);
      }
      else
      {
        unint64_t v71 = v193;
        sub_241CDA0F0();
        uint64_t v72 = v205;
        id v73 = *(void (**)(char *, uint64_t, uint64_t))(v205 + 16);
        v73(v206, v60, v56);
        id v74 = v192;
        v73(v192, v60, v56);
        uint64_t v75 = sub_241CDA190();
        os_log_type_t v76 = sub_241CDB650();
        int v77 = v76;
        if (os_log_type_enabled(v75, v76))
        {
          uint64_t v78 = swift_slowAlloc();
          LODWORD(v222) = v77;
          uint64_t v79 = v78;
          uint64_t v226 = swift_slowAlloc();
          v229[0] = v226;
          *(_DWORD *)uint64_t v79 = 136315394;
          uint64_t v217 = v79 + 4;
          uint64_t v80 = v206;
          uint64_t v81 = AssociatedTypeWitness(v56, v65);
          os_log_t v220 = v75;
          uint64_t v82 = (void *)v81;
          uint64_t v83 = v80;
          v223(v56, v65);
          sub_241B4EB18(v61);
          uint64_t v84 = sub_241AE4C58();
          uint64_t v85 = v56;
          unint64_t v87 = v86;

          uint64_t v230 = sub_241A33FE4(v84, v87, v229);
          os_log_t AssociatedConformanceWitness = (os_log_t)&v231;
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          uint64_t AssociatedTypeWitness = *(uint64_t (**)(uint64_t, uint64_t))(v72 + 8);
          AssociatedTypeWitness((uint64_t)v83, v85);
          *(_WORD *)(v79 + 12) = 2080;
          uint64_t v217 = v79 + 14;
          uint64_t v88 = v192;
          v223(v85, v213);
          id v89 = *(id *)(v61 + 16);
          sub_241B4EB18(v61);
          id v90 = objc_msgSend(v89, sel_sensitiveLoggingIdentifier);

          uint64_t v91 = sub_241CDB0D0();
          unint64_t v93 = v92;

          uint64_t v230 = sub_241A33FE4(v91, v93, v229);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          AssociatedTypeWitness((uint64_t)v88, v85);
          os_log_t v94 = v220;
          _os_log_impl(&dword_241A23000, v220, (os_log_type_t)v222, "%s:: No display type found for %s", (uint8_t *)v79, 0x16u);
          uint64_t v95 = v226;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v95, -1, -1);
          MEMORY[0x245637F20](v79, -1, -1);

          (*(void (**)(char *, uint64_t))(v203 + 8))(v193, v204);
        }
        else
        {

          int v96 = *(void (**)(char *, uint64_t))(v72 + 8);
          v96(v74, v56);
          v96(v206, v56);
          (*(void (**)(char *, uint64_t))(v203 + 8))(v71, v204);
        }
        uint64_t v97 = v207;
        uint64_t v98 = v208;
        (*(void (**)(char *, uint64_t))(v207 + 8))(v225, v208);
        (*(void (**)(uint64_t, uint64_t))(v216 + 8))(v224, v215);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56))(v209, 1, 1, v98);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_241B4DA24@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
  int v11 = v10[8];
  sub_241B4EB18((uint64_t)v10);
  if (v11 == 1)
  {
    uint64_t v12 = *MEMORY[0x263F454D0];
    uint64_t v13 = sub_241CD73B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(a4, v12, v13);
  }
  else
  {
    uint64_t v15 = sub_241CD73B0();
    if (a1) {
      uint64_t v16 = (unsigned int *)MEMORY[0x263F45520];
    }
    else {
      uint64_t v16 = (unsigned int *)MEMORY[0x263F45538];
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(a4, *v16, v15);
  }
}

id sub_241B4DB70()
{
  uint64_t v0 = self;
  id result = objc_msgSend(v0, sel_appleBalanceMetricsType);
  if (result)
  {
    id v2 = result;
    sub_241B4EBF0();
    char v3 = sub_241CDBB60();

    if ((v3 & 1) != 0
      || (id v4 = objc_msgSend(v0, sel_audiogramSampleType),
          char v5 = sub_241CDBB60(),
          v4,
          (v5 & 1) != 0))
    {
      char v6 = 0;
    }
    else
    {
      id v7 = objc_msgSend(v0, sel_visionPrescriptionType);
      char v8 = sub_241CDBB60();

      char v6 = v8 ^ 1;
    }
    return (id)(v6 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_241B4DC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  LOBYTE(a2) = v6[8];
  sub_241B4EB18((uint64_t)v6);
  return (a2 & 1) == 0;
}

uint64_t sub_241B4DD08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (id *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  uint64_t v17 = (void *)sub_241CDB4D0();

  uint64_t v18 = (void *)sub_241CD7400();
  char v19 = sub_241CD73F0();

  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v3, a1);
  if (v19)
  {
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(a2 + 72);
    v20(a1, a2);
    char v21 = v12[8];
    sub_241B4EB18((uint64_t)v12);
    if ((v21 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a1);
LABEL_8:
      v20(a1, a2);
      id v24 = v9[2];
      sub_241B4EB18((uint64_t)v9);
      uint64_t v23 = sub_241CDB420();

      return v23;
    }
    char v22 = sub_241CDC100();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a1);
    if (v22) {
      goto LABEL_8;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a1);
  }
  return 0;
}

BOOL sub_241B4DFB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_241CD6810();
  uint64_t v76 = *(void *)(v4 - 8);
  uint64_t v77 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v72 = &v67[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x263F062D0];
  sub_241B4E928(0, &qword_268D42C00, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v74 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v67[-v8];
  sub_241B49130(0, &qword_26B038F10, v6);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  id v73 = &v67[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v79 = &v67[-v14];
  MEMORY[0x270FA5388](v13);
  uint64_t v75 = &v67[-v15];
  uint64_t v16 = sub_241CD7A10();
  uint64_t v80 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v78 = &v67[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = (void (*)(uint64_t))MEMORY[0x263F45770];
  sub_241B4E928(0, &qword_268D42C08, &qword_26B038880, MEMORY[0x263F45770]);
  uint64_t v20 = v19;
  MEMORY[0x270FA5388](v19);
  char v22 = &v67[-v21];
  sub_241B49130(0, &qword_26B038880, v18);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v26 = &v67[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = &v67[-v28];
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = &v67[-v30];
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v69 = v9;
  uint64_t v32 = (int *)type metadata accessor for SnidgetFeedItemMetadata(0);
  uint64_t v33 = v32[5];
  uint64_t v70 = a1;
  uint64_t v34 = (void (*)(uint64_t))MEMORY[0x263F45770];
  sub_241B4E98C((uint64_t)&a1[v33], (uint64_t)v31, &qword_26B038880, MEMORY[0x263F45770]);
  uint64_t v35 = v32[5];
  unint64_t v71 = a2;
  sub_241B4E98C((uint64_t)&a2[v35], (uint64_t)v29, &qword_26B038880, v34);
  uint64_t v36 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_241B4E98C((uint64_t)v31, (uint64_t)v22, &qword_26B038880, v34);
  sub_241B4E98C((uint64_t)v29, v36, &qword_26B038880, v34);
  uint64_t v37 = v80;
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
  if (v38((uint64_t)v22, 1, v16) == 1)
  {
    uint64_t v39 = (void (*)(uint64_t))MEMORY[0x263F45770];
    sub_241B4E9F8((uint64_t)v29, &qword_26B038880, MEMORY[0x263F45770]);
    sub_241B4E9F8((uint64_t)v31, &qword_26B038880, v39);
    if (v38(v36, 1, v16) == 1)
    {
      sub_241B4E9F8((uint64_t)v22, &qword_26B038880, MEMORY[0x263F45770]);
      goto LABEL_10;
    }
LABEL_7:
    uint64_t v42 = &qword_268D42C08;
    char v43 = &qword_26B038880;
    uint64_t v44 = (void (*)(uint64_t))MEMORY[0x263F45770];
    uint64_t v45 = (uint64_t)v22;
LABEL_8:
    sub_241B4EA54(v45, v42, v43, v44);
    return 0;
  }
  sub_241B4E98C((uint64_t)v22, (uint64_t)v26, &qword_26B038880, MEMORY[0x263F45770]);
  if (v38(v36, 1, v16) == 1)
  {
    uint64_t v40 = v37;
    uint64_t v41 = (void (*)(uint64_t))MEMORY[0x263F45770];
    sub_241B4E9F8((uint64_t)v29, &qword_26B038880, MEMORY[0x263F45770]);
    sub_241B4E9F8((uint64_t)v31, &qword_26B038880, v41);
    (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v26, v16);
    goto LABEL_7;
  }
  id v46 = v78;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v37 + 32))(v78, v36, v16);
  sub_241B4EAB0(&qword_268D42C18, MEMORY[0x263F45770]);
  int v68 = sub_241CDB050();
  id v47 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
  v47(v46, v16);
  uint64_t v48 = (void (*)(uint64_t))MEMORY[0x263F45770];
  sub_241B4E9F8((uint64_t)v29, &qword_26B038880, MEMORY[0x263F45770]);
  sub_241B4E9F8((uint64_t)v31, &qword_26B038880, v48);
  v47(v26, v16);
  sub_241B4E9F8((uint64_t)v22, &qword_26B038880, v48);
  if ((v68 & 1) == 0) {
    return 0;
  }
LABEL_10:
  uint64_t v50 = v70;
  uint64_t v49 = v71;
  if ((sub_241A91014(*(void *)&v70[v32[6]], *(void *)&v71[v32[6]]) & 1) == 0) {
    return 0;
  }
  uint64_t v51 = (void (*)(uint64_t))MEMORY[0x263F062D0];
  uint64_t v52 = v75;
  sub_241B4E98C((uint64_t)&v50[v32[7]], (uint64_t)v75, &qword_26B038F10, MEMORY[0x263F062D0]);
  id v53 = v79;
  sub_241B4E98C((uint64_t)&v49[v32[7]], (uint64_t)v79, &qword_26B038F10, v51);
  uint64_t v54 = (uint64_t)v69;
  uint64_t v55 = (uint64_t)&v69[*(int *)(v74 + 48)];
  sub_241B4E98C((uint64_t)v52, (uint64_t)v69, &qword_26B038F10, v51);
  sub_241B4E98C((uint64_t)v53, v55, &qword_26B038F10, v51);
  uint64_t v57 = v76;
  uint64_t v56 = v77;
  uint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
  if (v58(v54, 1, v77) == 1)
  {
    id v59 = (void (*)(uint64_t))MEMORY[0x263F062D0];
    sub_241B4E9F8((uint64_t)v53, &qword_26B038F10, MEMORY[0x263F062D0]);
    sub_241B4E9F8((uint64_t)v52, &qword_26B038F10, v59);
    if (v58(v55, 1, v56) == 1)
    {
      sub_241B4E9F8(v54, &qword_26B038F10, MEMORY[0x263F062D0]);
      return 1;
    }
    goto LABEL_16;
  }
  uint64_t v60 = v73;
  sub_241B4E98C(v54, (uint64_t)v73, &qword_26B038F10, MEMORY[0x263F062D0]);
  if (v58(v55, 1, v56) == 1)
  {
    uint64_t v61 = (void (*)(uint64_t))MEMORY[0x263F062D0];
    sub_241B4E9F8((uint64_t)v79, &qword_26B038F10, MEMORY[0x263F062D0]);
    sub_241B4E9F8((uint64_t)v52, &qword_26B038F10, v61);
    (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v60, v56);
LABEL_16:
    uint64_t v42 = &qword_268D42C00;
    char v43 = &qword_26B038F10;
    uint64_t v44 = (void (*)(uint64_t))MEMORY[0x263F062D0];
    uint64_t v45 = v54;
    goto LABEL_8;
  }
  os_log_type_t v62 = v72;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v57 + 32))(v72, v55, v56);
  sub_241B4EAB0(&qword_268D42C10, MEMORY[0x263F062D0]);
  char v63 = sub_241CDB050();
  id v64 = *(void (**)(unsigned char *, uint64_t))(v57 + 8);
  v64(v62, v56);
  uint64_t v65 = (void (*)(uint64_t))MEMORY[0x263F062D0];
  sub_241B4E9F8((uint64_t)v79, &qword_26B038F10, MEMORY[0x263F062D0]);
  sub_241B4E9F8((uint64_t)v52, &qword_26B038F10, v65);
  v64(v60, v56);
  sub_241B4E9F8(v54, &qword_26B038F10, v65);
  return (v63 & 1) != 0;
}

void sub_241B4E928(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_241B49130(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_241B4E98C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241B49130(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241B4E9F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241B49130(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241B4EA54(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241B4E928(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_241B4EAB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SnidgetFeedItemGeneratorRequest(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B033898);
}

uint64_t sub_241B4EB18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for HostingConfigurationContent()
{
  return sub_241A91234();
}

uint64_t sub_241B4EB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SnidgetFeedItemMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_241B4EBF0()
{
  unint64_t result = qword_26B038440;
  if (!qword_26B038440)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B038440);
  }
  return result;
}

uint64_t sub_241B4EC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_241B4EC38()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SnidgetFeedItemMetadata(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_241B4ED0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v41 = *(void *)(a3 + 16);
  uint64_t v3 = *(void *)(v41 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v43 = sub_241CD7A10();
  uint64_t v5 = *(void *)(v43 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v45 = sub_241CD6810();
  uint64_t v7 = *(void *)(v45 - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8 | v6 | 7;
  uint64_t v10 = v6 + 1;
  uint64_t v42 = v5;
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v11 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v11 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v12 = v8 + 8;
  uint64_t v44 = *(void *)(v45 - 8);
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v13 = *(void *)(*(void *)(v45 - 8) + 64);
  }
  else {
    uint64_t v13 = *(void *)(*(void *)(v45 - 8) + 64) + 1;
  }
  int v14 = *(_DWORD *)(v3 + 80);
  uint64_t v15 = v9 | v14 & 0xF8;
  if (v15 != 7
    || ((*(_DWORD *)(v7 + 80) | v6 | v14) & 0x100000) != 0
    || v13
     + (((v8 | v6) + ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v9)
     + ((v8
       + 8
       + ((v11 + 7 + ((v6 + 1) & ~(unint64_t)v6)) & 0xFFFFFFFFFFFFFFF8)) & ~v8) > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = v18 + ((v15 + 16) & ~v15);
    swift_retain();
  }
  else
  {
    size_t __n = v11;
    size_t v39 = v13;
    uint64_t v40 = v11 + 7;
    uint64_t v20 = ~v9;
    unint64_t v21 = ~(unint64_t)v6;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16))(a1, a2, v41);
    unint64_t v22 = ((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = (uint64_t)a2 + v4 + 7;
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = *(void *)((v23 & 0xFFFFFFFFFFFFFFF8) + 8);
    if ((v25 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v22 = *(_OWORD *)v24;
    }
    else
    {
      uint64_t v26 = *v24;
      sub_241A3731C(*v24, *(void *)((v23 & 0xFFFFFFFFFFFFFFF8) + 8));
      *(void *)unint64_t v22 = v26;
      *(void *)(v22 + 8) = v25;
    }
    uint64_t v27 = ~v8;
    uint64_t v28 = (unsigned char *)((v22 + v9 + 16) & v20);
    uint64_t v29 = (unsigned char *)(((unint64_t)v24 + v9 + 16) & v20);
    *uint64_t v28 = *v29;
    uint64_t v30 = (void *)((unint64_t)&v28[v10] & v21);
    uint64_t v31 = (const void *)((unint64_t)&v29[v10] & v21);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v31, 1, v43))
    {
      memcpy(v30, v31, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v30, v31, v43);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v30, 0, 1, v43);
    }
    uint64_t v32 = (void *)(((unint64_t)v30 + v40) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v33 = (void *)(((unint64_t)v31 + v40) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v32 = *v33;
    uint64_t v34 = (void *)(((unint64_t)v32 + v12) & v27);
    uint64_t v35 = (const void *)(((unint64_t)v33 + v12) & v27);
    uint64_t v36 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48);
    swift_bridgeObjectRetain();
    if (v36(v35, 1, v45))
    {
      memcpy(v34, v35, v39);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v44 + 16))(v34, v35, v45);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v34, 0, 1, v45);
    }
    return a1;
  }
  return (uint64_t *)v19;
}

uint64_t sub_241B4F0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = (uint64_t *)((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = v4[1];
  if ((v5 & 0x3000000000000000) == 0) {
    sub_241A37374(*v4, v5);
  }
  uint64_t v6 = sub_241CD7A10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = sub_241CD6810();
  uint64_t v17 = *(void *)(v9 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v11 = (v8 + (((unint64_t)v4 + (v8 | v10 | 7) + 16) & ~(v8 | v10 | 7)) + 1) & ~v8;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v6);
  }
  uint64_t v12 = v11 + *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v12;
  }
  unint64_t v13 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v14 = (v10 + v13 + 8) & ~v10;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v9);
  if (!result)
  {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
    return v16(v14, v9);
  }
  return result;
}

uint64_t sub_241B4F2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v6 + a2;
  uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  if ((v10 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v7 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_241A3731C(*v9, *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8));
    *(void *)unint64_t v7 = v11;
    *(void *)(v7 + 8) = v10;
  }
  uint64_t v12 = sub_241CD7A10();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = sub_241CD6810();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v14 | v17 | 7;
  uint64_t v19 = (unsigned char *)((v7 + v18 + 16) & ~v18);
  uint64_t v20 = (unsigned char *)(((unint64_t)v9 + v18 + 16) & ~v18);
  *uint64_t v19 = *v20;
  unint64_t v21 = (void *)((unint64_t)&v19[v14 + 1] & ~v14);
  unint64_t v22 = (const void *)((unint64_t)&v20[v14 + 1] & ~v14);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v22, 1, v12))
  {
    int v23 = *(_DWORD *)(v13 + 84);
    size_t v24 = *(void *)(v13 + 64);
    if (v23) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v24 + 1;
    }
    memcpy(v21, v22, v25);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v21, v22, v12);
    uint64_t v27 = *(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56);
    uint64_t v26 = v13 + 56;
    v27(v21, 0, 1, v12);
    int v23 = *(_DWORD *)(v26 + 28);
    size_t v24 = *(void *)(v26 + 8);
  }
  if (v23) {
    size_t v28 = v24;
  }
  else {
    size_t v28 = v24 + 1;
  }
  uint64_t v29 = (void *)(((unint64_t)v21 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)(((unint64_t)v22 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v29 = *v30;
  uint64_t v31 = (void *)(((unint64_t)v29 + v17 + 8) & ~v17);
  uint64_t v32 = (const void *)(((unint64_t)v30 + v17 + 8) & ~v17);
  uint64_t v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v33(v32, 1, v15))
  {
    if (*(_DWORD *)(v16 + 84)) {
      size_t v34 = *(void *)(v16 + 64);
    }
    else {
      size_t v34 = *(void *)(v16 + 64) + 1;
    }
    memcpy(v31, v32, v34);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v31, v32, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v31, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_241B4F584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  uint64_t v46 = a1;
  unint64_t v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v7[1];
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v11 = v10 & 0x3000000000000000;
  if ((v9 & 0x3000000000000000) != 0)
  {
    if (!v11)
    {
      uint64_t v12 = *(void *)v8;
      sub_241A3731C(*(void *)v8, *(void *)(v8 + 8));
      *unint64_t v7 = v12;
      v7[1] = v10;
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_241A37374(*v7, v9);
LABEL_6:
    *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
    goto LABEL_7;
  }
  uint64_t v29 = *(void *)v8;
  sub_241A3731C(*(void *)v8, *(void *)(v8 + 8));
  uint64_t v30 = *v7;
  unint64_t v31 = v7[1];
  *unint64_t v7 = v29;
  v7[1] = v10;
  sub_241A37374(v30, v31);
LABEL_7:
  uint64_t v13 = sub_241CD7A10();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = sub_241CD6810();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = v15 | v18 | 7;
  uint64_t v20 = (unsigned char *)(((unint64_t)v7 + v19 + 16) & ~v19);
  unint64_t v21 = (unsigned char *)((v8 + v19 + 16) & ~v19);
  *uint64_t v20 = *v21;
  unint64_t v22 = (void *)((unint64_t)&v20[v15 + 1] & ~v15);
  int v23 = (void *)((unint64_t)&v21[v15 + 1] & ~v15);
  size_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v15) = v24(v22, 1, v13);
  int v25 = v24(v23, 1, v13);
  if (v15)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v22, v23, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
      goto LABEL_19;
    }
    int v26 = *(_DWORD *)(v14 + 84);
    size_t v27 = *(void *)(v14 + 64);
  }
  else
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v22, v23, v13);
      goto LABEL_19;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v22, v13);
    int v26 = *(_DWORD *)(v14 + 84);
    size_t v27 = *(void *)(v14 + 64);
  }
  if (v26) {
    size_t v28 = v27;
  }
  else {
    size_t v28 = v27 + 1;
  }
  memcpy(v22, v23, v28);
LABEL_19:
  if (*(_DWORD *)(v14 + 84)) {
    uint64_t v32 = *(void *)(v14 + 64);
  }
  else {
    uint64_t v32 = *(void *)(v14 + 64) + 1;
  }
  uint64_t v33 = (void *)(((unint64_t)v22 + v32 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v34 = (void *)(((unint64_t)v23 + v32 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v33 = *v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = (void *)(((unint64_t)v33 + v18 + 8) & ~v18);
  uint64_t v36 = (void *)(((unint64_t)v34 + v18 + 8) & ~v18);
  uint64_t v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v38 = v37(v35, 1, v16);
  int v39 = v37(v36, 1, v16);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v35, v36, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v35, 0, 1, v16);
      return v46;
    }
    int v40 = *(_DWORD *)(v17 + 84);
    size_t v41 = *(void *)(v17 + 64);
  }
  else
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v35, v36, v16);
      return v46;
    }
    uint64_t v43 = *(void (**)(void *, uint64_t))(v17 + 8);
    uint64_t v42 = v17 + 8;
    v43(v35, v16);
    int v40 = *(_DWORD *)(v42 + 76);
    size_t v41 = *(void *)(v42 + 56);
  }
  if (v40) {
    size_t v44 = v41;
  }
  else {
    size_t v44 = v41 + 1;
  }
  memcpy(v35, v36, v44);
  return v46;
}

uint64_t sub_241B4F96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  uint64_t v9 = sub_241CD7A10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = sub_241CD6810();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v11 | v14 | 7;
  uint64_t v16 = (unsigned char *)(((unint64_t)v7 + v15 + 16) & ~v15);
  uint64_t v17 = (unsigned char *)(((unint64_t)v8 + v15 + 16) & ~v15);
  unsigned char *v16 = *v17;
  uint64_t v18 = (void *)((unint64_t)&v16[v11 + 1] & ~v11);
  uint64_t v19 = (const void *)((unint64_t)&v17[v11 + 1] & ~v11);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v19, 1, v9))
  {
    int v20 = *(_DWORD *)(v10 + 84);
    size_t v21 = *(void *)(v10 + 64);
    if (v20) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v21 + 1;
    }
    memcpy(v18, v19, v22);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v18, v19, v9);
    size_t v24 = *(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56);
    uint64_t v23 = v10 + 56;
    v24(v18, 0, 1, v9);
    int v20 = *(_DWORD *)(v23 + 28);
    size_t v21 = *(void *)(v23 + 8);
  }
  if (v20) {
    size_t v25 = v21;
  }
  else {
    size_t v25 = v21 + 1;
  }
  int v26 = (void *)(((unint64_t)v18 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v27 = (void *)(((unint64_t)v19 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  *int v26 = *v27;
  size_t v28 = (void *)(((unint64_t)v26 + v14 + 8) & ~v14);
  uint64_t v29 = (const void *)(((unint64_t)v27 + v14 + 8) & ~v14);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v29, 1, v12))
  {
    if (*(_DWORD *)(v13 + 84)) {
      size_t v30 = *(void *)(v13 + 64);
    }
    else {
      size_t v30 = *(void *)(v13 + 64) + 1;
    }
    memcpy(v28, v29, v30);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v28, v29, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v28, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_241B4FC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  uint64_t v42 = a1;
  unint64_t v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v7[1];
  if ((v9 & 0x3000000000000000) != 0) {
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v10 & 0x3000000000000000) != 0)
  {
    sub_241A37374(*v7, v9);
LABEL_4:
    *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
    goto LABEL_5;
  }
  uint64_t v27 = *v7;
  *unint64_t v7 = *(void *)v8;
  v7[1] = v10;
  sub_241A37374(v27, v9);
LABEL_5:
  uint64_t v11 = sub_241CD7A10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 | v16 | 7;
  uint64_t v18 = (unsigned char *)(((unint64_t)v7 + v17 + 16) & ~v17);
  uint64_t v19 = (unsigned char *)((v8 + v17 + 16) & ~v17);
  unsigned char *v18 = *v19;
  int v20 = (void *)((unint64_t)&v18[v13 + 1] & ~v13);
  size_t v21 = (void *)((unint64_t)&v19[v13 + 1] & ~v13);
  size_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  LODWORD(v13) = v22(v20, 1, v11);
  int v23 = v22(v21, 1, v11);
  if (v13)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v20, v21, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
      goto LABEL_17;
    }
    int v24 = *(_DWORD *)(v12 + 84);
    size_t v25 = *(void *)(v12 + 64);
  }
  else
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v20, v21, v11);
      goto LABEL_17;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v20, v11);
    int v24 = *(_DWORD *)(v12 + 84);
    size_t v25 = *(void *)(v12 + 64);
  }
  if (v24) {
    size_t v26 = v25;
  }
  else {
    size_t v26 = v25 + 1;
  }
  memcpy(v20, v21, v26);
LABEL_17:
  if (*(_DWORD *)(v12 + 84)) {
    uint64_t v28 = *(void *)(v12 + 64);
  }
  else {
    uint64_t v28 = *(void *)(v12 + 64) + 1;
  }
  uint64_t v29 = (void *)(((unint64_t)v20 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v30 = (void *)(((unint64_t)v21 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v29 = *v30;
  swift_bridgeObjectRelease();
  unint64_t v31 = (void *)(((unint64_t)v29 + v16 + 8) & ~v16);
  uint64_t v32 = (void *)(((unint64_t)v30 + v16 + 8) & ~v16);
  uint64_t v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v34 = v33(v31, 1, v14);
  int v35 = v33(v32, 1, v14);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v31, v32, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v31, 0, 1, v14);
      return v42;
    }
    int v36 = *(_DWORD *)(v15 + 84);
    size_t v37 = *(void *)(v15 + 64);
  }
  else
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v31, v32, v14);
      return v42;
    }
    int v39 = *(void (**)(void *, uint64_t))(v15 + 8);
    uint64_t v38 = v15 + 8;
    v39(v31, v14);
    int v36 = *(_DWORD *)(v38 + 76);
    size_t v37 = *(void *)(v38 + 56);
  }
  if (v36) {
    size_t v40 = v37;
  }
  else {
    size_t v40 = v37 + 1;
  }
  memcpy(v31, v32, v40);
  return v42;
}

uint64_t sub_241B4FFB8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v41 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v41 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v40 = sub_241CD7A10();
  uint64_t v7 = *(void *)(v40 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(sub_241CD6810() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  unsigned int v13 = v12 - 1;
  if (!v12) {
    unsigned int v13 = 0;
  }
  if (v9 <= v13) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = v9;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v6 <= v15) {
    unsigned int v16 = v15;
  }
  else {
    unsigned int v16 = v6;
  }
  if (v8) {
    uint64_t v17 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v18 = *(void *)(v5 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = *(void *)(v10 + 64);
  if (v12) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = v21 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = v19 | v20 | 7;
  uint64_t v24 = v19 + 1;
  uint64_t v25 = v17 + 7;
  uint64_t v26 = v20 + 8;
  if (a2 > v16)
  {
    unint64_t v27 = v22
        + (((v19 | v20) + ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v23)
        + ((v26 + ((v25 + (v24 & ~v19)) & 0xFFFFFFFFFFFFFFF8)) & ~v20);
    char v28 = 8 * v27;
    if (v27 > 3) {
      goto LABEL_24;
    }
    unsigned int v30 = ((a2 - v16 + ~(-1 << v28)) >> v28) + 1;
    if (HIWORD(v30))
    {
      int v29 = *(_DWORD *)((char *)a1 + v27);
      if (!v29) {
        goto LABEL_41;
      }
      goto LABEL_31;
    }
    if (v30 > 0xFF)
    {
      int v29 = *(unsigned __int16 *)((char *)a1 + v27);
      if (!*(unsigned __int16 *)((char *)a1 + v27)) {
        goto LABEL_41;
      }
      goto LABEL_31;
    }
    if (v30 >= 2)
    {
LABEL_24:
      int v29 = *((unsigned __int8 *)a1 + v27);
      if (!*((unsigned char *)a1 + v27)) {
        goto LABEL_41;
      }
LABEL_31:
      int v31 = (v29 - 1) << v28;
      if (v27 > 3) {
        int v31 = 0;
      }
      if (v27)
      {
        if (v27 <= 3) {
          int v32 = v27;
        }
        else {
          int v32 = 4;
        }
        switch(v32)
        {
          case 2:
            int v33 = *a1;
            break;
          case 3:
            int v33 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v33 = *(_DWORD *)a1;
            break;
          default:
            int v33 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v33 = 0;
      }
      return v16 + (v33 | v31) + 1;
    }
  }
LABEL_41:
  if (v6 >= v15)
  {
    int v36 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48);
    return v36(a1, v6, v41);
  }
  else
  {
    unint64_t v34 = (v24 + (((((unint64_t)a1 + v18 + 7) & 0xFFFFFFFFFFFFFFF8) + v23 + 16) & ~v23)) & ~v19;
    if (v9 == v15)
    {
      if (v8 >= 2)
      {
        unsigned int v35 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v34, v8, v40);
        goto LABEL_59;
      }
      return 0;
    }
    uint64_t v38 = (uint64_t *)((v25 + v34) & 0xFFFFFFFFFFFFFFF8);
    if ((v14 & 0x80000000) != 0)
    {
      if (v12 >= 2)
      {
        unsigned int v35 = (*(uint64_t (**)(unint64_t))(v11 + 48))(((unint64_t)v38 + v26) & ~v20);
LABEL_59:
        if (v35 >= 2) {
          return v35 - 1;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
    uint64_t v39 = *v38;
    if ((unint64_t)*v38 >= 0xFFFFFFFF) {
      LODWORD(v39) = -1;
    }
    return (v39 + 1);
  }
}

void sub_241B50378(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v51 = *(void *)(a4 + 16);
  uint64_t v6 = *(void *)(v51 - 8);
  uint64_t v50 = v6;
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v49 = sub_241CD7A10();
  uint64_t v8 = *(void *)(v49 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  int v11 = 0;
  uint64_t v12 = *(void *)(sub_241CD6810() - 8);
  uint64_t v13 = v12;
  unsigned int v14 = *(_DWORD *)(v12 + 84);
  if (v14) {
    unsigned int v15 = v14 - 1;
  }
  else {
    unsigned int v15 = 0;
  }
  uint64_t v16 = *(void *)(v6 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = *(void *)(v12 + 64);
  if (v10 > v15) {
    unsigned int v15 = v10;
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v20 = 0x7FFFFFFF;
  }
  else {
    unsigned int v20 = v15;
  }
  if (v7 <= v20) {
    unsigned int v21 = v20;
  }
  else {
    unsigned int v21 = v7;
  }
  if (v9) {
    uint64_t v22 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v23 = v17 | v18 | 7;
  uint64_t v24 = v17 + 1;
  uint64_t v25 = v22 + 7;
  uint64_t v26 = v22 + 7 + ((v17 + 1) & ~v17);
  uint64_t v27 = v18 + 8;
  if (!v14) {
    ++v19;
  }
  size_t v28 = (((v17 | v18) + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v23)
      + v19
      + ((v18 + 8 + (v26 & 0xFFFFFFFFFFFFFFF8)) & ~v18);
  if (a3 <= v21) {
    goto LABEL_28;
  }
  if (v28 <= 3)
  {
    unsigned int v29 = ((a3 - v21 + ~(-1 << (8 * v28))) >> (8 * v28)) + 1;
    if (HIWORD(v29))
    {
      int v11 = 4;
      if (v21 >= a2) {
        goto LABEL_36;
      }
LABEL_29:
      unsigned int v30 = ~v21 + a2;
      if (v28 < 4)
      {
        int v31 = (v30 >> (8 * v28)) + 1;
        if (v28)
        {
          int v32 = v30 & ~(-1 << (8 * v28));
          bzero(a1, v28);
          if (v28 == 3)
          {
            *(_WORD *)a1 = v32;
            a1[2] = BYTE2(v32);
          }
          else if (v28 == 2)
          {
            *(_WORD *)a1 = v32;
          }
          else
          {
            *a1 = v32;
          }
        }
      }
      else
      {
        bzero(a1, v28);
        *(_DWORD *)a1 = v30;
        int v31 = 1;
      }
      switch(v11)
      {
        case 1:
          a1[v28] = v31;
          break;
        case 2:
          *(_WORD *)&a1[v28] = v31;
          break;
        case 3:
LABEL_80:
          __break(1u);
          JUMPOUT(0x241B5086CLL);
        case 4:
          *(_DWORD *)&a1[v28] = v31;
          break;
        default:
          return;
      }
      return;
    }
    if (v29 >= 0x100) {
      int v11 = 2;
    }
    else {
      int v11 = v29 > 1;
    }
LABEL_28:
    if (v21 >= a2) {
      goto LABEL_36;
    }
    goto LABEL_29;
  }
  int v11 = 1;
  if (v21 < a2) {
    goto LABEL_29;
  }
LABEL_36:
  uint64_t v33 = ~v18;
  uint64_t v34 = ~v17;
  unsigned int v35 = a1;
  switch(v11)
  {
    case 1:
      a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 2:
      *(_WORD *)&a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 3:
      goto LABEL_80;
    case 4:
      *(_DWORD *)&a1[v28] = 0;
      goto LABEL_40;
    default:
LABEL_40:
      if (!a2) {
        return;
      }
LABEL_41:
      if (v7 >= v20)
      {
        uint64_t v41 = v51;
        uint64_t v42 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
        uint64_t v43 = a2;
        uint64_t v44 = v7;
LABEL_53:
        v42(v35, v43, v44, v41);
        return;
      }
      int v36 = (unsigned char *)((((unint64_t)&a1[v16 + 7] & 0xFFFFFFFFFFFFFFF8) + v23 + 16) & ~v23);
      if (v20 < a2)
      {
        size_t v37 = ((v27 + (v26 & 0xFFFFFFF8)) & v33) + v19;
        if (v37 <= 3) {
          int v38 = ~(-1 << (8 * (((v27 + (v26 & 0xF8)) & v33) + v19)));
        }
        else {
          int v38 = -1;
        }
        if (v37)
        {
          int v39 = v38 & (~v20 + a2);
          if (v37 <= 3) {
            int v40 = ((v27 + (v26 & 0xFFFFFFF8)) & v33) + v19;
          }
          else {
            int v40 = 4;
          }
          bzero(v36, v37);
          switch(v40)
          {
            case 2:
              *(_WORD *)int v36 = v39;
              break;
            case 3:
              *(_WORD *)int v36 = v39;
              _OWORD v36[2] = BYTE2(v39);
              break;
            case 4:
              *(_DWORD *)int v36 = v39;
              break;
            default:
              unsigned char *v36 = v39;
              break;
          }
        }
        return;
      }
      unsigned int v35 = (unsigned char *)((unint64_t)&v36[v24] & v34);
      if (v10 == v20)
      {
        if (v9 < 2) {
          return;
        }
        uint64_t v43 = (a2 + 1);
        uint64_t v42 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        uint64_t v44 = v9;
        uint64_t v41 = v49;
        goto LABEL_53;
      }
      uint64_t v45 = (void *)((unint64_t)&v35[v25] & 0xFFFFFFFFFFFFFFF8);
      if ((v15 & 0x80000000) != 0)
      {
        if (v14 >= 2)
        {
          unint64_t v47 = ((unint64_t)v45 + v27) & v33;
          uint64_t v48 = *(void (**)(unint64_t, void))(v13 + 56);
          v48(v47, (a2 + 1));
        }
      }
      else
      {
        if ((a2 & 0x80000000) != 0) {
          uint64_t v46 = a2 ^ 0x80000000;
        }
        else {
          uint64_t v46 = (a2 - 1);
        }
        *uint64_t v45 = v46;
      }
      break;
  }
}

char *sub_241B508A4(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[8] = *((unsigned char *)a2 + 8);
    uint64_t v8 = a2[2];
    *((void *)a1 + 2) = v8;
    uint64_t v9 = *(int *)(a3 + 28);
    unsigned int v10 = &a1[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_241CD7DE0();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    unsigned int v14 = v4;
    unsigned int v15 = v8;
    v13(v10, v11, v12);
    uint64_t v16 = *(int *)(a3 + 32);
    uint64_t v17 = *(char **)((char *)a2 + v16);
    *(void *)&v7[v16] = v17;
    id v18 = v17;
  }
  return v7;
}

void sub_241B509B8(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_241CD7DE0();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = *(id *)((char *)a1 + *(int *)(a2 + 32));
}

uint64_t sub_241B50A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_241CD7DE0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v6;
  id v14 = v7;
  v12(v9, v10, v11);
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v16;
  id v17 = v16;
  return a1;
}

uint64_t sub_241B50B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v9 = *(void **)(a2 + 16);
  uint64_t v10 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v9;
  id v11 = v9;

  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_241CD7DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = *(int *)(a3 + 32);
  id v17 = *(void **)(a1 + v16);
  id v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  id v19 = v18;

  return a1;
}

uint64_t sub_241B50BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_241CD7DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_241B50C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_241CD7DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  return a1;
}

uint64_t sub_241B50D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B50D5C);
}

uint64_t sub_241B50D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_241CD7DE0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241B50E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B50E20);
}

uint64_t sub_241B50E20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_241CD7DE0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_241B50EC8()
{
  uint64_t result = sub_241CD7DE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241B50F78(uint64_t a1, uint64_t a2)
{
  sub_241B49130(0, &qword_26B038880, MEMORY[0x263F45770]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for SnidgetFeedItemGeneratorFailure(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241B510C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SnidgetFeedItemGeneratorFailure()
{
  return &type metadata for SnidgetFeedItemGeneratorFailure;
}

unint64_t sub_241B51100()
{
  unint64_t result = qword_268D42C20;
  if (!qword_268D42C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42C20);
  }
  return result;
}

uint64_t sub_241B51154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)v3;
  uint64_t v8 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  sub_241B548EC(a1, (uint64_t)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  sub_241AAB9B4((uint64_t)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  uint64_t v13 = (void *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v13 = a2;
  v13[1] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241B54B88(v3, (uint64_t)v3, (void (*)(void *, uint64_t))sub_241B54AD8, v12, v7);
  swift_release_n();
  return swift_release();
}

uint64_t sub_241B512E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  type metadata accessor for SummariesHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v7 = objc_msgSend(v6, sel_bundleIdentifier);

  if (v7)
  {
    uint64_t v8 = sub_241CDB0D0();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  uint64_t v11 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_uniqueIdentifier);
  uint64_t v12 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_uniqueIdentifier + 8);
  swift_getObjectType();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v8;
  v13[3] = v10;
  v13[4] = v11;
  v13[5] = v12;
  v13[6] = a1;
  v13[7] = a2;
  v13[8] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_241CD7340();

  return swift_release();
}

uint64_t sub_241B51474(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v6 = *v3;
  uint64_t v7 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BD94A0();
  uint64_t v14 = (uint64_t)v4 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_statisticsQueryConfiguration;
  sub_241B548EC((uint64_t)v4 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request, (uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v15 = (void (*)(char *, char *, uint64_t))sub_241CDB120();
  uint64_t v17 = sub_241BD95E0(a1, v14, (uint64_t)v13, v15, v16, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  id v18 = (void *)swift_allocObject();
  long long v18[2] = v17;
  v18[3] = v4;
  uint64_t v19 = v23;
  v18[4] = v22;
  v18[5] = v19;
  v18[6] = v6;
  unsigned int v20 = (void *)swift_allocObject();
  v20[2] = v4;
  v20[3] = sub_241B544AC;
  v20[4] = v18;
  v20[5] = v6;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_241B512E8((uint64_t)sub_241B544C0, (uint64_t)v20);
  swift_release();
  return swift_release();
}

uint64_t sub_241B51700@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_241B553FC(0, &qword_26B0321D8, MEMORY[0x263F46C18]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = *a1;
  *a2 = v8;
  sub_241CD99C0();
  uint64_t v9 = sub_241CD99E0();
  if (v9)
  {
    uint64_t v10 = v9;
    if (*(void *)(v9 + 16) && (unint64_t v11 = sub_241C0B70C(v8), (v12 & 1) != 0))
    {
      unint64_t v13 = v11;
      uint64_t v23 = *(void *)(v10 + 56);
      uint64_t v14 = sub_241CD9960();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v24 = v2;
      uint64_t v16 = v15;
      (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v7, v23 + *(void *)(v15 + 72) * v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v14);
    }
    else
    {
      uint64_t v17 = sub_241CD9960();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = sub_241CD9960();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v7, 1, 1, v18);
  }
  sub_241A68948();
  uint64_t v20 = v19;
  sub_241CD99F0();
  sub_241CD9AB0();
  swift_bridgeObjectRelease();
  sub_241B546C0((uint64_t)v7, &qword_26B0321D8, MEMORY[0x263F46C18]);
  return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 0, 1, v20);
}

uint64_t sub_241B519C8(void *a1, char a2, uint64_t a3, void (*a4)(void *))
{
  sub_241AABAD0();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v14 = (char *)&v21 - v13;
  if (a2)
  {
    *uint64_t v10 = a1;
    swift_storeEnumTagMultiPayload();
    id v19 = a1;
    a4(v10);
    uint64_t v17 = (uint64_t (*)(void))sub_241AABAD0;
    uint64_t v18 = (uint64_t)v10;
  }
  else
  {
    sub_241B548EC(a3, (uint64_t)&v21 - v13, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    uint64_t v15 = (void *)*((void *)v14 + 4);
    id v16 = a1;

    *((void *)v14 + 4) = a1;
    sub_241B548EC((uint64_t)v14, (uint64_t)v10, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
    a4(v10);
    sub_241A960B8(a1);
    sub_241B555D4((uint64_t)v10, (uint64_t (*)(void))sub_241AABAD0);
    uint64_t v17 = type metadata accessor for SummariesFullProfileExecutor.StepResult;
    uint64_t v18 = (uint64_t)v14;
  }
  return sub_241B555D4(v18, v17);
}

void sub_241B51B94(id a1, char a2, uint64_t a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    id v9 = a1;
    a4(a1, 1);
  }
  else
  {
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = a4;
    v11[3] = a5;
    v11[4] = a6;
    sub_241AF1514(a1);
    swift_retain();
    sub_241B51474(a1, (uint64_t)sub_241B555C4, (uint64_t)v11);
    swift_release();
  }

  sub_241A960B8(a1);
}

void sub_241B51C78(void *a1, char a2, void (*a3)(void *, uint64_t), uint64_t a4)
{
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v24 = a1;
    a3(a1, 1);
    sub_241A960B8(a1);
  }
  else
  {
    id v12 = a1;
    sub_241CDA0F0();
    unint64_t v13 = sub_241CDA190();
    os_log_type_t v14 = sub_241CDB630();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      size_t v28 = a3;
      id v16 = (uint8_t *)v15;
      uint64_t v17 = swift_slowAlloc();
      id v26 = v12;
      uint64_t v18 = v17;
      uint64_t v30 = v17;
      uint64_t v27 = a4;
      *(_DWORD *)id v16 = 136446210;
      uint64_t v25 = v16 + 4;
      uint64_t v19 = sub_241CDC270();
      uint64_t v29 = sub_241A33FE4(v19, v20, &v30);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v13, v14, "[%{public}s] Generated trend sharable models successfully", v16, 0xCu);
      swift_arrayDestroy();
      uint64_t v21 = v18;
      id v12 = v26;
      MEMORY[0x245637F20](v21, -1, -1);
      uint64_t v22 = v16;
      a3 = v28;
      MEMORY[0x245637F20](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v23 = v12;
    a3(a1, 0);
    sub_241A960B8(a1);
    sub_241A960B8(a1);
  }
}

void sub_241B51F0C(uint64_t a1, void *a2, void *a3, void (*a4)(void *, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    id v14 = a3;
    a4(a3, 1);
    uint64_t v15 = a3;
LABEL_4:

    return;
  }
  if (a2)
  {
    id v34 = a2;
    a4(a2, 0);
    uint64_t v15 = v34;
    goto LABEL_4;
  }
  sub_241CDA0F0();
  swift_retain_n();
  id v16 = sub_241CDA190();
  os_log_type_t v17 = sub_241CDB660();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    LODWORD(v34) = v18;
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v33 = v20;
    int v31 = v19;
    os_log_t v32 = v16;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v36 = v20;
    v30[1] = v19 + 4;
    id v21 = objc_msgSend(*(id *)(a6+ OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)), sel_identifier);
    uint64_t v22 = sub_241CDB0D0();
    unint64_t v24 = v23;

    uint64_t v35 = sub_241A33FE4(v22, v24, &v36);
    sub_241CDBBF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    id v26 = v31;
    os_log_t v25 = v32;
    _os_log_impl(&dword_241A23000, v32, (os_log_type_t)v34, "Unexpectedly received a nil statistics collection for %s when it had a sample within that date interval", v31, 0xCu);
    uint64_t v27 = v33;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v27, -1, -1);
    MEMORY[0x245637F20](v26, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_241B554C4();
  size_t v28 = (void *)swift_allocError();
  *uint64_t v29 = 0;
  a4(v28, 1);
}

void sub_241B52254(id a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(id, uint64_t), uint64_t a8, uint64_t a9)
{
  if (a2)
  {
    id v13 = a1;
    a7(a1, 1);
  }
  else
  {
    sub_241B5489C(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8E0F8]);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB730;
    *(void *)(v18 + 32) = a5;
    *(void *)(v18 + 40) = a6;
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a1;
    v19[3] = a3;
    v19[4] = a4;
    v19[5] = a5;
    void v19[6] = a6;
    v19[7] = a7;
    v19[8] = a8;
    v19[9] = a9;
    sub_241B54880(a1, 0);
    swift_bridgeObjectRetain();
    sub_241B54880(a1, 0);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_241CD7E30();
    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_241B5488C(a1, a2 & 1, MEMORY[0x263F8EED8]);
}

void sub_241B523E4(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(void, void), uint64_t a9, NSObject *a10)
{
  uint64_t v121 = a5;
  unint64_t v122 = a7;
  uint64_t v118 = a4;
  uint64_t v119 = a6;
  uint64_t v120 = a3;
  os_log_t v129 = a10;
  sub_241B553FC(0, &qword_26B035540, MEMORY[0x263F45738]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v109 - v14;
  uint64_t v16 = sub_241CD79A0();
  uint64_t v125 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v128 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  id v124 = (char *)&v109 - v19;
  uint64_t v20 = sub_241CD6D70();
  uint64_t v116 = *(void *)(v20 - 8);
  uint64_t v117 = v20;
  MEMORY[0x270FA5388](v20);
  id v115 = (char *)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241CDA1A0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v109 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v30 = (char *)&v109 - v29;
  id v126 = (id)a1;
  if (a2)
  {
    id v43 = (id)a1;
    uint64_t v44 = (void *)sub_241CD6A30();
    unsigned __int8 v45 = objc_msgSend(v44, sel_hk_isObjectNotFoundError);

    if (v45)
    {
      sub_241CDA0F0();
      uint64_t v46 = v121;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      unint64_t v47 = sub_241CDA190();
      os_log_type_t v48 = sub_241CDB670();
      int v49 = v48;
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v50 = swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        uint64_t v113 = a9;
        uint64_t v128 = (char *)v51;
        v132[0] = v51;
        *(_DWORD *)uint64_t v50 = 136446978;
        os_log_t v127 = v47;
        uint64_t v52 = sub_241CDC270();
        LODWORD(v129) = v49;
        uint64_t v130 = sub_241A33FE4(v52, v53, v132);
        unsigned __int8 v114 = a8;
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        uint64_t v112 = v22;
        uint64_t v54 = v23;
        *(_WORD *)(v50 + 12) = 2080;
        uint64_t v55 = v115;
        sub_241CD7E40();
        uint64_t v56 = sub_241CD6D20();
        unint64_t v58 = v57;
        (*(void (**)(char *, uint64_t))(v116 + 8))(v55, v117);
        uint64_t v130 = sub_241A33FE4(v56, v58, v132);
        sub_241CDBBF0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 22) = 2080;
        uint64_t v130 = v118;
        uint64_t v131 = v46;
        sub_241B5489C(0, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D8F0]);
        swift_bridgeObjectRetain();
        uint64_t v59 = sub_241CDB120();
        uint64_t v130 = sub_241A33FE4(v59, v60, v132);
        sub_241CDBBF0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 32) = 2080;
        unint64_t v61 = v122;
        swift_bridgeObjectRetain();
        uint64_t v130 = sub_241A33FE4(v119, v61, v132);
        a8 = v114;
        sub_241CDBBF0();
        swift_bridgeObjectRelease_n();
        os_log_t v62 = v127;
        _os_log_impl(&dword_241A23000, v127, (os_log_type_t)v129, "[%{public}s] No summaries were found for transaction %s with identifier %s and name %s", (uint8_t *)v50, 0x2Au);
        char v63 = v128;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v63, -1, -1);
        uint64_t v64 = v50;
        a1 = (unint64_t)v126;
        MEMORY[0x245637F20](v64, -1, -1);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v30, v112);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release_n();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v30, v22);
      }
      a8(MEMORY[0x263F8EE78], 0);
      id v104 = (void (*)(id))MEMORY[0x263F8EEA0];
      unsigned __int8 v105 = (void *)a1;
    }
    else
    {
      sub_241CDA0F0();
      sub_241A960AC((id)a1, 1);
      uint64_t v65 = v121;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_241A960AC((id)a1, 1);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_241CDA190();
      os_log_type_t v67 = sub_241CDB650();
      int v68 = v67;
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v69 = swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        uint64_t v113 = a9;
        uint64_t v128 = (char *)v70;
        v132[0] = v70;
        *(_DWORD *)uint64_t v69 = 136447234;
        LODWORD(v127) = v68;
        uint64_t v71 = sub_241CDC270();
        os_log_t v129 = v66;
        uint64_t v130 = sub_241A33FE4(v71, v72, v132);
        unsigned __int8 v114 = a8;
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        uint64_t v111 = v23;
        uint64_t v112 = v22;
        *(_WORD *)(v69 + 12) = 2080;
        id v73 = v115;
        sub_241CD7E40();
        uint64_t v74 = sub_241CD6D20();
        unint64_t v76 = v75;
        (*(void (**)(char *, uint64_t))(v116 + 8))(v73, v117);
        uint64_t v130 = sub_241A33FE4(v74, v76, v132);
        sub_241CDBBF0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v69 + 22) = 2080;
        uint64_t v130 = v118;
        uint64_t v131 = v65;
        sub_241B5489C(0, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D8F0]);
        swift_bridgeObjectRetain();
        uint64_t v77 = sub_241CDB120();
        uint64_t v130 = sub_241A33FE4(v77, v78, v132);
        sub_241CDBBF0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v69 + 32) = 2080;
        unint64_t v79 = v122;
        swift_bridgeObjectRetain();
        uint64_t v130 = sub_241A33FE4(v119, v79, v132);
        sub_241CDBBF0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v69 + 42) = 2082;
        uint64_t v130 = (uint64_t)v126;
        id v80 = v126;
        sub_241A3DA64();
        uint64_t v81 = sub_241CDB130();
        uint64_t v130 = sub_241A33FE4(v81, v82, v132);
        a8 = v114;
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        uint64_t v83 = (void (*)(id))MEMORY[0x263F8EEA0];
        sub_241B5488C(v126, 1, MEMORY[0x263F8EEA0]);
        sub_241B5488C(v126, 1, v83);
        os_log_t v84 = v129;
        _os_log_impl(&dword_241A23000, v129, (os_log_type_t)v127, "[%{public}s] Could not get summaries for transaction %s with identifier %s and names %s. %{public}s", (uint8_t *)v69, 0x34u);
        uint64_t v85 = v128;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v85, -1, -1);
        uint64_t v86 = v69;
        a1 = (unint64_t)v126;
        MEMORY[0x245637F20](v86, -1, -1);

        (*(void (**)(char *, uint64_t))(v111 + 8))(v27, v112);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release_n();
        uint64_t v106 = (void (*)(id))MEMORY[0x263F8EEA0];
        sub_241B5488C((id)a1, 1, MEMORY[0x263F8EEA0]);
        sub_241B5488C((id)a1, 1, v106);

        (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
      }
      id v107 = (id)a1;
      a8(a1, 1);
      uint64_t v108 = (void (*)(id))MEMORY[0x263F8EEA0];
      sub_241B5488C((id)a1, 1, MEMORY[0x263F8EEA0]);
      unsigned __int8 v105 = (void *)a1;
      id v104 = v108;
    }
    sub_241B5488C(v105, 1, v104);
  }
  else
  {
    uint64_t v110 = v28;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_241CDBF50();
    }
    else
    {
      uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v113 = a9;
    unsigned __int8 v114 = a8;
    uint64_t v111 = v23;
    uint64_t v112 = v22;
    if (v31)
    {
      uint64_t v123 = v31;
      if (v31 < 1)
      {
        __break(1u);
        return;
      }
      uint64_t v32 = 0;
      os_log_t v127 = (os_log_t)(a1 & 0xC000000000000001);
      uint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48);
      id v34 = (void (**)(char *, char *, uint64_t))(v125 + 32);
      unint64_t v35 = MEMORY[0x263F8EE78];
      uint64_t v36 = v123;
      do
      {
        if (v127) {
          id v37 = (id)MEMORY[0x245637160](v32, a1);
        }
        else {
          id v37 = *(id *)(a1 + 8 * v32 + 32);
        }
        int v38 = v37;
        uint64_t v130 = (uint64_t)v37;
        sub_241B533E4((id *)&v130, (uint64_t)v15);

        if ((*v33)(v15, 1, v16) == 1)
        {
          sub_241B546C0((uint64_t)v15, &qword_26B035540, MEMORY[0x263F45738]);
        }
        else
        {
          int v39 = *v34;
          int v40 = v124;
          (*v34)(v124, v15, v16);
          v39(v128, v40, v16);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v35 = sub_241AF76C4(0, *(void *)(v35 + 16) + 1, 1, v35);
          }
          unint64_t v42 = *(void *)(v35 + 16);
          unint64_t v41 = *(void *)(v35 + 24);
          if (v42 >= v41 >> 1) {
            unint64_t v35 = sub_241AF76C4(v41 > 1, v42 + 1, 1, v35);
          }
          *(void *)(v35 + 16) = v42 + 1;
          v39((char *)(v35+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(void *)(v125 + 72) * v42), v128, v16);
          a1 = (unint64_t)v126;
          uint64_t v36 = v123;
        }
        ++v32;
      }
      while (v36 != v32);
    }
    else
    {
      unint64_t v35 = MEMORY[0x263F8EE78];
    }
    sub_241B5488C((id)a1, 0, MEMORY[0x263F8EEA0]);
    uint64_t v87 = v110;
    sub_241CDA0F0();
    uint64_t v88 = v121;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    id v89 = sub_241CDA190();
    os_log_type_t v90 = sub_241CDB670();
    int v91 = v90;
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v92 = swift_slowAlloc();
      uint64_t v128 = (char *)swift_slowAlloc();
      v132[0] = (uint64_t)v128;
      *(_DWORD *)uint64_t v92 = 136447234;
      LODWORD(v127) = v91;
      uint64_t v93 = sub_241CDC270();
      uint64_t v130 = sub_241A33FE4(v93, v94, v132);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 12) = 2048;
      uint64_t v95 = *(void *)(v35 + 16);
      swift_bridgeObjectRelease();
      uint64_t v130 = v95;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 22) = 2080;
      int v96 = v115;
      sub_241CD7E40();
      uint64_t v97 = sub_241CD6D20();
      unint64_t v99 = v98;
      (*(void (**)(char *, uint64_t))(v116 + 8))(v96, v117);
      uint64_t v130 = sub_241A33FE4(v97, v99, v132);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 32) = 2080;
      uint64_t v130 = v118;
      uint64_t v131 = v88;
      sub_241B5489C(0, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D8F0]);
      swift_bridgeObjectRetain();
      uint64_t v100 = sub_241CDB120();
      uint64_t v130 = sub_241A33FE4(v100, v101, v132);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 42) = 2080;
      unint64_t v102 = v122;
      swift_bridgeObjectRetain();
      uint64_t v130 = sub_241A33FE4(v119, v102, v132);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v89, (os_log_type_t)v127, "[%{public}s] Retrieved %ld summaries for transaction %s with plugin %s and identifier %s", (uint8_t *)v92, 0x34u);
      os_log_type_t v103 = v128;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v103, -1, -1);
      MEMORY[0x245637F20](v92, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v110, v112);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v87, v112);
    }
    v114(v35, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_241B533E4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_241CDA1A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *a1;
  sub_241CD7950();
  if (v2)
  {
    sub_241CDA0F0();
    id v10 = v2;
    id v11 = v2;
    uint64_t v12 = sub_241CDA190();
    os_log_type_t v13 = sub_241CDB650();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v28 = a2;
      uint64_t v15 = v14;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v30 = v27;
      *(_DWORD *)uint64_t v15 = 136446466;
      uint64_t v16 = sub_241CDC270();
      uint64_t v29 = sub_241A33FE4(v16, v17, &v30);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      uint64_t v29 = (uint64_t)v2;
      id v18 = v2;
      sub_241A3DA64();
      uint64_t v19 = sub_241CDB130();
      uint64_t v29 = sub_241A33FE4(v19, v20, &v30);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241A23000, v12, v13, "[%{public}s] Could not create PluginSharableModel from HKSharedSummary; skipping individual model. Error: %{public}s",
        (uint8_t *)v15,
        0x16u);
      uint64_t v21 = v27;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v21, -1, -1);
      uint64_t v22 = v15;
      a2 = v28;
      MEMORY[0x245637F20](v22, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v25 = sub_241CD79A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a2, 1, 1, v25);
  }
  else
  {
    uint64_t v23 = sub_241CD79A0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a2, 0, 1, v23);
  }
}

uint64_t sub_241B53718(void *a1, char a2, uint64_t a3, void (*a4)(void *), uint64_t a5)
{
  sub_241B544D8();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (unint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241B545D8(0, &qword_26B032210, &qword_26B032218, MEMORY[0x263F47048]);
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v25 - v15;
  if (a2)
  {
    *uint64_t v12 = a1;
    swift_storeEnumTagMultiPayload();
    id v24 = a1;
    a4(v12);
    return sub_241B555D4((uint64_t)v12, (uint64_t (*)(void))sub_241B544D8);
  }
  else
  {
    uint64_t v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
    uint64_t v18 = *(void *)(a3 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_uniqueIdentifier);
    unint64_t v25 = *(void *)(a3 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_uniqueIdentifier + 8);
    uint64_t v26 = v18;
    uint64_t v28 = a4;
    uint64_t v19 = a3 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request;
    unint64_t v20 = *(void **)(v19 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
    uint64_t v29 = 91;
    unint64_t v30 = 0xE100000000000000;
    sub_241CDC270();
    uint64_t v27 = a5;
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    sub_241BD9CC0((uint64_t)v16, v17, (uint64_t)a1, v26, v25, v20, v29, v30);
    swift_bridgeObjectRelease();
    uint64_t v21 = (uint64_t)v12 + *(int *)(v14 + 48);
    uint64_t v22 = (void (*)(uint64_t))MEMORY[0x263F47048];
    sub_241B5456C((uint64_t)v16, (uint64_t)v12, &qword_26B032218, MEMORY[0x263F47048]);
    sub_241B5456C(v17, v21, &qword_26B032218, v22);
    swift_storeEnumTagMultiPayload();
    v28(v12);
    sub_241B555D4((uint64_t)v12, (uint64_t (*)(void))sub_241B544D8);
    return sub_241B5471C((uint64_t)v16, &qword_26B032210, &qword_26B032218, v22);
  }
}

void sub_241B539D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v64 = a6;
  uint64_t v67 = a2;
  uint64_t v10 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v61 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD6EE0();
  uint64_t v62 = *(void *)(v12 - 8);
  uint64_t v63 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B545D8(0, &qword_26B032220, &qword_26B032228, MEMORY[0x263F47050]);
  uint64_t v65 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v60 = (uint64_t)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v66 = (uint64_t)&v53 - v18;
  sub_241B545D8(0, &qword_26B032210, &qword_26B032218, MEMORY[0x263F47048]);
  uint64_t v20 = v19;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  unint64_t v25 = (char *)&v53 - v24;
  sub_241B544D8();
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (id *)((char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241B548EC(a1, (uint64_t)v28, (uint64_t (*)(void))sub_241B544D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v29 = *v28;
    id v30 = *v28;
    a4(v29, 1);
  }
  else
  {
    uint64_t v58 = a5;
    uint64_t v59 = a4;
    uint64_t v31 = *(int *)(v20 + 48);
    uint64_t v32 = (uint64_t)&v25[v31];
    uint64_t v33 = (uint64_t)v28 + v31;
    sub_241B54640((uint64_t)v28, (uint64_t)v25);
    sub_241B54640(v33, v32);
    uint64_t v34 = (uint64_t)v25;
    uint64_t v35 = v66;
    uint64_t v56 = (void *)(v66 + *(int *)(v65 + 48));
    uint64_t v57 = v34;
    uint64_t v55 = (void *)(a3 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_trendAnalysisEngine);
    uint64_t v54 = *(NSObject **)(a3 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_engineParameters);
    uint64_t v36 = (uint64_t)&v23[*(int *)(v20 + 48)];
    id v37 = (void (*)(uint64_t))MEMORY[0x263F47048];
    sub_241B5456C(v34, (uint64_t)v23, &qword_26B032218, MEMORY[0x263F47048]);
    sub_241B5456C(v32, v36, &qword_26B032218, v37);
    uint64_t v38 = sub_241CD99C0();
    uint64_t v39 = a3 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request;
    int v40 = *(int **)(v39 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
    uint64_t v68 = 91;
    unint64_t v69 = 0xE100000000000000;
    sub_241CDC270();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    uint64_t v41 = v68;
    unint64_t v42 = v69;
    sub_241CD6EA0();
    uint64_t v52 = v40;
    uint64_t v43 = (uint64_t)v56;
    sub_241BDB490(v35, v56, v67, v55, v54, (uint64_t)v23, v36, v38, v52, v41, v42);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v14, v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = (void (*)(uint64_t))MEMORY[0x263F47048];
    sub_241B546C0(v36, &qword_26B032218, MEMORY[0x263F47048]);
    sub_241B546C0((uint64_t)v23, &qword_26B032218, v44);
    uint64_t v45 = v66;
    uint64_t v46 = v60;
    uint64_t v47 = v60 + *(int *)(v65 + 48);
    os_log_type_t v48 = (void (*)(uint64_t))MEMORY[0x263F47050];
    sub_241B5456C(v66, v60, &qword_26B032228, MEMORY[0x263F47050]);
    sub_241B5456C(v43, v47, &qword_26B032228, v48);
    id v49 = sub_241BDCD74(v46, v47, v67);
    sub_241B546C0(v47, &qword_26B032228, v48);
    sub_241B546C0(v46, &qword_26B032228, v48);
    sub_241A313AC(0, &qword_26B030450);
    uint64_t v50 = (uint64_t)v61;
    sub_241CD7A80();
    id v51 = HKCodableSummaryTrendResults.init(values:version:)((unint64_t)v49, v50);
    v59(v51, 0);

    sub_241B5471C(v45, &qword_26B032220, &qword_26B032228, v48);
    sub_241B5471C(v57, &qword_26B032210, &qword_26B032218, v44);
  }
}

uint64_t sub_241B5405C()
{
  sub_241B555D4(v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_configuration;
  uint64_t v2 = sub_241CD9A30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_241A31190(v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_trendAnalysisEngine);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_statisticsQueryConfiguration;
  uint64_t v4 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_anchorDate;
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_endingDate, v6);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_queryDateInterval;
  uint64_t v9 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_241B54250()
{
  return type metadata accessor for StatisticsTrendSharableModelStep();
}

uint64_t type metadata accessor for StatisticsTrendSharableModelStep()
{
  uint64_t result = qword_26B036148;
  if (!qword_26B036148) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B542A4()
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD9A30();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_241CD9D00();
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_241CD6D00();
        if (v4 <= 0x3F)
        {
          uint64_t result = sub_241CD6810();
          if (v5 <= 0x3F) {
            return swift_updateClassMetadata2();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_241B54440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241B51154(a1, a2, a3);
}

uint64_t sub_241B54464()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_241B544AC(uint64_t a1)
{
  sub_241B539D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(id, uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_241B544C0(uint64_t a1, char a2)
{
  return sub_241B554AC(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_241B53718);
}

void sub_241B544D8()
{
  if (!qword_26B0369D8)
  {
    sub_241B545D8(255, &qword_26B032210, &qword_26B032218, MEMORY[0x263F47048]);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDC210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0369D8);
    }
  }
}

uint64_t sub_241B5456C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241B553FC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_241B545D8(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_241B553FC(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_241B54640(uint64_t a1, uint64_t a2)
{
  sub_241B553FC(0, &qword_26B032218, MEMORY[0x263F47048]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241B546C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241B553FC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241B5471C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241B545D8(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_241B54778()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

void sub_241B547C0(void *a1, char a2)
{
  sub_241B52254(a1, a2 & 1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void (**)(id, uint64_t))(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64));
}

uint64_t sub_241B547F8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

void sub_241B54848(unint64_t a1, char a2)
{
  sub_241B523E4(a1, a2 & 1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void (**)(void, void))(v2 + 56), *(void *)(v2 + 64), *(NSObject **)(v2 + 72));
}

id sub_241B54880(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

void sub_241B5488C(id a1, char a2, void (*a3)(id))
{
  if (a2) {

  }
  else {
    a3(a1);
  }
}

void sub_241B5489C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D310]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241B548EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241B54954()
{
  uint64_t v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void **)(v0 + v3);
  if (v6 != (void *)1)
  {
  }
  uint64_t v7 = *(void **)(v5 + 16);
  if (v7 != (void *)1)
  {
  }
  uint64_t v8 = v5 + *(int *)(v1 + 28);
  uint64_t v9 = sub_241CD6EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_241B54AD8(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void (**)(void *))(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241B519C8(a1, v4, v2 + v6, v7);
}

void sub_241B54B88(char *a1, uint64_t a2, void (*a3)(void *, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_241CD68F0();
  uint64_t v69 = *(void *)(v10 - 8);
  uint64_t v70 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v68 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B553FC(0, &qword_26B02E900, MEMORY[0x263F46B28]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v66 = (char *)&v63 - v13;
  uint64_t v14 = (void (*)(uint64_t))MEMORY[0x263F062D0];
  sub_241B553FC(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v63 - v16;
  uint64_t v18 = (void (*)(void *, uint64_t))swift_allocObject();
  *((void *)v18 + 2) = a2;
  *((void *)v18 + 3) = a3;
  uint64_t v65 = a3;
  *((void *)v18 + 4) = a4;
  *((void *)v18 + 5) = a5;
  sub_241A313AC(0, qword_26B038E80);
  uint64_t v19 = &a1[OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_queryDateInterval];
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  uint64_t v67 = v19;
  v22(v17, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
  uint64_t v23 = a1;
  swift_retain();
  swift_retain();
  uint64_t v24 = (char *)sub_241CDBAD0();
  sub_241B546C0((uint64_t)v17, &qword_26B038F10, v14);
  unint64_t v25 = &v23[OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request];
  uint64_t v26 = *(void **)&v25[*(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)];
  self;
  uint64_t v27 = swift_dynamicCastObjCClass();
  if (v27)
  {
    uint64_t v63 = v27;
    uint64_t v64 = (id *)v25;
    uint64_t v65 = v18;
    id v28 = v26;
    id v29 = v66;
    sub_241CD9A20();
    uint64_t v30 = sub_241CD9820();
    uint64_t v31 = *(void *)(v30 - 8);
    int v32 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30);
    uint64_t v33 = MEMORY[0x263F8EE78];
    if (v32 == 1)
    {
      sub_241B546C0((uint64_t)v29, &qword_26B02E900, MEMORY[0x263F46B28]);
      id v34 = 0;
      aBlock[0] = v33;
      if (v24) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v40 = sub_241CD9810();
      (*(void (**)(id, uint64_t))(v31 + 8))(v29, v30);
      if (v40)
      {
        uint64_t v41 = *(void *)(v40 + 16);
        if (v41)
        {
          uint64_t v66 = v23;
          aBlock[0] = MEMORY[0x263F8EE78];
          sub_241CDBE80();
          unint64_t v42 = self;
          uint64_t v43 = 0;
          do
          {
            uint64_t v44 = v43 + 1;
            id v45 = objc_msgSend(v42, sel_predicateForCategorySamplesWithOperatorType_value_, 4, *(void *)(v40 + 8 * v43 + 32));
            sub_241CDBE60();
            sub_241CDBE90();
            sub_241CDBEA0();
            sub_241CDBE70();
            uint64_t v43 = v44;
          }
          while (v41 != v44);
          swift_bridgeObjectRelease();
          uint64_t v23 = v66;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        sub_241A313AC(0, (unint64_t *)&qword_26B030370);
        uint64_t v46 = (void *)sub_241CDB2A0();
        swift_bridgeObjectRelease();
        id v34 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v46);
      }
      else
      {
        id v34 = 0;
      }
      aBlock[0] = MEMORY[0x263F8EE78];
      if (v24)
      {
LABEL_4:
        id v35 = v34;
        uint64_t v36 = v24;
        MEMORY[0x2456365D0]();
        if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
          sub_241CDB2F0();
        sub_241CDB310();
        sub_241CDB2E0();
        if (!v34) {
          goto LABEL_22;
        }
        goto LABEL_19;
      }
    }
    id v47 = v34;
    if (!v34)
    {
LABEL_22:

      sub_241A313AC(0, (unint64_t *)&qword_26B030370);
      id v49 = (void *)sub_241CDB2A0();
      swift_bridgeObjectRelease();
      id v50 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v49);

      sub_241CD9CC0();
      uint64_t v51 = sub_241CDB8F0();
      id v52 = v28;
      id v53 = v50;
      uint64_t v66 = v24;
      id v54 = v53;
      sub_241CD9CD0();
      uint64_t v55 = v68;
      sub_241CD9980();
      id v56 = objc_allocWithZone(MEMORY[0x263F0A7E0]);
      uint64_t v57 = (void *)sub_241CD6C60();
      uint64_t v58 = (void *)sub_241CD6890();
      id v59 = objc_msgSend(v56, sel_initWithSampleType_samplePredicate_options_anchorDate_intervalComponents_, v63, v54, v51, v57, v58);

      (*(void (**)(char *, uint64_t))(v69 + 8))(v55, v70);
      uint64_t v60 = (void *)sub_241CD6790();
      objc_msgSend(v59, sel_setDateInterval_, v60);

      unint64_t v61 = (void *)swift_allocObject();
      v61[2] = sub_241B55494;
      v61[3] = v65;
      v61[4] = v23;
      aBlock[4] = sub_241B55558;
      uint64_t aBlock[5] = v61;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_241BC0A40;
      aBlock[3] = &unk_26F5C35F8;
      uint64_t v62 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      sub_241B5557C((uint64_t)sub_241B55558);
      swift_release();
      objc_msgSend(v59, sel_setInitialResultsHandler_, v62);
      _Block_release(v62);
      swift_release();
      objc_msgSend(v64[2], sel_executeQuery_, v59);
      swift_release();

      goto LABEL_23;
    }
LABEL_19:
    id v48 = v34;
    MEMORY[0x2456365D0]();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_241CDB2F0();
    }
    sub_241CDB310();
    sub_241CDB2E0();
    goto LABEL_22;
  }
  sub_241B554C4();
  id v37 = (void *)swift_allocError();
  *uint64_t v38 = 1;
  id v39 = v37;
  v65(v37, 1);
  sub_241A960B8(v37);

  swift_release();
  id v34 = v24;
LABEL_23:
}

void sub_241B553FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241B55454()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_241B55494(uint64_t a1, char a2)
{
  return sub_241B554AC(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_241B51B94);
}

uint64_t sub_241B554AC(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, void, void, void, void, void))
{
  return a3(a1, a2 & 1, v3[2], v3[3], v3[4], v3[5]);
}

unint64_t sub_241B554C4()
{
  unint64_t result = qword_268D42C28;
  if (!qword_268D42C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42C28);
  }
  return result;
}

uint64_t sub_241B55518()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241B55558(uint64_t a1, void *a2, void *a3)
{
  sub_241B51F0C(a1, a2, a3, *(void (**)(void *, uint64_t))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_241B55564(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241B55574()
{
  return swift_release();
}

uint64_t sub_241B5557C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_241B5558C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241B555C4(void *a1, char a2)
{
  sub_241B51C78(a1, a2 & 1, *(void (**)(void *, uint64_t))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_241B555D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for StatisticsTrendSharableModelStep.StatisticsTrendProcessingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241B55700);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StatisticsTrendSharableModelStep.StatisticsTrendProcessingError()
{
  return &type metadata for StatisticsTrendSharableModelStep.StatisticsTrendProcessingError;
}

unint64_t sub_241B5573C()
{
  unint64_t result = qword_268D42C30;
  if (!qword_268D42C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42C30);
  }
  return result;
}

uint64_t sub_241B55790()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries33SnidgetsFeedItemGeneratorPipeline_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries33SnidgetsFeedItemGeneratorPipeline_context;
  uint64_t v4 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241B55884()
{
  return type metadata accessor for SnidgetsFeedItemGeneratorPipeline();
}

uint64_t type metadata accessor for SnidgetsFeedItemGeneratorPipeline()
{
  uint64_t result = qword_26B033938;
  if (!qword_26B033938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B558D8()
{
  return swift_retain();
}

uint64_t sub_241B558EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries33SnidgetsFeedItemGeneratorPipeline_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ActivityDataTypeDetailDescriptionDataSource()
{
  uint64_t result = qword_26B030AD0;
  if (!qword_26B030AD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B559B0()
{
  uint64_t result = sub_241CD8C50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_241B55A60()
{
  id result = objc_msgSend(self, sel_activitySummaryType);
  qword_26B0411C8 = (uint64_t)result;
  return result;
}

void sub_241B55A9C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  LODWORD(v61) = a3;
  uint64_t v57 = a2;
  uint64_t v55 = *(void *)v3;
  uint64_t v6 = sub_241CD8C50();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v56 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v60 = (char *)v53 - v10;
  uint64_t v11 = sub_241CDA1A0();
  uint64_t v58 = *(void *)(v11 - 8);
  uint64_t v59 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = qword_26B041168;
  *(void *)&v4[qword_26B041168] = 0;
  *(void *)&v4[qword_26B0411C0] = 0;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v63 = v6;
  v15(&v4[qword_26B0411D0], a1, v6);
  swift_retain();
  sub_241CD8C10();
  sub_241A311E0(v65, v66);
  sub_241CD7260();
  uint64_t v16 = (void *)sub_241CD8C30();
  id v17 = objc_msgSend(v16, sel_profileIdentifier);

  sub_241CD8340();
  swift_allocObject();
  uint64_t v18 = sub_241CD8330();
  sub_241A31190((uint64_t)v65);
  *(void *)&v4[qword_26B0411B8] = v18;
  uint64_t v19 = (void *)sub_241CD8C30();
  id v20 = objc_msgSend(v19, sel_displayTypeController);

  if (v20)
  {
    uint64_t v62 = v7;
    if (qword_26B030AC8 != -1) {
      swift_once();
    }
    id v21 = objc_msgSend(v20, sel_displayTypeForObjectType_, qword_26B0411C8);

    if (v21)
    {
      id v22 = v21;
      uint64_t v23 = sub_241CD8C40();
      uint64_t v24 = type metadata accessor for ActivityDataTypeDescriptionProvider();
      swift_allocObject();
      unint64_t v25 = sub_241C886B8(v22, v23, 1);
      char v26 = (char)v61;
      if ((v61 & 1) == 0) {
        sub_241C88818(v57);
      }
      uint64_t v66 = v24;
      unint64_t v67 = sub_241B56788();
      v65[0] = (uint64_t)v25;
      sub_241CD82A0();
      swift_allocObject();
      swift_retain();
      uint64_t v27 = sub_241CD8290();
      *(void *)&v4[v14] = v25;
      swift_retain();
      swift_release();
      swift_release();
      sub_241AF8F78();
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_241CEB730;
      uint64_t v29 = MEMORY[0x263F440A0];
      *(void *)(v28 + 32) = v27;
      *(void *)(v28 + 40) = v29;
      swift_retain();
      sub_241CD8AE0();
      if (v26)
      {
        swift_retain();
        unsigned __int8 v52 = sub_241CD8C40();
        uint64_t v31 = v63;
        if (v52 <= 1u) {
          sub_241AFADFC();
        }
        swift_release();
        swift_release();
        swift_release();

        uint64_t v30 = v62;
      }
      else
      {

        swift_release();
        swift_release();
        uint64_t v30 = v62;
        uint64_t v31 = v63;
      }
    }
    else
    {
      swift_release();
      uint64_t v32 = (uint64_t)v13;
      sub_241CDA0E0();
      uint64_t v33 = v60;
      uint64_t v31 = v63;
      v15(v60, a1, v63);
      id v34 = sub_241CDA190();
      os_log_type_t v35 = sub_241CDB650();
      int v36 = v35;
      unint64_t v61 = v34;
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v57 = v32;
        uint64_t v38 = v37;
        uint64_t v54 = swift_slowAlloc();
        v65[0] = v54;
        *(_DWORD *)uint64_t v38 = 136315650;
        uint64_t v39 = sub_241CDC270();
        uint64_t v64 = sub_241A33FE4(v39, v40, v65);
        v53[1] = v65;
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 2080;
        v53[0] = v38 + 14;
        id v41 = (id)qword_26B0411C8;
        id v42 = objc_msgSend(v41, sel_description);
        uint64_t v43 = sub_241CDB0D0();
        LODWORD(v55) = v36;
        unint64_t v45 = v44;

        uint64_t v46 = v43;
        uint64_t v31 = v63;
        uint64_t v64 = sub_241A33FE4(v46, v45, v65);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 22) = 2080;
        id v47 = v60;
        v15(v56, (uint64_t)v60, v31);
        uint64_t v48 = sub_241CDB120();
        uint64_t v64 = sub_241A33FE4(v48, v49, v65);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        uint64_t v30 = v62;
        (*(void (**)(char *, uint64_t))(v62 + 8))(v47, v31);
        id v50 = v61;
        _os_log_impl(&dword_241A23000, v61, (os_log_type_t)v55, "[%s]: displayType for %s not available for context: %s", (uint8_t *)v38, 0x20u);
        uint64_t v51 = v54;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v51, -1, -1);
        MEMORY[0x245637F20](v38, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
      }
      else
      {
        uint64_t v30 = v62;
        (*(void (**)(char *, uint64_t))(v62 + 8))(v33, v31);

        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v32, v59);
      }
      sub_241CD8AE0();
    }
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(a1, v31);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_241B561E0()
{
  unint64_t v1 = v0;
  id v34 = (void *)*v0;
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v37 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD8020();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v30 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v30 - v13;
  sub_241CD7F00();
  sub_241CDA0E0();
  uint64_t v35 = v6;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v15(v12, v14, v5);
  int v36 = v4;
  uint64_t v16 = sub_241CDA190();
  os_log_type_t v17 = sub_241CDB670();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v33 = v2;
    uint64_t v20 = v19;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v39 = v32;
    *(_DWORD *)uint64_t v20 = 136315394;
    int v31 = v18;
    uint64_t v21 = sub_241CDC270();
    id v34 = v1;
    uint64_t v38 = sub_241A33FE4(v21, v22, &v39);
    os_log_t v30 = v16;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v15(v9, v12, v5);
    uint64_t v23 = sub_241CDB120();
    uint64_t v38 = sub_241A33FE4(v23, v24, &v39);
    unint64_t v1 = v34;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    unint64_t v25 = *(void (**)(char *, uint64_t))(v35 + 8);
    v25(v12, v5);
    os_log_t v26 = v30;
    _os_log_impl(&dword_241A23000, v30, (os_log_type_t)v31, "[%s]: Profile information updated. Updating data sources with activityMoveModeState: %s", (uint8_t *)v20, 0x16u);
    uint64_t v27 = v32;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v27, -1, -1);
    MEMORY[0x245637F20](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v33);
  }
  else
  {
    unint64_t v25 = *(void (**)(char *, uint64_t))(v35 + 8);
    v25(v12, v5);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v2);
  }
  if (*(void *)((char *)v1 + qword_26B041168))
  {
    swift_retain();
    uint64_t v28 = sub_241CD8010();
    sub_241C88818(v28);
    swift_release();
  }
  return ((uint64_t (*)(char *, uint64_t))v25)(v14, v5);
}

void sub_241B565DC()
{
}

uint64_t sub_241B5660C()
{
  uint64_t v1 = v0 + qword_26B0411D0;
  uint64_t v2 = sub_241CD8C50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_241B566A8()
{
  uint64_t v0 = sub_241CD8AD0() + qword_26B0411D0;
  uint64_t v1 = sub_241CD8C50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0, v1);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241B56780()
{
  return type metadata accessor for ActivityDataTypeDetailDescriptionDataSource();
}

unint64_t sub_241B56788()
{
  unint64_t result = qword_26B030928;
  if (!qword_26B030928)
  {
    type metadata accessor for ActivityDataTypeDescriptionProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030928);
  }
  return result;
}

uint64_t sub_241B567E0(uint64_t a1, uint64_t a2, char a3)
{
  char v5 = a3 & 1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + OBJC_IVAR____TtC9Summaries35AFibBurdenSummaryModelConfiguration_keyValueDomainChangePublisher) = 0;
  sub_241A31C5C(a2, v6 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  *(void *)(v6 + 16) = a1;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v5;
  return v6;
}

uint64_t sub_241B56860(uint64_t a1)
{
  uint64_t v65 = a1;
  uint64_t v74 = *v1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B57768(0, (unint64_t *)&qword_26B034DA8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v63 = (char *)&v53 - v4;
  sub_241B57460();
  uint64_t v56 = v5;
  uint64_t v55 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v54 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B57568();
  uint64_t v60 = v7;
  uint64_t v59 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v57 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B5769C();
  uint64_t v62 = v9;
  uint64_t v61 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v58 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD9D30();
  uint64_t v76 = *(void *)(v11 - 8);
  uint64_t v77 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v75 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B57768(0, &qword_26B032248, MEMORY[0x263F47160], v2);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v69 = (char *)&v53 - v14;
  uint64_t v66 = sub_241CD7650();
  uint64_t v15 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  os_log_type_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_241CD7690();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v64 = (id)sub_241CD76E0();
  sub_241AAD70C(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v72 = v20;
  uint64_t inited = swift_initStackObject();
  long long v73 = xmmword_241CEB710;
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v71 = sub_241A313AC(0, (unint64_t *)&qword_26B030398);
  id v70 = (id)*MEMORY[0x263F09BF8];
  *(void *)(inited + 32) = MEMORY[0x245636A00]();
  v80[0] = inited;
  sub_241CDB2E0();
  sub_241B57768(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v22 = sub_241CD73B0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 72);
  unint64_t v25 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_241CEB720;
  unint64_t v27 = v26 + v25;
  uint64_t v28 = *(void (**)(unint64_t, void, uint64_t))(v23 + 104);
  v28(v27, *MEMORY[0x263F45520], v22);
  v28(v27 + v24, *MEMORY[0x263F45538], v22);
  id v29 = v64;
  sub_241C5D74C(v26);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v30 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v30);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F45690], v66);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  uint64_t v66 = sub_241CD7710();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v19, v68);
  uint64_t v31 = sub_241CD9D40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v69, 1, 1, v31);
  uint64_t v74 = sub_241CDC270();
  uint64_t v68 = v32;
  sub_241CDB190();
  sub_241CDB0D0();
  uint64_t v33 = self;
  sub_241CD76B0();
  sub_241A311E0(v80, v81);
  id v34 = (void *)sub_241CD75B0();
  id v35 = objc_msgSend(v33, sel_hkhr_aFibBurdenSyncedDefaultsDomainWithHealthStore_, v34);

  sub_241A31190((uint64_t)v80);
  uint64_t v81 = sub_241A313AC(0, &qword_26B034D90);
  uint64_t v82 = MEMORY[0x263F47248];
  v80[0] = v35;
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v73;
  *(void *)(v36 + 32) = MEMORY[0x245636A00](v70);
  uint64_t v79 = v36;
  sub_241CDB2E0();
  (*(void (**)(char *, void, uint64_t))(v76 + 104))(v75, *MEMORY[0x263F47158], v77);
  sub_241CD9D70();
  swift_allocObject();
  uint64_t v37 = sub_241CD9D50();
  uint64_t v38 = OBJC_IVAR____TtC9Summaries35AFibBurdenSummaryModelConfiguration_keyValueDomainChangePublisher;
  uint64_t v39 = v78;
  *(void *)(v78 + OBJC_IVAR____TtC9Summaries35AFibBurdenSummaryModelConfiguration_keyValueDomainChangePublisher) = v37;
  uint64_t v40 = v39;
  uint64_t result = swift_release();
  if (*(void *)(v40 + v38))
  {
    swift_retain();
    uint64_t v42 = sub_241CD9D60();
    swift_release();
    v80[0] = v42;
    sub_241B57500();
    sub_241B57654(&qword_26B032660, (void (*)(uint64_t))sub_241B57500);
    uint64_t v43 = v54;
    sub_241CDA710();
    swift_release();
    sub_241B57654((unint64_t *)&qword_26B032358, (void (*)(uint64_t))sub_241B57460);
    unint64_t v44 = v57;
    uint64_t v45 = v56;
    sub_241CDA7D0();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v43, v45);
    uint64_t v46 = (void *)v66;
    v80[0] = v66;
    uint64_t v47 = sub_241CDB8A0();
    uint64_t v48 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v63, 1, 1, v47);
    sub_241A313AC(0, &qword_26B0303B8);
    sub_241B57654(&qword_26B0322C0, (void (*)(uint64_t))sub_241B57568);
    sub_241AAD6A4();
    unint64_t v49 = v58;
    uint64_t v50 = v60;
    sub_241CDA7E0();
    sub_241AAD7BC(v48);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v50);
    sub_241B57654(&qword_26B032620, (void (*)(uint64_t))sub_241B5769C);
    uint64_t v51 = v62;
    uint64_t v52 = sub_241CDA6D0();

    (*(void (**)(char *, uint64_t))(v61 + 8))(v49, v51);
    return v52;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241B57404()
{
  return swift_release();
}

uint64_t sub_241B57414()
{
  return type metadata accessor for AFibBurdenSummaryModelConfiguration();
}

uint64_t sub_241B5741C()
{
  return swift_updateClassMetadata2();
}

void sub_241B57460()
{
  if (!qword_26B032360)
  {
    sub_241B57500();
    sub_241B57654(&qword_26B032660, (void (*)(uint64_t))sub_241B57500);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032360);
    }
  }
}

void sub_241B57500()
{
  if (!qword_26B032668)
  {
    sub_241CD7760();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032668);
    }
  }
}

void sub_241B57568()
{
  if (!qword_26B0322C8)
  {
    sub_241A97F00();
    sub_241B57460();
    sub_241B57654(&qword_26B0325D0, (void (*)(uint64_t))sub_241A97F00);
    sub_241B57654((unint64_t *)&qword_26B032358, (void (*)(uint64_t))sub_241B57460);
    unint64_t v0 = sub_241CDA390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0322C8);
    }
  }
}

uint64_t sub_241B57654(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B5769C()
{
  if (!qword_26B032628)
  {
    sub_241B57568();
    sub_241A313AC(255, &qword_26B0303B8);
    sub_241B57654(&qword_26B0322C0, (void (*)(uint64_t))sub_241B57568);
    sub_241AAD6A4();
    unint64_t v0 = sub_241CDA4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032628);
    }
  }
}

void sub_241B57768(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B577CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B577E0);
}

uint64_t sub_241B577E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241B57890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B578A4);
}

void *sub_241B578A4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031DB0;
  if (!qword_26B031DB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B5799C()
{
  return sub_241B57AE8((unint64_t *)&qword_26B0320F0);
}

void sub_241B579D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241B57A6C(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B57A6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B57AB4()
{
  return sub_241B57AE8((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241B57AE8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B579D0(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241B57A6C((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241B57A6C(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B57BD4(uint64_t a1)
{
  uint64_t result = sub_241B57A6C(&qword_26B037EC8, (void (*)(uint64_t))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241B57C2C()
{
  return sub_241B57CCC(&qword_26B0383C0, &qword_26B0383C8, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241B57C7C()
{
  return sub_241B57CCC(&qword_26B032E10, &qword_26B032E18, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241B57CCC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B57D10(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B57D10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241B579D0(255, &qword_26B032118, MEMORY[0x263F44150]);
    v9[0] = v6;
    v9[1] = &type metadata for EmptySnidgetVisualizationView;
    void v9[2] = sub_241A3F5B0();
    v9[3] = sub_241A92E14();
    void v9[4] = sub_241B57AE8((unint64_t *)&qword_26B0320F0);
    v9[5] = sub_241B57AE8((unint64_t *)&qword_26B0320E0);
    v9[6] = sub_241A92E68();
    v9[7] = sub_241A92EBC();
    unint64_t v7 = a3(a1, v9);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241B57E2C(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3591C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v11 - 8);
  unsigned __int8 v105 = (char *)&v92 - v12;
  uint64_t v13 = sub_241CD6D00();
  MEMORY[0x270FA5388](v13 - 8);
  os_log_type_t v103 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3591C(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v15 - 8);
  id v104 = (char *)&v92 - v16;
  sub_241A3591C(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v100 = (char *)&v92 - v18;
  sub_241A3591C(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  unint64_t v99 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v106 = (char *)&v92 - v22;
  sub_241A3591C(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v23 - 8);
  unint64_t v25 = (char *)&v92 - v24;
  uint64_t v26 = sub_241CD69B0();
  uint64_t v101 = *(void *)(v26 - 8);
  uint64_t v102 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  id v29 = (char *)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  id v107 = (char *)&v92 - v30;
  id v31 = objc_msgSend(self, sel_sharedBehavior);
  if (!v31)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v32 = v31;
  id v33 = objc_msgSend(v31, sel_features);

  if (!v33)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unsigned int v34 = objc_msgSend(v33, sel_chamomile);

  if (!v34)
  {
    sub_241A41340();
    swift_allocError();
    *uint64_t v43 = 0;
LABEL_10:
    swift_willThrow();
    return;
  }
  uint64_t v97 = a2;
  uint64_t v98 = a3;
  id v35 = self;
  uint64_t v36 = (void *)*v4;
  id v37 = objc_msgSend(v35, sel_sharedInstanceForHealthStore_, *v4);
  if (!v37)
  {
LABEL_20:
    __break(1u);
    return;
  }
  uint64_t v38 = v37;
  sub_241B58980();
  uint64_t v39 = (void *)MEMORY[0x245636CC0]((id)*MEMORY[0x263F09F90]);
  id v40 = objc_msgSend(v38, sel_displayTypeForObjectType_, v39);

  if (!v40)
  {
    sub_241A3A824();
    swift_allocError();
    goto LABEL_10;
  }
  id v41 = v110;
  sub_241ADF898(a1);
  if (v41)
  {
  }
  else if (v42)
  {
    id v110 = v42;
    unint64_t v44 = (id *)((char *)v4 + *(int *)(type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider() + 20));
    uint64_t v45 = *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32);
    uint64_t v95 = v44;
    uint64_t v46 = *(id *)((char *)v44 + v45);
    id v94 = v46;
    type metadata accessor for MostRecentSampleSnidgetStringBuilder();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v36;
    uint64_t v48 = self;
    id v93 = v46;
    id v49 = v36;
    id v50 = objc_msgSend(v48, sel_sharedInstanceForHealthStore_, v49);
    uint64_t v51 = inited;
    *(void *)(inited + 32) = v50;
    if (v94)
    {
      id v52 = v93;
    }
    else
    {
      id v63 = v50;
      id v52 = objc_msgSend(v63, sel_createHKUnitPreferenceController);
    }
    *(void *)(v51 + 24) = v52;
    uint64_t v96 = v51;
    id v64 = v110;
    objc_msgSend(v110, sel_risk);
    id v65 = (id)HKUILocalizedStringForGAD7Risk();
    sub_241CDB0D0();

    uint64_t v66 = v107;
    SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    sub_241CD89A0();
    sub_241A3A9CC();
    uint64_t v68 = *(int *)(v67 + 48);
    id v94 = v40;
    objc_msgSend(v64, sel_dateData);
    id v69 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    v25[v68] = 0;
    uint64_t v70 = *MEMORY[0x263F43F18];
    uint64_t v71 = sub_241CD8610();
    uint64_t v72 = *(void *)(v71 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 104))(v25, v70, v71);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v25, 0, 1, v71);
    id v93 = (id)sub_241CD8990();
    uint64_t v73 = v101;
    uint64_t v74 = v102;
    unint64_t v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56);
    v75(v106, 1, 1, v102);
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v29, v66, v74);
    uint64_t v76 = v74;
    v75(v99, 1, 1, v74);
    uint64_t v108 = 0x5F74656764696E53;
    unint64_t v109 = 0xE800000000000000;
    id v77 = v95[2];
    id v78 = objc_msgSend(v77, sel_description);
    sub_241CDB0D0();

    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v79 = v100;
    sub_241CD8E50();
    swift_bridgeObjectRelease();
    uint64_t v80 = sub_241CD8E70();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v79, 0, 1, v80);
    sub_241CD8FF0();
    swift_allocObject();
    uint64_t v81 = sub_241CD8FE0();
    id v82 = v110;
    objc_msgSend(v110, sel_dateData);
    id v83 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v84 = (uint64_t)v104;
    sub_241CD79D0();
    uint64_t v85 = sub_241CD7A10();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v84, 0, 1, v85);
    uint64_t v86 = sub_241CD6810();
    uint64_t v87 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v105, 1, 1, v86);
    sub_241A92CDC(0);
    uint64_t v90 = v97;
    uint64_t v89 = v98;
    int v91 = (unsigned char *)(v98 + *(int *)(v88 + 52));
    swift_bridgeObjectRetain();
    sub_241B4A1A8(1, v84, v90, v87, v91);
    swift_release();

    *(void *)uint64_t v89 = v93;
    *(void *)(v89 + 8) = v81;
    *(unsigned char *)(v89 + 16) = 1;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v107, v76);
  }
  else
  {
    uint64_t v53 = sub_241CD7A10();
    uint64_t v54 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v104, 1, 1, v53);
    uint64_t v55 = sub_241CD6810();
    uint64_t v56 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v105, 1, 1, v55);
    uint64_t v57 = v97;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v54, v57, v56, v10);
    sub_241CD89A0();
    uint64_t v58 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v25, 1, 1, v58);
    id v59 = v40;
    uint64_t v60 = sub_241CD8990();
    sub_241A92CDC(0);
    uint64_t v62 = v98;
    sub_241A3AB20((uint64_t)v10, v98 + *(int *)(v61 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    *(void *)uint64_t v62 = v60;
    *(void *)(v62 + 8) = 0;
    *(unsigned char *)(v62 + 16) = 1;
    sub_241A3A914((uint64_t)v10);
  }
}

uint64_t sub_241B58924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241A3AB20(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241B5895C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_241B58980()
{
  unint64_t result = qword_26B038058;
  if (!qword_26B038058)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B038058);
  }
  return result;
}

ValueMetadata *type metadata accessor for PregnancyAdditionalInputSignalsProvider()
{
  return &type metadata for PregnancyAdditionalInputSignalsProvider;
}

uint64_t sub_241B589D4()
{
  sub_241A78918();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_241CEB720;
  sub_241A33460();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  sub_241B58BA0();
  *(void *)(inited + 32) = MEMORY[0x2456369F0]((id)*MEMORY[0x263F093C0]);
  sub_241CDB2E0();
  unint64_t v2 = inited;
  if (inited >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  if (*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_3:
  }
    sub_241C69AD0(v2);
LABEL_5:
  swift_bridgeObjectRelease();
  *(void *)(v0 + 56) = sub_241CD7DC0();
  *(void *)(v0 + 64) = sub_241B58BE0(&qword_26B035580, MEMORY[0x263F459A0]);
  sub_241A25BC8((uint64_t *)(v0 + 32));
  sub_241CD7DB0();
  sub_241CD96C0();
  *(void *)(v0 + 96) = sub_241CD9680();
  *(void *)(v0 + 104) = sub_241B58BE0((unint64_t *)&qword_26B035600, MEMORY[0x263F453F0]);
  sub_241A25BC8((uint64_t *)(v0 + 72));
  sub_241CD96B0();
  return v0;
}

unint64_t sub_241B58BA0()
{
  unint64_t result = qword_26B030390;
  if (!qword_26B030390)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B030390);
  }
  return result;
}

uint64_t sub_241B58BE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241B58C28(uint64_t a1)
{
  sub_241B5A674(0, &qword_26B0354A8, MEMORY[0x263F07508]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v47 = &v34[-v3];
  uint64_t v4 = sub_241CD6D70();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v40 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v39 = &v34[-v8];
  sub_241B5A674(0, &qword_268D42C58, MEMORY[0x263F459A8]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v34[-v10];
  uint64_t v12 = sub_241CD7E10();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v46 = &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14);
  uint64_t v38 = &v34[-v16];
  uint64_t v17 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = ~v17;
  uint64_t v20 = -v17;
  uint64_t v48 = a1;
  uint64_t v49 = a1 + 64;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  uint64_t v50 = v19;
  uint64_t v51 = 0;
  uint64_t v52 = v21 & v18;
  uint64_t v53 = 0;
  swift_bridgeObjectRetain();
  sub_241B59C70(&v54);
  sub_241B5A5F4((uint64_t)&v54, (uint64_t)v55);
  if (v56)
  {
    unint64_t v44 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v45 = v4;
    id v37 = (void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v36 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16);
    id v35 = (void (**)(unsigned char *, uint64_t))(v5 + 8);
    uint64_t v43 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    uint64_t v42 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48);
    id v41 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32);
    unint64_t v57 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v22 = (uint64_t)v47;
      sub_241CD6D10();
      if ((*v44)(v22, 1, v4) == 1)
      {
        sub_241B5A79C(v22, &qword_26B0354A8, MEMORY[0x263F07508]);
        uint64_t v23 = 1;
      }
      else
      {
        uint64_t v24 = v13;
        unint64_t v25 = v39;
        (*v37)(v39, v22, v4);
        (*v36)(v40, v25, v4);
        swift_bridgeObjectRetain();
        sub_241CD7DF0();
        uint64_t v26 = v25;
        uint64_t v13 = v24;
        (*v35)(v26, v4);
        uint64_t v23 = 0;
      }
      (*v43)(v11, v23, 1, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*v42)(v11, 1, v12) == 1)
      {
        sub_241B5A79C((uint64_t)v11, &qword_268D42C58, MEMORY[0x263F459A8]);
      }
      else
      {
        uint64_t v27 = *v41;
        uint64_t v28 = v38;
        (*v41)(v38, v11, v12);
        v27(v46, v28, v12);
        unint64_t v29 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v29 = sub_241AF7FA4(0, *(void *)(v29 + 16) + 1, 1, v29);
        }
        unint64_t v31 = *(void *)(v29 + 16);
        unint64_t v30 = *(void *)(v29 + 24);
        if (v31 >= v30 >> 1) {
          unint64_t v29 = sub_241AF7FA4(v30 > 1, v31 + 1, 1, v29);
        }
        *(void *)(v29 + 16) = v31 + 1;
        unint64_t v32 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        unint64_t v57 = v29;
        v27((unsigned char *)(v29 + v32 + *(void *)(v13 + 72) * v31), v46, v12);
      }
      sub_241B59C70(&v54);
      sub_241B5A5F4((uint64_t)&v54, (uint64_t)v55);
    }
    while (v56);
  }
  else
  {
    unint64_t v57 = MEMORY[0x263F8EE78];
  }
  sub_241A5B0F4();
  return v57;
}

unint64_t sub_241B5920C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_241B5A7F8(0, &qword_268D42AE8, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8DFB0]);
  uint64_t v2 = sub_241CDBF90();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_241B5A854(v6, (uint64_t)&v15, (uint64_t (*)(void))sub_241B5A8BC);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_241C0B22C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_241A54AA0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_241B59370(uint64_t a1)
{
  sub_241B5A3D8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_241B0C5CC();
  uint64_t v7 = sub_241CDBF90();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_241B5A854(v13, (uint64_t)v6, (uint64_t (*)(void))sub_241B5A3D8);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_241C0B22C(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_241CD6D00();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    void v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_241B59574(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_241B5A7F8(0, &qword_268D42AD0, MEMORY[0x263F8D310], MEMORY[0x263F8DFB0]);
  uint64_t v2 = (void *)sub_241CDBF90();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_241C0B22C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    unint64_t v12 = (void *)(v2[7] + 16 * result);
    *unint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_OWORD *sub_241B596B8(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v12 = sub_241C0B22C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_241B08464();
      goto LABEL_7;
    }
    sub_241B097BC(v15, a4 & 1);
    unint64_t v21 = sub_241C0B22C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    unint64_t result = (_OWORD *)sub_241CDC170();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_241A31190((uint64_t)v19);
    return sub_241A54AA0(a1, v19);
  }
LABEL_13:
  sub_241B59AD8(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_241B5980C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v12 = sub_241C0B22C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_241B0866C();
      goto LABEL_7;
    }
    sub_241B09AE0(v15, a4 & 1);
    unint64_t v26 = sub_241C0B22C(a2, a3);
    if ((v16 & 1) == (v27 & 1))
    {
      unint64_t v12 = v26;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_241CDC170();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = sub_241CD6D00();
    uint64_t v21 = *(void *)(v20 - 8);
    char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = v20;
    uint64_t v24 = v19 + *(void *)(v21 + 72) * v12;
    return v22(v24, a1, v23);
  }
LABEL_13:
  sub_241B59B44(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

_OWORD *sub_241B5998C(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_241C0B7E4(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_241B08928();
      goto LABEL_7;
    }
    sub_241B09EC4(v13, a3 & 1);
    unint64_t v19 = sub_241C0B7E4(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_241ADE86C(a2, (uint64_t)v21);
      return sub_241B59BF4(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_241CDC170();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_241A31190((uint64_t)v17);

  return sub_241A54AA0(a1, v17);
}

_OWORD *sub_241B59AD8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_241A54AA0(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_241B59B44(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_241CD6D00();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

_OWORD *sub_241B59BF4(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_241A54AA0(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_241B59C70@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v18 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_26;
    }
    int64_t v19 = (unint64_t)(v1[2] + 64) >> 6;
    if (v18 < v19)
    {
      uint64_t v20 = v1[1];
      unint64_t v21 = *(void *)(v20 + 8 * v18);
      if (v21)
      {
LABEL_8:
        uint64_t v7 = (v21 - 1) & v21;
        unint64_t v8 = __clz(__rbit64(v21)) + (v18 << 6);
        int64_t v6 = v18;
        goto LABEL_3;
      }
      int64_t v22 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v19)
      {
        unint64_t v21 = *(void *)(v20 + 8 * v22);
        if (v21)
        {
LABEL_11:
          int64_t v18 = v22;
          goto LABEL_8;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v19)
        {
          unint64_t v21 = *(void *)(v20 + 8 * (v5 + 3));
          if (v21)
          {
            int64_t v18 = v5 + 3;
            goto LABEL_8;
          }
          int64_t v22 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v19)
          {
            unint64_t v21 = *(void *)(v20 + 8 * v22);
            if (v21) {
              goto LABEL_11;
            }
            int64_t v18 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v19)
            {
              unint64_t v21 = *(void *)(v20 + 8 * v18);
              if (v21) {
                goto LABEL_8;
              }
              int64_t v6 = v19 - 1;
              int64_t v23 = v5 + 6;
              while (v19 != v23)
              {
                unint64_t v21 = *(void *)(v20 + 8 * v23++);
                if (v21)
                {
                  int64_t v18 = v23 - 1;
                  goto LABEL_8;
                }
              }
            }
          }
        }
      }
    }
    uint64_t v16 = 0;
    uint64_t v12 = 0;
    uint64_t v11 = 0;
    uint64_t v15 = 0;
    uint64_t v14 = 0;
    v1[3] = v6;
    v1[4] = 0;
    goto LABEL_24;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  uint64_t v9 = 16 * v8;
  uint64_t v10 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  BOOL v13 = (uint64_t *)(*(void *)(v3 + 56) + v9);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  v1[3] = v6;
  v1[4] = v7;
  uint64_t v16 = v1[5];
  if (!__OFADD__(v16, 1))
  {
    v1[5] = v16 + 1;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
LABEL_24:
    *a1 = v16;
    a1[1] = v12;
    a1[2] = v11;
    a1[3] = v15;
    a1[4] = v14;
    return result;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_241B59E10(uint64_t a1)
{
  uint64_t v2 = sub_241CD6D70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v56 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7C10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v58 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = (void (*)(uint64_t))MEMORY[0x263F07508];
  sub_241B5A674(0, &qword_26B0354A8, MEMORY[0x263F07508]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v48 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v57 = v2;
  v12((char *)&v48 - v10, 1, 1, v2);
  sub_241B5A330();
  uint64_t v13 = sub_241CD8830();
  sub_241B5A79C((uint64_t)v11, &qword_26B0354A8, v8);
  uint64_t v14 = (void *)sub_241B59574(MEMORY[0x263F8EE78]);
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v49 = v13;
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v16 = v6 + 16;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v53 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v52 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v55 = v16;
    uint64_t v51 = *(void *)(v16 + 56);
    uint64_t v50 = a1;
    swift_bridgeObjectRetain();
    int64_t v18 = v58;
    while (1)
    {
      uint64_t v59 = v15;
      uint64_t v21 = v5;
      v54(v18, v17, v5);
      uint64_t v22 = sub_241CD7BB0();
      uint64_t v24 = v23;
      uint64_t v25 = v56;
      sub_241CD7C00();
      uint64_t v26 = sub_241CD6D20();
      uint64_t v60 = v27;
      (*v53)(v25, v57);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v65[0] = v14;
      unint64_t v30 = sub_241C0B22C(v22, v24);
      uint64_t v31 = v14[2];
      BOOL v32 = (v29 & 1) == 0;
      uint64_t v33 = v31 + v32;
      if (__OFADD__(v31, v32)) {
        break;
      }
      char v34 = v29;
      if (v14[3] >= v33)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_241B08B30();
        }
      }
      else
      {
        sub_241B0A1FC(v33, isUniquelyReferenced_nonNull_native);
        unint64_t v35 = sub_241C0B22C(v22, v24);
        if ((v34 & 1) != (v36 & 1)) {
          goto LABEL_18;
        }
        unint64_t v30 = v35;
      }
      uint64_t v5 = v21;
      uint64_t v14 = (void *)v65[0];
      if (v34)
      {
        int64_t v19 = (uint64_t *)(*(void *)(v65[0] + 56) + 16 * v30);
        swift_bridgeObjectRelease();
        uint64_t v20 = v60;
        *int64_t v19 = v26;
        v19[1] = v20;
      }
      else
      {
        *(void *)(v65[0] + 8 * (v30 >> 6) + 64) |= 1 << v30;
        id v37 = (uint64_t *)(v14[6] + 16 * v30);
        *id v37 = v22;
        v37[1] = v24;
        uint64_t v38 = (uint64_t *)(v14[7] + 16 * v30);
        uint64_t v39 = v60;
        *uint64_t v38 = v26;
        v38[1] = v39;
        uint64_t v40 = v14[2];
        BOOL v41 = __OFADD__(v40, 1);
        uint64_t v42 = v40 + 1;
        if (v41) {
          goto LABEL_17;
        }
        v14[2] = v42;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v18 = v58;
      (*v52)(v58, v21);
      v17 += v51;
      uint64_t v15 = v59 - 1;
      if (v59 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v49;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    uint64_t result = sub_241CDC170();
    __break(1u);
  }
  else
  {
LABEL_15:
    *(void *)&long long v63 = 0xD000000000000032;
    *((void *)&v63 + 1) = 0x8000000241CE1310;
    uint64_t v43 = MEMORY[0x263F8D310];
    sub_241CDBDA0();
    sub_241B5A7F8(0, &qword_268D42C40, v43, MEMORY[0x263F8D060]);
    uint64_t v64 = v44;
    *(void *)&long long v63 = v14;
    sub_241A54AA0(&v63, v62);
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = v13;
    sub_241B5998C(v62, (uint64_t)v65, v45);
    uint64_t v46 = v61;
    swift_bridgeObjectRelease();
    sub_241B5A384((uint64_t)v65);
    return v46;
  }
  return result;
}

unint64_t sub_241B5A330()
{
  unint64_t result = qword_268D42C38;
  if (!qword_268D42C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42C38);
  }
  return result;
}

uint64_t sub_241B5A384(uint64_t a1)
{
  return a1;
}

void sub_241B5A3D8()
{
  if (!qword_268D42C48)
  {
    sub_241CD6D00();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D42C48);
    }
  }
}

unint64_t sub_241B5A440(unint64_t a1)
{
  sub_241CDBDA0();
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_241C0B7E4((uint64_t)v6), (v3 & 1) != 0))
  {
    sub_241A340B8(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v7);
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  sub_241B5A384((uint64_t)v6);
  if (!*((void *)&v8 + 1))
  {
    sub_241A78794((uint64_t)&v7);
    goto LABEL_9;
  }
  sub_241B5A7F8(0, &qword_268D42C40, MEMORY[0x263F8D310], MEMORY[0x263F8D060]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_241B5A5A0();
    swift_allocError();
    *uint64_t v4 = 0xD000000000000032;
    v4[1] = 0x8000000241CE1310;
    swift_willThrow();
    return a1;
  }
  a1 = sub_241B58C28(0xD000000000000032);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_241B5A5A0()
{
  unint64_t result = qword_268D42C50;
  if (!qword_268D42C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42C50);
  }
  return result;
}

uint64_t sub_241B5A5F4(uint64_t a1, uint64_t a2)
{
  sub_241B5A674(0, &qword_268D42C60, (void (*)(uint64_t))sub_241B5A6C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241B5A674(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241B5A6C8()
{
  if (!qword_268D42C68)
  {
    sub_241B5A734();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D42C68);
    }
  }
}

void sub_241B5A734()
{
  if (!qword_268D42C70)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D42C70);
    }
  }
}

uint64_t sub_241B5A79C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241B5A674(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241B5A7F8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void, uint64_t, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x263F8D310], a3, MEMORY[0x263F8D320]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241B5A854(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_241B5A8BC()
{
  if (!qword_268D42C78)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D42C78);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SummariesNotificationUserInfo.ProcessError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SummariesNotificationUserInfo.ProcessError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SummariesNotificationUserInfo.ProcessError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SummariesNotificationUserInfo.ProcessError()
{
  return &type metadata for SummariesNotificationUserInfo.ProcessError;
}

ValueMetadata *type metadata accessor for SummariesNotificationUserInfo()
{
  return &type metadata for SummariesNotificationUserInfo;
}

void sub_241B5A9F4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_241CD9CA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD7650();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  MEMORY[0x270FA5388](v10);
  char v34 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  unint64_t v38 = inited;
  sub_241CDB2E0();
  unint64_t v13 = v38;
  uint64_t v14 = *v3;
  unint64_t v38 = MEMORY[0x263F8EE78];
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    unint64_t v31 = v13;
    uint64_t v32 = a1;
    uint64_t v33 = a2;
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v16 = v7 + 16;
    id v37 = v17;
    uint64_t v18 = v14 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    uint64_t v19 = *(void *)(v16 + 56);
    uint64_t v30 = v14;
    swift_bridgeObjectRetain();
    do
    {
      v37(v9, v18, v6);
      uint64_t v20 = sub_241CD9A60();
      uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v16 - 8))(v9, v6);
      if (v20)
      {
        MEMORY[0x2456365D0](v21);
        if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241CDB2F0();
        }
        sub_241CDB310();
        sub_241CDB2E0();
      }
      v18 += v19;
      --v15;
    }
    while (v15);
    unint64_t v22 = v38;
    unint64_t v13 = v31;
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v22 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  unint64_t v38 = v13;
  sub_241AFF560(v22);
  uint64_t v23 = (void *)sub_241CD76E0();
  sub_241A29AF4(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v24 = sub_241CD73B0();
  uint64_t v25 = *(void *)(v24 - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v25 + 104))(v27 + v26, *MEMORY[0x263F45508], v24);
  id v28 = v23;
  sub_241C5D74C(v27);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v29 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v29);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, *MEMORY[0x263F45690], v36);
  sub_241CD7680();
  swift_bridgeObjectRelease();
}

uint64_t sub_241B5AE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_241B5AE7C(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_241B5AE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_241A68B6C(0);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_241CD9C80();
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = v5;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v25 = v5;
  uint64_t v16 = sub_241AFEF48((void *(*)(uint64_t *__return_ptr, uint64_t))sub_241B5D30C, (uint64_t)v19, v15);
  swift_bridgeObjectRelease();
  uint64_t v26 = v16;
  sub_241B5D4B8(0, (unint64_t *)&qword_268D42260, (unint64_t *)&qword_268D42268, &qword_268D421C0, 0x263F465D8);
  sub_241B5D330();
  sub_241A68C84();
  sub_241B5D3A8(&qword_268D422A0, (void (*)(uint64_t))sub_241B5D330);
  sub_241CDA4C0();
  sub_241B5D3A8(&qword_268D42280, sub_241A68B6C);
  uint64_t v17 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  return v17;
}

id sub_241B5B088@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_241CD7AB0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  unint64_t v8 = MEMORY[0x263F8EE78];
  unint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v9 = *(void *)(v7 + 16);
  if (!v9)
  {
    unint64_t v12 = MEMORY[0x263F8EE78];
    if (!(MEMORY[0x263F8EE78] >> 62)) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v21 = MEMORY[0x263F8EE78];
LABEL_17:
    sub_241A313AC(0, &qword_268D421A0);
    sub_241CD7A80();
    id result = HKCodableSummaryCorrelatedTrendResults.init(values:version:)(v21, (uint64_t)v6);
    *a2 = result;
    return result;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v9; ++i)
  {
    unint64_t v11 = swift_bridgeObjectRetain();
    sub_241AFF708(v11);
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = v25;
  if (v25 >> 62) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v13) {
    goto LABEL_16;
  }
LABEL_6:
  unint64_t v25 = v8;
  id result = (id)sub_241CDBE80();
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = v6;
    uint64_t v24 = a2;
    uint64_t v15 = 0;
    while (v13 != v15)
    {
      id v16 = *(id *)(v12 + 8 * v15 + 32);
      id result = objc_msgSend(v16, sel_objectTypeIdentifier);
      if (!result) {
        goto LABEL_20;
      }
      uint64_t v17 = result;
      sub_241CDB0D0();

      id result = objc_msgSend(v16, sel_trendValue);
      if (!result) {
        goto LABEL_21;
      }
      uint64_t v18 = result;
      id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F465D8]), sel_init);
      if (!result) {
        goto LABEL_22;
      }
      ++v15;
      id v19 = result;
      uint64_t v20 = (void *)sub_241CDB090();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_setObjectTypeIdentifier_, v20);

      objc_msgSend(v19, sel_setTrendValue_, v18);
      sub_241CDBE60();
      sub_241CDBE90();
      sub_241CDBEA0();
      id result = (id)sub_241CDBE70();
      if (v13 == v15)
      {
        unint64_t v21 = v25;
        swift_bridgeObjectRelease();
        uint64_t v6 = v23;
        a2 = v24;
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

void sub_241B5B354(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v27 = sub_241CD7AB0();
  uint64_t v6 = *(void *)(v27 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v27);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = sub_241CD7AF0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = *a1;
  type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0);
  uint64_t v28 = a2;
  id v17 = v16;
  sub_241CD7790();
  uint64_t v18 = (void *)sub_241CD7AE0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_241CD7A80();
  id v19 = objc_msgSend(v17, sel_data);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = sub_241CD6AE0();
    unint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v23 = 0xF000000000000000;
  }
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  uint64_t v24 = v27;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v27);
  unint64_t v25 = sub_241A54BF8(v21, v23, 3, v18, 1, (uint64_t)v9);

  sub_241A54FC8(v21, v23);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v24);
  uint64_t v26 = sub_241C6BA0C(v28, v29, v25);

  *uint64_t v30 = v26;
}

uint64_t sub_241B5B5F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v89 = a7;
  uint64_t v84 = a6;
  uint64_t v81 = a5;
  uint64_t v82 = a4;
  uint64_t v83 = a3;
  uint64_t v93 = a2;
  uint64_t v100 = a8;
  uint64_t v9 = sub_241CD9A30();
  uint64_t v96 = *(void *)(v9 - 8);
  uint64_t v97 = (char *)v9;
  MEMORY[0x270FA5388](v9);
  id v94 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B5D3F0();
  uint64_t v86 = *(void *)(v11 - 8);
  uint64_t v87 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v85 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v79 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241CD9CA0();
  Class isa = v15[-1].isa;
  os_log_t v92 = v15;
  uint64_t v16 = *((void *)isa + 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v80 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v95 = (char *)&v79 - v18;
  uint64_t v19 = sub_241CDA1A0();
  uint64_t v98 = *(void *)(v19 - 8);
  uint64_t v99 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v101 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v90 = (char *)&v79 - v22;
  uint64_t v23 = sub_241CD9D00();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_241CD9970();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v88 = (char *)&v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v79 - v31;
  uint64_t v33 = a1;
  sub_241CD9990();
  uint64_t v34 = v27;
  if ((*(unsigned int (**)(char *, uint64_t))(v28 + 88))(v32, v27) == *MEMORY[0x263F46C30])
  {
    uint64_t v35 = v33;
    (*(void (**)(char *, uint64_t))(v28 + 96))(v32, v34);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v32, v23);
    os_log_t v36 = v92;
    uint64_t v37 = v93;
    uint64_t v38 = sub_241CD9A60();
    uint64_t v101 = (char *)v23;
    uint64_t v39 = v24;
    uint64_t v40 = v95;
    if (v38)
    {
      BOOL v41 = (void *)v38;
      self;
      uint64_t v42 = (void *)swift_dynamicCastObjCClass();
      if (v42)
      {
        uint64_t v43 = v79;
        sub_241B5C16C(v81, v35, (uint64_t)v26, v42, v79);
        uint64_t v44 = sub_241C0F830(v83, v43, v84);
        uint64_t v97 = v26;
        uint64_t v45 = v44;
        sub_241B5D768(v43, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
        uint64_t v103 = v45;
        Class v46 = isa;
        uint64_t v47 = v80;
        (*((void (**)(char *, uint64_t, os_log_t))isa + 2))(v80, v37, v36);
        unint64_t v48 = (*((unsigned __int8 *)v46 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v46 + 80);
        uint64_t v49 = swift_allocObject();
        (*((void (**)(unint64_t, char *, os_log_t))v46 + 4))(v49 + v48, v47, v36);
        sub_241B5D4B8(0, &qword_26B032740, (unint64_t *)&qword_26B034CA8, &qword_26B0303F8, 0x263F46660);
        sub_241B5D538(0, (unint64_t *)&qword_268D42268, &qword_268D421C0, 0x263F465D8, MEMORY[0x263F8D488]);
        sub_241B5D5A0();
        uint64_t v50 = v85;
        sub_241CDA710();
        swift_release();
        sub_241B5D3A8(&qword_268D42C98, (void (*)(uint64_t))sub_241B5D3F0);
        uint64_t v51 = v87;
        uint64_t v52 = sub_241CDA6D0();

        swift_release();
        (*(void (**)(char *, uint64_t))(v86 + 8))(v50, v51);
        uint64_t result = (*(uint64_t (**)(char *, char *))(v39 + 8))(v97, v101);
        uint64_t *v100 = v52;
        return result;
      }
    }
    uint64_t v68 = v90;
    sub_241CDA140();
    Class v69 = isa;
    (*((void (**)(char *, uint64_t, os_log_t))isa + 2))(v40, v37, v36);
    uint64_t v70 = sub_241CDA190();
    os_log_type_t v71 = sub_241CDB650();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = swift_slowAlloc();
      uint64_t v96 = v39;
      uint64_t v97 = v26;
      uint64_t v73 = v72;
      id v94 = (char *)swift_slowAlloc();
      v102[0] = (uint64_t)v94;
      *(_DWORD *)uint64_t v73 = 136315394;
      uint64_t v103 = v89;
      swift_getMetatypeMetadata();
      uint64_t v74 = sub_241CDB120();
      uint64_t v103 = sub_241A33FE4(v74, v75, v102);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 2080;
      uint64_t v103 = sub_241CD9A60();
      sub_241B5D538(0, (unint64_t *)&qword_268D42450, (unint64_t *)&qword_26B038440, 0x263F0A598, MEMORY[0x263F8D8F0]);
      uint64_t v76 = sub_241CDB120();
      uint64_t v103 = sub_241A33FE4(v76, v77, v102);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, os_log_t))v69 + 1))(v40, v36);
      _os_log_impl(&dword_241A23000, v70, v71, "[%s]: Cannot perform statistics query on non-sample-type: %s", (uint8_t *)v73, 0x16u);
      id v78 = v94;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v78, -1, -1);
      MEMORY[0x245637F20](v73, -1, -1);

      (*(void (**)(char *, uint64_t))(v98 + 8))(v90, v99);
      uint64_t result = (*(uint64_t (**)(char *, char *))(v96 + 8))(v97, v101);
    }
    else
    {

      (*((void (**)(char *, os_log_t))v69 + 1))(v40, v36);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v68, v99);
      uint64_t result = (*(uint64_t (**)(char *, char *))(v39 + 8))(v26, v101);
    }
    uint64_t *v100 = 0;
  }
  else
  {
    uint64_t v95 = (char *)v27;
    sub_241CDA140();
    uint64_t v54 = v96;
    uint64_t v55 = v97;
    uint64_t v56 = v94;
    (*(void (**)(char *, uint64_t, char *))(v96 + 16))(v94, v33, v97);
    uint64_t v57 = sub_241CDA190();
    os_log_type_t v58 = sub_241CDB650();
    int v59 = v58;
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v60 = swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      v102[0] = v93;
      *(_DWORD *)uint64_t v60 = 136315394;
      os_log_t v92 = v57;
      uint64_t v103 = v89;
      swift_getMetatypeMetadata();
      uint64_t v61 = sub_241CDB120();
      uint64_t v103 = sub_241A33FE4(v61, v62, v102);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 12) = 2080;
      LODWORD(isa) = v59;
      sub_241CD9990();
      long long v63 = v95;
      uint64_t v64 = sub_241CDB120();
      uint64_t v103 = sub_241A33FE4(v64, v65, v102);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v54 + 8))(v56, v97);
      os_log_t v66 = v92;
      _os_log_impl(&dword_241A23000, v92, (os_log_type_t)isa, "[%s]: Unsupported correlated query subquery type: %s", (uint8_t *)v60, 0x16u);
      uint64_t v67 = v93;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v67, -1, -1);
      MEMORY[0x245637F20](v60, -1, -1);

      (*(void (**)(char *, uint64_t))(v98 + 8))(v101, v99);
    }
    else
    {
      (*(void (**)(char *, char *))(v54 + 8))(v56, v55);

      (*(void (**)(char *, uint64_t))(v98 + 8))(v101, v99);
      long long v63 = v95;
    }
    uint64_t *v100 = 0;
    return (*(uint64_t (**)(char *, char *))(v28 + 8))(v32, v63);
  }
  return result;
}

uint64_t sub_241B5C16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v34 = a1;
  uint64_t v37 = a5;
  uint64_t v6 = sub_241CD6D70();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29AF4(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  v31[1] = (char *)v31 - v10;
  v31[0] = sub_241CD7AF0();
  uint64_t v11 = *(void *)(v31[0] - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v31[0]);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = sub_241CD77C0();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CD9D00();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241CD9A30();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, v32);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v33, v18);
  type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0);
  id v26 = a4;
  sub_241CD7790();
  sub_241CD7AE0();
  (*(void (**)(char *, void))(v11 + 8))(v14, v31[0]);
  sub_241CD7AC0();
  sub_241CD77A0();
  sub_241CD7780();
  sub_241CD6D60();
  uint64_t v27 = sub_241CD6D20();
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v36);
  return sub_241B6252C((uint64_t)v24, (uint64_t)v21, (uint64_t)v17, 0, v27, v29, v37);
}

void sub_241B5C578(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_241CD9C90();
  id v4 = objc_allocWithZone(MEMORY[0x263F465D8]);
  id v5 = v3;
  id v6 = objc_msgSend(v4, sel_init);
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setObjectTypeIdentifier_, v8);

    objc_msgSend(v7, sel_setTrendValue_, v5);
    *a2 = v7;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_241B5C654()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries44CorrelatedTrendSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_241B5D768(v0 + OBJC_IVAR____TtC9Summaries44CorrelatedTrendSummarySharableModelGenerator_request, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);

  return swift_deallocClassInstance();
}

uint64_t sub_241B5C728()
{
  return type metadata accessor for CorrelatedTrendSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for CorrelatedTrendSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_268D42C80);
}

uint64_t sub_241B5C750()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B034208);
}

void *sub_241B5C848(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241CD77C0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *((unsigned char *)v7 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v14 = (void *)((char *)v7 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_241B5C95C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_241B5C9EC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD77C0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_241B5CAB4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_241B5CB88(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  return a1;
}

void *sub_241B5CC28(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241B5CCE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B5CCF4);
}

uint64_t sub_241B5CCF4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_241CD77C0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241B5CDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B5CDB8);
}

void *sub_241B5CDB8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_241CD77C0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_241B5CE60()
{
  uint64_t result = sub_241CD77C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_UNKNOWN **sub_241B5CF10()
{
  return &off_26F5C3828;
}

uint64_t sub_241B5CF1C(uint64_t a1)
{
  uint64_t result = sub_241B5D3A8(&qword_268D42228, (void (*)(uint64_t))type metadata accessor for CorrelatedTrendSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241B5CF74()
{
  return swift_retain();
}

uint64_t sub_241B5CF88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries44CorrelatedTrendSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t (*sub_241B5D000(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_241B5D184(v6, a2, a3);
  return sub_241B5D068;
}

uint64_t (*sub_241B5D06C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_241B5D204(v6, a2, a3);
  return sub_241B5D068;
}

uint64_t (*sub_241B5D0D4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_241B5D284(v6, a2, a3);
  return sub_241B5D068;
}

void sub_241B5D13C(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_241B5D184(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x245637160](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s9Summaries43ActivityDataTypeDetailConfigurationProviderV26CustomDescriptionComponentVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_241B5D204(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x245637160](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_241B5D284(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x245637160](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_241B5D304;
  }
  __break(1u);
  return result;
}

uint64_t sub_241B5D304()
{
  return swift_release();
}

uint64_t sub_241B5D30C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241B5B5F4(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

void sub_241B5D330()
{
  if (!qword_268D42298)
  {
    sub_241B5D4B8(255, (unint64_t *)&qword_268D42260, (unint64_t *)&qword_268D42268, &qword_268D421C0, 0x263F465D8);
    unint64_t v0 = sub_241CDB320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42298);
    }
  }
}

uint64_t sub_241B5D3A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B5D3F0()
{
  if (!qword_268D42C90)
  {
    sub_241B5D4B8(255, &qword_26B032740, (unint64_t *)&qword_26B034CA8, &qword_26B0303F8, 0x263F46660);
    sub_241B5D538(255, (unint64_t *)&qword_268D42268, &qword_268D421C0, 0x263F465D8, MEMORY[0x263F8D488]);
    sub_241B5D5A0();
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42C90);
    }
  }
}

void sub_241B5D4B8(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_241B5D538(255, a3, a4, a5, MEMORY[0x263F8D488]);
    unint64_t v6 = sub_241CDA510();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_241B5D538(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241A313AC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_241B5D5A0()
{
  unint64_t result = qword_26B02EA30;
  if (!qword_26B02EA30)
  {
    sub_241B5D4B8(255, &qword_26B032740, (unint64_t *)&qword_26B034CA8, &qword_26B0303F8, 0x263F46660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B02EA30);
  }
  return result;
}

uint64_t sub_241B5D618()
{
  uint64_t v1 = sub_241CD9CA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_241B5D6A8@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD9CA0() - 8);
  unint64_t v6 = *a1;
  void v8[2] = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t result = sub_241A427D0((void (*)(uint64_t *__return_ptr, id *))sub_241B5D748, (uint64_t)v8, v6);
  *a2 = result;
  return result;
}

void sub_241B5D748(void **a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_241B5D768(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t static BoundedSummaryModelGenerating.dataPresentDateIntervalFilteringDatesOutOfBoundsPublisher(generatorContext:request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v70 = a2;
  uint64_t v55 = a1;
  sub_241B5DF28(0);
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v62 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD7690();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v52 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_241CD77C0();
  uint64_t v65 = *(void *)(v67 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v67);
  uint64_t v57 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  os_log_type_t v58 = (char *)&v50 - v12;
  sub_241A68508(0);
  uint64_t v61 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v60 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  int v59 = (char *)&v50 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v50 - v18;
  uint64_t v20 = sub_241CD6810();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v51 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v68 = (char *)&v50 - v24;
  swift_getAssociatedTypeWitness();
  uint64_t v56 = a4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  id v26 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  uint64_t v27 = swift_checkMetadataState();
  v26(v27, AssociatedConformanceWitness);
  uint64_t v69 = v21;
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  uint64_t v66 = v20;
  if (v28((uint64_t)v19, 1, v20) == 1)
  {
    sub_241B609D4((uint64_t)v19, (uint64_t (*)(void))sub_241A68508);
    uint64_t v29 = swift_getAssociatedConformanceWitness();
    uint64_t v30 = v57;
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v29);
    sub_241CD77A0();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v30, v67);
    uint64_t v31 = v62;
    sub_241CDA5D0();
    sub_241B60A34((unint64_t *)&qword_26B038988, sub_241B5DF28);
    uint64_t v32 = v64;
    uint64_t v33 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v31, v32);
  }
  else
  {
    uint64_t v34 = v66;
    uint64_t v57 = *(char **)(v69 + 32);
    ((void (*)(char *, char *, uint64_t))v57)(v68, v19, v66);
    uint64_t v35 = swift_getAssociatedConformanceWitness();
    uint64_t v36 = v58;
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v27, v35);
    uint64_t v37 = (uint64_t)v59;
    sub_241CD77A0();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v36, v67);
    if (v28(v37, 1, v34) == 1)
    {
      sub_241B609D4(v37, (uint64_t (*)(void))sub_241A68508);
      uint64_t v38 = v69;
      uint64_t v39 = v66;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v60, 1, 1, v66);
      uint64_t v40 = v62;
      sub_241CDA5D0();
      sub_241B60A34((unint64_t *)&qword_26B038988, sub_241B5DF28);
      uint64_t v41 = v64;
      uint64_t v33 = sub_241CDA6D0();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v41);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v68, v39);
    }
    else
    {
      uint64_t v42 = (uint64_t)v51;
      uint64_t v43 = v66;
      ((void (*)(char *, uint64_t, uint64_t))v57)(v51, v37, v66);
      uint64_t v44 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 24))(v27, v35);
      uint64_t v45 = (uint64_t)v52;
      uint64_t v46 = v55;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 64))(v55, v27, v35);
      uint64_t v47 = v68;
      uint64_t v33 = static BoundedSummaryModelGenerating.boundedDataPresentDateIntervalUsingMostRecentSamplePublisher(for:domain:boundingDateInterval:unboundedDataPresentDateInterval:generatorContext:)(v44, v45, v68, v42, v46, a3, v56);

      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v45, v54);
      unint64_t v48 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
      v48(v42, v43);
      v48((uint64_t)v47, v43);
    }
  }
  return v33;
}

void sub_241B5DF28(uint64_t a1)
{
}

uint64_t static BoundedSummaryModelGenerating.boundedDataPresentDateIntervalUsingMostRecentSamplePublisher(for:domain:boundingDateInterval:unboundedDataPresentDateInterval:generatorContext:)(void *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v170 = a7;
  uint64_t v171 = a6;
  uint64_t v173 = a5;
  uint64_t v166 = a2;
  id v178 = a1;
  sub_241B5F2F0();
  uint64_t v161 = v9;
  uint64_t v159 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v158 = (char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B5F39C();
  uint64_t v157 = v11;
  uint64_t v162 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v160 = (char *)&v144 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_241CD7740();
  uint64_t v172 = *(void *)(v179 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v179);
  uint64_t v180 = (char *)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v154 = (char *)&v144 - v15;
  uint64_t v156 = sub_241CDA1A0();
  uint64_t v155 = *(void *)(v156 - 8);
  MEMORY[0x270FA5388](v156);
  id v164 = (char *)&v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v182 = v17;
  MEMORY[0x270FA5388](v17);
  id v174 = (char *)&v144 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B5DF28(0);
  uint64_t v181 = v19;
  uint64_t v176 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v175 = (char *)&v144 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (void *)sub_241CD6810();
  uint64_t v22 = *(v21 - 1);
  id v185 = v21;
  uint64_t v186 = v22;
  uint64_t v23 = *(void *)(v22 + 64);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  unint64_t v168 = (char *)&v144 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  unint64_t v163 = (char *)&v144 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v144 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v144 - v30;
  uint64_t v32 = sub_241CD6D00();
  uint64_t v177 = *(void *)(v32 - 8);
  uint64_t v33 = *(void *)(v177 + 64);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v167 = (char *)&v144 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v184 = (char *)&v144 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v144 - v38;
  uint64_t v40 = MEMORY[0x270FA5388](v37);
  uint64_t v42 = (char *)&v144 - v41;
  MEMORY[0x270FA5388](v40);
  uint64_t v183 = (char *)&v144 - v43;
  if (sub_241CD6760())
  {
    uint64_t v150 = v29;
    uint64_t v148 = v33;
    uint64_t v149 = v23;
    int v152 = v31;
    uint64_t v165 = a4;
    sub_241CD67E0();
    sub_241CD67E0();
    sub_241B60A34((unint64_t *)&qword_26B02E8D0, MEMORY[0x263F07490]);
    char v44 = sub_241CDB020();
    uint64_t v45 = v177;
    uint64_t v47 = (char *)(v177 + 16);
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v177 + 16);
    if (v44) {
      unint64_t v48 = v39;
    }
    else {
      unint64_t v48 = v42;
    }
    uint64_t v49 = v183;
    os_log_type_t v151 = *(void (**)(char *, char *, uint64_t))(v177 + 16);
    v46(v183, v48, v32);
    uint64_t v50 = v39;
    uint64_t v51 = *(void (**)(char *, uint64_t))(v45 + 8);
    v51(v50, v32);
    v51(v42, v32);
    uint64_t v52 = v184;
    sub_241CD67B0();
    uint64_t v53 = v167;
    sub_241CD67B0();
    char v54 = sub_241CD6C80();
    v51(v53, v32);
    uint64_t v153 = v45 + 8;
    v51(v52, v32);
    if (v54)
    {
      v151(v52, v49, v32);
      sub_241CD67B0();
      uint64_t v55 = v152;
      sub_241CD67C0();
      id v56 = v185;
      uint64_t v57 = v186;
      os_log_type_t v58 = v174;
      (*(void (**)(char *, char *, id))(v186 + 16))(v174, v55, v185);
      (*(void (**)(char *, void, uint64_t, id))(v57 + 56))(v58, 0, 1, v56);
      int v59 = v175;
      sub_241CDA5D0();
      sub_241B60A34((unint64_t *)&qword_26B038988, sub_241B5DF28);
      uint64_t v60 = v181;
      uint64_t v61 = sub_241CDA6D0();
      (*(void (**)(char *, uint64_t))(v176 + 8))(v59, v60);
      (*(void (**)(char *, id))(v57 + 8))(v55, v56);
      v51(v49, v32);
    }
    else
    {
      uint64_t v167 = v47;
      id v174 = (char *)v51;
      id v175 = a3;
      uint64_t v176 = v32;
      id v64 = v178;
      unsigned int v65 = objc_msgSend(v178, sel_requiresSensitiveHealthLogs);
      uint64_t v66 = v173;
      uint64_t v67 = v180;
      id v68 = v185;
      if (!v65 || HKShowSensitiveLogItems())
      {
        sub_241CDA0F0();
        uint64_t v69 = v154;
        (*(void (**)(char *, uint64_t, uint64_t))(v172 + 16))(v154, v66, v179);
        uint64_t v70 = v186;
        os_log_type_t v71 = *(void (**)(char *, uint64_t, id))(v186 + 16);
        v71(v150, v165, v68);
        uint64_t v72 = v163;
        v71(v163, (uint64_t)v175, v68);
        id v73 = v64;
        uint64_t v74 = sub_241CDA190();
        os_log_type_t v75 = sub_241CDB670();
        int v76 = v75;
        if (os_log_type_enabled(v74, v75))
        {
          uint64_t v77 = swift_slowAlloc();
          int v145 = v76;
          uint64_t v78 = v77;
          uint64_t v146 = swift_slowAlloc();
          v188[0] = v146;
          *(_DWORD *)uint64_t v78 = 136316162;
          uint64_t v79 = sub_241CDC270();
          os_log_t v144 = v74;
          uint64_t v187 = sub_241A33FE4(v79, v80, v188);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v78 + 12) = 2080;
          uint64_t v81 = (void *)sub_241CD76E0();
          uint64_t v82 = sub_241CD73E0();
          unint64_t v84 = v83;

          uint64_t v187 = sub_241A33FE4(v82, v84, v188);
          uint64_t v147 = v188;
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v172 + 8))(v69, v179);
          *(_WORD *)(v78 + 22) = 2080;
          id v85 = v73;
          id v86 = objc_msgSend(v85, sel_description);
          uint64_t v87 = sub_241CDB0D0();
          unint64_t v89 = v88;

          uint64_t v187 = sub_241A33FE4(v87, v89, v188);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          *(_WORD *)(v78 + 32) = 2080;
          uint64_t v90 = v184;
          int v91 = v150;
          sub_241CD67B0();
          sub_241B60A34(&qword_26B02E8E0, MEMORY[0x263F07490]);
          uint64_t v92 = v176;
          uint64_t v93 = sub_241CDC0D0();
          unint64_t v95 = v94;
          uint64_t v96 = v174;
          ((void (*)(char *, uint64_t))v174)(v90, v92);
          uint64_t v187 = sub_241A33FE4(v93, v95, v188);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          uint64_t v154 = *(char **)(v186 + 8);
          ((void (*)(char *, id))v154)(v91, v185);
          *(_WORD *)(v78 + 42) = 2080;
          id v97 = v185;
          uint64_t v150 = (char *)(v78 + 44);
          uint64_t v98 = v163;
          sub_241CD67B0();
          uint64_t v99 = sub_241CDC0D0();
          unint64_t v101 = v100;
          uint64_t v102 = v92;
          uint64_t v67 = v180;
          ((void (*)(char *, uint64_t))v96)(v90, v102);
          uint64_t v187 = sub_241A33FE4(v99, v101, v188);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          uint64_t v103 = v98;
          id v68 = v97;
          ((void (*)(char *, id))v154)(v103, v97);
          os_log_t v104 = v144;
          _os_log_impl(&dword_241A23000, v144, (os_log_type_t)v145, "[%s]_%s: Data present date range for %s exceeds bounding interval: %s > %s", (uint8_t *)v78, 0x34u);
          uint64_t v105 = v146;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v105, -1, -1);
          MEMORY[0x245637F20](v78, -1, -1);

          (*(void (**)(char *, uint64_t))(v155 + 8))(v164, v156);
          uint64_t v66 = v173;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v172 + 8))(v69, v179);

          uint64_t v106 = *(void (**)(char *, id))(v70 + 8);
          v106(v150, v68);
          v106(v72, v68);

          (*(void (**)(char *, uint64_t))(v155 + 8))(v164, v156);
          uint64_t v66 = v173;
          uint64_t v67 = v180;
        }
      }
      id v107 = self;
      uint64_t v108 = v175;
      unint64_t v109 = (void *)sub_241CD6790();
      id v110 = objc_msgSend(v107, sel_predicateForSamplesWithinDateInterval_options_, v109, 0);

      sub_241CD76B0();
      uint64_t v111 = v66;
      sub_241A311E0(v188, v188[3]);
      uint64_t v112 = (void *)sub_241CD75B0();
      id v113 = v110;
      id v185 = v113;
      uint64_t v114 = sub_241CDB5D0();

      sub_241A31190((uint64_t)v188);
      uint64_t v187 = v114;
      sub_241CD7730();
      sub_241A5B1CC();
      unint64_t v163 = v115;
      id v164 = (char *)sub_241B60A34(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
      uint64_t v116 = sub_241CDA680();
      uint64_t v166 = v116;
      sub_241A31190((uint64_t)v188);
      swift_release();
      v188[0] = v116;
      uint64_t v117 = v172;
      uint64_t v155 = *(void *)(v172 + 16);
      uint64_t v156 = v172 + 16;
      uint64_t v118 = v179;
      ((void (*)(char *, uint64_t, uint64_t))v155)(v67, v111, v179);
      uint64_t v119 = v186;
      uint64_t v120 = *(void (**)(char *, uint64_t, id))(v186 + 16);
      uint64_t v121 = v152;
      v120(v152, v165, v68);
      v120(v168, (uint64_t)v108, v68);
      v151(v184, v183, v176);
      uint64_t v122 = *(unsigned __int8 *)(v117 + 80);
      uint64_t v123 = (v122 + 40) & ~v122;
      id v175 = (char *)(v122 | 7);
      uint64_t v124 = *(unsigned __int8 *)(v119 + 80);
      uint64_t v125 = (v169 + v124 + v123) & ~v124;
      uint64_t v126 = (v149 + v124 + v125) & ~v124;
      uint64_t v127 = v177;
      uint64_t v167 = (char *)((v149 + *(unsigned __int8 *)(v177 + 80) + v126) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80));
      uint64_t v128 = (char *)swift_allocObject();
      uint64_t v129 = v118;
      uint64_t v130 = v128;
      uint64_t v131 = v170;
      *((void *)v128 + 2) = v171;
      *((void *)v128 + 3) = v131;
      *((void *)v128 + 4) = v178;
      uint64_t v172 = *(void *)(v117 + 32);
      ((void (*)(char *, char *, uint64_t))v172)(&v128[v123], v180, v129);
      id v132 = *(void (**)(char *, char *, id))(v119 + 32);
      v132(&v130[v125], v121, v68);
      v132(&v130[v126], v168, v68);
      uint64_t v133 = v176;
      (*(void (**)(char *, char *, uint64_t))(v127 + 32))(&v167[(void)v130], v184, v176);
      id v134 = v178;
      uint64_t v135 = v158;
      sub_241CDA710();
      swift_release();
      uint64_t v136 = v179;
      uint64_t v137 = v180;
      ((void (*)(char *, uint64_t, uint64_t))v155)(v180, v173, v179);
      uint64_t v138 = swift_allocObject();
      uint64_t v139 = v170;
      *(void *)(v138 + 16) = v171;
      *(void *)(v138 + 24) = v139;
      ((void (*)(uint64_t, char *, uint64_t))v172)(v138 + ((v122 + 32) & ~v122), v137, v136);
      sub_241B60A34(&qword_26B02E968, (void (*)(uint64_t))sub_241B5F2F0);
      sub_241B60A34((unint64_t *)&qword_26B038988, sub_241B5DF28);
      id v140 = v160;
      uint64_t v141 = v161;
      sub_241CDA750();
      swift_release();
      (*(void (**)(char *, uint64_t))(v159 + 8))(v135, v141);
      sub_241B60A34(&qword_26B02E9B0, (void (*)(uint64_t))sub_241B5F39C);
      uint64_t v142 = v157;
      uint64_t v61 = sub_241CDA6D0();

      swift_release();
      (*(void (**)(char *, uint64_t))(v162 + 8))(v140, v142);
      ((void (*)(char *, uint64_t))v174)(v183, v133);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, id))(v186 + 56))(v174, 1, 1, v185);
    unint64_t v62 = v175;
    sub_241CDA5D0();
    sub_241B60A34((unint64_t *)&qword_26B038988, sub_241B5DF28);
    uint64_t v63 = v181;
    uint64_t v61 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v176 + 8))(v62, v63);
  }
  return v61;
}

void sub_241B5F2F0()
{
  if (!qword_26B0323F8)
  {
    sub_241A5B1CC();
    sub_241A68508(255);
    sub_241B60A34(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0323F8);
    }
  }
}

void sub_241B5F39C()
{
  if (!qword_26B0324F0)
  {
    sub_241B5F2F0();
    sub_241B5DF28(255);
    sub_241B60A34(&qword_26B02E968, (void (*)(uint64_t))sub_241B5F2F0);
    sub_241B60A34((unint64_t *)&qword_26B038988, sub_241B5DF28);
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0324F0);
    }
  }
}

uint64_t sub_241B5F488@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, NSObject *a5@<X4>, uint64_t a6@<X5>, NSObject *a7@<X6>, uint64_t a8@<X8>)
{
  os_log_t v112 = a7;
  id v113 = a4;
  uint64_t v110 = a6;
  uint64_t v114 = (uint64_t *)a5;
  uint64_t v117 = a3;
  uint64_t v120 = a8;
  uint64_t v10 = sub_241CD7740();
  uint64_t v118 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v108 = (char *)&v105 - v14;
  uint64_t v15 = sub_241CDA1A0();
  uint64_t v115 = *(void *)(v15 - 8);
  uint64_t v116 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v119 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v111 = (char *)&v105 - v18;
  uint64_t v19 = sub_241CD6810();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v122 = (char *)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v121 = (char *)&v105 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v105 - v25;
  sub_241A72DB8(0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v105 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_241CD6D00();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = *a1;
  uint64_t v123 = v20;
  if (!v37)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v29, 1, 1, v30);
    uint64_t v38 = v19;
    goto LABEL_8;
  }
  unint64_t v109 = (char *)&v105 - v34;
  uint64_t v106 = v36;
  uint64_t v107 = v35;
  sub_241CDBB10();
  sub_241CD67B0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v30);
  uint64_t v38 = v19;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
LABEL_8:
    sub_241B609D4((uint64_t)v29, (uint64_t (*)(void))sub_241A72DB8);
    uint64_t v65 = v10;
    if ((objc_msgSend(a2, sel_requiresSensitiveHealthLogs) & 1) != 0
      && !HKShowSensitiveLogItems())
    {
      uint64_t v99 = 1;
      uint64_t v100 = v120;
      uint64_t v40 = v123;
    }
    else
    {
      uint64_t v66 = v119;
      sub_241CDA140();
      uint64_t v67 = v118;
      (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v13, v117, v65);
      uint64_t v40 = v123;
      id v68 = *(void (**)(char *, uint64_t *, uint64_t))(v123 + 16);
      v68(v121, v113, v38);
      v68(v122, v114, v38);
      id v69 = a2;
      uint64_t v70 = sub_241CDA190();
      os_log_type_t v71 = sub_241CDB650();
      int v72 = v71;
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v73 = swift_slowAlloc();
        uint64_t v117 = v38;
        uint64_t v74 = v73;
        uint64_t v114 = (uint64_t *)swift_slowAlloc();
        v125[0] = (uint64_t)v114;
        *(_DWORD *)uint64_t v74 = 136316162;
        uint64_t v75 = sub_241CDC270();
        uint64_t v124 = sub_241A33FE4(v75, v76, v125);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v74 + 12) = 2080;
        uint64_t v77 = (void *)sub_241CD76E0();
        uint64_t v78 = sub_241CD73E0();
        os_log_t v112 = v70;
        uint64_t v79 = v65;
        uint64_t v80 = v78;
        LODWORD(v113) = v72;
        unint64_t v82 = v81;

        uint64_t v124 = sub_241A33FE4(v80, v82, v125);
        uint64_t v40 = v123;
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v67 + 8))(v13, v79);
        *(_WORD *)(v74 + 22) = 2080;
        id v83 = v69;
        id v84 = objc_msgSend(v83, sel_description);
        uint64_t v85 = sub_241CDB0D0();
        unint64_t v87 = v86;

        uint64_t v124 = sub_241A33FE4(v85, v87, v125);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v74 + 32) = 2080;
        sub_241B60A34(&qword_26B031F70, MEMORY[0x263F062D0]);
        unint64_t v88 = v121;
        uint64_t v89 = sub_241CDC0D0();
        uint64_t v124 = sub_241A33FE4(v89, v90, v125);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        int v91 = *(void (**)(char *, uint64_t))(v40 + 8);
        v91(v88, v117);
        *(_WORD *)(v74 + 42) = 2080;
        uint64_t v92 = v122;
        uint64_t v93 = sub_241CDC0D0();
        uint64_t v124 = sub_241A33FE4(v93, v94, v125);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        v91(v92, v117);
        os_log_t v95 = v112;
        _os_log_impl(&dword_241A23000, v112, (os_log_type_t)v113, "[%s]_%s: Date range query reported data but most recent sample query returned no data: %s, dateRangeQuery: %s, boundingDateInterval: %s", (uint8_t *)v74, 0x34u);
        os_log_t v96 = (os_log_t)v114;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v96, -1, -1);
        uint64_t v97 = v74;
        uint64_t v38 = v117;
        MEMORY[0x245637F20](v97, -1, -1);

        (*(void (**)(char *, uint64_t))(v115 + 8))(v119, v116);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v67 + 8))(v13, v65);

        uint64_t v98 = *(void (**)(char *, uint64_t))(v40 + 8);
        v98(v121, v38);
        v98(v122, v38);

        (*(void (**)(char *, uint64_t))(v115 + 8))(v66, v116);
      }
      uint64_t v99 = 1;
      uint64_t v100 = v120;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v100, v99, 1, v38);
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v109, v29, v30);
  unsigned int v39 = objc_msgSend(a2, sel_requiresSensitiveHealthLogs);
  uint64_t v40 = v123;
  uint64_t v41 = v10;
  if (!v39 || HKShowSensitiveLogItems())
  {
    uint64_t v42 = v111;
    sub_241CDA0F0();
    uint64_t v43 = v118;
    char v44 = v108;
    (*(void (**)(char *, uint64_t, NSObject *))(v118 + 16))(v108, v117, v41);
    uint64_t v122 = a2;
    uint64_t v45 = sub_241CDA190();
    os_log_type_t v46 = sub_241CDB670();
    int v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v48 = swift_slowAlloc();
      LODWORD(v119) = v47;
      uint64_t v49 = v48;
      uint64_t v121 = (char *)swift_slowAlloc();
      v125[0] = (uint64_t)v121;
      *(_DWORD *)uint64_t v49 = 136315650;
      uint64_t v50 = sub_241CDC270();
      uint64_t v117 = v38;
      uint64_t v124 = sub_241A33FE4(v50, v51, v125);
      os_log_t v112 = v41;
      id v113 = v125;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      uint64_t v52 = (void *)sub_241CD76E0();
      uint64_t v53 = sub_241CD73E0();
      uint64_t v114 = (uint64_t *)v45;
      uint64_t v54 = v53;
      uint64_t v55 = v44;
      unint64_t v57 = v56;

      uint64_t v124 = sub_241A33FE4(v54, v57, v125);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, os_log_t))(v43 + 8))(v55, v112);
      *(_WORD *)(v49 + 22) = 2080;
      os_log_type_t v58 = v122;
      id v59 = objc_msgSend(v58, sel_description);
      uint64_t v60 = sub_241CDB0D0();
      unint64_t v62 = v61;

      uint64_t v38 = v117;
      uint64_t v124 = sub_241A33FE4(v60, v62, v125);
      uint64_t v40 = v123;
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      os_log_t v63 = (os_log_t)v114;
      _os_log_impl(&dword_241A23000, (os_log_t)v114, (os_log_type_t)v119, "[%s]_%s: With results from most recent sample query for %s new date interval ends at ", (uint8_t *)v49, 0x20u);
      id v64 = v121;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v64, -1, -1);
      MEMORY[0x245637F20](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v115 + 8))(v111, v116);
    }
    else
    {
      (*(void (**)(char *, NSObject *))(v43 + 8))(v44, v41);

      id v101 = v122;
      (*(void (**)(char *, uint64_t))(v115 + 8))(v42, v116);
    }
  }
  uint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  v102(v106, v110, v30);
  uint64_t v103 = v109;
  v102(v107, (uint64_t)v109, v30);
  uint64_t v100 = v120;
  sub_241CD67C0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v103, v30);
  uint64_t v99 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v100, v99, 1, v38);
}

uint64_t sub_241B60040()
{
  uint64_t v20 = sub_241CD7740();
  uint64_t v1 = *(void *)(v20 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v17 = (v2 + 40) & ~v2;
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v17 + v3 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = (v8 + v6 + v7) & ~v6;
  uint64_t v19 = sub_241CD6D00();
  uint64_t v10 = *(void *)(v19 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v9 + v8 + v11) & ~v11;
  uint64_t v18 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v2 | v6 | v11 | 7;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v17, v20);
  uint64_t v14 = v0 + v7;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v15(v14, v4);
  v15(v0 + v9, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v19);

  return MEMORY[0x270FA0238](v0, v18, v13);
}

uint64_t sub_241B60248@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(NSObject **)(v2 + 16);
  uint64_t v6 = *(void *)(sub_241CD7740() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_241CD6810() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (v7 + v8 + v10) & ~v10;
  uint64_t v12 = *(void *)(v9 + 64);
  unint64_t v13 = (v12 + v10 + v11) & ~v10;
  uint64_t v14 = *(void *)(sub_241CD6D00() - 8);
  uint64_t v15 = *(void **)(v2 + 32);
  uint64_t v16 = v2 + ((v13 + v12 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));

  return sub_241B5F488(a1, v15, v2 + v7, (uint64_t *)(v2 + v11), (v2 + v13), v16, v5, a2);
}

uint64_t sub_241B603B8@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v47 = a3;
  sub_241A68508(0);
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD7740();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241CDA1A0();
  uint64_t v49 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  sub_241CDA0F0();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  id v19 = v18;
  id v20 = v18;
  uint64_t v48 = v17;
  uint64_t v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB650();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    os_log_t v43 = v21;
    uint64_t v25 = v24;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v51 = v44;
    *(_DWORD *)uint64_t v25 = 136315650;
    int v42 = v23;
    uint64_t v26 = sub_241CDC270();
    uint64_t v46 = v8;
    uint64_t v50 = sub_241A33FE4(v26, v27, &v51);
    uint64_t v45 = v10;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v28 = (void *)sub_241CD76E0();
    uint64_t v29 = sub_241CD73E0();
    uint64_t v47 = a4;
    uint64_t v30 = v29;
    uint64_t v41 = v15;
    unint64_t v32 = v31;

    uint64_t v50 = sub_241A33FE4(v30, v32, &v51);
    uint64_t v10 = v45;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    *(_WORD *)(v25 + 22) = 2080;
    uint64_t v50 = (uint64_t)v18;
    id v33 = v18;
    sub_241A3DA64();
    uint64_t v34 = sub_241CDB120();
    uint64_t v50 = sub_241A33FE4(v34, v35, &v51);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    os_log_t v36 = v43;
    _os_log_impl(&dword_241A23000, v43, (os_log_type_t)v42, "[%s]_%s: error when fetching most recent sample: %s", (uint8_t *)v25, 0x20u);
    uint64_t v37 = v44;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v37, -1, -1);
    MEMORY[0x245637F20](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v41);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v15);
  }
  uint64_t v38 = sub_241CD6810();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v10, 1, 1, v38);
  return sub_241CDA5D0();
}

uint64_t sub_241B60828()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_241B608B8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(sub_241CD7740() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_241B603B8(a1, v7, v5, a2);
}

void sub_241B60970(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B609D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241B60A34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B60A7C()
{
}

uint64_t sub_241B60AAC()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_241B60AFC()
{
  sub_241CD8AD0();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t WorkoutSampleDetailViewController.__allocating_init(healthStore:)(void *a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[qword_268D42CA0] = a1;
  type metadata accessor for WorkoutSampleDetailCompoundDataSource(0);
  uint64_t v4 = swift_allocObject();
  type metadata accessor for DataTypeDetailWorkoutRouteDataSource(0);
  swift_allocObject();
  id v5 = a1;
  swift_retain();
  uint64_t v6 = sub_241BBA5EC((uint64_t)v5);
  uint64_t v7 = qword_268D42CA8;
  *(void *)(v4 + qword_268D42CA8) = v6;
  type metadata accessor for DataTypeDetailWorkoutEffortDataSource(0);
  swift_allocObject();
  id v8 = v5;
  uint64_t v9 = sub_241BBABA0((uint64_t)v8);

  uint64_t v10 = qword_268D42CB0;
  *(void *)(v4 + qword_268D42CB0) = v9;
  type metadata accessor for DataTypeDetailWorkoutEstimatedEffortDataSource(0);
  swift_allocObject();
  id v11 = v8;
  uint64_t v12 = sub_241BBB160((uint64_t)v11);

  uint64_t v13 = qword_268D42CB8;
  *(void *)(v4 + qword_268D42CB8) = v12;
  swift_release();
  sub_241AF8F78();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_241CEC2D0;
  uint64_t v15 = MEMORY[0x263F440A0];
  *(void *)(v14 + 32) = *(void *)(v4 + v7);
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = *(void *)(v4 + v10);
  *(void *)(v14 + 56) = v15;
  *(void *)(v14 + 64) = *(void *)(v4 + v13);
  *(void *)(v14 + 72) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241CD8AE0();
  uint64_t v16 = sub_241CD9200();

  return v16;
}

uint64_t WorkoutSampleDetailViewController.init(healthStore:)(void *a1)
{
  uint64_t v2 = v1;
  *(void *)(v2 + qword_268D42CA0) = a1;
  type metadata accessor for WorkoutSampleDetailCompoundDataSource(0);
  uint64_t v4 = swift_allocObject();
  type metadata accessor for DataTypeDetailWorkoutRouteDataSource(0);
  swift_allocObject();
  id v5 = a1;
  swift_retain();
  uint64_t v6 = sub_241BBA5EC((uint64_t)v5);
  uint64_t v7 = qword_268D42CA8;
  *(void *)(v4 + qword_268D42CA8) = v6;
  type metadata accessor for DataTypeDetailWorkoutEffortDataSource(0);
  swift_allocObject();
  id v8 = v5;
  uint64_t v9 = sub_241BBABA0((uint64_t)v8);

  uint64_t v10 = qword_268D42CB0;
  *(void *)(v4 + qword_268D42CB0) = v9;
  type metadata accessor for DataTypeDetailWorkoutEstimatedEffortDataSource(0);
  swift_allocObject();
  id v11 = v8;
  uint64_t v12 = sub_241BBB160((uint64_t)v11);

  uint64_t v13 = qword_268D42CB8;
  *(void *)(v4 + qword_268D42CB8) = v12;
  swift_release();
  sub_241AF8F78();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_241CEC2D0;
  uint64_t v15 = MEMORY[0x263F440A0];
  *(void *)(v14 + 32) = *(void *)(v4 + v7);
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = *(void *)(v4 + v10);
  *(void *)(v14 + 56) = v15;
  *(void *)(v14 + 64) = *(void *)(v4 + v13);
  *(void *)(v14 + 72) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241CD8AE0();
  uint64_t v16 = sub_241CD9200();

  return v16;
}

uint64_t type metadata accessor for WorkoutSampleDetailCompoundDataSource(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_268D42CC0);
}

void sub_241B60EB0()
{
}

Swift::Void __swiftcall WorkoutSampleDetailViewController.viewDidLoad()()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for WorkoutSampleDetailViewController(0);
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  uint64_t v1 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v1, 0x8000000241CE13D0);

  id v2 = objc_msgSend(v0, sel_collectionView);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = (void *)sub_241CDB2A0();
    id v5 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_241B61084(void *a1)
{
  id v1 = a1;
  WorkoutSampleDetailViewController.viewDidLoad()();
}

void WorkoutSampleDetailViewController.__allocating_init(dataSource:)()
{
}

void WorkoutSampleDetailViewController.init(dataSource:)()
{
}

id WorkoutSampleDetailViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void WorkoutSampleDetailViewController.init(collectionViewLayout:)()
{
}

void sub_241B611A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_241B611D4()
{
}

id WorkoutSampleDetailViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutSampleDetailViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_241B6121C(uint64_t a1)
{
}

uint64_t type metadata accessor for WorkoutSampleDetailViewController(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_268D42CD0);
}

uint64_t sub_241B6124C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241B612A0()
{
  return type metadata accessor for WorkoutSampleDetailCompoundDataSource(0);
}

uint64_t sub_241B612A8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241B612F8()
{
  return type metadata accessor for WorkoutSampleDetailViewController(0);
}

void sub_241B61300(void *a1, void *a2, void (*a3)(id, void))
{
  uint64_t v4 = v3;
  sub_241A5D1DC();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  id v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v28 - v12;
  sub_241A313AC(0, &qword_26B034E40);
  id v14 = sub_241A4F20C(a1);
  uint64_t v15 = v4 + qword_26B0411F8;
  uint64_t v16 = sub_241CD9ED0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v15, v16);
  uint64_t v17 = *MEMORY[0x263F46C78];
  uint64_t v18 = sub_241CD9970();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v13, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
  id v20 = a2;
  id v21 = objc_msgSend(v14, sel_data);
  if (v21)
  {
    os_log_type_t v22 = v21;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v23 = sub_241CD6AE0();
    unint64_t v25 = v24;

    sub_241A5D234((uint64_t)v13, (uint64_t)v11);
    uint64_t v29 = 0;
    memset(v28, 0, sizeof(v28));
    id v26 = sub_241A54648(v23, v25, 16, (uint64_t)v11, (uint64_t)v20, 0, (uint64_t)v28);

    sub_241A37374(v23, v25);
    sub_241A32954((uint64_t)v13, (uint64_t (*)(void))sub_241A5D1DC);
    id v27 = v26;
    a3(v26, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for StateOfMindMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B037F90;
  if (!qword_26B037F90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B615F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  objc_super v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B66CDC(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v74 = (char *)v56 - v8;
  uint64_t v9 = sub_241CD6810();
  uint64_t v75 = *(void *)(v9 - 8);
  uint64_t v76 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v73 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD6ED0();
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v65 = v11;
  MEMORY[0x270FA5388](v11);
  os_log_t v63 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_241CD6EE0();
  uint64_t v77 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  id v14 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B66CDC(0, &qword_26B0385B8, MEMORY[0x263F07490], v6);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  unint64_t v62 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v56 - v18;
  uint64_t v20 = sub_241CD6D00();
  id v21 = *(void **)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  os_log_type_t v71 = (char *)v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v70 = (char *)v56 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)v56 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)v56 - v29;
  uint64_t v60 = type metadata accessor for StatisticTrendSummarySharableModelGenerator(0);
  unint64_t v31 = (void (*)(char *, uint64_t, uint64_t))v21[2];
  uint64_t v78 = a1;
  id v68 = v21 + 2;
  id v69 = v31;
  v31(v30, a1, v20);
  uint64_t v72 = a2;
  sub_241CD9CF0();
  uint64_t v32 = sub_241CD9FA0();
  uint64_t v34 = v33;
  if (v32 == sub_241CD9FA0() && v34 == v35)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_5;
  }
  char v36 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v36)
  {
LABEL_5:
    uint64_t v66 = a3;
    sub_241CD6EA0();
    sub_241CD6C20();
    uint64_t v37 = v77 + 8;
    uint64_t v38 = v67;
    unint64_t v61 = *(void (**)(char *, uint64_t))(v77 + 8);
    v61(v14, v67);
    unsigned int v39 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v21[6];
    if (v39((uint64_t)v19, 1, v20) == 1)
    {
      sub_241B66968((uint64_t)v19, &qword_26B0385B8, MEMORY[0x263F07490]);
    }
    else
    {
      id v59 = v30;
      uint64_t v40 = (void (*)(char *, char *, uint64_t))v21[4];
      unint64_t v57 = v39;
      uint64_t v41 = v28;
      v56[1] = v21 + 4;
      v56[0] = v40;
      v40(v28, v19, v20);
      sub_241CD6EA0();
      uint64_t v42 = *MEMORY[0x263F07830];
      uint64_t v44 = v63;
      uint64_t v43 = v64;
      uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 104);
      os_log_type_t v58 = v21;
      uint64_t v46 = v65;
      v45(v63, v42, v65);
      uint64_t v47 = (uint64_t)v62;
      uint64_t v77 = v37;
      sub_241CD6E70();
      uint64_t v48 = v46;
      id v21 = v58;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v48);
      v61(v14, v38);
      uint64_t v49 = (void (*)(char *, uint64_t))v21[1];
      v49(v41, v20);
      if (v57(v47, 1, v20) == 1)
      {
        sub_241B66968(v47, &qword_26B0385B8, MEMORY[0x263F07490]);
        uint64_t v30 = v59;
      }
      else
      {
        uint64_t v30 = v59;
        v49(v59, v20);
        ((void (*)(char *, uint64_t, uint64_t))v56[0])(v30, v47, v20);
      }
    }
  }
  sub_241CD9CF0();
  uint64_t v50 = (uint64_t)v74;
  sub_241CD9F70();
  uint64_t v52 = v75;
  uint64_t v51 = v76;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v50, 1, v76) == 1)
  {
    sub_241B66968(v50, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v80 = 0;
    unint64_t v81 = 0xE000000000000000;
    sub_241CDBE00();
    sub_241CDB180();
    uint64_t v55 = v60;
    uint64_t v79 = v60;
    sub_241B66A64();
    sub_241CDB120();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    uint64_t v79 = v55;
    sub_241CDB120();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t result = sub_241CDBF10();
    __break(1u);
  }
  else
  {
    uint64_t v53 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v73, v50, v51);
    sub_241CD67E0();
    v69(v71, v78, v20);
    sub_241CD67C0();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v51);
    return ((uint64_t (*)(char *, uint64_t))v21[1])(v30, v20);
  }
  return result;
}

uint64_t sub_241B61E4C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *, char *, uint64_t), unint64_t a5)
{
  uint64_t v50 = a4;
  uint64_t v53 = a3;
  id v54 = a1;
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v55 = *(void *)(v6 - 8);
  unint64_t v56 = (void *)v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD6D00();
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B66CDC(0, &qword_26B0321B0, MEMORY[0x263F46B90], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v46 - v13;
  uint64_t v15 = sub_241CD9840();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v46 - v19;
  uint64_t v21 = sub_241CD9CC0();
  if (*(void *)(v21 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v14, v21 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_241B66968((uint64_t)v14, &qword_26B0321B0, MEMORY[0x263F46B90]);
    sub_241CDA0F0();
    unint64_t v22 = a5;
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_241CDA190();
    os_log_type_t v24 = sub_241CDB650();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v27 = v55;
    uint64_t v26 = v56;
    if (v25)
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      aBlock[0] = v29;
      *(_DWORD *)uint64_t v28 = 136315394;
      uint64_t v58 = type metadata accessor for StatisticTrendSummarySharableModelGenerator(0);
      sub_241B66A64();
      uint64_t v30 = sub_241CDB120();
      uint64_t v58 = sub_241A33FE4(v30, v31, aBlock);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_241A33FE4((uint64_t)v50, v22, aBlock);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v23, v24, "[%s]: Statistic trend request without statistics option: %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v29, -1, -1);
      MEMORY[0x245637F20](v28, -1, -1);

      (*(void (**)(char *, void *))(v27 + 8))(v8, v56);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, void *))(v27 + 8))(v8, v26);
    }
    return MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v50(v20, v14, v15);
    uint64_t v32 = swift_allocObject();
    uint64_t v49 = v32;
    *(void *)(v32 + 16) = MEMORY[0x263F8EE78];
    unint64_t v56 = (void *)(v32 + 16);
    uint64_t v48 = v20;
    sub_241CD67E0();
    uint64_t v55 = sub_241CD6C60();
    uint64_t v47 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v33 = v52;
    uint64_t v34 = *(void (**)(char *, uint64_t))(v51 + 8);
    v34(v11, v52);
    sub_241CD67B0();
    uint64_t v35 = (void *)sub_241CD6C60();
    v34(v11, v33);
    uint64_t v37 = v47;
    char v36 = v48;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v47, v48, v15);
    unint64_t v38 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v39 = (v17 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = swift_allocObject();
    v50((char *)(v40 + v38), v37, v15);
    *(void *)(v40 + v39) = v49;
    aBlock[4] = (uint64_t)sub_241B66B7C;
    uint64_t aBlock[5] = v40;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_241B669D8;
    aBlock[3] = (uint64_t)&unk_26F5C3A00;
    uint64_t v41 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v42 = (void *)v55;
    objc_msgSend(v54, sel_enumerateStatisticsFromDate_toDate_withBlock_, v55, v35, v41);
    _Block_release(v41);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v36, v15);
    uint64_t v43 = v56;
    swift_beginAccess();
    uint64_t v44 = *v43;
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v44;
}

uint64_t sub_241B6252C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v53 = a5;
  uint64_t v54 = a6;
  int v52 = a4;
  uint64_t v50 = a1;
  uint64_t v51 = a3;
  uint64_t v49 = sub_241CD77C0();
  uint64_t v56 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v58 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B66CDC(0, &qword_26B02E900, MEMORY[0x263F46B28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v55 = (uint64_t)&v38 - v11;
  uint64_t v46 = sub_241CD9D00();
  uint64_t v12 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  id v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v14;
  uint64_t v15 = sub_241CD6D00();
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  unint64_t v57 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v42 = (char *)&v38 - v18;
  uint64_t v19 = sub_241CD97E0();
  uint64_t v41 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  BOOL v25 = (char *)&v38 - v24;
  uint64_t v39 = a2;
  sub_241CD9CB0();
  sub_241CD97D0();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v20 + 8);
  v40(v25, v19);
  uint64_t v26 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v46);
  uint64_t v27 = v50;
  sub_241CD9A20();
  uint64_t v28 = v56;
  uint64_t v29 = v51;
  uint64_t v30 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v58, v51, v49);
  uint64_t v45 = sub_241CD99C0();
  uint64_t v43 = sub_241CD9A10();
  sub_241CD99B0();
  sub_241CD97D0();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v30);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v39, v26);
  uint64_t v31 = sub_241CD9A30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v27, v31);
  v40(v23, v41);
  uint64_t v32 = v48;
  uint64_t v33 = *(void (**)(uint64_t, char *, uint64_t))(v47 + 32);
  v33(a7, v42, v48);
  uint64_t v34 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a7 + v34[5], v44, v26);
  sub_241A68880(v55, a7 + v34[6]);
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(a7 + v34[7], v58, v30);
  *(unsigned char *)(a7 + v34[8]) = v52;
  *(void *)(a7 + v34[9]) = v45;
  *(void *)(a7 + v34[10]) = v43;
  uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v33)(a7 + v34[11], v57, v32);
  char v36 = (void *)(a7 + v34[12]);
  uint64_t v37 = v54;
  void *v36 = v53;
  v36[1] = v37;
  return result;
}

uint64_t sub_241B62A3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_241CD6D00();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_241B62AA4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_241B62AB0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_241B62ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241B615F4(v2 + *(int *)(a1 + 44), v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_241B62AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_241CD77C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_241B62B44(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_241B62B50(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_241B62B88@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  uint64_t v1 = sub_241CD7650();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_241CD76E0();
  sub_241A30878(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  v14[2] = inited;
  sub_241CDB2E0();
  sub_241B66CDC(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v7 = sub_241CD73B0();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v8 + 104))(v10 + v9, *MEMORY[0x263F45508], v7);
  id v11 = v5;
  sub_241C5D74C(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v12 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F45690], v1);
  sub_241CD7680();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241B62E44@<X0>(uint64_t a1@<X8>)
{
  v14[1] = a1;
  uint64_t v1 = sub_241CD7650();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_241CD76E0();
  sub_241A30878(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  v14[2] = inited;
  sub_241CDB2E0();
  sub_241B66CDC(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v7 = sub_241CD73B0();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v8 + 104))(v10 + v9, *MEMORY[0x263F45508], v7);
  id v11 = v5;
  sub_241C5D74C(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v12 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F45690], v1);
  sub_241CD7680();

  return swift_bridgeObjectRelease();
}

uint64_t *sub_241B63100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v21 = a5;
  uint64_t v11 = *v5;
  uint64_t v12 = sub_241CD7690();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B62E44((uint64_t)v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))((uint64_t)v5 + OBJC_IVAR____TtC9Summaries43StatisticTrendSummarySharableModelGenerator_domain, v15, v12);
  sub_241B66564(a2, (uint64_t)v5 + OBJC_IVAR____TtC9Summaries43StatisticTrendSummarySharableModelGenerator_request);
  uint64_t v16 = sub_241B66D40(&qword_26B02F8B8, (void (*)(uint64_t))type metadata accessor for StatisticTrendSummarySharableModelGenerator);
  uint64_t v17 = static TrendSummaryModelGenerating.makePublisher(generatorContext:request:trendAnalysisEngine:cloudSyncObserverFactory:)(a1, a2, a3, a4, v21, v11, v16);
  sub_241A31190(a3);
  sub_241B66C40(a2);
  uint64_t v18 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
  *(uint64_t *)((char *)v6 + OBJC_IVAR____TtC9Summaries43StatisticTrendSummarySharableModelGenerator_publisher) = v17;
  return v6;
}

uint64_t sub_241B632F8(uint64_t a1, uint64_t a2)
{
  uint64_t v128 = a1;
  uint64_t v3 = sub_241CD7690();
  uint64_t v121 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v119 = (uint64_t)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B66CDC(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v114 = (char *)&v98 - v7;
  sub_241B66CDC(0, &qword_26B0385B8, MEMORY[0x263F07490], v5);
  MEMORY[0x270FA5388](v8 - 8);
  id v113 = (char *)&v98 - v9;
  uint64_t v117 = sub_241CDB5C0();
  uint64_t v116 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v115 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241ABD6A4();
  uint64_t v12 = v11;
  uint64_t v120 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v118 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_241CD9D00();
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v102 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v127 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v125 = (char *)&v98 - v18;
  uint64_t v108 = sub_241CD7740();
  uint64_t v19 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v21 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_241CDA1A0();
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v126 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t (*)(uint64_t))MEMORY[0x263F46B28];
  sub_241B66CDC(0, &qword_26B02E900, MEMORY[0x263F46B28], v5);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v98 - v25;
  uint64_t v132 = sub_241CD6810();
  uint64_t v130 = *(void *)(v132 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v132);
  uint64_t v129 = (char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = a2 + v15[11];
  uint64_t v30 = a2 + v15[5];
  uint64_t v131 = (char *)&v98 - v31;
  uint64_t v111 = v30;
  sub_241B615F4(v29, v30, (uint64_t)&v98 - v31);
  os_log_t v112 = v15;
  sub_241B668F8(a2 + v15[6], (uint64_t)v26, &qword_26B02E900, v23, v5);
  uint64_t v32 = sub_241CD9820();
  uint64_t v33 = *(void *)(v32 - 8);
  int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v26, 1, v32);
  uint64_t v122 = v12;
  uint64_t v123 = v3;
  uint64_t v124 = a2;
  if (v34 == 1)
  {
    sub_241B66968((uint64_t)v26, &qword_26B02E900, MEMORY[0x263F46B28]);
LABEL_8:
    id v105 = 0;
    goto LABEL_11;
  }
  uint64_t v35 = sub_241CD9810();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v32);
  if (!v35) {
    goto LABEL_8;
  }
  uint64_t v36 = *(void *)(v35 + 16);
  if (v36)
  {
    v134[0] = MEMORY[0x263F8EE78];
    sub_241CDBE80();
    uint64_t v37 = self;
    uint64_t v38 = 0;
    do
    {
      uint64_t v39 = v38 + 1;
      id v40 = objc_msgSend(v37, sel_predicateForCategorySamplesWithOperatorType_value_, 4, *(void *)(v35 + 8 * v38 + 32));
      sub_241CDBE60();
      sub_241CDBE90();
      sub_241CDBEA0();
      sub_241CDBE70();
      uint64_t v38 = v39;
    }
    while (v36 != v39);
    swift_bridgeObjectRelease();
    a2 = v124;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_241B66C9C();
  uint64_t v41 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  id v105 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v41);

LABEL_11:
  uint64_t v42 = (uint64_t)v127;
  uint64_t v43 = v128;
  uint64_t v44 = v132;
  uint64_t v46 = (uint64_t)v125;
  uint64_t v45 = v126;
  uint64_t v47 = v129;
  sub_241CDA180();
  uint64_t v48 = v19;
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v50 = v108;
  v49(v21, v43, v108);
  sub_241B66564(a2, v46);
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
  uint64_t v107 = v130 + 16;
  uint64_t v106 = v51;
  v51(v47, v131, v44);
  sub_241B66564(a2, v42);
  int v52 = sub_241CDA190();
  os_log_type_t v53 = sub_241CDB670();
  int v54 = v53;
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v100 = swift_slowAlloc();
    v134[0] = v100;
    *(_DWORD *)uint64_t v55 = 136316162;
    os_log_t v99 = v52;
    uint64_t v56 = sub_241CDC270();
    int v101 = v54;
    uint64_t v133 = sub_241A33FE4(v56, v57, v134);
    uint64_t v98 = v134;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    uint64_t v58 = (void *)sub_241CD76E0();
    uint64_t v59 = sub_241CD73E0();
    uint64_t v60 = v130;
    unint64_t v62 = v61;

    uint64_t v133 = sub_241A33FE4(v59, v62, v134);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v50);
    *(_WORD *)(v55 + 22) = 2080;
    os_log_t v63 = v112;
    uint64_t v64 = (uint64_t)v125;
    uint64_t v65 = (void *)sub_241CD7770();
    id v66 = objc_msgSend(v65, sel_sensitiveLoggingIdentifier);

    uint64_t v67 = sub_241CDB0D0();
    unint64_t v69 = v68;

    uint64_t v133 = sub_241A33FE4(v67, v69, v134);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    uint64_t v70 = v132;
    sub_241B66C40(v64);
    *(_WORD *)(v55 + 32) = 2080;
    sub_241B66D40(&qword_26B031F70, MEMORY[0x263F062D0]);
    os_log_type_t v71 = v129;
    uint64_t v72 = sub_241CDC0D0();
    uint64_t v133 = sub_241A33FE4(v72, v73, v134);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    uint64_t v74 = *(char **)(v60 + 8);
    uint64_t v125 = (char *)((v60 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
    uint64_t v129 = v74;
    ((void (*)(char *, uint64_t))v74)(v71, v70);
    *(_WORD *)(v55 + 42) = 2080;
    uint64_t v75 = (uint64_t)v127;
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v102, &v127[v63[5]], v104);
    uint64_t v76 = sub_241CDB120();
    uint64_t v133 = sub_241A33FE4(v76, v77, v134);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B66C40(v75);
    os_log_t v78 = v99;
    _os_log_impl(&dword_241A23000, v99, (os_log_type_t)v101, "[%s]_%s_%s: Executing query for date interval %s and configuration %s", (uint8_t *)v55, 0x34u);
    uint64_t v79 = v100;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v79, -1, -1);
    MEMORY[0x245637F20](v55, -1, -1);

    (*(void (**)(char *, uint64_t))(v109 + 8))(v126, v110);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v50);
    sub_241B66C40(v46);
    uint64_t v80 = v129;
    uint64_t v81 = v130;
    unint64_t v82 = *(char **)(v130 + 8);
    uint64_t v125 = (char *)((v130 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
    uint64_t v129 = v82;
    ((void (*)(char *, uint64_t))v82)(v80, v44);
    sub_241B66C40(v42);

    (*(void (**)(char *, uint64_t))(v109 + 8))(v45, v110);
    uint64_t v70 = v44;
    uint64_t v60 = v81;
  }
  sub_241CD76B0();
  sub_241A311E0(v134, v134[3]);
  id v83 = (void *)sub_241CD75B0();
  id v84 = (void *)sub_241CD7770();
  uint64_t v85 = sub_241CD6D00();
  uint64_t v86 = (uint64_t)v113;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v113, 1, 1, v85);
  uint64_t v87 = (uint64_t)v114;
  unint64_t v88 = v131;
  v106(v114, v131, v70);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v87, 0, 1, v70);
  uint64_t v89 = v115;
  unint64_t v90 = v105;
  sub_241CDB5F0();

  sub_241B66968(v87, &qword_26B038F10, MEMORY[0x263F062D0]);
  sub_241B66968(v86, &qword_26B0385B8, MEMORY[0x263F07490]);
  sub_241A31190((uint64_t)v134);
  sub_241CD7730();
  uint64_t v91 = v119;
  sub_241B62E44(v119);
  sub_241B66D40(&qword_26B034D68, MEMORY[0x263F44B38]);
  uint64_t v92 = v117;
  uint64_t v93 = sub_241CDA680();
  (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v91, v123);
  sub_241A31190((uint64_t)v134);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v89, v92);
  v134[0] = v93;
  sub_241ABD780();
  sub_241B66CDC(0, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_241B66D40(&qword_26B032768, (void (*)(uint64_t))sub_241ABD780);
  unint64_t v94 = v118;
  sub_241CDA710();
  swift_release();
  sub_241B66D40(&qword_26B0323D0, (void (*)(uint64_t))sub_241ABD6A4);
  uint64_t v95 = v122;
  uint64_t v96 = sub_241CDA6D0();

  (*(void (**)(char *, uint64_t))(v120 + 8))(v94, v95);
  ((void (*)(char *, uint64_t))v129)(v88, v132);
  return v96;
}

uint64_t sub_241B642E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_241CDB5B0();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a2, 0, 1, v4);
}

uint64_t sub_241B643B8@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v49 = a1;
  uint64_t v50 = a3;
  uint64_t v39 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v39);
  uint64_t v47 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_241CD6D00();
  uint64_t v44 = *(void *)(v40 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v41 = (char *)&v37 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = sub_241CD6810();
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v43 = (char *)&v37 - v12;
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x263F44B28];
  sub_241B66CDC(0, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v37 - v15;
  sub_241B66CDC(0, &qword_26B034D58, v13, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v20 = sub_241CDB5B0();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B668F8((uint64_t)v49, (uint64_t)v16, &qword_26B032CD8, v13, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v25 = 1;
  if (v24(v16, 1, v20) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v19, v16, v20);
    uint64_t v25 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, v25, 1, v20);
  if (v24(v19, 1, v20) == 1)
  {
    uint64_t result = sub_241B66968((uint64_t)v19, &qword_26B034D58, MEMORY[0x263F44B28]);
    uint64_t v27 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v38 = v23;
    v28(v23, v19, v20);
    uint64_t v49 = (void *)sub_241CDB5A0();
    uint64_t v29 = v48;
    uint64_t v37 = v48 + *(int *)(v39 + 20);
    sub_241B615F4(v48 + *(int *)(v39 + 44), v37, (uint64_t)v11);
    sub_241CD67E0();
    uint64_t v30 = v42;
    sub_241CD67B0();
    sub_241CD6C50();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v40);
    uint64_t v31 = (uint64_t)v43;
    sub_241CD67C0();
    uint64_t v32 = v46;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v45 + 8);
    v33(v11, v46);
    sub_241B66564(v29, v47);
    int v34 = (void (*)(char *, char *, uint64_t))sub_241CDB120();
    uint64_t v35 = v49;
    uint64_t v27 = sub_241B61E4C(v49, v37, v31, v34, v36);

    swift_bridgeObjectRelease();
    v33((char *)v31, v32);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v38, v20);
  }
  *uint64_t v50 = v27;
  return result;
}

uint64_t sub_241B64930()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries43StatisticTrendSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_241B66C40(v0 + OBJC_IVAR____TtC9Summaries43StatisticTrendSummarySharableModelGenerator_request);

  return swift_deallocClassInstance();
}

uint64_t sub_241B649F0()
{
  return type metadata accessor for StatisticTrendSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for StatisticTrendSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B02F8C8);
}

uint64_t sub_241B64A18()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B02F800);
}

char *sub_241B64B10(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD6D00();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_241CD9D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_241CD9820();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_241B66CDC(0, &qword_26B02E900, MEMORY[0x263F46B28], MEMORY[0x263F8D8F0]);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    uint64_t v23 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    a1[a3[8]] = a2[a3[8]];
    *(void *)&a1[v24] = *(void *)&a2[v24];
    uint64_t v25 = a3[11];
    *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v26, v27, v7);
    uint64_t v28 = a3[12];
    uint64_t v29 = &a1[v28];
    uint64_t v30 = &a2[v28];
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)uint64_t v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241B64DE4(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_241CD6D00();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = sub_241CD9820();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = a1 + a2[7];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + a2[11], v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241B64FA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_241CD9820();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_241B66CDC(0, &qword_26B02E900, MEMORY[0x263F46B28], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  uint64_t v22 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v23 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v24, v25, v6);
  uint64_t v26 = a3[12];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241B65228(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD6D00();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  uint64_t v29 = v6;
  v28(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_241CD9820();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_241B66CDC(0, &qword_26B02E900, MEMORY[0x263F46B28], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t, uint64_t))v28)(a1 + a3[11], a2 + a3[11], v29);
  uint64_t v24 = a3[12];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241B65540(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_241CD9820();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_241B66CDC(0, &qword_26B02E900, MEMORY[0x263F46B28], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  uint64_t v22 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v23 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  v7(a1 + v23, a2 + v23, v6);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_241B657A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD6D00();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  uint64_t v32 = v6;
  v31(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_241CD9820();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_241B66CDC(0, &qword_26B02E900, MEMORY[0x263F46B28], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t, uint64_t))v31)(a1 + a3[11], a2 + a3[11], v32);
  uint64_t v25 = a3[12];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241B65A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B65AAC);
}

uint64_t sub_241B65AAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD9D00();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  sub_241B66CDC(0, &qword_26B02E900, MEMORY[0x263F46B28], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_241CD77C0();
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[9]);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t sub_241B65C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B65C9C);
}

uint64_t sub_241B65C9C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_241CD6D00();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_241CD9D00();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      sub_241B66CDC(0, &qword_26B02E900, MEMORY[0x263F46B28], MEMORY[0x263F8D8F0]);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = sub_241CD77C0();
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[9]) = (a2 - 1);
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_241B65E74()
{
  sub_241CD6D00();
  if (v0 <= 0x3F)
  {
    sub_241CD9D00();
    if (v1 <= 0x3F)
    {
      sub_241B66CDC(319, &qword_26B02E900, MEMORY[0x263F46B28], MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F)
      {
        sub_241CD77C0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

_UNKNOWN **sub_241B66008()
{
  return &off_26F5C38E8;
}

uint64_t sub_241B66014(uint64_t a1)
{
  uint64_t result = sub_241B66D40(&qword_26B02F8B0, (void (*)(uint64_t))type metadata accessor for StatisticTrendSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241B6606C()
{
  return &off_26F5C3930;
}

uint64_t sub_241B66078()
{
  return swift_retain();
}

uint64_t sub_241B6608C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries43StatisticTrendSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241B66108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  sub_241B663F0();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = a1;
  sub_241B66564(a3, (uint64_t)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v3;
  sub_241B66810((uint64_t)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  sub_241B664CC();
  sub_241B66CDC(0, &qword_26B034C10, (uint64_t (*)(uint64_t))sub_241A558EC, MEMORY[0x263F8D488]);
  sub_241B66D40(&qword_26B0326C0, (void (*)(uint64_t))sub_241B664CC);
  sub_241CDA710();
  swift_release();
  sub_241B66D40((unint64_t *)&qword_26B032388, (void (*)(uint64_t))sub_241B663F0);
  uint64_t v16 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v16;
}

uint64_t sub_241B66398(uint64_t a1)
{
  uint64_t result = sub_241B66D40(&qword_26B02F8C0, (void (*)(uint64_t))type metadata accessor for StatisticTrendSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_241B663F0()
{
  if (!qword_26B032390)
  {
    sub_241B664CC();
    sub_241B66CDC(255, &qword_26B034C10, (uint64_t (*)(uint64_t))sub_241A558EC, MEMORY[0x263F8D488]);
    sub_241B66D40(&qword_26B0326C0, (void (*)(uint64_t))sub_241B664CC);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032390);
    }
  }
}

void sub_241B664CC()
{
  if (!qword_26B0326C8)
  {
    sub_241B66CDC(255, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0326C8);
    }
  }
}

uint64_t sub_241B66564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241B665C8()
{
  uint64_t v1 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v16 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v17 = v0;
  uint64_t v4 = v0 + v3;
  uint64_t v5 = sub_241CD6D00();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v0 + v3, v5);
  uint64_t v7 = v0 + v3 + v1[5];
  uint64_t v8 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + v3 + v1[6];
  uint64_t v10 = sub_241CD9820();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v2 | 7;
  uint64_t v13 = v4 + v1[7];
  uint64_t v14 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6(v4 + v1[11], v5);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v17, v3 + v16, v12);
}

uint64_t sub_241B66810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241B66874@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_241B643B8(a1, v6, a2);
}

uint64_t sub_241B668F8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_241B66CDC(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_241B66968(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241B66CDC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241B669D8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_241B66A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241B615F4(v2 + *(int *)(a1 + 40), v2 + *(int *)(a1 + 20), a2);
}

unint64_t sub_241B66A64()
{
  unint64_t result = qword_268D42CE0;
  if (!qword_268D42CE0)
  {
    type metadata accessor for StatisticTrendSummarySharableModelGenerator(255);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D42CE0);
  }
  return result;
}

uint64_t sub_241B66AA0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241B66AD8()
{
  uint64_t v1 = sub_241CD9840();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241B66B7C(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_241CD9840() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241BDF4FC(a1, a2, v2 + v6, v7);
}

uint64_t sub_241B66C28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241B66C38()
{
  return swift_release();
}

uint64_t sub_241B66C40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_241B66C9C()
{
  unint64_t result = qword_26B030370;
  if (!qword_26B030370)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B030370);
  }
  return result;
}

void sub_241B66CDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B66D40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B66D88(void *a1, uint64_t a2, uint64_t (*a3)(void *), uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v51 = a3;
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v44 - v10;
  uint64_t v12 = sub_241CD6D70();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_msgSend(*(id *)(a2 + 32), sel_profileIdentifier);
  id v17 = objc_msgSend(v16, sel_identifier);

  sub_241CD6D50();
  uint64_t v18 = sub_241CD6D20();
  unint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v21 = a1;
  if (a1)
  {
    uint64_t v46 = v18;
    id v22 = a1;
    sub_241CDA0F0();
    id v23 = v22;
    swift_bridgeObjectRetain();
    id v24 = v23;
    uint64_t v25 = sub_241CDA190();
    os_log_type_t v26 = sub_241CDB650();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v53 = v45;
      *(_DWORD *)uint64_t v27 = 136446722;
      uint64_t v28 = sub_241CDC270();
      uint64_t v47 = a1;
      uint64_t v52 = sub_241A33FE4(v28, v29, &v53);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_241A33FE4(v46, v20, &v53);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 22) = 2082;
      id v30 = v24;
      id v31 = objc_msgSend(v30, sel_description);
      uint64_t v32 = sub_241CDB0D0();
      unint64_t v34 = v33;

      uint64_t v52 = sub_241A33FE4(v32, v34, &v53);
      uint64_t v21 = v47;
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v25, v26, "[%{public}s] Failed to set wheelchaire use for %{public}s: %{public}s", (uint8_t *)v27, 0x20u);
      uint64_t v35 = v45;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v35, -1, -1);
      MEMORY[0x245637F20](v27, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v49);
  }
  else
  {
    sub_241CDA0F0();
    swift_bridgeObjectRetain();
    unint64_t v36 = sub_241CDA190();
    os_log_type_t v37 = sub_241CDB670();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = v18;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v53 = v40;
      *(_DWORD *)uint64_t v38 = 136446466;
      uint64_t v47 = 0;
      uint64_t v41 = sub_241CDC270();
      uint64_t v52 = sub_241A33FE4(v41, v42, &v53);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_241A33FE4(v39, v20, &v53);
      uint64_t v21 = v47;
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v36, v37, "[%{public}s] Successfully set wheelchaire use for %{public}s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v40, -1, -1);
      MEMORY[0x245637F20](v38, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v49);
  }
  return v51(v21);
}

uint64_t sub_241B6731C(void *a1, void *a2, uint64_t a3, uint64_t (*a4)(void *), uint64_t a5, uint64_t a6)
{
  sub_241B68084(a1, a2, a3, a4, a5, a6);
  swift_release();

  return swift_release();
}

void sub_241B67360(id a1, char a2, void *a3, void (*a4)(void))
{
  if (a2)
  {
    id v8 = a1;
    sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
    swift_willThrowTypedImpl();
    uint64_t v9 = (void *)sub_241CD6A30();
    a4();
  }
  else
  {
    uint64_t v6 = a3[8];
    uint64_t v7 = a3[9];
    sub_241A311E0(a3 + 5, v6);
    (*(void (**)(id, uint64_t, uint64_t))(v7 + 8))(a1, v6, v7);
    ((void (*)(void))a4)(0);
  }
}

void sub_241B67450(id a1, char a2, uint64_t a3, void (*a4)(id, uint64_t))
{
  if (a2)
  {
    id v7 = a1;
    sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
    swift_willThrowTypedImpl();
    id v8 = a1;
    a4(a1, 1);
  }
  else
  {
    sub_241A960AC(a1, 0);
    uint64_t v6 = sub_241B68444((unint64_t)a1);
    sub_241A96038(a1, 0);
    a4((id)v6, 0);
  }
}

uint64_t sub_241B67538()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC9Summaries39WheelchairSettingSummarySharingExecutor7Planner_signals;
  uint64_t v2 = sub_241CD94E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241B675E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC9Summaries39WheelchairSettingSummarySharingExecutor7Planner_signals;
  uint64_t v4 = sub_241CD94E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241B67658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B67738(a1, a2, a3, a4, MEMORY[0x263F45460]);
}

uint64_t sub_241B67670(uint64_t a1, void *a2)
{
  return sub_241B68838(a2);
}

uint64_t sub_241B67678(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_241B67EA8(&qword_268D42D38, (void (*)(uint64_t))type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner);

  return MEMORY[0x270F36170](a1, a2, v5, v6);
}

uint64_t sub_241B67720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B67738(a1, a2, a3, a4, MEMORY[0x263F45470]);
}

uint64_t sub_241B67738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = *v5;
  uint64_t v9 = sub_241B67EA8(&qword_268D42D38, (void (*)(uint64_t))type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner);

  return a5(a1, a2, v8, v9);
}

uint64_t sub_241B677F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B67738(a1, a2, a3, a4, MEMORY[0x263F45468]);
}

uint64_t sub_241B6780C()
{
  swift_unknownObjectRelease();

  sub_241A31190(v0 + 40);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_241B6785C()
{
  return MEMORY[0x270F35FE8](0xD00000000000003DLL, 0x8000000241CE17D0);
}

uint64_t sub_241B67878(uint64_t a1)
{
  uint64_t v3 = sub_241CD94E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  long long v10 = *(_OWORD *)(v1 + 16);
  v7(v6, a1, v3);
  type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8 + OBJC_IVAR____TtCC9Summaries39WheelchairSettingSummarySharingExecutor7Planner_signals, v6, v3);
  swift_unknownObjectRetain();
  return v8;
}

void sub_241B679A4(uint64_t a1, uint64_t (*a2)(void *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  sub_241B67D9C(0);
  MEMORY[0x270FA5388](v8 - 8);
  long long v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B67CC4();
  sub_241CD9630();
  sub_241AC75E4();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11) == 1)
  {
    sub_241B69318((uint64_t)v10, (uint64_t (*)(void))sub_241B67D9C);
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v14 = (void *)sub_241CDAEB0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  swift_retain();
  swift_retain();
  sub_241B6731C(v14, v4, (uint64_t)v4, a2, a3, v7);
}

id sub_241B67B44(uint64_t a1)
{
  return sub_241B67FD8(a1);
}

uint64_t type metadata accessor for WheelchairSettingSummarySharingExecutor()
{
  return self;
}

uint64_t sub_241B67B8C()
{
  return type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner();
}

uint64_t type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner()
{
  uint64_t result = qword_268D42CE8;
  if (!qword_268D42CE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B67BE0()
{
  uint64_t result = sub_241CD94E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241B67C7C()
{
  return sub_241B67EA8(&qword_268D42CF8, (void (*)(uint64_t))sub_241B67CC4);
}

void sub_241B67CC4()
{
  if (!qword_268D42D00)
  {
    sub_241B67D9C(255);
    sub_241B67EF0(&qword_268D42D08, (void (*)(void))sub_241B67E74);
    sub_241B67EF0(&qword_268D42D18, (void (*)(void))sub_241B67F5C);
    unint64_t v0 = sub_241CD9640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42D00);
    }
  }
}

void sub_241B67D9C(uint64_t a1)
{
}

void sub_241B67DD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_241B67E34()
{
  unint64_t result = qword_26B031F28;
  if (!qword_26B031F28)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B031F28);
  }
  return result;
}

uint64_t sub_241B67E74()
{
  return sub_241B67EA8(&qword_268D42D10, (void (*)(uint64_t))sub_241AC75E4);
}

uint64_t sub_241B67EA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B67EF0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B67D9C(255);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B67F5C()
{
  return sub_241B67EA8(&qword_268D42D20, (void (*)(uint64_t))sub_241AC75E4);
}

uint64_t sub_241B67F90()
{
  return sub_241B67EA8(&qword_268D42D28, (void (*)(uint64_t))type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner);
}

id sub_241B67FD8(uint64_t a1)
{
  v4[1] = *(id *)MEMORY[0x263EF8340];
  v4[0] = 0;
  if (objc_msgSend(v1, sel__setWheelchairUse_error_, a1, v4)) {
    return v4[0];
  }
  id v3 = v4[0];
  sub_241CD6A40();

  return (id)swift_willThrow();
}

uint64_t sub_241B68084(void *a1, void *a2, uint64_t a3, uint64_t (*a4)(void *), uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a6;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a2;
  v13[3] = sub_241B683BC;
  v13[4] = v12;
  if (!a1)
  {
    uint64_t v16 = a2[8];
    uint64_t v17 = a2[9];
    sub_241A311E0(a2 + 5, v16);
    id v22 = *(void (**)(void, uint64_t, uint64_t))(v17 + 8);
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_retain();
    v22(0, v16, v17);
    sub_241B66D88(0, a3, a4, a5);
    swift_release();
    goto LABEL_6;
  }
  swift_getObjectType();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  id v21 = a1;
  if (sub_241CD7350())
  {
    uint64_t v14 = sub_241BBE894();
    sub_241A5A43C(v14);
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = a2;
    v15[3] = sub_241B683D0;
    v15[4] = v13;
    swift_retain();
    swift_retain();
    sub_241CD7E30();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
LABEL_6:
    swift_release();
    return swift_release_n();
  }
  uint64_t v18 = a2[8];
  uint64_t v19 = a2[9];
  sub_241A311E0(a2 + 5, v18);
  (*(void (**)(void, uint64_t, uint64_t))(v19 + 8))(0, v18, v19);
  sub_241B66D88(0, a3, a4, a5);
  swift_release();
  swift_release();

  return swift_release_n();
}

uint64_t sub_241B683B4()
{
  return sub_241B683E8(48);
}

uint64_t sub_241B683BC(void *a1)
{
  return sub_241B66D88(a1, *(void *)(v1 + 16), *(uint64_t (**)(void *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_241B683C8()
{
  return sub_241B683E8(40);
}

void sub_241B683D0(void *a1, char a2)
{
  sub_241B67360(a1, a2 & 1, *(void **)(v2 + 16), *(void (**)(void))(v2 + 24));
}

uint64_t sub_241B683E0()
{
  return sub_241B683E8(40);
}

uint64_t sub_241B683E8(uint64_t a1)
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

void sub_241B68434(void *a1, char a2)
{
  sub_241B67450(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24));
}

uint64_t sub_241B68444(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241CD79A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_241CDBF50();
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v10 = (id)MEMORY[0x245637160](0, a1);
LABEL_6:
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    uint64_t v12 = v11;
    sub_241CD7950();
    if (v2)
    {
    }
    else
    {
      uint64_t v13 = sub_241CD7970();
      unint64_t v15 = v14;
      id v16 = objc_allocWithZone(MEMORY[0x263F46698]);
      uint64_t v17 = (void *)sub_241CD6AD0();
      sub_241A37374(v13, v15);
      id v18 = objc_msgSend(v16, sel_initWithData_, v17);

      if (v18)
      {
        if (objc_msgSend(v18, sel_hasIsUsingWheelchair))
        {
          unsigned int v19 = objc_msgSend(v18, sel_isUsingWheelchair);

          if (v19) {
            uint64_t v12 = 2;
          }
          else {
            uint64_t v12 = 1;
          }
        }
        else
        {

          uint64_t v12 = 0;
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      else
      {
        sub_241B686C0();
        swift_allocError();
        swift_willThrow();

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
    }
    return v12;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(a1 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

unint64_t sub_241B686C0()
{
  unint64_t result = qword_268D42D30;
  if (!qword_268D42D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42D30);
  }
  return result;
}

uint64_t sub_241B68714()
{
  sub_241CD9460();
  sub_241A78918();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_241CEB730;
  sub_241CD7D00();
  *(void *)(v0 + 56) = sub_241CD9680();
  *(void *)(v0 + 64) = sub_241B67EA8((unint64_t *)&qword_26B035600, MEMORY[0x263F453F0]);
  sub_241A25BC8((uint64_t *)(v0 + 32));
  sub_241CD7CF0();
  uint64_t v1 = sub_241CD9440();
  sub_241A33460();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_241CEB710;
  *(void *)(v2 + 32) = v1;
  uint64_t v4 = v2;
  sub_241CDB2E0();
  return v4;
}

uint64_t sub_241B68838(void *a1)
{
  id v61 = a1;
  uint64_t v1 = sub_241CD95E0();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v50 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B67CC4();
  uint64_t v66 = v3;
  uint64_t v53 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v52 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B67D9C(0);
  uint64_t v65 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v51 = (char *)&v45 - v8;
  uint64_t v48 = sub_241CD6EE0();
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v46 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B67DD0(0, &qword_26B0355B8, MEMORY[0x263F45948], MEMORY[0x263F45330]);
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v60 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v58 = (char *)&v45 - v11;
  sub_241B692E4(0);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v57 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CD9530();
  uint64_t v63 = *(void *)(v14 - 8);
  uint64_t v64 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  unint64_t v62 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v68 = (char *)&v45 - v17;
  uint64_t v56 = sub_241CD94F0();
  uint64_t v18 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241B67DD0(0, &qword_26B036978, MEMORY[0x263F45368], MEMORY[0x263F8E0F8]);
  uint64_t v54 = *(void *)(*(void *)(sub_241CD9510() - 8) + 72);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_241CEB720;
  sub_241B67DD0(0, &qword_26B036988, MEMORY[0x263F45420], v21);
  sub_241CD9780();
  uint64_t v22 = swift_allocObject();
  long long v67 = xmmword_241CEB730;
  *(_OWORD *)(v22 + 16) = xmmword_241CEB730;
  sub_241CD9750();
  id v23 = *(void (**)(char *, void, uint64_t))(v18 + 104);
  uint64_t v24 = v56;
  v23(v20, *MEMORY[0x263F45350], v56);
  sub_241CD9500();
  *(_OWORD *)(swift_allocObject() + 16) = v67;
  sub_241CD9760();
  v23(v20, *MEMORY[0x263F45348], v24);
  uint64_t v25 = (uint64_t)v57;
  sub_241CD9500();
  v23(v20, *MEMORY[0x263F45360], v24);
  sub_241CD9500();
  sub_241CD7D00();
  os_log_type_t v26 = v58;
  sub_241CD9490();
  sub_241B67EA8(&qword_268D42B98, MEMORY[0x263F45948]);
  sub_241CD9660();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v26, v60);
  sub_241B3B0F4();
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v25, 1, v27) == 1)
  {
    sub_241B69318(v25, (uint64_t (*)(void))sub_241B692E4);
    id v31 = v52;
    uint64_t v30 = v53;
    uint64_t v32 = (uint64_t)v51;
    uint64_t v33 = (uint64_t)v49;
LABEL_5:
    sub_241AC75E4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v32, 1, 1, v38);
    id v61 = 0;
    goto LABEL_6;
  }
  sub_241CD9720();
  uint64_t v34 = v70;
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v25, v28);
  uint64_t v69 = v34;
  uint64_t v35 = v46;
  sub_241CD6EA0();
  sub_241B3B1FC();
  sub_241B67EA8(&qword_268D42BA8, (void (*)(uint64_t))sub_241B3B1FC);
  unint64_t v36 = (void *)sub_241CDB240();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
  swift_bridgeObjectRelease();
  id v31 = v52;
  uint64_t v30 = v53;
  uint64_t v32 = (uint64_t)v51;
  uint64_t v33 = (uint64_t)v49;
  if (!v36) {
    goto LABEL_5;
  }
  sub_241B67E34();
  id v61 = v36;
  sub_241CDAED0();
  sub_241AC75E4();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v32, 0, 1, v37);
LABEL_6:
  sub_241CD95D0();
  uint64_t v39 = v63;
  uint64_t v40 = v68;
  uint64_t v41 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v62, v68, v64);
  sub_241B69378(v32, v33);
  sub_241B67EF0(&qword_268D42D08, (void (*)(void))sub_241B67E74);
  sub_241B67EF0(&qword_268D42D18, (void (*)(void))sub_241B67F5C);
  sub_241CD9620();
  sub_241B67DD0(0, &qword_268D42D40, (uint64_t (*)(uint64_t))sub_241B67CC4, MEMORY[0x263F8E0F8]);
  unint64_t v42 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v67;
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v43 + v42, v31, v66);

  sub_241B69318(v32, (uint64_t (*)(void))sub_241B67D9C);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  return v43;
}

void sub_241B692E4(uint64_t a1)
{
}

uint64_t sub_241B69318(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241B69378(uint64_t a1, uint64_t a2)
{
  sub_241B67D9C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for WheelchairSettingSummarySharingExecutor.ModelError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x241B69478);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WheelchairSettingSummarySharingExecutor.ModelError()
{
  return &type metadata for WheelchairSettingSummarySharingExecutor.ModelError;
}

unint64_t sub_241B694B4()
{
  unint64_t result = qword_268D42D48;
  if (!qword_268D42D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42D48);
  }
  return result;
}

uint64_t sub_241B6950C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006C65;
  uint64_t v3 = 0x646F4D7472616863;
  uint64_t v4 = a1;
  unint64_t v5 = 0x646F4D7472616863;
  unint64_t v6 = 0xEA00000000006C65;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x56746E6572727563;
      unint64_t v6 = 0xEC00000065756C61;
      break;
    case 2:
      unint64_t v5 = 0x616E41646E657274;
      unint64_t v6 = 0xED0000736973796CLL;
      break;
    case 3:
      unint64_t v6 = 0x8000000241CDCF70;
      unint64_t v5 = 0xD000000000000017;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEC00000065756C61;
      if (v5 == 0x56746E6572727563) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x616E41646E657274;
      unint64_t v2 = 0xED0000736973796CLL;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0x8000000241CDCF70;
      if (v5 == 0xD000000000000017) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_241CDC100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_241B696D4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7472656C61;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7472656C61;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7472616863;
      break;
    case 2:
      uint64_t v5 = 0x56746E6572727563;
      unint64_t v3 = 0xEC00000065756C61;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x74656764696E73;
      break;
    case 4:
      uint64_t v5 = 0x646E657274;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x7472616863) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEC00000065756C61;
      if (v5 != 0x56746E6572727563) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x74656764696E73;
      goto LABEL_12;
    case 4:
      if (v5 != 0x646E657274) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_241CDC100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_241B69888(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x676E6972616873;
  }
  else {
    uint64_t v2 = 0x7972616D697270;
  }
  if (a2) {
    uint64_t v3 = 0x676E6972616873;
  }
  else {
    uint64_t v3 = 0x7972616D697270;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_241CDC100();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_241B69908(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x6D65744964656566;
  }
  else {
    unint64_t v3 = 0xD00000000000001ALL;
  }
  if (v2) {
    unint64_t v4 = 0x8000000241CDD100;
  }
  else {
    unint64_t v4 = 0xED0000796C6E4F73;
  }
  if (a2) {
    unint64_t v5 = 0x6D65744964656566;
  }
  else {
    unint64_t v5 = 0xD00000000000001ALL;
  }
  if (a2) {
    unint64_t v6 = 0xED0000796C6E4F73;
  }
  else {
    unint64_t v6 = 0x8000000241CDD100;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_241CDC100();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

BOOL sub_241B699C0(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_241B699CC()
{
  sub_241A313AC(0, (unint64_t *)&qword_26B038440);
  uint64_t result = sub_241CDB460();
  qword_26B0412A8 = result;
  return result;
}

uint64_t sub_241B69A10(uint64_t a1, void *a2)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_241CD7740();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B6F4DC();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x270FA5388](v7);
  id v23 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD76A0();
  sub_241A311E0(v29, v29[3]);
  if (qword_26B033F90 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_241CD7A50();
  sub_241B6F5C4(0);
  uint64_t v22 = v9;
  sub_241A2C3DC((unint64_t *)&qword_26B038970, sub_241B6F5C4);
  uint64_t v10 = sub_241CDA660();
  swift_release();
  sub_241A31190((uint64_t)v29);
  v29[0] = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v12 = (v5 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v14 + v11, v6, v3);
  uint64_t v16 = v24;
  uint64_t v15 = v25;
  *(void *)(v14 + v12) = v24;
  *(void *)(v14 + v13) = v15;
  *(void *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = v16;
  id v17 = v15;
  sub_241CDA4F0();
  sub_241A36CEC();
  sub_241A2C3DC(&qword_26B038958, (void (*)(uint64_t))sub_241A36CEC);
  uint64_t v18 = v23;
  sub_241CDA840();
  swift_release();
  swift_release();
  sub_241A2C3DC(&qword_26B02E9B8, (void (*)(uint64_t))sub_241B6F4DC);
  uint64_t v19 = v27;
  uint64_t v20 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v19);
  return v20;
}

uint64_t sub_241B69DB4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v209 = a5;
  uint64_t v247 = a4;
  uint64_t v246 = a3;
  uint64_t v207 = a6;
  uint64_t v8 = sub_241CD7740();
  uint64_t v265 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v253 = (char *)v202 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = sub_241CDA1A0();
  uint64_t v264 = *(void (***)(void, void))(v214 - 8);
  MEMORY[0x270FA5388](v214);
  uint64_t v217 = (char *)v202 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = sub_241CD7650();
  int64_t v262 = *(void *)(v230 - 8);
  MEMORY[0x270FA5388](v230);
  uint64_t v229 = (char *)v202 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = sub_241CD7690();
  uint64_t v261 = *(void *)(v228 - 8);
  MEMORY[0x270FA5388](v228);
  uint64_t v227 = (char *)v202 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v257 = sub_241CD79A0();
  uint64_t v220 = *(void *)(v257 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v257);
  uint64_t v263 = (void *)((char *)v202 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v267 = (void *)((char *)v202 - v15);
  sub_241A36A74();
  uint64_t v242 = v16;
  uint64_t v240 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v241 = (char *)v202 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B6F7F4();
  uint64_t v206 = v18;
  uint64_t v205 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v204 = (char *)v202 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v250 = sub_241CD7C30();
  uint64_t v238 = *(void *)(v250 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v250);
  uint64_t v208 = (char *)v202 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)v202 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  id v243 = (char *)v202 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v245 = (char *)v202 - v27;
  uint64_t v28 = sub_241CD75A0();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  id v31 = (char *)v202 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = *a1;
  sub_241CD76B0();
  sub_241A311E0(v275, v276);
  uint64_t v255 = a2;
  uint64_t v32 = (void *)sub_241CD76E0();
  uint64_t v33 = sub_241CD7610();

  int64_t v34 = *(void *)(v33 + 16);
  uint64_t v215 = v8;
  uint64_t v251 = v24;
  if (v34)
  {
    *(void *)&long long v274 = MEMORY[0x263F8EE78];
    sub_241A521D8(0, v34, 0);
    uint64_t v36 = *(void *)(v29 + 16);
    uint64_t v35 = v29 + 16;
    *(void *)&long long v268 = v36;
    unint64_t v37 = (*(unsigned __int8 *)(v35 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 64);
    uint64_t v260 = v33;
    unint64_t v38 = v33 + v37;
    uint64_t v266 = *(void *)(v35 + 56);
    uint64_t v39 = (void (**)(char *, uint64_t))(v35 - 8);
    *((void *)&v268 + 1) = v35;
    do
    {
      ((void (*)(char *, unint64_t, uint64_t))v268)(v31, v38, v28);
      uint64_t v40 = sub_241CD74B0();
      uint64_t v42 = v41;
      (*v39)(v31, v28);
      uint64_t v43 = v274;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_241A521D8(0, *(void *)(v43 + 16) + 1, 1);
        uint64_t v43 = v274;
      }
      unint64_t v45 = *(void *)(v43 + 16);
      unint64_t v44 = *(void *)(v43 + 24);
      if (v45 >= v44 >> 1)
      {
        sub_241A521D8(v44 > 1, v45 + 1, 1);
        uint64_t v43 = v274;
      }
      *(void *)(v43 + 16) = v45 + 1;
      uint64_t v46 = v43 + 16 * v45;
      *(void *)(v46 + 32) = v40;
      *(void *)(v46 + 40) = v42;
      v38 += v266;
      --v34;
      uint64_t v47 = v257;
    }
    while (v34);
    swift_bridgeObjectRelease();
    uint64_t v24 = v251;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v43 = MEMORY[0x263F8EE78];
    uint64_t v47 = v257;
  }
  sub_241A31190((uint64_t)v275);
  uint64_t v48 = sub_241C6A09C(v43);
  swift_bridgeObjectRelease();
  uint64_t v49 = (void *)MEMORY[0x263F8EE78];
  uint64_t v50 = v253;
  uint64_t v236 = *(void *)(v239 + 16);
  if (!v236)
  {
    uint64_t v53 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_146;
  }
  uint64_t v219 = v48;
  uint64_t v235 = v239 + ((*(unsigned __int8 *)(v238 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v238 + 80));
  uint64_t v51 = v238 + 16;
  uint64_t v234 = v238 + 88;
  int v233 = *MEMORY[0x263F458A8];
  int v218 = *MEMORY[0x263F45880];
  int v216 = *MEMORY[0x263F458A0];
  uint64_t v213 = (void (**)(char *, uint64_t *, uint64_t))(v265 + 16);
  uint64_t v237 = (void (**)(char *, uint64_t))(v238 + 8);
  uint64_t v212 = (void (**)(char *, uint64_t))(v265 + 8);
  uint64_t v211 = (void (**)(char *, uint64_t))(v264 + 1);
  uint64_t v231 = (void (**)(char *, uint64_t))(v238 + 96);
  unsigned int v226 = *MEMORY[0x263F454F8];
  unsigned int v225 = *MEMORY[0x263F45688];
  uint64_t v224 = (void (**)(char *, void, uint64_t))(v262 + 104);
  uint64_t v223 = (void (**)(char *, uint64_t))(v261 + 8);
  uint64_t v265 = v220 + 16;
  uint64_t v264 = (void (**)(void, void))(v220 + 8);
  swift_bridgeObjectRetain();
  unint64_t v52 = 0;
  uint64_t v232 = 0;
  uint64_t v53 = (void *)MEMORY[0x263F8EE78];
  uint64_t v254 = MEMORY[0x263F8EE80];
  long long v222 = xmmword_241CEB710;
  *((void *)&v54 + 1) = 2;
  long long v221 = xmmword_241CEB730;
  uint64_t v260 = MEMORY[0x263F8EE50] + 8;
  *(void *)&long long v54 = 136315650;
  long long v203 = v54;
  v202[1] = MEMORY[0x263F8EE58] + 8;
  uint64_t v55 = (void (*)(void, void, void))v267;
  uint64_t v56 = v250;
  unint64_t v57 = v245;
  uint64_t v252 = v51;
  while (1)
  {
    if (v52 >= *(void *)(v239 + 16)) {
      goto LABEL_159;
    }
    uint64_t v258 = v53;
    uint64_t v67 = v238;
    uint64_t v68 = *(void *)(v238 + 72);
    unint64_t v244 = v52;
    uint64_t v69 = *(void (**)(char *, unint64_t, uint64_t))(v238 + 16);
    v69(v57, v235 + v68 * v52, v56);
    uint64_t v70 = v243;
    v69(v243, (unint64_t)v57, v56);
    int v71 = (*(uint64_t (**)(char *, uint64_t))(v67 + 88))(v70, v56);
    if (v71 == v233)
    {
      swift_bridgeObjectRelease();
      (*v231)(v70, v56);
      uint64_t v72 = *(void *)(*(void *)v70 + 16);
      if (v72)
      {
        unint64_t v73 = *(void *)v70
            + ((*(unsigned __int8 *)(v220 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v220 + 80));
        uint64_t v74 = *(void *)(v220 + 72);
        uint64_t v75 = *(void (**)(void, unint64_t, uint64_t))(v220 + 16);
        while (1)
        {
          v75(v55, v73, v47);
          unint64_t v76 = sub_241CD7940();
          unint64_t v77 = v76;
          if (v76 >> 62)
          {
            if (!sub_241CDBF50())
            {
LABEL_42:
              swift_bridgeObjectRelease();
              goto LABEL_43;
            }
          }
          else if (!*(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_42;
          }
          if ((v77 & 0xC000000000000001) != 0)
          {
            os_log_t v78 = (objc_class *)MEMORY[0x245637160](0, v77);
          }
          else
          {
            if (!*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_157;
            }
            os_log_t v78 = (objc_class *)*(id *)(v77 + 32);
          }
          uint64_t v79 = v78;
          swift_bridgeObjectRelease();
          unint64_t v80 = sub_241CD7940();
          if (v80 >> 62) {
            uint64_t v81 = sub_241CDBF50();
          }
          else {
            uint64_t v81 = *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          if (v81 == 1 && (sub_241CDB440() & 1) != 0)
          {
            unint64_t v82 = (void (*)(void, void, void))v267;
            sub_241B6BFB8(v255, (void (*)(void, void, void))v267, v79, v247, (uint64_t *)&v271);
            if (*((void *)&v272 + 1))
            {
              sub_241A5598C(&v271, (uint64_t)&v274);
              sub_241A37260((uint64_t)&v274, (uint64_t)&v271);
              id v83 = v79;
              id v84 = (void *)v254;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              id v269 = v84;
              unint64_t v87 = sub_241C0B828((uint64_t)v83);
              uint64_t v88 = v84[2];
              BOOL v89 = (v86 & 1) == 0;
              uint64_t v90 = v88 + v89;
              if (__OFADD__(v88, v89)) {
                goto LABEL_160;
              }
              char v91 = v86;
              if (v84[3] >= v90)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  sub_241B08D04();
                }
              }
              else
              {
                sub_241B0A53C(v90, isUniquelyReferenced_nonNull_native);
                unint64_t v92 = sub_241C0B828((uint64_t)v83);
                if ((v91 & 1) != (v93 & 1)) {
                  goto LABEL_164;
                }
                unint64_t v87 = v92;
              }
              uint64_t v47 = v257;
              unint64_t v94 = v269;
              uint64_t v254 = (uint64_t)v269;
              if (v91)
              {
                uint64_t v95 = v269[7] + 40 * v87;
                sub_241A31190(v95);
                sub_241A5598C(&v271, v95);
              }
              else
              {
                v269[(v87 >> 6) + 8] |= 1 << v87;
                *(void *)(v94[6] + 8 * v87) = v83;
                sub_241A5598C(&v271, v94[7] + 40 * v87);
                uint64_t v96 = v94[2];
                BOOL v97 = __OFADD__(v96, 1);
                uint64_t v98 = v96 + 1;
                if (v97) {
                  goto LABEL_162;
                }
                v94[2] = v98;
                os_log_t v99 = v83;
              }

              swift_bridgeObjectRelease();
              sub_241A31190((uint64_t)&v274);
              uint64_t v55 = (void (*)(void, void, void))v267;
              (*v264)(v267, v47);
            }
            else
            {
              (*v264)(v82, v47);

              sub_241B6F940((uint64_t)&v271, (uint64_t (*)(void))sub_241B0C564);
              uint64_t v55 = v82;
            }
            goto LABEL_44;
          }

LABEL_43:
          uint64_t v55 = (void (*)(void, void, void))v267;
          (*v264)(v267, v47);
LABEL_44:
          v73 += v74;
          if (!--v72)
          {
            uint64_t v58 = swift_bridgeObjectRelease();
            uint64_t v56 = v250;
            uint64_t v24 = v251;
            goto LABEL_12;
          }
        }
      }
      uint64_t v58 = swift_bridgeObjectRelease();
LABEL_12:
      MEMORY[0x270FA5388](v58);
      uint64_t v59 = v255;
      v202[-2] = v255;
      uint64_t v60 = v254;
      swift_bridgeObjectRetain();
      uint64_t v61 = v232;
      sub_241A42940((void (*)(void *__return_ptr, id *))sub_241B6F8BC, (uint64_t)&v202[-4], v60);
      uint64_t v63 = v62;
      swift_bridgeObjectRelease();
      uint64_t v64 = v219;
      swift_bridgeObjectRetain();
      uint64_t v65 = sub_241B6E0F0(v63, v64);
      uint64_t v66 = swift_bridgeObjectRelease();
      MEMORY[0x270FA5388](v66);
      v202[-2] = v59;
      uint64_t v53 = (void *)sub_241A42BA0((void (*)(long long *__return_ptr, void *))sub_241B6F920, (uint64_t)&v202[-4], v65);
      uint64_t v232 = v61;
      swift_release();
      (*v237)(v245, v56);
      uint64_t v50 = v253;
      uint64_t v55 = (void (*)(void, void, void))v267;
      goto LABEL_13;
    }
    if (v71 == v218)
    {
      uint64_t v100 = (uint64_t *)v243;
      (*v231)(v243, v56);
      uint64_t v101 = *v100;
      uint64_t v102 = *(void *)(v101 + 16);
      if (v102)
      {
        uint64_t v103 = v101 + ((*(unsigned __int8 *)(v220 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v220 + 80));
        uint64_t v104 = *(void *)(v220 + 72);
        id v105 = *(void (**)(void, uint64_t, uint64_t))(v220 + 16);
        uint64_t v106 = (void (*)(void, void, void))v263;
        while (1)
        {
          v105(v106, v103, v47);
          unint64_t v107 = sub_241CD7940();
          unint64_t v108 = v107;
          if (v107 >> 62)
          {
            if (!sub_241CDBF50())
            {
LABEL_75:
              swift_bridgeObjectRelease();
              goto LABEL_76;
            }
          }
          else if (!*(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_75;
          }
          if ((v108 & 0xC000000000000001) != 0)
          {
            id v109 = (id)MEMORY[0x245637160](0, v108);
          }
          else
          {
            if (!*(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_158;
            }
            id v109 = *(id *)(v108 + 32);
          }
          uint64_t v110 = v109;
          swift_bridgeObjectRelease();
          unint64_t v111 = sub_241CD7940();
          if (v111 >> 62) {
            uint64_t v112 = sub_241CDBF50();
          }
          else {
            uint64_t v112 = *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          if (v112 != 1 || (sub_241CDB440() & 1) == 0)
          {

LABEL_76:
            (*v264)(v263, v47);
            goto LABEL_77;
          }
          id v113 = (void (*)(void, void, void))v263;
          sub_241B6BFB8(v255, (void (*)(void, void, void))v263, (objc_class *)v110, v247, (uint64_t *)&v271);
          if (*((void *)&v272 + 1))
          {
            sub_241A5598C(&v271, (uint64_t)&v274);
            sub_241A37260((uint64_t)&v274, (uint64_t)&v271);
            id v114 = v110;
            uint64_t v115 = (void *)v254;
            char v116 = swift_isUniquelyReferenced_nonNull_native();
            id v269 = v115;
            unint64_t v118 = sub_241C0B828((uint64_t)v114);
            uint64_t v119 = v115[2];
            BOOL v120 = (v117 & 1) == 0;
            uint64_t v121 = v119 + v120;
            if (__OFADD__(v119, v120)) {
              goto LABEL_161;
            }
            char v122 = v117;
            if (v115[3] >= v121)
            {
              if ((v116 & 1) == 0) {
                sub_241B08D04();
              }
            }
            else
            {
              sub_241B0A53C(v121, v116);
              unint64_t v123 = sub_241C0B828((uint64_t)v114);
              if ((v122 & 1) != (v124 & 1)) {
                goto LABEL_164;
              }
              unint64_t v118 = v123;
            }
            uint64_t v47 = v257;
            uint64_t v125 = v269;
            uint64_t v254 = (uint64_t)v269;
            if (v122)
            {
              uint64_t v126 = v269[7] + 40 * v118;
              sub_241A31190(v126);
              sub_241A5598C(&v271, v126);
            }
            else
            {
              v269[(v118 >> 6) + 8] |= 1 << v118;
              *(void *)(v125[6] + 8 * v118) = v114;
              sub_241A5598C(&v271, v125[7] + 40 * v118);
              uint64_t v127 = v125[2];
              BOOL v97 = __OFADD__(v127, 1);
              uint64_t v128 = v127 + 1;
              if (v97) {
                goto LABEL_163;
              }
              uint64_t v125[2] = v128;
              id v129 = v114;
            }

            swift_bridgeObjectRelease();
            sub_241A31190((uint64_t)&v274);
            goto LABEL_76;
          }
          (*v264)(v113, v47);

          sub_241B6F940((uint64_t)&v271, (uint64_t (*)(void))sub_241B0C564);
LABEL_77:
          v103 += v104;
          --v102;
          uint64_t v106 = (void (*)(void, void, void))v263;
          if (!v102)
          {
            swift_bridgeObjectRelease();
            uint64_t v50 = v253;
            uint64_t v55 = (void (*)(void, void, void))v267;
            uint64_t v56 = v250;
            uint64_t v24 = v251;
            goto LABEL_137;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_137:
      (*v237)(v245, v56);
      goto LABEL_141;
    }
    if (v71 == v216) {
      break;
    }
    uint64_t v170 = v24;
    sub_241CDA0F0();
    uint64_t v171 = v215;
    (*v213)(v50, v255, v215);
    v69(v170, (unint64_t)v245, v56);
    uint64_t v172 = sub_241CDA190();
    os_log_type_t v173 = sub_241CDB660();
    DWORD2(v268) = v173;
    BOOL v174 = os_log_type_enabled(v172, v173);
    id v175 = v237;
    uint64_t v176 = (unint64_t)v237 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    if (v174)
    {
      uint64_t v177 = swift_slowAlloc();
      uint64_t v266 = swift_slowAlloc();
      *(void *)&long long v274 = v266;
      *(_DWORD *)uint64_t v177 = v203;
      uint64_t v178 = sub_241CDC270();
      *(void *)(v177 + 4) = sub_241A33FE4(v178, v179, (uint64_t *)&v274);
      swift_bridgeObjectRelease();
      *(_WORD *)(v177 + 12) = 2080;
      uint64_t v180 = (void *)sub_241CD76E0();
      uint64_t v181 = sub_241CD73E0();
      *(void *)&long long v268 = v176;
      uint64_t v182 = v181;
      unint64_t v184 = v183;

      *(void *)(v177 + 14) = sub_241A33FE4(v182, v184, (uint64_t *)&v274);
      uint64_t v47 = v257;
      swift_bridgeObjectRelease();
      (*v212)(v253, v171);
      *(_WORD *)(v177 + 22) = 2080;
      v69(v208, (unint64_t)v170, v56);
      uint64_t v185 = sub_241CDB120();
      *(void *)(v177 + 24) = sub_241A33FE4(v185, v186, (uint64_t *)&v274);
      swift_bridgeObjectRelease();
      uint64_t v187 = *v237;
      (*v237)(v170, v56);
      _os_log_impl(&dword_241A23000, v172, BYTE8(v268), "%s_%s Unexpected PluginSharableModelChange %s", (uint8_t *)v177, 0x20u);
      uint64_t v188 = v266;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v188, -1, -1);
      uint64_t v189 = v177;
      uint64_t v50 = v253;
      MEMORY[0x245637F20](v189, -1, -1);
    }
    else
    {

      uint64_t v187 = *v175;
      v187(v170, v56);
      (*v212)(v50, v171);
    }
    (*v211)(v217, v214);
    v187(v245, v56);
    v187(v243, v56);
    uint64_t v55 = (void (*)(void, void, void))v267;
    uint64_t v24 = v251;
LABEL_141:
    uint64_t v53 = v258;
LABEL_13:
    unint64_t v52 = v244 + 1;
    unint64_t v57 = v245;
    if (v244 + 1 == v236)
    {
      swift_bridgeObjectRelease();
      uint64_t v49 = (void *)MEMORY[0x263F8EE78];
LABEL_146:
      swift_bridgeObjectRelease();
      *(void *)&long long v274 = v53;
      uint64_t v190 = swift_bridgeObjectRetain();
      sub_241AFF720(v190);
      uint64_t v191 = v274;
      int64_t v192 = *(void *)(v274 + 16);
      if (v192)
      {
        id v269 = v49;
        sub_241A52450(0, v192, 0);
        uint64_t v193 = v191 + 32;
        do
        {
          sub_241A37260(v193, (uint64_t)&v274);
          sub_241A37260((uint64_t)&v274, (uint64_t)&v271);
          sub_241A372C4();
          sub_241CDA5D0();
          sub_241A31190((uint64_t)&v274);
          id v194 = v269;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_241A52450(0, v194[2] + 1, 1);
            id v194 = v269;
          }
          unint64_t v196 = v194[2];
          unint64_t v195 = v194[3];
          uint64_t v197 = v241;
          if (v196 >= v195 >> 1)
          {
            sub_241A52450(v195 > 1, v196 + 1, 1);
            uint64_t v197 = v241;
            id v194 = v269;
          }
          v194[2] = v196 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v240 + 32))((unint64_t)v194+ ((*(unsigned __int8 *)(v240 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v240 + 80))+ *(void *)(v240 + 72) * v196, v197, v242);
          id v269 = v194;
          v193 += 40;
          --v192;
        }
        while (v192);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        id v194 = (void *)MEMORY[0x263F8EE78];
      }
      *(void *)&long long v274 = v194;
      sub_241B6F888(0);
      sub_241A2C3DC(&qword_26B02EA88, (void (*)(uint64_t))sub_241A36A74);
      sub_241A2C3DC(&qword_26B030368, sub_241B6F888);
      uint64_t v198 = v204;
      sub_241CDA4C0();
      sub_241A2C3DC(&qword_26B02E9E0, (void (*)(uint64_t))sub_241B6F7F4);
      uint64_t v199 = v206;
      uint64_t v200 = sub_241CDA6D0();
      (*(void (**)(char *, uint64_t))(v205 + 8))(v198, v199);
      *uint64_t v207 = v200;
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v130 = v243;
  (*v231)(v243, v56);
  uint64_t v131 = *(void *)v130;
  uint64_t v249 = *(void *)(*(void *)v130 + 16);
  if (!v249)
  {
    uint64_t v53 = (void *)MEMORY[0x263F8EE78];
LABEL_143:
    (*v237)(v245, v56);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v248 = v131 + 32;
  uint64_t v210 = v131;
  swift_bridgeObjectRetain();
  uint64_t v132 = 0;
  uint64_t v53 = (void *)MEMORY[0x263F8EE78];
  while (2)
  {
    uint64_t v133 = (void *)(v248 + 16 * v132);
    uint64_t v134 = v133[1];
    *(void *)&long long v268 = *v133;
    uint64_t v135 = qword_26B033F90;
    *((void *)&v268 + 1) = v134;
    swift_bridgeObjectRetain();
    if (v135 != -1) {
      swift_once();
    }
    uint64_t v259 = v132;
    uint64_t v258 = v53;
    uint64_t v136 = qword_26B0412A8;
    uint64_t v256 = qword_26B0412A8;
    if ((qword_26B0412A8 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain_n();
      sub_241CDBCB0();
      sub_241A313AC(0, (unint64_t *)&qword_26B038440);
      sub_241AD5E58();
      sub_241CDB3C0();
      uint64_t v136 = v275[0];
      uint64_t v266 = v275[1];
      uint64_t v138 = v275[2];
      uint64_t v137 = v276;
      unint64_t v139 = v277;
    }
    else
    {
      uint64_t v140 = -1 << *(unsigned char *)(qword_26B0412A8 + 32);
      uint64_t v141 = *(void *)(qword_26B0412A8 + 56);
      uint64_t v266 = qword_26B0412A8 + 56;
      uint64_t v138 = ~v140;
      uint64_t v142 = -v140;
      if (v142 < 64) {
        uint64_t v143 = ~(-1 << v142);
      }
      else {
        uint64_t v143 = -1;
      }
      unint64_t v139 = v143 & v141;
      swift_bridgeObjectRetain_n();
      uint64_t v137 = 0;
    }
    ++v259;
    uint64_t v261 = v136 & 0x7FFFFFFFFFFFFFFFLL;
    int64_t v262 = (unint64_t)(v138 + 64) >> 6;
    if ((v136 & 0x8000000000000000) == 0) {
      goto LABEL_98;
    }
LABEL_95:
    uint64_t v144 = sub_241CDBD40();
    if (!v144) {
      goto LABEL_124;
    }
    id v269 = (void *)v144;
    sub_241A313AC(0, (unint64_t *)&qword_26B038440);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v145 = (id)v274;
    swift_unknownObjectRelease();
    int64_t v146 = v137;
    uint64_t v147 = v139;
    if (!v145)
    {
LABEL_124:
      uint64_t v55 = (void (*)(void, void, void))v267;
LABEL_125:
      sub_241A5B0F4();
      swift_bridgeObjectRelease();
      uint64_t v273 = 0;
      long long v271 = 0u;
      long long v272 = 0u;
LABEL_126:
      uint64_t v56 = v250;
      uint64_t v24 = v251;
      swift_bridgeObjectRelease();
      uint64_t v50 = v253;
      uint64_t v47 = v257;
      uint64_t v53 = v258;
      uint64_t v132 = v259;
      if (*((void *)&v272 + 1))
      {
        sub_241A5598C(&v271, (uint64_t)&v274);
        sub_241A5598C(&v274, (uint64_t)&v271);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v53 = sub_241AF8014(0, v53[2] + 1, 1, v53);
        }
        unint64_t v169 = v53[2];
        unint64_t v168 = v53[3];
        if (v169 >= v168 >> 1) {
          uint64_t v53 = sub_241AF8014((void *)(v168 > 1), v169 + 1, 1, v53);
        }
        void v53[2] = v169 + 1;
        sub_241A5598C(&v271, (uint64_t)&v53[5 * v169 + 4]);
        uint64_t v55 = (void (*)(void, void, void))v267;
      }
      else
      {
        sub_241B6F940((uint64_t)&v271, (uint64_t (*)(void))sub_241B0C564);
      }
      if (v132 == v249)
      {
        swift_bridgeObjectRelease();
        goto LABEL_143;
      }
      continue;
    }
    break;
  }
  while (2)
  {
    long long v274 = v268;
    id v151 = objc_msgSend(v145, sel_identifier);
    uint64_t v152 = sub_241CDB0D0();
    uint64_t v154 = v153;

    id v269 = (void *)v152;
    uint64_t v270 = v154;
    sub_241A3DE4C();
    LOBYTE(v151) = sub_241CDBC30();
    swift_bridgeObjectRelease();
    if (v151)
    {
      sub_241A5B0F4();
      swift_bridgeObjectRelease();
      uint64_t v156 = (void *)sub_241CD76E0();
      *(void *)&long long v268 = sub_241CA1EFC(v145);
      uint64_t v266 = v157;

      uint64_t v158 = (void *)sub_241CD76E0();
      sub_241A33460();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v222;
      *(void *)(inited + 32) = v145;
      *(void *)&long long v274 = inited;
      sub_241CDB2E0();
      sub_241A29B58(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v160 = sub_241CD73B0();
      uint64_t v161 = *(void *)(v160 - 8);
      unint64_t v162 = (*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
      uint64_t v163 = swift_allocObject();
      *(_OWORD *)(v163 + 16) = v221;
      (*(void (**)(unint64_t, void, uint64_t))(v161 + 104))(v163 + v162, v226, v160);
      id v164 = v158;
      id v165 = v145;
      sub_241C5D74C(v163);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      unint64_t v166 = swift_bridgeObjectRetain();
      sub_241C5D7A0(v166);
      swift_bridgeObjectRelease();
      (*v224)(v229, v225, v230);
      uint64_t v167 = v227;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      *((void *)&v272 + 1) = sub_241CD7800();
      uint64_t v273 = MEMORY[0x263F456B8];
      sub_241A25BC8((uint64_t *)&v271);
      sub_241CD77D0();
      swift_bridgeObjectRelease();

      (*v223)(v167, v228);
      uint64_t v55 = (void (*)(void, void, void))v267;
      goto LABEL_126;
    }

    uint64_t v137 = v146;
    unint64_t v139 = v147;
    if (v136 < 0) {
      goto LABEL_95;
    }
LABEL_98:
    if (v139)
    {
      uint64_t v147 = (v139 - 1) & v139;
      unint64_t v148 = __clz(__rbit64(v139)) | (v137 << 6);
      int64_t v146 = v137;
LABEL_113:
      id v145 = *(id *)(*(void *)(v136 + 48) + 8 * v148);
      if (!v145) {
        goto LABEL_124;
      }
      continue;
    }
    break;
  }
  int64_t v146 = v137 + 1;
  if (!__OFADD__(v137, 1))
  {
    if (v146 >= v262) {
      goto LABEL_124;
    }
    unint64_t v149 = *(void *)(v266 + 8 * v146);
    uint64_t v55 = (void (*)(void, void, void))v267;
    if (!v149)
    {
      uint64_t v150 = v137 + 2;
      if (v137 + 2 >= v262) {
        goto LABEL_125;
      }
      unint64_t v149 = *(void *)(v266 + 8 * v150);
      if (v149) {
        goto LABEL_111;
      }
      uint64_t v150 = v137 + 3;
      if (v137 + 3 >= v262) {
        goto LABEL_125;
      }
      unint64_t v149 = *(void *)(v266 + 8 * v150);
      if (v149) {
        goto LABEL_111;
      }
      uint64_t v150 = v137 + 4;
      if (v137 + 4 >= v262) {
        goto LABEL_125;
      }
      unint64_t v149 = *(void *)(v266 + 8 * v150);
      if (v149) {
        goto LABEL_111;
      }
      uint64_t v150 = v137 + 5;
      if (v137 + 5 >= v262) {
        goto LABEL_125;
      }
      unint64_t v149 = *(void *)(v266 + 8 * v150);
      if (v149)
      {
LABEL_111:
        int64_t v146 = v150;
      }
      else
      {
        int64_t v146 = v137 + 6;
        if (v137 + 6 >= v262) {
          goto LABEL_125;
        }
        unint64_t v149 = *(void *)(v266 + 8 * v146);
        if (!v149)
        {
          uint64_t v155 = v137 + 7;
          do
          {
            if (v262 == v155) {
              goto LABEL_125;
            }
            unint64_t v149 = *(void *)(v266 + 8 * v155++);
          }
          while (!v149);
          int64_t v146 = v155 - 1;
        }
      }
    }
    uint64_t v147 = (v149 - 1) & v149;
    unint64_t v148 = __clz(__rbit64(v149)) + (v146 << 6);
    goto LABEL_113;
  }
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  sub_241A313AC(0, (unint64_t *)&qword_26B038440);
  uint64_t result = sub_241CDC170();
  __break(1u);
  return result;
}

void sub_241B6BFB8(uint64_t *a1@<X0>, void (*a2)(void, void, void)@<X1>, objc_class *a3@<X2>, NSObject *a4@<X3>, uint64_t *a5@<X8>)
{
  Class v233 = a3;
  uint64_t v234 = a4;
  uint64_t v241 = a5;
  uint64_t v242 = a2;
  uint64_t v231 = sub_241CD79A0();
  os_log_t v238 = *(os_log_t *)(v231 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v231);
  uint64_t v228 = (char *)&v213 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v236 = (char *)&v213 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unsigned int v226 = (char *)&v213 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  long long v222 = (char *)&v213 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v224 = (char *)&v213 - v14;
  uint64_t v15 = sub_241CDA1A0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v229 = v15;
  uint64_t v230 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v235 = (char *)&v213 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v223 = (char *)&v213 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unsigned int v225 = (char *)&v213 - v22;
  MEMORY[0x270FA5388](v21);
  long long v221 = (char *)&v213 - v23;
  sub_241A72428(0);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v232 = ((char *)&v213 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v239 = sub_241CD7AB0();
  uint64_t v243 = *(void *)(v239 - 8);
  MEMORY[0x270FA5388](v239);
  uint64_t v237 = (char *)&v213 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (objc_class *)sub_241CD7740();
  uint64_t v28 = *((void *)v27 - 1);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  id v31 = (char *)&v213 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  int64_t v34 = (char *)&v213 - v33;
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  unint64_t v37 = (char *)&v213 - v36;
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  uint64_t v40 = (char *)&v213 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v42 = (char *)&v213 - v41;
  uint64_t v240 = a1;
  sub_241CD76B0();
  sub_241A311E0(v245, v245[3]);
  uint64_t v43 = (void *)sub_241CD75B0();
  sub_241A31190((uint64_t)v245);
  id v44 = objc_msgSend(v43, sel_profileIdentifier);
  id v45 = objc_msgSend(v44, sel_type);

  if (v45 == (id)1)
  {
    (*(void (**)(char *, uint64_t *, objc_class *))(v28 + 16))(v42, v240, v27);
    uint64_t v46 = sub_241CD7930();
    uint64_t v48 = v47;
    uint64_t v49 = type metadata accessor for SummaryAlertFeedItemGenerator();
    uint64_t v50 = v241;
    uint64_t v51 = v49;
    swift_allocObject();
    unint64_t v52 = v233;
    uint64_t v53 = v234;
    uint64_t v54 = sub_241BFE27C((uint64_t)v42, v46, v48, 0, v52, v53);

    v50[3] = v51;
    v50[4] = sub_241A2C3DC(&qword_26B02EFC8, (void (*)(uint64_t))type metadata accessor for SummaryAlertFeedItemGenerator);

    *uint64_t v50 = v54;
    return;
  }
  uint64_t v217 = v31;
  uint64_t v215 = v34;
  int v216 = v37;
  uint64_t v213 = v40;
  uint64_t v55 = v235;
  uint64_t v214 = v42;
  uint64_t v219 = v28;
  id v220 = v43;
  uint64_t v56 = v237;
  sub_241CD7960();
  os_log_t v57 = v232;
  uint64_t v58 = v242;
  sub_241CD7990();
  uint64_t v59 = v243;
  uint64_t v60 = *(void (**)(os_log_t, void, uint64_t, uint64_t))(v243 + 56);
  uint64_t v61 = v239;
  v60(v57, 0, 1, v239);
  char v62 = sub_241CD7A70();
  sub_241B6F940((uint64_t)v57, (uint64_t (*)(void))sub_241A72428);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v59 + 8);
  uint64_t v243 = v59 + 8;
  int v218 = v63;
  v63(v56, v61);
  if ((v62 & 1) == 0)
  {
    unint64_t v80 = v55;
    sub_241CDA140();
    uint64_t v81 = v219;
    unint64_t v82 = *(void (**)(char *, uint64_t *, objc_class *))(v219 + 16);
    id v83 = v217;
    Class v233 = v27;
    v82(v217, v240, v27);
    os_log_t v84 = v238;
    Class isa = v238[2].isa;
    char v86 = v58;
    unint64_t v87 = v58;
    uint64_t v88 = v231;
    ((void (*)(char *, void, uint64_t))isa)(v236, v86, v231);
    BOOL v89 = v228;
    ((void (*)(char *, void, uint64_t))isa)(v228, v87, v88);
    uint64_t v90 = sub_241CDA190();
    os_log_type_t v91 = sub_241CDB670();
    int v92 = v91;
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v93 = swift_slowAlloc();
      LODWORD(v240) = v92;
      uint64_t v94 = v93;
      uint64_t v242 = (void (*)(void, void, void))swift_slowAlloc();
      v245[0] = (uint64_t)v242;
      *(_DWORD *)uint64_t v94 = 136316162;
      uint64_t v234 = v90;
      uint64_t v95 = sub_241CDC270();
      uint64_t v244 = sub_241A33FE4(v95, v96, v245);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 12) = 2080;
      BOOL v97 = (void *)sub_241CD76E0();
      uint64_t v98 = sub_241CD73E0();
      uint64_t v232 = isa;
      unint64_t v100 = v99;

      uint64_t v244 = sub_241A33FE4(v98, v100, v245);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, Class))(v81 + 8))(v83, v233);
      *(_WORD *)(v94 + 22) = 2080;
      uint64_t v101 = v239;
      Class v233 = (Class)(v94 + 24);
      uint64_t v102 = v237;
      sub_241CD7990();
      sub_241A2C3DC(&qword_26B02E8F8, MEMORY[0x263F45780]);
      uint64_t v103 = sub_241CDC0D0();
      unint64_t v105 = v104;
      uint64_t v106 = v218;
      v218(v102, v101);
      uint64_t v244 = sub_241A33FE4(v103, v105, v245);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      Class v107 = v238[1].isa;
      ++v238;
      Class v233 = v107;
      uint64_t v108 = v231;
      ((void (*)(char *, uint64_t))v107)(v236, v231);
      *(_WORD *)(v94 + 32) = 2080;
      uint64_t v236 = (char *)(v94 + 34);
      sub_241CD7960();
      uint64_t v109 = sub_241CDC0D0();
      unint64_t v111 = v110;
      v106(v102, v101);
      uint64_t v244 = sub_241A33FE4(v109, v111, v245);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 42) = 2080;
      uint64_t v112 = v228;
      ((void (*)(char *, char *, uint64_t))v232)(v226, v228, v108);
      uint64_t v113 = sub_241CDB120();
      uint64_t v244 = sub_241A33FE4(v113, v114, v245);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v233)(v112, v108);
      uint64_t v115 = v234;
      _os_log_impl(&dword_241A23000, v234, (os_log_type_t)v240, "[%s]_%s: PluginSharableModel has version %s which is not compatible with %s for %s", (uint8_t *)v94, 0x34u);
      char v116 = v242;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v116, -1, -1);
      MEMORY[0x245637F20](v94, -1, -1);

      (*(void (**)(char *, uint64_t))(v230 + 8))(v235, v229);
    }
    else
    {

      (*(void (**)(char *, Class))(v81 + 8))(v83, v233);
      char v117 = (void (*)(char *, uint64_t))v84[1].isa;
      v117(v236, v88);
      v117(v89, v88);

      (*(void (**)(char *, uint64_t))(v230 + 8))(v80, v229);
    }
    goto LABEL_21;
  }
  uint64_t v64 = sub_241CD7970();
  unint64_t v66 = v65;
  id v67 = objc_allocWithZone(MEMORY[0x263F465E8]);
  uint64_t v68 = v58;
  uint64_t v69 = (void *)sub_241CD6AD0();
  sub_241A37374(v64, v66);
  uint64_t v70 = (char *)objc_msgSend(v67, sel_initWithData_, v69);

  uint64_t v71 = v219;
  if (!v70)
  {
    unint64_t v118 = v223;
    sub_241CDA140();
    uint64_t v119 = v215;
    (*(void (**)(char *, uint64_t *, objc_class *))(v71 + 16))(v215, v240, v27);
    BOOL v120 = sub_241CDA190();
    os_log_type_t v121 = sub_241CDB650();
    if (!os_log_type_enabled(v120, v121))
    {

      (*(void (**)(char *, objc_class *))(v71 + 8))(v119, v27);
      (*(void (**)(char *, uint64_t))(v230 + 8))(v118, v229);
LABEL_21:
      uint64_t v172 = v241;
      v241[4] = 0;
      *(_OWORD *)uint64_t v172 = 0u;
      *((_OWORD *)v172 + 1) = 0u;
      return;
    }
    uint64_t v122 = swift_slowAlloc();
    Class v233 = v27;
    uint64_t v123 = v122;
    uint64_t v243 = swift_slowAlloc();
    v245[0] = v243;
    *(_DWORD *)uint64_t v123 = 136315650;
    uint64_t v124 = sub_241CDC270();
    uint64_t v125 = v71;
    uint64_t v244 = sub_241A33FE4(v124, v126, v245);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v123 + 12) = 2080;
    uint64_t v127 = (void *)sub_241CD76E0();
    uint64_t v128 = sub_241CD73E0();
    unint64_t v130 = v129;

    uint64_t v244 = sub_241A33FE4(v128, v130, v245);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, Class))(v125 + 8))(v119, v233);
    *(_WORD *)(v123 + 22) = 2080;
    sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
    uint64_t v131 = sub_241CDC270();
    uint64_t v244 = sub_241A33FE4(v131, v132, v245);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v120, v121, "[%s]_%s: Unable to decode %s", (uint8_t *)v123, 0x20u);
    uint64_t v133 = v243;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v133, -1, -1);
    MEMORY[0x245637F20](v123, -1, -1);

    uint64_t v134 = *(void (**)(void, uint64_t))(v230 + 8);
    uint64_t v135 = &v246;
LABEL_20:
    v134(*(v135 - 32), v229);
    goto LABEL_21;
  }
  uint64_t v72 = v237;
  sub_241CD7A80();
  sub_241CD7990();
  uint64_t v73 = v239;
  v60(v57, 0, 1, v239);
  char v74 = sub_241CD7A70();
  sub_241B6F940((uint64_t)v57, (uint64_t (*)(void))sub_241A72428);
  v218(v72, v73);
  if ((v74 & 1) == 0)
  {
    uint64_t v236 = v70;
    sub_241CDA140();
    uint64_t v136 = *(void (**)(char *, uint64_t *, objc_class *))(v71 + 16);
    Class v233 = v27;
    v136(v216, v240, v27);
    os_log_t v137 = v238;
    Class v138 = v238[2].isa;
    uint64_t v139 = v71;
    uint64_t v140 = v231;
    ((void (*)(char *, void, uint64_t))v138)(v224, v68, v231);
    uint64_t v141 = v222;
    uint64_t v242 = (void (*)(void, void, void))v138;
    ((void (*)(char *, void, uint64_t))v138)(v222, v68, v140);
    uint64_t v142 = sub_241CDA190();
    os_log_type_t v143 = sub_241CDB670();
    int v144 = v143;
    if (os_log_type_enabled(v142, v143))
    {
      uint64_t v145 = swift_slowAlloc();
      LODWORD(v234) = v144;
      uint64_t v146 = v145;
      uint64_t v235 = (char *)swift_slowAlloc();
      v245[0] = (uint64_t)v235;
      *(_DWORD *)uint64_t v146 = 136316162;
      uint64_t v232 = v142;
      uint64_t v147 = sub_241CDC270();
      unint64_t v148 = v72;
      uint64_t v244 = sub_241A33FE4(v147, v149, v245);
      uint64_t v240 = v245;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v146 + 12) = 2080;
      uint64_t v150 = v216;
      id v151 = (void *)sub_241CD76E0();
      uint64_t v152 = sub_241CD73E0();
      unint64_t v154 = v153;

      uint64_t v244 = sub_241A33FE4(v152, v154, v245);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, Class))(v139 + 8))(v150, v233);
      *(_WORD *)(v146 + 22) = 2080;
      Class v233 = (Class)(v146 + 24);
      uint64_t v155 = v224;
      sub_241CD7990();
      uint64_t v228 = (char *)sub_241A2C3DC(&qword_26B02E8F8, MEMORY[0x263F45780]);
      uint64_t v156 = v239;
      uint64_t v157 = sub_241CDC0D0();
      unint64_t v159 = v158;
      uint64_t v160 = v218;
      v218(v148, v156);
      uint64_t v244 = sub_241A33FE4(v157, v159, v245);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      Class v161 = v238[1].isa;
      ++v238;
      Class v233 = v161;
      uint64_t v162 = v231;
      ((void (*)(char *, uint64_t))v161)(v155, v231);
      *(_WORD *)(v146 + 32) = 2080;
      uint64_t v227 = v146 + 34;
      sub_241CD7A80();
      uint64_t v163 = sub_241CDC0D0();
      unint64_t v165 = v164;
      v160(v148, v156);
      uint64_t v244 = sub_241A33FE4(v163, v165, v245);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v146 + 42) = 2080;
      unint64_t v166 = v222;
      v242(v226, v222, v162);
      uint64_t v167 = sub_241CDB120();
      uint64_t v244 = sub_241A33FE4(v167, v168, v245);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v233)(v166, v162);
      os_log_t v169 = v232;
      _os_log_impl(&dword_241A23000, v232, (os_log_type_t)v234, "[%s]_%s: HKCodableSummaryData has version %s which is not compatible with %s for %s", (uint8_t *)v146, 0x34u);
      uint64_t v170 = v235;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v170, -1, -1);
      MEMORY[0x245637F20](v146, -1, -1);
    }
    else
    {

      (*(void (**)(char *, Class))(v139 + 8))(v216, v233);
      uint64_t v171 = (void (*)(char *, uint64_t))v137[1].isa;
      v171(v224, v140);
      v171(v141, v140);
    }
    uint64_t v134 = *(void (**)(void, uint64_t))(v230 + 8);
    uint64_t v135 = &v247;
    goto LABEL_20;
  }
  uint64_t v75 = v71;
  unsigned int v76 = objc_msgSend(v70, sel_hasKindRawValue);
  id v77 = v220;
  if (!v76) {
    goto LABEL_27;
  }
  id v78 = objc_msgSend(v70, sel_kindRawValue);
  if (!v78) {
    goto LABEL_27;
  }
  uint64_t v79 = v78;
  sub_241CDB0D0();

  switch(_sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0())
  {
    case 1u:
    case 2u:
    case 3u:
      char v173 = sub_241CDC100();
      swift_bridgeObjectRelease();
      if ((v173 & 1) == 0) {
        goto LABEL_27;
      }
      break;
    case 4u:
      goto LABEL_27;
    default:
      swift_bridgeObjectRelease();
      break;
  }
  BOOL v174 = sub_241B6F9A0();

  if (!v174)
  {
LABEL_27:

    goto LABEL_21;
  }
  uint64_t v236 = v70;
  id v175 = v221;
  sub_241CDA0F0();
  uint64_t v176 = *(void (**)(char *, uint64_t *, objc_class *))(v75 + 16);
  uint64_t v177 = v213;
  uint64_t v178 = v240;
  v176(v213, v240, v27);
  unint64_t v179 = v233;
  uint64_t v180 = sub_241CDA190();
  os_log_type_t v181 = sub_241CDB670();
  LODWORD(v243) = v181;
  if (os_log_type_enabled(v180, v181))
  {
    uint64_t v182 = swift_slowAlloc();
    uint64_t v239 = swift_slowAlloc();
    v245[0] = v239;
    *(_DWORD *)uint64_t v182 = 136446723;
    os_log_t v238 = v180;
    uint64_t v183 = sub_241CDC270();
    uint64_t v244 = sub_241A33FE4(v183, v184, v245);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v182 + 12) = 2080;
    uint64_t v185 = (void *)sub_241CD76E0();
    uint64_t v186 = sub_241CD73E0();
    Class v233 = v27;
    uint64_t v187 = v186;
    uint64_t v237 = (char *)(v75 + 16);
    uint64_t v188 = v179;
    uint64_t v189 = v176;
    uint64_t v190 = v177;
    unint64_t v192 = v191;

    uint64_t v244 = sub_241A33FE4(v187, v192, v245);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    uint64_t v193 = v190;
    uint64_t v176 = v189;
    unint64_t v179 = v188;
    (*(void (**)(char *, Class))(v75 + 8))(v193, v233);
    *(_WORD *)(v182 + 22) = 2081;
    id v194 = [(objc_class *)v188 identifier];
    uint64_t v195 = sub_241CDB0D0();
    unint64_t v197 = v196;

    uint64_t v198 = v195;
    uint64_t v27 = v233;
    uint64_t v244 = sub_241A33FE4(v198, v197, v245);
    sub_241CDBBF0();

    id v77 = v220;
    swift_bridgeObjectRelease();
    os_log_t v199 = v238;
    _os_log_impl(&dword_241A23000, v238, (os_log_type_t)v243, "%{public}s_%s Creating generator publisher for %{private}s", (uint8_t *)v182, 0x20u);
    uint64_t v200 = v239;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v200, -1, -1);
    uint64_t v201 = v182;
    uint64_t v178 = v240;
    MEMORY[0x245637F20](v201, -1, -1);

    (*(void (**)(char *, uint64_t))(v230 + 8))(v221, v229);
  }
  else
  {
    (*(void (**)(char *, objc_class *))(v75 + 8))(v177, v27);

    (*(void (**)(char *, uint64_t))(v230 + 8))(v175, v229);
  }
  uint64_t v202 = (uint64_t)v214;
  v176(v214, v178, v27);
  uint64_t v203 = sub_241CD7930();
  uint64_t v205 = v204;
  uint64_t v206 = type metadata accessor for SummaryAlertFeedItemGenerator();
  swift_allocObject();
  uint64_t v207 = v179;
  uint64_t v208 = v234;
  id v209 = v236;
  uint64_t v210 = v236;
  uint64_t v211 = sub_241BFE27C(v202, v203, v205, v209, v207, v208);

  uint64_t v212 = v241;
  v241[3] = v206;
  v212[4] = sub_241A2C3DC(&qword_26B02EFC8, (void (*)(uint64_t))type metadata accessor for SummaryAlertFeedItemGenerator);

  *uint64_t v212 = v211;
}

uint64_t sub_241B6D798@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v21[1] = a2;
  uint64_t v25 = a3;
  uint64_t v22 = sub_241CD7650();
  uint64_t v4 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD7690();
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  v21[2] = a1[1];
  v21[3] = v10;
  uint64_t v11 = (void *)sub_241CD76E0();
  sub_241A29B58(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v12 = sub_241CD73B0();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15 + v14, *MEMORY[0x263F454F8], v12);
  id v16 = v11;
  sub_241C5D74C(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_241C5D7A0(MEMORY[0x263F8EE78]);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v22);
  sub_241CD7680();

  uint64_t v17 = sub_241CD7800();
  uint64_t v18 = MEMORY[0x263F456B8];
  uint64_t v19 = v25;
  void v25[3] = v17;
  v19[4] = v18;
  sub_241A25BC8(v19);
  sub_241CD77D0();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v24);
}

uint64_t sub_241B6DAAC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries37SummaryAlertFeedItemGeneratorPipeline_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries37SummaryAlertFeedItemGeneratorPipeline_context;
  uint64_t v4 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241B6DBA0()
{
  return type metadata accessor for SummaryAlertFeedItemGeneratorPipeline();
}

uint64_t type metadata accessor for SummaryAlertFeedItemGeneratorPipeline()
{
  uint64_t result = qword_26B02F4D8;
  if (!qword_26B02F4D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B6DBF4()
{
  return swift_retain();
}

uint64_t sub_241B6DC08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries37SummaryAlertFeedItemGeneratorPipeline_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241B6DC80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_241A5B0F4();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      id v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_241CDC1D0();
      swift_bridgeObjectRetain();
      sub_241CDB170();
      uint64_t v19 = sub_241CDC200();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_241CDC100() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_241CDC100() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_241B6E404((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_241A5B0F4();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_241B6E404((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_241A5B0F4();
      MEMORY[0x245637F20](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_241B6E0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v28 = *MEMORY[0x263EF8340];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  uint64_t v26 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25[0] + 16 * v5);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      ++v5;
      sub_241CDC1D0();
      swift_bridgeObjectRetain();
      sub_241CDB170();
      uint64_t v9 = sub_241CDC200();
      uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = *(void *)(v2 + 48);
        unint64_t v13 = (void *)(v12 + 16 * v11);
        BOOL v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_241CDC100() & 1) != 0)
        {
          uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
          uint64_t v27 = v5;
LABEL_19:
          char v19 = *(unsigned char *)(v2 + 32);
          unint64_t v20 = (unint64_t)((1 << v19) + 63) >> 6;
          size_t v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            MEMORY[0x270FA5388](isStackAllocationSafe);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            uint64_t v22 = sub_241B6E6FC((uint64_t)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            uint64_t v22 = sub_241B6E6FC((uint64_t)v23, v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x245637F20](v23, -1, -1);
          }
          return v22;
        }
        uint64_t v15 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v15;
          if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            break;
          }
          id v16 = (void *)(v12 + 16 * v11);
          BOOL v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_241CDC100() & 1) != 0)
          {
            uint64_t v27 = v5;
            uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_241B6E404(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_241B6E928(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        char v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_241CDC1D0();
        swift_bridgeObjectRetain();
        sub_241CDB170();
        uint64_t v22 = sub_241CDC200();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        uint64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_241CDC100() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          int64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_241CDC100() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_241B6E6FC(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  unint64_t v30 = (unint64_t *)result;
  uint64_t v31 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_241B6E928(v30, a2, v31, a3);
  }
  uint64_t v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_29;
    }
    uint64_t v11 = v8 + 16 * v7;
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_241CDC1D0();
    swift_bridgeObjectRetain();
    sub_241CDB170();
    uint64_t v14 = sub_241CDC200();
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v32 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_4;
    }
    uint64_t v19 = *(void *)(a3 + 48);
    uint64_t v20 = (void *)(v19 + 16 * v16);
    BOOL v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_241CDC100() & 1) == 0)
    {
      uint64_t v24 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v26 + 1)
      {
        unint64_t v26 = i & v24;
        if (((*(void *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v19 + 16 * v26);
        BOOL v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_241CDC100() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v17 = v26 >> 6;
          uint64_t v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_15:
    unint64_t v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      uint64_t v23 = v31 - 1;
      if (__OFSUB__(v31, 1)) {
        goto LABEL_30;
      }
      --v31;
      if (!v23) {
        return MEMORY[0x263F8EE88];
      }
    }
LABEL_5:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_241B6E928(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_241A360C4();
  uint64_t result = sub_241CDBDE0();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_241CDC1D0();
    swift_bridgeObjectRetain();
    sub_241CDB170();
    uint64_t result = sub_241CDC200();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    BOOL v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *BOOL v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

void *sub_241B6EBBC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v63 = a2;
  uint64_t v5 = *v2;
  uint64_t v6 = sub_241CD7740();
  unint64_t v7 = *(void (**)(void, void, void))(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v59 = v8;
  uint64_t v60 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A36968();
  uint64_t v64 = *(void *)(v9 - 8);
  uint64_t v65 = v9;
  MEMORY[0x270FA5388](v9);
  char v62 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD7650();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v54 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CD7690();
  uint64_t v57 = *(void *)(v13 - 8);
  uint64_t v58 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v53 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241CDA1A0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0F0();
  uint64_t v19 = sub_241CDA190();
  os_log_type_t v20 = sub_241CDB670();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v67 = a1;
  uint64_t v68 = v3;
  uint64_t v66 = v6;
  uint64_t v61 = v5;
  if (v21)
  {
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    unint64_t v52 = v7;
    uint64_t v24 = v23;
    uint64_t v70 = v23;
    *(_DWORD *)unint64_t v22 = 136446210;
    uint64_t v25 = sub_241CDC270();
    uint64_t v69 = sub_241A33FE4(v25, v26, &v70);
    sub_241CDBBF0();
    uint64_t v3 = v68;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v19, v20, "[%{public}s] initialized", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v27 = v24;
    unint64_t v7 = v52;
    uint64_t v6 = v66;
    MEMORY[0x245637F20](v27, -1, -1);
    BOOL v28 = v22;
    a1 = v67;
    MEMORY[0x245637F20](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  unint64_t v52 = (void (*)(void, void, void))*((void *)v7 + 2);
  v52((char *)v3 + OBJC_IVAR____TtC9Summaries37SummaryAlertFeedItemGeneratorPipeline_context, a1, v6);
  BOOL v29 = (void *)sub_241CD76E0();
  uint64_t v30 = (void (**)(unint64_t, char *, uint64_t))v7;
  if (qword_26B033F90 != -1) {
    swift_once();
  }
  uint64_t v31 = swift_bridgeObjectRetain();
  sub_241A5A31C(v31);
  swift_bridgeObjectRelease();
  sub_241A29B58(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v32 = sub_241CD73B0();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v33 + 104))(v35 + v34, *MEMORY[0x263F454F8], v32);
  id v36 = v29;
  sub_241C5D74C(v35);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v37 = swift_retain();
  sub_241C5D7A0(v37);
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, *MEMORY[0x263F45688], v56);
  uint64_t v38 = v53;
  sub_241CD7680();

  swift_release();
  uint64_t v39 = v68;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))((uint64_t)v68 + OBJC_IVAR____TtC9Summaries37SummaryAlertFeedItemGeneratorPipeline_domain, v38, v58);
  uint64_t v40 = v60;
  uint64_t v41 = v66;
  uint64_t v42 = v67;
  v52(v60, v67, v66);
  unint64_t v43 = (*((unsigned __int8 *)v30 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v30 + 80);
  unint64_t v44 = (v59 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = swift_allocObject();
  v30[4](v45 + v43, v40, v41);
  uint64_t v46 = v63;
  *(void *)(v45 + v44) = v63;
  *(void *)(v45 + ((v44 + 15) & 0xFFFFFFFFFFFFFFF8)) = v61;
  sub_241A36CEC();
  sub_241A2C3DC(&qword_26B038958, (void (*)(uint64_t))sub_241A36CEC);
  id v47 = v46;
  uint64_t v48 = v62;
  sub_241CDA620();
  sub_241A2C3DC(&qword_26B02EAB8, (void (*)(uint64_t))sub_241A36968);
  uint64_t v49 = v65;
  uint64_t v50 = sub_241CDA6D0();
  ((void (*)(uint64_t, uint64_t))v30[1])(v42, v41);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v48, v49);
  *(void *)((char *)v39 + OBJC_IVAR____TtC9Summaries37SummaryAlertFeedItemGeneratorPipeline_publisher) = v50;
  return v39;
}

uint64_t sub_241B6F394()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_241B6F440@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_241CD7740() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t result = sub_241B69A10(v1 + v4, *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
  *a1 = result;
  return result;
}

void sub_241B6F4DC()
{
  if (!qword_26B032548)
  {
    sub_241A36CEC();
    sub_241B6F5C4(255);
    sub_241A2C3DC(&qword_26B038958, (void (*)(uint64_t))sub_241A36CEC);
    sub_241A2C3DC((unint64_t *)&qword_26B038970, sub_241B6F5C4);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032548);
    }
  }
}

void sub_241B6F5C4(uint64_t a1)
{
}

void sub_241B6F5E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDA510();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241B6F648(uint64_t a1)
{
}

uint64_t sub_241B6F67C()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_241B6F730@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD7740() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = *(NSObject **)(v2 + v8);
  uint64_t v11 = *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_241B69DB4(a1, (uint64_t *)(v2 + v6), v9, v10, v11, a2);
}

void sub_241B6F7F4()
{
  if (!qword_26B0325F8)
  {
    sub_241A36A74();
    sub_241A2C3DC(&qword_26B02EA88, (void (*)(uint64_t))sub_241A36A74);
    unint64_t v0 = sub_241CDA4B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0325F8);
    }
  }
}

void sub_241B6F888(uint64_t a1)
{
}

void sub_241B6F8BC(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (void *)sub_241CD76E0();
  uint64_t v5 = sub_241CA1EFC(v3);
  uint64_t v7 = v6;

  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_241B6F920@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241B6D798(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_241B6F940(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_241B6F9A0()
{
  unint64_t v1 = sub_241CD7940();
  unint64_t v2 = v1;
  if (!(v1 >> 62))
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!sub_241CDBF50()) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x245637160](0, v2);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_17;
    }
    id v3 = *(id *)(v2 + 32);
  }
  unint64_t v0 = v3;
  swift_bridgeObjectRelease();
  unint64_t v4 = sub_241CD7940();
  if (v4 >> 62)
  {
LABEL_17:
    uint64_t v5 = sub_241CDBF50();
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_8:
  swift_bridgeObjectRelease();
  if (v5 != 1 || (sub_241CDB440() & 1) == 0)
  {

    return 0;
  }
  return v0;
}

uint64_t sub_241B6FA98@<X0>(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v53 = a2;
  sub_241A32D2C(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v49 = (char *)&v45 - v5;
  sub_241A32D2C(0, &qword_26B031FF8, MEMORY[0x263F07908]);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v45 - v7;
  uint64_t v54 = sub_241CD6ED0();
  uint64_t v50 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v51 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD6D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v48 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  id v47 = (char *)&v45 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v46 = (char *)&v45 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v45 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v45 - v24;
  unint64_t v26 = self;
  id v27 = objc_msgSend(a1, sel_morningIndex);
  BOOL v28 = (void *)sub_241CD6E40();
  id v29 = objc_msgSend(v26, sel_hk_sleepDayIntervalForMorningIndex_calendar_, v27, v28);

  id v30 = objc_msgSend(v29, sel_endDate);
  sub_241CD6CB0();

  sub_241CD6E00();
  uint64_t v31 = v53 - 3;
  if ((unint64_t)(v53 - 3) > 3)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v8, 1, 1, v54);
    uint64_t v39 = *(void (**)(char *, uint64_t))(v11 + 8);
    v39(v23, v10);
    v39(v25, v10);
    sub_241B700E0((uint64_t)v8, &qword_26B031FF8, MEMORY[0x263F07908]);
    uint64_t v40 = sub_241CD6810();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v52, 1, 1, v40);
  }
  else
  {
    uint64_t v53 = v16;
    uint64_t v32 = v50;
    uint64_t v33 = v54;
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v8, **((unsigned int **)&unk_2650F4E78 + (void)v31), v54);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v8, 0, 1, v33);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v51, v8, v33);
    uint64_t v34 = (uint64_t)v49;
    sub_241CD6E70();
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    id v36 = v47;
    v35(v47, v23, v10);
    int v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v34, 1, v10);
    uint64_t v38 = v46;
    if (v37 == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v46, v36, v10);
      sub_241B700E0(v34, &qword_26B0385B8, MEMORY[0x263F07490]);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v38, v34, v10);
    }
    v35(v53, v23, v10);
    v35(v48, v38, v10);
    uint64_t v42 = v52;
    sub_241CD67C0();
    unint64_t v43 = *(void (**)(char *, uint64_t))(v11 + 8);
    v43(v38, v10);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v51, v54);
    v43(v23, v10);
    v43(v25, v10);
    uint64_t v44 = sub_241CD6810();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v42, 0, 1, v44);
  }
}

uint64_t sub_241B700E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241A32D2C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241B7013C(void *a1, void *a2, void (*a3)(id, uint64_t))
{
  uint64_t v4 = v3;
  uint64_t v38 = a3;
  uint64_t v7 = sub_241CDA1A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A5D1DC();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v37 - v15;
  sub_241A313AC(0, &qword_26B038088);
  uint64_t v17 = sub_241A4EC10(a1);
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    uint64_t v19 = v4 + qword_26B0411F8;
    uint64_t v20 = sub_241CD9ED0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v19, v20);
    uint64_t v21 = *MEMORY[0x263F46C78];
    uint64_t v22 = sub_241CD9970();
    uint64_t v23 = *(void *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v16, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v22);
    id v24 = a2;
    id v25 = v18;
    id v26 = objc_msgSend(v25, sel_data);
    if (v26)
    {
      id v27 = v26;
      sub_241A313AC(0, &qword_26B030440);
      uint64_t v28 = sub_241CD6AE0();
      unint64_t v30 = v29;

      sub_241A5D234((uint64_t)v16, (uint64_t)v14);
      uint64_t v40 = 0;
      memset(v39, 0, sizeof(v39));
      id v31 = sub_241A54648(v28, v30, 20, (uint64_t)v14, (uint64_t)v24, 0, (uint64_t)v39);

      sub_241A37374(v28, v30);
      sub_241A32954((uint64_t)v16, (uint64_t (*)(void))sub_241A5D1DC);
      id v32 = v31;
      v38(v31, 0);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_241CDA0F0();
    uint64_t v33 = sub_241CDA190();
    os_log_type_t v34 = sub_241CDB660();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_241A23000, v33, v34, "Unable to create breathing disturbances value from sample", v35, 2u);
      MEMORY[0x245637F20](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241B70588();
    id v36 = (void *)swift_allocError();
    v38(v36, 1);
  }
}

uint64_t type metadata accessor for BreathingDisturbancesMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B038010;
  if (!qword_26B038010) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_241B70588()
{
  unint64_t result = qword_268D42D50;
  if (!qword_268D42D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42D50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BreathingDisturbancesMostRecentSampleCurrentValueSharableModelStep.ValueError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x241B70678);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BreathingDisturbancesMostRecentSampleCurrentValueSharableModelStep.ValueError()
{
  return &type metadata for BreathingDisturbancesMostRecentSampleCurrentValueSharableModelStep.ValueError;
}

unint64_t sub_241B706B4()
{
  unint64_t result = qword_268D42D58;
  if (!qword_268D42D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42D58);
  }
  return result;
}

Summaries::SummaryModelConfiguration::Audience_optional __swiftcall SummaryModelConfiguration.Audience.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_241CDBFD0();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = Summaries_SummaryModelConfiguration_Audience_sharing;
  }
  else {
    v2.value = Summaries_SummaryModelConfiguration_Audience_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t SummaryModelConfiguration.Audience.rawValue.getter(char a1)
{
  if (a1) {
    return 0x676E6972616873;
  }
  else {
    return 0x7972616D697270;
  }
}

uint64_t static SummaryModelConfiguration.sharableModelIdentifierPrefix.getter()
{
  return 0x656972616D6D7553;
}

uint64_t SummaryModelConfiguration.__allocating_init(hkTypes:kind:audience:)(uint64_t a1, uint64_t a2, char a3)
{
  char v5 = a3 & 1;
  uint64_t v6 = swift_allocObject();
  sub_241A31C5C(a2, v6 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  *(void *)(v6 + 16) = a1;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v5;
  return v6;
}

uint64_t SummaryModelConfiguration.init(hkTypes:kind:audience:)(uint64_t a1, uint64_t a2, char a3)
{
  char v5 = a3 & 1;
  sub_241A31C5C(a2, v3 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  *(void *)(v3 + 16) = a1;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v5;
  return v3;
}

uint64_t SummaryModelConfiguration.deinit()
{
  swift_bridgeObjectRelease();
  sub_241A2E86C(v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind, type metadata accessor for SummaryModelConfiguration.Kind);
  return v0;
}

uint64_t SummaryModelConfiguration.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  return sub_241B74944(v3, a1, type metadata accessor for SummaryModelConfiguration.Kind);
}

uint64_t SummaryModelConfiguration.kind.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  sub_241B70974(a1, v3);
  return swift_endAccess();
}

uint64_t sub_241B70974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*SummaryModelConfiguration.kind.modify())()
{
  return j__swift_endAccess;
}

uint64_t SummaryModelConfiguration.audience.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  swift_beginAccess();
  return *v1;
}

uint64_t SummaryModelConfiguration.audience.setter(char a1)
{
  char v2 = a1 & 1;
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t (*SummaryModelConfiguration.audience.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t SummaryModelConfiguration.modelUniqueIdentifier.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v8 = *(void *)(v0 + 16);
  if (v8 >> 62)
  {
    sub_241B4EBF0();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_241CDBF30();
    swift_bridgeObjectRelease();
    unint64_t v8 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_241CDC110();
    sub_241B4EBF0();
  }
  uint64_t v9 = v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  sub_241B74944(v9, (uint64_t)v7, type metadata accessor for SummaryModelConfiguration.Kind);
  sub_241B71C0C(v4);
  sub_241A2E86C((uint64_t)v7, type metadata accessor for SummaryModelConfiguration.Kind);
  uint64_t v10 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  swift_beginAccess();
  uint64_t v11 = sub_241B7417C(v8, (uint64_t)v4, *v10);
  swift_bridgeObjectRelease();
  sub_241A2E86C((uint64_t)v4, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  return v11;
}

uint64_t type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B031CC0);
}

uint64_t SummaryModelConfiguration.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v8 = *(void *)(v0 + 16);
  if (v8 >> 62)
  {
    sub_241B4EBF0();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_241CDBF30();
    swift_bridgeObjectRelease();
    unint64_t v8 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_241CDC110();
    sub_241B4EBF0();
  }
  uint64_t v9 = v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  sub_241B74944(v9, (uint64_t)v7, type metadata accessor for SummaryModelConfiguration.Kind);
  sub_241B71C0C(v4);
  sub_241A2E86C((uint64_t)v7, type metadata accessor for SummaryModelConfiguration.Kind);
  uint64_t v10 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  swift_beginAccess();
  uint64_t v11 = sub_241B7417C(v8, (uint64_t)v4, *v10);
  swift_bridgeObjectRelease();
  sub_241A2E86C((uint64_t)v4, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  return v11;
}

uint64_t SummaryModelConfiguration.validAfterFirstRestoreOnly.getter()
{
  uint64_t v1 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  sub_241B74944(v4, (uint64_t)v3, type metadata accessor for SummaryModelConfiguration.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_241A2EB30();
      sub_241B74724((uint64_t)&v3[*(int *)(v9 + 48)]);
      uint64_t v10 = sub_241CD9970();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v3, v10);
      uint64_t result = 0;
      break;
    case 2u:
      sub_241A308C4();
      swift_release();
      uint64_t v8 = sub_241CD9A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v3, v8);
      uint64_t result = 1;
      break;
    case 3u:
      sub_241A2E86C((uint64_t)v3, type metadata accessor for SummaryModelConfiguration.Kind);
      uint64_t result = 1;
      break;
    default:
      swift_bridgeObjectRelease();
      sub_241A2F180();
      uint64_t v6 = (uint64_t)&v3[*(int *)(v5 + 48)];
      swift_release();
      sub_241B74724(v6);
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t SummaryModelConfiguration.makeRequest(generatorContext:configurationContext:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241CD77C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 208))(a1);
  if (v8) {
    swift_release();
  }
  BOOL v9 = v8 != 0;
  uint64_t v10 = (char *)(v2 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  swift_beginAccess();
  char v11 = *v10;
  sub_241CD81F0();
  type metadata accessor for SummaryModelConfiguration.Request(0);
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v12 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState, v7, v4);
  *(void *)(v12 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = v2;
  *(unsigned char *)(v12 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = v9;
  swift_retain();
  return v12;
}

uint64_t SummaryModelConfiguration.makeRequestPublisher(generatorContext:upstreamContextPublisher:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  BOOL v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B747D0();
  uint64_t v20 = *(void *)(v10 - 8);
  uint64_t v21 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a2;
  uint64_t v13 = (void (*)(uint64_t))MEMORY[0x263F43928];
  sub_241B74890(0, &qword_26B0326A0, MEMORY[0x263F43928]);
  type metadata accessor for SummaryModelConfiguration.Request(0);
  sub_241B748F4(&qword_26B038960, &qword_26B0326A0, v13);
  swift_retain();
  sub_241CDA710();
  swift_release();
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 208))(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if (!v14) {
    uint64_t v14 = sub_241B71614();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_241CD76C0();
  if ((sub_241CD7CA0() & 1) != 0 && v14)
  {
    uint64_t v15 = swift_retain();
    uint64_t v22 = sub_241B727CC(v15);
    sub_241B74890(0, &qword_26B0326E8, (void (*)(uint64_t))type metadata accessor for SummaryModelConfiguration.Request);
    sub_241B748F4(&qword_26B0326E0, &qword_26B0326E8, (void (*)(uint64_t))type metadata accessor for SummaryModelConfiguration.Request);
    uint64_t v16 = sub_241CDA6D0();
    swift_release();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v21);
  }
  else
  {
    sub_241B76A68(&qword_26B032378, (void (*)(uint64_t))sub_241B747D0);
    uint64_t v17 = v21;
    uint64_t v16 = sub_241CDA6D0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v17);
  }
  return v16;
}

uint64_t sub_241B71614()
{
  uint64_t v1 = v0;
  uint64_t v33 = *v0;
  sub_241B768F4();
  uint64_t v3 = v2;
  uint64_t v34 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B76988();
  uint64_t v7 = v6;
  uint64_t v35 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  BOOL v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = (uint64_t)v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  sub_241B74944(v16, (uint64_t)v15, type metadata accessor for SummaryModelConfiguration.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_241A2EB30();
      sub_241B74724((uint64_t)&v15[*(int *)(v19 + 48)]);
      uint64_t v20 = sub_241CD9970();
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v15, v20);
      return 0;
    case 2u:
      sub_241A308C4();
      swift_release();
      uint64_t v21 = sub_241CD9A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v15, v21);
      goto LABEL_6;
    case 3u:
      sub_241A2E86C((uint64_t)v15, type metadata accessor for SummaryModelConfiguration.Kind);
      goto LABEL_6;
    default:
      swift_bridgeObjectRelease();
      sub_241A2F180();
      uint64_t v18 = (uint64_t)&v15[*(int *)(v17 + 48)];
      swift_release();
      sub_241B74724(v18);
LABEL_6:
      sub_241B74944(v16, (uint64_t)v13, type metadata accessor for SummaryModelConfiguration.Kind);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_241A2EB30();
          sub_241B74724((uint64_t)&v13[*(int *)(v24 + 48)]);
          uint64_t v25 = sub_241CD9970();
          (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v13, v25);
          return 0;
        case 2u:
          sub_241A308C4();
          uint64_t v23 = *(void *)&v13[*(int *)(v27 + 48)];
          uint64_t v28 = sub_241CD9A30();
          (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v13, v28);
          break;
        case 3u:
          uint64_t v23 = *((void *)v13 + 1);
          swift_bridgeObjectRelease();
          break;
        default:
          swift_bridgeObjectRelease();
          sub_241A2F180();
          uint64_t v23 = *(void *)&v13[*(int *)(v22 + 64)];
          sub_241B74724((uint64_t)&v13[*(int *)(v22 + 48)]);
          break;
      }
      uint64_t v36 = v23;
      sub_241A36BFC(0, (unint64_t *)&qword_26B032758);
      sub_241A36C58(&qword_26B02EA48, (unint64_t *)&qword_26B032758);
      sub_241CDA7F0();
      swift_release();
      uint64_t v29 = swift_allocObject();
      uint64_t v30 = v33;
      *(void *)(v29 + 16) = v1;
      *(void *)(v29 + 24) = v30;
      sub_241B76A68(&qword_26B031B90, (void (*)(uint64_t))sub_241B768F4);
      swift_retain();
      sub_241CDA6E0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v3);
      sub_241B76A68(&qword_26B031B00, (void (*)(uint64_t))sub_241B76988);
      uint64_t v26 = sub_241CDA6D0();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v7);
      return v26;
  }
}

uint64_t static SummaryModelConfiguration.makeModelUniqueIdentifier(hkTypes:modelIdentifierKind:audience:)(unint64_t a1, uint64_t a2, char a3)
{
  return sub_241B7417C(a1, a2, a3 & 1);
}

uint64_t SummaryModelConfiguration.Audience.queryRequestAudience.getter(char a1)
{
  return a1 & 1;
}

uint64_t SummaryModelConfiguration.hkTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_241B71C0C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241B74944(v2, (uint64_t)v6, type metadata accessor for SummaryModelConfiguration.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_241A2EB30();
      uint64_t v13 = (uint64_t)v6 + *(int *)(v12 + 48);
      type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
      swift_storeEnumTagMultiPayload();
      sub_241B74724(v13);
      uint64_t v14 = sub_241CD9970();
      uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v14 - 8) + 8))(v6, v14);
      break;
    case 2u:
      sub_241A308C4();
      swift_release();
      uint64_t v10 = sub_241CD9A30();
      (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, v6, v10);
      type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
      goto LABEL_5;
    case 3u:
      uint64_t v11 = *v6;
      swift_release();
      *a1 = v11;
      type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
LABEL_5:
      uint64_t result = swift_storeEnumTagMultiPayload();
      break;
    default:
      swift_bridgeObjectRelease();
      sub_241A2F180();
      uint64_t v8 = (uint64_t)v6 + *(int *)(v7 + 48);
      swift_release();
      type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
      swift_storeEnumTagMultiPayload();
      uint64_t result = sub_241B74724(v8);
      break;
  }
  return result;
}

uint64_t SummaryModelConfiguration.Audience.uniqueIdentifierComponent.getter()
{
  return 0x65636E6569647541;
}

uint64_t SummaryModelConfiguration.ModelIdentifierKind.identifier.getter()
{
  uint64_t v1 = sub_241CD9CA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_241CD9A30();
  uint64_t v59 = *(void *)(v64 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v64);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  BOOL v9 = (char *)&v50 - v8;
  uint64_t v10 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B74944(v0, (uint64_t)v12, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  uint64_t v13 = 0x56746E6572727543;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = *(void *)v12;
      int64_t v17 = *(void *)(*(void *)v12 + 16);
      if (v17)
      {
        uint64_t v66 = MEMORY[0x263F8EE78];
        sub_241A521D8(0, v17, 0);
        uint64_t v18 = 0;
        uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
        uint64_t v19 = v2 + 16;
        uint64_t v56 = v16 + ((*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64));
        uint64_t v57 = v20;
        uint64_t v21 = *(void *)(v19 + 56);
        uint64_t v54 = v1;
        uint64_t v55 = v21;
        char v62 = (void (**)(char *, uint64_t))(v59 + 8);
        uint64_t v63 = v59 + 16;
        uint64_t v58 = v19;
        uint64_t v50 = v16;
        uint64_t v51 = (void (**)(char *, uint64_t))(v19 - 8);
        int64_t v52 = v17;
        uint64_t v53 = v4;
        while (1)
        {
          uint64_t v61 = v18;
          v57(v4, v56 + v55 * v18, v1);
          v65[0] = sub_241CD9C90();
          v65[1] = v22;
          sub_241CDB180();
          uint64_t v23 = sub_241CD9C80();
          uint64_t v24 = *(void *)(v23 + 16);
          if (!v24)
          {
            swift_bridgeObjectRelease();
            uint64_t v28 = (char *)MEMORY[0x263F8EE78];
            goto LABEL_29;
          }
          unint64_t v25 = v23 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
          uint64_t v26 = *(void *)(v59 + 72);
          uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
          uint64_t v60 = v23;
          swift_bridgeObjectRetain();
          uint64_t v28 = (char *)MEMORY[0x263F8EE78];
          do
          {
            uint64_t v29 = v64;
            v27(v7, v25, v64);
            uint64_t v30 = sub_241CD99A0();
            (*v62)(v7, v29);
            int64_t v31 = *(void *)(v30 + 16);
            int64_t v32 = *((void *)v28 + 2);
            int64_t v33 = v32 + v31;
            if (__OFADD__(v32, v31))
            {
              __break(1u);
LABEL_40:
              __break(1u);
LABEL_41:
              __break(1u);
LABEL_42:
              __break(1u);
LABEL_43:
              sub_241CDBFB0();
              __break(1u);
              JUMPOUT(0x241B725B4);
            }
            char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
            if (isUniquelyReferenced_nonNull_native && v33 <= *((void *)v28 + 3) >> 1)
            {
              if (!*(void *)(v30 + 16)) {
                goto LABEL_7;
              }
            }
            else
            {
              if (v32 <= v33) {
                int64_t v35 = v32 + v31;
              }
              else {
                int64_t v35 = v32;
              }
              uint64_t v28 = sub_241AF7560(isUniquelyReferenced_nonNull_native, v35, 1, v28);
              if (!*(void *)(v30 + 16))
              {
LABEL_7:
                if (v31) {
                  goto LABEL_40;
                }
                goto LABEL_8;
              }
            }
            uint64_t v36 = *((void *)v28 + 2);
            if ((*((void *)v28 + 3) >> 1) - v36 < v31) {
              goto LABEL_41;
            }
            uint64_t v37 = &v28[v36 + 32];
            if (v30 + 32 < (unint64_t)&v37[v31] && (unint64_t)v37 < v30 + 32 + v31) {
              goto LABEL_43;
            }
            memcpy(v37, (const void *)(v30 + 32), v31);
            if (v31)
            {
              uint64_t v39 = *((void *)v28 + 2);
              BOOL v40 = __OFADD__(v39, v31);
              uint64_t v41 = v39 + v31;
              if (v40) {
                goto LABEL_42;
              }
              *((void *)v28 + 2) = v41;
            }
LABEL_8:
            swift_bridgeObjectRelease();
            v25 += v26;
            --v24;
          }
          while (v24);
          swift_bridgeObjectRelease_n();
LABEL_29:
          MEMORY[0x245636610](v28, MEMORY[0x263F47200]);
          sub_241CDB180();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v42 = v65[0];
          uint64_t v43 = v65[1];
          uint64_t v4 = v53;
          uint64_t v1 = v54;
          (*v51)(v53, v54);
          uint64_t v44 = v66;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_241A521D8(0, *(void *)(v44 + 16) + 1, 1);
            uint64_t v44 = v66;
          }
          uint64_t v45 = v61;
          unint64_t v47 = *(void *)(v44 + 16);
          unint64_t v46 = *(void *)(v44 + 24);
          if (v47 >= v46 >> 1)
          {
            sub_241A521D8(v46 > 1, v47 + 1, 1);
            uint64_t v44 = v66;
          }
          uint64_t v18 = v45 + 1;
          *(void *)(v44 + 16) = v47 + 1;
          uint64_t v48 = v44 + 16 * v47;
          *(void *)(v48 + 32) = v42;
          *(void *)(v48 + 40) = v43;
          if (v18 == v52)
          {
            swift_bridgeObjectRelease();
            goto LABEL_37;
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v44 = MEMORY[0x263F8EE78];
LABEL_37:
      v65[0] = v44;
      sub_241B764B4(0, (unint64_t *)&qword_26B034C78);
      sub_241B764FC((unint64_t *)&qword_26B038E50, (unint64_t *)&qword_26B034C78);
      sub_241CDAFF0();
      swift_bridgeObjectRelease();
      v65[0] = 0;
      v65[1] = 0xE000000000000000;
      sub_241CDBE00();
      swift_bridgeObjectRelease();
      v65[0] = 0xD000000000000018;
      v65[1] = 0x8000000241CE18E0;
      sub_241CDB180();
      swift_bridgeObjectRelease();
      return v65[0];
    case 2u:
      return v13;
    case 3u:
      return 0x646F4D7472616843;
    default:
      uint64_t v14 = v59;
      uint64_t v15 = v64;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v9, v12, v64);
      v65[0] = 0;
      v65[1] = 0xE000000000000000;
      sub_241CDBE00();
      swift_bridgeObjectRelease();
      strcpy((char *)v65, "TrendAnalysis_");
      HIBYTE(v65[1]) = -18;
      sub_241CD99A0();
      MEMORY[0x245636610]();
      sub_241CDB180();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v65[0];
      (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
      return v13;
  }
}

uint64_t SummaryModelConfiguration.Request.__allocating_init(audience:currentTypeState:modelConfiguration:requestedByUnanchoredSignal:)(char a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7 = a1 & 1;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = v7;
  uint64_t v9 = v8 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a2, v10);
  *(void *)(v8 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = a3;
  *(unsigned char *)(v8 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = a4;
  return v8;
}

uint64_t sub_241B7267C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_241CD77C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (unsigned char *)(a1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  swift_beginAccess();
  LOBYTE(v8) = *v8;
  sub_241CD81F0();
  type metadata accessor for SummaryModelConfiguration.Request(0);
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = (_BYTE)v8;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v9 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState, v7, v4);
  *(void *)(v9 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = a1;
  *(unsigned char *)(v9 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = 0;
  *a2 = v9;
  return swift_retain();
}

uint64_t sub_241B727CC(uint64_t a1)
{
  sub_241B762D8();
  uint64_t v30 = v2;
  uint64_t v32 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B76540();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B76794(0, &qword_26B031B88, (uint64_t (*)(uint64_t))sub_241B76540, sub_241B765D4, MEMORY[0x263EFDB28]);
  uint64_t v36 = v9;
  uint64_t v38 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v29 - v10;
  sub_241B76608();
  uint64_t v37 = v12;
  uint64_t v39 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B76794(0, &qword_26B031B18, (uint64_t (*)(uint64_t))sub_241B76608, sub_241B76824, MEMORY[0x263EFDA30]);
  uint64_t v31 = v15;
  uint64_t v33 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  int64_t v17 = (char *)&v29 - v16;
  sub_241B763C4();
  uint64_t v19 = v18;
  uint64_t v29 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a1;
  sub_241A36BFC(0, &qword_26B0327C8);
  sub_241A36C58(&qword_26B02EA78, &qword_26B0327C8);
  sub_241CDA7D0();
  sub_241B747D0();
  sub_241B76A68(&qword_26B032378, (void (*)(uint64_t))sub_241B747D0);
  sub_241B76A68(&qword_26B031B30, (void (*)(uint64_t))sub_241B763C4);
  sub_241CDA700();
  sub_241CD7700();
  uint64_t v22 = v30;
  sub_241CDA330();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v22);
  type metadata accessor for SummaryModelConfiguration.Request(0);
  sub_241B765D4();
  uint64_t v23 = v34;
  sub_241CDA710();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v23);
  uint64_t v40 = 0;
  sub_241A35970(0, &qword_26B031CD0, type metadata accessor for SummaryModelConfiguration.Request, MEMORY[0x263F8D8F0]);
  sub_241B766F8();
  uint64_t v24 = v36;
  sub_241CDA730();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v24);
  sub_241B76824();
  uint64_t v25 = v37;
  sub_241CDA6E0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v25);
  sub_241B76858();
  uint64_t v26 = v31;
  uint64_t v27 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v26);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v19);
  return v27;
}

uint64_t sub_241B72E30@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *a1;
  sub_241CDA0F0();
  swift_retain_n();
  uint64_t v9 = sub_241CDA190();
  os_log_type_t v10 = sub_241CDB670();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = v4;
    uint64_t v12 = v11;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v25 = v21;
    *(_DWORD *)uint64_t v12 = 136315650;
    uint64_t v13 = sub_241CDC270();
    uint64_t v15 = sub_241A33FE4(v13, v14, &v25);
    uint64_t v23 = a2;
    uint64_t v24 = v15;
    uint64_t v20 = v5;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 1024;
    LODWORD(v24) = v8;
    sub_241CDBBF0();
    *(_WORD *)(v12 + 18) = 2080;
    uint64_t v16 = SummaryModelConfiguration.modelUniqueIdentifier.getter();
    uint64_t v24 = sub_241A33FE4(v16, v17, &v25);
    a2 = v23;
    sub_241CDBBF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v9, v10, "[%s]: First restore status changed to %{BOOL}d, emitting generation signal for %s", (uint8_t *)v12, 0x1Cu);
    uint64_t v18 = v21;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v18, -1, -1);
    MEMORY[0x245637F20](v12, -1, -1);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v22);
  }
  else
  {

    swift_release_n();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *a2 = 0;
  return result;
}

uint64_t SummaryModelConfiguration.makeUnanchoredChangePublishers(generatorContext:)()
{
  return 0;
}

uint64_t sub_241B730DC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_241B730E8()
{
  return SummaryModelConfiguration.modelUniqueIdentifier.getter();
}

uint64_t sub_241B7310C()
{
  return SummaryModelConfiguration.validAfterFirstRestoreOnly.getter() & 1;
}

uint64_t sub_241B73134@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = SummaryModelConfiguration.makeRequest(generatorContext:configurationContext:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_241B73160(uint64_t a1, uint64_t a2)
{
  return SummaryModelConfiguration.makeRequestPublisher(generatorContext:upstreamContextPublisher:)(a1, a2);
}

uint64_t sub_241B73184()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 208))();
}

uint64_t sub_241B731C8()
{
  return SummaryModelConfiguration.debugDescription.getter();
}

uint64_t SummaryModelConfiguration.Kind.uniqueIdentifierComponent.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241B74944(v1, (uint64_t)v4, type metadata accessor for SummaryModelConfiguration.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_241A2EB30();
      uint64_t v13 = (uint64_t)v4 + *(int *)(v12 + 48);
      swift_storeEnumTagMultiPayload();
      sub_241B74724(v13);
      uint64_t v14 = sub_241CD9970();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v14 - 8) + 8))(v4, v14);
      break;
    case 2u:
      sub_241A308C4();
      swift_release();
      uint64_t v10 = sub_241CD9A30();
      (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v4, v10);
      goto LABEL_5;
    case 3u:
      uint64_t v11 = *v4;
      swift_release();
      *uint64_t v7 = v11;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      swift_bridgeObjectRelease();
      sub_241A2F180();
      uint64_t v9 = (uint64_t)v4 + *(int *)(v8 + 48);
      swift_release();
      swift_storeEnumTagMultiPayload();
      sub_241B74724(v9);
      break;
  }
  uint64_t v15 = SummaryModelConfiguration.ModelIdentifierKind.identifier.getter();
  sub_241A2E86C((uint64_t)v7, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  return v15;
}

uint64_t SummaryModelConfiguration.Kind.codableKind.getter()
{
  uint64_t v1 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B74944(v0, (uint64_t)v3, type metadata accessor for SummaryModelConfiguration.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_241A2EB30();
      sub_241B74724((uint64_t)&v3[*(int *)(v8 + 48)]);
      uint64_t v9 = sub_241CD9970();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v3, v9);
      uint64_t result = 1;
      break;
    case 2u:
      sub_241A308C4();
      swift_release();
      uint64_t v7 = sub_241CD9A30();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v3, v7);
      uint64_t result = 2;
      break;
    case 3u:
      sub_241A2E86C((uint64_t)v3, type metadata accessor for SummaryModelConfiguration.Kind);
      uint64_t result = 3;
      break;
    default:
      swift_bridgeObjectRelease();
      sub_241A2F180();
      uint64_t v5 = (uint64_t)&v3[*(int *)(v4 + 48)];
      swift_release();
      sub_241B74724(v5);
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t SummaryModelConfiguration.Audience.description.getter(char a1)
{
  if (a1) {
    return 0x676E6972616873;
  }
  else {
    return 0x7972616D697270;
  }
}

uint64_t sub_241B73668()
{
  return sub_241CDC200();
}

uint64_t sub_241B736E0()
{
  sub_241CDB170();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241B7373C()
{
  return sub_241CDC200();
}

uint64_t sub_241B737B0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_241CDBFD0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_241B73810(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7972616D697270;
  if (*v1) {
    uint64_t v2 = 0x676E6972616873;
  }
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_241B73848(char *a1, char *a2)
{
  return sub_241B69888(*a1, *a2);
}

uint64_t SummaryModelConfiguration.Request.init(audience:currentTypeState:modelConfiguration:requestedByUnanchoredSignal:)(char a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 16) = a1 & 1;
  uint64_t v8 = v4 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  uint64_t v9 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  *(void *)(v4 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = a3;
  *(unsigned char *)(v4 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = a4;
  return v4;
}

uint64_t SummaryModelConfiguration.Request.__allocating_init(request:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v3 = a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  uint64_t v4 = v2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  uint64_t v5 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v4, v3, v5);
  *(void *)(v2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = *(void *)(a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration);
  LOBYTE(v4) = *(unsigned char *)(a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal);
  swift_retain();
  swift_release();
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = v4;
  return v2;
}

uint64_t SummaryModelConfiguration.Request.init(request:)(uint64_t a1)
{
  *(unsigned char *)(v1 + 16) = *(unsigned char *)(a1 + 16);
  uint64_t v3 = a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  uint64_t v4 = v1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  uint64_t v5 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v4, v3, v5);
  *(void *)(v1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = *(void *)(a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration);
  LOBYTE(v4) = *(unsigned char *)(a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal);
  swift_retain();
  swift_release();
  *(unsigned char *)(v1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = v4;
  return v1;
}

uint64_t SummaryModelConfiguration.Request.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  uint64_t v2 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t SummaryModelConfiguration.Request.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  uint64_t v2 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241B73B90@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_241B73B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD77C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v36[-v13];
  if (a1)
  {
    uint64_t v41 = v5;
    uint64_t v15 = a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
    uint64_t v16 = a2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
    swift_retain();
    uint64_t v42 = v16;
    if (MEMORY[0x245632AF0](v15, v16))
    {
      sub_241CDA0F0();
      swift_retain_n();
      uint64_t v17 = sub_241CDA190();
      os_log_type_t v18 = sub_241CDB670();
      int v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v39 = v9;
        uint64_t v21 = v20;
        uint64_t v38 = swift_slowAlloc();
        uint64_t v44 = v38;
        *(_DWORD *)uint64_t v21 = 136315394;
        int v37 = v19;
        uint64_t v43 = sub_241A33FE4(0xD000000000000046, 0x8000000241CE19F0, &v44);
        uint64_t v40 = v8;
        sub_241CDBBF0();
        *(_WORD *)(v21 + 12) = 2080;
        uint64_t v22 = SummaryModelConfiguration.modelUniqueIdentifier.getter();
        uint64_t v43 = sub_241A33FE4(v22, v23, &v44);
        sub_241CDBBF0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v17, (os_log_type_t)v37, "[%s] Unanchored change received, emitting unanchored generation signal for %s", (uint8_t *)v21, 0x16u);
        uint64_t v24 = v38;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v24, -1, -1);
        MEMORY[0x245637F20](v21, -1, -1);
        swift_release();

        (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v14, v40);
      }
      else
      {
        swift_release();

        swift_release_n();
        (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
      }
      uint64_t v32 = v41;
      char v33 = *(unsigned char *)(a2 + 16);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v41 + 16))(v7, v42, v4);
      uint64_t v34 = *(void *)(a2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration);
      type metadata accessor for SummaryModelConfiguration.Request(0);
      a2 = swift_allocObject();
      *(unsigned char *)(a2 + 16) = v33;
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v32 + 32))(a2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState, v7, v4);
      *(void *)(a2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = v34;
      *(unsigned char *)(a2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = 1;
    }
    else
    {
      sub_241CDA0F0();
      swift_retain_n();
      uint64_t v25 = sub_241CDA190();
      os_log_type_t v26 = sub_241CDB670();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v40 = v8;
        uint64_t v42 = v28;
        uint64_t v44 = v28;
        *(_DWORD *)uint64_t v27 = 136315394;
        uint64_t v43 = sub_241A33FE4(0xD000000000000046, 0x8000000241CE19F0, &v44);
        sub_241CDBBF0();
        *(_WORD *)(v27 + 12) = 2080;
        uint64_t v29 = SummaryModelConfiguration.modelUniqueIdentifier.getter();
        uint64_t v43 = sub_241A33FE4(v29, v30, &v44);
        sub_241CDBBF0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v25, v26, "[%s] Anchored change received, emitting generation signal for %s", (uint8_t *)v27, 0x16u);
        uint64_t v31 = v42;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v31, -1, -1);
        MEMORY[0x245637F20](v27, -1, -1);
        swift_release();

        (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v40);
      }
      else
      {

        swift_release();
        swift_release_n();
        (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
      }
    }
  }
  swift_retain();
  return a2;
}

uint64_t sub_241B7414C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_241B73B9C(*a1, *a2);
  *a3 = result;
  return result;
}

uint64_t sub_241B7417C(unint64_t a1, uint64_t a2, int a3)
{
  v36[1] = a3;
  uint64_t v37 = a2;
  uint64_t v4 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!v7)
  {
LABEL_32:
    uint64_t v40 = v8;
    sub_241B764B4(0, (unint64_t *)&qword_26B034C78);
    sub_241B764FC((unint64_t *)&qword_26B038E50, (unint64_t *)&qword_26B034C78);
    sub_241CDAFF0();
    swift_bridgeObjectRelease();
    uint64_t v40 = 91;
    unint64_t v41 = 0xE100000000000000;
    sub_241CDB180();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    uint64_t v40 = 0x656972616D6D7553;
    unint64_t v41 = 0xEA00000000005F73;
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    SummaryModelConfiguration.ModelIdentifierKind.identifier.getter();
    sub_241CDB180();
    swift_bridgeObjectRelease();
LABEL_33:
    sub_241CDB180();
    uint64_t v38 = 0x65636E6569647541;
    unint64_t v39 = 0xE90000000000005FLL;
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    return v40;
  }
  uint64_t v9 = &off_2650F5000;
  if (v7 != 1) {
    goto LABEL_24;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_241CDBF50();
    if (result) {
      goto LABEL_7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v15 = 0;
    uint64_t v17 = 0;
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v10) {
    goto LABEL_12;
  }
LABEL_7:
  if ((a1 & 0xC000000000000001) != 0) {
    goto LABEL_37;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    for (id i = *(id *)(a1 + 32); ; id i = (id)MEMORY[0x245637160](0, a1))
    {
      uint64_t v13 = i;
      swift_bridgeObjectRelease();
      id v14 = [v13 (SEL)v9[247]];

      uint64_t v15 = sub_241CDB0D0();
      uint64_t v17 = v16;

LABEL_13:
      id v18 = objc_msgSend(self, sel_activitySummaryType);
      id v19 = [v18 (SEL)v9[247]];

      uint64_t v20 = sub_241CDB0D0();
      uint64_t v22 = v21;

      if (!v17)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = &off_2650F5000;
        goto LABEL_24;
      }
      if (v15 == v20 && v17 == v22)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = &off_2650F5000;
      }
      else
      {
        char v23 = sub_241CDC100();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = &off_2650F5000;
        if ((v23 & 1) == 0) {
          goto LABEL_24;
        }
      }
      unint64_t v24 = 0xD000000000000015;
      sub_241B74944(v37, (uint64_t)v6, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3) {
        return v24;
      }
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v40 = 0;
        unint64_t v41 = 0xE000000000000000;
        sub_241CDBE00();
        goto LABEL_33;
      }
      sub_241A2E86C((uint64_t)v6, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
LABEL_24:
      uint64_t v40 = v8;
      uint64_t v6 = &v40;
      sub_241A521D8(0, v7 & ~(v7 >> 63), 0);
      if ((v7 & 0x8000000000000000) == 0)
      {
        uint64_t v26 = 0;
        uint64_t v8 = v40;
        do
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v27 = (id)MEMORY[0x245637160](v26, a1);
          }
          else {
            id v27 = *(id *)(a1 + 8 * v26 + 32);
          }
          uint64_t v28 = v27;
          id v29 = [v27 (SEL)v9[247]];
          uint64_t v30 = sub_241CDB0D0();
          uint64_t v32 = v31;

          uint64_t v40 = v8;
          unint64_t v34 = *(void *)(v8 + 16);
          unint64_t v33 = *(void *)(v8 + 24);
          if (v34 >= v33 >> 1)
          {
            sub_241A521D8(v33 > 1, v34 + 1, 1);
            uint64_t v8 = v40;
          }
          ++v26;
          *(void *)(v8 + 16) = v34 + 1;
          unint64_t v35 = v8 + 16 * v34;
          *(void *)(v35 + 32) = v30;
          *(void *)(v35 + 40) = v32;
          uint64_t v9 = &off_2650F5000;
        }
        while (v7 != v26);
        goto LABEL_32;
      }
      __break(1u);
LABEL_37:
      ;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_241B74724(uint64_t a1)
{
  sub_241A35970(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SummaryModelConfiguration.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B032FD8);
}

void sub_241B747D0()
{
  if (!qword_26B032380)
  {
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F43928];
    sub_241B74890(255, &qword_26B0326A0, MEMORY[0x263F43928]);
    type metadata accessor for SummaryModelConfiguration.Request(255);
    sub_241B748F4(&qword_26B038960, &qword_26B0326A0, v0);
    unint64_t v1 = sub_241CDA3E0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032380);
    }
  }
}

uint64_t sub_241B74888@<X0>(uint64_t *a1@<X8>)
{
  return sub_241B7267C(v1, a1);
}

void sub_241B74890(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDA510();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241B748F4(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B74890(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B74944(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_241B749B0()
{
  unint64_t result = qword_268D42D60;
  if (!qword_268D42D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42D60);
  }
  return result;
}

uint64_t sub_241B74A04()
{
  return type metadata accessor for SummaryModelConfiguration(0);
}

uint64_t sub_241B74A0C()
{
  uint64_t result = type metadata accessor for SummaryModelConfiguration.Kind(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SummaryModelConfiguration.ModelIdentifierKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_241CD9A30();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for SummaryModelConfiguration.ModelIdentifierKind(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_241CD9A30();
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for SummaryModelConfiguration.ModelIdentifierKind(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_241CD9A30();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for SummaryModelConfiguration.ModelIdentifierKind(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_241A2E86C((uint64_t)a1, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_241CD9A30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for SummaryModelConfiguration.ModelIdentifierKind(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_241CD9A30();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for SummaryModelConfiguration.ModelIdentifierKind(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_241A2E86C((uint64_t)a1, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_241CD9A30();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_241B74FE4()
{
  uint64_t result = sub_241CD9A30();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SummaryModelConfiguration.Kind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v15 = sub_241CD9970();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        sub_241A2EB30();
        uint64_t v17 = *(int *)(v16 + 48);
        id v18 = (char *)a1 + v17;
        id v19 = (char *)a2 + v17;
        uint64_t v20 = sub_241CD6810();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          sub_241A35970(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
          memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        break;
      case 2u:
        uint64_t v23 = sub_241CD9A30();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        sub_241A308C4();
        *(uint64_t *)((char *)a1 + *(int *)(v24 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v24 + 48));
        swift_retain();
        break;
      case 3u:
        uint64_t v25 = *a2;
        uint64_t v26 = a2[1];
        *a1 = v25;
        a1[1] = v26;
        swift_bridgeObjectRetain();
        swift_retain();
        break;
      default:
        *a1 = *a2;
        sub_241A2F180();
        uint64_t v7 = v6;
        uint64_t v8 = *(int *)(v6 + 48);
        __dst = (char *)a1 + v8;
        uint64_t v9 = (char *)a2 + v8;
        uint64_t v10 = sub_241CD6810();
        uint64_t v11 = *(void *)(v10 - 8);
        uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
        swift_bridgeObjectRetain();
        if (v12(v9, 1, v10))
        {
          sub_241A35970(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
          memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
        }
        *(uint64_t *)((char *)a1 + *(int *)(v7 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 64));
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for SummaryModelConfiguration.Kind(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_241A2E86C((uint64_t)a1, type metadata accessor for SummaryModelConfiguration.Kind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v12 = sub_241CD9970();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        sub_241A2EB30();
        uint64_t v14 = *(int *)(v13 + 48);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_241CD6810();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          sub_241A35970(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        break;
      case 2u:
        uint64_t v20 = sub_241CD9A30();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        sub_241A308C4();
        *(void *)((char *)a1 + *(int *)(v21 + 48)) = *(void *)((char *)a2 + *(int *)(v21 + 48));
        swift_retain();
        break;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_retain();
        break;
      default:
        *a1 = *a2;
        sub_241A2F180();
        uint64_t v5 = v4;
        uint64_t v6 = *(int *)(v4 + 48);
        __dst = (char *)a1 + v6;
        uint64_t v7 = (char *)a2 + v6;
        uint64_t v8 = sub_241CD6810();
        uint64_t v9 = *(void *)(v8 - 8);
        uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
        swift_bridgeObjectRetain();
        if (v10(v7, 1, v8))
        {
          sub_241A35970(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
          memcpy(__dst, v7, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v9 + 16))(__dst, v7, v8);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
        }
        *(void *)((char *)a1 + *(int *)(v5 + 64)) = *(void *)((char *)a2 + *(int *)(v5 + 64));
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for SummaryModelConfiguration.Kind(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v15 = sub_241CD9A30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      sub_241A308C4();
      *(void *)((char *)a1 + *(int *)(v16 + 48)) = *(void *)((char *)a2 + *(int *)(v16 + 48));
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v17 = sub_241CD9970();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      sub_241A2EB30();
      uint64_t v19 = *(int *)(v18 + 48);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_241CD6810();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        sub_241A35970(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      goto LABEL_13;
    case 0:
      *a1 = *a2;
      sub_241A2F180();
      uint64_t v8 = v7;
      uint64_t v9 = *(int *)(v7 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_241CD6810();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_241A35970(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(void *)((char *)a1 + *(int *)(v8 + 64)) = *(void *)((char *)a2 + *(int *)(v8 + 64));
      goto LABEL_13;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithTake for SummaryModelConfiguration.Kind(void *a1, void *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_241A2E86C((uint64_t)a1, type metadata accessor for SummaryModelConfiguration.Kind);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v15 = sub_241CD9A30();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      sub_241A308C4();
      *(void *)((char *)a1 + *(int *)(v16 + 48)) = *(void *)((char *)a2 + *(int *)(v16 + 48));
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v17 = sub_241CD9970();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      sub_241A2EB30();
      uint64_t v19 = *(int *)(v18 + 48);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_241CD6810();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        sub_241A35970(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      goto LABEL_15;
    case 0:
      *a1 = *a2;
      sub_241A2F180();
      uint64_t v8 = v7;
      uint64_t v9 = *(int *)(v7 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_241CD6810();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_241A35970(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(void *)((char *)a1 + *(int *)(v8 + 64)) = *(void *)((char *)a2 + *(int *)(v8 + 64));
      goto LABEL_15;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void sub_241B75F98()
{
  sub_241A35970(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    uint64_t v6 = &v5;
    sub_241CD9970();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v7 = &v4;
      sub_241CD9A30();
      if (v2 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v8 = &v3;
        uint64_t v9 = &unk_241CEFC80;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SummaryModelConfiguration.Audience(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241B761ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryModelConfiguration.Audience()
{
  return &type metadata for SummaryModelConfiguration.Audience;
}

uint64_t sub_241B76224()
{
  return type metadata accessor for SummaryModelConfiguration.Request(0);
}

uint64_t sub_241B7622C()
{
  uint64_t result = sub_241CD77C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_241B762D8()
{
  if (!qword_26B031AF8)
  {
    sub_241B747D0();
    sub_241B763C4();
    sub_241B76A68(&qword_26B032378, (void (*)(uint64_t))sub_241B747D0);
    sub_241B76A68(&qword_26B031B30, (void (*)(uint64_t))sub_241B763C4);
    unint64_t v0 = sub_241CDA340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031AF8);
    }
  }
}

void sub_241B763C4()
{
  if (!qword_26B031B38)
  {
    sub_241A97F00();
    sub_241A36BFC(255, &qword_26B0327C8);
    sub_241B76A68(&qword_26B0325D0, (void (*)(uint64_t))sub_241A97F00);
    sub_241A36C58(&qword_26B02EA78, &qword_26B0327C8);
    unint64_t v0 = sub_241CDA390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031B38);
    }
  }
}

void sub_241B764B4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_241CDB320();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_241B764FC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B764B4(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B76540()
{
  if (!qword_26B031BF0)
  {
    sub_241B762D8();
    sub_241B76A68(&qword_26B031AF0, (void (*)(uint64_t))sub_241B762D8);
    unint64_t v0 = sub_241CDA460();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031BF0);
    }
  }
}

uint64_t sub_241B765D4()
{
  return sub_241B76A68(&qword_26B031BE8, (void (*)(uint64_t))sub_241B76540);
}

void sub_241B76608()
{
  if (!qword_26B031BA8)
  {
    sub_241B76794(255, &qword_26B031B88, (uint64_t (*)(uint64_t))sub_241B76540, sub_241B765D4, MEMORY[0x263EFDB28]);
    sub_241A35970(255, &qword_26B031CD0, type metadata accessor for SummaryModelConfiguration.Request, MEMORY[0x263F8D8F0]);
    sub_241B766F8();
    unint64_t v0 = sub_241CDA420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031BA8);
    }
  }
}

unint64_t sub_241B766F8()
{
  unint64_t result = qword_26B031B80;
  if (!qword_26B031B80)
  {
    sub_241B76794(255, &qword_26B031B88, (uint64_t (*)(uint64_t))sub_241B76540, sub_241B765D4, MEMORY[0x263EFDB28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B031B80);
  }
  return result;
}

void sub_241B76794(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = type metadata accessor for SummaryModelConfiguration.Request(255);
    uint64_t v11 = a4();
    unint64_t v12 = a5(a1, v9, v10, v11);
    if (!v13) {
      atomic_store(v12, a2);
    }
  }
}

uint64_t sub_241B76824()
{
  return sub_241B76A68(&qword_26B031BA0, (void (*)(uint64_t))sub_241B76608);
}

unint64_t sub_241B76858()
{
  unint64_t result = qword_26B031B10;
  if (!qword_26B031B10)
  {
    sub_241B76794(255, &qword_26B031B18, (uint64_t (*)(uint64_t))sub_241B76608, sub_241B76824, MEMORY[0x263EFDA30]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B031B10);
  }
  return result;
}

void sub_241B768F4()
{
  if (!qword_26B031B98)
  {
    sub_241A36BFC(255, (unint64_t *)&qword_26B032758);
    sub_241A36C58(&qword_26B02EA48, (unint64_t *)&qword_26B032758);
    unint64_t v0 = sub_241CDA410();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031B98);
    }
  }
}

void sub_241B76988()
{
  if (!qword_26B031B08)
  {
    sub_241B768F4();
    sub_241B76A68(&qword_26B031B90, (void (*)(uint64_t))sub_241B768F4);
    unint64_t v0 = sub_241CDA370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031B08);
    }
  }
}

uint64_t sub_241B76A28()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241B76A60@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_241B72E30(a1, a2);
}

uint64_t sub_241B76A68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_241B76AB4(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v21 = *v1;
  uint64_t v19 = sub_241CD7650();
  uint64_t v4 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  unsigned int v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_241CD7690();
  uint64_t v7 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)v1 + OBJC_IVAR____TtC9Summaries31WheelchairSettingModelGenerator_context;
  uint64_t v11 = sub_241CD7740();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  uint64_t v22 = a1;
  uint64_t v13 = (void *)sub_241CD76E0();
  uint64_t v14 = qword_26B033770;
  id v15 = v13;
  if (v14 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v19);
  swift_bridgeObjectRetain();
  sub_241CD7680();

  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC9Summaries31WheelchairSettingModelGenerator_domain, v9, v20);
  uint64_t v16 = v22;
  uint64_t v17 = sub_241B76D74(v22);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v11);
  *(void *)((char *)v2 + OBJC_IVAR____TtC9Summaries31WheelchairSettingModelGenerator_publisher) = v17;
  return v2;
}

uint64_t sub_241B76D74(uint64_t a1)
{
  uint64_t v3 = sub_241CD7740();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B77834();
  uint64_t v18 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v12 = (v5 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v11, v6, v3);
  *(void *)(v13 + v12) = v1;
  *(void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)) = v1;
  sub_241B778C8(0);
  sub_241B77A48(&qword_26B02EA98, sub_241B778C8);
  sub_241CDA620();
  sub_241B77A48(&qword_26B02EAC8, (void (*)(uint64_t))sub_241B77834);
  uint64_t v14 = v18;
  uint64_t v15 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v14);
  return v15;
}

uint64_t sub_241B76FF8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v27 = a2;
  uint64_t v26 = sub_241CDA1A0();
  uint64_t v2 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7C30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241CD76B0();
  sub_241A311E0(v29, v29[3]);
  uint64_t v9 = (void *)sub_241CD75B0();
  sub_241A31190((uint64_t)v29);
  uint64_t v10 = sub_241B773CC(v9);
  *uint64_t v8 = sub_241BBD6DC(v10);
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F45880], v5);
  sub_241CDA0F0();
  unint64_t v11 = sub_241CDA190();
  os_log_type_t v12 = sub_241CDB670();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v23 = v2;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = v5;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v28 = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    uint64_t v22 = v14 + 4;
    v29[0] = v25;
    swift_getMetatypeMetadata();
    uint64_t v16 = sub_241CDB120();
    v29[0] = sub_241A33FE4(v16, v17, &v28);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v11, v12, "[%{public}s] Submitting a sharable model for wheelchair use", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v15, -1, -1);
    uint64_t v18 = v14;
    uint64_t v5 = v24;
    MEMORY[0x245637F20](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v26);
  }
  sub_241B77A90(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  unint64_t v19 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, uint64_t *, uint64_t))(v6 + 16))(v20 + v19, v8, v5);
  v29[0] = v20;
  sub_241B6F648(0);
  sub_241CDA5D0();

  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_241B773CC(void *a1)
{
  uint64_t v2 = v1;
  v23[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = 0;
  id v8 = objc_msgSend(a1, sel_wheelchairUseWithError_, &v22);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = v22;
    BOOL v11 = objc_msgSend(v9, sel_wheelchairUse) == (id)2;

    return 2 * v11;
  }
  else
  {
    id v13 = v22;
    uint64_t v14 = (void *)sub_241CD6A40();

    swift_willThrow();
    sub_241CDA0F0();
    uint64_t v15 = sub_241CDA190();
    os_log_type_t v16 = sub_241CDB650();
    if (os_log_type_enabled(v15, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      id v22 = v2;
      v23[0] = v18;
      *(_DWORD *)unint64_t v17 = 136446210;
      v21[1] = v17 + 4;
      swift_getMetatypeMetadata();
      uint64_t v19 = sub_241CDB120();
      id v22 = (id)sub_241A33FE4(v19, v20, v23);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v15, v16, "[%{public}s] Failed to get wheelchair use, using notSet as default", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v18, -1, -1);
      MEMORY[0x245637F20](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
}

uint64_t sub_241B77660()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries31WheelchairSettingModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries31WheelchairSettingModelGenerator_context;
  uint64_t v4 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_241B77754()
{
  return type metadata accessor for WheelchairSettingModelGenerator();
}

uint64_t type metadata accessor for WheelchairSettingModelGenerator()
{
  uint64_t result = qword_26B02F298;
  if (!qword_26B02F298) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B777A8()
{
  return swift_retain();
}

uint64_t sub_241B777BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries31WheelchairSettingModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_241B77834()
{
  if (!qword_26B0328A8)
  {
    sub_241B778C8(255);
    sub_241B77A48(&qword_26B02EA98, sub_241B778C8);
    unint64_t v0 = sub_241CDA630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0328A8);
    }
  }
}

void sub_241B778C8(uint64_t a1)
{
}

uint64_t sub_241B778FC()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241B779A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_241CD7740() - 8);
  uint64_t v4 = *(void *)(v1
                 + ((((*(void *)(v3 + 64)
                     + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
                     + 7) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_241B76FF8(v4, a1);
}

uint64_t sub_241B77A48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B77A90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for Summaries_SharingVersionMismatchTileView()
{
  uint64_t result = qword_26B02ED60;
  if (!qword_26B02ED60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B77B40()
{
  return swift_initClassMetadata2();
}

id sub_241B77B80(void *a1, double a2, double a3, double a4, double a5)
{
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for Summaries_SharingVersionMismatchTileView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_241B77BF4(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for Summaries_SharingVersionMismatchTileView();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_241B77C40()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Summaries_SharingVersionMismatchTileView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241B77C78()
{
  return type metadata accessor for Summaries_SharingVersionMismatchTileView();
}

uint64_t sub_241B77C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B77C94);
}

uint64_t sub_241B77C94(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    BOOL v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241B77D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B77D58);
}

void *sub_241B77D58(void *result, uint64_t a2, int a3, uint64_t a4)
{
  objc_super v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ECGSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031CE8;
  if (!qword_26B031CE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B77E50()
{
  return sub_241B77F9C((unint64_t *)&qword_26B0320F0);
}

void sub_241B77E84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241B77F20(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B77F20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B77F68()
{
  return sub_241B77F9C((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241B77F9C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B77E84(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241B77F20((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241B77F20(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B78088(uint64_t a1)
{
  uint64_t result = sub_241B77F20(&qword_26B037E48, (void (*)(uint64_t))type metadata accessor for ECGSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_241B780E0(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = (uint64_t)v3;
  uint64_t v149 = a2;
  uint64_t v150 = a3;
  uint64_t v7 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v145 = (char *)v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ECGSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v9);
  BOOL v11 = (void *)((char *)v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v134 = (void *)sub_241CDA1A0();
  uint64_t v133 = *(v134 - 1);
  MEMORY[0x270FA5388](v134);
  uint64_t v135 = (char *)v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3591C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v148 = (char *)v130 - v14;
  uint64_t v15 = sub_241CD6D00();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v142 = (char *)v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3591C(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v147 = (char *)v130 - v18;
  sub_241A3591C(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v139 = (char *)v130 - v20;
  sub_241A3591C(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  Class v138 = (char *)v130 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  os_log_t v137 = (char *)v130 - v24;
  sub_241A3591C(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v146 = (char *)v130 - v26;
  uint64_t v27 = sub_241CD69B0();
  uint64_t v140 = *(void *)(v27 - 8);
  uint64_t v141 = v27;
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v136 = (char *)v130 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  int v144 = (char *)v130 - v31;
  MEMORY[0x270FA5388](v30);
  os_log_type_t v143 = (char *)v130 - v32;
  unint64_t v33 = self;
  unint64_t v34 = (void *)*v3;
  id v35 = objc_msgSend(v33, sel_sharedInstanceForHealthStore_, *v3);
  if (!v35)
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v36 = v35;
  id v37 = objc_msgSend(self, sel_electrocardiogramType);
  id v38 = objc_msgSend(v36, sel_displayTypeForObjectType_, v37);

  if (!v38)
  {
    sub_241A3A824();
    swift_allocError();
    swift_willThrow();
    return;
  }
  sub_241ADF698(a1);
  if (v4)
  {

    return;
  }
  uint64_t v40 = v39;
  if (!v39)
  {
LABEL_16:
    uint64_t v54 = sub_241CD7A10();
    uint64_t v55 = (uint64_t)v147;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v147, 1, 1, v54);
    uint64_t v56 = sub_241CD6810();
    uint64_t v57 = (uint64_t)v148;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v148, 1, 1, v56);
    uint64_t v58 = v149;
    swift_bridgeObjectRetain();
    uint64_t v59 = v145;
    sub_241B4A1A8(0, v55, v58, v57, v145);
    sub_241CD89A0();
    uint64_t v60 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v146, 1, 1, v60);
    id v61 = v38;
    uint64_t v62 = sub_241CD8990();
    sub_241A93604(0);
    uint64_t v64 = v150;
    sub_241B79718((uint64_t)v59, v150 + *(int *)(v63 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    *(void *)uint64_t v64 = v62;
    *(void *)(v64 + 8) = 0;
    *(unsigned char *)(v64 + 16) = 1;
    sub_241B796B8((uint64_t)v59, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  if (!objc_msgSend(v39, sel_hasAlgorithmVersionRawValue)
    || !objc_msgSend(v40, sel_hasClassificationRawValue)
    || !objc_msgSend(v40, sel_hasTimestampData))
  {

    goto LABEL_16;
  }
  uint64_t v132 = 0;
  id v41 = objc_msgSend(v40, sel_algorithmVersionRawValue);
  unint64_t v42 = (unint64_t)objc_msgSend(v40, sel_classificationRawValue);
  if ((v42 & 0x8000000000000000) != 0)
  {
LABEL_27:
    sub_241CDBF00();
    __break(1u);
    return;
  }
  unint64_t v43 = v42;
  uint64_t v44 = self;
  id v45 = objc_msgSend(v44, sel__localizedClassification_withActiveAlgorithmVersion_, v43, v41);
  if (v45)
  {
    unint64_t v46 = v45;
    uint64_t v47 = sub_241CDB0D0();
    uint64_t v49 = v48;

    unsigned int v50 = objc_msgSend(v40, sel_hasAverageHeartRate);
    id v131 = v40;
    uint64_t v145 = v49;
    uint64_t v135 = (char *)v47;
    if (!v50)
    {
      uint64_t v53 = 0;
      goto LABEL_20;
    }
    id v51 = objc_msgSend(v40, sel_averageHeartRate);
    if (v51)
    {
      int64_t v52 = v51;
      uint64_t v53 = (void *)sub_241CDB860();

LABEL_20:
      uint64_t v134 = v53;
      id v80 = objc_msgSend(v44, sel_hk_localizedAverageBPM_, v53);
      v130[1] = sub_241CDB0D0();

      uint64_t v81 = v5 + *(int *)(v9 + 20);
      uint64_t v82 = *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32);
      uint64_t v133 = v81;
      id v83 = *(void **)(v81 + v82);
      type metadata accessor for MostRecentSampleSnidgetStringBuilder();
      uint64_t inited = (char *)swift_initStackObject();
      *((void *)inited + 2) = v34;
      uint64_t v85 = self;
      id v86 = v83;
      id v87 = v34;
      id v88 = objc_msgSend(v85, sel_sharedInstanceForHealthStore_, v87);
      *((void *)inited + 4) = v88;
      if (!v83)
      {
        id v89 = v88;
        id v86 = objc_msgSend(v89, sel_createHKUnitPreferenceController);
      }
      *((void *)inited + 3) = v86;
      uint64_t v90 = v143;
      SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
      swift_bridgeObjectRelease();
      SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
      swift_bridgeObjectRelease();
      sub_241CD89A0();
      sub_241A3A9CC();
      uint64_t v92 = *(int *)(v91 + 48);
      uint64_t v145 = v38;
      objc_msgSend(v131, sel_timestampData);
      id v93 = (id)HKDecodeDateForValue();
      uint64_t v94 = v146;
      sub_241CD6CB0();

      v94[v92] = 1;
      uint64_t v95 = *MEMORY[0x263F43F18];
      uint64_t v96 = sub_241CD8610();
      uint64_t v97 = *(void *)(v96 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v97 + 104))(v94, v95, v96);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
      uint64_t v146 = (char *)sub_241CD8990();
      uint64_t v98 = v140;
      uint64_t v99 = v141;
      unint64_t v100 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56);
      v100(v137, 1, 1, v141);
      uint64_t v101 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
      uint64_t v135 = inited;
      v101(v136, v90, v99);
      uint64_t v102 = v138;
      v101(v138, v144, v99);
      v100(v102, 0, 1, v99);
      v151[0] = 0x5F74656764696E53;
      v151[1] = 0xE800000000000000;
      id v103 = *(id *)(v133 + 16);
      id v104 = objc_msgSend(v103, sel_description);
      sub_241CDB0D0();

      sub_241CDB180();
      swift_bridgeObjectRelease();
      unint64_t v105 = v139;
      sub_241CD8E50();
      swift_bridgeObjectRelease();
      uint64_t v106 = sub_241CD8E70();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v105, 0, 1, v106);
      sub_241CD8FF0();
      swift_allocObject();
      uint64_t v107 = sub_241CD8FE0();
      id v108 = v131;
      objc_msgSend(v131, sel_timestampData);
      id v109 = (id)HKDecodeDateForValue();
      sub_241CD6CB0();

      uint64_t v110 = (uint64_t)v147;
      sub_241CD79D0();
      uint64_t v111 = sub_241CD7A10();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v110, 0, 1, v111);
      uint64_t v112 = sub_241CD6810();
      uint64_t v113 = (uint64_t)v148;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v148, 1, 1, v112);
      sub_241A93604(0);
      uint64_t v116 = v149;
      uint64_t v115 = v150;
      char v117 = (unsigned char *)(v150 + *(int *)(v114 + 52));
      swift_bridgeObjectRetain();
      sub_241B4A1A8(1, v110, v116, v113, v117);
      swift_release();

      *(void *)uint64_t v115 = v146;
      *(void *)(v115 + 8) = v107;
      *(unsigned char *)(v115 + 16) = 1;
      unint64_t v118 = *(void (**)(char *, uint64_t))(v98 + 8);
      v118(v144, v99);
      v118(v143, v99);
      return;
    }
    goto LABEL_26;
  }
  uint64_t v65 = v135;
  sub_241CDA0F0();
  sub_241B79718(v5, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ECGSnidgetFeedItemModelProvider);
  uint64_t v66 = v40;
  uint64_t v67 = sub_241CDA190();
  os_log_type_t v68 = sub_241CDB650();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    int v144 = v66;
    uint64_t v70 = v69;
    os_log_type_t v143 = (char *)swift_slowAlloc();
    v151[0] = (uint64_t)v143;
    *(_DWORD *)uint64_t v70 = 136315394;
    uint64_t v71 = sub_241AE0308(*v11, *((unsigned __int8 *)v11 + *(int *)(v9 + 20) + 8));
    uint64_t v152 = sub_241A33FE4(v71, v72, v151);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B796B8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ECGSnidgetFeedItemModelProvider);
    *(_WORD *)(v70 + 12) = 2080;
    uint64_t v142 = (char *)(v70 + 14);
    uint64_t v73 = v144;
    id v74 = objc_msgSend(v73, sel_description);
    uint64_t v75 = sub_241CDB0D0();
    unint64_t v77 = v76;

    uint64_t v152 = sub_241A33FE4(v75, v77, v151);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v67, v68, "[%s]: unable to create primary string for ECG with currentValue=%s", (uint8_t *)v70, 0x16u);
    id v78 = v143;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v78, -1, -1);
    uint64_t v79 = v70;
    uint64_t v66 = v144;
    MEMORY[0x245637F20](v79, -1, -1);

    (*(void (**)(char *, void *))(v133 + 8))(v135, v134);
  }
  else
  {
    sub_241B796B8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ECGSnidgetFeedItemModelProvider);

    (*(void (**)(char *, void *))(v133 + 8))(v65, v134);
  }
  uint64_t v119 = sub_241CD7A10();
  uint64_t v120 = (uint64_t)v147;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v147, 1, 1, v119);
  uint64_t v121 = sub_241CD6810();
  uint64_t v122 = (uint64_t)v148;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v148, 1, 1, v121);
  uint64_t v123 = v149;
  swift_bridgeObjectRetain();
  uint64_t v124 = v145;
  sub_241B4A1A8(0, v120, v123, v122, v145);
  sub_241CD89A0();
  uint64_t v125 = sub_241CD8610();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v146, 1, 1, v125);
  id v126 = v38;
  uint64_t v127 = sub_241CD8990();
  sub_241A93604(0);
  uint64_t v129 = v150;
  sub_241B79718((uint64_t)v124, v150 + *(int *)(v128 + 52), type metadata accessor for SnidgetFeedItemMetadata);

  *(void *)uint64_t v129 = v127;
  *(void *)(v129 + 8) = 0;
  *(unsigned char *)(v129 + 16) = 1;
  sub_241B796B8((uint64_t)v124, type metadata accessor for SnidgetFeedItemMetadata);
}

uint64_t sub_241B791F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241B79718(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241B79230(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_241B79254(uint64_t a1)
{
  unint64_t v2 = sub_241B79834();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241B79290(uint64_t a1)
{
  unint64_t v2 = sub_241B79834();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241B792CC(void *a1)
{
  sub_241B797D8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A311E0(a1, a1[3]);
  sub_241B79834();
  sub_241CDC230();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_241B793DC()
{
  unint64_t result = qword_26B033400[0];
  if (!qword_26B033400[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B033400);
  }
  return result;
}

uint64_t sub_241B79430(uint64_t a1)
{
  sub_241B79780();
  uint64_t v3 = v2;
  sub_241CD8410();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

uint64_t sub_241B7949C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241B794B8()
{
  return sub_241B79558(&qword_26B0383A0, &qword_26B0383A8, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241B79508()
{
  return sub_241B79558(&qword_26B032DF0, &qword_26B032DF8, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241B79558(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B7959C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B7959C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241B77E84(255, &qword_26B032118, MEMORY[0x263F44150]);
    v9[0] = v6;
    v9[1] = &type metadata for ECGSnidgetVisualizationView;
    void v9[2] = sub_241A3F5B0();
    v9[3] = sub_241A9373C();
    void v9[4] = sub_241B77F9C((unint64_t *)&qword_26B0320F0);
    v9[5] = sub_241B77F9C((unint64_t *)&qword_26B0320E0);
    v9[6] = sub_241A93790();
    v9[7] = sub_241A937E4();
    unint64_t v7 = a3(a1, v9);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241B796B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241B79718(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_241B79780()
{
  if (!qword_268D42D68)
  {
    unint64_t v0 = sub_241CD8450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42D68);
    }
  }
}

void sub_241B797D8()
{
  if (!qword_268D42D70)
  {
    sub_241B79834();
    unint64_t v0 = sub_241CDC0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42D70);
    }
  }
}

unint64_t sub_241B79834()
{
  unint64_t result = qword_268D42D78;
  if (!qword_268D42D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42D78);
  }
  return result;
}

ValueMetadata *type metadata accessor for ECGSnidgetVisualizationView.ViewModel.CodingKeys()
{
  return &type metadata for ECGSnidgetVisualizationView.ViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for ECGSnidgetVisualizationView.ViewModel()
{
  return &type metadata for ECGSnidgetVisualizationView.ViewModel;
}

ValueMetadata *type metadata accessor for ECGSnidgetVisualizationView()
{
  return &type metadata for ECGSnidgetVisualizationView;
}

uint64_t sub_241B798B8()
{
  return MEMORY[0x263F1BA00];
}

unint64_t sub_241B798C8()
{
  unint64_t result = qword_268D42D80;
  if (!qword_268D42D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42D80);
  }
  return result;
}

unint64_t sub_241B79920()
{
  unint64_t result = qword_268D42D88;
  if (!qword_268D42D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42D88);
  }
  return result;
}

uint64_t sub_241B79974(void *a1, void *a2)
{
  uint64_t v12 = *a2;
  uint64_t v4 = sub_241CD96A0();
  MEMORY[0x270FA5388](v4 - 8);
  sub_241B7A5A4();
  uint64_t v11 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[2] = *(void *)((char *)a2 + OBJC_IVAR____TtC9Summaries42SharedSummaryTransactionChangesInputSignal_observer + 8);
  v10[1] = swift_getObjectType();
  sub_241CD9690();
  uint64_t v13 = a1;
  sub_241B7A68C();
  sub_241B7A78C(&qword_268D42DC0, (void (*)(uint64_t))sub_241B7A68C);
  sub_241B7A6E4();
  sub_241B7A78C(&qword_26B0368E8, (void (*)(uint64_t))sub_241B67E34);
  swift_bridgeObjectRetain();
  sub_241CD9710();
  uint64_t v13 = a2;
  sub_241B7A78C(&qword_268D42DD8, (void (*)(uint64_t))type metadata accessor for SharedSummaryTransactionChangesInputSignal);
  sub_241CD95F0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v11);
}

void sub_241B79C00(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*a1) {
    objc_msgSend(*(id *)(a2 + 24), sel_stopQuery_);
  }
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  id v9 = objc_allocWithZone(MEMORY[0x263F0A728]);
  uint64_t v20 = sub_241B7A880;
  uint64_t v21 = v8;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_241B79E04;
  uint64_t v19 = &unk_26F5C3E30;
  uint64_t v10 = _Block_copy(&aBlock);
  swift_retain();
  id v11 = objc_msgSend(v9, sel_initWithHandler_, v10);
  _Block_release(v10);
  swift_release();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  uint64_t v20 = sub_241B7A880;
  uint64_t v21 = v12;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_241B79E04;
  uint64_t v19 = &unk_26F5C3E80;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_setUpdateHandler_, v13);
  _Block_release(v13);
  uint64_t v14 = *a1;
  id v15 = v11;

  *a1 = v11;
  objc_msgSend(*(id *)(a2 + 24), sel_executeQuery_, v15);
}

uint64_t sub_241B79E04(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_241B67E34();
    uint64_t v5 = sub_241CDB2C0();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241B79EAC()
{
  swift_release();

  return swift_deallocClassInstance();
}

void sub_241B79EEC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  uint64_t v2 = (void **)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_241B7A828(v2);
  os_unfair_lock_unlock(v3);
}

void sub_241B79F50()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)v0 + 16);
  uint64_t v2 = (void **)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_241B7A7D4(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_241B79FB4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries42SharedSummaryTransactionChangesInputSignal_identifier;
  uint64_t v2 = sub_241CD96A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  sub_241A31190(v0 + OBJC_IVAR____TtC9Summaries42SharedSummaryTransactionChangesInputSignal_changesObserver);

  return swift_deallocClassInstance();
}

uint64_t sub_241B7A074()
{
  return type metadata accessor for SharedSummaryTransactionChangesInputSignal();
}

uint64_t type metadata accessor for SharedSummaryTransactionChangesInputSignal()
{
  uint64_t result = qword_268D42D90;
  if (!qword_268D42D90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B7A0C8()
{
  uint64_t result = sub_241CD96A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SharedSummaryTransactionChangesInputSignal.QueryObserver()
{
  return self;
}

void **initializeBufferWithCopyOfBuffer for SharedSummaryTransactionChangesInputSignal.QueryObserver.State(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for SharedSummaryTransactionChangesInputSignal.QueryObserver.State(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void *initializeWithTake for SharedSummaryTransactionChangesInputSignal.QueryObserver.State(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void **assignWithTake for SharedSummaryTransactionChangesInputSignal.QueryObserver.State(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for SharedSummaryTransactionChangesInputSignal.QueryObserver.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedSummaryTransactionChangesInputSignal.QueryObserver.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedSummaryTransactionChangesInputSignal.QueryObserver.State()
{
  return &type metadata for SharedSummaryTransactionChangesInputSignal.QueryObserver.State;
}

uint64_t sub_241B7A2F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries42SharedSummaryTransactionChangesInputSignal_identifier;
  uint64_t v4 = sub_241CD96A0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241B7A36C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_241B7A3A4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)(*v0 + OBJC_IVAR____TtC9Summaries42SharedSummaryTransactionChangesInputSignal_changesObserver);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_241A311E0(v2, v3);
  id v5 = *(void (**)(uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(v4 + 8);
  swift_retain();
  v5(sub_241B7A784, v1, v3, v4);

  return swift_release();
}

uint64_t sub_241B7A440()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC9Summaries42SharedSummaryTransactionChangesInputSignal_changesObserver);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_241A311E0(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t sub_241B7A4A8(uint64_t a1)
{
  uint64_t v2 = sub_241B7A78C(&qword_268D42DD8, (void (*)(uint64_t))type metadata accessor for SharedSummaryTransactionChangesInputSignal);

  return MEMORY[0x270F35EC8](a1, v2);
}

uint64_t sub_241B7A514()
{
  return sub_241B7A78C(&qword_268D42DA0, (void (*)(uint64_t))type metadata accessor for SharedSummaryTransactionChangesInputSignal);
}

uint64_t sub_241B7A55C()
{
  return sub_241B7A78C(&qword_268D42DA8, (void (*)(uint64_t))sub_241B7A5A4);
}

void sub_241B7A5A4()
{
  if (!qword_268D42DB0)
  {
    sub_241B7A68C();
    sub_241B7A78C(&qword_268D42DC0, (void (*)(uint64_t))sub_241B7A68C);
    sub_241B7A6E4();
    sub_241B7A78C(&qword_26B0368E8, (void (*)(uint64_t))sub_241B67E34);
    unint64_t v0 = sub_241CD9730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42DB0);
    }
  }
}

void sub_241B7A68C()
{
  if (!qword_268D42DB8)
  {
    sub_241B67E34();
    unint64_t v0 = sub_241CDB320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42DB8);
    }
  }
}

unint64_t sub_241B7A6E4()
{
  unint64_t result = qword_268D42DC8;
  if (!qword_268D42DC8)
  {
    sub_241B7A68C();
    sub_241B7A78C(&qword_268D42DD0, (void (*)(uint64_t))sub_241B67E34);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42DC8);
  }
  return result;
}

uint64_t sub_241B7A784(void *a1)
{
  return sub_241B79974(a1, v1);
}

uint64_t sub_241B7A78C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B7A7D4(void **a1)
{
  uint64_t v3 = *a1;
  if (*a1)
  {
    objc_msgSend(*(id *)(v1 + 24), sel_stopQuery_, v3);
  }
  *a1 = 0;
}

void sub_241B7A828(void **a1)
{
  sub_241B79C00(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_241B7A848()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241B7A884(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241B7A894()
{
  return swift_release();
}

uint64_t sub_241B7A89C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(v2 + 16);
  if (a2) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  v3(v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241B7A90C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (objc_msgSend(a1, sel_hasObjectTypeIdentifier)
    && (uint64_t v6 = self,
        id v7 = objc_msgSend(a1, sel_objectTypeIdentifier),
        id v8 = objc_msgSend(v6, sel__typeWithIdentifier_, v7),
        v7,
        v8))
  {
    char v9 = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();

    *(void *)a3 = v8;
    *(unsigned char *)(a3 + 8) = v9;
    uint64_t v10 = type metadata accessor for TrendNotificationModel();
    uint64_t v11 = a3 + *(int *)(v10 + 24);
    uint64_t v12 = sub_241CD7C10();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a2, v12);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v14 = a3;
    uint64_t v15 = 0;
    uint64_t v16 = v10;
  }
  else
  {

    uint64_t v17 = sub_241CD7C10();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a2, v17);
    uint64_t v18 = type metadata accessor for TrendNotificationModel();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v16 = v18;
    uint64_t v14 = a3;
    uint64_t v15 = 1;
  }

  return v13(v14, v15, 1, v16);
}

uint64_t sub_241B7AAC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241CD6D70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  uint64_t v9 = 0x203A646E657274;
  unint64_t v10 = 0xE700000000000000;
  id v6 = objc_msgSend(*v0, sel_identifier);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  v8[15] = *((unsigned char *)v1 + 8);
  sub_241CDB120();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  type metadata accessor for TrendNotificationModel();
  sub_241CD7BB0();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CD7C00();
  sub_241B7B744(qword_26B02E830, MEMORY[0x263F07508]);
  sub_241CDC0D0();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

BOOL sub_241B7AD2C(id *a1, id *a2)
{
  return (sub_241B7AD8C(a2, a1) & 1) == 0;
}

BOOL sub_241B7AD58(id *a1, id *a2)
{
  return (sub_241B7AD8C(a1, a2) & 1) == 0;
}

uint64_t sub_241B7AD78(id *a1, id *a2)
{
  return sub_241B7AD8C(a2, a1);
}

uint64_t sub_241B7AD8C(id *a1, id *a2)
{
  uint64_t v4 = sub_241CD6D70();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v43 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v43 - v7;
  unint64_t v46 = a1;
  id v9 = *a1;
  id v10 = objc_msgSend(*a1, sel_identifier);
  uint64_t v11 = sub_241CDB0D0();
  uint64_t v13 = v12;

  uint64_t v14 = a2;
  id v15 = *a2;
  id v16 = objc_msgSend(*a2, sel_identifier);
  uint64_t v17 = sub_241CDB0D0();
  uint64_t v19 = v18;

  if (v11 == v17 && v13 == v19)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v21 = sub_241CDC100();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      id v22 = objc_msgSend(v9, sel_identifier);
      uint64_t v23 = sub_241CDB0D0();
      uint64_t v25 = v24;

      id v26 = objc_msgSend(v15, sel_identifier);
      uint64_t v27 = sub_241CDB0D0();
      uint64_t v29 = v28;

      if (v23 != v27 || v25 != v29)
      {
        char v30 = sub_241CDC100();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v30 & 1;
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_9;
    }
  }
  int v31 = *((unsigned __int8 *)v46 + 8);
  int v32 = *((unsigned __int8 *)v14 + 8);
  uint64_t v33 = sub_241CD9FA0();
  uint64_t v35 = v34;
  if (v33 == sub_241CD9FA0() && v35 == v36)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v37 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v37) {
    goto LABEL_21;
  }
  if (v31 != 5)
  {
    if (v31 == 4 && v32 == 5)
    {
      char v30 = 1;
      return v30 & 1;
    }
LABEL_21:
    type metadata accessor for TrendNotificationModel();
    sub_241CD7C00();
    id v38 = v43;
    sub_241CD7C00();
    char v30 = MEMORY[0x245632080](v8, v38);
    unint64_t v39 = *(void (**)(char *, uint64_t))(v44 + 8);
    uint64_t v40 = v38;
    uint64_t v41 = v45;
    v39(v40, v45);
    v39(v8, v41);
    return v30 & 1;
  }
  if (v32 != 4) {
    goto LABEL_21;
  }
LABEL_9:
  char v30 = 0;
  return v30 & 1;
}

uint64_t type metadata accessor for TrendNotificationModel()
{
  uint64_t result = qword_268D42DE0;
  if (!qword_268D42DE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_241B7B12C(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[8] = *((unsigned char *)a2 + 8);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_241CD7C10();
    id v10 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    uint64_t v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_241B7B214(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_241CD7C10();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_241B7B28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_241CD7C10();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_241B7B328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_241CD7C10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_241B7B3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_241CD7C10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_241B7B444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD7C10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_241B7B4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B7B4EC);
}

uint64_t sub_241B7B4EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_241CD7C10();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241B7B59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B7B5B0);
}

void *sub_241B7B5B0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_241CD7C10();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_241B7B658()
{
  uint64_t result = sub_241CD7C10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241B7B6FC()
{
  return sub_241B7B744(&qword_268D42DF0, (void (*)(uint64_t))type metadata accessor for TrendNotificationModel);
}

uint64_t sub_241B7B744(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B7B78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrendNotificationModel();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v25 - v12;
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v25 - v14;
  sub_241A918D0();
  char v16 = sub_241CDBB60();
  sub_241B7B9D0(a1, (uint64_t)v15);
  sub_241B7B9D0(a2, (uint64_t)v13);
  if (v16)
  {
    uint64_t v17 = sub_241CD9FA0();
    uint64_t v19 = v18;
    if (v17 == sub_241CD9FA0() && v19 == v20)
    {
      swift_bridgeObjectRelease_n();
      sub_241B7BA34((uint64_t)v13);
      sub_241B7BA34((uint64_t)v15);
      sub_241B7B9D0(a1, (uint64_t)v10);
      sub_241B7B9D0(a2, (uint64_t)v7);
    }
    else
    {
      char v22 = sub_241CDC100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_241B7BA34((uint64_t)v13);
      sub_241B7BA34((uint64_t)v15);
      sub_241B7B9D0(a1, (uint64_t)v10);
      sub_241B7B9D0(a2, (uint64_t)v7);
      char v23 = 0;
      if ((v22 & 1) == 0) {
        goto LABEL_11;
      }
    }
    char v23 = MEMORY[0x245632F30](&v10[*(int *)(v4 + 24)], &v7[*(int *)(v4 + 24)]);
  }
  else
  {
    sub_241B7BA34((uint64_t)v13);
    sub_241B7BA34((uint64_t)v15);
    sub_241B7B9D0(a1, (uint64_t)v10);
    sub_241B7B9D0(a2, (uint64_t)v7);
    char v23 = 0;
  }
LABEL_11:
  sub_241B7BA34((uint64_t)v7);
  sub_241B7BA34((uint64_t)v10);
  return v23 & 1;
}

uint64_t sub_241B7B9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrendNotificationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241B7BA34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrendNotificationModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241B7BA90()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries37SummaryChartFeedItemGeneratorPipeline_context;
  uint64_t v2 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries37SummaryChartFeedItemGeneratorPipeline_domain;
  uint64_t v4 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_241B7BB7C()
{
  return type metadata accessor for SummaryChartFeedItemGeneratorPipeline();
}

uint64_t type metadata accessor for SummaryChartFeedItemGeneratorPipeline()
{
  uint64_t result = qword_26B033F98;
  if (!qword_26B033F98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B7BBD0()
{
  uint64_t result = sub_241CD7740();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD7690();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_241B7BCB4()
{
  return swift_retain();
}

uint64_t sub_241B7BCC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries37SummaryChartFeedItemGeneratorPipeline_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241B7BD38(void *a1)
{
  unint64_t v2 = v1;
  sub_241B80598();
  v22[0] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = (void *)sub_241CDB4D0();
  uint64_t v10 = sub_241CA1EFC(a1);
  uint64_t v12 = v11;

  v22[1] = sub_241B7D2DC(v10, v12);
  uint64_t v13 = v2[4];
  uint64_t v14 = swift_allocObject();
  long long v15 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v14 + 32) = v15;
  *(void *)(v14 + 48) = v2[4];
  *(void *)(v14 + 56) = v10;
  *(void *)(v14 + 64) = v12;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_241B80740;
  *(void *)(v16 + 24) = v14;
  id v17 = v8;
  swift_retain();
  swift_retain();
  id v18 = v13;
  swift_bridgeObjectRetain();
  sub_241CDA4F0();
  sub_241B8144C(0, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
  sub_241B80684(0, &qword_268D42358, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, MEMORY[0x263F8D8F0]);
  sub_241B80EC4(0, &qword_268D42350, &qword_268D42358, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, MEMORY[0x263EFDCF0]);
  sub_241A725E0();
  sub_241A72F60();
  sub_241CDA7C0();
  swift_release();
  swift_release();
  sub_241B80550(&qword_268D42E08, (void (*)(uint64_t))sub_241B80598);
  uint64_t v19 = v22[0];
  uint64_t v20 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_241B7C030@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_241B80684(0, &qword_26B0354A8, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v62 - v5;
  uint64_t v7 = sub_241CD6D00();
  uint64_t v67 = *(void *)(v7 - 8);
  uint64_t v68 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v66 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = type metadata accessor for SummaryAlertContentState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v65 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  long long v15 = (char *)&v62 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  id v18 = (char *)&v62 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  char v21 = (char *)&v62 - v20;
  MEMORY[0x270FA5388](v19);
  char v23 = (uint64_t *)((char *)&v62 - v22);
  unint64_t v77 = a1;
  uint64_t v24 = sub_241B8092C(a1);
  if (!v24) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v10 + 56))(a2, 1, 1, v9);
  }
  uint64_t v63 = v6;
  uint64_t v64 = a2;
  uint64_t v72 = v10;
  uint64_t v25 = *(void *)(v83 + 16);
  id v69 = v24;
  id v26 = objc_msgSend(v24, sel_value);
  uint64_t v27 = sub_241CD6AE0();
  unint64_t v29 = v28;

  sub_241B80550(&qword_268D42E40, (void (*)(uint64_t))type metadata accessor for SummaryAlertContentState);
  uint64_t v81 = v25;
  uint64_t v30 = v80;
  sub_241CD66F0();
  int v31 = v23;
  uint64_t v32 = v30;
  if (v30)
  {

    return sub_241A37374(v27, v29);
  }
  else
  {
    sub_241A37374(v27, v29);
    unint64_t v34 = v77;
    if (v77 >> 62) {
      goto LABEL_30;
    }
    uint64_t v35 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_7:
    uint64_t v36 = v81;
    uint64_t v80 = v32;
    unint64_t v83 = v9;
    uint64_t v75 = v31;
    uint64_t v32 = 0;
    if (v35)
    {
      int v82 = 0;
      unint64_t v9 = 0;
      uint64_t v73 = v35;
      unint64_t v74 = v34 & 0xC000000000000001;
      unint64_t v70 = v34 + 32;
      uint64_t v71 = v34 & 0xFFFFFFFFFFFFFF8;
      while (1)
      {
        if (v74)
        {
          id v37 = (id)MEMORY[0x245637160](v9, v34);
          BOOL v38 = __OFADD__(v9++, 1);
          if (v38) {
            goto LABEL_28;
          }
        }
        else
        {
          if (v9 >= *(void *)(v71 + 16)) {
            goto LABEL_29;
          }
          id v37 = *(id *)(v70 + 8 * v9);
          BOOL v38 = __OFADD__(v9++, 1);
          if (v38)
          {
LABEL_28:
            __break(1u);
LABEL_29:
            __break(1u);
LABEL_30:
            swift_bridgeObjectRetain();
            uint64_t v35 = sub_241CDBF50();
            goto LABEL_7;
          }
        }
        unint64_t v79 = v9;
        unint64_t v39 = v37;
        id v40 = objc_msgSend(v37, sel_deviceContext);
        unsigned int v41 = objc_msgSend(v40, sel_representsLocalDevice);

        id v78 = v39;
        id v42 = objc_msgSend(v39, sel_storageEntries);
        sub_241A313AC(0, &qword_268D42E48);
        unint64_t v43 = sub_241CDB2C0();

        swift_retain();
        uint64_t v44 = v80;
        unint64_t v45 = sub_241B800BC(v43, v36);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v46 = *(void *)(v45 + 16);
        uint64_t v80 = v44;
        if (v46)
        {
          uint64_t v47 = *(unsigned __int8 *)(v72 + 80);
          unint64_t v76 = v45;
          uint64_t v48 = v45 + ((v47 + 32) & ~v47);
          uint64_t v49 = *(void *)(v72 + 72);
          do
          {
            sub_241B80488(v48, (uint64_t)v21);
            sub_241B80488((uint64_t)v21, (uint64_t)v18);
            if (v41)
            {
              int v50 = v18[*(int *)(v83 + 28)];
              sub_241B816B8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState);
              v82 |= v50;
              uint64_t v36 = v81;
            }
            else
            {
              sub_241B816B8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState);
            }
            sub_241B804EC((uint64_t)v21, (uint64_t)v15);
            if (v32) {
              uint64_t v32 = 1;
            }
            else {
              uint64_t v32 = v15[*(int *)(v83 + 32)];
            }
            sub_241B816B8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState);
            v48 += v49;
            --v46;
          }
          while (v46);
        }

        swift_bridgeObjectRelease();
        unint64_t v9 = v79;
        unint64_t v34 = v77;
        int v31 = v75;
        if (v79 == v73) {
          goto LABEL_27;
        }
      }
    }
    int v82 = 0;
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v51 = v31[1];
    uint64_t v81 = *v31;
    int64_t v52 = (int *)v83;
    uint64_t v53 = v66;
    uint64_t v54 = v67;
    uint64_t v55 = v68;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v66, (char *)v31 + *(int *)(v83 + 20), v68);
    uint64_t v56 = (uint64_t)v63;
    sub_241B81A54((uint64_t)v31 + v52[6], (uint64_t)v63, &qword_26B0354A8, MEMORY[0x263F07508]);
    uint64_t v57 = (uint64_t *)v65;
    uint64_t v58 = (uint64_t)&v65[v52[6]];
    uint64_t v59 = sub_241CD6D70();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 1, 1, v59);
    *uint64_t v57 = v81;
    v57[1] = v51;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))((char *)v57 + v52[5], v53, v55);
    swift_bridgeObjectRetain();
    sub_241A751B0(v56, v58);
    *((unsigned char *)v57 + v52[7]) = v82 & 1;
    *((unsigned char *)v57 + v52[8]) = v32 & 1;
    uint64_t v60 = (uint64_t)v57;
    uint64_t v61 = v64;
    sub_241B804EC(v60, v64);

    sub_241B816B8((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v72 + 56))(v61, 0, 1, v52);
  }
}

uint64_t sub_241B7C77C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SummaryAlertContentState();
  sub_241B80550(&qword_268D42DF8, (void (*)(uint64_t))type metadata accessor for SummaryAlertContentState);
  uint64_t result = sub_241CD6720();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_241B7C814@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v6 = a1[1];
  sub_241A3731C(*a1, v6);
  uint64_t v4 = sub_241CDB940();
  uint64_t result = sub_241A37374(v3, v6);
  *a2 = v4;
  return result;
}

uint64_t sub_241B7C894()
{
  uint64_t v1 = v0;
  sub_241B8074C();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B81790();
  uint64_t v36 = v5;
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v31 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v34 = sub_241B81790;
  uint64_t v33 = sub_241B81844;
  sub_241B81114(0, &qword_268D42EA8, (void (*)(uint64_t))sub_241B81790, (void (*)(void))sub_241B81844);
  uint64_t v35 = v7;
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v32 = (char *)&v26 - v8;
  unint64_t v9 = *(void **)(v0 + 32);
  uint64_t v39 = sub_241CDB950();
  uint64_t v10 = swift_allocObject();
  long long v11 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v10 + 32) = v11;
  *(void *)(v10 + 48) = *(void *)(v1 + 32);
  uint64_t v12 = *(void **)v1;
  sub_241B80828();
  uint64_t v26 = v13;
  sub_241B80684(0, &qword_268D42358, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, MEMORY[0x263F8D8F0]);
  sub_241B80550(&qword_268D42E30, (void (*)(uint64_t))sub_241B80828);
  id v28 = v12;
  swift_retain();
  swift_retain();
  id v27 = v9;
  sub_241CDA790();
  swift_release();
  swift_release();
  sub_241B80550(&qword_268D42E38, (void (*)(uint64_t))sub_241B8074C);
  uint64_t v14 = v30;
  uint64_t v15 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v14);
  uint64_t v39 = v15;
  sub_241B80EC4(0, &qword_268D42350, &qword_268D42358, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, MEMORY[0x263EFDCF0]);
  type metadata accessor for SummaryAlertContentState();
  sub_241A72F60();
  uint64_t v16 = v31;
  sub_241CDA6E0();
  swift_release();
  uint64_t v17 = swift_allocObject();
  long long v18 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v17 + 32) = v18;
  *(void *)(v17 + 48) = *(void *)(v1 + 32);
  id v19 = v28;
  swift_retain();
  swift_retain();
  id v20 = v27;
  sub_241CDA4F0();
  sub_241B8144C(0, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
  sub_241B81844();
  sub_241A725E0();
  char v21 = v32;
  uint64_t v22 = v36;
  sub_241CDA7C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v22);
  sub_241B813A0(&qword_268D42EB8, &qword_268D42EA8, (void (*)(uint64_t))v34, (void (*)(void))v33);
  uint64_t v23 = v35;
  uint64_t v24 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v23);
  return v24;
}

uint64_t sub_241B7CDE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_241B81A54(a1, a2, &qword_268D42358, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState);
  uint64_t v3 = type metadata accessor for SummaryAlertContentState();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a2, 1, v3);
  if (!result) {
    *(unsigned char *)(a2 + *(int *)(v3 + 32)) = 1;
  }
  return result;
}

uint64_t sub_241B7CE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for SummaryAlertContentState();
  uint64_t v6 = *(void *)(v5 - 8);
  v30[1] = v5;
  uint64_t v31 = v6;
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  sub_241B80684(0, &qword_268D423B0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, MEMORY[0x263EFDDF8]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v30 - v11;
  sub_241B8144C(0, &qword_268D423B8, MEMORY[0x263F06F78], MEMORY[0x263EFDEA0]);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  uint64_t v33 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v30 - v15;
  sub_241A74FE0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v34 = v17;
  uint64_t v35 = v18;
  MEMORY[0x270FA5388](v17);
  id v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v21 = *(void **)(a2 + 32);
  sub_241B80488(a1, (uint64_t)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  id v22 = v21;
  sub_241CDA5D0();
  sub_241CDA5B0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_241B80488(a1, (uint64_t)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v23 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v22;
  sub_241B804EC((uint64_t)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23);
  id v25 = v22;
  sub_241CDA4F0();
  sub_241B8144C(0, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
  sub_241B8040C();
  sub_241A725E0();
  uint64_t v26 = v32;
  sub_241CDA7C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v26);
  sub_241B80550(&qword_268D423D8, (void (*)(uint64_t))sub_241A74FE0);
  uint64_t v27 = v34;
  uint64_t v28 = sub_241CDA6D0();

  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v20, v27);
  uint64_t *v36 = v28;
  return result;
}

uint64_t sub_241B7D2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_241B80DD8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  uint64_t v31 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v29 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  id v10 = objc_allocWithZone(MEMORY[0x263F0A470]);
  id v11 = v9;
  uint64_t v12 = (void *)sub_241CDB090();
  id v13 = objc_msgSend(v10, sel_initWithCategory_domainName_healthStore_, 1, v12, v11);

  uint64_t v32 = sub_241CDB750();
  id v14 = objc_allocWithZone(MEMORY[0x263F0A470]);
  id v15 = v11;
  uint64_t v16 = (void *)sub_241CDB090();
  id v28 = objc_msgSend(v14, sel_initWithCategory_domainName_healthStore_, 1, v16, v15);

  uint64_t v17 = sub_241CDB750();
  uint64_t v33 = sub_241CDB750();
  uint64_t v18 = v3[4];
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  *(void *)(v19 + 32) = v32;
  *(void *)(v19 + 40) = v17;
  long long v20 = *((_OWORD *)v3 + 1);
  *(_OWORD *)(v19 + 48) = *(_OWORD *)v3;
  *(_OWORD *)(v19 + 64) = v20;
  *(void *)(v19 + 80) = v3[4];
  *(void *)(v19 + 88) = v13;
  id v21 = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v22 = v18;
  id v23 = v13;
  sub_241CDA4F0();
  sub_241B80EC4(0, (unint64_t *)&qword_26B032858, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263EFDE20]);
  sub_241B8144C(0, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
  sub_241B80F58();
  sub_241A725E0();
  uint64_t v24 = v29;
  sub_241CDA7C0();
  swift_release();
  swift_release();
  sub_241B80550(&qword_268D42E58, (void (*)(uint64_t))sub_241B80DD8);
  uint64_t v25 = v30;
  uint64_t v26 = sub_241CDA6D0();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v25);
  return v26;
}

uint64_t sub_241B7D68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v91 = a7;
  uint64_t v87 = a6;
  uint64_t v80 = a5;
  uint64_t v79 = a4;
  unint64_t v101 = a3;
  uint64_t v102 = a8;
  uint64_t v98 = a2;
  sub_241B8106C();
  uint64_t v89 = *(void *)(v9 - 8);
  uint64_t v90 = v9;
  MEMORY[0x270FA5388](v9);
  id v88 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B81114(0, &qword_268D42E68, (void (*)(uint64_t))sub_241B8106C, (void (*)(void))sub_241B811D8);
  Class isa = v11[-1].isa;
  os_log_t v95 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v92 = (char *)&v78 - v12;
  sub_241B8120C();
  uint64_t v96 = *(void *)(v13 - 8);
  uint64_t v97 = v13;
  MEMORY[0x270FA5388](v13);
  id v93 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B813F0();
  uint64_t v86 = v15;
  uint64_t v84 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  int v82 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B8144C(0, &qword_268D42388, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDEA0]);
  uint64_t v85 = v17;
  uint64_t v83 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v81 = (char *)&v78 - v18;
  uint64_t v19 = sub_241CDA1A0();
  uint64_t v99 = *(void *)(v19 - 8);
  uint64_t v100 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  id v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v78 - v23;
  uint64_t v25 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241B80684(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v26 - 8);
  id v28 = (char *)&v78 - v27;
  uint64_t v29 = sub_241CD6D00();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v78 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v78 - v34;
  sub_241B81A54(a1, (uint64_t)v28, &qword_26B0385B8, v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    sub_241B81720((uint64_t)v28, &qword_26B0385B8, MEMORY[0x263F07490]);
    sub_241CDA140();
    unint64_t v36 = v101;
    swift_bridgeObjectRetain_n();
    uint64_t v37 = sub_241CDA190();
    os_log_type_t v38 = sub_241CDB670();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      v104[0] = v40;
      *(_DWORD *)uint64_t v39 = 136315394;
      uint64_t v103 = sub_241A33FE4(0xD00000000000001FLL, 0x8000000241CF0240, v104);
      sub_241CDBBF0();
      *(_WORD *)(v39 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v41 = v98;
      uint64_t v103 = sub_241A33FE4(v98, v36, v104);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v37, v38, "%s Migrating %s to device context sync", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v40, -1, -1);
      MEMORY[0x245637F20](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v99 + 8))(v24, v100);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v24, v100);
      uint64_t v41 = v98;
    }
    uint64_t v103 = v80;
    v104[0] = v79;
    sub_241B80EC4(0, (unint64_t *)&qword_26B032858, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263EFDE20]);
    sub_241B80F58();
    int64_t v52 = v88;
    sub_241CDA700();
    uint64_t v53 = v87;
    uint64_t v54 = *(void **)v87;
    uint64_t v55 = *(void **)(v87 + 32);
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v41;
    *(void *)(v56 + 24) = v36;
    long long v57 = *(_OWORD *)(v53 + 16);
    *(_OWORD *)(v56 + 32) = *(_OWORD *)v53;
    *(_OWORD *)(v56 + 48) = v57;
    *(void *)(v56 + 64) = *(void *)(v53 + 32);
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = sub_241B81514;
    *(void *)(v58 + 24) = v56;
    swift_bridgeObjectRetain();
    id v59 = v54;
    swift_retain();
    swift_retain();
    id v60 = v55;
    sub_241CDA4F0();
    uint64_t v61 = MEMORY[0x263F8EE60] + 8;
    sub_241B8144C(0, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
    sub_241B811D8();
    sub_241A725E0();
    uint64_t v62 = v92;
    uint64_t v63 = v90;
    sub_241CDA7C0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v52, v63);
    uint64_t v64 = (void *)swift_allocObject();
    v64[2] = v41;
    v64[3] = v36;
    uint64_t v65 = v91;
    v64[4] = v91;
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = sub_241B815E8;
    *(void *)(v66 + 24) = v64;
    swift_bridgeObjectRetain();
    id v67 = v65;
    sub_241CDA4F0();
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
    sub_241B8144C(0, &qword_268D42E80, v61, MEMORY[0x263EFDE20]);
    sub_241B813A0(&qword_268D42E88, &qword_268D42E68, (void (*)(uint64_t))sub_241B8106C, (void (*)(void))sub_241B811D8);
    sub_241B8134C(&qword_26B02EAB0, &qword_268D42E80, v68);
    id v69 = v93;
    os_log_t v70 = v95;
    sub_241CDA7C0();
    swift_release();
    (*((void (**)(char *, os_log_t))isa + 1))(v62, v70);
    sub_241B80550(&qword_268D42E90, (void (*)(uint64_t))sub_241B8120C);
    uint64_t v71 = v97;
    uint64_t v72 = sub_241CDA6D0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v69, v71);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v35, v28, v29);
    sub_241CDA140();
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v33, v35, v29);
    unint64_t v42 = v101;
    swift_bridgeObjectRetain_n();
    unint64_t v43 = sub_241CDA190();
    os_log_type_t v44 = sub_241CDB630();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v97 = swift_slowAlloc();
      v104[0] = v97;
      *(_DWORD *)uint64_t v46 = 136315650;
      LODWORD(v96) = v45;
      uint64_t v103 = sub_241A33FE4(0xD00000000000001FLL, 0x8000000241CF0240, v104);
      os_log_t v95 = v43;
      sub_241CDBBF0();
      *(_WORD *)(v46 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v103 = sub_241A33FE4(v98, v42, v104);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 22) = 2080;
      sub_241B80550(&qword_26B02E8E0, MEMORY[0x263F07490]);
      uint64_t v47 = sub_241CDC0D0();
      uint64_t v103 = sub_241A33FE4(v47, v48, v104);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      uint64_t v49 = *(void (**)(char *, uint64_t))(v30 + 8);
      v49(v33, v29);
      os_log_t v50 = v95;
      _os_log_impl(&dword_241A23000, v95, (os_log_type_t)v96, "%s Migration already completed for %s at %s", (uint8_t *)v46, 0x20u);
      uint64_t v51 = v97;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v51, -1, -1);
      MEMORY[0x245637F20](v46, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v49 = *(void (**)(char *, uint64_t))(v30 + 8);
      v49(v33, v29);
    }
    (*(void (**)(char *, uint64_t))(v99 + 8))(v22, v100);
    unint64_t v74 = v82;
    sub_241CDA5D0();
    sub_241A3DA64();
    uint64_t v75 = v81;
    uint64_t v76 = v86;
    sub_241CDA590();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v74, v76);
    sub_241B8134C(&qword_268D423A8, &qword_268D42388, MEMORY[0x263EFDEA0]);
    uint64_t v77 = v85;
    uint64_t v72 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v75, v77);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v49)(v35, v29);
  }
  *uint64_t v102 = v72;
  return result;
}

uint64_t sub_241B7E45C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v114 = a5;
  unint64_t v124 = a4;
  uint64_t v122 = a3;
  uint64_t v98 = a2;
  sub_241B813F0();
  uint64_t v107 = v6;
  unint64_t v105 = *(void (**)(char *, char *, uint64_t))(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v102 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDEA0];
  sub_241B8144C(0, &qword_268D42388, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDEA0]);
  uint64_t v106 = v9;
  uint64_t v104 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v101 = (char *)&v92 - v10;
  sub_241B80684(0, &qword_268D423B0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, MEMORY[0x263EFDDF8]);
  uint64_t v112 = *(void *)(v11 - 8);
  uint64_t v113 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v110 = (char *)&v92 - v12;
  sub_241B8144C(0, &qword_268D423B8, MEMORY[0x263F06F78], v8);
  uint64_t v118 = v13;
  uint64_t v116 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v115 = (char *)&v92 - v14;
  sub_241A74FE0();
  uint64_t v119 = *(void *)(v15 - 8);
  uint64_t v120 = v15;
  MEMORY[0x270FA5388](v15);
  char v117 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for SummaryAlertContentState();
  uint64_t v108 = *(void *)(v103 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v103);
  uint64_t v97 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v123 = (uint64_t)&v92 - v19;
  sub_241B81624();
  uint64_t v94 = v20;
  MEMORY[0x270FA5388](v20);
  id v22 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B80684(0, &qword_26B0354A8, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v99 = (uint64_t)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  id v28 = (char *)&v92 - v27;
  uint64_t v96 = (void (*)(char *, char *, uint64_t))sub_241CDA1A0();
  uint64_t v95 = *((void *)v96 - 1);
  MEMORY[0x270FA5388](v96);
  uint64_t v30 = (char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241B80684(0, &qword_26B0385B8, MEMORY[0x263F07490], v23);
  uint64_t v33 = MEMORY[0x270FA5388](v32 - 8);
  uint64_t v93 = (uint64_t)&v92 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v92 - v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v92 - v38;
  uint64_t v40 = sub_241CD6D00();
  uint64_t v41 = MEMORY[0x270FA5388](v40);
  uint64_t v121 = (char *)&v92 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  os_log_type_t v44 = (char *)&v92 - v43;
  uint64_t v46 = v45;
  sub_241B81A54(a1, (uint64_t)v39, &qword_26B0385B8, v31);
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  if (v47((uint64_t)v39, 1, v40) != 1)
  {
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
    uint64_t v106 = v46 + 32;
    unint64_t v105 = v53;
    v53(v44, v39, v40);
    uint64_t v54 = sub_241CD6D70();
    uint64_t v55 = *(void *)(v54 - 8);
    uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
    uint64_t v111 = v28;
    uint64_t v104 = v54;
    uint64_t v102 = v56;
    unint64_t v101 = (char *)(v55 + 56);
    ((void (*)(char *, uint64_t, uint64_t))v56)(v28, 1, 1);
    long long v57 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    uint64_t v100 = v44;
    uint64_t v96 = v57;
    v57(v37, v44, v40);
    uint64_t v107 = v46;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v37, 0, 1, v40);
    uint64_t v58 = (uint64_t)&v22[*(int *)(v94 + 48)];
    id v59 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_241B81A54((uint64_t)v98, (uint64_t)v22, &qword_26B0385B8, MEMORY[0x263F07490]);
    sub_241B81A54((uint64_t)v37, v58, &qword_26B0385B8, v59);
    if (v47((uint64_t)v22, 1, v40) == 1)
    {
      sub_241B81720((uint64_t)v37, &qword_26B0385B8, MEMORY[0x263F07490]);
      int v60 = v47(v58, 1, v40);
      uint64_t v61 = v100;
      if (v60 == 1)
      {
        sub_241B81720((uint64_t)v22, &qword_26B0385B8, MEMORY[0x263F07490]);
        LODWORD(v95) = 1;
        uint64_t v62 = (uint64_t)v111;
LABEL_13:
        uint64_t v72 = v121;
        v96(v121, v61, v40);
        uint64_t v98 = (uint64_t (*)(uint64_t))MEMORY[0x263F07508];
        uint64_t v73 = v99;
        sub_241B81A54(v62, v99, &qword_26B0354A8, MEMORY[0x263F07508]);
        unint64_t v74 = (int *)v103;
        uint64_t v75 = v97;
        uint64_t v76 = (uint64_t)&v97[*(int *)(v103 + 24)];
        v102(v76, 1, 1, v104);
        unint64_t v77 = v124;
        *(void *)uint64_t v75 = v122;
        *((void *)v75 + 1) = v77;
        v105(&v75[v74[5]], v72, v40);
        swift_bridgeObjectRetain();
        sub_241A751B0(v73, v76);
        v75[v74[7]] = 1;
        v75[v74[8]] = v95 & 1;
        uint64_t v78 = v123;
        sub_241B804EC((uint64_t)v75, v123);
        unint64_t v80 = *(void *)(v114 + 24);
        uint64_t v79 = *(void **)(v114 + 32);
        sub_241B80488(v78, (uint64_t)v75);
        unint64_t v124 = v80;
        swift_retain();
        id v81 = v79;
        int v82 = v110;
        sub_241CDA5D0();
        uint64_t v83 = v115;
        uint64_t v84 = v113;
        sub_241CDA5B0();
        (*(void (**)(char *, uint64_t))(v112 + 8))(v82, v84);
        sub_241B80488(v78, (uint64_t)v75);
        unint64_t v85 = (*(unsigned __int8 *)(v108 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
        uint64_t v86 = swift_allocObject();
        *(void *)(v86 + 16) = v81;
        sub_241B804EC((uint64_t)v75, v86 + v85);
        id v87 = v81;
        sub_241CDA4F0();
        sub_241B8144C(0, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
        sub_241B8040C();
        sub_241A725E0();
        uint64_t v89 = v117;
        uint64_t v88 = v118;
        sub_241CDA7C0();
        swift_release();
        (*(void (**)(char *, uint64_t))(v116 + 8))(v83, v88);
        sub_241B80550(&qword_268D423D8, (void (*)(uint64_t))sub_241A74FE0);
        uint64_t v90 = v120;
        uint64_t v67 = sub_241CDA6D0();

        swift_release();
        (*(void (**)(char *, uint64_t))(v119 + 8))(v89, v90);
        sub_241B816B8(v123, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState);
        sub_241B81720((uint64_t)v111, &qword_26B0354A8, v98);
        (*(void (**)(char *, uint64_t))(v107 + 8))(v100, v40);
        return v67;
      }
    }
    else
    {
      uint64_t v68 = v93;
      sub_241B81A54((uint64_t)v22, v93, &qword_26B0385B8, MEMORY[0x263F07490]);
      if (v47(v58, 1, v40) != 1)
      {
        id v69 = v121;
        v105(v121, (char *)v58, v40);
        sub_241B80550((unint64_t *)&qword_26B02E8D8, MEMORY[0x263F07490]);
        LODWORD(v95) = sub_241CDB050();
        os_log_t v70 = *(void (**)(char *, uint64_t))(v107 + 8);
        v70(v69, v40);
        uint64_t v71 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
        sub_241B81720((uint64_t)v37, &qword_26B0385B8, MEMORY[0x263F07490]);
        v70((char *)v68, v40);
        sub_241B81720((uint64_t)v22, &qword_26B0385B8, v71);
        uint64_t v62 = (uint64_t)v111;
        uint64_t v61 = v100;
        goto LABEL_13;
      }
      sub_241B81720((uint64_t)v37, &qword_26B0385B8, MEMORY[0x263F07490]);
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v68, v40);
      uint64_t v61 = v100;
    }
    sub_241B816B8((uint64_t)v22, (uint64_t (*)(void))sub_241B81624);
    LODWORD(v95) = 0;
    uint64_t v62 = (uint64_t)v111;
    goto LABEL_13;
  }
  sub_241B81720((uint64_t)v39, &qword_26B0385B8, MEMORY[0x263F07490]);
  sub_241CDA140();
  unint64_t v48 = v124;
  swift_bridgeObjectRetain_n();
  uint64_t v49 = sub_241CDA190();
  os_log_type_t v50 = sub_241CDB670();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v126 = v52;
    *(_DWORD *)uint64_t v51 = 136315394;
    uint64_t v125 = sub_241A33FE4(0xD00000000000001FLL, 0x8000000241CF0240, &v126);
    sub_241CDBBF0();
    *(_WORD *)(v51 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v125 = sub_241A33FE4(v122, v48, &v126);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_241A23000, v49, v50, "%s No pre-existing content state for %s", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v52, -1, -1);
    MEMORY[0x245637F20](v51, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v95 + 8))(v30, v96);
  uint64_t v63 = (char *)v102;
  sub_241CDA5D0();
  sub_241A3DA64();
  uint64_t v64 = v101;
  uint64_t v65 = v107;
  sub_241CDA590();
  (*((void (**)(char *, uint64_t))v105 + 1))(v63, v65);
  sub_241B8134C(&qword_268D423A8, &qword_268D42388, MEMORY[0x263EFDEA0]);
  uint64_t v66 = v106;
  uint64_t v67 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v64, v66);
  return v67;
}

uint64_t sub_241B7F4C4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_241B80684(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA140();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_241CDA190();
  os_log_type_t v14 = sub_241CDB670();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = v9;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = a1;
    uint64_t v18 = v17;
    uint64_t v27 = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v25 = a3;
    uint64_t v26 = sub_241A33FE4(0xD00000000000001FLL, 0x8000000241CF0240, &v27);
    sub_241CDBBF0();
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_241A33FE4(v23, a2, &v27);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_241A23000, v13, v14, "%s Marking migration as complete for %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v18, -1, -1);
    MEMORY[0x245637F20](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_241CD6CF0();
  uint64_t v19 = sub_241CD6D00();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 0, 1, v19);
  uint64_t v20 = sub_241CDB760();
  sub_241B81720((uint64_t)v8, &qword_26B0385B8, MEMORY[0x263F07490]);
  return v20;
}

uint64_t sub_241B7F838(uint64_t a1)
{
  sub_241B8074C();
  v15[0] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(a1 + 32);
  v15[1] = sub_241CDB950();
  uint64_t v7 = swift_allocObject();
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v8;
  *(void *)(v7 + 48) = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)a1;
  sub_241B80828();
  sub_241B80684(0, &qword_268D42358, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, MEMORY[0x263F8D8F0]);
  sub_241B80550(&qword_268D42E30, (void (*)(uint64_t))sub_241B80828);
  id v10 = v9;
  swift_retain();
  swift_retain();
  id v11 = v6;
  sub_241CDA790();
  swift_release();
  swift_release();
  sub_241B80550(&qword_268D42E38, (void (*)(uint64_t))sub_241B8074C);
  uint64_t v12 = v15[0];
  uint64_t v13 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v12);
  return v13;
}

uint64_t sub_241B7FA84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_241CDA1A0();
  uint64_t v27 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SummaryAlertContentState();
  id v9 = objc_msgSend(a1, sel_value);
  uint64_t v10 = sub_241CD6AE0();
  unint64_t v12 = v11;

  sub_241B80550(&qword_268D42E40, (void (*)(uint64_t))type metadata accessor for SummaryAlertContentState);
  sub_241CD66F0();
  if (v2)
  {
    sub_241A37374(v10, v12);
    sub_241CDA140();
    id v13 = v2;
    id v14 = v2;
    uint64_t v15 = sub_241CDA190();
    os_log_type_t v16 = sub_241CDB650();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v29 = v24;
      *(_DWORD *)uint64_t v17 = 136315906;
      uint64_t v28 = sub_241A33FE4(0xD00000000000001FLL, 0x8000000241CF0240, &v29);
      uint64_t v25 = v5;
      sub_241CDBBF0();
      uint64_t v26 = a2;
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v28 = sub_241A33FE4(0xD000000000000017, 0x8000000241CE1CE0, &v29);
      sub_241CDBBF0();
      *(_WORD *)(v17 + 22) = 2080;
      uint64_t v28 = sub_241A33FE4(0xD000000000000018, 0x8000000241CE1D00, &v29);
      sub_241CDBBF0();
      *(_WORD *)(v17 + 32) = 2082;
      uint64_t v28 = (uint64_t)v2;
      id v18 = v2;
      sub_241A3DA64();
      uint64_t v19 = sub_241CDB130();
      uint64_t v28 = sub_241A33FE4(v19, v20, &v29);
      a2 = v26;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241A23000, v15, v16, "%s %s %s Error: %{public}s", (uint8_t *)v17, 0x2Au);
      uint64_t v21 = v24;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v21, -1, -1);
      MEMORY[0x245637F20](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v25);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
  else
  {
    sub_241A37374(v10, v12);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 0, 1, v8);
  }
}

uint64_t sub_241B7FEDC(unint64_t a1, unint64_t a2, unint64_t *a3)
{
  sub_241A313AC(0, a3);
  if (a2 >> 62)
  {
    uint64_t v5 = sub_241CDBF60();
    self;
    if (swift_dynamicCastObjCClass()) {
      return v5;
    }
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      self;
      if (!swift_dynamicCastObjCClass()) {
        goto LABEL_10;
      }
      return v5;
    }
    __break(1u);
  }
LABEL_10:
  sub_241CDBE00();
  sub_241CDB180();
  sub_241CDC270();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_241CDC270();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  uint64_t result = sub_241CDBF20();
  __break(1u);
  return result;
}

unint64_t sub_241B800BC(unint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  sub_241B80684(0, &qword_268D42358, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v25 = type metadata accessor for SummaryAlertContentState();
  uint64_t v21 = *(void *)(v25 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v25);
  uint64_t v24 = (uint64_t)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v20 = (uint64_t)&v20 - v9;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_241CDBF50())
  {
    unint64_t v23 = a1 & 0xC000000000000001;
    unint64_t v11 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    unint64_t v12 = MEMORY[0x263F8EE78];
    uint64_t v13 = 4;
    uint64_t v22 = (id *)a1;
    while (1)
    {
      id v14 = v23 ? (id *)MEMORY[0x245637160](v13 - 4, a1) : (id *)*(id *)(a1 + 8 * v13);
      a1 = (unint64_t)v14;
      uint64_t v15 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      sub_241B7FA84(v14, (uint64_t)v6);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*v11)(v6, 1, v25) == 1)
      {
        sub_241B81720((uint64_t)v6, &qword_268D42358, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState);
      }
      else
      {
        uint64_t v16 = v20;
        sub_241B804EC((uint64_t)v6, v20);
        sub_241B804EC(v16, v24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_241AF803C(0, *(void *)(v12 + 16) + 1, 1, v12);
        }
        unint64_t v18 = *(void *)(v12 + 16);
        unint64_t v17 = *(void *)(v12 + 24);
        if (v18 >= v17 >> 1) {
          unint64_t v12 = sub_241AF803C(v17 > 1, v18 + 1, 1, v12);
        }
        *(void *)(v12 + 16) = v18 + 1;
        sub_241B804EC(v24, v12+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v18);
      }
      a1 = (unint64_t)v22;
      ++v13;
      if (v15 == v10)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

unint64_t sub_241B8040C()
{
  unint64_t result = qword_268D423C8;
  if (!qword_268D423C8)
  {
    sub_241B8144C(255, &qword_268D423B8, MEMORY[0x263F06F78], MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D423C8);
  }
  return result;
}

uint64_t sub_241B80488(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummaryAlertContentState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241B804EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummaryAlertContentState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241B80550(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B80598()
{
  if (!qword_268D42E00)
  {
    sub_241B80EC4(255, &qword_268D42350, &qword_268D42358, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, MEMORY[0x263EFDCF0]);
    sub_241B8144C(255, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
    sub_241A72F60();
    sub_241A725E0();
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42E00);
    }
  }
}

void sub_241B80684(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B806E8()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_241B80740()
{
  return sub_241B7F838(v0 + 16);
}

void sub_241B8074C()
{
  if (!qword_268D42E10)
  {
    sub_241B80828();
    sub_241B80684(255, &qword_268D42358, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, MEMORY[0x263F8D8F0]);
    sub_241B80550(&qword_268D42E30, (void (*)(uint64_t))sub_241B80828);
    unint64_t v0 = sub_241CDA480();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42E10);
    }
  }
}

void sub_241B80828()
{
  if (!qword_268D42E18)
  {
    sub_241B80898();
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42E18);
    }
  }
}

void sub_241B80898()
{
  if (!qword_268D42E20)
  {
    sub_241A313AC(255, &qword_268D42E28);
    unint64_t v0 = sub_241CDB320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42E20);
    }
  }
}

uint64_t sub_241B80904@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241B7C030(*a1, a2);
}

void *sub_241B8092C(unint64_t a1)
{
  uint64_t v48 = sub_241CD6D00();
  uint64_t v2 = *(void *)(v48 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v48);
  uint64_t v47 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = (char *)&v38 - v5;
  if (a1 >> 62) {
    goto LABEL_39;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_3:
  unint64_t v7 = 0;
  unint64_t v8 = 0;
  unint64_t v40 = a1;
  unint64_t v41 = a1 & 0xC000000000000001;
  unint64_t v38 = a1 + 32;
  uint64_t v39 = v6;
  uint64_t v45 = (void (**)(char *, uint64_t))(v2 + 8);
  do
  {
    if (v41) {
      id v10 = (id)sub_241B7FEDC(v7, a1, &qword_268D42E28);
    }
    else {
      id v10 = *(id *)(v38 + 8 * v7);
    }
    id v9 = v10;
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_241CDBF50();
      if (!v6) {
        goto LABEL_40;
      }
      goto LABEL_3;
    }
    id v12 = objc_msgSend(v10, sel_storageEntries);
    sub_241A313AC(0, &qword_268D42E48);
    unint64_t v13 = sub_241CDB2C0();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_241CDBF50();
      if (!v2) {
        goto LABEL_33;
      }
LABEL_13:
      if (v2 >= 1)
      {
        id v42 = v9;
        unint64_t v43 = v7;
        os_log_type_t v44 = v8;
        unint64_t v14 = 0;
        uint64_t v15 = 0;
        unint64_t v49 = v13 & 0xC000000000000001;
        while (1)
        {
          if (v49)
          {
            id v16 = (id)sub_241B7FEDC(v14, v13, &qword_268D42E48);
            if (v15) {
              goto LABEL_20;
            }
          }
          else
          {
            id v16 = *(id *)(v13 + 8 * v14 + 32);
            if (v15)
            {
LABEL_20:
              id v17 = v15;
              id v18 = objc_msgSend(v17, sel_modificationDate);
              uint64_t v19 = v2;
              unint64_t v20 = v13;
              uint64_t v21 = v46;
              sub_241CD6CB0();

              id v22 = objc_msgSend(v16, sel_modificationDate);
              unint64_t v23 = v47;
              sub_241CD6CB0();

              char v24 = sub_241CD6C80();
              uint64_t v25 = *v45;
              uint64_t v26 = v23;
              uint64_t v27 = v48;
              (*v45)(v26, v48);
              uint64_t v28 = v21;
              unint64_t v13 = v20;
              uint64_t v2 = v19;
              v25(v28, v27);

              if (v24) {
                uint64_t v29 = v17;
              }
              else {
                uint64_t v29 = v16;
              }
              if ((v24 & 1) == 0) {
                id v16 = v17;
              }
            }
          }
          ++v14;
          uint64_t v15 = v16;
          if (v2 == v14)
          {
            swift_bridgeObjectRelease_n();
            unint64_t v8 = v44;
            if (!v44)
            {
              unint64_t v8 = v16;
              uint64_t v6 = v39;
              a1 = v40;
              id v9 = v42;
              unint64_t v7 = v43;
              goto LABEL_6;
            }
            if (v16)
            {
              id v9 = v16;
              uint64_t v2 = v8;
              id v30 = objc_msgSend((id)v2, sel_modificationDate);
              uint64_t v31 = v46;
              sub_241CD6CB0();

              id v32 = objc_msgSend(v9, sel_modificationDate);
              uint64_t v33 = v47;
              sub_241CD6CB0();

              LOBYTE(v32) = sub_241CD6C80();
              uint64_t v34 = *v45;
              uint64_t v35 = v33;
              uint64_t v36 = v48;
              (*v45)(v35, v48);
              v34(v31, v36);

              if (v32)
              {

                id v9 = (id)v2;
                unint64_t v8 = v16;
              }
              else
              {

                uint64_t v2 = (uint64_t)v42;
              }
              uint64_t v6 = v39;
              a1 = v40;
              unint64_t v7 = v43;
            }
            else
            {
              uint64_t v2 = (uint64_t)v44;
              unint64_t v8 = 0;
              uint64_t v6 = v39;
              a1 = v40;
              id v9 = v42;
              unint64_t v7 = v43;
            }
LABEL_35:

            goto LABEL_6;
          }
        }
      }
      goto LABEL_38;
    }
    uint64_t v2 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_13;
    }
LABEL_33:
    swift_bridgeObjectRelease_n();
    if (v8)
    {
      uint64_t v2 = (uint64_t)v8;
      unint64_t v8 = 0;
      goto LABEL_35;
    }
LABEL_6:
  }
  while (v7 != v6);
  swift_bridgeObjectRelease();
  return v8;
}

void sub_241B80DD8()
{
  if (!qword_268D42E50)
  {
    sub_241B8144C(255, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
    sub_241B80EC4(255, (unint64_t *)&qword_26B032858, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263EFDE20]);
    sub_241A725E0();
    sub_241B80F58();
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42E50);
    }
  }
}

void sub_241B80EC4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_241B80684(255, a3, a4, MEMORY[0x263F8D8F0]);
    uint64_t v9 = v8;
    unint64_t v10 = sub_241A3DA64();
    unint64_t v11 = a5(a1, v9, v10, MEMORY[0x263F8E4E0]);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

unint64_t sub_241B80F58()
{
  unint64_t result = qword_26B032850;
  if (!qword_26B032850)
  {
    sub_241B80EC4(255, (unint64_t *)&qword_26B032858, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263EFDE20]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032850);
  }
  return result;
}

uint64_t sub_241B80FE8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t sub_241B81058@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241B7D68C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), v2 + 48, *(void **)(v2 + 88), a2);
}

void sub_241B8106C()
{
  if (!qword_268D42E60)
  {
    sub_241B80EC4(255, (unint64_t *)&qword_26B032858, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263EFDE20]);
    sub_241B80F58();
    unint64_t v0 = sub_241CDA340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42E60);
    }
  }
}

void sub_241B81114(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    sub_241B8144C(255, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
    a3(255);
    sub_241A725E0();
    a4();
    unint64_t v7 = sub_241CDA490();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241B811D8()
{
  return sub_241B80550(&qword_268D42E70, (void (*)(uint64_t))sub_241B8106C);
}

void sub_241B8120C()
{
  if (!qword_268D42E78)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDE20];
    sub_241B8144C(255, &qword_268D42E80, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDE20]);
    sub_241B81114(255, &qword_268D42E68, (void (*)(uint64_t))sub_241B8106C, (void (*)(void))sub_241B811D8);
    sub_241B8134C(&qword_26B02EAB0, &qword_268D42E80, v0);
    sub_241B813A0(&qword_268D42E88, &qword_268D42E68, (void (*)(uint64_t))sub_241B8106C, (void (*)(void))sub_241B811D8);
    unint64_t v1 = sub_241CDA490();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D42E78);
    }
  }
}

uint64_t sub_241B8134C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B8144C(255, a2, MEMORY[0x263F8EE60] + 8, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B813A0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B81114(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B813F0()
{
  if (!qword_26B032818)
  {
    unint64_t v0 = sub_241CDA5C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032818);
    }
  }
}

void sub_241B8144C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v8 = sub_241A3DA64();
    unint64_t v9 = a4(a1, a3, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241B814BC()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_241B81514(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  return sub_241B7E45C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), v2 + 32);
}

uint64_t sub_241B81520()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241B81558@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);
  sub_241B81624();
  uint64_t result = v5(a1, a1 + *(int *)(v6 + 48));
  *a2 = result;
  return result;
}

uint64_t sub_241B815A8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241B815E8()
{
  return sub_241B7F4C4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_241B815F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

void sub_241B81624()
{
  if (!qword_268D42E98)
  {
    sub_241B80684(255, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D42E98);
    }
  }
}

uint64_t sub_241B816B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241B81720(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241B80684(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241B81790()
{
  if (!qword_268D42EA0)
  {
    sub_241B80EC4(255, &qword_268D42350, &qword_268D42358, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, MEMORY[0x263EFDCF0]);
    type metadata accessor for SummaryAlertContentState();
    sub_241A72F60();
    unint64_t v0 = sub_241CDA370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42EA0);
    }
  }
}

uint64_t sub_241B81844()
{
  return sub_241B80550(&qword_268D42EB0, (void (*)(uint64_t))sub_241B81790);
}

uint64_t sub_241B81880()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_241B818D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241B7CE80(a1, v2 + 16, a2);
}

uint64_t sub_241B818DC()
{
  uint64_t v1 = (int *)(type metadata accessor for SummaryAlertContentState() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);

  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[7];
  uint64_t v6 = sub_241CD6D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + v3 + v1[8];
  uint64_t v8 = sub_241CD6D70();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241B81A54(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241B80684(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241B81AD4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241B80904(a1, a2);
}

void **sub_241B81AF4(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    unint64_t v11 = *(void **)((char *)a2 + v8);
    *(void *)uint64_t v9 = v11;
    void v9[8] = *((unsigned char *)a2 + v8 + 8);
    uint64_t v12 = *(void **)((char *)a2 + v8 + 16);
    *((void *)v9 + 2) = v12;
    uint64_t v13 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v14 = *(int *)(v13 + 28);
    uint64_t v29 = &v10[v14];
    id v30 = &v9[v14];
    uint64_t v15 = sub_241CD7DE0();
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    id v16 = v4;
    id v17 = v11;
    id v18 = v12;
    v28(v30, v29, v15);
    uint64_t v19 = *(int *)(v13 + 32);
    unint64_t v20 = *(void **)&v10[v19];
    *(void *)&v9[v19] = v20;
    uint64_t v21 = *(int *)(a3 + 24);
    id v22 = (char *)v7 + v21;
    unint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_241CD6EE0();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    id v26 = v20;
    v25(v22, v23, v24);
  }
  return v7;
}

uint64_t sub_241B81C84(id *a1, uint64_t a2)
{
  uint64_t v4 = (id *)((char *)a1 + *(int *)(a2 + 20));
  uint64_t v5 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v6 = (char *)v4 + *(int *)(v5 + 28);
  uint64_t v7 = sub_241CD7DE0();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  uint64_t v8 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v9 = sub_241CD6EE0();
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

void **sub_241B81D7C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void **)((char *)a2 + v6);
  *(void *)uint64_t v7 = v9;
  v7[8] = *((unsigned char *)a2 + v6 + 8);
  uint64_t v10 = *(void **)((char *)a2 + v6 + 16);
  *((void *)v7 + 2) = v10;
  uint64_t v11 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v12 = *(int *)(v11 + 28);
  uint64_t v27 = &v8[v12];
  uint64_t v28 = &v7[v12];
  uint64_t v13 = sub_241CD7DE0();
  id v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  id v14 = v5;
  id v15 = v9;
  id v16 = v10;
  v26(v28, v27, v13);
  uint64_t v17 = *(int *)(v11 + 32);
  id v18 = *(void **)&v8[v17];
  *(void *)&v7[v17] = v18;
  uint64_t v19 = *(int *)(a3 + 24);
  unint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_241CD6EE0();
  unint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
  id v24 = v18;
  v23(v20, v21, v22);
  return a1;
}

void **sub_241B81EC8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = *(void **)((char *)a1 + v9);
  uint64_t v13 = *(void **)((char *)a2 + v9);
  *(void *)uint64_t v10 = v13;
  id v14 = v13;

  v10[8] = v11[8];
  id v15 = (void *)*((void *)v11 + 2);
  id v16 = (void *)*((void *)v10 + 2);
  *((void *)v10 + 2) = v15;
  id v17 = v15;

  uint64_t v18 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v19 = *(int *)(v18 + 28);
  unint64_t v20 = &v10[v19];
  uint64_t v21 = &v11[v19];
  uint64_t v22 = sub_241CD7DE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = *(int *)(v18 + 32);
  id v24 = *(void **)&v10[v23];
  uint64_t v25 = *(void **)&v11[v23];
  *(void *)&v10[v23] = v25;
  id v26 = v25;

  uint64_t v27 = *(int *)(a3 + 24);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_241CD6EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

void *sub_241B82010(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  *(void *)uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[8] = *((unsigned char *)a2 + v6 + 8);
  *((void *)v7 + 2) = *(void *)((char *)a2 + v6 + 16);
  uint64_t v9 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v10 = *(int *)(v9 + 28);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_241CD7DE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)&v7[*(int *)(v9 + 32)] = *(void *)&v8[*(int *)(v9 + 32)];
  uint64_t v14 = *(int *)(a3 + 24);
  id v15 = (char *)a1 + v14;
  id v16 = (char *)a2 + v14;
  uint64_t v17 = sub_241CD6EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

void **sub_241B82128(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void **)((char *)a1 + v7);
  *(void *)id v8 = *(void *)v9;

  v8[8] = v9[8];
  uint64_t v11 = (void *)*((void *)v8 + 2);
  *((void *)v8 + 2) = *((void *)v9 + 2);

  uint64_t v12 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v13 = *(int *)(v12 + 28);
  uint64_t v14 = &v8[v13];
  id v15 = &v9[v13];
  uint64_t v16 = sub_241CD7DE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = *(int *)(v12 + 32);
  uint64_t v18 = *(void **)&v8[v17];
  *(void *)&v8[v17] = *(void *)&v9[v17];

  uint64_t v19 = *(int *)(a3 + 24);
  unint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_241CD6EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_241B82260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B82274);
}

uint64_t sub_241B82274(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_241CD6EE0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_241B823A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B823B4);
}

void *sub_241B823B4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_241CD6EE0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for BalanceSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B036380;
  if (!qword_26B036380) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B8252C()
{
  uint64_t result = type metadata accessor for SnidgetFeedItemGeneratorRequest(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD6EE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_241B82604(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B8264C()
{
  return sub_241B82604(&qword_26B035F38, (void (*)(uint64_t))type metadata accessor for SnidgetMultiValueLevelChartView);
}

uint64_t sub_241B82694()
{
  return sub_241B82798((unint64_t *)&qword_26B0320F0);
}

void sub_241B826C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241B82604(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B82764()
{
  return sub_241B82798((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241B82798(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B826C8(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    int v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241B82604((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241B82604(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B82884(uint64_t a1)
{
  uint64_t result = sub_241B82604(&qword_26B036378, (void (*)(uint64_t))type metadata accessor for BalanceSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241B828DC()
{
  return sub_241B8292C(&qword_268D42EC0, &qword_268D42EC8, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241B8292C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B829C0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B82970()
{
  return sub_241B8292C(&qword_26B035C20, &qword_26B035C28, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

void sub_241B829C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241B826C8(255, &qword_26B032118, MEMORY[0x263F44150]);
    v9[0] = v6;
    v9[1] = type metadata accessor for SnidgetMultiValueLevelChartView(255);
    void v9[2] = sub_241A3F5B0();
    v9[3] = sub_241B82604(&qword_26B035F38, (void (*)(uint64_t))type metadata accessor for SnidgetMultiValueLevelChartView);
    void v9[4] = sub_241B82798((unint64_t *)&qword_26B0320F0);
    v9[5] = sub_241B82798((unint64_t *)&qword_26B0320E0);
    v9[6] = sub_241A91F20();
    v9[7] = sub_241A91F74();
    unint64_t v7 = a3(a1, v9);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241B82B10(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_241A522DC(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = *(void *)(sub_241CD7190() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = sub_241CD7120();
      char v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_241A522DC(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(unsigned char *)(v12 + 40) = v9 & 1;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_241B82C50(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v156 = a2;
  uint64_t v157 = a3;
  uint64_t v160 = a1;
  uint64_t v163 = (void *)sub_241CDA1A0();
  uint64_t v3 = *(v163 - 1);
  uint64_t v4 = MEMORY[0x270FA5388](v163);
  uint64_t v6 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v132 - v7;
  char v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A359D4(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v155 = (char *)&v132 - v11;
  uint64_t v149 = sub_241CD6D00();
  uint64_t v147 = *(void *)(v149 - 8);
  MEMORY[0x270FA5388](v149);
  uint64_t v136 = (char *)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A359D4(0, &qword_26B038880, MEMORY[0x263F45770], v9);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v146 = (char *)&v132 - v17;
  uint64_t v144 = sub_241CD6F80();
  uint64_t v143 = *(void *)(v144 - 8);
  MEMORY[0x270FA5388](v144);
  uint64_t v142 = (char *)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SnidgetFeedItemMetadata(0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v145 = (char *)&v132 - v23;
  sub_241A359D4(0, &qword_26B031AD8, MEMORY[0x263F44508], v9);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v140 = (char *)&v132 - v25;
  sub_241A359D4(0, &qword_26B0385B8, MEMORY[0x263F07490], v9);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v141 = (char *)&v132 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  os_log_t v137 = (char *)&v132 - v29;
  sub_241A359D4(0, &qword_26B0320B0, MEMORY[0x263F43F20], v9);
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  uint64_t v33 = (char *)&v132 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v135 = (char *)&v132 - v34;
  sub_241A359D4(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828], v9);
  uint64_t v36 = MEMORY[0x270FA5388](v35 - 8);
  uint64_t v139 = (uint64_t)&v132 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  unint64_t v148 = (char *)&v132 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v150 = (uint64_t)&v132 - v40;
  uint64_t v151 = sub_241CD69B0();
  uint64_t v154 = *(void *)(v151 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v151);
  Class v138 = (char *)&v132 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  unint64_t v153 = (char *)&v132 - v43;
  sub_241A359D4(0, &qword_26B0354F0, MEMORY[0x263F42D70], v9);
  MEMORY[0x270FA5388](v44 - 8);
  uint64_t v46 = (char *)&v132 - v45;
  uint64_t v159 = sub_241CD70F0();
  uint64_t v152 = *(void *)(v159 - 8);
  MEMORY[0x270FA5388](v159);
  unint64_t v158 = (char *)&v132 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v48 = objc_msgSend(self, sel_sharedBehavior);
  if (!v48)
  {
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v49 = v48;
  id v50 = objc_msgSend(v48, sel_features);

  if (!v50)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  unsigned int v51 = objc_msgSend(v50, sel_harmonia);

  if (!v51)
  {
    sub_241CDA0D0();
    uint64_t v61 = sub_241CDA190();
    os_log_type_t v62 = sub_241CDB670();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      v164[0] = v64;
      *(_DWORD *)uint64_t v63 = 136315138;
      uint64_t v165 = sub_241A33FE4(0xD000000000000023, 0x8000000241CF0260, v164);
      sub_241CDBBF0();
      _os_log_impl(&dword_241A23000, v61, v62, "[%s] feature flag off, skipping feed item model generation", v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v64, -1, -1);
      MEMORY[0x245637F20](v63, -1, -1);
    }

    (*(void (**)(char *, void *))(v3 + 8))(v6, v163);
    sub_241A41340();
    swift_allocError();
    unsigned char *v65 = 0;
    goto LABEL_14;
  }
  uint64_t v134 = v3;
  uint64_t v52 = self;
  uint64_t v53 = *(void **)v162;
  id v54 = objc_msgSend(v52, sel_sharedInstanceForHealthStore_, *(void *)v162);
  if (!v54)
  {
LABEL_33:
    __break(1u);
    return;
  }
  uint64_t v55 = v54;
  id v56 = objc_msgSend(self, sel_appleBalanceMetricsType);
  id v57 = objc_msgSend(v55, sel_displayTypeForObjectType_, v56);

  if (!v57)
  {
    sub_241CDA0D0();
    uint64_t v66 = sub_241CDA190();
    os_log_type_t v67 = sub_241CDB650();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      v164[0] = v69;
      *(_DWORD *)uint64_t v68 = 136315138;
      uint64_t v165 = sub_241A33FE4(0xD000000000000023, 0x8000000241CF0260, v164);
      sub_241CDBBF0();
      _os_log_impl(&dword_241A23000, v66, v67, "[%s] failed to created balance display type", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v69, -1, -1);
      MEMORY[0x245637F20](v68, -1, -1);
    }

    (*(void (**)(char *, void *))(v134 + 8))(v8, v163);
    sub_241A3A824();
    swift_allocError();
LABEL_14:
    swift_willThrow();
    return;
  }
  id v58 = v57;
  uint64_t v59 = v161;
  sub_241ADF718(v160);
  if (v59)
  {

    return;
  }
  os_log_t v70 = v60;
  if (!v60) {
    goto LABEL_19;
  }
  uint64_t v163 = v57;
  uint64_t v161 = type metadata accessor for BalanceSnidgetFeedItemModelProvider();
  sub_241A49E70(v162 + *(int *)(v161 + 24), (uint64_t)v46);
  uint64_t v71 = v152;
  uint64_t v72 = v159;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v46, 1, v159) == 1)
  {

    sub_241B85360((uint64_t)v46, &qword_26B0354F0, MEMORY[0x263F42D70]);
    id v58 = v163;
LABEL_19:
    uint64_t v73 = sub_241CD7A10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v16, 1, 1, v73);
    uint64_t v74 = sub_241CD6810();
    uint64_t v75 = (uint64_t)v155;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v155, 1, 1, v74);
    uint64_t v76 = v156;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, (uint64_t)v16, v76, v75, v22);
    sub_241CD89A0();
    uint64_t v77 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v33, 1, 1, v77);
    id v78 = v58;
    uint64_t v79 = sub_241CD8990();
    sub_241A91DB4(0);
    id v81 = v157;
    sub_241A3AB20((uint64_t)v22, (uint64_t)v157 + *(int *)(v80 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    *id v81 = v79;
    *(_OWORD *)(v81 + 1) = 0u;
    *(_OWORD *)(v81 + 3) = 0u;
    sub_241A3A914((uint64_t)v22);
    return;
  }
  uint64_t v160 = v70;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v158, v46, v72);
  uint64_t v82 = v162 + *(int *)(v161 + 20);
  uint64_t v83 = *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32);
  uint64_t v162 = v82;
  uint64_t v84 = *(void **)(v82 + v83);
  type metadata accessor for MostRecentSampleSnidgetStringBuilder();
  uint64_t inited = (void *)swift_initStackObject();
  inited[2] = v53;
  uint64_t v86 = self;
  id v87 = v84;
  id v88 = v53;
  id v89 = objc_msgSend(v86, sel_sharedInstanceForHealthStore_, v88);
  inited[4] = v89;
  if (!v84)
  {
    id v90 = v89;
    id v87 = objc_msgSend(v90, sel_createHKUnitPreferenceController);
  }
  uint64_t v92 = v150;
  uint64_t v91 = v151;

  inited[3] = v87;
  uint64_t v93 = inited;
  sub_241B84040();
  SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
  swift_bridgeObjectRelease();
  uint64_t v94 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v154 + 56);
  v94(v92, 1, 1, v91);
  sub_241B8439C();
  if (v95)
  {
    uint64_t v96 = (uint64_t)v148;
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    sub_241B85360(v92, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    v94(v96, 0, 1, v91);
    sub_241AD175C(v96, v92);
  }
  uint64_t v132 = v93;
  uint64_t v163 = v163;
  uint64_t v97 = (uint64_t)v137;
  sub_241CD71F0();
  uint64_t v98 = v147;
  uint64_t v99 = v147 + 48;
  uint64_t v100 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v147 + 48);
  uint64_t v101 = v149;
  unsigned int v102 = v100(v97, 1, v149);
  uint64_t v134 = v99;
  uint64_t v133 = v100;
  if (v102 == 1)
  {
    uint64_t v103 = v135;
    sub_241CD6CC0();
    sub_241B85360(v97, &qword_26B0385B8, MEMORY[0x263F07490]);
  }
  else
  {
    uint64_t v104 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 32);
    uint64_t v103 = v135;
    v104(v135, v97, v101);
  }
  sub_241CD89A0();
  sub_241A3A9CC();
  uint64_t v106 = *(int *)(v105 + 48);
  v103[v106] = (sub_241CD70E0() & 1) == 0;
  uint64_t v107 = *MEMORY[0x263F43F18];
  uint64_t v108 = sub_241CD8610();
  uint64_t v109 = *(void *)(v108 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 104))(v103, v107, v108);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v103, 0, 1, v108);
  uint64_t v161 = sub_241CD8990();
  uint64_t v110 = v151;
  v94((uint64_t)v148, 1, 1, v151);
  (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v138, v153, v110);
  sub_241AD163C(v150, v139);
  v164[0] = 0x5F74656764696E53;
  v164[1] = 0xE800000000000000;
  id v111 = *(id *)(v162 + 16);
  id v112 = objc_msgSend(v111, sel_description);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  uint64_t v113 = v140;
  sub_241CD8E50();
  swift_bridgeObjectRelease();
  uint64_t v114 = sub_241CD8E70();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v113, 0, 1, v114);
  sub_241CD8FF0();
  swift_allocObject();
  uint64_t v162 = sub_241CD8FE0();
  unint64_t v148 = (char *)sub_241B84BE4();
  uint64_t v140 = v115;
  uint64_t v117 = v116;
  uint64_t v118 = v142;
  sub_241CD7210();
  uint64_t v119 = sub_241CD6F70();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v118, v144);
  uint64_t v120 = (uint64_t)v141;
  sub_241CD71F0();
  uint64_t v121 = v149;
  if (v133(v120, 1, v149) == 1)
  {
    sub_241CD6CC0();
    sub_241B85360(v120, &qword_26B0385B8, MEMORY[0x263F07490]);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v147 + 32))(v136, v120, v121);
  }
  uint64_t v123 = v156;
  uint64_t v122 = v157;
  uint64_t v124 = (uint64_t)v155;
  uint64_t v125 = (uint64_t)v146;
  sub_241CD79D0();
  uint64_t v126 = sub_241CD7A10();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v125, 0, 1, v126);
  uint64_t v127 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56))(v124, 1, 1, v127);
  swift_bridgeObjectRetain();
  uint64_t v128 = v145;
  sub_241B4A1A8(v119 > 0, v125, v123, v124, v145);
  swift_release();

  uint64_t v129 = v162;
  *uint64_t v122 = v161;
  v122[1] = v129;
  unint64_t v130 = v140;
  v122[2] = (uint64_t)v148;
  v122[3] = (uint64_t)v130;
  v122[4] = v117;
  sub_241A91DB4(0);
  sub_241B853D0((uint64_t)v128, (uint64_t)v122 + *(int *)(v131 + 52));
  sub_241B85360(v150, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  (*(void (**)(char *, uint64_t))(v154 + 8))(v153, v151);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v158, v159);
}

uint64_t sub_241B84040()
{
  uint64_t v0 = sub_241CD6DD0();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_241CDB070();
  MEMORY[0x270FA5388](v1 - 8);
  sub_241CD70F0();
  if (sub_241CD7200()) {
    goto LABEL_2;
  }
  if (sub_241CD70E0())
  {
    uint64_t v4 = sub_241B85040();
    if (v4 >= 1)
    {
      uint64_t v5 = v4;
      sub_241CDB060();
      if (qword_26B038428 != -1) {
        swift_once();
      }
      id v6 = (id)qword_26B0413A0;
      sub_241CD6DC0();
      sub_241CDB110();
      sub_241A359D4(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
      uint64_t v7 = swift_allocObject();
      uint64_t v8 = MEMORY[0x263F8D6C8];
      *(_OWORD *)(v7 + 16) = xmmword_241CEB730;
      uint64_t v9 = MEMORY[0x263F8D750];
      *(void *)(v7 + 56) = v8;
      *(void *)(v7 + 64) = v9;
      *(void *)(v7 + 32) = v5;
      uint64_t v3 = sub_241CDB0F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_2:
    sub_241CDB060();
    if (qword_26B038428 != -1) {
      swift_once();
    }
    id v2 = (id)qword_26B0413A0;
    sub_241CD6DC0();
    return sub_241CDB110();
  }
  if (qword_26B038428 != -1) {
    swift_once();
  }
  return sub_241CD69E0();
}

uint64_t sub_241B8439C()
{
  sub_241B854F8(0, &qword_26B031FA0, MEMORY[0x263F066C0]);
  uint64_t v2 = v1;
  uint64_t v58 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v49 - v3;
  sub_241B854F8(0, &qword_26B031F98, MEMORY[0x263F06698]);
  uint64_t v6 = v5;
  uint64_t v57 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v56 = (char *)v49 - v7;
  sub_241B854F8(0, &qword_26B031FB0, MEMORY[0x263F066C8]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v55 = (char *)v49 - v11;
  uint64_t v12 = sub_241CD6DD0();
  MEMORY[0x270FA5388](v12 - 8);
  int v60 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CDB070();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v59 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_241CD7020();
  uint64_t v16 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v18 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = 0;
  if ((sub_241CD70E0() & 1) == 0) {
    return v19;
  }
  if (sub_241B85040() < 1)
  {
    sub_241CDB060();
    if (qword_26B038428 != -1) {
      swift_once();
    }
    id v37 = (id)qword_26B0413A0;
    sub_241CD6DC0();
    return sub_241CDB110();
  }
  uint64_t v54 = v10;
  uint64_t v20 = sub_241CD6FE0();
  MEMORY[0x270FA5388](v20);
  v49[-2] = v0;
  uint64_t v22 = sub_241A78C88((uint64_t (*)(char *))sub_241B855EC, (uint64_t)&v49[-4], v21);
  int64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v50 = v9;
    uint64_t v51 = v6;
    uint64_t v52 = v4;
    uint64_t v53 = v2;
    uint64_t v66 = (void *)MEMORY[0x263F8EE78];
    sub_241A521D8(0, v23, 0);
    uint64_t v24 = v16 + 16;
    os_log_type_t v62 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    unint64_t v25 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v49[1] = v22;
    unint64_t v26 = v22 + v25;
    uint64_t v61 = *(void *)(v24 + 56);
    uint64_t v63 = v24;
    uint64_t v27 = (void (**)(char *, uint64_t))(v24 - 8);
    do
    {
      uint64_t v28 = v64;
      v62(v18, v26, v64);
      uint64_t v29 = sub_241CD6FD0();
      uint64_t v31 = v30;
      (*v27)(v18, v28);
      uint64_t v32 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_241A521D8(0, v32[2] + 1, 1);
        uint64_t v32 = v66;
      }
      unint64_t v34 = v32[2];
      unint64_t v33 = v32[3];
      if (v34 >= v33 >> 1)
      {
        sub_241A521D8(v33 > 1, v34 + 1, 1);
        uint64_t v32 = v66;
      }
      v32[2] = v34 + 1;
      uint64_t v35 = &v32[2 * v34];
      v35[4] = v29;
      v35[5] = v31;
      v26 += v61;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    uint64_t v4 = v52;
    uint64_t v2 = v53;
    uint64_t v36 = v58;
    uint64_t v9 = v50;
    uint64_t v6 = v51;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = (void *)MEMORY[0x263F8EE78];
    uint64_t v36 = v58;
  }
  unint64_t v38 = v32[2];
  if (v38 <= 2)
  {
    uint64_t v65 = v32;
    uint64_t v47 = v56;
    uint64_t v46 = v57;
    (*(void (**)(char *, void, uint64_t))(v57 + 104))(v56, *MEMORY[0x263F06690], v6);
    (*(void (**)(char *, void, uint64_t))(v36 + 104))(v4, *MEMORY[0x263F066B8], v2);
    sub_241B854A0();
    uint64_t v64 = sub_241B82604((unint64_t *)&qword_26B034C80, (void (*)(uint64_t))sub_241B854A0);
    id v48 = v55;
    sub_241CD66E0();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v6);
    sub_241AD1954();
    sub_241CDB230();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v9);
    swift_bridgeObjectRelease();
    return (uint64_t)v66;
  }
  sub_241CDB060();
  if (qword_26B038428 != -1) {
    swift_once();
  }
  id v39 = (id)qword_26B0413A0;
  sub_241CD6DC0();
  uint64_t result = sub_241CDB110();
  if (v32[2])
  {
    uint64_t v42 = v32[4];
    uint64_t v41 = v32[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v43 = v38 - 1;
    sub_241A359D4(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_241CEB720;
    uint64_t v45 = MEMORY[0x263F8D750];
    *(void *)(v44 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v44 + 64) = v45;
    *(void *)(v44 + 32) = v43;
    *(void *)(v44 + 96) = MEMORY[0x263F8D310];
    *(void *)(v44 + 104) = sub_241A55A74();
    *(void *)(v44 + 72) = v42;
    *(void *)(v44 + 80) = v41;
    uint64_t v19 = sub_241CDB0F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_241B84BE4()
{
  uint64_t v1 = sub_241CD7F30();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v37 - v6;
  sub_241CD70F0();
  uint64_t v8 = 0;
  if (sub_241CD7200()) {
    return (uint64_t)v8;
  }
  uint64_t v9 = sub_241CD6FE0();
  MEMORY[0x270FA5388](v9);
  v37[-2] = v0;
  uint64_t v10 = sub_241A424AC((void (*)(uint64_t))sub_241B85434, (uint64_t)&v37[-4], v9);
  swift_bridgeObjectRelease();
  sub_241B85460();
  sub_241CDAC50();
  sub_241CDBAF0();
  sub_241CD7F20();
  sub_241CDAC60();
  sub_241CDBAF0();
  sub_241CD7F20();
  sub_241CD7150();
  double v12 = v11;
  double v14 = v13;
  double v15 = (v13 - v11) * 0.25;
  sub_241A359D4(0, &qword_26B0369B0, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level, MEMORY[0x263F8E0F8]);
  uint64_t v16 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
  unint64_t v17 = (*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80);
  uint64_t v44 = *(void *)(*(void *)(v16 - 8) + 72);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_241CEC2D0;
  if (v12 - v15 > v12)
  {
    __break(1u);
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v41 = v10;
    uint64_t v38 = v2;
    id v39 = (void *)result;
    uint64_t v19 = (double *)(result + v17);
    uint64_t v20 = *(int *)(v16 + 20);
    uint64_t v42 = v5;
    unint64_t v43 = v7;
    uint64_t v21 = (char *)v19 + v20;
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v22((char *)v19 + v20, v5, v1);
    uint64_t v23 = *MEMORY[0x263F43638];
    uint64_t v24 = sub_241CD7F90();
    uint64_t v25 = *(void *)(v24 - 8);
    unint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 104);
    uint64_t v27 = v25 + 104;
    v26(v21, v23, v24);
    *uint64_t v19 = v12 - v15;
    v19[1] = v12;
    *((unsigned char *)v19 + *(int *)(v16 + 24)) = 0;
    uint64_t v28 = v1;
    uint64_t v29 = (double *)((char *)v19 + v44);
    uint64_t v30 = (char *)v19 + v44 + *(int *)(v16 + 20);
    v37[0] = v28;
    ((void (*)(char *, char *))v22)(v30, v43);
    v37[1] = v27;
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v30, v23, v24);
    *uint64_t v29 = v12;
    v29[1] = v14;
    *((unsigned char *)v29 + *(int *)(v16 + 24)) = 1;
    if (v14 <= v14 + v15)
    {
      uint64_t v31 = (double *)((char *)v19 + 2 * v44);
      uint64_t v32 = (char *)v31 + *(int *)(v16 + 20);
      unint64_t v33 = v42;
      uint64_t v34 = v37[0];
      v22(v32, v42, v37[0]);
      v26(v32, v23, v24);
      *uint64_t v31 = v14;
      v31[1] = v14 + v15;
      *((unsigned char *)v31 + *(int *)(v16 + 24)) = 0;
      uint64_t v35 = sub_241B82B10(v41);
      swift_bridgeObjectRelease();
      uint64_t v8 = v39;
      sub_241C911B0(v39, v35);
      uint64_t v36 = *(void (**)(char *, uint64_t))(v38 + 8);
      v36(v33, v34);
      v36(v43, v34);
      return (uint64_t)v8;
    }
  }
  __break(1u);
  return result;
}

void sub_241B8501C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_241B85040()
{
  uint64_t v0 = sub_241CD7190();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241CD70D0();
  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v25 = (void *)MEMORY[0x263F8EE78];
    sub_241A52158(0, v5, 0);
    uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    uint64_t v6 = v1 + 16;
    uint64_t v8 = *(unsigned __int8 *)(v6 + 64);
    uint64_t v22 = v4;
    uint64_t v9 = v4 + ((v8 + 32) & ~v8);
    uint64_t v23 = *(void *)(v6 + 56);
    uint64_t v24 = v7;
    uint64_t v10 = (void (**)(char *, uint64_t))(v6 - 8);
    do
    {
      uint64_t v11 = v6;
      v24(v3, v9, v0);
      char v12 = sub_241CD7140();
      (*v10)(v3, v0);
      double v13 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_241A52158(0, v13[2] + 1, 1);
        double v13 = v25;
      }
      unint64_t v15 = v13[2];
      unint64_t v14 = v13[3];
      if (v15 >= v14 >> 1)
      {
        sub_241A52158(v14 > 1, v15 + 1, 1);
        double v13 = v25;
      }
      v13[2] = v15 + 1;
      v13[v15 + 4] = v12 & 1;
      v9 += v23;
      --v5;
      uint64_t v6 = v11;
    }
    while (v5);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v17 = v13[2];
    if (v17)
    {
LABEL_9:
      uint64_t v18 = 0;
      uint64_t v19 = v13 + 4;
      while (1)
      {
        uint64_t v20 = *v19++;
        BOOL v21 = __OFADD__(v18, v20);
        v18 += v20;
        if (v21) {
          break;
        }
        if (!--v17) {
          goto LABEL_15;
        }
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    double v13 = (void *)MEMORY[0x263F8EE78];
    uint64_t v17 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v17) {
      goto LABEL_9;
    }
  }
  uint64_t v18 = 0;
LABEL_15:
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_241B85274()
{
  uint64_t v0 = sub_241CD7190();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD70C0();
  char v4 = sub_241CD7140();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_241B85360(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A359D4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241B853D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SnidgetFeedItemMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241B85434()
{
  return sub_241CD70C0();
}

unint64_t sub_241B85460()
{
  unint64_t result = qword_26B0304C8;
  if (!qword_26B0304C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0304C8);
  }
  return result;
}

void sub_241B854A0()
{
  if (!qword_26B034C78)
  {
    unint64_t v0 = sub_241CDB320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034C78);
    }
  }
}

void sub_241B854F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD6750();
    sub_241B854A0();
    v10[0] = v6;
    v10[1] = v7;
    v10[2] = sub_241B82604(&qword_26B031F58, MEMORY[0x263F06250]);
    void v10[3] = sub_241B82604((unint64_t *)&qword_26B034C80, (void (*)(uint64_t))sub_241B854A0);
    unint64_t v8 = a3(a1, v10);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B855EC()
{
  return sub_241B85274() & 1;
}

uint64_t sub_241B8560C()
{
  return swift_initClassMetadata2();
}

void sub_241B8564C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_241CD8DD0();
  uint64_t v37 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v36 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241CD8DC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA140();
  char v12 = sub_241CDA190();
  os_log_type_t v13 = sub_241CDB670();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v34 = v1;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v31 = v5;
    unint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v32 = v4;
    uint64_t v17 = v16;
    v39[0] = v16;
    uint64_t v33 = v2;
    *(_DWORD *)unint64_t v15 = 136446210;
    uint64_t v30 = v8;
    uint64_t v18 = sub_241CDC270();
    uint64_t v38 = sub_241A33FE4(v18, v19, v39);
    uint64_t v2 = v33;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v12, v13, "%{public}s did tap action", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v20 = v17;
    uint64_t v4 = v32;
    MEMORY[0x245637F20](v20, -1, -1);
    BOOL v21 = v15;
    uint64_t v5 = v31;
    MEMORY[0x245637F20](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v30);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_241CD9010();
  sub_241CD8DA0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_241A311E0(v39, v39[3]);
  uint64_t v22 = (void *)sub_241CD8D60();
  uint64_t v23 = self;
  id v24 = v22;
  id v25 = objc_msgSend(v23, sel_defaultCenter);
  sub_241A78694();
  sub_241CDB6D0();
  id v26 = objc_allocWithZone((Class)sub_241CD9190());
  uint64_t v27 = (void *)sub_241CD9150();
  uint64_t v29 = v36;
  uint64_t v28 = v37;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, *MEMORY[0x263F444B0], v2);
  sub_241CD9170();

  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v2);
  sub_241A31190((uint64_t)v39);
  sub_241B85A8C();
}

void sub_241B85A8C()
{
  uint64_t v0 = sub_241CD83C0();
  MEMORY[0x270FA5388](v0 - 8);
  BOOL v21 = (char *)&v22[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_241CD8DC0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v22[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v22[-1] - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  char v12 = (char *)&v22[-1] - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v22[-1] - v13;
  sub_241CD9010();
  sub_241CD8DA0();
  unint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v14, v2);
  sub_241A311E0(v23, v23[3]);
  sub_241CD8D60();
  sub_241CD9010();
  uint64_t v16 = (void *)sub_241CD8DB0();
  v15(v12, v2);
  sub_241CDB7B0();

  sub_241CD9010();
  sub_241CD8DA0();
  v15(v9, v2);
  sub_241A311E0(v22, v22[3]);
  sub_241CD8D70();
  id v17 = objc_allocWithZone((Class)sub_241CD8860());
  uint64_t v18 = (void *)sub_241CD8850();
  sub_241A31190((uint64_t)v22);
  sub_241A31190((uint64_t)v23);
  sub_241CD9010();
  unint64_t v19 = (void *)sub_241CD8DB0();
  v15(v6, v2);
  id v20 = objc_msgSend(v19, sel_navigationController);

  if (v20)
  {
    objc_msgSend(v20, sel_pushViewController_animated_, v18, 1);
  }
}

uint64_t sub_241B85D98(uint64_t a1)
{
  uint64_t v3 = sub_241CD8DC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_241CD9020();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_241B85E98()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignificantChangesPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241B85ED0()
{
  return type metadata accessor for SignificantChangesPromotionTileActionHandler();
}

uint64_t sub_241B85ED8()
{
  return sub_241B85F68(&qword_268D42EE0, MEMORY[0x263F43E20]);
}

uint64_t sub_241B85F20()
{
  return sub_241B85F68(&qword_268D42EE8, (void (*)(uint64_t))type metadata accessor for SignificantChangesPromotionTileActionHandler);
}

uint64_t sub_241B85F68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_241B85FBC()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_241CDA1A0();
  uint64_t v97 = *(void *)(v1 - 8);
  uint64_t v98 = v1;
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v96 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v93 = (char *)&v80 - v4;
  sub_241A72428(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v92 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v80 - v9;
  MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v80 - v11;
  uint64_t v13 = sub_241CD7AB0();
  uint64_t v14 = *(void **)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v91 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v80 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v80 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v95 = (char *)&v80 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v99 = (char *)&v80 - v25;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241A54FDC(&qword_26B0303D8, (unint64_t *)&qword_26B0303E0);
  id v100 = v0;
  sub_241CD8A10();
  id v26 = (unsigned int (*)(char *, uint64_t, uint64_t))v14[6];
  if (v26(v12, 1, v13) == 1)
  {
    sub_241A3F30C((uint64_t)v12);
LABEL_10:
    id v44 = v100;
    uint64_t v45 = v96;
    sub_241CDA0F0();
    id v46 = v44;
    uint64_t v47 = sub_241CDA190();
    os_log_type_t v48 = sub_241CDB670();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc();
      id v100 = (id)swift_slowAlloc();
      v102[0] = (uint64_t)v100;
      *(_DWORD *)uint64_t v49 = 136315650;
      uint64_t v50 = sub_241CDC270();
      uint64_t v101 = sub_241A33FE4(v50, v51, v102);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      uint64_t v101 = sub_241A33FE4(0xD000000000000013, 0x8000000241CE1FC0, v102);
      sub_241CDBBF0();
      *(_WORD *)(v49 + 22) = 2080;
      id v52 = v46;
      id v53 = objc_msgSend(v52, sel_description);
      uint64_t v54 = sub_241CDB0D0();
      unint64_t v56 = v55;

      uint64_t v101 = sub_241A33FE4(v54, v56, v102);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v47, v48, "[%s] %s: Version mismatch found when decoding summary data %s", (uint8_t *)v49, 0x20u);
      id v57 = v100;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v57, -1, -1);
      MEMORY[0x245637F20](v49, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v97 + 8))(v45, v98);
    return 0;
  }
  id v88 = v14 + 6;
  id v89 = (unsigned int (*)(uint64_t, uint64_t, char *))v26;
  id v87 = v22;
  uint64_t v28 = v14 + 4;
  uint64_t v27 = (void (*)(char *, uint64_t, char *))v14[4];
  uint64_t v29 = v99;
  unint64_t v85 = v19;
  uint64_t v86 = v27;
  v27(v99, (uint64_t)v12, (char *)v13);
  uint64_t v30 = v95;
  sub_241CD7A80();
  uint64_t v83 = (void (*)(char *, char *, uint64_t))v14[2];
  v83(v10, v29, v13);
  uint64_t v31 = (void (*)(char *, void, uint64_t, uint64_t))v14[7];
  v31(v10, 0, 1, v13);
  LOBYTE(v29) = sub_241CD7A70();
  id v90 = v10;
  sub_241A3F30C((uint64_t)v10);
  uint64_t v34 = (char *)v14[1];
  uint64_t v33 = v14 + 1;
  uint64_t v32 = v34;
  ((void (*)(char *, uint64_t))v34)(v30, v13);
  if ((v29 & 1) == 0)
  {
    ((void (*)(char *, uint64_t))v32)(v99, v13);
    goto LABEL_10;
  }
  id v81 = (void (*)(uint64_t, void, uint64_t, char *))v31;
  uint64_t v82 = v28;
  uint64_t v84 = v33;
  uint64_t v35 = (uint64_t)v90;
  uint64_t v95 = v32;
  uint64_t v96 = (char *)v13;
  id v36 = v100;
  id v37 = objc_msgSend(v100, sel_contentData);
  if (v37)
  {
    uint64_t v38 = sub_241CD6AE0();
    unint64_t v40 = v39;

    id v37 = (id)sub_241CD6AD0();
    sub_241A37374(v38, v40);
  }
  id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F465E0]), sel_initWithData_, v37);

  if (!v41)
  {
LABEL_26:
    uint64_t v66 = v93;
    sub_241CDA0F0();
    id v67 = v36;
    uint64_t v68 = sub_241CDA190();
    os_log_type_t v69 = sub_241CDB670();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      v102[0] = v71;
      *(_DWORD *)uint64_t v70 = 136315650;
      uint64_t v72 = sub_241CDC270();
      uint64_t v101 = sub_241A33FE4(v72, v73, v102);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 12) = 2080;
      uint64_t v101 = sub_241A33FE4(0xD000000000000013, 0x8000000241CE1FC0, v102);
      sub_241CDBBF0();
      *(_WORD *)(v70 + 22) = 2080;
      id v74 = v67;
      id v75 = objc_msgSend(v74, sel_description);
      uint64_t v76 = sub_241CDB0D0();
      unint64_t v78 = v77;

      uint64_t v101 = sub_241A33FE4(v76, v78, v102);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v68, v69, "[%s] %s: Version mismatch found when decoding current value %s", (uint8_t *)v70, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v71, -1, -1);
      MEMORY[0x245637F20](v70, -1, -1);

      (*(void (**)(char *, uint64_t))(v97 + 8))(v93, v98);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v97 + 8))(v66, v98);
    }
    ((void (*)(char *, char *))v95)(v99, v96);
    return 0;
  }
  sub_241A313AC(0, &qword_26B030440);
  sub_241A54FDC((unint64_t *)&qword_26B030438, &qword_26B030440);
  uint64_t v42 = (uint64_t)v92;
  sub_241CD8A10();
  unint64_t v43 = v96;
  if (v89(v42, 1, v96) == 1)
  {

    sub_241A3F30C(v42);
    goto LABEL_26;
  }
  uint64_t v58 = v87;
  v86(v87, v42, v43);
  id v59 = objc_msgSend(v41, sel_kindRawValue);
  int v60 = v85;
  if (!v59) {
    goto LABEL_18;
  }
  uint64_t v61 = v59;
  sub_241CDB0D0();

  int v62 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
  if (!v62)
  {
    uint64_t v63 = v91;
LABEL_21:
    sub_241CD7A80();
    unint64_t v43 = v96;
    uint64_t v58 = v87;
    goto LABEL_23;
  }
  if (v62 == 3)
  {
    uint64_t v63 = v91;
    goto LABEL_21;
  }
  unint64_t v43 = v96;
  uint64_t v58 = v87;
  if (v62 == 22)
  {
LABEL_18:
    ((void (*)(char *, char *))v95)(v58, v43);
LABEL_25:

    goto LABEL_26;
  }
  uint64_t v63 = v91;
  sub_241CD7A80();
LABEL_23:
  v86(v60, (uint64_t)v63, v43);
  v83((char *)v35, v58, (uint64_t)v43);
  v81(v35, 0, 1, v43);
  char v64 = sub_241CD7A70();
  sub_241A3F30C(v35);
  uint64_t v65 = (void (*)(char *, char *))v95;
  ((void (*)(char *, char *))v95)(v60, v43);
  v65(v58, v43);
  if ((v64 & 1) == 0) {
    goto LABEL_25;
  }
  v65(v99, v43);
  return v41;
}

id sub_241B86AA0()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v78 = sub_241CDA1A0();
  uint64_t v75 = *(void *)(v78 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v78);
  uint64_t v76 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  unint64_t v73 = (char *)&v65 - v3;
  sub_241A72428(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v72 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v65 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v65 - v10;
  uint64_t v12 = sub_241CD7AB0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v71 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v65 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v65 - v19;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241A54FDC(&qword_26B0303D8, (unint64_t *)&qword_26B0303E0);
  id v77 = v0;
  sub_241CD8A10();
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v21(v11, 1, v12) == 1)
  {
    sub_241A3F30C((uint64_t)v11);
    uint64_t v22 = v75;
    uint64_t v23 = v78;
    goto LABEL_10;
  }
  os_log_type_t v69 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v70 = v13 + 32;
  v69(v20, v11, v12);
  sub_241CD7A80();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v20, v12);
  uint64_t v68 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  v68(v9, 0, 1, v12);
  char v24 = sub_241CD7A70();
  sub_241A3F30C((uint64_t)v9);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v26 = v13 + 8;
  uint64_t v25 = v27;
  v27(v18, v12);
  if ((v24 & 1) == 0)
  {
    v25(v20, v12);
    uint64_t v23 = v78;
    uint64_t v22 = v75;
LABEL_10:
    uint64_t v35 = v76;
    sub_241CDA0F0();
    id v36 = v77;
    id v37 = sub_241CDA190();
    os_log_type_t v38 = sub_241CDB670();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      id v77 = (id)swift_slowAlloc();
      uint64_t v80 = (uint64_t)v77;
      *(_DWORD *)uint64_t v39 = 136315650;
      uint64_t v40 = sub_241CDC270();
      uint64_t v79 = sub_241A33FE4(v40, v41, &v80);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      uint64_t v79 = sub_241A33FE4(0x646F4D646E657274, 0xEC00000029286C65, &v80);
      sub_241CDBBF0();
      *(_WORD *)(v39 + 22) = 2080;
      id v42 = v36;
      id v43 = objc_msgSend(v42, sel_description);
      uint64_t v44 = sub_241CDB0D0();
      unint64_t v46 = v45;

      uint64_t v79 = sub_241A33FE4(v44, v46, &v80);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v37, v38, "[%s] %s: Version mismatch found when decoding summary data %s", (uint8_t *)v39, 0x20u);
      id v47 = v77;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v47, -1, -1);
      MEMORY[0x245637F20](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v22 + 8))(v76, v78);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v22 + 8))(v35, v23);
    }
    return 0;
  }
  id v28 = objc_msgSend(v77, sel_contentData);
  uint64_t v76 = (char *)v12;
  uint64_t v66 = (void (*)(char *, char *))v25;
  uint64_t v67 = v26;
  uint64_t v65 = v20;
  if (v28)
  {
    uint64_t v29 = sub_241CD6AE0();
    unint64_t v31 = v30;

    id v28 = (id)sub_241CD6AD0();
    sub_241A37374(v29, v31);
  }
  id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46650]), sel_initWithData_, v28);

  if (!v32)
  {
LABEL_17:
    unint64_t v51 = v73;
    sub_241CDA0F0();
    id v52 = v77;
    id v53 = sub_241CDA190();
    os_log_type_t v54 = sub_241CDB670();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v80 = v56;
      *(_DWORD *)uint64_t v55 = 136315650;
      uint64_t v57 = sub_241CDC270();
      uint64_t v79 = sub_241A33FE4(v57, v58, &v80);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2080;
      uint64_t v79 = sub_241A33FE4(0x646F4D646E657274, 0xEC00000029286C65, &v80);
      sub_241CDBBF0();
      *(_WORD *)(v55 + 22) = 2080;
      id v77 = (id)(v55 + 24);
      id v59 = v52;
      id v60 = objc_msgSend(v59, sel_description);
      uint64_t v61 = sub_241CDB0D0();
      unint64_t v63 = v62;

      uint64_t v79 = sub_241A33FE4(v61, v63, &v80);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v53, v54, "[%s] %s: Version mismatch found when decoding trend value %s", (uint8_t *)v55, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v56, -1, -1);
      MEMORY[0x245637F20](v55, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v75 + 8))(v51, v78);
    v66(v65, v76);
    return 0;
  }
  sub_241A313AC(0, &qword_26B030450);
  sub_241A54FDC(&qword_26B030448, &qword_26B030450);
  uint64_t v33 = (uint64_t)v72;
  sub_241CD8A10();
  uint64_t v34 = v76;
  if (v21((char *)v33, 1, (uint64_t)v76) == 1)
  {

    sub_241A3F30C(v33);
    goto LABEL_17;
  }
  os_log_type_t v48 = v71;
  v69(v71, (char *)v33, (uint64_t)v34);
  sub_241CD7A80();
  v68(v9, 0, 1, (uint64_t)v34);
  char v49 = sub_241CD7A70();
  sub_241A3F30C((uint64_t)v9);
  uint64_t v50 = v66;
  v66(v48, v34);
  if ((v49 & 1) == 0)
  {

    goto LABEL_17;
  }
  v50(v65, v34);
  return v32;
}

uint64_t sub_241B87424()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v91 = sub_241CDA1A0();
  uint64_t v89 = *(void *)(v91 - 8);
  uint64_t v0 = MEMORY[0x270FA5388](v91);
  id v88 = (char *)&v73 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v0);
  unint64_t v85 = (char *)&v73 - v2;
  sub_241A72428(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v86 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v73 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v73 - v9;
  uint64_t v11 = sub_241CD7AB0();
  uint64_t v12 = *(void **)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v73 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v73 - v19;
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241A54FDC(&qword_26B0303D8, (unint64_t *)&qword_26B0303E0);
  uint64_t v21 = (void *)v90;
  sub_241CD8A10();
  uint64_t v22 = v11;
  uint64_t v23 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
  if (v23(v10, 1, v22) == 1)
  {
    sub_241A3F30C((uint64_t)v10);
    char v24 = v88;
    uint64_t v25 = v91;
    goto LABEL_11;
  }
  uint64_t v82 = v15;
  uint64_t v83 = (unsigned int (*)(uint64_t, uint64_t, char *))v23;
  uint64_t v80 = (void (*)(char *, char *, uint64_t))v12[4];
  id v81 = v12 + 4;
  v80(v20, v10, v22);
  sub_241CD7A80();
  uint64_t v78 = (void (*)(char *, char *, uint64_t))v12[2];
  v78(v8, v20, v22);
  uint64_t v26 = (void (*)(uint64_t, void, uint64_t, char *))v12[7];
  uint64_t v79 = v12 + 7;
  id v77 = v26;
  v26((uint64_t)v8, 0, 1, (char *)v22);
  uint64_t v27 = (char *)v22;
  char v28 = sub_241CD7A70();
  uint64_t v84 = v8;
  sub_241A3F30C((uint64_t)v8);
  uint64_t v29 = (void (*)(char *, char *))v12[1];
  v29(v18, v27);
  if ((v28 & 1) == 0)
  {
    v29(v20, v27);
    uint64_t v25 = v91;
    char v24 = v88;
LABEL_11:
    sub_241CDA0F0();
    id v39 = v21;
    uint64_t v40 = sub_241CDA190();
    os_log_type_t v41 = sub_241CDB670();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v90 = swift_slowAlloc();
      v93[0] = v90;
      *(_DWORD *)uint64_t v42 = 136315650;
      uint64_t v43 = sub_241CDC270();
      uint64_t v92 = sub_241A33FE4(v43, v44, v93);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2080;
      uint64_t v92 = sub_241A33FE4(0x646F4D7472616863, 0xEC00000029286C65, v93);
      sub_241CDBBF0();
      *(_WORD *)(v42 + 22) = 2080;
      id v45 = v39;
      id v46 = objc_msgSend(v45, sel_description);
      uint64_t v47 = sub_241CDB0D0();
      unint64_t v49 = v48;

      uint64_t v92 = sub_241A33FE4(v47, v49, v93);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v40, v41, "[%s] %s: Version mismatch found when decoding summary data from: %s", (uint8_t *)v42, 0x20u);
      uint64_t v50 = v90;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v50, -1, -1);
      MEMORY[0x245637F20](v42, -1, -1);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v24, v91);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v89 + 8))(v24, v25);
    }
    return 0;
  }
  id v88 = v27;
  unint64_t v30 = v21;
  if (!objc_msgSend(v21, sel_hasContentData))
  {
    v29(v20, v88);
    return 1;
  }
  id v31 = objc_msgSend(v21, sel_contentData);
  uint64_t v75 = v20;
  uint64_t v76 = v29;
  id v74 = v18;
  if (v31)
  {
    uint64_t v32 = sub_241CD6AE0();
    unint64_t v34 = v33;

    id v31 = (id)sub_241CD6AD0();
    sub_241A37374(v32, v34);
  }
  uint64_t v35 = (uint64_t)v84;
  uint64_t v36 = (uint64_t)v86;
  id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46498]), sel_initWithData_, v31);

  if (v37)
  {
    sub_241A313AC(0, &qword_26B030428);
    sub_241A54FDC(&qword_26B030420, &qword_26B030428);
    sub_241CD8A10();
    os_log_type_t v38 = v88;
    if (v83(v36, 1, v88) == 1)
    {

      sub_241A3F30C(v36);
    }
    else
    {
      id v52 = v82;
      v80(v82, (char *)v36, (uint64_t)v38);
      id v53 = v74;
      sub_241CD7A80();
      v78((char *)v35, v52, (uint64_t)v38);
      v77(v35, 0, 1, v38);
      os_log_type_t v54 = v38;
      char v55 = sub_241CD7A70();
      sub_241A3F30C(v35);
      uint64_t v56 = v76;
      v76(v53, v54);
      v56(v52, v54);
      if (v55)
      {
        v56(v75, v54);
        return (uint64_t)v37;
      }
    }
  }
  uint64_t v57 = v30;
  unint64_t v58 = v85;
  sub_241CDA0F0();
  id v59 = v57;
  id v60 = sub_241CDA190();
  os_log_type_t v61 = sub_241CDB670();
  int v62 = v61;
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v63 = swift_slowAlloc();
    LODWORD(v86) = v62;
    uint64_t v64 = v63;
    uint64_t v90 = swift_slowAlloc();
    v93[0] = v90;
    *(_DWORD *)uint64_t v64 = 136315650;
    uint64_t v65 = sub_241CDC270();
    uint64_t v92 = sub_241A33FE4(v65, v66, v93);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v64 + 12) = 2080;
    uint64_t v92 = sub_241A33FE4(0x646F4D7472616863, 0xEC00000029286C65, v93);
    sub_241CDBBF0();
    *(_WORD *)(v64 + 22) = 2080;
    id v67 = v59;
    id v68 = objc_msgSend(v67, sel_description);
    uint64_t v69 = sub_241CDB0D0();
    unint64_t v71 = v70;

    uint64_t v92 = sub_241A33FE4(v69, v71, v93);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v60, (os_log_type_t)v86, "[%s] %s: Version mismatch found when decoding chart model from: %s", (uint8_t *)v64, 0x20u);
    uint64_t v72 = v90;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v72, -1, -1);
    MEMORY[0x245637F20](v64, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v89 + 8))(v58, v91);
  v76(v75, v88);
  return 0;
}

id sub_241B87E38(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A5D1DC();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v44 - v14;
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (!v16)
  {
    sub_241CDA140();
    id v32 = a1;
    unint64_t v33 = sub_241CDA190();
    os_log_type_t v34 = sub_241CDB650();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(void *)&v47[0] = v45;
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v36 = sub_241CDC270();
      uint64_t v46 = v7;
      uint64_t v49 = sub_241A33FE4(v36, v37, (uint64_t *)v47);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      v44[1] = v35 + 14;
      id v38 = v32;
      id v39 = objc_msgSend(v38, sel_description);
      uint64_t v40 = sub_241CDB0D0();
      unint64_t v42 = v41;

      uint64_t v49 = sub_241A33FE4(v40, v42, (uint64_t *)v47);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v33, v34, "[%s]: Unsupported sample type: %s", (uint8_t *)v35, 0x16u);
      uint64_t v43 = v45;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v43, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v6);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return 0;
  }
  uint64_t v17 = v16;
  sub_241A313AC(0, &qword_268D421E8);
  id v18 = a1;
  uint64_t v19 = (void *)sub_241A4F420(v17);
  uint64_t v20 = a2
      + *(int *)(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0) + 32);
  uint64_t v21 = sub_241CD9ED0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v20, v21);
  uint64_t v22 = *MEMORY[0x263F46C78];
  uint64_t v23 = sub_241CD9970();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v15, v22, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v15, 0, 1, v23);
  id v25 = a3;
  id result = objc_msgSend(v19, sel_data);
  if (result)
  {
    uint64_t v27 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v28 = sub_241CD6AE0();
    unint64_t v30 = v29;

    sub_241A5D234((uint64_t)v15, (uint64_t)v13);
    uint64_t v48 = 0;
    memset(v47, 0, sizeof(v47));
    id v31 = sub_241A54648(v28, v30, 13, (uint64_t)v13, (uint64_t)v25, 0, (uint64_t)v47);

    sub_241A37374(v28, v30);
    sub_241A5D298((uint64_t)v15);

    return v31;
  }
  __break(1u);
  return result;
}

uint64_t sub_241B88324()
{
  return type metadata accessor for PHQ9AssessmentCurrentValueSummarySharableModelGenerator();
}

uint64_t type metadata accessor for PHQ9AssessmentCurrentValueSummarySharableModelGenerator()
{
  uint64_t result = qword_26B034608;
  if (!qword_26B034608) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B88378()
{
  uint64_t v0 = sub_241CD96A0();
  sub_241A55888(v0, qword_26B035608);
  sub_241A55850(v0, (uint64_t)qword_26B035608);
  return sub_241CD9690();
}

uint64_t sub_241B883DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_241B8844C(a1, (uint64_t)v4);
  if (!v4[3])
  {
    uint64_t result = sub_241A78794((uint64_t)v4);
    goto LABEL_5;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_5:
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

uint64_t sub_241B8844C(uint64_t a1, uint64_t a2)
{
  sub_241A78738();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241B884B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B884C4);
}

uint64_t sub_241B884C4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241B88574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B88588);
}

void *sub_241B88588(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031E18;
  if (!qword_26B031E18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B8867C()
{
  return sub_241B88994(&qword_26B0320B8, MEMORY[0x263F44058]);
}

uint64_t sub_241B886C4()
{
  return sub_241B887C8((unint64_t *)&qword_26B0320F0);
}

void sub_241B886F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241B88994(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B88794()
{
  return sub_241B887C8((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241B887C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B886F8(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241B88994((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241B88994(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B888AC()
{
  return sub_241B88994(&qword_26B0385C8, MEMORY[0x263F44308]);
}

uint64_t sub_241B888F4()
{
  return sub_241B88994(&qword_26B032140, MEMORY[0x263F44308]);
}

uint64_t sub_241B8893C(uint64_t a1)
{
  uint64_t result = sub_241B88994(&qword_26B037F00, (void (*)(uint64_t))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241B88994(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B889DC()
{
  return sub_241B88A2C(&qword_26B0383F8, &qword_26B038400, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241B88A2C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B88AC0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B88A70()
{
  return sub_241B88A2C(&qword_26B032E48, &qword_26B032E50, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

void sub_241B88AC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241B886F8(255, &qword_26B032118, MEMORY[0x263F44150]);
    uint64_t v15 = v6;
    uint64_t v7 = sub_241CD86F0();
    unint64_t v8 = sub_241A3F5B0();
    uint64_t v9 = sub_241B88994(&qword_26B0320B8, MEMORY[0x263F44058]);
    uint64_t v10 = sub_241B887C8((unint64_t *)&qword_26B0320F0);
    uint64_t v11 = sub_241B887C8((unint64_t *)&qword_26B0320E0);
    uint64_t v12 = (void (*)(uint64_t))MEMORY[0x263F44308];
    v16[0] = v15;
    v16[1] = v7;
    v16[2] = v8;
    v16[3] = v9;
    v16[4] = v10;
    v16[5] = v11;
    v16[6] = sub_241B88994(&qword_26B0385C8, MEMORY[0x263F44308]);
    v16[7] = sub_241B88994(&qword_26B032140, v12);
    unint64_t v13 = a3(a1, v16);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

void sub_241B88C68(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v172 = a3;
  uint64_t v159 = a2;
  id v178 = a1;
  char v173 = a4;
  uint64_t v6 = type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v177 = (char **)((char *)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v146 - v9);
  uint64_t v11 = (void *)sub_241CDA1A0();
  uint64_t v175 = *(v11 - 1);
  uint64_t v176 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v146 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A7D0(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v171 = (char *)&v146 - v18;
  sub_241A3A7D0(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v151 = (char *)&v146 - v20;
  sub_241A3A7D0(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v170 = (uint64_t)&v146 - v22;
  uint64_t v23 = sub_241CD6810();
  unint64_t v168 = *(void **)(v23 - 8);
  uint64_t v169 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v147 = (char *)&v146 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A7D0(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v174 = (uint64_t)&v146 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v153 = (uint64_t)&v146 - v28;
  uint64_t v158 = sub_241CD6EE0();
  uint64_t v157 = *(void *)(v158 - 8);
  MEMORY[0x270FA5388](v158);
  uint64_t v156 = (char *)&v146 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A7D0(0, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v155 = (char *)&v146 - v31;
  sub_241A3A7D0(0, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v154 = (char *)&v146 - v33;
  unint64_t v164 = (void *)sub_241CD6D00();
  uint64_t v163 = *(v164 - 1);
  uint64_t v34 = MEMORY[0x270FA5388](v164);
  uint64_t v146 = (char *)&v146 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v152 = (char *)&v146 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v162 = (char *)&v146 - v38;
  sub_241A3A7D0(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v40 = MEMORY[0x270FA5388](v39 - 8);
  uint64_t v150 = (char *)&v146 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v149 = (uint64_t)&v146 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v167 = (uint64_t)&v146 - v44;
  uint64_t v161 = sub_241CD69B0();
  uint64_t v160 = *(void *)(v161 - 8);
  uint64_t v45 = MEMORY[0x270FA5388](v161);
  unint64_t v148 = (char *)&v146 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  uint64_t v166 = (uint64_t)&v146 - v47;
  uint64_t v48 = self;
  uint64_t v49 = (void *)*v4;
  id v50 = objc_msgSend(v48, sel_sharedInstanceForHealthStore_, *v4);
  if (!v50)
  {
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v51 = v50;
  uint64_t v165 = (uint64_t)v4 + *(int *)(v6 + 24);
  id v52 = objc_msgSend(v50, sel_displayTypeForObjectType_, *(void *)(v165 + 16));

  if (v52)
  {
    id v53 = v179;
    sub_241ADF998(v178);
    if (v53)
    {

      return;
    }
    id v68 = v54;
    uint64_t v69 = v174;
    if (v54)
    {
      if (objc_msgSend(v54, sel_hasValue)
        && objc_msgSend(v68, sel_hasValueClamped)
        && objc_msgSend(v68, sel_hasDateData))
      {
        unint64_t v179 = v68;
        unint64_t v70 = *(void **)(v165 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
        type metadata accessor for SnidgetStringBuilder();
        uint64_t inited = (void *)swift_initStackObject();
        inited[2] = v49;
        uint64_t v72 = self;
        id v178 = v70;
        id v73 = v49;
        id v74 = objc_msgSend(v72, sel_sharedInstanceForHealthStore_, v73);
        inited[4] = v74;
        if (v70)
        {
          id v76 = v178;
          uint64_t v75 = v179;
        }
        else
        {
          id v86 = v74;
          id v76 = objc_msgSend(v86, sel_createHKUnitPreferenceController);

          uint64_t v75 = v179;
        }

        inited[3] = v76;
        sub_241B8A238(v166, v167, v75, v52);
        id v87 = objc_msgSend(v75, sel_value);
        id v178 = v73;
        if (v87)
        {
          id v88 = v87;
          uint64_t v89 = v75;
          uint64_t v90 = (void *)sub_241CDB860();

          uint64_t v177 = inited;
          uint64_t v91 = SnidgetStringBuilder.makeQuantityFormattedDouble(displayType:quantity:)(v52, v90);
          int v93 = v92;

          uint64_t v176 = (void *)v5[1];
          objc_msgSend(v89, sel_dateData);
          id v94 = (id)HKDecodeDateForValue();
          sub_241CD6CB0();

          sub_241A3A71C();
          uint64_t v96 = v95;
          uint64_t v97 = (uint64_t)v154;
          uint64_t v98 = &v154[*(int *)(v95 + 48)];
          (*(void (**)(char *, uint64_t, uint64_t, void *))(v163 + 56))(v154, 1, 1, v164);
          uint64_t v175 = v91;
          *(void *)uint64_t v98 = v91;
          v98[8] = v93 & 1;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v97, 0, 1, v96);
          uint64_t v99 = *MEMORY[0x263F442E0];
          uint64_t v100 = sub_241CD8A60();
          uint64_t v101 = *(void *)(v100 - 8);
          unsigned int v102 = v155;
          (*(void (**)(char *, uint64_t, uint64_t))(v101 + 104))(v155, v99, v100);
          uint64_t v103 = v100;
          uint64_t v104 = v97;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v102, 0, 1, v103);
          uint64_t v105 = (uint64_t)v102;
          uint64_t v106 = v162;
          uint64_t v107 = (uint64_t)v156;
          sub_241CD6EA0();
          id v108 = sub_241BACC30((char *)v178, v176, v165, v159, v106, v97, v105, 1, v107);
          LODWORD(v176) = v93;
          (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v107, v158);
          id v178 = v108;
          sub_241B8A848(v105, (uint64_t)&unk_26B032130, MEMORY[0x263F442F0], (uint64_t (*)(void))sub_241A3A7D0);
          id v109 = v178;
          sub_241B8A848(v104, (uint64_t)&qword_26B031FE8, (uint64_t)sub_241A3A71C, (uint64_t (*)(void))sub_241A3A7D0);
          (*(void (**)(void *, void *))(v163 + 8))(v106, v164);
          uint64_t v110 = v168;
          uint64_t v111 = v169;
          id v112 = v179;
          uint64_t v113 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v168[7];
          v113(v153, 1, 1, v169);
          if (v109)
          {
            swift_retain();
            uint64_t v114 = v112;
            uint64_t v115 = v147;
            sub_241CD8A40();
            unint64_t v164 = v113;
            sub_241CD67E0();
            uint64_t v116 = v115;
            id v112 = v114;
            ((void (*)(char *, uint64_t))v110[1])(v116, v111);
            objc_msgSend(v114, sel_dateData);
            id v117 = (id)HKDecodeDateForValue();
            sub_241CD6CB0();

            uint64_t v118 = v174;
            sub_241CD67C0();
            swift_release();
            uint64_t v119 = v153;
            sub_241B8A848(v153, (uint64_t)&qword_26B038F10, MEMORY[0x263F062D0], (uint64_t (*)(void))sub_241A3A7D0);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v164)(v118, 0, 1, v111);
            sub_241A3AAA0(v118, v119);
          }
          sub_241CD89A0();
          sub_241A3A9CC();
          uint64_t v121 = *(int *)(v120 + 48);
          unint64_t v168 = v52;
          objc_msgSend(v112, sel_dateData);
          id v122 = (id)HKDecodeDateForValue();
          uint64_t v123 = v170;
          sub_241CD6CB0();

          *(unsigned char *)(v123 + v121) = 1;
          uint64_t v124 = *MEMORY[0x263F43F18];
          uint64_t v125 = sub_241CD8610();
          uint64_t v126 = *(void *)(v125 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 104))(v123, v124, v125);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
          uint64_t v169 = sub_241CD8990();
          uint64_t v170 = MEMORY[0x263F06828];
          sub_241A3AA34(v167, v149, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
          uint64_t v127 = v160;
          uint64_t v128 = v161;
          (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v148, v166, v161);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v150, 1, 1, v128);
          v180[0] = 0x5F74656764696E53;
          v180[1] = 0xE800000000000000;
          id v129 = *(id *)(v165 + 16);
          id v130 = objc_msgSend(v129, sel_description);
          sub_241CDB0D0();

          sub_241CDB180();
          swift_bridgeObjectRelease();
          uint64_t v131 = v151;
          sub_241CD8E60();
          swift_bridgeObjectRelease();
          uint64_t v132 = sub_241CD8E70();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v131, 0, 1, v132);
          sub_241CD8FF0();
          swift_allocObject();
          uint64_t v176 = (void *)sub_241CD8FE0();
          swift_retain();
          uint64_t v133 = v179;
          objc_msgSend(v179, sel_dateData);
          id v134 = (id)HKDecodeDateForValue();
          sub_241CD6CB0();

          uint64_t v135 = (uint64_t)v171;
          sub_241CD79D0();
          uint64_t v136 = sub_241CD7A10();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v135, 0, 1, v136);
          uint64_t v137 = MEMORY[0x263F062D0];
          uint64_t v138 = v153;
          uint64_t v139 = v174;
          sub_241A3AA34(v153, v174, &qword_26B038F10, MEMORY[0x263F062D0]);
          sub_241A3A878();
          uint64_t v142 = v172;
          uint64_t v141 = v173;
          uint64_t v143 = (char *)v173 + *(int *)(v140 + 52);
          swift_bridgeObjectRetain();
          sub_241B4A1A8(1, v135, v142, v139, v143);
          swift_release();

          uint64_t v144 = (uint64_t)v178;
          swift_release();
          uint64_t v145 = (uint64_t)v176;
          *uint64_t v141 = v169;
          v141[1] = v145;
          v141[2] = v144;
          sub_241B8A848(v138, (uint64_t)&qword_26B038F10, v137, (uint64_t (*)(void))sub_241A3A7D0);
          sub_241B8A848(v167, (uint64_t)&qword_26B031FB8, v170, (uint64_t (*)(void))sub_241A3A7D0);
          (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v166, v161);
          return;
        }
LABEL_23:
        __break(1u);
        return;
      }
    }
    uint64_t v78 = sub_241CD7A10();
    uint64_t v79 = (uint64_t)v171;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v171, 1, 1, v78);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v168[7])(v69, 1, 1, v169);
    uint64_t v80 = v172;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v79, v80, v69, v16);
    sub_241CD89A0();
    uint64_t v81 = sub_241CD8610();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v170, 1, 1, v81);
    id v82 = v52;
    uint64_t v83 = sub_241CD8990();
    sub_241A3A878();
    unint64_t v85 = v173;
    sub_241B8A780((uint64_t)v16, (uint64_t)v173 + *(int *)(v84 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v85[1] = 0;
    v85[2] = 0;
    *unint64_t v85 = v83;
    sub_241B8A7E8((uint64_t)v16, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  sub_241CDA0F0();
  sub_241B8A780((uint64_t)v4, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
  uint64_t v55 = (uint64_t)v177;
  sub_241B8A780((uint64_t)v4, (uint64_t)v177, (uint64_t (*)(void))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
  uint64_t v56 = sub_241CDA190();
  os_log_type_t v57 = sub_241CDB650();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = swift_slowAlloc();
    unint64_t v179 = v13;
    uint64_t v59 = v55;
    uint64_t v60 = v58;
    id v178 = (id)swift_slowAlloc();
    v180[0] = (uint64_t)v178;
    *(_DWORD *)uint64_t v60 = 136315394;
    uint64_t v61 = sub_241AE0394(*v10, *((unsigned __int8 *)v10 + *(int *)(v6 + 24) + 8));
    uint64_t v181 = sub_241A33FE4(v61, v62, v180);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B8A7E8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
    *(_WORD *)(v60 + 12) = 2080;
    id v63 = objc_msgSend(*(id *)(v59 + *(int *)(v6 + 24) + 16), sel_sensitiveLoggingIdentifier);
    uint64_t v64 = sub_241CDB0D0();
    unint64_t v66 = v65;

    uint64_t v181 = sub_241A33FE4(v64, v66, v180);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B8A7E8((uint64_t)v177, (uint64_t (*)(void))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
    _os_log_impl(&dword_241A23000, v56, v57, "[%s]: unable to find display type: %s", (uint8_t *)v60, 0x16u);
    id v67 = v178;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v67, -1, -1);
    MEMORY[0x245637F20](v60, -1, -1);

    (*(void (**)(char *, void *))(v175 + 8))(v179, v176);
  }
  else
  {
    sub_241B8A7E8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
    sub_241B8A7E8(v55, (uint64_t (*)(void))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);

    (*(void (**)(char *, void *))(v175 + 8))(v13, v176);
  }
  sub_241A41340();
  swift_allocError();
  *id v77 = 0;
  swift_willThrow();
}

id sub_241B8A238(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  sub_241A3A7D0(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v28 - v7;
  uint64_t v9 = sub_241CD69B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v29 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v30 = (char *)v28 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v28 - v15;
  uint64_t v17 = sub_241CD9800();
  v28[0] = sub_241B8A8A8();
  uint64_t v35 = v28[0];
  v34[0] = a4;
  id v18 = a4;
  v28[1] = "generateAllSummariesNeeded";
  _OWORD v28[2] = v17;
  sub_241CD97F0();
  sub_241B8A848((uint64_t)v34, (uint64_t)&qword_26B035010, MEMORY[0x263F8EE58] + 8, (uint64_t (*)(void))sub_241A94320);
  uint64_t v31 = v16;
  SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
  swift_bridgeObjectRelease();
  id result = objc_msgSend(a3, sel_value);
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v21 = (void *)sub_241CDB860();

    SnidgetStringBuilder.makeQuantityPrimaryAttributedString(displayType:quantity:)(v18, v21, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      uint64_t v22 = v30;
      sub_241CD69A0();
      sub_241B8A848((uint64_t)v8, (uint64_t)&qword_26B031FB8, MEMORY[0x263F06828], (uint64_t (*)(void))sub_241A3A7D0);
    }
    else
    {
      uint64_t v22 = v30;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v30, v8, v9);
    }
    if (objc_msgSend(a3, sel_valueClamped))
    {
      uint64_t v35 = v28[0];
      v34[0] = v18;
      id v23 = v18;
      sub_241CD97F0();
      sub_241B8A848((uint64_t)v34, (uint64_t)&qword_26B035010, MEMORY[0x263F8EE58] + 8, (uint64_t (*)(void))sub_241A94320);
      uint64_t v24 = v29;
      SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
      swift_bridgeObjectRelease();
      sub_241CD69A0();
      sub_241B88994(&qword_268D42EF0, MEMORY[0x263F06828]);
      sub_241CD6980();
      sub_241CD6980();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v10 + 8);
      v25(v24, v9);
      v25(v22, v9);
      uint64_t v26 = v33;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v33, v31, v9);
    }
    else
    {
      uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
      v27(v32, v22, v9);
      uint64_t v26 = v33;
      v27(v33, v31, v9);
    }
    return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241B8A724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241B8A780(v2 + *(int *)(a1 + 24), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241B8A75C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_241B8A780(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241B8A7E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241B8A848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_241B8A8A8()
{
  unint64_t result = qword_26B034D28;
  if (!qword_26B034D28)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B034D28);
  }
  return result;
}

uint64_t sub_241B8A8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v28 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SummaryModelProcessingResult();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v32 = (char *)&v27 - v11;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v16 = (char *)&v27 - v15;
  uint64_t v30 = v10;
  uint64_t v31 = v14;
  uint64_t v17 = (char *)&v27 + *(int *)(v14 + 48) - v15;
  id v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v18((char *)&v27 - v15, a1, v9);
  v18(v17, a2, v9);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v20 = v19(v16, 2, a3);
  if (v20)
  {
    if (v20 == 1)
    {
      if (v19(v17, 2, a3) != 1) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    if (v19(v17, 2, a3) == 2)
    {
LABEL_8:
      char v21 = 1;
LABEL_11:
      uint64_t v13 = v30;
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v27 = v7;
    v18(v32, (uint64_t)v16, v9);
    if (!v19(v17, 2, a3))
    {
      uint64_t v22 = v27;
      id v23 = v28;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v28, v17, a3);
      uint64_t v24 = v32;
      char v21 = sub_241CDB050();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v22 + 8);
      v25(v23, a3);
      v25(v24, a3);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v32, a3);
  }
LABEL_9:
  char v21 = 0;
  uint64_t v9 = v31;
LABEL_12:
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v9);
  return v21 & 1;
}

uint64_t sub_241B8AC50(uint64_t a1, uint64_t a2)
{
  if ((sub_241CDB050() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for SummaryModelDerivedContent() + 28);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a2 + v4);

  return sub_241A91014(v5, v6);
}

uint64_t sub_241B8ACC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B8A8E8(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t sub_241B8ACD0(uint64_t a1, uint64_t a2)
{
  return sub_241B8AC50(a1, a2);
}

uint64_t type metadata accessor for SummaryModelProcessingResult()
{
  return sub_241A91234();
}

uint64_t type metadata accessor for SummaryModelDerivedContent()
{
  return sub_241A91234();
}

uint64_t sub_241B8AD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

uint64_t sub_241B8AD14()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_241B8AD90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = v8;
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    unint64_t v9 = v10 + v8;
  }
  uint64_t v14 = *(_DWORD *)(v6 + 80);
  if (v14 <= 7 && v9 <= 0x18 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0)
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
    {
      if (v7 <= 1)
      {
        if (v8 <= 3)
        {
          unsigned int v19 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
          if (v19 > 0xFFFE)
          {
            uint64_t v18 = 4;
          }
          else
          {
            BOOL v20 = v19 != 0;
            BOOL v13 = v19 >= 0xFF;
            uint64_t v18 = 2;
            if (!v13) {
              uint64_t v18 = v20;
            }
          }
        }
        else
        {
          uint64_t v18 = 1;
        }
        v8 += v18;
      }
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
    }
  }
  else
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  return a1;
}

uint64_t sub_241B8AF88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 2, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_241B8B04C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
  {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          uint64_t v9 = 4;
        }
        else
        {
          BOOL v11 = v10 != 0;
          BOOL v12 = v10 >= 0xFF;
          uint64_t v9 = 2;
          if (!v12) {
            uint64_t v9 = v11;
          }
        }
      }
      else
      {
        uint64_t v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  return a1;
}

void *sub_241B8B19C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 2, v5);
  int v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (v9)
    {
      unsigned int v10 = *(_DWORD *)(v6 + 84);
      size_t v11 = *(void *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
        {
LABEL_5:
          uint64_t v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v15 = (~(-1 << (8 * v11)) - v10 + 2) >> (8 * v11);
        if (v15 > 0xFFFE)
        {
          uint64_t v12 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v12 = 2;
          if (!v17) {
            uint64_t v12 = v16;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  else
  {
    if (v9)
    {
      uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
      uint64_t v13 = v6 + 8;
      v14(a1, v5);
      unsigned int v10 = *(_DWORD *)(v13 + 76);
      size_t v11 = *(void *)(v13 + 56);
      if (v10 <= 1)
      {
        if (v11 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
  }
  return a1;
}

void *sub_241B8B36C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
  {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          uint64_t v9 = 4;
        }
        else
        {
          BOOL v11 = v10 != 0;
          BOOL v12 = v10 >= 0xFF;
          uint64_t v9 = 2;
          if (!v12) {
            uint64_t v9 = v11;
          }
        }
      }
      else
      {
        uint64_t v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  return a1;
}

void *sub_241B8B4BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 2, v5);
  int v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (v9)
    {
      unsigned int v10 = *(_DWORD *)(v6 + 84);
      size_t v11 = *(void *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
        {
LABEL_5:
          uint64_t v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        unsigned int v15 = (~(-1 << (8 * v11)) - v10 + 2) >> (8 * v11);
        if (v15 > 0xFFFE)
        {
          uint64_t v12 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v12 = 2;
          if (!v17) {
            uint64_t v12 = v16;
          }
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  else
  {
    if (v9)
    {
      uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
      uint64_t v13 = v6 + 8;
      v14(a1, v5);
      unsigned int v10 = *(_DWORD *)(v13 + 76);
      size_t v11 = *(void *)(v13 + 56);
      if (v10 <= 1)
      {
        if (v11 > 3) {
          goto LABEL_5;
        }
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
  }
  return a1;
}

uint64_t sub_241B8B68C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 2;
  uint64_t v7 = *(void *)(v4 + 64);
  if (v5 <= 1)
  {
    unsigned int v6 = 0;
    if (v7 <= 3)
    {
      unsigned int v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        uint64_t v8 = 4;
      }
      else
      {
        BOOL v10 = v9 != 0;
        BOOL v11 = v9 >= 0xFF;
        uint64_t v8 = 2;
        if (!v11) {
          uint64_t v8 = v10;
        }
      }
    }
    else
    {
      uint64_t v8 = 1;
    }
    v7 += v8;
  }
  if (!a2) {
    return 0;
  }
  int v12 = a2 - v6;
  if (a2 <= v6) {
    goto LABEL_30;
  }
  char v13 = 8 * v7;
  if (v7 <= 3)
  {
    unsigned int v15 = ((v12 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      int v14 = *(_DWORD *)((char *)a1 + v7);
      if (!v14) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_30:
      if (v6)
      {
        unsigned int v19 = (*(uint64_t (**)(void))(v4 + 48))();
        if (v19 >= 3) {
          return v19 - 2;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_30;
  }
LABEL_20:
  int v16 = (v14 - 1) << v13;
  if (v7 > 3) {
    int v16 = 0;
  }
  if (v7)
  {
    if (v7 <= 3) {
      int v17 = v7;
    }
    else {
      int v17 = 4;
    }
    switch(v17)
    {
      case 2:
        int v18 = *a1;
        break;
      case 3:
        int v18 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v18 = *(_DWORD *)a1;
        break;
      default:
        int v18 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v18 = 0;
  }
  return v6 + (v18 | v16) + 1;
}

void sub_241B8B880(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v8 = v7 - 2;
  size_t v9 = *(void *)(v6 + 64);
  if (v7 <= 1)
  {
    unsigned int v8 = 0;
    if (v9 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    v9 += v10;
  }
  BOOL v13 = a3 >= v8;
  unsigned int v14 = a3 - v8;
  if (v14 != 0 && v13)
  {
    if (v9 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    if (v9 < 4)
    {
      int v17 = (v16 >> (8 * v9)) + 1;
      if (v9)
      {
        int v19 = v16 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v9] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v17;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v9] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x241B8BB04);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        BOOL v20 = *(void (**)(void))(v6 + 56);
        v20();
      }
      return;
  }
}

uint64_t sub_241B8BB2C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 48))(a1, 2);
}

uint64_t sub_241B8BB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 56))(a1, a2, 2);
}

uint64_t sub_241B8BB8C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_241B8BC28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_241B8BD24(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241B8BD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241B8BE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241B8BEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_241B8BF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241B8BFA0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x241B8C0ECLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_241B8C100(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x241B8C2DCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unsigned int v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          void *v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

unsigned char *storeEnumTagSinglePayload for SummaryFeedItemGenerationFailure(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x241B8C3A0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryFeedItemGenerationFailure()
{
  return &type metadata for SummaryFeedItemGenerationFailure;
}

unint64_t sub_241B8C3DC()
{
  unint64_t result = qword_268D42EF8;
  if (!qword_268D42EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42EF8);
  }
  return result;
}

uint64_t sub_241B8C430(void (*a1)(id, void), uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = sub_241CD9EE0();
  unsigned int v7 = (void *)swift_allocObject();
  v7[2] = v2;
  v7[3] = a1;
  v7[4] = a2;
  if (!(v6 >> 62))
  {
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    uint64_t result = swift_retain_n();
    if (v8 >= 1) {
      goto LABEL_3;
    }
LABEL_8:
    id v24 = sub_241B8D0CC(MEMORY[0x263F8EE78]);
    a1(v24, 0);
    swift_release();
    swift_release();

    goto LABEL_9;
  }
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_241CDBF50();
  uint64_t result = swift_bridgeObjectRelease();
  if (v23 < 1) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v10 = (id)MEMORY[0x245637160](0, v6);
    goto LABEL_6;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(v6 + 32);
LABEL_6:
    unsigned int v11 = v10;
    id v12 = objc_msgSend(self, sel_queryDescriptorWithSampleType_, v10);

    id v13 = objc_msgSend(self, sel_sortDescriptorsForMostRecentSamples);
    sub_241A313AC(0, (unint64_t *)&qword_26B038848);
    sub_241CDB2C0();

    sub_241A33460();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_241CEB710;
    *(void *)(v14 + 32) = v12;
    sub_241CDB2E0();
    int v15 = (void *)swift_allocObject();
    uint64_t v16 = MEMORY[0x263F8EE78];
    void v15[2] = sub_241B8DE6C;
    v15[3] = v7;
    v15[4] = v16;
    v15[5] = v3;
    v15[6] = v6;
    v15[7] = 0;
    id v17 = objc_allocWithZone(MEMORY[0x263F0A6E0]);
    sub_241A313AC(0, &qword_26B036890);
    swift_retain();
    swift_bridgeObjectRetain();
    id v18 = v12;
    swift_retain();
    uint64_t v19 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    BOOL v20 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_241B8DE80;
    uint64_t aBlock[5] = v15;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241C856FC;
    aBlock[3] = &unk_26F5C4260;
    char v21 = _Block_copy(aBlock);
    id v22 = objc_msgSend(v17, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v19, 1, v20, v21);

    _Block_release(v21);
    swift_release();
    objc_msgSend(*(id *)(v3 + qword_26B041200 + 16), sel_executeQuery_, v22);
    swift_release();
    swift_release();

LABEL_9:
    swift_bridgeObjectRelease();
    return swift_release();
  }
  __break(1u);
  return result;
}

void sub_241B8C7FC(void *a1, char a2, uint64_t a3, void (*a4)(void, void), uint64_t a5)
{
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v14 = a1;
    sub_241CDA0F0();
    sub_241A960AC(a1, 1);
    swift_retain();
    sub_241A960AC(a1, 1);
    swift_retain();
    int v15 = sub_241CDA190();
    os_log_type_t v16 = sub_241CDB650();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v34 = a5;
      uint64_t v19 = v18;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v37 = v33;
      *(_DWORD *)uint64_t v19 = 136315394;
      id v35 = a4;
      int v32 = v17;
      sub_241CD9EF0();
      uint64_t v20 = MEMORY[0x245636610]();
      os_log_t v31 = v15;
      uint64_t v21 = v20;
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      uint64_t v36 = sub_241A33FE4(v21, v23, &v37);
      sub_241CDBBF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      uint64_t v36 = (uint64_t)a1;
      id v24 = a1;
      sub_241A3DA64();
      uint64_t v25 = sub_241CDB120();
      uint64_t v36 = sub_241A33FE4(v25, v26, &v37);
      a4 = (void (*)(void, void))v35;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A96038(a1, 1);
      sub_241A96038(a1, 1);
      os_log_t v27 = v31;
      _os_log_impl(&dword_241A23000, v31, (os_log_type_t)v32, "Failed to fetch latest samples for %s: %{public}s", (uint8_t *)v19, 0x16u);
      uint64_t v28 = v33;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v28, -1, -1);
      MEMORY[0x245637F20](v19, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_241A96038(a1, 1);
      sub_241A96038(a1, 1);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    id v29 = a1;
    a4(a1, 1);
    sub_241A96038(a1, 1);
    sub_241A96038(a1, 1);
  }
  else
  {
    id v35 = sub_241B8D0CC((unint64_t)a1);
    a4(v35, 0);
    id v13 = v35;
  }
}

void sub_241B8CB90(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void), uint64_t a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v22 > a2) {
      goto LABEL_3;
    }
LABEL_9:
    a4(a3, 0);
    return;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v24 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v11 = (id)MEMORY[0x245637160](a2, a1);
    goto LABEL_7;
  }
  if (a2 < 0)
  {
    __break(1u);
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a2)
  {
    id v11 = *(id *)(a1 + 8 * a2 + 32);
LABEL_7:
    id v12 = v11;
    id v13 = objc_msgSend(self, sel_queryDescriptorWithSampleType_, v11);

    id v14 = objc_msgSend(self, sel_sortDescriptorsForMostRecentSamples);
    sub_241A313AC(0, (unint64_t *)&qword_26B038848);
    sub_241CDB2C0();

    sub_241A33460();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_241CEB710;
    *(void *)(v15 + 32) = v13;
    sub_241CDB2E0();
    os_log_type_t v16 = (void *)swift_allocObject();
    v16[2] = a4;
    v16[3] = a5;
    v16[4] = a3;
    v16[5] = v24;
    v16[6] = a1;
    v16[7] = a2;
    id v23 = objc_allocWithZone(MEMORY[0x263F0A6E0]);
    sub_241A313AC(0, &qword_26B036890);
    swift_bridgeObjectRetain();
    id v17 = v13;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v18 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    uint64_t v19 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_241B8DE80;
    uint64_t aBlock[5] = v16;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241C856FC;
    aBlock[3] = &unk_26F5C42B0;
    uint64_t v20 = _Block_copy(aBlock);
    id v21 = objc_msgSend(v23, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v18, 1, v19, v20);

    _Block_release(v20);
    swift_release();
    objc_msgSend(*(id *)(v24 + qword_26B041200 + 16), sel_executeQuery_, v21);

    return;
  }
  __break(1u);
}

void sub_241B8CEC0(int a1, unint64_t a2, id a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, int a7, unint64_t a8, uint64_t a9)
{
  if (a3)
  {
    id v12 = a3;
    a4((uint64_t)a3, 1);

    return;
  }
  unint64_t v14 = a2;
  uint64_t v19 = a6;
  if (a2)
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v15 = (id)sub_241CDBF50();
      if (v15)
      {
LABEL_8:
        if ((v14 & 0xC000000000000001) != 0) {
          goto LABEL_23;
        }
        if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_25;
        }
        for (id i = *(id *)(v14 + 32); ; id i = (id)MEMORY[0x245637160](0, v14))
        {
          id v17 = i;
          swift_bridgeObjectRelease();
          objc_msgSend(v17, sel__setSourceRevision_, 0);
          id v15 = v17;
          MEMORY[0x2456365D0]();
          if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_25:
          }
            sub_241CDB2F0();
          sub_241CDB310();
          unint64_t v14 = (unint64_t)&v19;
          sub_241CDB2E0();

          uint64_t v18 = a9 + 1;
          if (!__OFADD__(a9, 1)) {
            break;
          }
LABEL_22:
          __break(1u);
LABEL_23:
          ;
        }
        goto LABEL_16;
      }
    }
    else
    {
      id v15 = *(id *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = a9 + 1;
    if (__OFADD__(a9, 1)) {
      goto LABEL_22;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = a9 + 1;
    if (__OFADD__(a9, 1)) {
      goto LABEL_22;
    }
  }
LABEL_16:
  sub_241B8CB90(a8, v18, v19, a4, a5);

  swift_bridgeObjectRelease();
}

id sub_241B8D0CC(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241CD6D00();
  uint64_t v72 = *(void **)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v71 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v69 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  id v73 = (char *)&v69 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)&v69 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v75 = (char *)&v69 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v69 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v69 - v21;
  MEMORY[0x270FA5388](v20);
  id v76 = (char *)&v69 - v23;
  uint64_t v24 = sub_241CDA1A0();
  MEMORY[0x270FA5388](v24);
  unint64_t v26 = &v69;
  uint64_t v28 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    id v74 = (void (**)(char *, uint64_t))v25;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    uint64_t v25 = (char *)v74;
    if (v29 <= 1) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v29 <= 1)
    {
LABEL_3:
      id v74 = (void (**)(char *, uint64_t))v25;
      sub_241CDA0F0();
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_241CDA190();
      os_log_type_t v31 = sub_241CDB670();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        id v76 = (char *)swift_slowAlloc();
        uint64_t v77 = v29;
        unint64_t v78 = (unint64_t)v76;
        *(_DWORD *)uint64_t v32 = 134218242;
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2080;
        uint64_t v75 = (char *)(v32 + 14);
        id v33 = objc_msgSend(*(id *)&v2[qword_26B041200+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)], sel_identifier);
        uint64_t v34 = sub_241CDB0D0();
        unint64_t v36 = v35;

        uint64_t v77 = sub_241A33FE4(v34, v36, (uint64_t *)&v78);
        sub_241CDBBF0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v30, v31, "%ld samples are not enough for %s correlation, returning no data", (uint8_t *)v32, 0x16u);
        uint64_t v37 = v76;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v37, -1, -1);
        MEMORY[0x245637F20](v32, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease();
      }
      v74[1](v28, v24);
      return 0;
    }
  }
  uint64_t v69 = v9;
  unint64_t v70 = v14;
  if ((a1 & 0xC000000000000001) == 0)
  {
    uint64_t v39 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v40 = (void (*)(char *, uint64_t))v76;
    if (v39)
    {
      if (v39 != 1)
      {
        uint64_t v41 = *(void **)(a1 + 40);
        id v42 = *(id *)(a1 + 32);
        id v74 = v41;
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  id v42 = (id)MEMORY[0x245637160](0, a1);
  id v74 = (void (**)(char *, uint64_t))MEMORY[0x245637160](1, a1);
  uint64_t v40 = (void (*)(char *, uint64_t))v76;
LABEL_12:
  id v43 = objc_msgSend(v42, sel_startDate, v69);
  sub_241CD6CB0();

  uint64_t v44 = v74;
  id v45 = objc_msgSend(v74, sel_startDate);
  sub_241CD6CB0();

  sub_241B8DE9C();
  char v46 = sub_241CDB010();
  uint64_t v47 = v42;
  uint64_t v48 = v72;
  uint64_t v49 = (void (*)(void (*)(void, void), char *, uint64_t))v72[2];
  if (v46) {
    id v50 = v19;
  }
  else {
    id v50 = v22;
  }
  v49((void (*)(void, void))v40, v50, v4);
  uint64_t v40 = (void (*)(char *, uint64_t))v48[1];
  v40(v19, v4);
  v40(v22, v4);
  uint64_t v72 = v47;
  id v51 = objc_msgSend(v47, sel_endDate);
  id v52 = v70;
  sub_241CD6CB0();

  id v53 = objc_msgSend(v44, sel_endDate);
  os_log_type_t v54 = v73;
  sub_241CD6CB0();

  if (sub_241CDB020()) {
    uint64_t v55 = v54;
  }
  else {
    uint64_t v55 = v52;
  }
  uint64_t v56 = v75;
  v49((void (*)(void, void))v75, v55, v4);
  v40(v54, v4);
  v40(v52, v4);
  sub_241A313AC(0, &qword_26B038048);
  id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bloodPressureType);
  if (result)
  {
    a1 = (unint64_t)result;
    uint64_t v9 = v69;
    v49((void (*)(void, void))v69, v76, v4);
    unint64_t v14 = v71;
    v49((void (*)(void, void))v71, v56, v4);
    sub_241A33460();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241CEDF90;
    uint64_t v59 = (char **)v72;
    uint64_t v2 = (char *)v74;
    *(void *)(inited + 32) = v72;
    *(void *)(inited + 40) = v2;
    unint64_t v78 = inited;
    sub_241CDB2E0();
    uint64_t v28 = (char *)v78;
    unint64_t v26 = v59;
    if (!(v78 >> 62))
    {
      uint64_t v60 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v61 = v59;
      unint64_t v62 = v2;
LABEL_21:
      id v63 = v9;
      if (v60) {
        sub_241C69AF4((unint64_t)v28);
      }
      swift_bridgeObjectRelease();
      uint64_t v64 = (void *)sub_241CD6C60();
      unint64_t v65 = (void *)sub_241CD6C60();
      sub_241A313AC(0, &qword_26B0304D8);
      sub_241B8DEF4();
      unint64_t v66 = (void *)sub_241CDB360();
      swift_bridgeObjectRelease();
      id v38 = objc_msgSend(self, sel_correlationWithType_startDate_endDate_objects_, a1, v64, v65, v66);

      v40(v14, v4);
      v40(v63, v4);

      v40(v75, v4);
      v40(v76, v4);
      return v38;
    }
LABEL_28:
    id v67 = v26;
    id v68 = v2;
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_241B8D924(void *a1, void *a2, void (*a3)(id, void))
{
  uint64_t v4 = v3;
  sub_241A5D1DC();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v29 - v12;
  sub_241A313AC(0, &qword_26B030488);
  unint64_t v14 = (void *)HKCodableSummaryBloodPressureValue.init(correlation:)(a1);
  uint64_t v15 = v4 + qword_26B041388;
  uint64_t v16 = sub_241CD9F00();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v15, v16);
  uint64_t v17 = *MEMORY[0x263F46C88];
  uint64_t v18 = sub_241CD9970();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v13, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
  id v20 = v14;
  id v21 = a2;
  id v22 = objc_msgSend(v20, sel_data);
  if (v22)
  {
    uint64_t v23 = v22;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v24 = sub_241CD6AE0();
    unint64_t v26 = v25;

    sub_241A5D234((uint64_t)v13, (uint64_t)v11);
    uint64_t v30 = 0;
    memset(v29, 0, sizeof(v29));
    id v27 = sub_241A54648(v24, v26, 5, (uint64_t)v11, (uint64_t)v21, 0, (uint64_t)v29);

    sub_241A37374(v24, v26);
    sub_241A32954((uint64_t)v13, (uint64_t (*)(void))sub_241A5D1DC);
    id v28 = v27;
    a3(v27, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_241B8DBD4()
{
  uint64_t v1 = v0 + qword_26B041388;
  uint64_t v2 = sub_241CD9F00();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_241B8DC40()
{
  sub_241A32954(v0 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_26B041388;
  uint64_t v4 = sub_241CD9F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B037F40;
  if (!qword_26B037F40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B8DD9C()
{
  uint64_t result = sub_241CD9F00();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241B8DE2C()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241B8DE6C(void *a1, char a2)
{
  sub_241B8C7FC(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(void, void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_241B8DE84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241B8DE94()
{
  return swift_release();
}

unint64_t sub_241B8DE9C()
{
  unint64_t result = qword_26B02E8D0;
  if (!qword_26B02E8D0)
  {
    sub_241CD6D00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B02E8D0);
  }
  return result;
}

unint64_t sub_241B8DEF4()
{
  unint64_t result = qword_26B0304E0;
  if (!qword_26B0304E0)
  {
    sub_241A313AC(255, &qword_26B0304D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0304E0);
  }
  return result;
}

uint64_t sub_241B8DF60()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_241B8DFB0(int a1, unint64_t a2, void *a3)
{
  sub_241B8CEC0(a1, a2, a3, *(void (**)(uint64_t, uint64_t))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56));
}

uint64_t sub_241B8DFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B8DFFC);
}

uint64_t sub_241B8DFFC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241B8E0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B8E0C0);
}

void *sub_241B8E0C0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B037F58;
  if (!qword_26B037F58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B8E1B8()
{
  return sub_241B8E2BC((unint64_t *)&qword_26B0320F0);
}

void sub_241B8E1EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241B8E488(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B8E288()
{
  return sub_241B8E2BC((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241B8E2BC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B8E1EC(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241B8E488((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241B8E488(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B8E3A0()
{
  return sub_241B8E488(&qword_26B0385F8, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
}

uint64_t sub_241B8E3E8()
{
  return sub_241B8E488(&qword_26B032B60, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
}

uint64_t sub_241B8E430(uint64_t a1)
{
  uint64_t result = sub_241B8E488(&qword_26B037F50, (void (*)(uint64_t))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241B8E488(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241B8E4D0()
{
  return sub_241B8E570(&qword_26B0383E0, (unint64_t *)&unk_26B0383E8, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241B8E520()
{
  return sub_241B8E570(&qword_26B032E30, (unint64_t *)&unk_26B032E38, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241B8E570(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241B8E5B4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B8E5B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241B8E1EC(255, &qword_26B032118, MEMORY[0x263F44150]);
    v9[0] = v6;
    v9[1] = &type metadata for SnidgetLevelChartView;
    void v9[2] = sub_241A3F5B0();
    v9[3] = sub_241A91BE8();
    void v9[4] = sub_241B8E2BC((unint64_t *)&qword_26B0320F0);
    v9[5] = sub_241B8E2BC((unint64_t *)&qword_26B0320E0);
    v9[6] = sub_241B8E488(&qword_26B0385F8, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
    v9[7] = sub_241B8E488(&qword_26B032B60, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
    unint64_t v7 = a3(a1, v9);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241B8E724(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v188 = a1;
  uint64_t v184 = a2;
  uint64_t v185 = a3;
  uint64_t v4 = type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v156 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (uint64_t *)((char *)&v156 - v8);
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v186 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 - 8);
  uint64_t v187 = (void *)v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v156 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35A38(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v183 = (char *)&v156 - v14;
  uint64_t v15 = sub_241CD6D00();
  MEMORY[0x270FA5388](v15 - 8);
  char v173 = (char *)&v156 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35A38(0, &qword_26B038880, MEMORY[0x263F45770]);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v181 = (char *)&v156 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v174 = (char *)&v156 - v20;
  uint64_t v21 = type metadata accessor for SnidgetFeedItemMetadata(0);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v182 = (char *)&v156 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v175 = (char *)&v156 - v24;
  sub_241A35A38(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v172 = (char *)&v156 - v26;
  sub_241A35A38(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v180 = (char *)&v156 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v169 = (char *)&v156 - v30;
  uint64_t v31 = sub_241CDA090();
  uint64_t v167 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v176 = (uint64_t)&v156 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_241CD7F90();
  uint64_t v165 = *(void *)(v166 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v166);
  unint64_t v164 = (char *)&v156 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v163 = (char *)&v156 - v35;
  uint64_t v162 = sub_241CD80F0();
  uint64_t v161 = *(void *)(v162 - 8);
  MEMORY[0x270FA5388](v162);
  uint64_t v160 = (char *)&v156 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35A38(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v38 = MEMORY[0x270FA5388](v37 - 8);
  uint64_t v171 = (char *)&v156 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v170 = (char *)&v156 - v41;
  MEMORY[0x270FA5388](v40);
  id v43 = (char *)&v156 - v42;
  uint64_t v44 = sub_241CD69B0();
  uint64_t v178 = *(void *)(v44 - 8);
  uint64_t v179 = v44;
  uint64_t v45 = MEMORY[0x270FA5388](v44);
  unint64_t v168 = (char *)&v156 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  uint64_t v177 = (char *)&v156 - v47;
  id v48 = objc_msgSend(self, sel_sharedBehavior);
  if (!v48)
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v49 = v48;
  id v50 = objc_msgSend(v48, sel_features);

  if (!v50)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  unsigned int v51 = objc_msgSend(v50, sel_nebula);

  if (!v51) {
    goto LABEL_24;
  }
  uint64_t v157 = v31;
  id v52 = self;
  id v53 = (void *)*v3;
  id v54 = objc_msgSend(v52, sel_sharedInstanceForHealthStore_, *v3);
  if (!v54)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v55 = v54;
  uint64_t v158 = (char *)v3 + *(int *)(v4 + 20);
  id v56 = objc_msgSend(v54, sel_displayTypeForObjectType_, *((void *)v158 + 2));

  id v159 = v56;
  if (v56)
  {
    uint64_t v57 = v189;
    sub_241ADFA18(v188);
    if (v57)
    {

      return;
    }
    unint64_t v71 = v58;
    if (!v58) {
      goto LABEL_27;
    }
    if (!objc_msgSend(v58, sel_hasQuantity)
      || !objc_msgSend(v71, sel_hasClassificationRawValue)
      || !objc_msgSend(v71, sel_hasLevelViewDataConfiguration))
    {
      goto LABEL_26;
    }
    id v72 = objc_msgSend(v71, sel_quantity);
    if (v72)
    {
      id v73 = v72;
      unsigned int v74 = objc_msgSend(v72, sel_hasDateData);

      if (v74)
      {
        id v75 = objc_msgSend(v71, sel_quantity);
        if (v75)
        {
          id v76 = v75;
          unsigned int v77 = objc_msgSend(v75, sel_hasValue);

          if (v77)
          {
            uint64_t v189 = (uint64_t)v71;
            unint64_t v78 = *(void **)&v158[*(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32)];
            type metadata accessor for SnidgetStringBuilder();
            uint64_t inited = (void *)swift_initStackObject();
            inited[2] = v53;
            uint64_t v80 = self;
            id v81 = v78;
            id v82 = v53;
            id v83 = objc_msgSend(v80, sel_sharedInstanceForHealthStore_, v82);
            inited[4] = v83;
            if (!v78)
            {
              id v84 = v83;
              id v81 = objc_msgSend(v84, sel_createHKUnitPreferenceController);
            }
            unint64_t v85 = (void *)v189;

            inited[3] = v81;
            id v86 = objc_msgSend(self, sel_localizedTitleForBreathingDisturbancesClassification_, objc_msgSend(v85, sel_classificationRawValue));
            sub_241CDB0D0();

            SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
            swift_bridgeObjectRelease();
            uint64_t v88 = v178;
            uint64_t v87 = v179;
            uint64_t v89 = *(void (**)(char *, void, uint64_t, uint64_t))(v178 + 56);
            v89(v43, 0, 1, v179);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v43, 1, v87) == 1)
            {
              sub_241AD16D0((uint64_t)v43);
              uint64_t v90 = sub_241CD7A10();
              uint64_t v91 = (uint64_t)v181;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v181, 1, 1, v90);
              uint64_t v92 = sub_241CD6810();
              uint64_t v93 = (uint64_t)v183;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v183, 1, 1, v92);
              uint64_t v94 = v184;
              swift_bridgeObjectRetain();
              uint64_t v95 = v182;
              sub_241B4A1A8(0, v91, v94, v93, v182);
              sub_241CD89A0();
              uint64_t v96 = sub_241CD8610();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v180, 1, 1, v96);
              id v97 = v159;
              uint64_t v98 = sub_241CD8990();
              sub_241A919AC(0);
              uint64_t v100 = v185;
              sub_241A55E9C((uint64_t)v95, (uint64_t)v185 + *(int *)(v99 + 52), type metadata accessor for SnidgetFeedItemMetadata);

              swift_release();
              v100[1] = 0;
              v100[2] = 0;
              uint64_t *v100 = v98;
              sub_241B8FCA8((uint64_t)v95, type metadata accessor for SnidgetFeedItemMetadata);
              return;
            }
            uint64_t v187 = inited;
            (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v177, v43, v87);
            id v113 = objc_msgSend(v85, sel_levelViewDataConfiguration);
            if (v113)
            {
              uint64_t v114 = v113;
              id v115 = objc_msgSend(v159, sel_objectType);
              uint64_t v116 = v160;
              sub_241CD8100();
              uint64_t v117 = v161;
              uint64_t v118 = *(void (**)(char *, char *, uint64_t))(v161 + 16);
              uint64_t v186 = v89;
              uint64_t v119 = v163;
              uint64_t v120 = v162;
              v118(v163, v116, v162);
              uint64_t v121 = v165;
              uint64_t v122 = v166;
              (*(void (**)(char *, void, uint64_t))(v165 + 104))(v119, *MEMORY[0x263F43630], v166);
              LevelView.DataConfiguration.init(codable:)(v114, v176);
              (*(void (**)(char *, uint64_t))(v117 + 8))(v116, v120);
              uint64_t v123 = *(void (**)(char *, char *, uint64_t))(v121 + 32);
              uint64_t v124 = v164;
              uint64_t v125 = v119;
              uint64_t v89 = v186;
              v123(v164, v125, v122);
              type metadata accessor for SnidgetLevelChartView.ViewModel();
              uint64_t v126 = (char *)swift_allocObject();
              (*(void (**)(char *, uint64_t, uint64_t))(v167 + 32))(&v126[OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration], v176, v157);
              uint64_t v188 = v126;
              uint64_t v127 = &v126[OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor];
              unint64_t v85 = (void *)v189;
              v123(v127, v124, v122);
            }
            else
            {
              uint64_t v188 = 0;
            }
            id v128 = objc_msgSend(v85, sel_quantity);
            if (v128)
            {
              id v129 = v128;
              id v130 = v85;
              sub_241CD89A0();
              sub_241A3A9CC();
              uint64_t v132 = *(int *)(v131 + 48);
              objc_msgSend(v129, sel_dateData);
              id v133 = (id)HKDecodeDateForValue();
              id v134 = v169;
              sub_241CD6CB0();

              v134[v132] = 0;
              uint64_t v135 = *MEMORY[0x263F43F18];
              uint64_t v136 = sub_241CD8610();
              uint64_t v137 = *(void *)(v136 - 8);
              (*(void (**)(char *, uint64_t, uint64_t))(v137 + 104))(v134, v135, v136);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v134, 0, 1, v136);
              uint64_t v186 = (void (*)(char *, void, uint64_t, uint64_t))v159;
              uint64_t v182 = (unsigned char *)sub_241CD8990();
              uint64_t v138 = v179;
              v89(v170, 1, 1, v179);
              (*(void (**)(char *, char *, uint64_t))(v178 + 16))(v168, v177, v138);
              v89(v171, 1, 1, v138);
              v190[0] = 0x5F74656764696E53;
              v190[1] = 0xE800000000000000;
              id v139 = *((id *)v158 + 2);
              id v140 = objc_msgSend(v139, sel_description);
              sub_241CDB0D0();

              sub_241CDB180();
              swift_bridgeObjectRelease();
              uint64_t v141 = v172;
              sub_241CD8E50();
              swift_bridgeObjectRelease();
              uint64_t v142 = sub_241CD8E70();
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v142 - 8) + 56))(v141, 0, 1, v142);
              sub_241CD8FF0();
              swift_allocObject();
              uint64_t v143 = sub_241CD8FE0();
              uint64_t v144 = (uint64_t)v188;
              swift_retain();
              id v145 = objc_msgSend(v130, sel_quantity);
              if (v145)
              {
                uint64_t v146 = v145;
                objc_msgSend(v145, sel_dateData);
                id v147 = (id)HKDecodeDateForValue();
                sub_241CD6CB0();

                uint64_t v148 = (uint64_t)v174;
                sub_241CD79D0();
                uint64_t v149 = sub_241CD7A10();
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v149 - 8) + 56))(v148, 0, 1, v149);
                uint64_t v150 = sub_241CD6810();
                uint64_t v151 = (uint64_t)v183;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v150 - 8) + 56))(v183, 1, 1, v150);
                uint64_t v152 = v184;
                swift_bridgeObjectRetain();
                uint64_t v153 = v175;
                sub_241B4A1A8(1, v148, v152, v151, v175);

                swift_release();
                swift_release();
                uint64_t v154 = v185;
                *uint64_t v185 = (uint64_t)v182;
                v154[1] = v143;
                v154[2] = v144;
                sub_241A919AC(0);
                sub_241B853D0((uint64_t)v153, (uint64_t)v154 + *(int *)(v155 + 52));
                (*(void (**)(char *, uint64_t))(v178 + 8))(v177, v179);
                return;
              }
              goto LABEL_40;
            }
LABEL_39:
            swift_release();
            __break(1u);
LABEL_40:
            swift_release();
            __break(1u);
            return;
          }
          goto LABEL_26;
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
LABEL_26:

LABEL_27:
      uint64_t v102 = sub_241CD7A10();
      uint64_t v103 = (uint64_t)v181;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v181, 1, 1, v102);
      uint64_t v104 = sub_241CD6810();
      uint64_t v105 = (uint64_t)v183;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v183, 1, 1, v104);
      uint64_t v106 = v184;
      swift_bridgeObjectRetain();
      uint64_t v107 = v182;
      sub_241B4A1A8(0, v103, v106, v105, v182);
      sub_241CD89A0();
      uint64_t v108 = sub_241CD8610();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v180, 1, 1, v108);
      id v109 = v159;
      uint64_t v110 = sub_241CD8990();
      sub_241A919AC(0);
      id v112 = v185;
      sub_241A55E9C((uint64_t)v107, (uint64_t)v185 + *(int *)(v111 + 52), type metadata accessor for SnidgetFeedItemMetadata);

      v112[1] = 0;
      v112[2] = 0;
      *id v112 = v110;
      sub_241B8FCA8((uint64_t)v107, type metadata accessor for SnidgetFeedItemMetadata);
      return;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  sub_241CDA0F0();
  sub_241A55E9C((uint64_t)v3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
  sub_241A55E9C((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
  uint64_t v59 = sub_241CDA190();
  os_log_type_t v60 = sub_241CDB650();
  int v61 = v60;
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v62 = swift_slowAlloc();
    LODWORD(v188) = v61;
    uint64_t v63 = v62;
    uint64_t v189 = swift_slowAlloc();
    v190[0] = v189;
    *(_DWORD *)uint64_t v63 = 136315394;
    uint64_t v64 = sub_241AE03CC(*v9, *((unsigned __int8 *)v9 + *(int *)(v4 + 20) + 8));
    uint64_t v191 = sub_241A33FE4(v64, v65, v190);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B8FCA8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
    *(_WORD *)(v63 + 12) = 2080;
    uint64_t v185 = (uint64_t *)(v63 + 14);
    id v66 = objc_msgSend(*(id *)&v7[*(int *)(v4 + 20) + 16], sel_sensitiveLoggingIdentifier);
    uint64_t v67 = sub_241CDB0D0();
    unint64_t v69 = v68;

    uint64_t v191 = sub_241A33FE4(v67, v69, v190);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B8FCA8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
    _os_log_impl(&dword_241A23000, v59, (os_log_type_t)v188, "[%s]: unable to find display type: %s", (uint8_t *)v63, 0x16u);
    uint64_t v70 = v189;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v70, -1, -1);
    MEMORY[0x245637F20](v63, -1, -1);
  }
  else
  {
    sub_241B8FCA8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
    sub_241B8FCA8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
  }

  (*((void (**)(char *, void *))v186 + 1))(v12, v187);
LABEL_24:
  sub_241A41340();
  swift_allocError();
  *uint64_t v101 = 0;
  swift_willThrow();
}

uint64_t sub_241B8FC4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241A55E9C(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241B8FC84(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_241B8FCA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for ActivitySummaryAdditionalInputSignalsProvider()
{
  return &type metadata for ActivitySummaryAdditionalInputSignalsProvider;
}

id sub_241B8FD1C()
{
  sub_241A78918();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_241CEB720;
  sub_241A33460();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  sub_241B8FEF0();
  id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_activityCacheType);
  if (result)
  {
    *(void *)(inited + 32) = result;
    sub_241CDB2E0();
    if (inited >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_241CDBF50();
      swift_bridgeObjectRelease();
      if (!v3) {
        goto LABEL_6;
      }
    }
    else if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      swift_bridgeObjectRelease();
      *(void *)(v0 + 56) = sub_241CD7DC0();
      *(void *)(v0 + 64) = sub_241B58BE0(&qword_26B035580, MEMORY[0x263F459A0]);
      sub_241A25BC8((uint64_t *)(v0 + 32));
      sub_241CD7DB0();
      sub_241CD96C0();
      *(void *)(v0 + 96) = sub_241CD9680();
      *(void *)(v0 + 104) = sub_241B58BE0((unint64_t *)&qword_26B035600, MEMORY[0x263F453F0]);
      sub_241A25BC8((uint64_t *)(v0 + 72));
      sub_241CD96B0();
      return (id)v0;
    }
    sub_241C69AD0(inited);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

unint64_t sub_241B8FEF0()
{
  unint64_t result = qword_26B038E58;
  if (!qword_26B038E58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B038E58);
  }
  return result;
}

uint64_t sub_241B8FF30@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v52 = a4;
  uint64_t v54 = a3;
  id v44 = a2;
  id v45 = a1;
  uint64_t v46 = type metadata accessor for TrendNotificationModel();
  uint64_t v43 = *(void *)(v46 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v46);
  uint64_t v41 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v40 = (uint64_t)&v39 - v8;
  uint64_t v9 = sub_241CD7C10();
  uint64_t v53 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B96254(0);
  uint64_t v49 = v12;
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v39 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v21 = (int *)type metadata accessor for TrendCoalescingNotificationViewModel();
  uint64_t v22 = (uint64_t)a5 + v21[5];
  uint64_t v23 = sub_241CD78F0();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v48 = v22;
  v24(v22, 1, 1, v23);
  uint64_t v47 = v21[6];
  *(void *)((char *)a5 + v47) = MEMORY[0x263F8EE78];
  *((unsigned char *)a5 + v21[7]) = 0;
  id v50 = a5;
  uint64_t v51 = v9;
  id v25 = v45;
  *a5 = v45;
  uint64_t v26 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v11, v54, v9);
  id v45 = v25;
  id v27 = v44;
  sub_241B7A90C(v27, (uint64_t)v11, (uint64_t)v20);
  sub_241B963EC(0, &qword_268D42F18, (uint64_t (*)(uint64_t))sub_241B96254, MEMORY[0x263F8E0F8]);
  unint64_t v28 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_241CEB730;
  uint64_t v30 = v29 + v28;
  sub_241B96350((uint64_t)v20, v29 + v28, (uint64_t (*)(void))sub_241B96254);
  sub_241B96350(v30, (uint64_t)v18, (uint64_t (*)(void))sub_241B96254);
  sub_241B964B0((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))sub_241B96254);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v15, 1, v46) == 1)
  {
    sub_241B96450((uint64_t)v15, (uint64_t (*)(void))sub_241B96254);
    unint64_t v31 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v32 = v40;
    sub_241B964B0((uint64_t)v15, v40, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
    uint64_t v33 = v41;
    sub_241B964B0(v32, v41, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
    unint64_t v31 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v31 = sub_241AF7BF8(0, *(void *)(v31 + 16) + 1, 1, v31);
    }
    unint64_t v35 = *(void *)(v31 + 16);
    unint64_t v34 = *(void *)(v31 + 24);
    if (v35 >= v34 >> 1) {
      unint64_t v31 = sub_241AF7BF8(v34 > 1, v35 + 1, 1, v31);
    }
    *(void *)(v31 + 16) = v35 + 1;
    sub_241B964B0(v33, v31+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v35, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
  }

  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v51);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_241B96450((uint64_t)v20, (uint64_t (*)(void))sub_241B96254);
  uint64_t v36 = v50;
  uint64_t v37 = v47;
  swift_bridgeObjectRelease();
  *(void *)((char *)v36 + v37) = v31;
  return sub_241B96288(v52, v48);
}

uint64_t sub_241B90494()
{
  uint64_t v1 = sub_241CD6D70();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 0xD00000000000001BLL;
  v8[1] = 0x8000000241CE2170;
  id v5 = objc_msgSend(*v0, sel_profileIdentifier);
  id v6 = objc_msgSend(v5, sel_identifier);

  sub_241CD6D50();
  sub_241CD6D20();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v8[0];
}

id sub_241B905E8()
{
  uint64_t v1 = v0;
  uint64_t v91 = type metadata accessor for TrendCoalescingNotificationViewModel();
  uint64_t v2 = MEMORY[0x270FA5388](v91);
  v85[1] = (char *)v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v94 = (uint64_t)v85 - v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v93 = (uint64_t)v85 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v90 = (char *)v85 - v8;
  uint64_t v96 = sub_241CDA1A0();
  uint64_t v9 = *(void *)(v96 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v96);
  v85[2] = (char *)v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v85 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v92 = (char *)v85 - v15;
  uint64_t v99 = type metadata accessor for TrendNotificationModel();
  uint64_t v86 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v98 = (uint64_t)v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_241CD7C10();
  uint64_t v17 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v100 = (char *)v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B963B8(0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v89 = (uint64_t)v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_241CD6D70();
  uint64_t v88 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v22 = (char *)v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v97 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F1DEF0]), sel_init);
  id v23 = *v0;
  type metadata accessor for TrendLocalization();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v23;
  *(void *)(inited + 24) = 0;
  *(unsigned char *)(inited + 32) = 0;
  id v25 = v23;
  sub_241B91BE4();
  if (!v26)
  {
LABEL_14:
    uint64_t v95 = inited;
    uint64_t v59 = v14;
    sub_241CDA0F0();
    uint64_t v60 = v93;
    sub_241B96350((uint64_t)v0, v93, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
    uint64_t v61 = v94;
    sub_241B96350((uint64_t)v0, v94, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
    uint64_t v62 = sub_241CDA190();
    os_log_type_t v63 = sub_241CDB650();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      uint64_t v101 = (uint64_t)v59;
      uint64_t v66 = v65;
      uint64_t v103 = v65;
      *(_DWORD *)uint64_t v64 = 136380931;
      uint64_t v67 = sub_241B91628();
      uint64_t v102 = sub_241A33FE4((uint64_t)v67, v68, &v103);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B96450(v60, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
      *(_WORD *)(v64 + 12) = 2081;
      uint64_t v69 = sub_241B91964();
      uint64_t v102 = sub_241A33FE4(v69, v70, &v103);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B96450(v61, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
      _os_log_impl(&dword_241A23000, v62, v63, "[Trend Notification] Could not create notification title or body with identifier %{private}s for notification: %{private}s", (uint8_t *)v64, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v66, -1, -1);
      MEMORY[0x245637F20](v64, -1, -1);

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v101, v96);
    }
    else
    {
      swift_release();

      sub_241B96450(v60, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
      sub_241B96450(v61, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v59, v96);
    }
    return 0;
  }
  uint64_t v87 = v9;
  sub_241B91D50(inited);
  if (!v27)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v87;
    goto LABEL_14;
  }
  unint64_t v28 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  uint64_t v29 = v25;
  id v30 = v97;
  objc_msgSend(v97, sel_setTitle_, v28);

  unint64_t v31 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setBody_, v31);

  uint64_t v32 = (void *)sub_241CDB090();
  objc_msgSend(v30, sel_setCategoryIdentifier_, v32);

  id v33 = objc_msgSend(v29, sel_profileIdentifier);
  id v34 = objc_msgSend(v33, sel_identifier);

  sub_241CD6D50();
  sub_241CD6D20();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v22, v95);
  unint64_t v35 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setThreadIdentifier_, v35);

  uint64_t v36 = sub_241B96210(&qword_268D42F38);
  uint64_t v37 = v91;
  uint64_t v38 = (void *)sub_241CD8840();
  objc_msgSend(v30, sel_setSound_, v38);

  uint64_t v39 = *(uint64_t *)((char *)v1 + *(int *)(v37 + 24));
  int64_t v40 = *(void *)(v39 + 16);
  uint64_t v41 = MEMORY[0x263F8EE78];
  v85[0] = v1;
  if (v40)
  {
    uint64_t v94 = v36;
    uint64_t v95 = inited;
    uint64_t v103 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_241A524A0(0, v40, 0);
    uint64_t v42 = *(unsigned __int8 *)(v86 + 80);
    uint64_t v93 = v39;
    uint64_t v43 = v39 + ((v42 + 32) & ~v42);
    uint64_t v44 = *(void *)(v86 + 72);
    uint64_t v46 = v100;
    uint64_t v45 = v101;
    do
    {
      uint64_t v47 = v98;
      sub_241B96350(v43, v98, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v46, v47 + *(int *)(v99 + 24), v45);
      sub_241B96450(v47, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      uint64_t v41 = v103;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_241A524A0(0, *(void *)(v41 + 16) + 1, 1);
        uint64_t v41 = v103;
      }
      unint64_t v49 = *(void *)(v41 + 16);
      unint64_t v48 = *(void *)(v41 + 24);
      if (v49 >= v48 >> 1)
      {
        sub_241A524A0(v48 > 1, v49 + 1, 1);
        uint64_t v41 = v103;
      }
      *(void *)(v41 + 16) = v49 + 1;
      unint64_t v50 = v41
          + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))
          + *(void *)(v17 + 72) * v49;
      uint64_t v46 = v100;
      uint64_t v45 = v101;
      (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v50, v100, v101);
      uint64_t v103 = v41;
      v43 += v44;
      --v40;
    }
    while (v40);
    swift_bridgeObjectRelease();
    uint64_t v1 = (id *)v85[0];
  }
  uint64_t v51 = v89;
  sub_241B91FA8(v89);
  sub_241B59E10(v41);
  swift_bridgeObjectRelease();
  sub_241B96450(v51, (uint64_t (*)(void))sub_241B963B8);
  uint64_t v52 = (void *)sub_241CDAF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v97, sel_setUserInfo_, v52);

  id v53 = objc_msgSend(*v1, sel_profileIdentifier);
  id v54 = objc_msgSend(v53, sel_type);

  uint64_t v55 = v87;
  uint64_t v56 = (uint64_t)v90;
  if (v54 != (id)1)
  {
    sub_241AAD70C(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_241CEB710;
    uint64_t v58 = (void *)sub_241CDB4D0();
    uint64_t v72 = sub_241CD8810();

    *(void *)(v57 + 32) = v72;
    uint64_t v103 = v57;
    sub_241CDB2E0();
    sub_241A313AC(0, &qword_268D42F40);
    id v73 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v97, sel_setAttachments_, v73);
  }
  unsigned int v74 = v92;
  sub_241CDA0F0();
  sub_241B96350((uint64_t)v1, v56, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
  id v75 = sub_241CDA190();
  os_log_type_t v76 = sub_241CDB670();
  if (os_log_type_enabled(v75, v76))
  {
    unsigned int v77 = (uint8_t *)swift_slowAlloc();
    uint64_t v78 = v55;
    uint64_t v79 = swift_slowAlloc();
    uint64_t v103 = v79;
    *(_DWORD *)unsigned int v77 = 136380675;
    uint64_t v80 = sub_241B91964();
    uint64_t v102 = sub_241A33FE4(v80, v81, &v103);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241B96450(v56, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
    _os_log_impl(&dword_241A23000, v75, v76, "[Trend Notification] Creating coalesced notification request for notification: %{private}s", v77, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v79, -1, -1);
    MEMORY[0x245637F20](v77, -1, -1);

    (*(void (**)(char *, uint64_t))(v78 + 8))(v92, v96);
  }
  else
  {
    sub_241B96450(v56, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v74, v96);
  }
  sub_241B91628();
  id v82 = v97;
  id v83 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  id v71 = objc_msgSend(self, sel_requestWithIdentifier_content_trigger_, v83, v82, 0);
  swift_release();

  return v71;
}

void *sub_241B91628()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TrendNotificationModel();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (id *)((char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(void **)(v1 + *(int *)(type metadata accessor for TrendCoalescingNotificationViewModel() + 24));
  swift_bridgeObjectRetain_n();
  sub_241B93460(&v22);
  swift_bridgeObjectRelease();
  uint64_t v6 = v22[2];
  if (v6)
  {
    v21[1] = v22;
    v21[2] = v1;
    uint64_t v7 = (char *)v22 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v8 = *(void *)(v3 + 72);
    swift_retain();
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
    do
    {
      sub_241B96350((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      id v10 = objc_msgSend(*v5, sel_identifier);
      uint64_t v11 = (void *)sub_241CDB0D0();
      unint64_t v13 = v12;

      sub_241CD9FA0();
      uint64_t v22 = v11;
      unint64_t v23 = v13;
      sub_241CDB180();
      sub_241CDB180();
      swift_bridgeObjectRelease();
      uint64_t v14 = v22;
      unint64_t v15 = v23;
      sub_241B96450((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_241AF7104(0, v9[2] + 1, 1, v9);
      }
      unint64_t v17 = v9[2];
      unint64_t v16 = v9[3];
      if (v17 >= v16 >> 1) {
        uint64_t v9 = sub_241AF7104((void *)(v16 > 1), v17 + 1, 1, v9);
      }
      void v9[2] = v17 + 1;
      uint64_t v18 = &v9[2 * v17];
      v18[4] = v14;
      v18[5] = v15;
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_release_n();
  }
  else
  {
    swift_release();
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v22 = v9;
  sub_241AAD70C(0, (unint64_t *)&qword_26B034C78, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_241B075C0();
  sub_241CDAFF0();
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)0xD00000000000001BLL;
  unint64_t v23 = 0x8000000241CE2170;
  uint64_t v19 = (void *)sub_241CDB4D0();
  sub_241CD73D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_241B91964()
{
  uint64_t v1 = type metadata accessor for TrendNotificationModel();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (id *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_241CDBE00();
  sub_241CDB180();
  sub_241B91628();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241B90494();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for TrendCoalescingNotificationViewModel() + 24));
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_241CDBE80();
    uint64_t v8 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v9 = *(void *)(v2 + 72);
    do
    {
      sub_241B96350(v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      id v10 = *v4;
      sub_241B96450((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      sub_241CDBE60();
      sub_241CDBE90();
      sub_241CDBEA0();
      sub_241CDBE70();
      v8 += v9;
      --v6;
    }
    while (v6);
    uint64_t v7 = v14;
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = sub_241A313AC(0, (unint64_t *)&qword_26B038440);
  MEMORY[0x245636610](v7, v11);
  swift_bridgeObjectRelease();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_241B91BE4()
{
  uint64_t v1 = type metadata accessor for TrendCoalescingNotificationViewModel();
  uint64_t v2 = *(uint64_t *)((char *)v0 + *(int *)(v1 + 24));
  if (!*(void *)(v2 + 16)) {
    return 0;
  }
  uint64_t v3 = v1;
  id v4 = objc_msgSend(*v0, sel_profileIdentifier);
  id v5 = objc_msgSend(v4, sel_type);

  if (v5 == (id)2)
  {
    char v6 = *((unsigned char *)v0 + *(int *)(v3 + 28));
    uint64_t v7 = 0x8000000241CE21F0;
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v9 = 0xD000000000000027;
    return sub_241AE4D7C(v9, v7, v6, 0, 0xE000000000000000, v8);
  }
  if (*(void *)(v2 + 16) != 1)
  {
    char v6 = *((unsigned char *)v0 + *(int *)(v3 + 28));
    uint64_t v9 = 0xD000000000000029;
    uint64_t v7 = 0x8000000241CE21C0;
    uint64_t v8 = MEMORY[0x263F8EE78];
    return sub_241AE4D7C(v9, v7, v6, 0, 0xE000000000000000, v8);
  }
  uint64_t v11 = *(void *)(type metadata accessor for TrendNotificationModel() - 8);
  id v12 = objc_retain(*(id *)(v2
                          + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))));
  uint64_t v10 = sub_241ABF4A8(v12);

  return v10;
}

uint64_t sub_241B91D50(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TrendNotificationModel();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (id *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for TrendCoalescingNotificationViewModel();
  uint64_t v9 = *(uint64_t *)((char *)v1 + *(int *)(v8 + 24));
  if (!*(void *)(v9 + 16)) {
    return 0;
  }
  uint64_t v10 = v8;
  id v11 = objc_msgSend(*v1, sel_profileIdentifier);
  id v12 = objc_msgSend(v11, sel_type);

  uint64_t v13 = *(void *)(v9 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (!v13)
  {
LABEL_9:
    uint64_t v17 = sub_241AC1358(v14, (uint64_t)v12, (uint64_t)v2 + *(int *)(v10 + 20));
    swift_bridgeObjectRelease();
    return v17;
  }
  if (v13 != 1)
  {
    id v23 = v12;
    uint64_t v24 = a1;
    uint64_t v25 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_241CDBE80();
    uint64_t v18 = v9 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v19 = *(void *)(v5 + 72);
    do
    {
      sub_241B96350(v18, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      id v20 = *v7;
      sub_241B96450((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      sub_241CDBE60();
      sub_241CDBE90();
      sub_241CDBEA0();
      sub_241CDBE70();
      v18 += v19;
      --v13;
    }
    while (v13);
    uint64_t v14 = v25;
    swift_bridgeObjectRelease();
    id v12 = v23;
    goto LABEL_9;
  }
  uint64_t v15 = (uint64_t)v2 + *(int *)(v10 + 20);
  id v16 = objc_retain(*(id *)(v9
                          + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))));
  uint64_t v17 = sub_241AC00CC(v16, (uint64_t)v12, v15);

  return v17;
}

uint64_t sub_241B91FA8@<X0>(uint64_t a1@<X8>)
{
  sub_241B963B8(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v47 - v8;
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v47 - v10;
  uint64_t v12 = type metadata accessor for TrendNotificationModel();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (id *)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(uint64_t *)((char *)v1 + *(int *)(type metadata accessor for TrendCoalescingNotificationViewModel() + 24));
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    if (v17 == 1)
    {
      sub_241B96350(v16 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      id v18 = objc_msgSend(*v1, sel_profileIdentifier);
      id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F42A20]), sel_initWithProfileIdentifier_, v18);

      uint64_t v20 = sub_241CD9FA0();
      uint64_t v22 = v21;
      if (v20 == sub_241CD9FA0() && v22 == v23)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_241CDC100();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      id v36 = *v15;
      id v37 = objc_msgSend(v19, sel_URLForDataTypeDetailWithObjectType_trendOverlay_, v36, sub_241CDB9B0());

      if (v37)
      {
        sub_241CD6AA0();

        sub_241B96450((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        uint64_t v38 = sub_241CD6AC0();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v11, 0, 1, v38);
      }
      else
      {

        sub_241B96450((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        uint64_t v43 = sub_241CD6AC0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v11, 1, 1, v43);
      }
      uint64_t v44 = (uint64_t)v11;
    }
    else
    {
      id v28 = *v1;
      id v29 = objc_msgSend(v28, sel_profileIdentifier);
      id v30 = objc_msgSend(v29, sel_type);

      id v31 = objc_msgSend(v28, sel_profileIdentifier);
      if (v30 == (id)1)
      {
        id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F42A30]), sel_initWithProfileIdentifier_, v31);

        id v33 = objc_msgSend(v32, sel_URLForHealthTrends);
        if (v33)
        {
          id v34 = v33;
          sub_241CD6AA0();

          uint64_t v35 = sub_241CD6AC0();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v6, 0, 1, v35);
        }
        else
        {

          uint64_t v45 = sub_241CD6AC0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v6, 1, 1, v45);
        }
        uint64_t v44 = (uint64_t)v6;
      }
      else
      {
        id v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F42A28]), sel_initWithProfileIdentifier_, v31);

        id v40 = objc_msgSend(v39, sel_URLForSharingOverview);
        if (v40)
        {
          uint64_t v41 = v40;
          sub_241CD6AA0();

          uint64_t v42 = sub_241CD6AC0();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v9, 0, 1, v42);
        }
        else
        {

          uint64_t v46 = sub_241CD6AC0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v9, 1, 1, v46);
        }
        uint64_t v44 = (uint64_t)v9;
      }
    }
    return sub_241B964B0(v44, a1, (uint64_t (*)(void))sub_241B963B8);
  }
  else
  {
    uint64_t v25 = sub_241CD6AC0();
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    return v26(a1, 1, 1, v25);
  }
}

uint64_t sub_241B92588@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v114 = a2;
  uint64_t v113 = sub_241CDA1A0();
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v113);
  uint64_t v122 = (uint64_t)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v104 = (char *)&v99 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v107 = (char *)&v99 - v7;
  uint64_t v116 = type metadata accessor for TrendNotificationModel();
  uint64_t v110 = *(void *)(v116 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v116);
  uint64_t v118 = (uint64_t)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v117 = (uint64_t)&v99 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = ((char *)&v99 - v13);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v99 - v16;
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v99 - v18;
  sub_241B9631C(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for TrendCoalescingNotificationViewModel();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  id v30 = (char *)&v99 - v29;
  MEMORY[0x270FA5388](v28);
  id v32 = (char *)&v99 - v31;
  uint64_t v121 = a1;
  sub_241A37260(a1, (uint64_t)v125);
  sub_241A35FBC(0, &qword_268D42F28);
  int v33 = swift_dynamicCast();
  id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v111 = v23;
  if (v33)
  {
    uint64_t v119 = v17;
    os_log_t v120 = v14;
    uint64_t v100 = v27;
    v34(v22, 0, 1, v23);
    sub_241B964B0((uint64_t)v22, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
    uint64_t v35 = *(int *)(v23 + 24);
    uint64_t v36 = v115;
    uint64_t v37 = *(void *)(v115 + v35);
    uint64_t v38 = *(void *)(v37 + 16);
    uint64_t v39 = (uint64_t)v32;
    uint64_t v108 = v32;
    uint64_t v40 = (uint64_t)v30;
    if (v38)
    {
      unint64_t v106 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
      uint64_t v105 = v37 + v106;
      uint64_t v122 = *(void *)(v110 + 72);
      uint64_t v99 = v37;
      swift_bridgeObjectRetain();
      uint64_t v41 = 0;
      uint64_t v42 = v117;
      uint64_t v43 = v118;
      uint64_t v103 = v35;
      uint64_t v102 = v40;
      uint64_t v101 = v38;
      while (1)
      {
        uint64_t v44 = *(void *)(v39 + v35);
        uint64_t v45 = *(void *)(v44 + 16);
        if (v45) {
          break;
        }
LABEL_5:
        if (++v41 == v38)
        {
          swift_bridgeObjectRelease();
          uint64_t v36 = v115;
          goto LABEL_28;
        }
      }
      uint64_t v109 = v41;
      uint64_t v46 = v105 + v122 * v41;
      uint64_t v121 = sub_241A313AC(0, qword_26B038448);
      uint64_t v47 = v44 + v106;
      uint64_t v110 = v44;
      uint64_t v48 = v46;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_241B96350(v47, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        char v49 = sub_241CDBB60();
        uint64_t v50 = (uint64_t)v119;
        sub_241B96350((uint64_t)v19, (uint64_t)v119, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        os_log_t v51 = v120;
        sub_241B96350(v48, (uint64_t)v120, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        if ((v49 & 1) == 0) {
          break;
        }
        uint64_t v52 = sub_241CD9FA0();
        uint64_t v54 = v53;
        if (v52 == sub_241CD9FA0() && v54 == v55)
        {
          swift_bridgeObjectRelease_n();
          sub_241B96450((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
          sub_241B96450(v50, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
          uint64_t v42 = v117;
          sub_241B96350((uint64_t)v19, v117, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
          uint64_t v43 = v118;
          sub_241B96350(v48, v118, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        }
        else
        {
          char v57 = sub_241CDC100();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_241B96450((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
          sub_241B96450(v50, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
          uint64_t v42 = v117;
          sub_241B96350((uint64_t)v19, v117, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
          uint64_t v43 = v118;
          sub_241B96350(v48, v118, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
          if ((v57 & 1) == 0) {
            goto LABEL_9;
          }
        }
        char v58 = MEMORY[0x245632F30](v42 + *(int *)(v116 + 24), v43 + *(int *)(v116 + 24));
        sub_241B96450(v43, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        sub_241B96450(v42, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        sub_241B96450((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        if (v58)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v59 = v104;
          sub_241CDA0F0();
          uint64_t v60 = sub_241CDA190();
          os_log_type_t v61 = sub_241CDB670();
          if (os_log_type_enabled(v60, v61))
          {
            uint64_t v62 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v62 = 0;
            _os_log_impl(&dword_241A23000, v60, v61, "[Trend Notification] Duplicate trend detected; not coalescing",
              v62,
              2u);
            MEMORY[0x245637F20](v62, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v112 + 8))(v59, v113);
          os_log_type_t v63 = v114;
          v114[3] = v111;
          v63[4] = sub_241B96210(&qword_268D42B58);
          uint64_t v64 = sub_241A25BC8(v63);
          sub_241B96350(v115, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
          uint64_t v65 = (uint64_t)v108;
          return sub_241B96450(v65, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
        }
LABEL_10:
        v47 += v122;
        if (!--v45)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v39 = (uint64_t)v108;
          uint64_t v35 = v103;
          uint64_t v40 = v102;
          uint64_t v38 = v101;
          uint64_t v41 = v109;
          goto LABEL_5;
        }
      }
      sub_241B96450((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      sub_241B96450(v50, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      sub_241B96350((uint64_t)v19, v42, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      sub_241B96350(v48, v43, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
LABEL_9:
      sub_241B96450(v43, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      sub_241B96450(v42, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      sub_241B96450((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      goto LABEL_10;
    }
LABEL_28:
    unsigned int v77 = v107;
    sub_241CDA0F0();
    sub_241B96350(v36, v40, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
    uint64_t v78 = (uint64_t)v100;
    sub_241B96350(v36, (uint64_t)v100, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
    uint64_t v79 = sub_241CDA190();
    os_log_type_t v80 = sub_241CDB670();
    int v81 = v80;
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v82 = swift_slowAlloc();
      uint64_t v122 = swift_slowAlloc();
      v125[0] = v122;
      *(_DWORD *)uint64_t v82 = 136381187;
      swift_beginAccess();
      LODWORD(v121) = v81;
      id v83 = sub_241B91628();
      uint64_t v124 = sub_241A33FE4((uint64_t)v83, v84, v125);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v82 + 12) = 2081;
      unint64_t v85 = sub_241B91628();
      uint64_t v124 = sub_241A33FE4((uint64_t)v85, v86, v125);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B96450(v40, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
      *(_WORD *)(v82 + 22) = 2081;
      uint64_t v87 = v111;
      uint64_t v88 = swift_bridgeObjectRetain();
      uint64_t v89 = MEMORY[0x245636610](v88, v116);
      os_log_t v120 = v79;
      uint64_t v90 = v78;
      uint64_t v91 = v89;
      unint64_t v93 = v92;
      swift_bridgeObjectRelease();
      uint64_t v124 = sub_241A33FE4(v91, v93, v125);
      uint64_t v39 = (uint64_t)v108;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241B96450(v90, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
      os_log_t v94 = v120;
      _os_log_impl(&dword_241A23000, v120, (os_log_type_t)v121, "[Trend Notification] Coalescing notification %{private}s with notification %{private}s with configuration: %{private}s", (uint8_t *)v82, 0x20u);
      uint64_t v95 = v122;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v95, -1, -1);
      MEMORY[0x245637F20](v82, -1, -1);

      (*(void (**)(char *, uint64_t))(v112 + 8))(v107, v113);
    }
    else
    {
      sub_241B96450(v40, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
      sub_241B96450(v78, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);

      (*(void (**)(char *, uint64_t))(v112 + 8))(v77, v113);
      uint64_t v87 = v111;
    }
    swift_beginAccess();
    uint64_t v96 = swift_bridgeObjectRetain();
    sub_241AFFC80(v96);
    swift_endAccess();
    id v97 = v114;
    v114[3] = v87;
    v97[4] = sub_241B96210(&qword_268D42B58);
    uint64_t v98 = sub_241A25BC8(v97);
    sub_241B96350(v39, (uint64_t)v98, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
    uint64_t v65 = v39;
    return sub_241B96450(v65, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
  }
  else
  {
    uint64_t v66 = v115;
    v34(v22, 1, 1, v23);
    sub_241B96450((uint64_t)v22, (uint64_t (*)(void))sub_241B9631C);
    uint64_t v67 = v122;
    sub_241CDA0F0();
    sub_241A37260(v121, (uint64_t)v125);
    unint64_t v68 = sub_241CDA190();
    os_log_type_t v69 = sub_241CDB650();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      uint64_t v124 = v71;
      *(_DWORD *)uint64_t v70 = 136315394;
      v123[0] = sub_241A33FE4(0xD000000000000024, 0x8000000241CF0770, &v124);
      sub_241CDBBF0();
      *(_WORD *)(v70 + 12) = 2080;
      sub_241A37260((uint64_t)v125, (uint64_t)v123);
      uint64_t v72 = sub_241CDB120();
      v123[0] = sub_241A33FE4(v72, v73, &v124);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A31190((uint64_t)v125);
      _os_log_impl(&dword_241A23000, v68, v69, "%s Could not coalesce %s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v71, -1, -1);
      MEMORY[0x245637F20](v70, -1, -1);
    }
    else
    {
      sub_241A31190((uint64_t)v125);
    }

    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v67, v113);
    unsigned int v74 = v114;
    v114[3] = v111;
    v74[4] = sub_241B96210(&qword_268D42B58);
    id v75 = sub_241A25BC8(v74);
    return sub_241B96350(v66, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for TrendCoalescingNotificationViewModel);
  }
}

uint64_t type metadata accessor for TrendCoalescingNotificationViewModel()
{
  uint64_t result = qword_26B02F360;
  if (!qword_26B02F360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241B93460(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for TrendNotificationModel() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_241B9553C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_241B93508(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_241B93508(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v217 = sub_241CD6D70();
  uint64_t v4 = *(void *)(v217 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v217);
  int v216 = (char *)&v200 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v215 = (char *)&v200 - v7;
  uint64_t v224 = type metadata accessor for TrendNotificationModel();
  uint64_t v211 = *(void *)(v224 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v224);
  uint64_t v207 = (uint64_t)&v200 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v225 = (uint64_t)&v200 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (id *)((char *)&v200 - v13);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (id *)((char *)&v200 - v16);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v208 = (id *)((char *)&v200 - v19);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v212 = (uint64_t)&v200 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v204 = (id *)((char *)&v200 - v23);
  MEMORY[0x270FA5388](v22);
  uint64_t v203 = (id *)((char *)&v200 - v24);
  uint64_t v25 = a1[1];
  uint64_t result = sub_241CDC0C0();
  if (result >= v25)
  {
    if (v25 < 0) {
      goto LABEL_189;
    }
    if (v25) {
      return sub_241B946CC(0, v25, 1, a1);
    }
    return result;
  }
  if (v25 >= 0) {
    uint64_t v27 = v25;
  }
  else {
    uint64_t v27 = v25 + 1;
  }
  if (v25 < -1) {
    goto LABEL_197;
  }
  uint64_t v202 = result;
  long long v222 = a1;
  if (v25 < 2)
  {
    unint64_t v210 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80));
    uint64_t v201 = MEMORY[0x263F8EE78];
    if (v25 != 1)
    {
      unint64_t v33 = *(void *)(MEMORY[0x263F8EE78] + 16);
      id v32 = (char *)MEMORY[0x263F8EE78];
LABEL_152:
      uint64_t v213 = v2;
      if (v33 >= 2)
      {
        uint64_t v192 = *a1;
        uint64_t v191 = v201;
        while (1)
        {
          unint64_t v193 = v33 - 2;
          if (v33 < 2) {
            goto LABEL_184;
          }
          if (!v192) {
            goto LABEL_196;
          }
          id v194 = v32;
          uint64_t v195 = *(void *)&v32[16 * v193 + 32];
          uint64_t v196 = *(void *)&v32[16 * v33 + 24];
          uint64_t v197 = v213;
          sub_241B94CC8(v192 + *(void *)(v211 + 72) * v195, v192 + *(void *)(v211 + 72) * *(void *)&v32[16 * v33 + 16], v192 + *(void *)(v211 + 72) * v196, v210);
          uint64_t v213 = v197;
          if (v197) {
            goto LABEL_165;
          }
          if (v196 < v195) {
            goto LABEL_185;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v194 = sub_241B95528((uint64_t)v194);
          }
          if (v193 >= *((void *)v194 + 2)) {
            goto LABEL_186;
          }
          uint64_t v198 = &v194[16 * v193 + 32];
          *(void *)uint64_t v198 = v195;
          *((void *)v198 + 1) = v196;
          unint64_t v199 = *((void *)v194 + 2);
          if (v33 > v199) {
            goto LABEL_187;
          }
          memmove(&v194[16 * v33 + 16], &v194[16 * v33 + 32], 16 * (v199 - v33));
          id v32 = v194;
          *((void *)v194 + 2) = v199 - 1;
          unint64_t v33 = v199 - 1;
          if (v199 <= 2) {
            goto LABEL_165;
          }
        }
      }
      uint64_t v191 = v201;
LABEL_165:
      swift_bridgeObjectRelease();
      *(void *)(v191 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v213 = v1;
  }
  else
  {
    uint64_t v213 = v1;
    uint64_t v28 = v27 >> 1;
    uint64_t v29 = sub_241CDB300();
    *(void *)(v29 + 16) = v28;
    uint64_t v30 = *(unsigned __int8 *)(v211 + 80);
    uint64_t v201 = v29;
    unint64_t v210 = v29 + ((v30 + 32) & ~v30);
  }
  uint64_t v31 = 0;
  uint64_t v214 = (void (**)(char *, uint64_t))(v4 + 8);
  id v32 = (char *)MEMORY[0x263F8EE78];
  long long v221 = v14;
  unsigned int v226 = v17;
LABEL_16:
  uint64_t v34 = v31;
  uint64_t v35 = v31 + 1;
  uint64_t v206 = v32;
  uint64_t v209 = v31;
  if (v31 + 1 >= v25)
  {
    uint64_t v43 = v31 + 1;
    goto LABEL_101;
  }
  uint64_t v36 = v222;
  uint64_t v37 = *(void *)(v211 + 72);
  uint64_t v38 = *v222 + v37 * v35;
  uint64_t v218 = *v222;
  uint64_t v39 = v218;
  uint64_t v40 = v203;
  sub_241B96350(v38, (uint64_t)v203, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
  uint64_t v41 = v39 + v37 * v34;
  uint64_t v42 = v204;
  sub_241B96350(v41, (uint64_t)v204, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
  LODWORD(v228) = sub_241B7AD8C(v40, v42);
  sub_241B96450((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
  sub_241B96450((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
  uint64_t v43 = v34 + 2;
  uint64_t v229 = v37;
  if (v34 + 2 < v25)
  {
    uint64_t v44 = v218;
    uint64_t v219 = v37 * v43;
    uint64_t v220 = v37 * v35;
    uint64_t v45 = v208;
    uint64_t v227 = v25;
    while (1)
    {
      uint64_t v223 = v43;
      uint64_t v46 = (id *)v212;
      sub_241B96350(v44 + v219, v212, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      sub_241B96350(v44 + v220, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      id v47 = *v46;
      id v48 = objc_msgSend(*v46, sel_identifier);
      uint64_t v49 = sub_241CDB0D0();
      uint64_t v51 = v50;

      id v52 = *v45;
      id v53 = objc_msgSend(*v45, sel_identifier);
      uint64_t v54 = sub_241CDB0D0();
      uint64_t v56 = v55;

      if (v49 == v54 && v51 == v56) {
        break;
      }
      char v58 = sub_241CDC100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v58) {
        goto LABEL_28;
      }
      id v59 = objc_msgSend(v47, sel_identifier);
      uint64_t v60 = sub_241CDB0D0();
      uint64_t v62 = v61;

      id v63 = objc_msgSend(v52, sel_identifier);
      uint64_t v64 = sub_241CDB0D0();
      uint64_t v66 = v65;

      uint64_t v45 = v208;
      if (v60 == v64 && v62 == v66)
      {
        swift_bridgeObjectRelease_n();
        int v67 = 0;
      }
      else
      {
        int v67 = sub_241CDC100();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v17 = v226;
      uint64_t v74 = v212;
LABEL_42:
      uint64_t v25 = v227;
      sub_241B96450((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      sub_241B96450(v74, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      if ((v228 ^ v67))
      {
        uint64_t v36 = v222;
        uint64_t v43 = v223;
        uint64_t v34 = v209;
        uint64_t v37 = v229;
        goto LABEL_47;
      }
      uint64_t v43 = v223 + 1;
      uint64_t v37 = v229;
      v44 += v229;
      if (v25 == v223 + 1)
      {
        uint64_t v43 = v25;
        uint64_t v36 = v222;
        uint64_t v34 = v209;
        goto LABEL_47;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_28:
    int v68 = *(unsigned __int8 *)(v212 + 8);
    uint64_t v45 = v208;
    int v69 = *((unsigned __int8 *)v208 + 8);
    uint64_t v70 = sub_241CD9FA0();
    uint64_t v72 = v71;
    if (v70 == sub_241CD9FA0() && v72 == v73)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v74 = v212;
    }
    else
    {
      char v75 = sub_241CDC100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v74 = v212;
      if ((v75 & 1) == 0)
      {
        if (v68 == 5)
        {
          if (v69 != 4) {
            goto LABEL_40;
          }
          int v67 = 0;
        }
        else
        {
          if (v68 != 4 || v69 != 5) {
            goto LABEL_40;
          }
          int v67 = 1;
        }
LABEL_41:
        uint64_t v17 = v226;
        goto LABEL_42;
      }
    }
LABEL_40:
    os_log_type_t v76 = v215;
    sub_241CD7C00();
    unsigned int v77 = v216;
    sub_241CD7C00();
    int v67 = MEMORY[0x245632080](v76, v77);
    uint64_t v78 = *v214;
    uint64_t v79 = v77;
    uint64_t v80 = v217;
    (*v214)(v79, v217);
    v78(v76, v80);
    goto LABEL_41;
  }
  if ((v228 & 1) == 0) {
    goto LABEL_60;
  }
LABEL_47:
  if (v43 < v34) {
    goto LABEL_190;
  }
  if (v34 < v43)
  {
    uint64_t v227 = v25;
    uint64_t v81 = 0;
    uint64_t v82 = v37 * (v43 - 1);
    uint64_t v83 = v34;
    uint64_t v84 = v43 * v37;
    uint64_t v85 = v83;
    uint64_t v86 = v83 * v37;
    do
    {
      if (v85 != v43 + v81 - 1)
      {
        uint64_t v88 = v36;
        uint64_t v89 = v43;
        uint64_t v90 = v218;
        if (!v218) {
          goto LABEL_195;
        }
        unint64_t v91 = v218 + v86;
        uint64_t v228 = v218 + v82;
        sub_241B964B0(v218 + v86, v207, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        if (v86 < v82 || v91 >= v90 + v84)
        {
          uint64_t v87 = v228;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v87 = v228;
          if (v86 != v82) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        sub_241B964B0(v207, v87, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        uint64_t v43 = v89;
        uint64_t v36 = v88;
        uint64_t v37 = v229;
      }
      ++v85;
      --v81;
      v82 -= v37;
      v84 -= v37;
      v86 += v37;
    }
    while (v85 < v43 + v81);
    unint64_t v92 = v221;
    uint64_t v17 = v226;
    uint64_t v25 = v227;
    uint64_t v34 = v209;
    if (v43 >= v227) {
      goto LABEL_101;
    }
  }
  else
  {
LABEL_60:
    unint64_t v92 = v221;
    if (v43 >= v25) {
      goto LABEL_101;
    }
  }
  if (__OFSUB__(v43, v34)) {
    goto LABEL_188;
  }
  if (v43 - v34 >= v202) {
    goto LABEL_101;
  }
  if (__OFADD__(v34, v202)) {
    goto LABEL_191;
  }
  if (v34 + v202 >= v25) {
    uint64_t v93 = v25;
  }
  else {
    uint64_t v93 = v34 + v202;
  }
  if (v93 >= v34)
  {
    if (v43 == v93) {
      goto LABEL_101;
    }
    uint64_t v94 = *(void *)(v211 + 72);
    uint64_t v218 = v94 * (v43 - 1);
    uint64_t v219 = v94;
    uint64_t v95 = v43 * v94;
    uint64_t v205 = v93;
LABEL_74:
    uint64_t v97 = 0;
    uint64_t v98 = v34;
    uint64_t v99 = v218;
    uint64_t v223 = v43;
    uint64_t v220 = v95;
    while (1)
    {
      uint64_t v229 = v98;
      uint64_t v100 = *v36;
      uint64_t v228 = v95 + v97;
      sub_241B96350(v95 + v97 + v100, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      uint64_t v227 = v99 + v97;
      sub_241B96350(v99 + v97 + v100, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      id v101 = *v17;
      id v102 = objc_msgSend(*v17, sel_identifier);
      uint64_t v103 = sub_241CDB0D0();
      uint64_t v105 = v104;

      id v106 = *v92;
      id v107 = objc_msgSend(*v92, sel_identifier);
      uint64_t v108 = sub_241CDB0D0();
      uint64_t v110 = v109;

      if (v103 == v108 && v105 == v110)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v112 = sub_241CDC100();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v112 & 1) == 0)
        {
          id v113 = objc_msgSend(v101, sel_identifier);
          uint64_t v114 = sub_241CDB0D0();
          uint64_t v116 = v115;

          id v117 = objc_msgSend(v106, sel_identifier);
          uint64_t v118 = sub_241CDB0D0();
          uint64_t v120 = v119;

          unint64_t v92 = v221;
          uint64_t v36 = v222;
          if (v114 == v118 && v116 == v120)
          {
            swift_bridgeObjectRelease_n();
LABEL_99:
            sub_241B96450((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
            uint64_t v17 = v226;
            sub_241B96450((uint64_t)v226, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
            uint64_t v96 = v223;
            uint64_t v99 = v218;
            uint64_t v95 = v220;
LABEL_73:
            uint64_t v43 = v96 + 1;
            uint64_t v218 = v99 + v219;
            v95 += v219;
            uint64_t v34 = v209;
            if (v43 != v205) {
              goto LABEL_74;
            }
            uint64_t v43 = v205;
LABEL_101:
            if (v43 < v34) {
              goto LABEL_183;
            }
            uint64_t v31 = v43;
            if (swift_isUniquelyReferenced_nonNull_native()) {
              id v32 = v206;
            }
            else {
              id v32 = sub_241B951E8(0, *((void *)v206 + 2) + 1, 1, v206);
            }
            unint64_t v141 = *((void *)v32 + 2);
            unint64_t v140 = *((void *)v32 + 3);
            unint64_t v33 = v141 + 1;
            if (v141 >= v140 >> 1) {
              id v32 = sub_241B951E8((char *)(v140 > 1), v141 + 1, 1, v32);
            }
            *((void *)v32 + 2) = v33;
            uint64_t v142 = v32 + 32;
            uint64_t v143 = &v32[16 * v141 + 32];
            *(void *)uint64_t v143 = v34;
            *((void *)v143 + 1) = v31;
            if (v141)
            {
LABEL_107:
              unint64_t v144 = v33 - 1;
              if (v33 >= 4)
              {
                uint64_t v149 = &v142[16 * v33];
                uint64_t v150 = *((void *)v149 - 8);
                uint64_t v151 = *((void *)v149 - 7);
                BOOL v155 = __OFSUB__(v151, v150);
                uint64_t v152 = v151 - v150;
                if (v155) {
                  goto LABEL_172;
                }
                uint64_t v154 = *((void *)v149 - 6);
                uint64_t v153 = *((void *)v149 - 5);
                BOOL v155 = __OFSUB__(v153, v154);
                uint64_t v147 = v153 - v154;
                char v148 = v155;
                if (v155) {
                  goto LABEL_173;
                }
                unint64_t v156 = v33 - 2;
                uint64_t v157 = &v142[16 * v33 - 32];
                uint64_t v159 = *(void *)v157;
                uint64_t v158 = *((void *)v157 + 1);
                BOOL v155 = __OFSUB__(v158, v159);
                uint64_t v160 = v158 - v159;
                if (v155) {
                  goto LABEL_175;
                }
                BOOL v155 = __OFADD__(v147, v160);
                uint64_t v161 = v147 + v160;
                if (v155) {
                  goto LABEL_178;
                }
                if (v161 >= v152)
                {
                  uint64_t v179 = &v142[16 * v144];
                  uint64_t v181 = *(void *)v179;
                  uint64_t v180 = *((void *)v179 + 1);
                  BOOL v155 = __OFSUB__(v180, v181);
                  uint64_t v182 = v180 - v181;
                  if (v155) {
                    goto LABEL_182;
                  }
                  BOOL v172 = v147 < v182;
                }
                else
                {
LABEL_120:
                  if (v148) {
                    goto LABEL_174;
                  }
                  unint64_t v156 = v33 - 2;
                  uint64_t v162 = &v142[16 * v33 - 32];
                  uint64_t v164 = *(void *)v162;
                  uint64_t v163 = *((void *)v162 + 1);
                  BOOL v165 = __OFSUB__(v163, v164);
                  uint64_t v166 = v163 - v164;
                  char v167 = v165;
                  if (v165) {
                    goto LABEL_177;
                  }
                  unint64_t v168 = &v142[16 * v144];
                  uint64_t v170 = *(void *)v168;
                  uint64_t v169 = *((void *)v168 + 1);
                  BOOL v155 = __OFSUB__(v169, v170);
                  uint64_t v171 = v169 - v170;
                  if (v155) {
                    goto LABEL_180;
                  }
                  if (__OFADD__(v166, v171)) {
                    goto LABEL_181;
                  }
                  if (v166 + v171 < v147) {
                    goto LABEL_132;
                  }
                  BOOL v172 = v147 < v171;
                }
                if (v172) {
                  unint64_t v144 = v156;
                }
              }
              else
              {
                if (v33 == 3)
                {
                  uint64_t v146 = *((void *)v32 + 4);
                  uint64_t v145 = *((void *)v32 + 5);
                  BOOL v155 = __OFSUB__(v145, v146);
                  uint64_t v147 = v145 - v146;
                  char v148 = v155;
                  goto LABEL_120;
                }
                uint64_t v173 = *((void *)v32 + 4);
                uint64_t v174 = *((void *)v32 + 5);
                BOOL v155 = __OFSUB__(v174, v173);
                uint64_t v166 = v174 - v173;
                char v167 = v155;
LABEL_132:
                if (v167) {
                  goto LABEL_176;
                }
                uint64_t v175 = &v142[16 * v144];
                uint64_t v177 = *(void *)v175;
                uint64_t v176 = *((void *)v175 + 1);
                BOOL v155 = __OFSUB__(v176, v177);
                uint64_t v178 = v176 - v177;
                if (v155) {
                  goto LABEL_179;
                }
                if (v178 < v166) {
                  goto LABEL_15;
                }
              }
              unint64_t v183 = v144 - 1;
              if (v144 - 1 >= v33)
              {
                __break(1u);
LABEL_169:
                __break(1u);
LABEL_170:
                __break(1u);
LABEL_171:
                __break(1u);
LABEL_172:
                __break(1u);
LABEL_173:
                __break(1u);
LABEL_174:
                __break(1u);
LABEL_175:
                __break(1u);
LABEL_176:
                __break(1u);
LABEL_177:
                __break(1u);
LABEL_178:
                __break(1u);
LABEL_179:
                __break(1u);
LABEL_180:
                __break(1u);
LABEL_181:
                __break(1u);
LABEL_182:
                __break(1u);
LABEL_183:
                __break(1u);
LABEL_184:
                __break(1u);
LABEL_185:
                __break(1u);
LABEL_186:
                __break(1u);
LABEL_187:
                __break(1u);
LABEL_188:
                __break(1u);
LABEL_189:
                __break(1u);
LABEL_190:
                __break(1u);
LABEL_191:
                __break(1u);
                break;
              }
              if (!*v222) {
                goto LABEL_194;
              }
              uint64_t v184 = v32;
              uint64_t v185 = &v142[16 * v183];
              uint64_t v186 = *(void *)v185;
              uint64_t v187 = &v142[16 * v144];
              uint64_t v188 = *((void *)v187 + 1);
              uint64_t v189 = v213;
              sub_241B94CC8(*v222 + *(void *)(v211 + 72) * *(void *)v185, *v222 + *(void *)(v211 + 72) * *(void *)v187, *v222 + *(void *)(v211 + 72) * v188, v210);
              uint64_t v213 = v189;
              if (v189)
              {
                uint64_t v191 = v201;
                goto LABEL_165;
              }
              if (v188 < v186) {
                goto LABEL_169;
              }
              if (v144 > *((void *)v184 + 2)) {
                goto LABEL_170;
              }
              *(void *)uint64_t v185 = v186;
              *(void *)&v142[16 * v183 + 8] = v188;
              unint64_t v190 = *((void *)v184 + 2);
              if (v144 >= v190) {
                goto LABEL_171;
              }
              unint64_t v33 = v190 - 1;
              memmove(&v142[16 * v144], v187 + 16, 16 * (v190 - 1 - v144));
              id v32 = v184;
              *((void *)v184 + 2) = v190 - 1;
              uint64_t v17 = v226;
              if (v190 <= 2) {
                goto LABEL_15;
              }
              goto LABEL_107;
            }
            unint64_t v33 = 1;
LABEL_15:
            uint64_t v25 = v222[1];
            if (v31 >= v25)
            {
              uint64_t v2 = v213;
              a1 = v222;
              goto LABEL_152;
            }
            goto LABEL_16;
          }
          char v121 = sub_241CDC100();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v17 = v226;
          goto LABEL_95;
        }
      }
      int v122 = *((unsigned __int8 *)v226 + 8);
      unint64_t v92 = v221;
      int v123 = *((unsigned __int8 *)v221 + 8);
      uint64_t v124 = sub_241CD9FA0();
      uint64_t v126 = v125;
      uint64_t v127 = sub_241CD9FA0();
      uint64_t v36 = v222;
      if (v124 == v127 && v126 == v128)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v129 = sub_241CDC100();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v129 & 1) == 0)
        {
          if (v122 == 5)
          {
            if (v123 == 4) {
              goto LABEL_99;
            }
          }
          else if (v122 == 4 && v123 == 5)
          {
            sub_241B96450((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
            uint64_t v17 = v226;
            sub_241B96450((uint64_t)v226, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
            uint64_t v99 = v218;
            uint64_t v95 = v220;
            goto LABEL_96;
          }
        }
      }
      id v130 = v92;
      uint64_t v131 = (uint64_t)v226;
      uint64_t v132 = v215;
      sub_241CD7C00();
      id v133 = v216;
      sub_241CD7C00();
      char v121 = MEMORY[0x245632080](v132, v133);
      id v134 = *v214;
      uint64_t v135 = v133;
      uint64_t v136 = v217;
      (*v214)(v135, v217);
      uint64_t v137 = v132;
      uint64_t v17 = (id *)v131;
      unint64_t v92 = v130;
      v134(v137, v136);
      uint64_t v99 = v218;
LABEL_95:
      sub_241B96450((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      sub_241B96450((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      uint64_t v95 = v220;
      if ((v121 & 1) == 0)
      {
        uint64_t v96 = v223;
        goto LABEL_73;
      }
LABEL_96:
      uint64_t v138 = *v36;
      if (!*v36) {
        goto LABEL_193;
      }
      uint64_t v139 = v138 + v99 + v97;
      sub_241B964B0(v138 + v95 + v97, v225, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      swift_arrayInitWithTakeFrontToBack();
      sub_241B964B0(v225, v139, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      v97 -= v219;
      uint64_t v98 = v229 + 1;
      uint64_t v96 = v223;
      if (v223 == v229 + 1) {
        goto LABEL_73;
      }
    }
  }
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  uint64_t result = sub_241CDBF00();
  __break(1u);
  return result;
}

uint64_t sub_241B946CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unsigned int v77 = a4;
  uint64_t v62 = a1;
  uint64_t v66 = sub_241CD6D70();
  uint64_t v6 = *(void *)(v66 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v66);
  uint64_t v65 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v64 = (char *)&v60 - v9;
  uint64_t v73 = type metadata accessor for TrendNotificationModel();
  uint64_t v10 = MEMORY[0x270FA5388](v73);
  uint64_t v74 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (id *)((char *)&v60 - v13);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v18 = (id *)((char *)&v60 - v17);
  uint64_t v72 = a3;
  uint64_t v61 = a2;
  if (a3 != a2)
  {
    uint64_t v19 = *(void *)(v16 + 72);
    id v63 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v20 = v19 * (v72 - 1);
    int v68 = v14;
    uint64_t v69 = v19;
    uint64_t v21 = v19 * v72;
    int v67 = (id *)((char *)&v60 - v17);
LABEL_7:
    uint64_t v22 = 0;
    uint64_t v23 = v62;
    uint64_t v70 = v21;
    uint64_t v71 = v20;
    while (1)
    {
      uint64_t v24 = *v77;
      uint64_t v76 = v21 + v22;
      sub_241B96350(v21 + v22 + v24, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      uint64_t v75 = v20 + v22;
      sub_241B96350(v20 + v22 + v24, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      id v25 = *v18;
      id v26 = objc_msgSend(*v18, sel_identifier);
      uint64_t v27 = sub_241CDB0D0();
      uint64_t v29 = v28;

      id v30 = *v14;
      id v31 = objc_msgSend(*v14, sel_identifier);
      uint64_t v32 = sub_241CDB0D0();
      uint64_t v34 = v33;

      if (v27 == v32 && v29 == v34)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v36 = sub_241CDC100();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v36 & 1) == 0)
        {
          id v37 = objc_msgSend(v25, sel_identifier);
          uint64_t v38 = sub_241CDB0D0();
          uint64_t v40 = v39;

          id v41 = objc_msgSend(v30, sel_identifier);
          uint64_t v42 = sub_241CDB0D0();
          uint64_t v44 = v43;

          uint64_t v18 = v67;
          uint64_t v14 = v68;
          if (v38 == v42 && v40 == v44)
          {
            swift_bridgeObjectRelease_n();
LABEL_5:
            sub_241B96450((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
            uint64_t result = sub_241B96450((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
            uint64_t v21 = v70;
            uint64_t v20 = v71;
LABEL_6:
            v20 += v69;
            v21 += v69;
            if (++v72 == v61) {
              return result;
            }
            goto LABEL_7;
          }
          char v45 = sub_241CDC100();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
      uint64_t v18 = v67;
      uint64_t v14 = v68;
      int v46 = *((unsigned __int8 *)v67 + 8);
      int v47 = *((unsigned __int8 *)v68 + 8);
      uint64_t v48 = sub_241CD9FA0();
      uint64_t v50 = v49;
      if (v48 == sub_241CD9FA0() && v50 == v51)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v52 = sub_241CDC100();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v52 & 1) == 0)
        {
          if (v46 == 5)
          {
            if (v47 == 4) {
              goto LABEL_5;
            }
          }
          else if (v46 == 4 && v47 == 5)
          {
            sub_241B96450((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
            uint64_t result = sub_241B96450((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
            uint64_t v21 = v70;
            uint64_t v20 = v71;
            goto LABEL_29;
          }
        }
      }
      id v53 = v64;
      sub_241CD7C00();
      uint64_t v54 = v65;
      sub_241CD7C00();
      char v45 = MEMORY[0x245632080](v53, v54);
      uint64_t v55 = *v63;
      uint64_t v56 = v54;
      uint64_t v57 = v66;
      (*v63)(v56, v66);
      v55(v53, v57);
LABEL_28:
      sub_241B96450((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      uint64_t result = sub_241B96450((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      uint64_t v21 = v70;
      uint64_t v20 = v71;
      if ((v45 & 1) == 0) {
        goto LABEL_6;
      }
LABEL_29:
      uint64_t v58 = *v77;
      if (!*v77)
      {
        __break(1u);
        return result;
      }
      uint64_t v59 = v58 + v20 + v22;
      sub_241B964B0(v58 + v21 + v22, v74, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_241B964B0(v74, v59, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
      v22 -= v69;
      if (v72 == ++v23) {
        goto LABEL_6;
      }
    }
  }
  return result;
}

uint64_t sub_241B94CC8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v44 = type metadata accessor for TrendNotificationModel();
  uint64_t v8 = MEMORY[0x270FA5388](v44);
  char v45 = (id *)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (id *)((char *)&v41 - v10);
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v48 = a1;
  unint64_t v47 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v46 = a4 + v18;
      unint64_t v48 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v28 = -v13;
        unint64_t v42 = a4;
        unint64_t v43 = a1;
        do
        {
          unint64_t v29 = a3 + v28;
          sub_241B96350(v26 + v28, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
          unint64_t v30 = a2 + v28;
          unint64_t v31 = a3;
          uint64_t v32 = v11;
          uint64_t v33 = v45;
          sub_241B96350(a2 + v28, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
          char v34 = sub_241B7AD8C(v32, v33);
          uint64_t v35 = (uint64_t)v33;
          uint64_t v11 = v32;
          sub_241B96450(v35, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
          sub_241B96450((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
          if (v34)
          {
            if (v31 < a2 || v29 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              BOOL v36 = v31 == a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
              if (!v36) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v48 += v28;
          }
          else
          {
            unint64_t v39 = v46;
            v46 += v28;
            if (v31 < v39 || v29 >= v39)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v30 = a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              unint64_t v38 = v43;
              if (v31 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v30 = a2;
              unint64_t v37 = v42;
            }
          }
          unint64_t v26 = v46;
          if (v46 <= v37) {
            break;
          }
          a2 = v30;
          a3 = v29;
        }
        while (v30 > v38);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_241B96350(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        uint64_t v21 = v45;
        sub_241B96350(a4, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        char v22 = sub_241B7AD8C(v11, v21);
        sub_241B96450((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        sub_241B96450((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
        unint64_t v23 = v48;
        if (v22)
        {
          unint64_t v24 = a2 + v13;
          if (v48 < a2 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v47 + v13;
          if (v48 < v47 || v48 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v47 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v48 = v23 + v13;
        a4 = v47;
        if (v47 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_59:
    sub_241B953E4(&v48, &v47, (uint64_t *)&v46, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

char *sub_241B951E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241B963EC(0, &qword_268D42F00, (uint64_t (*)(uint64_t))sub_241B95578, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_241B95310(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_241CDBFB0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

uint64_t sub_241B953CC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_241B953E4(a1, a2, a3, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
}

uint64_t sub_241B953E4(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_241CDBFB0();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_241B95528(uint64_t a1)
{
  return sub_241B951E8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_241B9553C(void *a1)
{
  return sub_241A526B4(0, a1[2], 0, a1);
}

uint64_t sub_241B95550(uint64_t a1)
{
  return sub_241A5287C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_241B95564(void *a1)
{
  return sub_241A52A08(0, a1[2], 0, a1);
}

void sub_241B95578()
{
  if (!qword_268D42F08)
  {
    unint64_t v0 = sub_241CDB3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42F08);
    }
  }
}

void **sub_241B955D8(void **a1, void **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  unint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241CD78F0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    int64_t v14 = v4;
    if (v13(v10, 1, v11))
    {
      sub_241B963EC(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    *(void **)((char *)v7 + a3[6]) = *(void **)((char *)a2 + a3[6]);
    *((unsigned char *)v7 + v16) = *((unsigned char *)a2 + v16);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_241B957AC(id *a1, uint64_t a2)
{
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_241CD78F0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void **sub_241B9587C(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241CD78F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v6;
  if (v12(v9, 1, v10))
  {
    sub_241B963EC(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[7];
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  swift_bridgeObjectRetain();
  return a1;
}

void **sub_241B959F0(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_241CD78F0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_241B963EC(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *sub_241B95BD8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD78F0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_241B963EC(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  return a1;
}

void **sub_241B95D3C(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a3[5];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241CD78F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_241B963EC(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_241B95F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241B95F2C);
}

uint64_t sub_241B95F2C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_241B963EC(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241B9600C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241B96020);
}

void *sub_241B96020(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_241B963EC(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_241B960F8()
{
  sub_241B963EC(319, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_241B961DC()
{
  return sub_241B96210(&qword_26B02F358);
}

uint64_t sub_241B96210(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TrendCoalescingNotificationViewModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B96254(uint64_t a1)
{
}

uint64_t sub_241B96288(uint64_t a1, uint64_t a2)
{
  sub_241B963EC(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_241B9631C(uint64_t a1)
{
}

uint64_t sub_241B96350(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_241B963B8(uint64_t a1)
{
}

void sub_241B963EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B96450(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241B964B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241B96518()
{
  sub_241B99DEC();
  uint64_t v22 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B99F74();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  uint64_t v24 = v6;
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)sub_241CDB4D0();
  uint64_t v10 = *(void **)(v0 + 8);
  uint64_t v26 = sub_241CA1EFC(v10);
  unint64_t v27 = v11;
  sub_241CDB180();

  uint64_t v12 = (void *)sub_241CDB4D0();
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_241CDBE00();
  uint64_t v13 = sub_241CA1EFC(v10);
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t v26 = v13;
  unint64_t v27 = v15;
  sub_241CDB180();

  uint64_t v16 = sub_241CDB750();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_241CDB770();
  swift_bridgeObjectRelease();
  uint64_t v25 = v16;
  uint64_t v26 = v17;
  sub_241B30E74();
  sub_241B99ED4();
  sub_241B98F50(&qword_26B032860, (void (*)(uint64_t))sub_241B30E74);
  sub_241B98F50((unint64_t *)&qword_26B032850, (void (*)(uint64_t))sub_241B99ED4);
  swift_retain();
  swift_retain();
  sub_241CDA350();
  sub_241A310AC(0, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
  sub_241B98F50(&qword_268D42F88, (void (*)(uint64_t))sub_241B99DEC);
  uint64_t v18 = v22;
  sub_241CDA710();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
  sub_241B98F50(&qword_268D42F90, (void (*)(uint64_t))sub_241B99F74);
  uint64_t v19 = v23;
  uint64_t v20 = sub_241CDA6D0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v19);
  return v20;
}

uint64_t sub_241B96920@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  sub_241B99D08(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  unint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = sub_241CDA1A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA160();
  uint64_t v18 = sub_241CDA190();
  os_log_type_t v19 = sub_241CDB670();
  if (os_log_type_enabled(v18, v19))
  {
    unint64_t v37 = a5;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v36 = a2;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v35 = a1;
    uint64_t v23 = v22;
    uint64_t v41 = v22;
    uint64_t v34 = v14;
    *(_DWORD *)uint64_t v21 = 136446210;
    uint64_t v40 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CE2220, &v41);
    a5 = v37;
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v18, v19, "[%{public}s] Alert notifications are enabled", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v24 = v23;
    a1 = v35;
    MEMORY[0x245637F20](v24, -1, -1);
    uint64_t v25 = v21;
    a2 = v36;
    MEMORY[0x245637F20](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  uint64_t v26 = *(void **)a1;
  uint64_t v27 = *(void *)(a1 + 24);
  uint64_t v28 = sub_241CD6D00();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v13, a2, v28);
  unint64_t v30 = *(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56);
  v30(v13, 0, 1, v28);
  sub_241CD6C00();
  v30(v11, 0, 1, v28);
  uint64_t v31 = sub_241A6EEB4(v26, v27, (uint64_t)v13, (uint64_t)v11, v38, v39);
  uint64_t v32 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241B99C98((uint64_t)v11, &qword_26B0385B8, MEMORY[0x263F07490]);
  uint64_t result = sub_241B99C98((uint64_t)v13, &qword_26B0385B8, v32);
  *a5 = v31;
  return result;
}

uint64_t sub_241B96CDC@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>)
{
  uint64_t v75 = a6;
  uint64_t v76 = a7;
  uint64_t v82 = a5;
  uint64_t v74 = a4;
  uint64_t v78 = a3;
  uint64_t v84 = a1;
  sub_241B98E24();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B98F98();
  uint64_t v66 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v65 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_241CD6D70();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v18 = sub_241CD7C10();
  uint64_t v79 = *(void *)(v18 - 8);
  uint64_t v80 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v68 = v20;
  uint64_t v69 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v83 = (char *)&v64 - v21;
  uint64_t v22 = sub_241CDA1A0();
  uint64_t v73 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  unsigned int v77 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v64 - v25;
  sub_241CDA160();
  swift_bridgeObjectRetain_n();
  uint64_t v27 = sub_241CDA190();
  os_log_type_t v28 = sub_241CDB670();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v81 = a8;
  uint64_t v71 = v12;
  uint64_t v72 = v11;
  uint64_t v70 = v14;
  if (v29)
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v86[0] = v31;
    *(_DWORD *)uint64_t v30 = 136446466;
    uint64_t v85 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CE2220, v86);
    sub_241CDBBF0();
    *(_WORD *)(v30 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v85 = sub_241A33FE4(v84, a2, v86);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_241A23000, v27, v28, "[%{public}s] Generating notification for %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v31, -1, -1);
    MEMORY[0x245637F20](v30, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v32 = *(void (**)(char *, uint64_t))(v73 + 8);
  v32(v26, v22);
  uint64_t v33 = (uint64_t)v83;
  uint64_t v35 = v75;
  uint64_t v34 = v76;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_241CD6D60();
  sub_241CD7BA0();
  id v36 = sub_241B9763C(v35, v33, v34);
  if (v36)
  {
    unint64_t v37 = v36;
    uint64_t v38 = v77;
    sub_241CDA160();
    id v39 = v37;
    uint64_t v40 = sub_241CDA190();
    os_log_type_t v41 = sub_241CDB670();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      v86[0] = v43;
      *(_DWORD *)uint64_t v42 = 136446466;
      uint64_t v84 = v22;
      uint64_t v85 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CE2220, v86);
      sub_241CDBBF0();
      *(_WORD *)(v42 + 12) = 2080;
      uint64_t v85 = (uint64_t)v39;
      sub_241A313AC(0, &qword_268D423E8);
      id v44 = v39;
      uint64_t v45 = sub_241CDB140();
      uint64_t v85 = sub_241A33FE4(v45, v46, v86);
      sub_241CDBBF0();

      uint64_t v33 = (uint64_t)v83;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v40, v41, "[%{public}s] Scheduling notification: %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v43, -1, -1);
      MEMORY[0x245637F20](v42, -1, -1);

      unint64_t v47 = v77;
      uint64_t v48 = v84;
    }
    else
    {

      unint64_t v47 = v38;
      uint64_t v48 = v22;
    }
    v32(v47, v48);
    uint64_t v57 = v79;
    swift_getObjectType();
    v86[0] = sub_241CD7B40();
    uint64_t v58 = v69;
    uint64_t v56 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v69, v33, v80);
    unint64_t v59 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    uint64_t v60 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v60 + v59, v58, v56);
    sub_241B98ED0();
    sub_241A759F0();
    sub_241B98F50(&qword_268D42F58, (void (*)(uint64_t))sub_241B98ED0);
    uint64_t v61 = v70;
    sub_241CDA710();
    swift_release();
    swift_release();
    sub_241B98F50(&qword_268D42F70, (void (*)(uint64_t))sub_241B98E24);
    uint64_t v62 = v72;
    uint64_t v55 = sub_241CDA6D0();

    (*(void (**)(char *, uint64_t))(v71 + 8))(v61, v62);
  }
  else
  {
    sub_241CDB0D0();
    id v49 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v50 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
    id v51 = objc_msgSend(v49, sel_initWithDomain_code_userInfo_, v50, 118, 0);

    sub_241A759F0();
    v86[0] = (uint64_t)v51;
    sub_241A3DA64();
    id v52 = v51;
    id v53 = v65;
    sub_241CDA570();
    sub_241B98F50(&qword_268D42F68, (void (*)(uint64_t))sub_241B98F98);
    uint64_t v54 = v67;
    uint64_t v55 = sub_241CDA6D0();

    (*(void (**)(char *, uint64_t))(v66 + 8))(v53, v54);
    uint64_t v57 = v79;
    uint64_t v56 = v80;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8))(v33, v56);
  *uint64_t v81 = v55;
  return result;
}

id sub_241B9763C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v87 = a3;
  uint64_t v76 = a2;
  uint64_t v85 = a1;
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v82 = *(void *)(v6 - 8);
  uint64_t v83 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  v74[1] = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v89 = (char *)v74 - v9;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B99D08(0, &qword_268D42F30, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v75 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v80 = (uint64_t)v74 - v14;
  uint64_t v15 = sub_241CD6D70();
  uint64_t v78 = *(void *)(v15 - 8);
  uint64_t v79 = v15;
  MEMORY[0x270FA5388](v15);
  unsigned int v77 = (char *)v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_241CD6970();
  uint64_t v86 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v18 = (char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B99D08(0, &qword_26B032040, MEMORY[0x263F45718], v10);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)v74 - v20;
  uint64_t v22 = *(void **)v4;
  uint64_t v23 = (void *)sub_241CDB4D0();
  uint64_t v24 = *(void **)(v4 + 8);
  id v81 = sub_241B99118((uint64_t)v23, v24, a1);
  uint64_t v88 = v25;

  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F1DEF0]), sel_init);
  v74[0] = v4;
  uint64_t v27 = *(void **)(v4 + 32);
  type metadata accessor for AlertLocalization();
  uint64_t v28 = swift_allocObject();
  id v29 = v22;
  id v30 = v27;
  sub_241CD6EA0();
  sub_241CD6DC0();
  *(void *)(v28 + OBJC_IVAR____TtC9Summaries17AlertLocalization____lazy_storage___displayTypeController) = 0;
  *(void *)(v28 + OBJC_IVAR____TtC9Summaries17AlertLocalization_healthStore) = v29;
  *(void *)(v28 + OBJC_IVAR____TtC9Summaries17AlertLocalization_unitPreferenceController) = v30;
  *(unsigned char *)(v28 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) = 1;
  uint64_t v31 = self;
  uint64_t v32 = (void *)sub_241CDB090();
  sub_241A48DB0(MEMORY[0x263F8EE78]);
  uint64_t v33 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v31, sel_localizedUserNotificationStringForKey_arguments_, v32, v33);

  sub_241CDB0D0();
  uint64_t v35 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  id v90 = v26;
  objc_msgSend(v26, sel_setTitle_, v35);

  id v36 = (void *)sub_241CDB4D0();
  uint64_t v37 = sub_241CD78F0();
  uint64_t v38 = *(void *)(v37 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v21, v87, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v21, 0, 1, v37);
  sub_241CD6960();
  sub_241A9A62C(v24, v36, (uint64_t)v18, v85, (uint64_t)v21);
  id v39 = (void (**)(char *, uint64_t))(v86 + 8);

  (*v39)(v18, v84);
  sub_241B99C98((uint64_t)v21, &qword_26B032040, MEMORY[0x263F45718]);
  uint64_t v40 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  id v41 = v90;
  objc_msgSend(v90, sel_setBody_, v40);

  swift_setDeallocating();
  uint64_t v42 = v28 + OBJC_IVAR____TtC9Summaries17AlertLocalization_calendar;
  uint64_t v43 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
  uint64_t v44 = v28 + OBJC_IVAR____TtC9Summaries17AlertLocalization_locale;
  uint64_t v45 = sub_241CD6DD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);

  swift_deallocClassInstance();
  unint64_t v46 = (void *)sub_241CDB090();
  objc_msgSend(v41, sel_setCategoryIdentifier_, v46);

  id v47 = objc_msgSend(v29, sel_profileIdentifier);
  id v48 = objc_msgSend(v47, sel_identifier);

  id v49 = v77;
  sub_241CD6D50();

  sub_241CD6D20();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v49, v79);
  uint64_t v50 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_setThreadIdentifier_, v50);

  sub_241CD8240();
  id v51 = (void *)sub_241CD8230();
  objc_msgSend(v41, sel_setSound_, v51);

  id v52 = objc_msgSend(v29, sel_profileIdentifier);
  id v53 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F42A28]), sel_initWithProfileIdentifier_, v52);

  id v54 = objc_msgSend(v53, sel_URLForSharingOverview);
  uint64_t v89 = v53;
  if (v54)
  {
    uint64_t v55 = v54;
    uint64_t v56 = (uint64_t)v75;
    sub_241CD6AA0();

    uint64_t v57 = sub_241CD6AC0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 0, 1, v57);
  }
  else
  {
    uint64_t v58 = sub_241CD6AC0();
    uint64_t v56 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v75, 1, 1, v58);
  }
  uint64_t v59 = v80;
  uint64_t v60 = v76;
  sub_241B99430(v56, v80);
  sub_241B99D08(0, &qword_268D421F8, MEMORY[0x263F45878], MEMORY[0x263F8E0F8]);
  uint64_t v61 = sub_241CD7C10();
  uint64_t v62 = *(void *)(v61 - 8);
  unint64_t v63 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v62 + 16))(v64 + v63, v60, v61);
  sub_241B59E10(v64);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v65 = (void *)sub_241CDAF70();
  swift_bridgeObjectRelease();
  objc_msgSend(v90, sel_setUserInfo_, v65);

  sub_241A310AC(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_241CEB710;
  uint64_t v67 = (void *)sub_241CDB4D0();
  sub_241A75D64();
  uint64_t v68 = sub_241CD8810();

  *(void *)(v66 + 32) = v68;
  uint64_t v91 = v66;
  sub_241CDB2E0();
  sub_241A313AC(0, &qword_268D42F40);
  uint64_t v69 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v90, sel_setAttachments_, v69);

  id v70 = v90;
  uint64_t v71 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  id v72 = objc_msgSend(self, sel_requestWithIdentifier_content_trigger_, v71, v70, 0);

  sub_241B99C98(v59, &qword_268D42F30, MEMORY[0x263F06EA8]);
  return v72;
}

id sub_241B986C4@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v9 = *a1;
  sub_241A759F0();
  uint64_t v6 = (char *)a3 + *(int *)(v5 + 48);
  *a3 = v9;
  uint64_t v7 = sub_241CD7C10();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a2, v7);

  return v9;
}

uint64_t sub_241B98768@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v33 = a1;
  uint64_t v6 = sub_241CD7C10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241CDA160();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v14 = sub_241CDA190();
  os_log_type_t v15 = sub_241CDB670();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v30 = v10;
    uint64_t v18 = v17;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v35 = v29;
    *(_DWORD *)uint64_t v18 = 136446466;
    int v27 = v16;
    uint64_t v34 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CE2220, &v35);
    uint64_t v31 = a4;
    sub_241CDBBF0();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v28 = v11;
    uint64_t v19 = sub_241CD7BC0();
    uint64_t v34 = sub_241A33FE4(v19, v20, &v35);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_241A23000, v14, (os_log_type_t)v27, "[%{public}s] Saving content state: %s", (uint8_t *)v18, 0x16u);
    uint64_t v21 = v29;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v21, -1, -1);
    MEMORY[0x245637F20](v18, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v13, v30);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);

    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  }
  sub_241A311E0(v32, v32[3]);
  uint64_t v35 = sub_241CD7910();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v33;
  *(void *)(v22 + 16) = v33;
  sub_241A97D54();
  sub_241A313AC(0, &qword_268D423E8);
  sub_241B98F50((unint64_t *)&qword_26B02EA70, (void (*)(uint64_t))sub_241A97D54);
  id v24 = v23;
  sub_241CDA710();
  swift_release();
  return swift_release();
}

uint64_t sub_241B98B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241B99D08(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = sub_241CD6D00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_241B99D6C(a3, (uint64_t)v8, &qword_26B0385B8, MEMORY[0x263F07490]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_241B99C98((uint64_t)v8, &qword_26B0385B8, MEMORY[0x263F07490]);
      a1 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      sub_241CD6B00();
      a1 = sub_241CDB340();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241B98D90@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  sub_241B9A044();
  uint64_t result = sub_241B98B80(v4, v5, (uint64_t)a1 + *(int *)(v6 + 48));
  *a2 = result;
  a2[1] = v8;
  return result;
}

uint64_t sub_241B98DE0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_241B98E18@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

void sub_241B98E24()
{
  if (!qword_268D42F48)
  {
    sub_241B98ED0();
    sub_241A759F0();
    sub_241B98F50(&qword_268D42F58, (void (*)(uint64_t))sub_241B98ED0);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42F48);
    }
  }
}

void sub_241B98ED0()
{
  if (!qword_268D42F50)
  {
    sub_241A313AC(255, &qword_268D423E8);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42F50);
    }
  }
}

uint64_t sub_241B98F50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241B98F98()
{
  if (!qword_268D42F60)
  {
    sub_241A759F0();
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42F60);
    }
  }
}

uint64_t sub_241B99008()
{
  uint64_t v1 = sub_241CD7C10();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

id sub_241B99098@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD7C10() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_241B986C4(a1, v6, a2);
}

id sub_241B99118(uint64_t a1, void *a2, void *a3)
{
  sub_241B99D08(0, &qword_26B0354A8, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - v9;
  if (objc_msgSend(a3, sel_hasSampleUUID))
  {
    id result = objc_msgSend(a3, sel_sampleUUID);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v12 = result;
    sub_241CDB0D0();

    sub_241CD6D10();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = sub_241CD6D70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  sub_241B99D6C((uint64_t)v10, (uint64_t)v8, &qword_26B0354A8, MEMORY[0x263F07508]);
  uint64_t v14 = sub_241CD6D70();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) == 1)
  {
    sub_241B99C98((uint64_t)v8, &qword_26B0354A8, MEMORY[0x263F07508]);
  }
  else
  {
    sub_241CD6D20();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v14);
  }
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_241CDBE00();
  uint64_t v16 = sub_241CA1EFC(a2);
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v20 = v16;
  unint64_t v21 = v18;
  sub_241CDB180();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  uint64_t v19 = v20;
  sub_241B99C98((uint64_t)v10, &qword_26B0354A8, MEMORY[0x263F07508]);
  return (id)v19;
}

uint64_t sub_241B99430(uint64_t a1, uint64_t a2)
{
  sub_241B99D08(0, &qword_268D42F30, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241B994C4(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v59 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241B99D08(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v10 = sub_241CD6D00();
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v53 - v14;
  uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F45878];
  sub_241B99D08(0, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878], v6);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v53 - v18;
  uint64_t v20 = sub_241CD7C10();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1;
  uint64_t v25 = v24;
  id v26 = v16;
  uint64_t v28 = v27;
  sub_241B99D6C(v23, (uint64_t)v19, (unint64_t *)&qword_26B032060, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v19, 1, v28) == 1)
  {
    sub_241B99C98((uint64_t)v19, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
LABEL_25:
    char v50 = 1;
    return v50 & 1;
  }
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  uint64_t v54 = v28;
  v29(v22, v19, v28);
  objc_msgSend(a2, sel_endDate);
  id v30 = (id)HKDecodeDateForValue();
  uint64_t v55 = v15;
  sub_241CD6CB0();

  unsigned int v31 = objc_msgSend(a2, sel_hasSampleUUID);
  uint64_t v56 = v25;
  if (v31)
  {
    id v32 = objc_msgSend(a2, sel_sampleUUID);
    uint64_t v33 = v10;
    if (v32)
    {
      uint64_t v34 = v32;
      uint64_t v35 = sub_241CDB0D0();
      uint64_t v37 = v36;
    }
    else
    {
      uint64_t v35 = 0;
      uint64_t v37 = 0;
    }
  }
  else
  {
    uint64_t v35 = 0;
    uint64_t v37 = 0;
    uint64_t v33 = v10;
  }
  uint64_t v38 = v60;
  sub_241CD7B90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v9, 1, v33) != 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v13, v9, v33);
    sub_241B98F50((unint64_t *)&qword_26B02E8D8, MEMORY[0x263F07490]);
    uint64_t v40 = v55;
    char v42 = sub_241CDB050();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v38 + 8);
    v43(v13, v33);
    uint64_t v41 = v56;
    if (v42) {
      goto LABEL_18;
    }
    goto LABEL_24;
  }
  sub_241B99C98((uint64_t)v9, &qword_26B0385B8, MEMORY[0x263F07490]);
  if (v37)
  {
    if (sub_241CD7B80() == v35 && v37 == v39)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = v55;
      uint64_t v41 = v56;
      goto LABEL_18;
    }
    char v49 = sub_241CDC100();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v40 = v55;
    uint64_t v41 = v56;
    if (v49)
    {
LABEL_18:
      if (sub_241CD7BD0())
      {
        (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v33);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v54);
        char v50 = 0;
      }
      else
      {
        char v51 = sub_241CD7BE0();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v33);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v54);
        char v50 = v51 ^ 1;
      }
      return v50 & 1;
    }
    uint64_t v43 = *(void (**)(char *, uint64_t))(v38 + 8);
LABEL_24:
    v43(v40, v33);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v54);
    goto LABEL_25;
  }
  uint64_t v44 = v59;
  sub_241CDA160();
  uint64_t v45 = sub_241CDA190();
  os_log_type_t v46 = sub_241CDB660();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t v62 = v48;
    *(_DWORD *)uint64_t v47 = 136446466;
    uint64_t v60 = v33;
    uint64_t v61 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CE2220, &v62);
    sub_241CDBBF0();
    *(_WORD *)(v47 + 12) = 2080;
    uint64_t v61 = sub_241A33FE4(0xD000000000000034, 0x8000000241CE2290, &v62);
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v45, v46, "%{public}s %s Unexpected notification state: invalid content state", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v48, -1, -1);
    MEMORY[0x245637F20](v47, -1, -1);

    (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v58);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v55, v60);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v58);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v55, v33);
  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v22, v54);
  char v50 = 0;
  return v50 & 1;
}

uint64_t sub_241B99C98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241B99D08(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241B99D08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241B99D6C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241B99D08(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_241B99DEC()
{
  if (!qword_268D42F78)
  {
    sub_241B30E74();
    sub_241B99ED4();
    sub_241B98F50(&qword_26B032860, (void (*)(uint64_t))sub_241B30E74);
    sub_241B98F50((unint64_t *)&qword_26B032850, (void (*)(uint64_t))sub_241B99ED4);
    unint64_t v0 = sub_241CDA340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42F78);
    }
  }
}

void sub_241B99ED4()
{
  if (!qword_26B032858)
  {
    sub_241B99D08(255, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032858);
    }
  }
}

void sub_241B99F74()
{
  if (!qword_268D42F80)
  {
    sub_241B99DEC();
    sub_241A310AC(255, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    sub_241B98F50(&qword_268D42F88, (void (*)(uint64_t))sub_241B99DEC);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42F80);
    }
  }
}

void sub_241B9A044()
{
  if (!qword_268D42F98)
  {
    sub_241A310AC(255, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    sub_241B99D08(255, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D42F98);
    }
  }
}

uint64_t sub_241B9A108(uint64_t a1)
{
  uint64_t v25 = a1;
  sub_241B9EE24();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v1);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (uint64_t *)((char *)&v24 - v8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (uint64_t *)((char *)&v24 - v10);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241BA1550(0, &qword_26B0353D0, (uint64_t (*)(uint64_t))sub_241B9EE24, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v24 - v14;
  sub_241BA1470(v25, (uint64_t)&v24 - v14, &qword_26B0353D0, (uint64_t (*)(uint64_t))sub_241B9EE24, v12);
  uint64_t v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v15, 1, v2) != 1)
  {
    sub_241BA14E0((uint64_t)v15, (uint64_t)v11, (uint64_t (*)(void))sub_241B9EE24);
    uint64_t v17 = *(int *)(v2 + 48);
    uint64_t v18 = (char *)v9 + v17;
    uint64_t v19 = (char *)v11 + v17;
    uint64_t v16 = *v11;
    *uint64_t v9 = *v11;
    uint64_t v20 = sub_241CDA080();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
    uint64_t v22 = (char *)v6 + *(int *)(v2 + 48);
    void *v6 = v16;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v22, v18, v20);
    sub_241BA05E8((uint64_t)v6, (uint64_t (*)(void))sub_241B9EE24);
    sub_241BA05E8((uint64_t)v11, (uint64_t (*)(void))sub_241B9EE24);
  }
  return v16;
}

uint64_t sub_241B9A3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  sub_241B9EE24();
  uint64_t v4 = v3;
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  id v30 = (char *)&v24 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v24 - v10);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v27 = a1;
  swift_bridgeObjectRetain();
  uint64_t v31 = v12;
  if (v12)
  {
    uint64_t v13 = sub_241CDA080();
    uint64_t v14 = 0;
    uint64_t v15 = *(void *)(v13 - 8);
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v16 = *(void *)(v15 + 72);
    uint64_t v17 = (void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v18 = v27
        + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))
        + v16 * (v31 - 1);
    uint64_t v28 = -v16;
    while (1)
    {
      uint64_t v19 = &v30[*(int *)(v4 + 48)];
      v29(v19, v18, v13);
      uint64_t v20 = (char *)v11 + *(int *)(v4 + 48);
      *uint64_t v11 = v14;
      (*v17)(v20, v19, v13);
      sub_241BA14E0((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(void))sub_241B9EE24);
      if (sub_241CDA040()) {
        break;
      }
      ++v14;
      sub_241BA05E8((uint64_t)v7, (uint64_t (*)(void))sub_241B9EE24);
      v18 += v28;
      if (v31 == v14) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = v26;
    sub_241BA14E0((uint64_t)v7, v26, (uint64_t (*)(void))sub_241B9EE24);
    uint64_t v21 = 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v21 = 1;
    uint64_t v22 = v26;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v22, v21, 1, v4);
}

uint64_t sub_241B9A654@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_241CDB660();
    uint64_t v23 = (void *)sub_241CDAB20();
    sub_241CDA0C0();
  }
  sub_241CDA960();
  long long v24 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v24;
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v13 + 128);
  long long v25 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v25;
  long long v26 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v26;
  long long v27 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v27;
  *(_OWORD *)(a9 + 200) = v32;
  *(_OWORD *)(a9 + 216) = v33;
  *(_OWORD *)(a9 + 232) = v34;
  *(_OWORD *)(a9 + 248) = v35;
  *(_OWORD *)(a9 + 152) = v29;
  *(_OWORD *)(a9 + 168) = v30;
  *(void *)(a9 + 144) = *(void *)(v13 + 144);
  *(_OWORD *)(a9 + 184) = v31;

  return sub_241BA03F0(v13);
}

__n128 sub_241B9A838@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v14 = v13;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_241CDB660();
    long long v24 = (void *)sub_241CDAB20();
    sub_241CDA0C0();
  }
  sub_241CDA960();
  sub_241BA15B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(a9, v14, v25);
  sub_241B9F064(0, (unint64_t *)&qword_268D43048, (void (*)(uint64_t))sub_241BA15B4);
  long long v27 = (_OWORD *)(a9 + *(int *)(v26 + 36));
  v27[4] = v33;
  v27[5] = v34;
  v27[6] = v35;
  *long long v27 = v29;
  v27[1] = v30;
  __n128 result = v32;
  void v27[2] = v31;
  v27[3] = v32;
  return result;
}

uint64_t SnidgetLevelChartView.ViewModel.__allocating_init(dataConfiguration:accentColor:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  uint64_t v6 = sub_241CDA090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  uint64_t v7 = v4 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  uint64_t v8 = sub_241CD7F90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a2, v8);
  return v4;
}

double SnidgetLevelChartView.init(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_241B9EC20(a1, (uint64_t)v6);
  long long v3 = v6[1];
  *a2 = v6[0];
  a2[1] = v3;
  double result = *(double *)&v7;
  long long v5 = v8;
  a2[2] = v7;
  a2[3] = v5;
  return result;
}

uint64_t SnidgetLevelChartView.ViewModel.dataConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_241B9AC18(&OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration, MEMORY[0x263F47228], a1);
}

uint64_t SnidgetLevelChartView.ViewModel.dataConfiguration.setter(uint64_t a1)
{
  return sub_241B9ACC8(a1, &OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration, MEMORY[0x263F47228]);
}

uint64_t (*SnidgetLevelChartView.ViewModel.dataConfiguration.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t SnidgetLevelChartView.ViewModel.accentColor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_241B9AC18(&OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor, MEMORY[0x263F43640], a1);
}

uint64_t sub_241B9AC18@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *a1;
  swift_beginAccess();
  uint64_t v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t SnidgetLevelChartView.ViewModel.accentColor.setter(uint64_t a1)
{
  return sub_241B9ACC8(a1, &OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor, MEMORY[0x263F43640]);
}

uint64_t sub_241B9ACC8(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *a2;
  swift_beginAccess();
  uint64_t v7 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v6, a1, v7);
  return swift_endAccess();
}

uint64_t (*SnidgetLevelChartView.ViewModel.accentColor.modify())()
{
  return j__swift_endAccess;
}

double SnidgetLevelChartView.ViewModel.innerCircleDiameter.getter()
{
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  double v1 = v0;
  sub_241CD9FB0();
  return v1 - (v2 + v2);
}

double SnidgetLevelChartView.ViewModel.minHeightForRectangles.getter()
{
  uint64_t v1 = sub_241CDA090();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  uint64_t v6 = sub_241CDA030();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRelease();
  double v8 = (double)v7;
  sub_241CD9FF0();
  double v10 = v9 * v8;
  if (v8 + -1.0 > 0.0) {
    double v11 = v8 + -1.0;
  }
  else {
    double v11 = 0.0;
  }
  sub_241CD9FE0();
  return v10 + v12 * v11;
}

double SnidgetLevelChartView.ViewModel.bucketHeight(totalHeight:bucket:)(double a1)
{
  uint64_t v3 = sub_241CDA090();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA060();
  double v8 = v7;
  sub_241CDA060();
  double v10 = v9;
  sub_241CD9FE0();
  double v12 = v11;
  uint64_t v13 = v1 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
  uint64_t v14 = sub_241CDA030();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  unint64_t v15 = *(void *)(v14 + 16);
  swift_bridgeObjectRelease();
  double v16 = (double)(uint64_t)(v15 - 1);
  if (v15 < 2) {
    double v16 = 0.0;
  }
  return (v8 - v10) * (a1 - v12 * v16);
}

uint64_t SnidgetLevelChartView.ViewModel.init(dataConfiguration:accentColor:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  uint64_t v6 = sub_241CDA090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  uint64_t v7 = v2 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  uint64_t v8 = sub_241CD7F90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a2, v8);
  return v2;
}

CGSize __swiftcall SnidgetLevelChartView.ViewModel.innerCircleOffset(for:)(CGSize a1)
{
  double height = a1.height;
  double width = a1.width;
  char v42 = sub_241B9EE24;
  uint64_t v41 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241BA1550(0, &qword_26B0353D0, (uint64_t (*)(uint64_t))sub_241B9EE24, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v40 - v5;
  uint64_t v7 = sub_241CDA090();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  double v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  double v12 = v11;
  sub_241CD9FB0();
  double v14 = v13;
  uint64_t v15 = v1 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  double v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v16(v10, v15, v7);
  uint64_t v17 = sub_241CDA030();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, v7);
  unint64_t v19 = *(void *)(v17 + 16);
  swift_bridgeObjectRelease();
  double v20 = (v12 - (v14 + v14)) * 0.5;
  double v21 = 0.0;
  if (v19 >= 2) {
    double v22 = (double)(uint64_t)(v19 - 1);
  }
  else {
    double v22 = 0.0;
  }
  sub_241CD9FE0();
  double v24 = height - v23 * v22;
  v16(v10, v15, v7);
  sub_241CDA010();
  double v26 = v25;
  v18(v10, v7);
  double v27 = v24 * (1.0 - v26) - v20;
  v16(v10, v15, v7);
  uint64_t v28 = sub_241CDA030();
  v18(v10, v7);
  sub_241B9A3B8(v28, (uint64_t)v6);
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_241B9A108((uint64_t)v6);
  char v31 = v30;
  sub_241BA041C((uint64_t)v6, &qword_26B0353D0, (uint64_t (*)(uint64_t))v42, v41);
  if ((v31 & 1) == 0) {
    double v21 = (double)v29;
  }
  sub_241CD9FE0();
  double v33 = v27 + v32 * v21;
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  double v35 = v34;
  sub_241CD9FB0();
  double v37 = ceil((width - (v35 - (v36 + v36))) * 0.5);
  double v38 = ceil(v33);
  result.double height = v38;
  result.double width = v37;
  return result;
}

CGSize __swiftcall SnidgetLevelChartView.ViewModel.outerCircleOffset(for:)(CGSize a1)
{
  CGSize v1 = SnidgetLevelChartView.ViewModel.innerCircleOffset(for:)(a1);
  sub_241CD9FB0();
  CGFloat v3 = v1.width - v2;
  sub_241CD9FB0();
  double v5 = v1.height - v4;
  double v6 = v3;
  result.double height = v5;
  result.double width = v6;
  return result;
}

uint64_t sub_241B9B4A4()
{
  if (*v0) {
    return 0x6F43746E65636361;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_241B9B4EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_241BA0E7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241B9B514(uint64_t a1)
{
  unint64_t v2 = sub_241B9EE90();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241B9B550(uint64_t a1)
{
  unint64_t v2 = sub_241B9EE90();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SnidgetLevelChartView.ViewModel.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  uint64_t v2 = sub_241CDA090();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  uint64_t v4 = sub_241CD7F90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t SnidgetLevelChartView.ViewModel.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  uint64_t v2 = sub_241CDA090();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  uint64_t v4 = sub_241CD7F90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t SnidgetLevelChartView.ViewModel.encode(to:)(void *a1)
{
  uint64_t v2 = sub_241CD7F90();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x270FA5388](v2);
  double v24 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241CDA090();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B9FD70(0, &qword_26B034EE8, (uint64_t (*)(void))sub_241B9EE90, (uint64_t)&type metadata for SnidgetLevelChartView.ViewModel.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v9 = v8;
  uint64_t v27 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v11 = (char *)&v24 - v10;
  sub_241A311E0(a1, a1[3]);
  sub_241B9EE90();
  uint64_t v12 = v28;
  sub_241CDC230();
  uint64_t v13 = v12 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  char v32 = 0;
  sub_241B9EEE4(&qword_26B035670, MEMORY[0x263F47228]);
  char v30 = v11;
  uint64_t v31 = v9;
  uint64_t v14 = v29;
  sub_241CDC0A0();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v30, v31);
  }
  else
  {
    uint64_t v16 = v27;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v17 = v12 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
    swift_beginAccess();
    unint64_t v19 = v24;
    uint64_t v18 = v25;
    uint64_t v20 = v17;
    uint64_t v21 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v24, v20, v26);
    char v33 = 1;
    sub_241B9EEE4(&qword_26B032090, MEMORY[0x263F43640]);
    double v22 = v30;
    uint64_t v23 = v31;
    sub_241CDC0A0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v22, v23);
  }
}

uint64_t SnidgetLevelChartView.ViewModel.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  SnidgetLevelChartView.ViewModel.init(from:)(a1);
  return v2;
}

uint64_t SnidgetLevelChartView.ViewModel.init(from:)(void *a1)
{
  uint64_t v3 = sub_241CD7F90();
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241CDA090();
  uint64_t v20 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v21 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B9FD70(0, &qword_26B030B40, (uint64_t (*)(void))sub_241B9EE90, (uint64_t)&type metadata for SnidgetLevelChartView.ViewModel.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v23 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = a1[3];
  double v24 = a1;
  sub_241A311E0(a1, v11);
  sub_241B9EE90();
  sub_241CDC220();
  if (v1)
  {
    uint64_t v15 = v25;
    uint64_t v13 = (uint64_t)v24;
    type metadata accessor for SnidgetLevelChartView.ViewModel();
    swift_deallocPartialClassInstance();
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v12 = v20;
    char v27 = 0;
    sub_241B9EEE4(qword_26B035018, MEMORY[0x263F47228]);
    sub_241CDC030();
    uint64_t v15 = v25;
    uint64_t v16 = *(void (**)(void))(v12 + 32);
    uint64_t v18 = v25 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
    v16();
    char v26 = 1;
    sub_241B9EEE4(&qword_26B030958, MEMORY[0x263F43640]);
    sub_241CDC030();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v15 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor, v5, v3);
    uint64_t v17 = (uint64_t)v24;
  }
  sub_241A31190(v17);
  return v15;
}

uint64_t sub_241B9BF84@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SnidgetLevelChartView.ViewModel();
  uint64_t result = sub_241CDA530();
  *a1 = result;
  return result;
}

uint64_t sub_241B9BFC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for SnidgetLevelChartView.ViewModel();
  uint64_t v5 = swift_allocObject();
  uint64_t result = SnidgetLevelChartView.ViewModel.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_241B9C020(void *a1)
{
  return SnidgetLevelChartView.ViewModel.encode(to:)(a1);
}

id sub_241B9C044(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  uint64_t v2 = self;
  uint64_t v3 = &selRef_systemGray3Color;
  if (v1 != (id)2) {
    uint64_t v3 = &selRef_systemGray6Color;
  }
  id v4 = [v2 *v3];

  return v4;
}

uint64_t SnidgetLevelChartView.viewModel.getter()
{
  return swift_retain();
}

uint64_t SnidgetLevelChartView.providedViewContext.getter()
{
  if (*(void *)(v0 + 48))
  {
    return swift_retain();
  }
  else
  {
    sub_241CD85C0();
    sub_241B9EEE4(&qword_26B030970, MEMORY[0x263F43F10]);
    uint64_t result = sub_241CDA9B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_241B9C144(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD7FF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD7F90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a2 + 32) + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  if (*(void *)(a2 + 48))
  {
    swift_retain();
    sub_241CD8580();
    swift_release();
    sub_241CD7FE0();
    uint64_t v13 = (void *)sub_241CD7F60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v14 = objc_msgSend(a1, sel_userInterfaceStyle);
    double v15 = 0.3;
    if (v14 == (id)2) {
      double v15 = 0.4;
    }
    id v16 = objc_msgSend(v13, sel_colorWithAlphaComponent_, v15);

    return (uint64_t)v16;
  }
  else
  {
    sub_241CD85C0();
    sub_241B9EEE4(&qword_26B030970, MEMORY[0x263F43F10]);
    uint64_t result = sub_241CDA9B0();
    __break(1u);
  }
  return result;
}

uint64_t property wrapper backing initializer of SnidgetLevelChartView.viewModel()
{
  type metadata accessor for SnidgetLevelChartView.ViewModel();
  sub_241B9EEE4(&qword_26B030B08, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);

  return sub_241CDA8E0();
}

uint64_t SnidgetLevelChartView.viewModel.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*SnidgetLevelChartView.viewModel.modify())()
{
  return nullsub_1;
}

uint64_t SnidgetLevelChartView.$viewModel.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = type metadata accessor for SnidgetLevelChartView.ViewModel();
  uint64_t v4 = sub_241B9EEE4(&qword_26B030B08, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);

  return MEMORY[0x270EFFB88](v1, v2, v3, v4);
}

uint64_t SnidgetLevelChartView.previousViewModel.getter()
{
  return swift_retain();
}

uint64_t SnidgetLevelChartView.previousViewModel.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*SnidgetLevelChartView.previousViewModel.modify())()
{
  return nullsub_1;
}

uint64_t SnidgetLevelChartView.$providedViewContext.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = sub_241CD85C0();
  uint64_t v4 = sub_241B9EEE4(&qword_26B030970, MEMORY[0x263F43F10]);

  return MEMORY[0x270F00820](v1, v2, v3, v4);
}

uint64_t SnidgetLevelChartView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  char v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F18DD8];
  char v32 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1A418];
  sub_241BA1550(0, &qword_26B0308D0, MEMORY[0x263F18DD8], MEMORY[0x263F1A418]);
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v28 - v4);
  uint64_t v31 = sub_241CDA900();
  uint64_t v6 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B9EF78(0);
  uint64_t v28 = v9;
  MEMORY[0x270FA5388](v9);
  char v30 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BA0358(0);
  MEMORY[0x270FA5388](v11 - 8);
  double v34 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CDAAA0();
  uint64_t v29 = v1;
  sub_241B9CB2C((_OWORD *)v1, (uint64_t)v46);
  *(_OWORD *)&v48[71] = v46[4];
  *(_OWORD *)&v48[87] = v46[5];
  *(_OWORD *)&v48[103] = v46[6];
  *(_OWORD *)&v48[119] = v47;
  *(_OWORD *)&v48[7] = v46[0];
  *(_OWORD *)&v48[23] = v46[1];
  *(_OWORD *)&v48[39] = v46[2];
  *(_OWORD *)&v48[55] = v46[3];
  long long v43 = *(_OWORD *)&v48[80];
  long long v44 = *(_OWORD *)&v48[96];
  *(_OWORD *)uint64_t v45 = *(_OWORD *)&v48[112];
  long long v39 = *(_OWORD *)&v48[16];
  long long v40 = *(_OWORD *)&v48[32];
  long long v41 = *(_OWORD *)&v48[48];
  long long v42 = *(_OWORD *)&v48[64];
  char v49 = 1;
  v36[33] = v13;
  v36[34] = 0;
  char v37 = 1;
  *(void *)&v45[15] = *((void *)&v47 + 1);
  long long v38 = *(_OWORD *)v48;
  double v14 = *(double *)(v1 + 16);
  sub_241CDADB0();
  double v15 = v14;
  uint64_t v16 = v28;
  sub_241B9A654(0.0, 1, 0.0, 1, v15, 0, 0.0, 1, (uint64_t)v36, 0.0, 1, 0.0, 1);
  sub_241BA0FCC((uint64_t)v46);
  memcpy(v50, v36, 0x108uLL);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = v31;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F18DC8], v31);
  uint64_t v19 = *(int *)(v3 + 36);
  uint64_t v20 = v30;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v5 + v19, v8, v18);
  *uint64_t v5 = KeyPath;
  uint64_t v22 = v32;
  uint64_t v21 = v33;
  sub_241BA1470((uint64_t)v5, (uint64_t)v20 + *(int *)(v16 + 36), &qword_26B0308D0, v33, v32);
  memcpy(v20, v50, 0x108uLL);
  sub_241BA03F0((uint64_t)v50);
  sub_241BA041C((uint64_t)v5, &qword_26B0308D0, v21, v22);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  sub_241BA0478((uint64_t)v50);
  v36[0] = 0;
  v36[1] = 0xE000000000000000;
  sub_241CDBE00();
  if (*(void *)(v29 + 48))
  {
    swift_retain();
    sub_241CD85B0();
    uint64_t v24 = v23;
    swift_release();
    if (!v24) {
      sub_241CDB0D0();
    }
    uint64_t v26 = (uint64_t)v34;
    uint64_t v25 = v35;
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    sub_241BA04A4();
    sub_241CDABE0();
    swift_bridgeObjectRelease();
    sub_241BA05E8((uint64_t)v20, (uint64_t (*)(void))sub_241B9EF78);
    return sub_241BA14E0(v26, v25, (uint64_t (*)(void))sub_241BA0358);
  }
  else
  {
    sub_241CD85C0();
    sub_241B9EEE4(&qword_26B030970, MEMORY[0x263F43F10]);
    uint64_t result = sub_241CDA9B0();
    __break(1u);
  }
  return result;
}

double sub_241B9CB2C@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_241CDA090();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = a1[1];
  v8[1] = *a1;
  void v8[2] = v9;
  long long v10 = a1[3];
  v8[3] = a1[2];
  void v8[4] = v10;
  long long v39 = *(_OWORD *)((char *)a1 + 24);
  uint64_t v11 = *((void *)&v39 + 1) + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  sub_241ACD3E8((uint64_t)a1);
  sub_241BA0FA0((uint64_t)&v39);
  sub_241CDA030();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  sub_241CD9FF0();
  sub_241CD9FE0();
  sub_241BA0FCC((uint64_t)&v39);
  sub_241CDADB0();
  sub_241CDA960();
  uint64_t v12 = v26;
  char v13 = v27;
  uint64_t v14 = v28;
  char v15 = v29;
  uint64_t v16 = v30;
  char v17 = v31;
  uint64_t v18 = v32;
  uint64_t v19 = v34;
  uint64_t v20 = v36;
  char v25 = v33;
  char v24 = v35;
  char v23 = v37;
  *(void *)a2 = sub_241BA0F98;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v12;
  *(unsigned char *)(a2 + 24) = v13;
  *(void *)(a2 + 32) = v14;
  *(unsigned char *)(a2 + 40) = v15;
  *(void *)(a2 + 48) = v16;
  *(unsigned char *)(a2 + 56) = v17;
  *(void *)(a2 + 64) = v18;
  *(unsigned char *)(a2 + 72) = v25;
  *(void *)(a2 + 80) = v19;
  *(unsigned char *)(a2 + 88) = v24;
  *(void *)(a2 + 96) = v20;
  *(unsigned char *)(a2 + 104) = v23;
  double result = *(double *)&v38;
  *(_OWORD *)(a2 + 112) = v38;
  return result;
}

uint64_t sub_241B9CE54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v5 = sub_241CDA090();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CDA990();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B9F364();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241B9F290(0);
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t *v14 = sub_241CDADB0();
  v14[1] = v19;
  sub_241BA0FF8();
  sub_241B9D224((_OWORD *)a2, a1, (uint64_t)v14 + *(int *)(v20 + 44));
  sub_241CDA980();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = (uint64_t *)&v18[*(int *)(v16 + 36)];
  sub_241BA1550(0, &qword_26B0308E0, MEMORY[0x263F191A0], MEMORY[0x263F1A418]);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v22 + *(int *)(v23 + 28), v11, v8);
  uint64_t *v22 = KeyPath;
  sub_241BA10F4((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))sub_241B9F364);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_241BA05E8((uint64_t)v14, (uint64_t (*)(void))sub_241B9F364);
  uint64_t v24 = *(void *)(a2 + 32) + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  uint64_t v25 = v28;
  uint64_t v26 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v7, v24, v29);
  sub_241CDADC0();
  sub_241BA015C();
  sub_241B9EEE4(&qword_26B0352D8, MEMORY[0x263F47228]);
  sub_241CDAB70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
  return sub_241BA05E8((uint64_t)v18, (uint64_t (*)(void))sub_241B9F290);
}

uint64_t sub_241B9D224@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v113 = a3;
  uint64_t v114 = a2;
  uint64_t v4 = sub_241CD7FF0();
  uint64_t v111 = *(void *)(v4 - 8);
  uint64_t v112 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v110 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_241CD7F90();
  uint64_t v109 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  id v107 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CDA950();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v104 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_241CDADD0();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v99 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v106 = sub_241B9FCD4;
  uint64_t v105 = MEMORY[0x263F190D8];
  sub_241B9F4C0(0, &qword_26B030A10, (void (*)(uint64_t))sub_241B9FCD4, MEMORY[0x263F190D8]);
  uint64_t v98 = v10 - 8;
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v97 = (char *)&v89 - v11;
  sub_241B9FC40();
  uint64_t v103 = v12 - 8;
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v100 = (uint64_t)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_241CDA8B0();
  uint64_t v14 = *(void *)(v92 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v92);
  uint64_t v16 = sub_241CDA090();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B9F534();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B9F48C(0);
  uint64_t v24 = v23 - 8;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v93 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v95 = (char *)&v89 - v27;
  sub_241CD9FE0();
  uint64_t v29 = v28;
  *(void *)uint64_t v22 = sub_241CDAAA0();
  *((void *)v22 + 1) = v29;
  v22[16] = 0;
  uint64_t v96 = v22;
  sub_241BA115C();
  uint64_t v91 = &v22[*(int *)(v30 + 44)];
  long long v116 = *(_OWORD *)((char *)a1 + 24);
  uint64_t v31 = *((void *)&v116 + 1);
  uint64_t v32 = *((void *)&v116 + 1) + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v32, v16);
  uint64_t v33 = sub_241CDA030();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v115 = v33;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v34 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v114, v92);
  unint64_t v35 = (*(unsigned __int8 *)(v14 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v36 = (char *)swift_allocObject();
  long long v37 = a1[1];
  *((_OWORD *)v36 + 1) = *a1;
  *((_OWORD *)v36 + 2) = v37;
  long long v38 = a1[2];
  long long v39 = a1[3];
  uint64_t v94 = a1;
  *((_OWORD *)v36 + 3) = v38;
  *((_OWORD *)v36 + 4) = v39;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v36[v35], (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v34);
  sub_241ACD3E8((uint64_t)a1);
  sub_241B9F714();
  sub_241B9F064(0, &qword_26B030A00, (void (*)(uint64_t))sub_241B9F830);
  sub_241B9F9FC(&qword_26B0353D8, (void (*)(uint64_t))sub_241B9F714, (void (*)(void))sub_241B9F8E0);
  sub_241B9F968();
  sub_241B9FA6C();
  uint64_t v40 = (uint64_t)v93;
  sub_241CDAD80();
  uint64_t v41 = sub_241CDADB0();
  uint64_t KeyPath = v42;
  uint64_t v92 = sub_241CDADB0();
  uint64_t v91 = v43;
  long long v44 = (uint64_t *)(v40 + *(int *)(v24 + 44));
  sub_241B9FB38();
  uint64_t v46 = (uint64_t)v44 + *(int *)(v45 + 36);
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  uint64_t v48 = v47;
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  uint64_t v50 = v49;
  swift_retain();
  sub_241CDA8A0();
  CGSize v53 = SnidgetLevelChartView.ViewModel.innerCircleOffset(for:)((CGSize)__PAIR128__(v52, v51));
  sub_241CD9FB0();
  CGFloat v55 = v53.width - v54;
  sub_241CD9FB0();
  double v57 = v56;
  sub_241BA0FCC((uint64_t)&v116);
  uint64_t v58 = v101;
  uint64_t v59 = v99;
  uint64_t v60 = v102;
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v99, *MEMORY[0x263F1B970], v102);
  uint64_t v61 = (uint64_t)v104;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v104, v59, v60);
  uint64_t v62 = v97;
  sub_241BA10F4(v61, (uint64_t)&v97[*(int *)(v98 + 44)], MEMORY[0x263F190D8]);
  *(void *)uint64_t v62 = v48;
  *((void *)v62 + 1) = v50;
  *((CGFloat *)v62 + 2) = v55;
  *((double *)v62 + 3) = v53.height - v57;
  sub_241BA05E8(v61, MEMORY[0x263F190D8]);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
  uint64_t v63 = (uint64_t)v62;
  uint64_t v64 = (uint64_t)v95;
  uint64_t v65 = v100;
  sub_241BA139C(v63, v100, (uint64_t)&qword_26B030A10, (uint64_t)v106, v105, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241B9F4C0);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v103 + 44));
  *uint64_t v66 = v41;
  uint64_t v67 = v107;
  v66[1] = KeyPath;
  uint64_t v68 = v108;
  sub_241BA10F4(v65, v46, (uint64_t (*)(void))sub_241B9FC40);
  sub_241BA05E8(v65, (uint64_t (*)(void))sub_241B9FC40);
  uint64_t v69 = v91;
  *long long v44 = v92;
  v44[1] = (uint64_t)v69;
  uint64_t v70 = v109;
  sub_241BA14E0((uint64_t)v96, v40, (uint64_t (*)(void))sub_241B9F534);
  sub_241BA14E0(v40, v64, (uint64_t (*)(void))sub_241B9F48C);
  swift_retain();
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  double v72 = v71;
  sub_241CD9FB0();
  double v74 = v73;
  sub_241BA0FCC((uint64_t)&v116);
  swift_retain();
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  double v76 = v75;
  sub_241CD9FB0();
  double v78 = v77;
  sub_241BA0FCC((uint64_t)&v116);
  uint64_t v79 = v31 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v67, v79, v68);
  if (*((void *)v94 + 6))
  {
    swift_retain();
    sub_241CD8580();
    swift_release();
    uint64_t v80 = v110;
    sub_241CD7FE0();
    uint64_t v81 = sub_241CD7F80();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v80, v112);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v68);
    swift_retain();
    sub_241CDA8A0();
    CGSize v84 = SnidgetLevelChartView.ViewModel.innerCircleOffset(for:)((CGSize)__PAIR128__(v83, v82));
    sub_241BA0FCC((uint64_t)&v116);
    sub_241BA10F4(v64, v40, (uint64_t (*)(void))sub_241B9F48C);
    uint64_t v85 = v113;
    sub_241BA10F4(v40, v113, (uint64_t (*)(void))sub_241B9F48C);
    sub_241B9F3F8();
    uint64_t v87 = v85 + *(int *)(v86 + 48);
    *(double *)uint64_t v87 = v72 - (v74 + v74);
    *(double *)(v87 + 8) = v76 - (v78 + v78);
    *(void *)(v87 + 16) = v81;
    *(_WORD *)(v87 + 24) = 256;
    *(CGSize *)(v87 + 32) = v84;
    swift_retain();
    sub_241BA05E8(v64, (uint64_t (*)(void))sub_241B9F48C);
    swift_release();
    return sub_241BA05E8(v40, (uint64_t (*)(void))sub_241B9F48C);
  }
  else
  {
    sub_241CD85C0();
    sub_241B9EEE4(&qword_26B030970, MEMORY[0x263F43F10]);
    uint64_t result = sub_241CDA9B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_241B9DDA8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v40[0] = a3;
  uint64_t v43 = a4;
  uint64_t v42 = sub_241CDA090();
  uint64_t v6 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CDA920();
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (void *)((char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241B9F830();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B9F064(0, &qword_26B030A00, (void (*)(uint64_t))sub_241B9F830);
  uint64_t v41 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v40 - v18;
  sub_241CD9FC0();
  uint64_t v21 = v20;
  uint64_t v22 = (char *)v12 + *(int *)(v10 + 28);
  uint64_t v23 = *MEMORY[0x263F19860];
  uint64_t v24 = sub_241CDAA90();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v22, v23, v24);
  *uint64_t v12 = v21;
  v12[1] = v21;
  v40[1] = a1;
  if (sub_241CDA040())
  {
    uint64_t v25 = (_OWORD *)swift_allocObject();
    long long v26 = a2[1];
    v25[1] = *a2;
    void v25[2] = v26;
    long long v27 = a2[3];
    void v25[3] = a2[2];
    v25[4] = v27;
    id v28 = objc_allocWithZone(MEMORY[0x263F825C8]);
    *(void *)&long long v46 = sub_241BA1468;
    *((void *)&v46 + 1) = v25;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v45 = sub_241B9EA98;
    *((void *)&v45 + 1) = &unk_26F5C4528;
    uint64_t v29 = _Block_copy(&aBlock);
    sub_241ACD3E8((uint64_t)a2);
    id v30 = objc_msgSend(v28, sel_initWithDynamicProvider_, v29, v40[0]);
  }
  else
  {
    id v31 = objc_allocWithZone(MEMORY[0x263F825C8]);
    *(void *)&long long v46 = sub_241B9C044;
    *((void *)&v46 + 1) = 0;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v45 = sub_241B9EA98;
    *((void *)&v45 + 1) = &unk_26F5C44D8;
    uint64_t v29 = _Block_copy(&aBlock);
    id v30 = objc_msgSend(v31, sel_initWithDynamicProvider_, v29, v40[0]);
  }
  id v32 = v30;
  _Block_release(v29);
  swift_release();
  uint64_t v33 = MEMORY[0x245635FB0](v32);
  sub_241BA10F4((uint64_t)v12, (uint64_t)v16, MEMORY[0x263F19048]);
  *(void *)&v16[*(int *)(v14 + 52)] = v33;
  *(_WORD *)&v16[*(int *)(v14 + 56)] = 256;
  sub_241BA05E8((uint64_t)v12, MEMORY[0x263F19048]);
  long long v47 = *(_OWORD *)((char *)a2 + 24);
  uint64_t v34 = *((void *)&v47 + 1);
  swift_retain();
  sub_241CDA8A0();
  sub_241CDA060();
  sub_241CDA060();
  sub_241CD9FE0();
  uint64_t v35 = v34 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  uint64_t v36 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v35, v42);
  sub_241CDA030();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v36);
  swift_bridgeObjectRelease();
  sub_241BA0FCC((uint64_t)&v47);
  sub_241CDADB0();
  sub_241CDA890();
  sub_241BA10F4((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(void))sub_241B9F830);
  long long v37 = &v19[*(int *)(v41 + 36)];
  long long v38 = v45;
  *(_OWORD *)long long v37 = aBlock;
  *((_OWORD *)v37 + 1) = v38;
  *((_OWORD *)v37 + 2) = v46;
  sub_241BA05E8((uint64_t)v16, (uint64_t (*)(void))sub_241B9F830);
  return sub_241BA139C((uint64_t)v19, v43, (uint64_t)&qword_26B030A00, (uint64_t)sub_241B9F830, MEMORY[0x263F18868], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241B9F064);
}

uint64_t View.reverseMask<A>(alignment:_:)()
{
  return sub_241CDAC00();
}

uint64_t sub_241B9E498()
{
  return sub_241CDAA00();
}

uint64_t sub_241B9E4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B9EB50(a1, a2, a3, a4, MEMORY[0x263F18DD8], MEMORY[0x263F19340]);
}

double sub_241B9E4E8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_241B9EC20(a1, (uint64_t)v6);
  long long v3 = v6[1];
  *a2 = v6[0];
  a2[1] = v3;
  double result = *(double *)&v7;
  long long v5 = v8;
  a2[2] = v7;
  a2[3] = v5;
  return result;
}

uint64_t sub_241B9E528@<X0>(uint64_t a1@<X8>)
{
  return SnidgetLevelChartView.body.getter(a1);
}

uint64_t sub_241B9E564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v26 = a7;
  uint64_t v27 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v30 = a9;
  sub_241CDA950();
  sub_241CDA910();
  uint64_t v39 = a8;
  uint64_t v40 = MEMORY[0x263F190D0];
  swift_getWitnessTable();
  sub_241CDA970();
  uint64_t v11 = sub_241CDA910();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t v31 = v24;
  uint64_t v32 = a6;
  uint64_t v33 = v26;
  uint64_t v34 = a8;
  uint64_t v35 = v25;
  uint64_t v36 = v27;
  unint64_t v18 = sub_241B9FF94();
  sub_241CDAC20();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v37 = v18;
  uint64_t v38 = WitnessTable;
  uint64_t v20 = swift_getWitnessTable();
  sub_241AB0398(v15, v11, v20);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v15, v11);
  sub_241AB0398(v17, v11, v20);
  return ((uint64_t (*)(char *, uint64_t))v21)(v17, v11);
}

uint64_t sub_241B9E7AC@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v26 = a4;
  uint64_t v6 = sub_241CDADD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA950();
  uint64_t v13 = sub_241CDA910();
  uint64_t v23 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v23 - v18;
  v25(v17);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, *MEMORY[0x263F1B970], v6);
  sub_241CDAC40();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, a2);
  uint64_t v27 = a3;
  uint64_t v28 = MEMORY[0x263F190D0];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_241AB0398(v16, v13, WitnessTable);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v23 + 8);
  v21(v16, v13);
  sub_241AB0398(v19, v13, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v21)(v19, v13);
}

id sub_241B9EA98(uint64_t a1, void *a2)
{
  long long v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  long long v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_241B9EB00()
{
  return sub_241CDAA10();
}

uint64_t sub_241B9EB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B9EB50(a1, a2, a3, a4, MEMORY[0x263F191A0], MEMORY[0x263F193C0]);
}

uint64_t sub_241B9EB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_241B9EC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  sub_241CD85C0();
  sub_241B9EEE4(&qword_26B030970, MEMORY[0x263F43F10]);
  swift_retain();
  uint64_t v5 = sub_241CDA9C0();
  uint64_t v7 = v6;
  sub_241BA1550(0, &qword_26B030888, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, MEMORY[0x263F43CB8]);
  uint64_t v9 = v8;
  swift_retain();
  sub_241CD8410();
  type metadata accessor for SnidgetLevelChartView.ViewModel();
  sub_241B9EEE4(&qword_26B030B08, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
  uint64_t v10 = sub_241CDA8E0();
  uint64_t v12 = v11;
  swift_retain();
  sub_241CD8420();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  swift_retain();
  sub_241ACD440(KeyPath, 0);
  swift_release();
  sub_241ACD4A4(KeyPath, 0);
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a2 = KeyPath;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0x4054000000000000;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v14;
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v7;
  return result;
}

void sub_241B9EE24()
{
  if (!qword_26B0353C8)
  {
    sub_241CDA080();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B0353C8);
    }
  }
}

unint64_t sub_241B9EE90()
{
  unint64_t result = qword_26B0385E0;
  if (!qword_26B0385E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0385E0);
  }
  return result;
}

uint64_t sub_241B9EEE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SnidgetLevelChartView.ViewModel()
{
  uint64_t result = qword_26B038600;
  if (!qword_26B038600) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241B9EF78(uint64_t a1)
{
}

void sub_241B9EFB4(uint64_t a1)
{
}

void sub_241B9EFDC()
{
  if (!qword_26B035370)
  {
    sub_241B9F064(255, &qword_26B035308, (void (*)(uint64_t))sub_241B9F0C8);
    sub_241BA028C();
    unint64_t v0 = sub_241CDAD50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035370);
    }
  }
}

void sub_241B9F064(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDA910();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241B9F0C8()
{
  if (!qword_26B0352F8)
  {
    sub_241B9F1BC();
    sub_241B9F290(255);
    sub_241CDA090();
    sub_241BA015C();
    sub_241B9EEE4(&qword_26B0352D8, MEMORY[0x263F47228]);
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_241CDA8D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0352F8);
    }
  }
}

void sub_241B9F1BC()
{
  if (!qword_26B035360)
  {
    sub_241B9F290(255);
    sub_241CDA090();
    sub_241BA015C();
    sub_241B9EEE4(&qword_26B0352D8, MEMORY[0x263F47228]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_26B035360);
    }
  }
}

void sub_241B9F290(uint64_t a1)
{
}

void sub_241B9F2CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_241BA1550(255, a4, a5, MEMORY[0x263F1A418]);
    unint64_t v8 = sub_241CDA910();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241B9F364()
{
  if (!qword_26B035388)
  {
    sub_241BA1550(255, &qword_26B0353A8, (uint64_t (*)(uint64_t))sub_241B9F3F8, MEMORY[0x263F1BAC8]);
    sub_241BA00D4();
    unint64_t v0 = sub_241CDAD60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035388);
    }
  }
}

void sub_241B9F3F8()
{
  if (!qword_26B035318)
  {
    sub_241B9F48C(255);
    sub_241B9F064(255, &qword_26B0309F0, (void (*)(uint64_t))sub_241BA001C);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B035318);
    }
  }
}

void sub_241B9F48C(uint64_t a1)
{
}

void sub_241B9F4C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_241CDA910();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_241B9F534()
{
  if (!qword_26B035378)
  {
    sub_241B9F5DC();
    sub_241B9F9FC(&qword_26B035390, (void (*)(uint64_t))sub_241B9F5DC, (void (*)(void))sub_241B9FA6C);
    unint64_t v0 = sub_241CDAD50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035378);
    }
  }
}

void sub_241B9F5DC()
{
  if (!qword_26B035398)
  {
    sub_241B9F714();
    sub_241BA1864(255, &qword_26B038838, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    sub_241B9F064(255, &qword_26B030A00, (void (*)(uint64_t))sub_241B9F830);
    sub_241B9F9FC(&qword_26B0353D8, (void (*)(uint64_t))sub_241B9F714, (void (*)(void))sub_241B9F8E0);
    sub_241B9F968();
    unint64_t v0 = sub_241CDADA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035398);
    }
  }
}

void sub_241B9F714()
{
  if (!qword_26B0353E0)
  {
    sub_241BA1550(255, &qword_26B0353B0, MEMORY[0x263F47220], MEMORY[0x263F8D488]);
    sub_241B9F7A8();
    unint64_t v0 = sub_241CDBF40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0353E0);
    }
  }
}

unint64_t sub_241B9F7A8()
{
  unint64_t result = qword_26B0353B8;
  if (!qword_26B0353B8)
  {
    sub_241BA1550(255, &qword_26B0353B0, MEMORY[0x263F47220], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0353B8);
  }
  return result;
}

void sub_241B9F830()
{
  if (!qword_26B0309C8)
  {
    sub_241CDA920();
    sub_241B9EEE4(&qword_26B030A28, MEMORY[0x263F19048]);
    unint64_t v0 = sub_241CDA850();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0309C8);
    }
  }
}

unint64_t sub_241B9F8E0()
{
  unint64_t result = qword_26B0353C0;
  if (!qword_26B0353C0)
  {
    sub_241BA1550(255, &qword_26B0353B0, MEMORY[0x263F47220], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0353C0);
  }
  return result;
}

unint64_t sub_241B9F968()
{
  unint64_t result = qword_26B030B20;
  if (!qword_26B030B20)
  {
    sub_241BA1864(255, &qword_26B038838, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030B20);
  }
  return result;
}

uint64_t sub_241B9F9FC(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241B9FA6C()
{
  unint64_t result = qword_26B0309F8;
  if (!qword_26B0309F8)
  {
    sub_241B9F064(255, &qword_26B030A00, (void (*)(uint64_t))sub_241B9F830);
    sub_241B9EEE4(&qword_26B0309C0, (void (*)(uint64_t))sub_241B9F830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0309F8);
  }
  return result;
}

void sub_241B9FB38()
{
  if (!qword_26B030A70)
  {
    sub_241B9FBE0();
    sub_241BA0A6C(&qword_26B030A18, (void (*)(uint64_t))sub_241B9FBE0, (void (*)(void))sub_241B9FF94, (void (*)(void))sub_241B9FFE8);
    unint64_t v0 = sub_241CDAAF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B030A70);
    }
  }
}

void sub_241B9FBE0()
{
  if (!qword_26B030A20)
  {
    sub_241B9FC40();
    unint64_t v0 = sub_241CDA910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B030A20);
    }
  }
}

void sub_241B9FC40()
{
  if (!qword_26B030A38)
  {
    sub_241B9F4C0(255, &qword_26B030A10, (void (*)(uint64_t))sub_241B9FCD4, MEMORY[0x263F190D8]);
    sub_241B9FEBC();
    unint64_t v0 = sub_241CDA970();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B030A38);
    }
  }
}

void sub_241B9FCD4()
{
  if (!qword_26B0309D8)
  {
    sub_241B9FD70(255, &qword_26B0309E8, (uint64_t (*)(void))sub_241B9FDD8, MEMORY[0x263F1B638], MEMORY[0x263F18708]);
    sub_241B9FE2C();
    unint64_t v0 = sub_241CDA880();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0309D8);
    }
  }
}

void sub_241B9FD70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_241B9FDD8()
{
  unint64_t result = qword_26B030A78;
  if (!qword_26B030A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030A78);
  }
  return result;
}

unint64_t sub_241B9FE2C()
{
  unint64_t result = qword_26B0309E0;
  if (!qword_26B0309E0)
  {
    sub_241B9FD70(255, &qword_26B0309E8, (uint64_t (*)(void))sub_241B9FDD8, MEMORY[0x263F1B638], MEMORY[0x263F18708]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0309E0);
  }
  return result;
}

unint64_t sub_241B9FEBC()
{
  unint64_t result = qword_26B030A08;
  if (!qword_26B030A08)
  {
    sub_241B9F4C0(255, &qword_26B030A10, (void (*)(uint64_t))sub_241B9FCD4, MEMORY[0x263F190D8]);
    sub_241B9EEE4(&qword_26B0309D0, (void (*)(uint64_t))sub_241B9FCD4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030A08);
  }
  return result;
}

unint64_t sub_241B9FF94()
{
  unint64_t result = qword_26B030A80;
  if (!qword_26B030A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030A80);
  }
  return result;
}

uint64_t sub_241B9FFE8()
{
  return sub_241B9EEE4(&qword_26B030A30, (void (*)(uint64_t))sub_241B9FC40);
}

void sub_241BA001C()
{
  if (!qword_26B0309B8)
  {
    sub_241B9FD70(255, &qword_26B0309E8, (uint64_t (*)(void))sub_241B9FDD8, MEMORY[0x263F1B638], MEMORY[0x263F18708]);
    sub_241B9FE2C();
    unint64_t v0 = sub_241CDA850();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0309B8);
    }
  }
}

unint64_t sub_241BA00D4()
{
  unint64_t result = qword_26B0353A0;
  if (!qword_26B0353A0)
  {
    sub_241BA1550(255, &qword_26B0353A8, (uint64_t (*)(uint64_t))sub_241B9F3F8, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0353A0);
  }
  return result;
}

unint64_t sub_241BA015C()
{
  unint64_t result = qword_26B035330;
  if (!qword_26B035330)
  {
    sub_241B9F290(255);
    sub_241B9EEE4(&qword_26B035380, (void (*)(uint64_t))sub_241B9F364);
    sub_241BA0228(&qword_26B0308D8, &qword_26B0308E0, MEMORY[0x263F191A0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035330);
  }
  return result;
}

uint64_t sub_241BA0228(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241BA1550(255, a2, a3, MEMORY[0x263F1A418]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241BA028C()
{
  unint64_t result = qword_26B035300;
  if (!qword_26B035300)
  {
    sub_241B9F064(255, &qword_26B035308, (void (*)(uint64_t))sub_241B9F0C8);
    sub_241B9EEE4(&qword_26B0352F0, (void (*)(uint64_t))sub_241B9F0C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035300);
  }
  return result;
}

void sub_241BA0358(uint64_t a1)
{
}

uint64_t sub_241BA038C()
{
  return sub_241CDAA00();
}

uint64_t sub_241BA03B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B9EB50(a1, a2, a3, a4, MEMORY[0x263F18DD8], MEMORY[0x263F19340]);
}

uint64_t sub_241BA03F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_241BA041C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_241BA1550(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_241BA0478(uint64_t a1)
{
  return a1;
}

unint64_t sub_241BA04A4()
{
  unint64_t result = qword_26B035340;
  if (!qword_26B035340)
  {
    sub_241B9EF78(255);
    sub_241BA0540();
    sub_241BA0228(&qword_26B0308C8, &qword_26B0308D0, MEMORY[0x263F18DD8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035340);
  }
  return result;
}

unint64_t sub_241BA0540()
{
  unint64_t result = qword_26B035320;
  if (!qword_26B035320)
  {
    sub_241B9EFB4(255);
    sub_241B9EEE4(&qword_26B035368, (void (*)(uint64_t))sub_241B9EFDC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035320);
  }
  return result;
}

uint64_t sub_241BA05E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241BA0648@<X0>(uint64_t a1@<X8>)
{
  return sub_241B9E564(v1[6], v1[7], v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_241BA0660()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for SnidgetLevelChartView(uint64_t a1)
{
  sub_241ACD4A4(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SnidgetLevelChartView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_241ACD440(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SnidgetLevelChartView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_241ACD440(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_241ACD4A4(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for SnidgetLevelChartView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SnidgetLevelChartView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_241ACD4A4(v6, v7);
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_release();
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  swift_release();
  *(void *)(a1 + 48) = a2[6];
  swift_release();
  *(void *)(a1 + 56) = a2[7];
  return a1;
}

uint64_t getEnumTagSinglePayload for SnidgetLevelChartView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SnidgetLevelChartView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SnidgetLevelChartView()
{
  return &type metadata for SnidgetLevelChartView;
}

uint64_t sub_241BA093C()
{
  return type metadata accessor for SnidgetLevelChartView.ViewModel();
}

uint64_t sub_241BA0944()
{
  uint64_t result = sub_241CDA090();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD7F90();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_241BA0A10()
{
  return sub_241BA0A6C(&qword_26B035350, sub_241BA0358, (void (*)(void))sub_241BA04A4, (void (*)(void))sub_241BA0AF8);
}

uint64_t sub_241BA0A6C(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BA0AF8()
{
  return sub_241B9EEE4(&qword_26B0308E8, MEMORY[0x263F1A470]);
}

uint64_t sub_241BA0B2C()
{
  return swift_getWitnessTable();
}

unsigned char *storeEnumTagSinglePayload for SnidgetLevelChartView.ViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241BA0D3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SnidgetLevelChartView.ViewModel.CodingKeys()
{
  return &type metadata for SnidgetLevelChartView.ViewModel.CodingKeys;
}

unint64_t sub_241BA0D78()
{
  unint64_t result = qword_268D42FA0;
  if (!qword_268D42FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42FA0);
  }
  return result;
}

unint64_t sub_241BA0DD0()
{
  unint64_t result = qword_26B0385F0;
  if (!qword_26B0385F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0385F0);
  }
  return result;
}

unint64_t sub_241BA0E28()
{
  unint64_t result = qword_26B0385E8;
  if (!qword_26B0385E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0385E8);
  }
  return result;
}

uint64_t sub_241BA0E7C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000241CE2340 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43746E65636361 && a2 == 0xEB00000000726F6CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_241BA0F84@<X0>(uint64_t a1@<X8>)
{
  return sub_241B9E7AC(*(void (**)(uint64_t))(v1 + 48), *(void *)(v1 + 24), *(void *)(v1 + 40), a1);
}

uint64_t sub_241BA0F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241B9CE54(a1, v2 + 16, a2);
}

uint64_t sub_241BA0FA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_241BA0FCC(uint64_t a1)
{
  return a1;
}

void sub_241BA0FF8()
{
  if (!qword_26B0352E8)
  {
    sub_241BA1550(255, &qword_26B0353A8, (uint64_t (*)(uint64_t))sub_241B9F3F8, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241CDA8C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0352E8);
    }
  }
}

uint64_t sub_241BA1090()
{
  return sub_241CDAA10();
}

uint64_t sub_241BA10B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241B9EB50(a1, a2, a3, a4, MEMORY[0x263F191A0], MEMORY[0x263F193C0]);
}

uint64_t sub_241BA10F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_241BA115C()
{
  if (!qword_26B0352E0)
  {
    sub_241B9F5DC();
    unint64_t v0 = sub_241CDA8C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0352E0);
    }
  }
}

uint64_t sub_241BA11C4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_241CDA060();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_241BA11F0()
{
  return sub_241CDA070();
}

uint64_t sub_241BA1218()
{
  uint64_t v1 = sub_241CDA8B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  sub_241ACD4A4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_241BA1300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CDA8B0() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_241B9DDA8(a1, (_OWORD *)(v2 + 16), v6, a2);
}

uint64_t sub_241BA1384(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241BA1394()
{
  return swift_release();
}

uint64_t sub_241BA139C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_241BA1414()
{
  sub_241ACD4A4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_241BA1468(void *a1)
{
  return sub_241B9C144(a1, v1 + 16);
}

uint64_t sub_241BA1470(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_241BA1550(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_241BA14E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_241BA1550(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241BA15B4()
{
  if (!qword_268D42FA8)
  {
    sub_241BA16A0();
    sub_241BA1754();
    sub_241B9EEE4(&qword_268D43040, (void (*)(uint64_t))sub_241BA1754);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D42FA8);
    }
  }
}

void sub_241BA16A0()
{
  if (!qword_268D42FB0)
  {
    sub_241BA1754();
    sub_241B9EEE4(&qword_268D43040, (void (*)(uint64_t))sub_241BA1754);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D42FB0);
    }
  }
}

void sub_241BA1754()
{
  if (!qword_268D42FB8)
  {
    sub_241BA17B8();
    sub_241BA1F80();
    unint64_t v0 = sub_241CDA300();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42FB8);
    }
  }
}

void sub_241BA17B8()
{
  if (!qword_268D42FC0)
  {
    sub_241BA1BBC(255, &qword_268D42FC8, (void (*)(uint64_t))sub_241BA18B4);
    sub_241BA1BBC(255, &qword_268D42FF8, (void (*)(uint64_t))sub_241BA1C84);
    unint64_t v0 = sub_241CDA270();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42FC0);
    }
  }
}

void sub_241BA1864(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_241BA18B4()
{
  if (!qword_268D42FD0)
  {
    sub_241BA19D4();
    sub_241BA1EFC(255, &qword_268D42FE0, MEMORY[0x263EFCC20]);
    sub_241CDA2D0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D42FD0);
    }
  }
}

void sub_241BA19D4()
{
  if (!qword_268D42FD8)
  {
    sub_241BA1EFC(255, &qword_268D42FE0, MEMORY[0x263EFCC20]);
    sub_241CDA2D0();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D42FD8);
    }
  }
}

unint64_t sub_241BA1AC4()
{
  unint64_t result = qword_268D42FE8;
  if (!qword_268D42FE8)
  {
    sub_241BA1864(255, (unint64_t *)&qword_268D42F08, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6E0], MEMORY[0x263F8D870]);
    sub_241BA1B68();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42FE8);
  }
  return result;
}

unint64_t sub_241BA1B68()
{
  unint64_t result = qword_268D42FF0;
  if (!qword_268D42FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42FF0);
  }
  return result;
}

void sub_241BA1BBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_241BA1864(255, (unint64_t *)&qword_268D42F08, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6E0], MEMORY[0x263F8D870]);
    a3(255);
    sub_241BA1AC4();
    unint64_t v5 = sub_241CDADA0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241BA1C84()
{
  if (!qword_268D43000)
  {
    sub_241BA1CEC();
    unint64_t v0 = sub_241CDA270();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43000);
    }
  }
}

void sub_241BA1CEC()
{
  if (!qword_268D43008)
  {
    sub_241BA1E0C();
    sub_241BA1EFC(255, &qword_268D43018, MEMORY[0x263EFCD90]);
    sub_241CDA320();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D43008);
    }
  }
}

void sub_241BA1E0C()
{
  if (!qword_268D43010)
  {
    sub_241BA1EFC(255, &qword_268D43018, MEMORY[0x263EFCD90]);
    sub_241CDA320();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D43010);
    }
  }
}

void sub_241BA1EFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v5) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

unint64_t sub_241BA1F80()
{
  unint64_t result = qword_268D43020;
  if (!qword_268D43020)
  {
    sub_241BA17B8();
    sub_241BA2000();
    sub_241BA2158();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43020);
  }
  return result;
}

unint64_t sub_241BA2000()
{
  unint64_t result = qword_268D43028;
  if (!qword_268D43028)
  {
    sub_241BA1BBC(255, &qword_268D42FC8, (void (*)(uint64_t))sub_241BA18B4);
    sub_241BA19D4();
    sub_241BA1EFC(255, &qword_268D42FE0, MEMORY[0x263EFCC20]);
    sub_241CDA2D0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43028);
  }
  return result;
}

unint64_t sub_241BA2158()
{
  unint64_t result = qword_268D43030;
  if (!qword_268D43030)
  {
    sub_241BA1BBC(255, &qword_268D42FF8, (void (*)(uint64_t))sub_241BA1C84);
    sub_241BA21E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43030);
  }
  return result;
}

unint64_t sub_241BA21E4()
{
  unint64_t result = qword_268D43038;
  if (!qword_268D43038)
  {
    sub_241BA1C84();
    sub_241BA1E0C();
    sub_241BA1EFC(255, &qword_268D43018, MEMORY[0x263EFCD90]);
    sub_241CDA320();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43038);
  }
  return result;
}

uint64_t *sub_241BA2330(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    unint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_241CD95E0();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_241CD78F0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_241A727F4(0);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    sub_241AC7534();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = a3[8];
    uint64_t v23 = (char *)v4 + v22;
    uint64_t v24 = (char *)a2 + v22;
    sub_241AC75E4();
    uint64_t v26 = v25;
    uint64_t v27 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v25))
    {
      sub_241B67D9C(0);
      memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v23, v24, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
    }
  }
  return v4;
}

void sub_241BA2604(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241BA2668(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_241CD78F0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = a1 + a2[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_241AC75E4();
  uint64_t v13 = v12;
  uint64_t v16 = *(void *)(v12 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v11, 1, v12);
  if (!result)
  {
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
    return v15(v11, v13);
  }
  return result;
}

unsigned char *sub_241BA2844(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_241CD95E0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_241CD78F0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_241A727F4(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  sub_241AC7534();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  sub_241AC75E4();
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v23))
  {
    sub_241B67D9C(0);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 16))(v21, v22, v24);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
  }
  return a1;
}

unsigned char *sub_241BA2AC8(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_241CD95E0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_241CD78F0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_241A727F4(0);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  sub_241AC7534();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  sub_241AC75E4();
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  uint64_t v29 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v21) = v29(v24, 1, v26);
  int v30 = v29(v25, 1, v27);
  if (!v21)
  {
    if (!v30)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 24))(v24, v25, v27);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v24, v27);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    sub_241B67D9C(0);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 16))(v24, v25, v27);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
  return a1;
}

unsigned char *sub_241BA2E0C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_241CD95E0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_241CD78F0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_241A727F4(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[7];
  int v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  sub_241AC7534();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  sub_241AC75E4();
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v23))
  {
    sub_241B67D9C(0);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 32))(v21, v22, v24);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
  }
  return a1;
}

unsigned char *sub_241BA3090(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_241CD95E0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_241CD78F0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_241A727F4(0);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  sub_241AC7534();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  sub_241AC75E4();
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  uint64_t v29 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v21) = v29(v24, 1, v26);
  int v30 = v29(v25, 1, v27);
  if (!v21)
  {
    if (!v30)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 40))(v24, v25, v27);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v24, v27);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    sub_241B67D9C(0);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 32))(v24, v25, v27);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
  return a1;
}

uint64_t sub_241BA33D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241BA33E8);
}

uint64_t sub_241BA33E8(unsigned __int8 *a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v8 = sub_241CD95E0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48);
    return v14(&a1[v11], a2, v9);
  }
  sub_241A727F4(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_11;
  }
  sub_241AC7534();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_11;
  }
  sub_241B67D9C(0);
  int v16 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = &a1[a3[8]];

  return v16(v18, a2, v17);
}

uint64_t sub_241BA35A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241BA35B8);
}

unsigned char *sub_241BA35B8(unsigned char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
    return result;
  }
  uint64_t v8 = sub_241CD95E0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (unsigned char *)v14(&v5[v11], a2, a2, v9);
  }
  sub_241A727F4(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  sub_241AC7534();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_9;
  }
  sub_241B67D9C(0);
  int v16 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = &v5[a4[8]];

  return (unsigned char *)v16(v18, a2, a2, v17);
}

uint64_t _s8WorkPlanVMa()
{
  uint64_t result = qword_26B031CB0;
  if (!qword_26B031CB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241BA37C4()
{
  sub_241CD95E0();
  if (v0 <= 0x3F)
  {
    sub_241A727F4(319);
    if (v1 <= 0x3F)
    {
      sub_241AC7534();
      if (v2 <= 0x3F)
      {
        sub_241B67D9C(319);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_241BA3910()
{
  return sub_241CDC200();
}

uint64_t sub_241BA39A4()
{
  sub_241CDB170();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241BA3A24()
{
  return sub_241CDC200();
}

uint64_t sub_241BA3AB4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_241CDBFD0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_241BA3B14(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD00000000000001ALL;
  if (*v1) {
    unint64_t v2 = 0x6D65744964656566;
  }
  unint64_t v3 = 0x8000000241CDD100;
  if (*v1) {
    unint64_t v3 = 0xED0000796C6E4F73;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_241BA3B64(char *a1, char *a2)
{
  return sub_241B69908(*a1, *a2);
}

uint64_t sub_241BA3B70()
{
  return sub_241CDB280();
}

uint64_t sub_241BA3BD0()
{
  return sub_241CDB270();
}

id sub_241BA3C20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241CD94F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B67D9C(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD9780();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v51 - v13;
  uint64_t v15 = _s8WorkPlanVMa();
  uint64_t v16 = sub_241CD95C0();
  id result = objc_msgSend(self, sel_dataTypeWithCode_, v16);
  if (result)
  {
    id v70 = result;
    uint64_t v67 = v5;
    uint64_t v68 = v2;
    sub_241CD9750();
    sub_241BA5348(v1 + *(int *)(v15 + 32), (uint64_t)v8, (uint64_t (*)(void))sub_241B67D9C);
    sub_241AC75E4();
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v8, 1, v18);
    uint64_t v65 = v9;
    uint64_t v66 = v14;
    if (v21 == 1)
    {
      sub_241BA5D98((uint64_t)v8, (uint64_t (*)(void))sub_241B67D9C);
      uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_241BA2604(0, &qword_26B036978, MEMORY[0x263F45368], MEMORY[0x263F8E0F8]);
      uint64_t v23 = *(void *)(sub_241CD9510() - 8);
      unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v61 = *(void *)(v23 + 72);
      uint64_t v62 = 2 * v61;
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_241CEC2D0;
      uint64_t v64 = v25;
      unint64_t v26 = v25 + v24;
      sub_241BA2604(0, &qword_26B036988, MEMORY[0x263F45420], v22);
      uint64_t v27 = v69;
      uint64_t v28 = *(unsigned __int8 *)(v69 + 80);
      uint64_t v57 = ((v28 + 32) & ~v28) + *(void *)(v69 + 72);
      uint64_t v58 = v29;
      uint64_t v55 = (v28 + 32) & ~v28;
      uint64_t v56 = v28 | 7;
      uint64_t v30 = swift_allocObject();
      long long v63 = xmmword_241CEB730;
      *(_OWORD *)(v30 + 16) = xmmword_241CEB730;
      sub_241CDB420();
      sub_241CD9740();
      swift_bridgeObjectRelease();
      sub_241CD9770();
      *(void *)&long long v59 = *(void *)(v27 + 8);
      uint64_t v60 = (v27 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      ((void (*)(char *, uint64_t))v59)(v12, v9);
      uint64_t v31 = *MEMORY[0x263F45358];
      unint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
      uint64_t v53 = v3 + 104;
      uint64_t v32 = v67;
      uint64_t v33 = v68;
      v52(v67, v31, v68);
      unint64_t v54 = v26;
      sub_241CD9500();
      v61 += v26;
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v63;
      (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v34 + v55, v14, v9);
      uint64_t v35 = v33;
      uint64_t v36 = v33;
      unint64_t v37 = v52;
      v52(v32, *MEMORY[0x263F45350], v35);
      sub_241CD9500();
      *(_OWORD *)(swift_allocObject() + 16) = v63;
      sub_241CD9760();
      v37(v32, *MEMORY[0x263F45348], v36);
      sub_241CD9500();

      ((void (*)(char *, uint64_t))v59)(v66, v65);
    }
    else
    {
      uint64_t v38 = (void *)sub_241CDAEB0();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);

      uint64_t v39 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
      sub_241BA2604(0, &qword_26B036978, MEMORY[0x263F45368], MEMORY[0x263F8E0F8]);
      uint64_t v40 = *(void *)(sub_241CD9510() - 8);
      *(void *)&long long v63 = *(void *)(v40 + 72);
      unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_241CEB720;
      uint64_t v64 = v42;
      uint64_t v62 = v42 + v41;
      sub_241BA2604(0, &qword_26B036988, MEMORY[0x263F45420], v39);
      uint64_t v43 = v69;
      unint64_t v44 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      uint64_t v60 = v44 + *(void *)(v69 + 72);
      uint64_t v61 = v45;
      uint64_t v46 = swift_allocObject();
      long long v59 = xmmword_241CEB730;
      *(_OWORD *)(v46 + 16) = xmmword_241CEB730;
      (*(void (**)(unint64_t, char *, uint64_t))(v43 + 16))(v46 + v44, v14, v9);
      uint64_t v47 = *MEMORY[0x263F45348];
      uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
      uint64_t v50 = v67;
      uint64_t v49 = v68;
      v48(v67, v47, v68);
      sub_241CD9500();
      *(_OWORD *)(swift_allocObject() + 16) = v59;
      sub_241CD9760();
      v48(v50, v47, v49);
      sub_241CD9500();

      (*(void (**)(char *, uint64_t))(v43 + 8))(v66, v65);
    }
    return (id)v64;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_241BA43D0(char a1)
{
  unint64_t result = 0x654E657461647075;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_241BA449C(void *a1)
{
  uint64_t v3 = v1;
  sub_241BA5FA8(0, &qword_268D43098, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  sub_241A311E0(a1, a1[3]);
  sub_241BA5E98();
  sub_241CDC230();
  v11[15] = *v3;
  v11[14] = 0;
  sub_241BA600C();
  sub_241CDC0A0();
  if (!v2)
  {
    _s8WorkPlanVMa();
    v11[13] = 1;
    sub_241CD95E0();
    sub_241BA52B8(&qword_268D430A8, MEMORY[0x263F453A8]);
    sub_241CDC0A0();
    v11[12] = 2;
    sub_241CD78F0();
    sub_241BA52B8(&qword_26B035528, MEMORY[0x263F45718]);
    sub_241CDC060();
    v11[11] = 3;
    sub_241AC7534();
    sub_241BA52B8(&qword_268D430B0, (void (*)(uint64_t))sub_241AC7534);
    sub_241CDC0A0();
    v11[10] = 4;
    sub_241AC75E4();
    sub_241BA52B8(&qword_268D42D20, (void (*)(uint64_t))sub_241AC75E4);
    sub_241CDC060();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_241BA47EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  sub_241B67D9C(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v45 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AC7534();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  uint64_t v48 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A727F4(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v49 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD95E0();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v51 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BA5FA8(0, &qword_268D43070, MEMORY[0x263F8E040]);
  uint64_t v54 = v12;
  uint64_t v50 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v41 - v13;
  uint64_t v15 = _s8WorkPlanVMa();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = &v18[*(int *)(v16 + 24)];
  uint64_t v19 = (uint64_t)v58;
  uint64_t v20 = sub_241CD78F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = (uint64_t)&v18[*(int *)(v15 + 32)];
  sub_241AC75E4();
  uint64_t v23 = v22;
  unint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v56 = v21;
  v24(v21, 1, 1, v22);
  sub_241A311E0(a1, a1[3]);
  sub_241BA5E98();
  uint64_t v55 = v14;
  uint64_t v25 = (uint64_t)v57;
  sub_241CDC220();
  uint64_t v26 = (uint64_t)v58;
  if (v25)
  {
    sub_241A31190((uint64_t)a1);
    sub_241BA5D98(v26, (uint64_t (*)(void))sub_241A727F4);
    uint64_t v40 = v56;
    uint64_t v39 = (uint64_t (*)(void))sub_241B67D9C;
  }
  else
  {
    v41[1] = v23;
    v41[2] = v20;
    uint64_t v27 = v50;
    uint64_t v28 = v51;
    uint64_t v42 = v15;
    uint64_t v43 = v18;
    uint64_t v30 = v52;
    uint64_t v29 = v53;
    uint64_t v57 = a1;
    char v63 = 0;
    sub_241BA5EEC();
    sub_241CDC030();
    uint64_t v31 = v43;
    *uint64_t v43 = v64;
    char v62 = 1;
    sub_241BA52B8(&qword_268D43088, MEMORY[0x263F453A8]);
    sub_241CDC030();
    uint64_t v32 = v27;
    (*(void (**)(unsigned char *, char *, uint64_t))(v30 + 32))(&v31[*(int *)(v42 + 20)], v28, v29);
    char v61 = 2;
    sub_241BA52B8(&qword_26B035538, MEMORY[0x263F45718]);
    uint64_t v34 = (uint64_t)v49;
    sub_241CDBFF0();
    sub_241BA5F40(v34, (uint64_t)v58, (uint64_t (*)(void))sub_241A727F4);
    char v60 = 3;
    sub_241BA52B8(&qword_268D43090, (void (*)(uint64_t))sub_241AC7534);
    uint64_t v35 = v46;
    uint64_t v36 = v47;
    sub_241CDC030();
    uint64_t v37 = (uint64_t)v43;
    (*(void (**)(unsigned char *, char *, uint64_t))(v48 + 32))(&v43[*(int *)(v42 + 28)], v35, v36);
    char v59 = 4;
    sub_241BA52B8(&qword_268D42D10, (void (*)(uint64_t))sub_241AC75E4);
    uint64_t v38 = (uint64_t)v45;
    sub_241CDBFF0();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v55, v54);
    sub_241BA5F40(v38, v56, (uint64_t (*)(void))sub_241B67D9C);
    sub_241BA5348(v37, v44, (uint64_t (*)(void))_s8WorkPlanVMa);
    sub_241A31190((uint64_t)v57);
    uint64_t v39 = (uint64_t (*)(void))_s8WorkPlanVMa;
    uint64_t v40 = v37;
  }
  return sub_241BA5D98(v40, v39);
}

BOOL sub_241BA4FC0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_241BA4FD4()
{
  return sub_241BA43D0(*v0);
}

uint64_t sub_241BA4FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_241BA6458(a1, a2);
  *a3 = result;
  return result;
}

void sub_241BA5004(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_241BA5010(uint64_t a1)
{
  unint64_t v2 = sub_241BA5E98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241BA504C(uint64_t a1)
{
  unint64_t v2 = sub_241BA5E98();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241BA5088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_241CD95E0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_241BA50F8()
{
  uint64_t v0 = sub_241CD94F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BA3C20();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F45360], v0);
  return sub_241CD9500();
}

uint64_t sub_241BA51E0@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_241BA5348((uint64_t)a1, (uint64_t)a2, (uint64_t (*)(void))_s8WorkPlanVMa);
  *a2 = *v2 & *a1 & 1;
  return result;
}

uint64_t sub_241BA5240@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241BA47EC(a1, a2);
}

uint64_t sub_241BA5258(void *a1)
{
  return sub_241BA449C(a1);
}

uint64_t sub_241BA5270()
{
  return sub_241BA52B8(&qword_26B035710, (void (*)(uint64_t))_s8WorkPlanVMa);
}

uint64_t sub_241BA52B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241BA5300()
{
  return sub_241BA52B8(&qword_26B035708, (void (*)(uint64_t))_s8WorkPlanVMa);
}

uint64_t sub_241BA5348(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

BOOL sub_241BA53B0(unsigned char *a1, unsigned __int8 *a2)
{
  sub_241AC75E4();
  uint64_t v68 = v4;
  uint64_t v66 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v61 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BA5CF8(0);
  uint64_t v63 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v67 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B67D9C(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v62 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v64 = (uint64_t)&v60 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v65 = (uint64_t)&v60 - v13;
  uint64_t v14 = sub_241CD78F0();
  uint64_t v69 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BA5D18(0);
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A727F4(0);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  unint64_t v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v60 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v60 - v28;
  id v70 = a1;
  double v71 = a2;
  int v30 = *a2;
  if (*a1) {
    unint64_t v31 = 0x6D65744964656566;
  }
  else {
    unint64_t v31 = 0xD00000000000001ALL;
  }
  if (*a1) {
    unint64_t v32 = 0xED0000796C6E4F73;
  }
  else {
    unint64_t v32 = 0x8000000241CDD100;
  }
  if (v30) {
    unint64_t v33 = 0x6D65744964656566;
  }
  else {
    unint64_t v33 = 0xD00000000000001ALL;
  }
  if (v30) {
    unint64_t v34 = 0xED0000796C6E4F73;
  }
  else {
    unint64_t v34 = 0x8000000241CDD100;
  }
  if (v31 == v33 && v32 == v34)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v35 = sub_241CDC100();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v35 & 1) == 0) {
      return result;
    }
  }
  uint64_t v37 = _s8WorkPlanVMa();
  uint64_t v38 = v70;
  uint64_t v39 = v71;
  if ((sub_241CD95B0() & 1) == 0) {
    return 0;
  }
  sub_241BA5348((uint64_t)&v38[*(int *)(v37 + 24)], (uint64_t)v29, (uint64_t (*)(void))sub_241A727F4);
  sub_241BA5348((uint64_t)&v39[*(int *)(v37 + 24)], (uint64_t)v27, (uint64_t (*)(void))sub_241A727F4);
  uint64_t v40 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_241BA5348((uint64_t)v29, (uint64_t)v20, (uint64_t (*)(void))sub_241A727F4);
  sub_241BA5348((uint64_t)v27, v40, (uint64_t (*)(void))sub_241A727F4);
  unint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  if (v41((uint64_t)v20, 1, v14) == 1)
  {
    sub_241BA5D98((uint64_t)v27, (uint64_t (*)(void))sub_241A727F4);
    sub_241BA5D98((uint64_t)v29, (uint64_t (*)(void))sub_241A727F4);
    if (v41(v40, 1, v14) == 1)
    {
      sub_241BA5D98((uint64_t)v20, (uint64_t (*)(void))sub_241A727F4);
      goto LABEL_26;
    }
LABEL_23:
    uint64_t v42 = sub_241BA5D18;
    uint64_t v43 = (uint64_t)v20;
LABEL_24:
    sub_241BA5D98(v43, (uint64_t (*)(void))v42);
    return 0;
  }
  sub_241BA5348((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(void))sub_241A727F4);
  if (v41(v40, 1, v14) == 1)
  {
    sub_241BA5D98((uint64_t)v27, (uint64_t (*)(void))sub_241A727F4);
    sub_241BA5D98((uint64_t)v29, (uint64_t (*)(void))sub_241A727F4);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v24, v14);
    goto LABEL_23;
  }
  uint64_t v44 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v16, v40, v14);
  sub_241BA52B8(&qword_26B035530, MEMORY[0x263F45718]);
  char v45 = sub_241CDB050();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v44 + 8);
  v46(v16, v14);
  sub_241BA5D98((uint64_t)v27, (uint64_t (*)(void))sub_241A727F4);
  sub_241BA5D98((uint64_t)v29, (uint64_t (*)(void))sub_241A727F4);
  v46(v24, v14);
  sub_241BA5D98((uint64_t)v20, (uint64_t (*)(void))sub_241A727F4);
  if ((v45 & 1) == 0) {
    return 0;
  }
LABEL_26:
  uint64_t v48 = v70;
  uint64_t v47 = v71;
  type metadata accessor for HKMCPregnancyState(0);
  sub_241BA52B8(&qword_268D43060, type metadata accessor for HKMCPregnancyState);
  sub_241BA52B8((unint64_t *)&unk_26B031F00, type metadata accessor for HKMCPregnancyState);
  if ((sub_241CD8090() & 1) == 0) {
    return 0;
  }
  uint64_t v49 = v65;
  sub_241BA5348((uint64_t)&v48[*(int *)(v37 + 32)], v65, (uint64_t (*)(void))sub_241B67D9C);
  uint64_t v50 = v64;
  sub_241BA5348((uint64_t)&v47[*(int *)(v37 + 32)], v64, (uint64_t (*)(void))sub_241B67D9C);
  uint64_t v51 = v67;
  uint64_t v52 = v67 + *(int *)(v63 + 48);
  sub_241BA5348(v49, v67, (uint64_t (*)(void))sub_241B67D9C);
  sub_241BA5348(v50, v52, (uint64_t (*)(void))sub_241B67D9C);
  uint64_t v53 = v66;
  uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  uint64_t v55 = v68;
  if (v54(v51, 1, v68) == 1)
  {
    sub_241BA5D98(v50, (uint64_t (*)(void))sub_241B67D9C);
    sub_241BA5D98(v49, (uint64_t (*)(void))sub_241B67D9C);
    if (v54(v52, 1, v55) == 1)
    {
      sub_241BA5D98(v51, (uint64_t (*)(void))sub_241B67D9C);
      return 1;
    }
    goto LABEL_32;
  }
  uint64_t v56 = v62;
  sub_241BA5348(v51, v62, (uint64_t (*)(void))sub_241B67D9C);
  if (v54(v52, 1, v55) == 1)
  {
    sub_241BA5D98(v50, (uint64_t (*)(void))sub_241B67D9C);
    sub_241BA5D98(v49, (uint64_t (*)(void))sub_241B67D9C);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v56, v55);
LABEL_32:
    uint64_t v42 = sub_241BA5CF8;
    uint64_t v43 = v51;
    goto LABEL_24;
  }
  uint64_t v57 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v61, v52, v55);
  sub_241BA5DF8();
  char v58 = sub_241CDB050();
  char v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  v59(v57, v55);
  sub_241BA5D98(v50, (uint64_t (*)(void))sub_241B67D9C);
  sub_241BA5D98(v49, (uint64_t (*)(void))sub_241B67D9C);
  v59((char *)v56, v55);
  sub_241BA5D98(v51, (uint64_t (*)(void))sub_241B67D9C);
  return (v58 & 1) != 0;
}

void sub_241BA5CF8(uint64_t a1)
{
}

void sub_241BA5D18(uint64_t a1)
{
}

void sub_241BA5D38(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_241BA5D98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_241BA5DF8()
{
  unint64_t result = qword_268D43068;
  if (!qword_268D43068)
  {
    sub_241AC75E4();
    sub_241BA52B8(&qword_268D42DD0, (void (*)(uint64_t))sub_241B67E34);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43068);
  }
  return result;
}

unint64_t sub_241BA5E98()
{
  unint64_t result = qword_268D43078;
  if (!qword_268D43078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43078);
  }
  return result;
}

unint64_t sub_241BA5EEC()
{
  unint64_t result = qword_268D43080;
  if (!qword_268D43080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43080);
  }
  return result;
}

uint64_t sub_241BA5F40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_241BA5FA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_241BA5E98();
    unint64_t v7 = a3(a1, &_s8WorkPlanV10CodingKeysON, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_241BA600C()
{
  unint64_t result = qword_268D430A0;
  if (!qword_268D430A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D430A0);
  }
  return result;
}

uint64_t _s8WorkPlanV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8WorkPlanV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241BA61BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8WorkPlanV10CodingKeysOMa()
{
  return &_s8WorkPlanV10CodingKeysON;
}

unsigned char *_s8WorkPlanV6UpdateOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241BA62C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8WorkPlanV6UpdateOMa()
{
  return &_s8WorkPlanV6UpdateON;
}

unint64_t sub_241BA62FC()
{
  unint64_t result = qword_268D430B8;
  if (!qword_268D430B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D430B8);
  }
  return result;
}

unint64_t sub_241BA6354()
{
  unint64_t result = qword_268D430C0;
  if (!qword_268D430C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D430C0);
  }
  return result;
}

unint64_t sub_241BA63AC()
{
  unint64_t result = qword_268D430C8;
  if (!qword_268D430C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D430C8);
  }
  return result;
}

unint64_t sub_241BA6404()
{
  unint64_t result = qword_268D430D0;
  if (!qword_268D430D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D430D0);
  }
  return result;
}

uint64_t sub_241BA6458(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654E657461647075 && a2 == 0xEC00000064656465;
  if (v2 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000241CE23C0 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000241CE23E0 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000241CE2400)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_241BA6684()
{
  unint64_t result = qword_268D430D8;
  if (!qword_268D430D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D430D8);
  }
  return result;
}

uint64_t sub_241BA66D8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = (uint64_t)v3;
  uint64_t v221 = a1;
  id v222 = a2;
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v226 = v6;
  uint64_t v227 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v201 = (char *)&v183 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  int v216 = (char *)&v183 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v228 = (char *)&v183 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v203 = (char *)&v183 - v14;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241BA8878(0, &qword_26B038880, MEMORY[0x263F45770], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v195 = (uint64_t)&v183 - v17;
  uint64_t v199 = sub_241CD73B0();
  uint64_t v198 = *(void *)(v199 - 8);
  MEMORY[0x270FA5388](v199);
  uint64_t v200 = (char *)&v183 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_241CD75A0();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v211 = (char *)&v183 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BA8878(0, &qword_26B032040, MEMORY[0x263F45718], v15);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v197 = (uint64_t)&v183 - v23;
  uint64_t v206 = sub_241CD87B0();
  uint64_t v208 = *(void *)(v206 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v206);
  uint64_t v196 = (char *)&v183 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v202 = (char *)&v183 - v27;
  MEMORY[0x270FA5388](v26);
  unint64_t v210 = (char *)&v183 - v28;
  sub_241BA8878(0, &qword_26B032098, MEMORY[0x263F43658], v15);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v205 = (uint64_t)&v183 - v30;
  uint64_t v213 = sub_241CD7FD0();
  uint64_t v214 = *(void *)(v213 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v213);
  uint64_t v204 = (char *)&v183 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v212 = (char *)&v183 - v33;
  uint64_t v217 = sub_241CD6D00();
  unint64_t v34 = *(void **)(v217 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v217);
  uint64_t v207 = (char *)&v183 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v219 = (char *)&v183 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v209 = (char *)&v183 - v40;
  MEMORY[0x270FA5388](v39);
  uint64_t v220 = (char *)&v183 - v41;
  uint64_t v42 = sub_241CD6970();
  uint64_t v223 = *(void *)(v42 - 8);
  uint64_t v224 = (void *)v42;
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  char v45 = (char *)&v183 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  uint64_t v47 = (char *)&v183 - v46;
  uint64_t v48 = self;
  uint64_t v49 = (void *)*v3;
  id v50 = objc_msgSend(v48, sel_sharedInstanceForHealthStore_, *v3);
  id v225 = v50;
  if (!v50
    || (uint64_t v51 = (char *)v3[1],
        (id v215 = objc_msgSend(v50, sel_displayTypeForObjectType_, v51)) == 0))
  {
    sub_241CDA0F0();
    sub_241A747C8((uint64_t)v3);
    sub_241A747C8((uint64_t)v3);
    double v71 = sub_241CDA190();
    os_log_type_t v72 = sub_241CDB650();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v223 = swift_slowAlloc();
      uint64_t v224 = (void *)swift_slowAlloc();
      v229[0] = (uint64_t)v224;
      *(_DWORD *)uint64_t v73 = 136446467;
      uint64_t v218 = a3;
      uint64_t v230 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CE2220, v229);
      sub_241CDBBF0();
      *(_WORD *)(v73 + 12) = 2113;
      uint64_t v74 = (uint64_t)v3;
      double v75 = (void *)v3[1];
      uint64_t v230 = (uint64_t)v75;
      id v76 = v75;
      a3 = v218;
      sub_241CDBBF0();
      uint64_t v77 = v223;
      *(void *)uint64_t v223 = v75;
      sub_241A74850(v74);
      sub_241A74850(v74);
      _os_log_impl(&dword_241A23000, v71, v72, "%{public}s Could not access displayType for %{private}@", (uint8_t *)v73, 0x16u);
      sub_241A96044();
      uint64_t v78 = 1;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v77, -1, -1);
      unint64_t v79 = (unint64_t)v224;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v79, -1, -1);
      MEMORY[0x245637F20](v73, -1, -1);

      (*(void (**)(char *, uint64_t))(v227 + 8))(v228, v226);
    }
    else
    {

      sub_241A74850((uint64_t)v3);
      sub_241A74850((uint64_t)v3);

      (*(void (**)(char *, uint64_t))(v227 + 8))(v228, v226);
      uint64_t v78 = 1;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(a3, v78, 1, v19);
  }
  unint64_t v190 = v34;
  uint64_t v192 = v20;
  uint64_t v191 = v19;
  uint64_t v218 = a3;
  uint64_t v52 = (void *)sub_241CDB4D0();
  uint64_t v228 = v51;
  uint64_t v189 = sub_241CA1EFC(v51);
  uint64_t v193 = v53;

  uint64_t v54 = *(void **)(v4 + 32);
  type metadata accessor for AlertLocalization();
  uint64_t v55 = swift_allocObject();
  id v56 = v49;
  id v57 = v54;
  char v58 = v56;
  id v59 = v57;
  sub_241CD6EA0();
  sub_241CD6DC0();
  *(void *)(v55 + OBJC_IVAR____TtC9Summaries17AlertLocalization____lazy_storage___displayTypeController) = 0;
  *(void *)(v55 + OBJC_IVAR____TtC9Summaries17AlertLocalization_healthStore) = v58;
  *(void *)(v55 + OBJC_IVAR____TtC9Summaries17AlertLocalization_unitPreferenceController) = v59;
  uint64_t v194 = v55;
  *(unsigned char *)(v55 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) = 0;
  id v60 = objc_msgSend(*(id *)(v4 + 24), sel_sharingEntries);
  uint64_t v61 = sub_241A313AC(0, &qword_26B038050);
  unint64_t v62 = sub_241CDB2C0();

  sub_241A747C8(v4);
  uint64_t v63 = sub_241BA88DC(v62);
  uint64_t v188 = v4;
  sub_241A74850(v4);
  swift_bridgeObjectRelease();
  if (v63)
  {
    sub_241A313AC(0, &qword_268D430E0);
    uint64_t v64 = (void *)sub_241CDB6A0();
    v229[3] = v61;
    v229[4] = MEMORY[0x263F439B8];
    v229[0] = (uint64_t)v63;
    id v65 = v63;
    sub_241CDB690();
    uint64_t v66 = (void *)sub_241CDB680();
    swift_bridgeObjectRelease();

    sub_241A31190((uint64_t)v229);
    uint64_t v67 = (void *)sub_241CDB4D0();
    if (v66)
    {
      id v68 = v66;
      sub_241CDBB70();

      (*(void (**)(char *, char *, void *))(v223 + 32))(v47, v45, v224);
      uint64_t v70 = v221;
      id v69 = v222;
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v67 = (void *)sub_241CDB4D0();
  }
  uint64_t v70 = v221;
  sub_241CD6960();
  uint64_t v66 = 0;
  id v69 = v222;
LABEL_11:
  uint64_t v80 = v228;
  uint64_t v81 = sub_241A9A62C(v228, v67, (uint64_t)v47, v69, v70);
  uint64_t v187 = v82;
  int v216 = (char *)v81;
  (*(void (**)(char *, void *))(v223 + 8))(v47, v224);

  id v184 = v58;
  unint64_t v83 = (void *)sub_241CDB4D0();
  uint64_t v84 = sub_241A9B2A0(v80, v83, v70);
  uint64_t v224 = 0;
  uint64_t v223 = v85;
  uint64_t v201 = (char *)v84;

  uint64_t v86 = v190;
  uint64_t v87 = v220;
  uint64_t v186 = sub_241A9F88C(v80);
  uint64_t v185 = v88;
  sub_241CD6CF0();
  if (v69)
  {
    id v89 = v69;
    objc_msgSend(v89, sel_endDate);
    id v90 = (id)HKDecodeDateForValue();
    uint64_t v91 = v209;
    sub_241CD6CB0();

    uint64_t v92 = (void (*)(char *, uint64_t))v86[1];
    uint64_t v93 = v87;
    uint64_t v94 = v87;
    uint64_t v95 = v217;
    v92(v93, v217);
    uint64_t v96 = (void (*)(char *, char *, uint64_t))v86[4];
    v96(v94, v91, v95);
    uint64_t v97 = v219;
    sub_241CD6CF0();
    id v98 = v89;
    objc_msgSend(v98, sel_startDate);
    id v99 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    v92(v97, v95);
    v96(v97, v91, v95);
    uint64_t v86 = v190;
  }
  else
  {
    sub_241CD6CF0();
  }
  uint64_t v20 = v192;
  uint64_t v100 = v212;
  uint64_t v101 = v205;
  sub_241C7AF2C(v205);
  uint64_t v102 = v214;
  uint64_t v103 = v213;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v214 + 48))(v101, 1, v213) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v100, v101, v103);
LABEL_18:
    id v105 = objc_msgSend(v215, sel_color);
    id v106 = (void (*)(char *, char *, uint64_t))v86[2];
    uint64_t v107 = v217;
    v106(v209, v219, v217);
    v106(v207, v220, v107);
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v204, v100, v103);
    uint64_t v108 = v228;
    uint64_t v109 = (char *)v105;
    uint64_t v110 = v210;
    uint64_t v228 = v109;
    sub_241CD8780();
    uint64_t v111 = v224;
    uint64_t v112 = sub_241CD8770();
    if (v111)
    {

      swift_bridgeObjectRelease();
      uint64_t v114 = v203;
      sub_241CDA0F0();
      uint64_t v115 = v208;
      long long v116 = *(void (**)(char *, char *, uint64_t))(v208 + 16);
      id v117 = v202;
      uint64_t v118 = v206;
      v116(v202, v110, v206);
      uint64_t v119 = sub_241CDA190();
      os_log_type_t v120 = sub_241CDB650();
      int v121 = v120;
      if (os_log_type_enabled(v119, v120))
      {
        uint64_t v122 = swift_slowAlloc();
        LODWORD(v223) = v121;
        uint64_t v123 = v122;
        uint64_t v224 = (void *)swift_slowAlloc();
        v229[0] = (uint64_t)v224;
        *(_DWORD *)uint64_t v123 = 136446467;
        uint64_t v230 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CE2220, v229);
        sub_241CDBBF0();
        *(_WORD *)(v123 + 12) = 2081;
        v116(v196, v117, v118);
        uint64_t v124 = sub_241CDB120();
        uint64_t v230 = sub_241A33FE4(v124, v125, v229);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        uint64_t v126 = *(void (**)(char *, uint64_t))(v208 + 8);
        v126(v117, v118);
        _os_log_impl(&dword_241A23000, v119, (os_log_type_t)v223, "%{public}s Could not encode SummaryAlertTileViewController.DataModel %{private}s", (uint8_t *)v123, 0x16u);
        unint64_t v127 = (unint64_t)v224;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v127, -1, -1);
        MEMORY[0x245637F20](v123, -1, -1);

        swift_release();
        (*(void (**)(char *, uint64_t))(v227 + 8))(v203, v226);
        v126(v210, v118);
      }
      else
      {

        swift_release();
        id v134 = *(void (**)(char *, uint64_t))(v115 + 8);
        v134(v117, v118);

        (*(void (**)(char *, uint64_t))(v227 + 8))(v114, v226);
        v134(v110, v118);
      }
      (*(void (**)(char *, uint64_t))(v214 + 8))(v212, v213);
      uint64_t v135 = (void (*)(char *, uint64_t))v190[1];
      uint64_t v136 = v217;
      v135(v219, v217);
      v135(v220, v136);
      uint64_t v78 = 1;
      a3 = v218;
      uint64_t v19 = v191;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(a3, v78, 1, v19);
    }
    uint64_t v128 = v112;
    unint64_t v129 = v113;
    id v130 = (void *)sub_241CDB4D0();
    uint64_t v131 = (void *)sub_241CD73C0();

    if (v131)
    {
      id v132 = objc_msgSend(v131, sel_type);

      uint64_t v133 = v197;
      sub_241A9FC78(v221, v197);
      if (v132 == (id)1) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v133 = v197;
      sub_241A9FC78(v221, v197);
    }
    uint64_t v137 = sub_241CD78F0();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 48))(v133, 1, v137) != 1)
    {
      sub_241BA8A98(v133, &qword_26B032040, MEMORY[0x263F45718]);
      type metadata accessor for SummaryAlertTileViewController();
      sub_241CD7410();
LABEL_30:
      (*(void (**)(char *, void, uint64_t))(v198 + 104))(v200, *MEMORY[0x263F454F8], v199);
      sub_241A3731C(v128, v129);
      sub_241CDB4D0();
      uint64_t v224 = (void *)v129;
      sub_241CD74A0();
      id v138 = v215;
      id v139 = objc_msgSend(v215, sel_localization);
      id v140 = objc_msgSend(v139, sel_displayName);

      sub_241CDB0D0();
      sub_241CD7490();
      id v141 = objc_msgSend(v138, sel_localization);
      id v142 = objc_msgSend(v141, sel_summary);

      if (v142)
      {
        sub_241CDB0D0();
      }
      uint64_t v143 = v214;
      sub_241CD74D0();
      id v144 = v215;
      id v145 = objc_msgSend(v215, sel_displayCategory);
      sub_241CD7500();

      id v146 = objc_msgSend(v144, sel_displayCategory);
      id v147 = objc_msgSend(v146, sel_displayName);

      sub_241CDB0D0();
      sub_241CD74F0();
      sub_241A33460();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = v108;
      v229[0] = inited;
      sub_241CDB2E0();
      unint64_t v149 = v229[0];
      if ((unint64_t)v229[0] >> 62)
      {
        uint64_t v152 = v108;
        swift_bridgeObjectRetain();
        uint64_t v153 = sub_241CDBF50();
        swift_bridgeObjectRelease();
        if (!v153) {
          goto LABEL_36;
        }
      }
      else
      {
        uint64_t v150 = *(void *)((v229[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v151 = v108;
        if (!v150)
        {
LABEL_36:
          swift_bridgeObjectRelease();
          sub_241CD74C0();
          sub_241CD7480();
          sub_241CD7470();
          sub_241BA8878(0, &qword_26B034F20, MEMORY[0x263F45618], MEMORY[0x263F8E0F8]);
          sub_241CD7520();
          uint64_t v154 = swift_allocObject();
          *(_OWORD *)(v154 + 16) = xmmword_241CEB730;
          swift_bridgeObjectRetain();
          sub_241CD7510();
          sub_241C69578(v154);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          sub_241CD7540();
          id v155 = objc_msgSend(v184, sel_profileIdentifier);
          id v156 = objc_msgSend(v155, sel_type);

          if (v156 == (id)1)
          {
            uint64_t v157 = sub_241CD7880();
            uint64_t v159 = v158;
            uint64_t v160 = (void (*)(uint64_t *, void))sub_241CD7550();
            sub_241C59F0C(&v230, v157, v159);
            swift_bridgeObjectRelease();
            v160(v229, 0);
            uint64_t v161 = sub_241CD7840();
            uint64_t v163 = v162;
            uint64_t v164 = (void (*)(uint64_t *, void))sub_241CD7550();
            sub_241C59F0C(&v230, v161, v163);
            swift_bridgeObjectRelease();
            v164(v229, 0);
          }
          uint64_t v20 = v192;
          if (v222)
          {
            id v165 = v222;
            unsigned __int8 v166 = objc_msgSend(v165, sel_hasStartDate);
            uint64_t v19 = v191;
            char v167 = v210;
            unint64_t v168 = (unint64_t)v224;
            if ((v166 & 1) != 0 && objc_msgSend(v165, sel_hasEndDate))
            {
              objc_msgSend(v165, sel_startDate);
              id v169 = (id)HKDecodeDateForValue();
              uint64_t v170 = (uint64_t)v209;
              sub_241CD6CB0();

              objc_msgSend(v165, sel_endDate);
              id v171 = (id)HKDecodeDateForValue();
              uint64_t v172 = (uint64_t)v207;
              sub_241CD6CB0();

              uint64_t v173 = v195;
              sub_241C7B38C(v170, v172, v195);
              uint64_t v174 = sub_241CD7A10();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v174 - 8) + 56))(v173, 0, 1, v174);
              sub_241CD74E0();

              swift_release();
              sub_241A37374(v128, (unint64_t)v224);

              uint64_t v175 = (void (*)(uint64_t, uint64_t))v190[1];
              uint64_t v176 = v217;
              v175(v172, v217);
              v175(v170, v176);
              (*(void (**)(char *, uint64_t))(v208 + 8))(v210, v206);
              (*(void (**)(char *, uint64_t))(v143 + 8))(v212, v213);
              v175((uint64_t)v219, v176);
              uint64_t v177 = v220;
              uint64_t v178 = v176;
            }
            else
            {

              swift_release();
              sub_241A37374(v128, v168);

              (*(void (**)(char *, uint64_t))(v208 + 8))(v167, v206);
              (*(void (**)(char *, uint64_t))(v143 + 8))(v212, v213);
              uint64_t v175 = (void (*)(uint64_t, uint64_t))v190[1];
              uint64_t v179 = v217;
              v175((uint64_t)v219, v217);
              uint64_t v177 = v220;
              uint64_t v178 = v179;
            }
            v175((uint64_t)v177, v178);
          }
          else
          {
            swift_release();

            sub_241A37374(v128, (unint64_t)v224);
            (*(void (**)(char *, uint64_t))(v208 + 8))(v210, v206);
            (*(void (**)(char *, uint64_t))(v143 + 8))(v212, v213);
            uint64_t v180 = (void (*)(char *, uint64_t))v190[1];
            uint64_t v181 = v217;
            v180(v219, v217);
            v180(v220, v181);
            uint64_t v19 = v191;
          }
          a3 = v218;
          (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v218, v211, v19);
          uint64_t v78 = 0;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(a3, v78, 1, v19);
        }
      }
      sub_241C69200(v149);
      goto LABEL_36;
    }
LABEL_28:
    sub_241BA8A98(v133, &qword_26B032040, MEMORY[0x263F45718]);
    goto LABEL_30;
  }
  sub_241BA8A98(v101, &qword_26B032098, MEMORY[0x263F43658]);
  id v104 = objc_msgSend(v215, sel_listIconImageName);
  sub_241CDB0D0();

  if ((id)HKHealthUIFrameworkBundle())
  {
    sub_241CD7FC0();
    goto LABEL_18;
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}