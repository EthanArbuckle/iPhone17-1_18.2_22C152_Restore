uint64_t sub_241A25A40(uint64_t a1)
{
  return sub_241A338CC(a1);
}

uint64_t sub_241A25A64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_241A36A74();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A29654(a1, v12);
  sub_241A37260((uint64_t)v12, (uint64_t)v11);
  sub_241A35FBC(0, (unint64_t *)&qword_26B032070);
  sub_241CDA5D0();
  sub_241A2C394(&qword_26B02EA88, (void (*)(uint64_t))sub_241A36A74);
  uint64_t v9 = sub_241CDA6D0();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_241A31190((uint64_t)v12);
  *a2 = v9;
  return result;
}

uint64_t *sub_241A25BC8(uint64_t *a1)
{
  v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_241A25C2C()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_241CDBBD0();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_241CDBBD0();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_241A25D4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_241A360C4();
    uint64_t v3 = sub_241CDBDE0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_241CDC1D0();
      swift_bridgeObjectRetain();
      sub_241CDB170();
      uint64_t result = sub_241CDC200();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_241CDC100(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_241CDC100();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_241A25EEC()
{
  return sub_241CD87F0();
}

uint64_t sub_241A25F64()
{
  swift_bridgeObjectRelease();
  sub_241A331C8(v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241A25FE4()
{
  swift_bridgeObjectRelease();
  sub_241A331C8(v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);

  sub_241A26090(v0 + OBJC_IVAR____TtC9Summaries32BalanceSummaryModelConfiguration_significantTimeChangePublisher, &qword_26B0368D8, MEMORY[0x263F07CB0]);

  return swift_deallocClassInstance();
}

uint64_t sub_241A26090(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A26100(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241A26100(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241A26164@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  uint64_t result = sub_241CDA530();
  *a1 = result;
  return result;
}

uint64_t sub_241A261C0()
{
  swift_bridgeObjectRelease();
  sub_241A331C8(v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241A26250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_241A36D64(0);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29DB0(0, &qword_26B034F90, (uint64_t (*)(uint64_t))sub_241A36CEC, MEMORY[0x263F8E0F8]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_241CEB720;
  sub_241CD7290();
  uint64_t v12 = sub_241CD7280();
  uint64_t v13 = sub_241A2BBDC(a1, v12, a2);
  swift_release();
  *(void *)(v11 + 32) = v13;
  *(void *)(v11 + 40) = sub_241A2B604(a1);
  v16[1] = v11;
  sub_241CDB2E0();
  sub_241A36CEC();
  sub_241A36124(0);
  sub_241A2C424(&qword_26B038958, (void (*)(uint64_t))sub_241A36CEC);
  sub_241A2C424(&qword_26B030360, sub_241A36124);
  sub_241CDA4C0();
  sub_241A2C424(&qword_26B02E9D8, sub_241A36D64);
  uint64_t v14 = sub_241CDA6D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a3 = v14;
  return result;
}

char *sub_241A264D0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD8F70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A35738(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[21];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[22];
  uint64_t v18 = &a1[v17];
  v19 = &a2[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_release();
  *(void *)&a1[a3[23]] = *(void *)&a2[a3[23]];
  swift_release();
  uint64_t v22 = a3[24];
  BOOL v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  *(void *)&a1[v22] = *(void *)v24;
  swift_release();
  *((void *)v23 + 1) = *((void *)v24 + 1);
  return a1;
}

uint64_t sub_241A266EC@<X0>(uint64_t *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  *a1 = result;
  return result;
}

void *sub_241A26748(uint64_t a1)
{
  uint64_t v3 = *v1;
  v32 = v1;
  uint64_t v41 = v3;
  uint64_t v4 = sub_241CD7740();
  uint64_t v34 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v39 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  v38 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A36968();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v7);
  v40 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_241CD7650();
  uint64_t v10 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_241CD7690();
  uint64_t v13 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v33 = a1;
  v35((char *)v1 + OBJC_IVAR____TtC9Summaries34SummariesSettingsGeneratorPipeline_context, a1, v4);
  v31[1] = sub_241CD76E0();
  sub_241A29A90(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v16 = sub_241CD73B0();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x263F45570], v16);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F45688], v37);
  sub_241CD7670();
  uint64_t v20 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))((uint64_t)v32 + OBJC_IVAR____TtC9Summaries34SummariesSettingsGeneratorPipeline_domain, v15, v36);
  uint64_t v21 = v38;
  uint64_t v23 = v33;
  uint64_t v22 = v34;
  v35(v38, v33, v34);
  unint64_t v24 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v25 = (v39 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v26 + v24, v21, v22);
  *(void *)(v26 + v25) = v41;
  sub_241A36CEC();
  sub_241A2C394(&qword_26B038958, (void (*)(uint64_t))sub_241A36CEC);
  v27 = v40;
  sub_241CDA620();
  sub_241A2C394(&qword_26B02EAB8, (void (*)(uint64_t))sub_241A36968);
  uint64_t v28 = v42;
  uint64_t v29 = sub_241CDA6D0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v22);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v28);
  uint64_t result = v20;
  *(void *)((char *)v20 + OBJC_IVAR____TtC9Summaries34SummariesSettingsGeneratorPipeline_publisher) = v29;
  return result;
}

uint64_t sub_241A26CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v39 = a2;
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_241CD8130();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  MEMORY[0x270FA5388](v3);
  v32 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD73B0();
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD8400();
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD8600();
  uint64_t v37 = *(void *)(v11 - 8);
  uint64_t v38 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  sub_241CD69E0();
  sub_241CD83E0();
  sub_241CD85D0();
  uint64_t v27 = sub_241CD85F0();
  unint64_t v26 = v14;
  sub_241A3731C(v27, v14);
  sub_241A274D8();
  type metadata accessor for SignificantChangesNotificationSwitchCellViewController();
  sub_241CD7410();
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v7, *MEMORY[0x263F45570], v5);
  sub_241CD76E0();
  uint64_t v15 = v39;
  uint64_t v16 = v27;
  unint64_t v17 = v26;
  sub_241CD74A0();
  sub_241CD85E0();
  sub_241CD83F0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
  sub_241CD7490();
  sub_241A3600C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB730;
  *(void *)(inited + 32) = sub_241CD7870();
  *(void *)(inited + 40) = v19;
  sub_241A25D4C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_241CD7570();
  uint64_t v20 = v32;
  uint64_t v21 = v33;
  uint64_t v22 = v34;
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, *MEMORY[0x263F43810], v34);
  sub_241CD8120();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v22);
  sub_241CD7580();
  sub_241CD7480();
  sub_241A37374(v16, v17);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v38);
  uint64_t v23 = sub_241CD75A0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v15, 0, 1, v23);
}

uint64_t sub_241A274D8()
{
  uint64_t v0 = sub_241CD6D70();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_241CD76E0();
  uint64_t v5 = (void *)sub_241CD73C0();

  if (v5)
  {
    id v6 = objc_msgSend(v5, sel_identifier);

    sub_241CD6D50();
    sub_241CD6D20();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_241CDBE00();
  sub_241CDB180();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v8[0];
}

uint64_t sub_241A27660(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  v53[1] = *MEMORY[0x263EF8340];
  uint64_t v48 = *a3;
  uint64_t v5 = sub_241CD7740();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v49 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = self;
  swift_bridgeObjectRetain();
  id v13 = objc_msgSend(v12, sel_sharedBehavior);
  if (!v13)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  unint64_t v14 = v13;
  id v15 = objc_msgSend(v13, sel_features);

  if (!v15) {
    goto LABEL_11;
  }
  unsigned int v16 = objc_msgSend(v15, sel_summaryOrchestration);

  uint64_t v50 = v5;
  uint64_t v51 = a2;
  if (v16)
  {
    sub_241CDA0F0();
    unint64_t v17 = sub_241CDA190();
    os_log_type_t v18 = sub_241CDB670();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v47 = a1;
      uint64_t v20 = (uint8_t *)v19;
      uint64_t v21 = swift_slowAlloc();
      v53[0] = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v46 = v9;
      uint64_t v22 = sub_241CDC270();
      uint64_t v52 = sub_241A33FE4(v22, v23, v53);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v17, v18, "[%s]: Returning only additional pipelines for primary profile since orchestration handles feed item generation for data types", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v21, -1, -1);
      unint64_t v24 = v20;
      a1 = v47;
      MEMORY[0x245637F20](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v46);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v9);
    }
    sub_241A36064(0, (unint64_t *)&qword_26B034F30, &qword_26B032038);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_241CEB720;
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v40 = v50;
    v39(v8, a1, v50);
    uint64_t v41 = type metadata accessor for SummariesSettingsGeneratorPipeline();
    swift_allocObject();
    uint64_t v42 = sub_241A26748((uint64_t)v8);
    *(void *)(v38 + 56) = v41;
    *(void *)(v38 + 64) = sub_241A27D9C(&qword_26B02EBA0, (void (*)(uint64_t))type metadata accessor for SummariesSettingsGeneratorPipeline);
    *(void *)(v38 + 32) = v42;
    v39(v8, a1, v40);
    uint64_t v43 = type metadata accessor for SummariesPromotionGeneratorPipeline();
    swift_allocObject();
    v44 = sub_241A2AE00((uint64_t)v8);
    *(void *)(v38 + 96) = v43;
    *(void *)(v38 + 104) = sub_241A27D9C(&qword_26B02EC70, (void (*)(uint64_t))type metadata accessor for SummariesPromotionGeneratorPipeline);
    *(void *)(v38 + 72) = v44;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_241A36064(0, (unint64_t *)&qword_26B034F30, &qword_26B032038);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_241CEB730;
    unint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v26(v8, a1, v5);
    uint64_t v27 = a1;
    uint64_t v28 = (void *)sub_241CD76D0();
    uint64_t v29 = type metadata accessor for SummaryAlertFeedItemGeneratorPipeline();
    swift_allocObject();
    uint64_t v30 = sub_241B6EBBC((uint64_t)v8, v28);

    *(void *)(v25 + 56) = v29;
    *(void *)(v25 + 64) = sub_241A27D9C(&qword_26B02F4D0, (void (*)(uint64_t))type metadata accessor for SummaryAlertFeedItemGeneratorPipeline);
    *(void *)(v25 + 32) = v30;
    v53[0] = v25;
    uint64_t v31 = sub_241A27DE4(v27);
    sub_241AFFE24(v31);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241CEB720;
    uint64_t v33 = v50;
    v26(v8, v27, v50);
    uint64_t v34 = type metadata accessor for SummariesSettingsGeneratorPipeline();
    swift_allocObject();
    uint64_t v35 = sub_241A26748((uint64_t)v8);
    *(void *)(inited + 56) = v34;
    *(void *)(inited + 64) = sub_241A27D9C(&qword_26B02EBA0, (void (*)(uint64_t))type metadata accessor for SummariesSettingsGeneratorPipeline);
    *(void *)(inited + 32) = v35;
    v26(v8, v27, v33);
    uint64_t v36 = type metadata accessor for SummariesPromotionGeneratorPipeline();
    swift_allocObject();
    uint64_t v37 = sub_241A2AE00((uint64_t)v8);
    *(void *)(inited + 96) = v36;
    *(void *)(inited + 104) = sub_241A27D9C(&qword_26B02EC70, (void (*)(uint64_t))type metadata accessor for SummariesPromotionGeneratorPipeline);
    *(void *)(inited + 72) = v37;
    sub_241AFFE24(inited);
    swift_bridgeObjectRelease();
    return v53[0];
  }
  return v38;
}

uint64_t sub_241A27D54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A27D9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A27DE4(uint64_t a1)
{
  uint64_t v2 = sub_241CD7740();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0F0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_241CDA190();
  os_log_type_t v11 = sub_241CDB670();
  int v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v33 = v7;
    uint64_t v14 = v13;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v35 = v32;
    *(_DWORD *)uint64_t v14 = 136315650;
    os_log_t v31 = v10;
    uint64_t v15 = sub_241CDC270();
    int v30 = v12;
    uint64_t v34 = sub_241A33FE4(v15, v16, &v35);
    uint64_t v28 = &v35;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    unint64_t v17 = (void *)sub_241CD76E0();
    uint64_t v18 = sub_241CD73E0();
    uint64_t v29 = v6;
    unint64_t v20 = v19;

    uint64_t v34 = sub_241A33FE4(v18, v20, &v35);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(_WORD *)(v14 + 22) = 2080;
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = MEMORY[0x245636610](v21, &type metadata for SummaryModelConfiguration.Audience);
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_241A33FE4(v22, v24, &v35);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v25 = v31;
    _os_log_impl(&dword_241A23000, v31, (os_log_type_t)v30, "[%s]: Returning no feed item pipelines for %s profile and %s since orchestration handles generation for it", (uint8_t *)v14, 0x20u);
    uint64_t v26 = v32;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v26, -1, -1);
    MEMORY[0x245637F20](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_241A281D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_241A28210(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_241A28210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_241CD8F70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a3, 1, 1, v6);
  uint64_t v7 = (int *)type metadata accessor for SnidgetHarnessPluginView();
  uint64_t v8 = v7[23];
  *(void *)(a3 + v8) = 0;
  uint64_t v9 = (uint64_t *)(a3 + v7[24]);
  sub_241CD85C0();
  sub_241A2845C(&qword_26B030970, MEMORY[0x263F43F10]);
  *uint64_t v9 = sub_241CDA9C0();
  v9[1] = v10;
  type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  uint64_t v11 = sub_241CD8450();
  uint64_t v12 = sub_241CD8440();
  uint64_t v13 = (uint64_t *)(a3 + v7[21]);
  *uint64_t v13 = v12;
  v13[1] = v14;
  sub_241CD8410();
  uint64_t v15 = (uint64_t *)(a3 + v7[22]);
  *uint64_t v15 = sub_241A284A4();
  v15[1] = v16;
  sub_241CD8420();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  uint64_t result = swift_release();
  *(void *)(a3 + v8) = a2;
  return result;
}

uint64_t type metadata accessor for SnidgetHarnessPluginView.ViewModel()
{
  return swift_getGenericMetadata();
}

uint64_t sub_241A28414(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A2845C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A284A4()
{
  return sub_241CDA8E0();
}

uint64_t sub_241A2853C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_241A28568(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_241A28568(uint64_t a1)
{
  return sub_241A28594(a1, (void (*)(uint64_t))sub_241A285EC);
}

uint64_t sub_241A28594(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

void *sub_241A285EC(void *a1)
{
  uint64_t v2 = v1;
  v57 = a1;
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = v3[13];
  uint64_t v5 = v3[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_241CDBBD0();
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v39 = (char *)v38 - v7;
  uint64_t v8 = v3[12];
  uint64_t v9 = v3[10];
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_241CDBBD0();
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v51 = v11;
  MEMORY[0x270FA5388](v11);
  v38[0] = (char *)v38 - v12;
  uint64_t v13 = v3[14];
  uint64_t v14 = v3[15];
  uint64_t v15 = v3[16];
  uint64_t v16 = v3[17];
  uint64_t v46 = v9;
  uint64_t v58 = v9;
  uint64_t v59 = v5;
  uint64_t v42 = v5;
  uint64_t v41 = v8;
  uint64_t v60 = v8;
  uint64_t v61 = v4;
  uint64_t v43 = v4;
  uint64_t v54 = v13;
  uint64_t v62 = v13;
  uint64_t v63 = v14;
  uint64_t v45 = v14;
  uint64_t v52 = v15;
  uint64_t v64 = v15;
  uint64_t v65 = v16;
  uint64_t v44 = v16;
  type metadata accessor for SnidgetHarnessPluginView.ViewModel.CodingKeys();
  swift_getWitnessTable();
  uint64_t v40 = sub_241CDC040();
  uint64_t v17 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  unint64_t v19 = (char *)v38 - v18;
  unint64_t v20 = *(void (**)(void))(*(void *)(v10 - 8) + 56);
  v53 = (char *)v2 + v3[19];
  v38[1] = v10;
  v20();
  uint64_t v21 = *(void (**)(void))(*(void *)(AssociatedTypeWitness - 8) + 56);
  uint64_t v49 = (char *)v2 + *(void *)(*v2 + 160);
  v21();
  sub_241A311E0(v57, v57[3]);
  uint64_t v22 = v55;
  sub_241CDC220();
  if (v22)
  {
    uint64_t v27 = v57;
    uint64_t v29 = v47;
    uint64_t v28 = v48;
    uint64_t v30 = v43;
    uint64_t v31 = v42;
    uint64_t v32 = v52;
    uint64_t v33 = v41;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v53, v51);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v49, v28);
    uint64_t v58 = v46;
    uint64_t v59 = v31;
    uint64_t v60 = v33;
    uint64_t v61 = v30;
    uint64_t v62 = v54;
    uint64_t v63 = v45;
    uint64_t v64 = v32;
    uint64_t v65 = v44;
    type metadata accessor for SnidgetHarnessPluginView.ViewModel();
    swift_deallocPartialClassInstance();
    uint64_t v37 = v27;
  }
  else
  {
    uint64_t v23 = v38[0];
    uint64_t v24 = v17;
    os_log_t v25 = v39;
    sub_241CD89A0();
    char v66 = 0;
    sub_241A2845C(&qword_26B030650, MEMORY[0x263F44208]);
    uint64_t v26 = v40;
    sub_241CDC030();
    v2[2] = v58;
    LOBYTE(v58) = 1;
    sub_241CDBFF0();
    uint64_t v35 = v53;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 40))(v35, v23, v51);
    swift_endAccess();
    LOBYTE(v58) = 2;
    sub_241CDBFF0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v26);
    uint64_t v36 = v49;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v47 + 40))(v36, v25, v48);
    swift_endAccess();
    uint64_t v37 = v57;
  }
  sub_241A31190((uint64_t)v37);
  return v2;
}

uint64_t type metadata accessor for SnidgetHarnessPluginView.ViewModel.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_241A28CB4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  sub_241A36ADC(0);
  uint64_t v57 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_241CD7650();
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v62 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD7690();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v65 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_241CD7740();
  uint64_t v54 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v64 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CDA1A0();
  uint64_t v52 = *(void *)(v13 - 8);
  uint64_t v53 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29620(0);
  uint64_t v17 = v16;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v48 - v22;
  MEMORY[0x270FA5388](v21);
  os_log_t v25 = (char *)&v48 - v24;
  id v55 = (id)sub_241CD76E0();
  unint64_t v26 = sub_241A2AC88();
  uint64_t v58 = v27;
  unint64_t v59 = v26;
  if (a2)
  {
    sub_241A2A80C((uint64_t)v25);
    uint64_t v28 = sub_241CD75A0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v25, 0, 1, v28);
  }
  else
  {
    uint64_t v29 = sub_241CD75A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v25, 1, 1, v29);
  }
  uint64_t v66 = v17;
  sub_241CDA0F0();
  uint64_t v60 = v25;
  sub_241A2944C((uint64_t)v25, (uint64_t)v23);
  uint64_t v30 = sub_241CDA190();
  os_log_type_t v31 = sub_241CDB670();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v50 = v8;
    uint64_t v34 = v33;
    v68[0] = v33;
    *(_DWORD *)uint64_t v32 = 136446466;
    uint64_t v35 = sub_241CDC270();
    uint64_t v49 = a1;
    uint64_t v67 = sub_241A33FE4(v35, v36, v68);
    uint64_t v51 = a3;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    sub_241A2944C((uint64_t)v23, (uint64_t)v20);
    uint64_t v37 = sub_241CDB120();
    uint64_t v67 = sub_241A33FE4(v37, v38, v68);
    a3 = v51;
    a1 = v49;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241A293F0((uint64_t)v23);
    _os_log_impl(&dword_241A23000, v30, v31, "%{public}s Creating generator with feed item %{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v34, -1, -1);
    MEMORY[0x245637F20](v32, -1, -1);
  }
  else
  {
    sub_241A293F0((uint64_t)v23);
  }

  (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v53);
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v64, a1, v56);
  sub_241A29DB0(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v39 = sub_241CD73B0();
  uint64_t v40 = *(void *)(v39 - 8);
  unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v40 + 104))(v42 + v41, *MEMORY[0x263F45580], v39);
  (*(void (**)(char *, void, uint64_t))(v61 + 104))(v62, *MEMORY[0x263F45688], v63);
  id v43 = v55;
  sub_241CD7670();
  uint64_t v44 = (uint64_t)v60;
  sub_241A2944C((uint64_t)v60, (uint64_t)v20);
  sub_241CDA5D0();
  uint64_t v45 = sub_241CD7800();
  uint64_t v46 = MEMORY[0x263F456B8];
  a3[3] = v45;
  a3[4] = v46;
  sub_241A25BC8(a3);
  sub_241A2C424((unint64_t *)&qword_26B02EA80, sub_241A36ADC);
  sub_241CD77E0();

  return sub_241A293F0(v44);
}

uint64_t sub_241A293F0(uint64_t a1)
{
  sub_241A29620(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241A2944C(uint64_t a1, uint64_t a2)
{
  sub_241A29620(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_241A294B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29514(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29578(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A295CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A29620(uint64_t a1)
{
}

uint64_t sub_241A29654@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a2;
  sub_241A29A90(0, &qword_26B0327E8, (uint64_t (*)(uint64_t))sub_241A29620, MEMORY[0x263EFDDF8]);
  uint64_t v34 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v32 = (char *)v30 - v4;
  uint64_t v31 = sub_241CD7650();
  uint64_t v5 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD7690();
  MEMORY[0x270FA5388](v8 - 8);
  v30[3] = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD7740();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29620(0);
  v30[0] = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v30 - v18;
  uint64_t v20 = sub_241A274D8();
  v30[1] = v21;
  v30[2] = v20;
  sub_241A26CA4(a1, (uint64_t)v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  sub_241CD76E0();
  sub_241A29A90(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v22 = sub_241CD73B0();
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v25 + v24, *MEMORY[0x263F45570], v22);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F45688], v31);
  sub_241CD7670();
  sub_241A2944C((uint64_t)v19, (uint64_t)v17);
  sub_241CDA5D0();
  uint64_t v26 = sub_241CD7800();
  uint64_t v27 = MEMORY[0x263F456B8];
  uint64_t v28 = v33;
  v33[3] = v26;
  v28[4] = v27;
  sub_241A25BC8(v28);
  sub_241A36B10();
  sub_241CD77E0();
  return sub_241A293F0((uint64_t)v19);
}

void sub_241A29A90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29AF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29B58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29BBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29C20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29C84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29CE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29D4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29DB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29E14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29E78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29EDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A29F40(uint64_t a1)
{
}

void sub_241A29F64(uint64_t a1)
{
  v89 = (void (*)(void, void))a1;
  uint64_t v2 = *v1;
  uint64_t v3 = sub_241CD7740();
  uint64_t v88 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  v85 = (char *)v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  v87 = (char *)v77 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v77 - v8;
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v77 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v77 - v18;
  id v20 = objc_msgSend(self, sel_sharedBehavior);
  if (!v20)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v21 = v20;
  id v22 = objc_msgSend(v20, sel_features);

  if (!v22)
  {
LABEL_24:
    __break(1u);
    return;
  }
  unsigned int v23 = objc_msgSend(v22, sel_summaryOrchestration);

  if (v23)
  {
    sub_241CDA0F0();
    unint64_t v24 = sub_241CDA190();
    os_log_type_t v25 = sub_241CDB670();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v91 = (void (*)(void, void))v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v28 = sub_241CDC270();
      uint64_t v90 = sub_241A33FE4(v28, v29, (uint64_t *)&v91);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v24, v25, "[%s]: Returning no sharable model pipelines for primary profile since orchestration handles generation for it", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v27, -1, -1);
      MEMORY[0x245637F20](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    return;
  }
  sub_241CDA0F0();
  uint64_t v30 = v88;
  v83 = *(void (**)(char *, void (*)(void, void), uint64_t))(v88 + 16);
  uint64_t v84 = v88 + 16;
  v83(v9, v89, v3);
  uint64_t v31 = sub_241CDA190();
  os_log_type_t v32 = sub_241CDB670();
  int v33 = v32;
  BOOL v34 = os_log_type_enabled(v31, v32);
  uint64_t v81 = v2;
  if (v34)
  {
    uint64_t v35 = swift_slowAlloc();
    v80 = (void (*)(void, void))swift_slowAlloc();
    v91 = v80;
    *(_DWORD *)uint64_t v35 = 136315394;
    os_log_t v79 = v31;
    uint64_t v36 = sub_241CDC270();
    v82 = v14;
    uint64_t v90 = sub_241A33FE4(v36, v37, (uint64_t *)&v91);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2082;
    v77[1] = v35 + 14;
    unint64_t v38 = (void *)sub_241CD76E0();
    uint64_t v39 = sub_241CD73E0();
    int v78 = v33;
    uint64_t v40 = v11;
    uint64_t v41 = v39;
    uint64_t v42 = v3;
    uint64_t v43 = v10;
    unint64_t v45 = v44;

    uint64_t v46 = v41;
    uint64_t v11 = v40;
    uint64_t v90 = sub_241A33FE4(v46, v45, (uint64_t *)&v91);
    uint64_t v14 = v82;
    sub_241CDBBF0();
    uint64_t v10 = v43;
    uint64_t v3 = v42;
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void (**)(char *, uint64_t))(v88 + 8);
    v47(v9, v3);
    os_log_t v48 = v79;
    _os_log_impl(&dword_241A23000, v79, (os_log_type_t)v78, "[%s]: Returning sharableModel pipelines for sourceProfile %{public}s", (uint8_t *)v35, 0x16u);
    uint64_t v49 = v80;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v49, -1, -1);
    MEMORY[0x245637F20](v35, -1, -1);

    uint64_t v50 = v40;
  }
  else
  {
    uint64_t v47 = *(void (**)(char *, uint64_t))(v30 + 8);
    v47(v9, v3);

    uint64_t v50 = v11;
  }
  uint64_t v51 = *(void (**)(char *, uint64_t))(v50 + 8);
  v51(v17, v10);
  uint64_t v52 = (uint64_t)v89;
  uint64_t v53 = sub_241CD76E0();
  if (v53)
  {
    uint64_t v54 = (void *)v53;
    v80 = (void (*)(void, void))v51;
    uint64_t v55 = (uint64_t)v87;
    v83(v87, (void (*)(void, void))v52, v3);
    sub_241A313AC(0, &qword_26B030850);
    id v56 = v54;
    uint64_t v57 = (uint64_t (*)(void))sub_241CDB8E0();
    unint64_t v59 = sub_241A34554(v55, v57, v58);
    v47((char *)v55, v3);
    swift_release();
    id v60 = objc_msgSend(v56, sel_type);
    if (v60 == (id)3)
    {
      sub_241BE0994((uint64_t)v89, v59, v86);
      goto LABEL_16;
    }
    if (v60 == (id)2)
    {

      swift_bridgeObjectRelease();
      return;
    }
    if (v60 == (id)1)
    {
      sub_241BE068C((uint64_t)v89, v59, v86);
LABEL_16:
      swift_bridgeObjectRelease();

      return;
    }
    swift_bridgeObjectRelease();
    sub_241CDA0F0();
    uint64_t v61 = v85;
    v83(v85, v89, v3);
    uint64_t v62 = sub_241CDA190();
    os_log_type_t v63 = sub_241CDB650();
    int v64 = v63;
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v65 = swift_slowAlloc();
      v89 = (void (*)(void, void))swift_slowAlloc();
      v91 = v89;
      *(_DWORD *)uint64_t v65 = 136315395;
      LODWORD(v88) = v64;
      uint64_t v66 = sub_241CDC270();
      v82 = v14;
      uint64_t v90 = sub_241A33FE4(v66, v67, (uint64_t *)&v91);
      uint64_t v84 = v3;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 12) = 2081;
      v83 = (void (*)(char *, void (*)(void, void), uint64_t))(v65 + 14);
      v68 = v85;
      v69 = (void *)sub_241CD76E0();
      uint64_t v70 = sub_241CD73E0();
      uint64_t v86 = v11;
      v87 = (char *)v10;
      uint64_t v71 = v70;
      unint64_t v73 = v72;

      uint64_t v90 = sub_241A33FE4(v71, v73, (uint64_t *)&v91);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      v47(v68, v84);
      _os_log_impl(&dword_241A23000, v62, (os_log_type_t)v88, "[%s]: sharableModel Unexpected profile type %{private}s", (uint8_t *)v65, 0x16u);
      uint64_t v74 = (uint64_t)v89;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v74, -1, -1);
      MEMORY[0x245637F20](v65, -1, -1);

      v75 = v87;
      v76 = v82;
    }
    else
    {
      v47(v61, v3);

      v76 = v14;
      v75 = (char *)v10;
    }
    v80(v76, v75);
  }
}

uint64_t sub_241A2A80C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v1 = sub_241CD7FD0();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_241CD8160();
  uint64_t v16 = *(void *)(v2 - 8);
  uint64_t v17 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v14 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_241CD76E0();
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_configurationWithPointSize_, 51.0);
  id v7 = objc_msgSend(v5, sel_configurationPreferringMulticolor);
  id v8 = objc_msgSend(v6, sel_configurationByApplyingConfiguration_, v7);

  sub_241A2AC88();
  id v13 = v8;
  sub_241CD7FB0();
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  sub_241CD69E0();
  sub_241CD69E0();
  uint64_t v9 = v14;
  sub_241CD8150();
  sub_241A2AC88();
  uint64_t v10 = (void *)sub_241CD7400();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_241CDBF50()) {
    sub_241C87FB8(MEMORY[0x263F8EE78]);
  }
  type metadata accessor for SignificantChangesPromotionTileActionHandler();
  sub_241A2C424(&qword_268D43918, (void (*)(uint64_t))type metadata accessor for SignificantChangesPromotionTileActionHandler);
  sub_241CD7430();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v9, v17);
}

unint64_t sub_241A2AC88()
{
  uint64_t v0 = sub_241CD6D70();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_241CD73C0();
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_identifier);

    sub_241CD6D50();
    sub_241CD6D20();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  unint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xD00000000000001CLL;
  unint64_t v9 = 0x8000000241CE4D90;
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_241A2AE00(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v58 = *v1;
  uint64_t v59 = sub_241CD7740();
  uint64_t v57 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v52 = v4;
  uint64_t v53 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A36968();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v54 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = (void *)sub_241CD7650();
  uint64_t v49 = *(v51 - 1);
  MEMORY[0x270FA5388](v51);
  os_log_t v48 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_241CD7690();
  uint64_t v47 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v46 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0F0();
  id v13 = sub_241CDA190();
  os_log_type_t v14 = sub_241CDB670();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v44 = v9;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v61[0] = v16;
    uint64_t v45 = a1;
    *(_DWORD *)uint64_t v15 = 136446210;
    uint64_t v17 = sub_241CDC270();
    uint64_t v60 = sub_241A33FE4(v17, v18, v61);
    a1 = v45;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v13, v14, "%{public}s Initialized pipeline", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v16, -1, -1);
    MEMORY[0x245637F20](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v44);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v19 = v3;
  id v20 = (char *)v3 + OBJC_IVAR____TtC9Summaries35SummariesPromotionGeneratorPipeline_context;
  uint64_t v21 = v57;
  id v22 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  v22(v20, a1, v59);
  sub_241CD76E0();
  sub_241A29DB0(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v23 = sub_241CD73B0();
  uint64_t v24 = *(void *)(v23 - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v24 + 104))(v26 + v25, *MEMORY[0x263F45580], v23);
  (*(void (**)(char *, void, void *))(v49 + 104))(v48, *MEMORY[0x263F45688], v51);
  uint64_t v27 = v46;
  sub_241CD7670();
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))((uint64_t)v19 + OBJC_IVAR____TtC9Summaries35SummariesPromotionGeneratorPipeline_domain, v27, v50);
  sub_241CD76B0();
  sub_241A311E0(v61, v61[3]);
  uint64_t v28 = (void *)sub_241CD75B0();
  sub_241A31190((uint64_t)v61);
  unint64_t v29 = self;
  uint64_t v51 = v28;
  id v30 = objc_msgSend(v29, sel_defaultCenter);
  sub_241A313AC(0, (unint64_t *)&qword_26B0303A0);
  sub_241CDB6D0();
  id v31 = objc_allocWithZone((Class)sub_241CD9190());
  os_log_type_t v32 = (void *)sub_241CD9150();
  *(void *)((char *)v19 + OBJC_IVAR____TtC9Summaries35SummariesPromotionGeneratorPipeline_notificationSettingsManager) = v32;
  int v33 = v53;
  uint64_t v34 = v59;
  v22(v53, a1, v59);
  unint64_t v35 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v36 = (v52 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v37 + v35, v33, v34);
  *(void *)(v37 + v36) = v32;
  *(void *)(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8)) = v58;
  sub_241A36CEC();
  sub_241A2C424(&qword_26B038958, (void (*)(uint64_t))sub_241A36CEC);
  id v38 = v32;
  uint64_t v39 = v54;
  sub_241CDA620();
  sub_241A2C424(&qword_26B02EAB8, (void (*)(uint64_t))sub_241A36968);
  uint64_t v40 = v56;
  uint64_t v41 = sub_241CDA6D0();

  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a1, v34);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v40);
  *(void *)((char *)v19 + OBJC_IVAR____TtC9Summaries35SummariesPromotionGeneratorPipeline_publisher) = v41;
  return v19;
}

uint64_t sub_241A2B604(uint64_t a1)
{
  uint64_t v33 = a1;
  uint64_t v39 = sub_241CD7740();
  uint64_t v37 = *(void *)(v39 - 8);
  uint64_t v38 = *(void *)(v37 + 64);
  MEMORY[0x270FA5388](v39);
  unint64_t v35 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A370A4(0, &qword_26B035680, &qword_26B0356A0, (uint64_t)&type metadata for SummariesPromotionGeneratorPipeline.FitnessPromotionType, &qword_26B035698);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  uint64_t v42 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v40 = (char *)&v32 - v4;
  sub_241A36EB4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CDB540();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A36818();
  uint64_t v34 = v14;
  uint64_t v36 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)sub_241CD76D0();
  sub_241CDB580();

  uint64_t v18 = sub_241A2C424(&qword_26B034D48, MEMORY[0x263F44AF8]);
  sub_241CDA670();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(void *)(swift_allocObject() + 16) = v43;
  uint64_t v44 = v10;
  uint64_t v45 = v18;
  swift_getOpaqueTypeConformance2();
  sub_241CDA710();
  swift_release();
  sub_241A2C424(&qword_26B035688, (void (*)(uint64_t))sub_241A36EB4);
  uint64_t v19 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v44 = v19;
  sub_241A36BFC(0, &qword_26B0356A0);
  sub_241A36C58(&qword_26B035698, &qword_26B0356A0);
  uint64_t v20 = v33;
  uint64_t v44 = sub_241CDA660();
  uint64_t v21 = v37;
  id v22 = v35;
  uint64_t v23 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v35, v20, v39);
  uint64_t v24 = v21;
  unint64_t v25 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v26 = (v38 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v27 + v25, v22, v23);
  *(void *)(v27 + v26) = v43;
  sub_241A372C4();
  uint64_t v28 = v40;
  sub_241CDA710();
  swift_release();
  swift_release();
  sub_241A37148();
  uint64_t v29 = v41;
  uint64_t v30 = sub_241CDA6D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v34);
  return v30;
}

uint64_t sub_241A2BBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a3;
  uint64_t v60 = a1;
  uint64_t v63 = sub_241CD7740();
  uint64_t v61 = *(void *)(v63 - 8);
  uint64_t v62 = *(void *)(v61 + 64);
  MEMORY[0x270FA5388](v63);
  uint64_t v59 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A371C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A36D84();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  uint64_t v53 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v47 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A36E18();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v54 = v10;
  uint64_t v55 = v11;
  MEMORY[0x270FA5388](v10);
  os_log_t v48 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A370A4(0, &qword_26B0323C0, (unint64_t *)&qword_26B032758, MEMORY[0x263F8D4F8], &qword_26B02EA48);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v57 = v13;
  uint64_t v58 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v56 = (char *)&v46 - v15;
  uint64_t v16 = sub_241CD8DD0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A36F90();
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_241CD7270();
  sub_241A369FC();
  sub_241A2C424(&qword_26B032870, (void (*)(uint64_t))sub_241A369FC);
  sub_241CDA710();
  swift_release();
  sub_241A2C424(&qword_26B032420, (void (*)(uint64_t))sub_241A36F90);
  uint64_t v25 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F444B0], v16);
  uint64_t v26 = sub_241CD9180();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v65 = v26;
  uint64_t v66 = v25;
  sub_241A36BFC(0, (unint64_t *)&qword_26B032758);
  sub_241A36C58(&qword_26B02EA48, (unint64_t *)&qword_26B032758);
  swift_retain();
  swift_retain();
  uint64_t v27 = v46;
  sub_241CDA350();
  sub_241CD7700();
  uint64_t v28 = v47;
  uint64_t v29 = v50;
  sub_241CDA330();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v27, v29);
  sub_241A2C424(&qword_26B032528, (void (*)(uint64_t))sub_241A36D84);
  uint64_t v30 = v48;
  uint64_t v31 = v52;
  sub_241CDA710();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v28, v31);
  sub_241A2C424(&qword_26B032470, (void (*)(uint64_t))sub_241A36E18);
  uint64_t v32 = v60;
  uint64_t v33 = v54;
  uint64_t v34 = sub_241CDA660();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v33);
  uint64_t v66 = v34;
  uint64_t v35 = v61;
  uint64_t v36 = v59;
  uint64_t v37 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v59, v32, v63);
  uint64_t v38 = v35;
  unint64_t v39 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v40 = (v62 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v41 + v39, v36, v37);
  *(void *)(v41 + v40) = v64;
  sub_241A372C4();
  uint64_t v42 = v56;
  sub_241CDA710();
  swift_release();
  swift_release();
  sub_241A3702C();
  uint64_t v43 = v57;
  uint64_t v44 = sub_241CDA6D0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v43);
  return v44;
}

uint64_t sub_241A2C394(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A2C3DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A2C424(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A2C46C(uint64_t (*a1)(void, void, void, void, void, void, void, void, void))
{
  return a1(v1[10], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_241A2C4AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v108 = a7;
  uint64_t v109 = a8;
  uint64_t v107 = a6;
  uint64_t v87 = a1;
  uint64_t v103 = a9;
  uint64_t v106 = a10;
  swift_getAssociatedTypeWitness();
  uint64_t v100 = sub_241CDBBD0();
  uint64_t v95 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  v93 = (char *)&v77 - v14;
  uint64_t v15 = sub_241CDBBD0();
  uint64_t v102 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v92 = (uint64_t)&v77 - v16;
  uint64_t v91 = v15;
  uint64_t v17 = sub_241CDA910();
  uint64_t v98 = v17;
  uint64_t v101 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  v96 = (char *)&v77 - v18;
  uint64_t v132 = *(void *)(a5 + 8);
  uint64_t v86 = (uint64_t (*)(char *, uint64_t))MEMORY[0x263F1BB78];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v130 = WitnessTable;
  uint64_t v131 = MEMORY[0x263F19100];
  uint64_t v97 = swift_getWitnessTable();
  uint64_t v122 = v17;
  uint64_t v123 = MEMORY[0x263F8D310];
  uint64_t v124 = v97;
  uint64_t v125 = MEMORY[0x263F8D320];
  uint64_t v99 = sub_241CDAD00();
  uint64_t v112 = *(void *)(v99 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v99);
  uint64_t v90 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  v94 = (char *)&v77 - v21;
  uint64_t v22 = a4;
  uint64_t v78 = a4;
  swift_getAssociatedTypeWitness();
  uint64_t v85 = sub_241CDBBD0();
  uint64_t v23 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v84 = (char *)&v77 - v24;
  uint64_t v104 = a2;
  uint64_t v105 = sub_241CDBBD0();
  uint64_t v111 = *(void *)(v105 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v105);
  uint64_t v88 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v79 = (uint64_t)&v77 - v28;
  MEMORY[0x270FA5388](v27);
  v110 = (char *)&v77 - v29;
  uint64_t v122 = a2;
  uint64_t v123 = a3;
  uint64_t v30 = a3;
  uint64_t v80 = a3;
  uint64_t v124 = v22;
  uint64_t v125 = a5;
  uint64_t v82 = a5;
  uint64_t v32 = v107;
  uint64_t v31 = v108;
  uint64_t v126 = v107;
  uint64_t v127 = v108;
  uint64_t v33 = v109;
  uint64_t v128 = v109;
  uint64_t v129 = v106;
  uint64_t v81 = type metadata accessor for SnidgetHarnessPluginView();
  uint64_t v34 = v87;
  uint64_t v35 = *(void *)(v87 + *(int *)(v81 + 88) + 8);
  uint64_t v36 = v35 + *(void *)(*(void *)v35 + 152);
  swift_beginAccess();
  uint64_t v37 = v84;
  uint64_t v38 = v36;
  uint64_t v39 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v84, v38, v85);
  v114[2] = v104;
  v114[3] = v30;
  uint64_t v40 = v78;
  v114[4] = v78;
  v114[5] = a5;
  v114[6] = v32;
  v114[7] = v31;
  uint64_t v41 = v106;
  v114[8] = v33;
  v114[9] = v106;
  v114[10] = v34;
  uint64_t v42 = v79;
  sub_241A2CDF4((void (*)(char *, char *))sub_241A2D260, (uint64_t)v114, MEMORY[0x263F8E628], v104, v43, v79);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v37, v39);
  uint64_t v121 = *(void *)(v40 + 8);
  uint64_t v44 = v105;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v46 = v111;
  uint64_t v47 = *(char **)(v111 + 16);
  uint64_t v83 = v111 + 16;
  uint64_t v84 = v47;
  uint64_t v85 = v45;
  ((void (*)(char *, uint64_t, uint64_t))v47)(v110, v42, v44);
  os_log_t v48 = *(uint64_t (**)(char *, uint64_t))(v46 + 8);
  uint64_t v111 = v46 + 8;
  uint64_t v86 = v48;
  v48((char *)v42, v44);
  uint64_t v49 = v81;
  uint64_t v50 = *(void *)(v34 + *(int *)(v81 + 88) + 8);
  uint64_t v51 = v50 + *(void *)(*(void *)v50 + 160);
  swift_beginAccess();
  uint64_t v52 = v95;
  uint64_t v53 = v93;
  uint64_t v54 = v51;
  uint64_t v55 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v93, v54, v100);
  v113[2] = v104;
  v113[3] = v80;
  v113[4] = v40;
  v113[5] = v82;
  v113[6] = v107;
  v113[7] = v108;
  v113[8] = v109;
  v113[9] = v41;
  v113[10] = v34;
  uint64_t v56 = v92;
  sub_241A2CDF4((void (*)(char *, char *))sub_241A2D28C, (uint64_t)v113, MEMORY[0x263F8E628], v80, v57, v92);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v55);
  sub_241CDADB0();
  uint64_t v58 = v91;
  uint64_t v59 = v96;
  sub_241CDAC10();
  (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v56, v58);
  uint64_t v60 = (char **)(v34 + *(int *)(v49 + 84));
  uint64_t v62 = *v60;
  uint64_t v61 = (uint64_t *)v60[1];
  v118 = v62;
  v119 = v61;
  uint64_t v63 = v90;
  uint64_t v64 = v98;
  sub_241CDABF0();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v59, v64);
  uint64_t v65 = v99;
  uint64_t v109 = swift_getWitnessTable();
  uint64_t v66 = v112;
  unint64_t v67 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
  v68 = v94;
  v67(v94, v63, v65);
  v69 = *(void (**)(char *, uint64_t))(v66 + 8);
  uint64_t v112 = v66 + 8;
  v69(v63, v65);
  uint64_t v70 = v88;
  uint64_t v71 = v110;
  uint64_t v72 = v105;
  ((void (*)(char *, char *, uint64_t))v84)(v88, v110, v105);
  uint64_t v116 = 0;
  char v117 = 1;
  v118 = v70;
  v119 = &v116;
  v67(v63, v68, v65);
  v120 = v63;
  v115[0] = v72;
  v115[1] = MEMORY[0x263F1B6B0];
  v115[2] = v65;
  v114[12] = v85;
  v114[13] = MEMORY[0x263F1B698];
  v114[14] = v109;
  sub_241A2D09C((uint64_t)&v118, 3uLL, (uint64_t)v115);
  v69(v68, v65);
  uint64_t v73 = v72;
  uint64_t v74 = v72;
  v75 = v86;
  v86(v71, v73);
  v69(v63, v65);
  return v75(v70, v74);
}

uint64_t sub_241A2CDF4@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_241A2D09C(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x270FA5388](TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_241CDADF0();
}

uint64_t sub_241A2D260(uint64_t a1, uint64_t a2)
{
  return sub_241A2D2B8(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, uint64_t))sub_241A2D300);
}

uint64_t sub_241A2D28C(uint64_t a1, uint64_t a2)
{
  return sub_241A2D2B8(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void, uint64_t))sub_241A2D5BC);
}

uint64_t sub_241A2D2B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[10], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9], a2);
}

uint64_t sub_241A2D300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v33 = a7;
  uint64_t v34 = a8;
  uint64_t v35 = a2;
  uint64_t v36 = a1;
  uint64_t v37 = a9;
  uint64_t v31 = a11;
  uint64_t v32 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_241CDBBD0();
  uint64_t v29 = *(void *)(v15 - 8);
  uint64_t v30 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v28 - v17;
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v28 - v20;
  uint64_t v22 = sub_241CD8450();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v38 = a5;
  uint64_t v41 = a5;
  uint64_t v42 = v32;
  uint64_t v43 = v33;
  uint64_t v44 = v34;
  uint64_t v45 = a10;
  uint64_t v46 = v31;
  uint64_t v23 = type metadata accessor for SnidgetHarnessPluginView();
  uint64_t v24 = v35;
  uint64_t v34 = *(void *)(v35 + *(int *)(v23 + 84));
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v36, AssociatedTypeWitness);
  uint64_t v25 = *(void *)(v24 + *(int *)(v23 + 92));
  if (v25)
  {
    uint64_t v26 = v25 + *(void *)(*(void *)v25 + 152);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v18, v26, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v18, 1, 1, AssociatedTypeWitness);
  }
  swift_bridgeObjectRetain();
  sub_241CD8430();
  return sub_241CD8500();
}

uint64_t sub_241A2D5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v32 = a7;
  uint64_t v33 = a8;
  uint64_t v36 = a9;
  uint64_t v37 = a5;
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  uint64_t v31 = a11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_241CDBBD0();
  uint64_t v29 = *(void *)(v15 - 8);
  uint64_t v30 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v28 - v17;
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v28 - v20;
  uint64_t v22 = sub_241CD8450();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v40 = v37;
  uint64_t v41 = a6;
  uint64_t v37 = a6;
  uint64_t v42 = v32;
  uint64_t v43 = v33;
  uint64_t v44 = a10;
  uint64_t v45 = v31;
  uint64_t v23 = type metadata accessor for SnidgetHarnessPluginView();
  uint64_t v24 = v34;
  uint64_t v33 = *(void *)(v34 + *(int *)(v23 + 84));
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v35, AssociatedTypeWitness);
  uint64_t v25 = *(void *)(v24 + *(int *)(v23 + 92));
  if (v25)
  {
    uint64_t v26 = v25 + *(void *)(*(void *)v25 + 160);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v18, v26, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v18, 1, 1, AssociatedTypeWitness);
  }
  swift_bridgeObjectRetain();
  sub_241CD8430();
  return sub_241CD8500();
}

uint64_t sub_241A2D87C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v58 = a8;
  uint64_t v56 = a7;
  uint64_t v65 = a6;
  uint64_t v64 = a4;
  uint64_t v63 = a2;
  uint64_t v59 = a1;
  uint64_t v60 = a9;
  uint64_t v66 = a10;
  sub_241CDBBD0();
  uint64_t v47 = a3;
  sub_241CDBBD0();
  uint64_t v12 = sub_241CDA910();
  uint64_t v13 = *(void *)(a5 + 8);
  uint64_t v48 = a5;
  uint64_t v92 = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v91 = MEMORY[0x263F19100];
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v82 = (char *)v12;
  uint64_t v83 = (uint64_t *)MEMORY[0x263F8D310];
  uint64_t v84 = v14;
  uint64_t v85 = MEMORY[0x263F8D320];
  sub_241CDAD00();
  swift_getTupleTypeMetadata3();
  uint64_t v55 = sub_241CDADE0();
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v49 = sub_241CDACF0();
  uint64_t v57 = *(void *)(v49 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v49);
  uint64_t v52 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v53 = (char *)&v47 - v17;
  uint64_t v51 = sub_241CD83C0();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_241CD89C0();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A2E464();
  uint64_t v62 = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v47 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v61 = (char *)&v47 - v29;
  uint64_t v82 = v63;
  uint64_t v83 = a3;
  uint64_t v84 = v64;
  uint64_t v85 = a5;
  uint64_t v30 = v56;
  uint64_t v86 = v65;
  uint64_t v87 = v56;
  uint64_t v31 = v58;
  uint64_t v88 = v58;
  uint64_t v89 = v66;
  uint64_t v32 = type metadata accessor for SnidgetHarnessPluginView();
  uint64_t v33 = v59;
  swift_retain();
  sub_241CD89B0();
  uint64_t v34 = v32;
  uint64_t v35 = v33;
  sub_241A2E4CC(v34);
  swift_retain();
  sub_241CD8590();
  swift_release();
  sub_241CD8980();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v19, v51);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  uint64_t v36 = v61;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v61, v28, v62);
  sub_241CDAA60();
  unint64_t v67 = v63;
  v68 = v47;
  uint64_t v69 = v64;
  uint64_t v70 = v48;
  uint64_t v71 = v65;
  uint64_t v72 = v30;
  uint64_t v73 = v31;
  uint64_t v74 = v66;
  uint64_t v75 = v35;
  uint64_t v37 = v52;
  sub_241CDACE0();
  uint64_t v38 = v49;
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v39 = v57;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  uint64_t v41 = v53;
  v40(v53, v37, v38);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v42(v37, v38);
  uint64_t v43 = v36;
  uint64_t v44 = v62;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v43, v62);
  uint64_t v80 = 0x4037000000000000;
  char v81 = 0;
  uint64_t v82 = v28;
  uint64_t v83 = &v80;
  v40(v37, v41, v38);
  uint64_t v84 = (uint64_t)v37;
  v79[0] = v44;
  v79[1] = MEMORY[0x263F1B6B0];
  v79[2] = v38;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v77 = MEMORY[0x263F1B698];
  uint64_t v78 = v66;
  sub_241A2D09C((uint64_t)&v82, 3uLL, (uint64_t)v79);
  v42(v41, v38);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v25 + 8);
  v45(v61, v44);
  v42(v37, v38);
  return ((uint64_t (*)(char *, uint64_t))v45)(v28, v44);
}

uint64_t type metadata accessor for SnidgetHarnessPluginView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_241A2DFE0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v26 = a2;
  sub_241A2E464();
  uint64_t v23 = *(void *)(a1 + 16);
  sub_241CDBBD0();
  uint64_t v22 = *(void *)(a1 + 24);
  sub_241CDBBD0();
  uint64_t v3 = sub_241CDA910();
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v42 = *(void *)(v4 + 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v41 = MEMORY[0x263F19100];
  uint64_t v25 = MEMORY[0x263F18E48];
  uint64_t v5 = swift_getWitnessTable();
  uint64_t v36 = v3;
  uint64_t v37 = MEMORY[0x263F8D310];
  uint64_t v38 = v5;
  uint64_t v39 = MEMORY[0x263F8D320];
  sub_241CDAD00();
  swift_getTupleTypeMetadata3();
  sub_241CDADE0();
  swift_getWitnessTable();
  sub_241CDACF0();
  swift_getTupleTypeMetadata3();
  sub_241CDADE0();
  swift_getWitnessTable();
  uint64_t v6 = sub_241CDAD50();
  uint64_t v21 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_241CDA910();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - v14;
  sub_241CDAAB0();
  uint64_t v27 = v23;
  uint64_t v28 = v22;
  uint64_t v29 = *(void *)(a1 + 32);
  uint64_t v30 = v4;
  long long v16 = *(_OWORD *)(a1 + 64);
  long long v31 = *(_OWORD *)(a1 + 48);
  long long v32 = v16;
  uint64_t v33 = v24;
  sub_241CDAD40();
  sub_241CD6F60();
  sub_241CDADB0();
  uint64_t v20 = swift_getWitnessTable();
  sub_241CDAC10();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  uint64_t v34 = v20;
  uint64_t v35 = MEMORY[0x263F19100];
  swift_getWitnessTable();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v17(v15, v13, v9);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, v9);
  v17(v26, v15, v9);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v9);
}

void sub_241A2E464()
{
  if (!qword_26B030990)
  {
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_26B030990);
    }
  }
}

uint64_t sub_241A2E4CC(uint64_t a1)
{
  uint64_t result = *(void *)(v1 + *(int *)(a1 + 96));
  if (!result)
  {
    sub_241CD85C0();
    sub_241A2845C(&qword_26B030970, MEMORY[0x263F43F10]);
    uint64_t result = sub_241CDA9B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_241A2E550(uint64_t a1)
{
  uint64_t v2 = sub_241CD8F70();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

char *sub_241A2E648(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD8F70();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A35738(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[21];
  uint64_t v10 = a3[22];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[24];
  *(void *)&a1[a3[23]] = *(void *)&a2[a3[23]];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t SummaryModelConfiguration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_241A2E86C(v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind, type metadata accessor for SummaryModelConfiguration.Kind);

  return swift_deallocClassInstance();
}

uint64_t sub_241A2E86C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for SummaryModelConfiguration.Kind(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      sub_241A2F180();
      uint64_t v4 = a1 + *(int *)(v3 + 48);
      uint64_t v5 = sub_241CD6810();
      uint64_t v6 = *(void *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      }
      goto LABEL_9;
    case 1:
      uint64_t v7 = sub_241CD9970();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      sub_241A2EB30();
      uint64_t v9 = a1 + *(int *)(v8 + 48);
      uint64_t v10 = sub_241CD6810();
      uint64_t v13 = *(void *)(v10 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
      if (!result)
      {
        uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
        return v12(v9, v10);
      }
      return result;
    case 2:
      uint64_t v11 = sub_241CD9A30();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
      sub_241A308C4();
      goto LABEL_9;
    case 3:
      swift_bridgeObjectRelease();
LABEL_9:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void sub_241A2EB30()
{
  if (!qword_26B0321E0)
  {
    sub_241CD9970();
    sub_241A32C64(255, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B0321E0);
    }
  }
}

void sub_241A2EBD4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a3;
  sub_241A32C64(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (void (*)(char *, uint64_t))((char *)&v43 - v5);
  uint64_t v7 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (void *)sub_241CD76E0();
  uint64_t v11 = (void *)sub_241CD73C0();

  if (v11)
  {
    id v12 = objc_msgSend(v11, sel_type);

    if (v12 == (id)3)
    {
      id v13 = objc_msgSend(self, sel_sharedBehavior);
      if (!v13)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      uint64_t v14 = v13;
      id v15 = objc_msgSend(v13, sel_features);

      if (!v15)
      {
LABEL_28:
        __break(1u);
        return;
      }
      unsigned int v16 = objc_msgSend(v15, sel_snidgetsTinker);

      if (!v16) {
        return;
      }
    }
  }
  id v17 = objc_msgSend(self, sel_sharedBehavior);
  if (!v17)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v18 = v17;
  id v19 = objc_msgSend(v17, sel_features);

  if (!v19)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unsigned __int8 v20 = objc_msgSend(v19, sel_snidgets);

  if (v20 & 1) == 0 && (sub_241CD76F0()) {
    return;
  }
  uint64_t v46 = MEMORY[0x263F8EE78];
  uint64_t v21 = HKObjectType.summaryChartModelConfiguration.getter();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  if (v21)
  {
    if (v21 == (void *)1) {
      return;
    }
    sub_241A31064(0, (unint64_t *)&qword_26B038868);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_241CEB710;
    *(void *)(v25 + 32) = a1;
    uint64_t v45 = v25;
    sub_241CDB2E0();
    uint64_t v26 = v45;
    sub_241A2F180();
    uint64_t v28 = (uint64_t)v9 + *(int *)(v27 + 48);
    uint64_t v29 = *(int *)(v27 + 64);
    *uint64_t v9 = v22;
    uint64_t v30 = sub_241CD9970();
    (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v6, 1, 1, v30);
    swift_bridgeObjectRetain();
    sub_241A31D18(a1, 0, v6, v28);
    sub_241A328E4((uint64_t)v6, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    *(void *)((char *)v9 + v29) = v44;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for SummaryModelConfiguration(0);
    uint64_t v31 = swift_allocObject();
    sub_241A31C5C((uint64_t)v9, v31 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
    *(void *)(v31 + 16) = v26;
    *(unsigned char *)(v31 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = 0;
    uint64_t v32 = swift_retain();
    MEMORY[0x2456365D0](v32);
    if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_241CDB2F0();
    }
    sub_241CDB310();
    sub_241CDB2E0();
  }
  if ((sub_241CD76F0() & 1) != 0 || (uint64_t v33 = (void *)sub_241CD76E0(), v34 = sub_241A2F2FC(), v33, !v34))
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (!v24)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_241CEB710;
  *(void *)(v35 + 32) = a1;
  uint64_t v45 = v35;
  sub_241CDB2E0();
  uint64_t v36 = v45;
  sub_241A2F180();
  uint64_t v38 = (uint64_t)v9 + *(int *)(v37 + 48);
  uint64_t v39 = *(int *)(v37 + 64);
  *uint64_t v9 = v24;
  uint64_t v40 = sub_241CD9970();
  (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v6, 1, 1, v40);
  sub_241A31D18(a1, 1, v6, v38);
  sub_241A328E4((uint64_t)v6, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  *(void *)((char *)v9 + v39) = v44;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SummaryModelConfiguration(0);
  uint64_t v41 = swift_allocObject();
  sub_241A31C5C((uint64_t)v9, v41 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  *(void *)(v41 + 16) = v36;
  *(unsigned char *)(v41 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = 1;
  uint64_t v42 = swift_retain();
  MEMORY[0x2456365D0](v42);
  if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_241CDB2F0();
  }
  sub_241CDB310();
  sub_241CDB2E0();
}

void sub_241A2F180()
{
  if (!qword_26B034C88)
  {
    sub_241A683BC(255, &qword_26B034C90, (uint64_t (*)(uint64_t))type metadata accessor for HKTimeScope, MEMORY[0x263F8D488]);
    sub_241A68508(255);
    sub_241A6853C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26B034C88);
    }
  }
}

void *HKObjectType.summaryChartModelConfiguration.getter()
{
  objc_msgSend(v0, sel_code);
  return &unk_26F5BFF68;
}

BOOL sub_241A2F2FC()
{
  uint64_t v0 = sub_241CDA1A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_241CD73C0();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (char *)objc_msgSend(v4, sel_type);

    return (unint64_t)(v6 - 1) < 2;
  }
  else
  {
    sub_241CDA0F0();
    uint64_t v8 = sub_241CDA190();
    os_log_type_t v9 = sub_241CDB660();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v13 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v12 = sub_241A33FE4(0xD000000000000025, 0x8000000241CEBC80, &v13);
      sub_241CDBBF0();
      _os_log_impl(&dword_241A23000, v8, v9, "%s: Unable to detect source profile type, we only generate charts for specific profiles", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v11, -1, -1);
      MEMORY[0x245637F20](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
}

uint64_t sub_241A2F50C(void (*a1)(unint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (a3 >> 62) {
    goto LABEL_13;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_241CDBF50())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x245637160](i - 4, a3) : *(id *)(a3 + 8 * i);
      os_log_type_t v9 = v8;
      uint64_t v10 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v8;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      sub_241A2FE7C(v12);
      if (v10 == v6)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

void sub_241A2F660(void **a1@<X0>, void *a2@<X8>)
{
  sub_241A2F67C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void sub_241A2F67C(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *a1;
  self;
  uint64_t v14 = swift_dynamicCastObjCClass();
  if (v14)
  {
    id v15 = (void *)v14;
    unint64_t v16 = MEMORY[0x263F8EE78];
    *a4 = MEMORY[0x263F8EE78];
    id v17 = v13;
    unint64_t v18 = sub_241A300D8(v15, a2);
    sub_241A2FE7C(v18);
    if ((sub_241CD76F0() & 1) == 0)
    {
      id v19 = (void *)sub_241CD76E0();
      unsigned __int8 v20 = (void *)sub_241CD73C0();

      if (v20 && (id v21 = objc_msgSend(v20, sel_type), v20, v21 == (id)3))
      {
        unint64_t v16 = MEMORY[0x263F8EE78];
      }
      else
      {
        uint64_t v37 = sub_241CD99D0();
        id v38 = v17;
        swift_retain();
        unint64_t v16 = sub_241A3054C(v37, v15, a3);
        swift_bridgeObjectRelease();

        swift_release();
      }
    }
    sub_241A2FE7C(v16);
    sub_241A2EBD4(v15, a2, a3);
    sub_241A2FE7C(v39);
    sub_241A2FE94(v15, a2, a3);
    sub_241A2FE7C(v40);
  }
  else
  {
    sub_241CDA140();
    id v22 = v13;
    uint64_t v23 = sub_241CDA190();
    os_log_type_t v24 = sub_241CDB670();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      int v43 = v25;
      uint64_t v27 = v26;
      uint64_t v44 = swift_slowAlloc();
      uint64_t v48 = v44;
      *(_DWORD *)uint64_t v27 = 136315394;
      uint64_t v45 = v4;
      uint64_t v46 = &type metadata for DiskSummaryModelConfigurationProvider;
      sub_241A34B74();
      os_log_t v42 = v23;
      uint64_t v28 = sub_241CDB120();
      uint64_t v46 = (ValueMetadata *)sub_241A33FE4(v28, v29, &v48);
      v41[2] = &v47;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      v41[1] = v27 + 14;
      id v30 = v22;
      id v31 = objc_msgSend(v30, sel_description);
      uint64_t v32 = sub_241CDB0D0();
      unint64_t v34 = v33;

      uint64_t v46 = (ValueMetadata *)sub_241A33FE4(v32, v34, &v48);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      os_log_t v35 = v42;
      _os_log_impl(&dword_241A23000, v42, (os_log_type_t)v43, "[%s]: Summaries only supports sample types; you'll need a special configuration for %s",
        (uint8_t *)v27,
        0x16u);
      uint64_t v36 = v44;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      MEMORY[0x245637F20](v27, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *a4 = MEMORY[0x263F8EE78];
  }
}

uint64_t sub_241A2FA58(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x245637170](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_241CDB2E0();
}

uint64_t sub_241A2FC2C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_241B0E548(0, &qword_26B034C68, type metadata accessor for SummaryModelConfiguration, MEMORY[0x263F8D488]);
        sub_241B0C440();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          unint64_t v12 = sub_241B5D0D4(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for SummaryModelConfiguration(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SummaryModelConfiguration(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B0330B8);
}

uint64_t sub_241A2FE7C(unint64_t a1)
{
  return sub_241A2FA58(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_241A2FC2C);
}

void sub_241A2FE94(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((sub_241CD76F0() & 1) == 0)
  {
    uint64_t v8 = (void *)sub_241CD76E0();
    uint64_t v9 = (void *)sub_241CD73C0();

    if (!v9 || (id v10 = objc_msgSend(v9, sel_type), v9, v10 != (id)3))
    {
      id v11 = objc_msgSend(self, sel_sharedBehavior);
      if (v11)
      {
        unint64_t v12 = v11;
        id v13 = objc_msgSend(v11, sel_features);

        if (v13)
        {
          unsigned int v14 = objc_msgSend(v13, sel_bloodPressureTrends);

          if (v14)
          {
            uint64_t v15 = sub_241CD9A00();
            sub_241A31064(0, (unint64_t *)&qword_26B038868);
            uint64_t v16 = swift_allocObject();
            long long v21 = xmmword_241CEB710;
            *(_OWORD *)(v16 + 16) = xmmword_241CEB710;
            uint64_t v17 = swift_allocObject();
            *(_OWORD *)(v17 + 16) = v21;
            *(void *)(v17 + 32) = a1;
            uint64_t v22 = v17;
            sub_241CDB2E0();
            uint64_t v18 = v22;
            *uint64_t v7 = v15;
            v7[1] = a3;
            swift_storeEnumTagMultiPayload();
            type metadata accessor for SummaryModelConfiguration(0);
            uint64_t v19 = swift_allocObject();
            sub_241A31C5C((uint64_t)v7, v19 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
            *(void *)(v19 + 16) = v18;
            *(unsigned char *)(v19 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = 1;
            *(void *)(v16 + 32) = v19;
            uint64_t v22 = v16;
            sub_241CDB2E0();
            id v20 = a1;
            swift_retain();
          }
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
}

uint64_t sub_241A300D8(void *a1, uint64_t a2)
{
  v19[7] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_241CD7740();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A31064(0, &qword_26B034FA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB730;
  *(unsigned char *)(inited + 32) = 0;
  char v9 = sub_241CD76F0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    id v10 = (void *)sub_241CD76D0();
    id v11 = objc_msgSend(v10, sel_profileIdentifier);

    id v12 = objc_msgSend(v11, sel_type);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v12 == (id)1)
    {
      unint64_t v14 = *(void *)(inited + 16);
      unint64_t v13 = *(void *)(inited + 24);
      if (v14 >= v13 >> 1) {
        uint64_t inited = (uint64_t)sub_241A3042C((char *)(v13 > 1), v14 + 1, 1, (char *)inited);
      }
      *(void *)(inited + 16) = v14 + 1;
      *(unsigned char *)(inited + v14 + 32) = 1;
    }
  }
  id v15 = a1;
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_241A30310(v16, v15);
  swift_bridgeObjectRelease_n();

  return v17;
}

uint64_t sub_241A30310(uint64_t a1, void *a2)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v5; ++i)
    {
      unsigned __int8 v10 = *(unsigned char *)(a1 + i + 32);
      uint64_t v8 = sub_241A313E8(&v10, a2, &v9);
      if (v2)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v9)
      {
        MEMORY[0x2456365D0](v8);
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241CDB2F0();
        }
        sub_241CDB310();
        sub_241CDB2E0();
      }
    }
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

char *sub_241A3042C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_241A307E0(0, &qword_26B034FA0, (uint64_t)&type metadata for SummaryModelConfiguration.Audience, MEMORY[0x263F8E0F8]);
      unsigned __int8 v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      id v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unsigned __int8 v10 = (char *)MEMORY[0x263F8EE78];
      id v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_241AF8734(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_241A3054C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v26 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x270FA5388](v26);
  int64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v29 = MEMORY[0x263F8EE78];
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    v22[1] = v3;
    uint64_t v25 = sub_241CD9A30();
    uint64_t v11 = *(void *)(v25 - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v27 = *(void *)(v11 + 72);
    unint64_t v13 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v22[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v24 = MEMORY[0x263F8EE50] + 8;
    long long v23 = xmmword_241CEB710;
    do
    {
      uint64_t v14 = *(void *)(sub_241CD99C0() + 16);
      swift_bridgeObjectRelease();
      if (v14)
      {
        sub_241A31064(0, (unint64_t *)&qword_26B038868);
        uint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = v23;
        *(void *)(v15 + 32) = a2;
        uint64_t v28 = v15;
        sub_241CDB2E0();
        uint64_t v16 = v28;
        sub_241A308C4();
        uint64_t v18 = *(int *)(v17 + 48);
        (*v13)(v8, v12, v25);
        *(void *)&v8[v18] = a3;
        swift_storeEnumTagMultiPayload();
        type metadata accessor for SummaryModelConfiguration(0);
        uint64_t v19 = swift_allocObject();
        sub_241A31C5C((uint64_t)v8, v19 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
        *(void *)(v19 + 16) = v16;
        *(unsigned char *)(v19 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = 1;
        id v20 = a2;
        uint64_t v21 = swift_retain();
        MEMORY[0x2456365D0](v21);
        if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241CDB2F0();
        }
        sub_241CDB310();
        sub_241CDB2E0();
      }
      v12 += v27;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    return v29;
  }
  return result;
}

void sub_241A307E0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241A3082C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241A30878(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241A308C4()
{
  if (!qword_26B0321F8)
  {
    sub_241CD9A30();
    sub_241A36B98(255, (unint64_t *)&qword_26B032758, MEMORY[0x263EFDCF0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B0321F8);
    }
  }
}

uint64_t sub_241A30954(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)MEMORY[0x245637160](v8, v4);
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_241CDBE60();
          sub_241CDBE90();
          unint64_t v4 = v15;
          sub_241CDBEA0();
          sub_241CDBE70();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_241CDBF50();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_241A30B00(void **a1)
{
  sub_241A30B20(a1);
  return v1 & 1;
}

void sub_241A30B20(void **a1)
{
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v38 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
  sub_241A32C64(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)v32 - v8;
  uint64_t v10 = *a1;
  sub_241CDB490();
  uint64_t v11 = sub_241CD9970();
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11);
  sub_241A328E4((uint64_t)v9, (unint64_t *)&qword_26B0321F0, v6);
  if (a1 == 1) {
    return;
  }
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = objc_msgSend(self, sel_activitySummaryType);
  v37[0] = inited;
  sub_241CDB2E0();
  char v13 = sub_241A31224((uint64_t)v10, v37[0]);
  swift_bridgeObjectRelease();
  if (v13)
  {
    sub_241CDA140();
    id v14 = v10;
    unint64_t v15 = sub_241CDA190();
    os_log_type_t v16 = sub_241CDB670();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      int v33 = v17;
      uint64_t v19 = v18;
      uint64_t v34 = swift_slowAlloc();
      v37[0] = v34;
      *(_DWORD *)uint64_t v19 = 136315394;
      v36[0] = &type metadata for DiskSummaryModelConfigurationProvider;
      sub_241A34B74();
      uint64_t v20 = sub_241CDB120();
      uint64_t v35 = v1;
      v36[0] = sub_241A33FE4(v20, v21, v37);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      v32[1] = v19 + 14;
      id v22 = v14;
      id v23 = objc_msgSend(v22, sel_description);
      uint64_t v24 = sub_241CDB0D0();
      unint64_t v26 = v25;

      v36[0] = sub_241A33FE4(v24, v26, v37);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v15, (os_log_type_t)v33, "[%s]: Excluding this configuration because it's in our exclusion list: %s", (uint8_t *)v19, 0x16u);
      uint64_t v27 = v34;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v27, -1, -1);
      MEMORY[0x245637F20](v19, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v3);
    return;
  }
  id v28 = objc_msgSend(self, sel_sharedBehavior);
  if (!v28)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v29 = v28;
  id v30 = objc_msgSend(v28, sel_features);

  if (!v30)
  {
LABEL_14:
    __break(1u);
    return;
  }
  unsigned int v31 = objc_msgSend(v30, sel_snidgets);

  if (v31 && (sub_241CD76F0() & 1) != 0)
  {
    sub_241CD76B0();
    sub_241A311E0(v37, v37[3]);
    sub_241CD75E0();
    sub_241A311E0(v36, v36[3]);
    sub_241CDB420();
    sub_241CD7B10();
    swift_bridgeObjectRelease();
    sub_241A31190((uint64_t)v36);
    sub_241A31190((uint64_t)v37);
  }
}

void sub_241A31064(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_241CDC0E0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_241A310AC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241A310F8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241A31144(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241A31190(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *sub_241A311E0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_241A31224(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_241CDBF50())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)MEMORY[0x245637160](0, a2);
LABEL_5:
      uint64_t v6 = v5;
      sub_241A313AC(0, (unint64_t *)&qword_26B038440);
      char v7 = sub_241CDBB60();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_241CDBB60();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      MEMORY[0x245637160](v9, a2);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_241CDBB60();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_241A313AC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_241A313E8@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  v68 = a3;
  uint64_t v65 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  uint64_t v5 = MEMORY[0x270FA5388](v65);
  char v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v66 = (char *)&v60 - v8;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A32C64(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v60 - v11;
  sub_241A32C64(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v9);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  os_log_type_t v16 = (void (*)(char *, uint64_t))((char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v60 - v17;
  uint64_t v19 = sub_241CD9970();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v23 = *a1;
  uint64_t v64 = a2;
  sub_241CDB490();
  uint64_t v24 = v20;
  unint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  uint64_t v67 = v19;
  if (v25(v18, 1, v19) == 1)
  {
    uint64_t result = sub_241A328E4((uint64_t)v18, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    uint64_t v27 = 0;
    goto LABEL_8;
  }
  uint64_t v63 = v7;
  id v28 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  uint64_t v29 = v67;
  v28(v22, v18, v67);
  id v30 = *(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v24 + 16);
  v30(v16, v22, v29);
  uint64_t v61 = v24;
  (*(void (**)(void (*)(char *, uint64_t), void, uint64_t, uint64_t))(v24 + 56))(v16, 0, 1, v29);
  unsigned int v31 = v64;
  int v62 = v23;
  sub_241A31D18(v64, v23, v16, (uint64_t)v12);
  sub_241A328E4((uint64_t)v16, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  sub_241A2EB30();
  int v33 = v66;
  uint64_t v34 = (uint64_t)&v66[*(int *)(v32 + 48)];
  v30((void (*)(char *, uint64_t))v66, v22, v29);
  sub_241A32EF0((uint64_t)v12, v34, &qword_26B038F10, MEMORY[0x263F062D0]);
  swift_storeEnumTagMultiPayload();
  id v35 = objc_msgSend(v31, sel_identifier);
  uint64_t v36 = sub_241CDB0D0();
  uint64_t v38 = v37;

  uint64_t v40 = (uint64_t)v33;
  if (sub_241CDB0D0() == v36 && v39 == v38)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    sub_241A31064(0, (unint64_t *)&qword_26B038868);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_241CEB710;
    *(void *)(v42 + 32) = v31;
    uint64_t v69 = v42;
    sub_241CDB2E0();
    uint64_t v43 = v69;
    id v44 = v31;
    sub_241A328E4((uint64_t)v12, &qword_26B038F10, MEMORY[0x263F062D0]);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v22, v67);
    uint64_t v45 = (uint64_t)v63;
    sub_241A31C5C(v40, (uint64_t)v63);
    type metadata accessor for CardioFitnessSummaryModelConfiguration();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_characteristicChangePublisher) = 0;
    *(void *)(v27 + OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_featureStatusChangePublisher) = 0;
    uint64_t result = sub_241A31C5C(v45, v27 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
    *(void *)(v27 + 16) = v43;
    *(unsigned char *)(v27 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v62;
    goto LABEL_8;
  }
  char v41 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v41) {
    goto LABEL_7;
  }
  if (sub_241CDB0D0() == v36 && v47 == v38)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    sub_241A31064(0, (unint64_t *)&qword_26B038868);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_241CEB710;
    *(void *)(v49 + 32) = v31;
    uint64_t v69 = v49;
    sub_241CDB2E0();
    uint64_t v50 = v69;
    id v51 = v31;
    sub_241A328E4((uint64_t)v12, &qword_26B038F10, MEMORY[0x263F062D0]);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v22, v67);
    uint64_t v52 = (uint64_t)v63;
    sub_241A31C5C(v40, (uint64_t)v63);
    type metadata accessor for AFibBurdenSummaryModelConfiguration();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + OBJC_IVAR____TtC9Summaries35AFibBurdenSummaryModelConfiguration_keyValueDomainChangePublisher) = 0;
    uint64_t result = sub_241A31C5C(v52, v27 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
    *(void *)(v27 + 16) = v50;
    *(unsigned char *)(v27 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v62;
    uint64_t v46 = v68;
    goto LABEL_9;
  }
  char v48 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v48) {
    goto LABEL_14;
  }
  if (sub_241CDB0D0() == v36 && v53 == v38)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v54 = (uint64_t)v63;
    char v55 = v62;
  }
  else
  {
    char v56 = sub_241CDC100();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = (uint64_t)v63;
    char v55 = v62;
    if ((v56 & 1) == 0)
    {
      sub_241A31064(0, (unint64_t *)&qword_26B038868);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_241CEB710;
      *(void *)(v57 + 32) = v31;
      uint64_t v69 = v57;
      sub_241CDB2E0();
      uint64_t v58 = v69;
      id v59 = v31;
      sub_241A328E4((uint64_t)v12, &qword_26B038F10, MEMORY[0x263F062D0]);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v22, v67);
      sub_241A31C5C(v40, v54);
      type metadata accessor for SummaryModelConfiguration(0);
      uint64_t v27 = swift_allocObject();
      uint64_t result = sub_241A31C5C(v54, v27 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
      *(void *)(v27 + 16) = v58;
      *(unsigned char *)(v27 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v55;
      goto LABEL_8;
    }
  }
  sub_241A334BC(v40, v54);
  type metadata accessor for BalanceSummaryModelConfiguration();
  swift_allocObject();
  uint64_t v27 = (uint64_t)sub_241A33308(v54, v55);
  sub_241A331C8(v40);
  sub_241A328E4((uint64_t)v12, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v22, v67);
LABEL_8:
  uint64_t v46 = v68;
LABEL_9:
  *uint64_t v46 = v27;
  return result;
}

uint64_t sub_241A31C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241A31CC0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SummaryModelConfiguration.Kind(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B032F58);
}

id sub_241A31D18@<X0>(void *a1@<X0>, int a2@<W1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v105 = a3;
  LODWORD(v106) = a2;
  uint64_t v108 = a1;
  uint64_t v103 = a4;
  LODWORD(v104) = a2 & 1;
  uint64_t v4 = sub_241CD6EE0();
  uint64_t v97 = *(void *)(v4 - 8);
  uint64_t v98 = v4;
  MEMORY[0x270FA5388](v4);
  v96 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A32C64(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v99 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v87 = (char *)&v81 - v10;
  uint64_t v94 = sub_241CD9840();
  uint64_t v88 = *(void *)(v94 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v94);
  v93 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v95 = (char *)&v81 - v13;
  uint64_t v91 = sub_241CD9D00();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v89 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
  sub_241A32C64(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v6);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v92 = (uint64_t)&v81 - v17;
  sub_241A330C8();
  uint64_t v19 = v18 - 8;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241CD6D00();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v102 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v101 = (char *)&v81 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  id v30 = (char *)&v81 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  int v33 = (char *)&v81 - v32;
  MEMORY[0x270FA5388](v31);
  id v35 = (char *)&v81 - v34;
  sub_241CD6CF0();
  uint64_t v36 = (void *)sub_241CD6C60();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v100 = v33;
  uint64_t v107 = v37;
  v37(v33, v22);
  id v38 = (id)HKEndOfDayForDate();

  uint64_t v109 = v35;
  sub_241CD6CB0();

  uint64_t v39 = *(int *)(v19 + 72);
  uint64_t v40 = v108;
  uint64_t v41 = (uint64_t)&v21[v39];
  char *v21 = v104;
  *((void *)v21 + 1) = v40;
  sub_241A32EF0((uint64_t)v105, (uint64_t)&v21[v39], (unint64_t *)&qword_26B0321F0, v15);
  if (v106)
  {
    uint64_t v106 = v30;
    self;
    uint64_t v43 = swift_dynamicCastObjCClass();
    id v44 = v99;
    if (v43)
    {
      uint64_t v45 = (void *)v43;
      uint64_t v46 = sub_241CD9970();
      uint64_t v47 = *(void *)(v46 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v41, 1, v46) != 1)
      {
        uint64_t v48 = v92;
        sub_241A32EF0(v41, v92, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v47 + 88))(v48, v46) == *MEMORY[0x263F46C30])
        {
          (*(void (**)(uint64_t, uint64_t))(v47 + 96))(v48, v46);
          (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v89, v48, v91);
          id v83 = v40;
          uint64_t v49 = sub_241CD9CC0();
          uint64_t v50 = v88;
          uint64_t v51 = v94;
          (*(void (**)(char *, void, uint64_t))(v88 + 104))(v95, *MEMORY[0x263F46B78], v94);
          uint64_t v104 = *(void *)(v49 + 16);
          uint64_t v84 = v49;
          if (v104)
          {
            uint64_t v82 = v41;
            unint64_t v52 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
            uint64_t v53 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v50 + 16);
            uint64_t v54 = v93;
            uint64_t v92 = v50 + 16;
            uint64_t v86 = v53;
            v53(v93, v49 + v52, v51);
            uint64_t v55 = v51;
            uint64_t v85 = sub_241A33180(&qword_26B0321A0, MEMORY[0x263F46B90]);
            char v56 = sub_241CDB050();
            uint64_t v58 = *(void (**)(char *, uint64_t))(v50 + 8);
            uint64_t v57 = v50 + 8;
            uint64_t v105 = v58;
            v58(v54, v55);
            if (v56)
            {
LABEL_8:
              v105(v95, v94);
              swift_bridgeObjectRelease();
              id result = objc_msgSend(v45, sel__rollingBaselineConfiguration);
              if (result)
              {
                uint64_t v60 = result;
                objc_msgSend(result, sel_maximumWindowDuration);

                uint64_t v61 = v96;
                sub_241CD6EA0();
                int v62 = v87;
                sub_241CD6C30();
                (*(void (**)(char *, uint64_t))(v97 + 8))(v61, v98);
                id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v62, 1, v22);
                uint64_t v42 = v106;
                uint64_t v41 = v82;
                if (result != 1)
                {
                  sub_241CD6C90();
                  id v63 = v83;

                  (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v91);
                  v107(v62, v22);
                  goto LABEL_22;
                }
LABEL_29:
                __break(1u);
                return result;
              }
LABEL_28:
              __break(1u);
              goto LABEL_29;
            }
            if (v104 != 1)
            {
              uint64_t v81 = v57 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
              uint64_t v88 = *(void *)(v88 + 72);
              unint64_t v64 = v84 + v88 + v52;
              uint64_t v65 = 1;
              uint64_t v66 = v94;
              while (1)
              {
                uint64_t v67 = v93;
                id result = (id)v86(v93, v64, v66);
                uint64_t v68 = v65 + 1;
                if (__OFADD__(v65, 1)) {
                  break;
                }
                char v69 = sub_241CDB050();
                uint64_t v70 = v67;
                char v71 = v69;
                v105(v70, v66);
                if (v71) {
                  goto LABEL_8;
                }
                ++v65;
                v64 += v88;
                uint64_t v66 = v94;
                if (v68 == v104) {
                  goto LABEL_18;
                }
              }
              __break(1u);
LABEL_27:
              __break(1u);
              goto LABEL_28;
            }
LABEL_18:
            id v44 = v99;
            uint64_t v41 = v82;
            v105(v95, v94);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v50 + 8))(v95, v51);
          }
          id v72 = v83;

          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v91);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v46);
        }
      }
    }
    uint64_t v73 = v96;
    sub_241CD6EA0();
    sub_241CD6C30();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v73, v98);
    id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v44, 1, v22);
    if (result != 1)
    {
      uint64_t v42 = v106;
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v106, v44, v22);
      goto LABEL_22;
    }
    goto LABEL_27;
  }
  sub_241CD6BF0();
  uint64_t v42 = v30;
LABEL_22:
  sub_241A328E4(v41, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  if (sub_241CDB480())
  {
    uint64_t v74 = v101;
    sub_241CD6C00();
    uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    uint64_t v77 = v102;
    uint64_t v76 = v103;
    uint64_t v78 = v109;
  }
  else
  {
    uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    uint64_t v74 = v101;
    uint64_t v78 = v109;
    v75(v101, v109, v22);
    uint64_t v77 = v102;
    uint64_t v76 = v103;
  }
  v75(v100, v42, v22);
  v75(v77, v74, v22);
  sub_241CD67C0();
  uint64_t v79 = v107;
  v107(v74, v22);
  v79(v42, v22);
  v79(v78, v22);
  uint64_t v80 = sub_241CD6810();
  return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v76, 0, 1, v80);
}

uint64_t sub_241A328E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A32C64(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241A32954(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241A329B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241A29578(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241A32A10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241AE3950(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241A32A6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241A32ACC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241AFE11C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241A32B28(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241BD13B8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241A32B84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A29C20(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241A32BF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A29EDC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241A32C64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A32CC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A32D2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A32D80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A32DE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A32E38(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A32E8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241A32EF0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A32C64(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241A32F70(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241A29578(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241A32FDC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241B0E548(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241A3305C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241BD13B8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_241A330C8()
{
  if (!qword_26B0330A8)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B038440);
    sub_241A32C64(255, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26B0330A8);
    }
  }
}

uint64_t sub_241A33180(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A331C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CardioFitnessSummaryModelConfiguration()
{
  uint64_t result = qword_26B034098;
  if (!qword_26B034098) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenSummaryModelConfiguration()
{
  uint64_t result = qword_26B033B10;
  if (!qword_26B033B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for BalanceSummaryModelConfiguration()
{
  uint64_t result = qword_26B035FF0;
  if (!qword_26B035FF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_241A33308(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  sub_241A313AC(0, (unint64_t *)&qword_26B038E58);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  id result = objc_msgSend(ObjCClassFromMetadata, sel_appleBalanceMetricsType);
  if (result)
  {
    char v8 = a2 & 1;
    uint64_t v9 = OBJC_IVAR____TtC9Summaries32BalanceSummaryModelConfiguration_balanceType;
    *(void *)(v3 + OBJC_IVAR____TtC9Summaries32BalanceSummaryModelConfiguration_balanceType) = result;
    uint64_t v10 = v3 + OBJC_IVAR____TtC9Summaries32BalanceSummaryModelConfiguration_significantTimeChangePublisher;
    uint64_t v11 = sub_241CDB900();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    swift_release();
    sub_241A33460();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_241CEB710;
    uint64_t v13 = *(void **)(v3 + v9);
    *(void *)(v12 + 32) = v13;
    uint64_t v15 = v12;
    sub_241CDB2E0();
    sub_241A31C5C(a1, v3 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
    *(void *)(v3 + 16) = v15;
    *(unsigned char *)(v3 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v8;
    id v14 = v13;
    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241A33460()
{
  if (!qword_26B038868)
  {
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B038868);
    }
  }
}

uint64_t sub_241A334BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *initializeWithCopy for SummaryModelConfiguration.Kind(uint64_t *a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v12 = sub_241CD9970();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      sub_241A2EB30();
      uint64_t v14 = *(int *)(v13 + 48);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_241CD6810();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        sub_241A35970(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      break;
    case 2u:
      uint64_t v20 = sub_241CD9A30();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
      sub_241A308C4();
      *(uint64_t *)((char *)a1 + *(int *)(v21 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v21 + 48));
      swift_retain();
      break;
    case 3u:
      uint64_t v22 = *a2;
      uint64_t v23 = a2[1];
      *a1 = v22;
      a1[1] = v23;
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    default:
      *a1 = *a2;
      sub_241A2F180();
      uint64_t v5 = v4;
      uint64_t v6 = *(int *)(v4 + 48);
      __dst = (char *)a1 + v6;
      uint64_t v7 = (char *)a2 + v6;
      uint64_t v8 = sub_241CD6810();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      swift_bridgeObjectRetain();
      if (v10(v7, 1, v8))
      {
        sub_241A35970(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
        memcpy(__dst, v7, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(__dst, v7, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v5 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v5 + 64));
      swift_retain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_241A338CC(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_241CD7740();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  id v72 = (char *)v63 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v63 - v11;
  uint64_t v13 = sub_241CDA1A0();
  uint64_t v75 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v70 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v63 - v16;
  sub_241CDA0F0();
  uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v74 = v5 + 16;
  v73(v12, a1, v4);
  uint64_t v18 = sub_241CDA190();
  os_log_type_t v19 = sub_241CDB670();
  int v20 = v19;
  BOOL v21 = os_log_type_enabled(v18, v19);
  char v69 = v8;
  uint64_t v67 = v3;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v66 = (void (*)(void, void))swift_slowAlloc();
    uint64_t v77 = v66;
    *(_DWORD *)uint64_t v22 = 136315394;
    os_log_t v65 = v18;
    uint64_t v23 = sub_241CDC270();
    int v64 = v20;
    uint64_t v76 = sub_241A33FE4(v23, v24, (uint64_t *)&v77);
    uint64_t v68 = v13;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    v63[1] = v22 + 14;
    uint64_t v25 = (void *)sub_241CD76E0();
    uint64_t v26 = sub_241CD73E0();
    uint64_t v27 = a1;
    uint64_t v28 = v4;
    unint64_t v30 = v29;

    uint64_t v76 = sub_241A33FE4(v26, v30, (uint64_t *)&v77);
    uint64_t v13 = v68;
    sub_241CDBBF0();
    uint64_t v4 = v28;
    a1 = v27;
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v12, v4);
    uint64_t v18 = v65;
    _os_log_impl(&dword_241A23000, v65, (os_log_type_t)v64, "[%s]: Returning feedItem pipelines for sourceProfile %{public}s", (uint8_t *)v22, 0x16u);
    uint64_t v32 = v66;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v32, -1, -1);
    MEMORY[0x245637F20](v22, -1, -1);
  }
  else
  {
    uint64_t v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v12, v4);
  }

  int v33 = *(void (**)(char *, uint64_t))(v75 + 8);
  v33(v17, v13);
  uint64_t v34 = sub_241CD76E0();
  if (v34)
  {
    id v35 = (void *)v34;
    uint64_t v66 = (void (*)(void, void))v33;
    uint64_t v36 = (uint64_t)v72;
    uint64_t v37 = a1;
    v73(v72, a1, v4);
    sub_241A313AC(0, &qword_26B030850);
    id v38 = v35;
    uint64_t v39 = (uint64_t (*)(void))sub_241CDB8E0();
    unint64_t v41 = sub_241A34554(v36, v39, v40);
    uint64_t v42 = v36;
    uint64_t v43 = v38;
    v31((char *)v42, v4);
    swift_release();
    id v44 = objc_msgSend(v38, sel_type);
    if (v44 == (id)3)
    {
      sub_241BE03B8(v37);
    }
    else if (v44 == (id)2)
    {
      sub_241BE0060(v37, v41, (uint64_t)v71);
    }
    else
    {
      if (v44 != (id)1)
      {
        swift_bridgeObjectRelease();
        sub_241CDA0F0();
        uint64_t v47 = v69;
        v73(v69, v37, v4);
        uint64_t v48 = sub_241CDA190();
        os_log_type_t v49 = sub_241CDB650();
        int v50 = v49;
        if (os_log_type_enabled(v48, v49))
        {
          uint64_t v51 = swift_slowAlloc();
          uint64_t v74 = swift_slowAlloc();
          uint64_t v77 = (void (*)(void, void))v74;
          *(_DWORD *)uint64_t v51 = 136315395;
          LODWORD(v73) = v50;
          uint64_t v52 = sub_241CDC270();
          uint64_t v68 = v13;
          uint64_t v76 = sub_241A33FE4(v52, v53, (uint64_t *)&v77);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v51 + 12) = 2081;
          uint64_t v54 = (void *)sub_241CD76E0();
          uint64_t v55 = sub_241CD73E0();
          id v72 = (char *)v4;
          uint64_t v56 = v55;
          unint64_t v58 = v57;

          uint64_t v76 = sub_241A33FE4(v56, v58, (uint64_t *)&v77);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          v31(v69, (uint64_t)v72);
          _os_log_impl(&dword_241A23000, v48, (os_log_type_t)v73, "[%s]: feedItem Unexpected profile type %{private}s", (uint8_t *)v51, 0x16u);
          uint64_t v59 = v74;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v59, -1, -1);
          MEMORY[0x245637F20](v51, -1, -1);

          uint64_t v60 = v70;
          uint64_t v61 = v68;
        }
        else
        {
          v31(v47, v4);

          uint64_t v60 = v70;
          uint64_t v61 = v13;
        }
        v66(v60, v61);
        uint64_t v46 = MEMORY[0x263F8EE78];
        goto LABEL_19;
      }
      if (sub_241CD76F0()) {
        uint64_t v45 = sub_241A27DE4(v37);
      }
      else {
        uint64_t v45 = sub_241A27660(v37, v41, v71);
      }
    }
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
LABEL_19:

    return v46;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_241A33FE4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_241A34114(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_241A340B8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_241A340B8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_241A31190((uint64_t)v12);
  return v7;
}

uint64_t sub_241A340B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_241A34114(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_241CDBC00();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_241A342D0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_241CDBE50();
  if (!v8)
  {
    sub_241CDBF00();
    __break(1u);
LABEL_17:
    uint64_t result = sub_241CDBFB0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_241A342D0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_241A34368(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_241A51E58(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_241A51E58(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_241A34368(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_241A344E0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_241CDBE10();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_241CDBF00();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_241CDB1A0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_241CDBFB0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_241CDBF00();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_241A344E0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_241A31064(0, &qword_26B034FD8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_241A34554(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  int v33 = a2;
  uint64_t v34 = a3;
  unint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v39 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_241CD7650();
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD7690();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v40 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (id)_HKAllObjectTypes();
  sub_241A313AC(0, (unint64_t *)&qword_26B038440);
  uint64_t v14 = sub_241CDB2C0();

  unint64_t v42 = MEMORY[0x263F8EE78];
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0) {
      uint64_t v13 = v14;
    }
    else {
      uint64_t v13 = (v14 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v37 = v5;
  unint64_t v38 = v4;
  uint64_t v35 = v11;
  uint64_t v36 = v10;
  if (v15)
  {
    if (v15 < 1)
    {
      __break(1u);
LABEL_26:
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_241CDBF50();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    uint64_t v31 = a1;
    for (uint64_t i = 0; i != v15; ++i)
    {
      if ((v14 & 0xC000000000000001) != 0) {
        id v17 = (id)MEMORY[0x245637160](i, v14);
      }
      else {
        id v17 = *(id *)(v14 + 8 * i + 32);
      }
      uint64_t v18 = v17;
      if (objc_msgSend(v17, sel_enabled))
      {
        sub_241CDBE60();
        sub_241CDBE90();
        sub_241CDBEA0();
        sub_241CDBE70();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v19 = v42;
    a1 = v31;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v19 = MEMORY[0x263F8EE78];
  }
  BOOL v21 = v33;
  uint64_t v20 = v34;
  uint64_t v22 = v32;
  sub_241CD76E0();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F45688], v22);
  uint64_t v23 = (uint64_t)v40;
  sub_241CD7670();
  uint64_t v24 = sub_241A34BB0(a1, v23, v21, v20);
  MEMORY[0x270FA5388](v24);
  *(&v30 - 2) = a1;
  unint64_t v25 = sub_241A30954(sub_241A30B00, (uint64_t)(&v30 - 4), v19);
  MEMORY[0x270FA5388](v25);
  *(&v30 - 2) = a1;
  *(&v30 - 1) = v24;
  unint64_t v4 = sub_241A2F50C((void (*)(unint64_t *__return_ptr, id *))sub_241A2F660, (uint64_t)(&v30 - 4), v25);
  swift_bridgeObjectRelease();
  uint64_t v9 = v39;
  sub_241CDA0F0();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_241CDA190();
  LOBYTE(a1) = sub_241CDB670();
  if (!os_log_type_enabled(v13, (os_log_type_t)a1))
  {

    swift_release();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, unint64_t))(v37 + 8))(v9, v38);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v23, v36);
    return v4;
  }
  uint64_t v10 = swift_slowAlloc();
  uint64_t v14 = swift_slowAlloc();
  unint64_t v42 = v14;
  *(_DWORD *)uint64_t v10 = 136315394;
  unint64_t v41 = &type metadata for DiskSummaryModelConfigurationProvider;
  sub_241A34B74();
  uint64_t v26 = sub_241CDB120();
  unint64_t v41 = (ValueMetadata *)sub_241A33FE4(v26, v27, (uint64_t *)&v42);
  sub_241CDBBF0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v10 + 12) = 2048;
  if (v4 >> 62) {
    goto LABEL_26;
  }
  uint64_t v28 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_18:
  swift_bridgeObjectRelease();
  unint64_t v41 = (ValueMetadata *)v28;
  sub_241CDBBF0();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_241A23000, v13, (os_log_type_t)a1, "[%s]: Extracted %ld summary model configurations for generation", (uint8_t *)v10, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x245637F20](v14, -1, -1);
  MEMORY[0x245637F20](v10, -1, -1);

  swift_release();
  (*(void (**)(char *, unint64_t))(v37 + 8))(v9, v38);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v40, v36);
  return v4;
}

unint64_t sub_241A34B74()
{
  unint64_t result = qword_26B033F80;
  if (!qword_26B033F80)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B033F80);
  }
  return result;
}

uint64_t sub_241A34BB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  v30[1] = a4;
  uint64_t v31 = a3;
  uint64_t v32 = a2;
  sub_241A353A8();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3530C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  uint64_t v34 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35150();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A351E4();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v37 = v17;
  uint64_t v38 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD76B0();
  sub_241A311E0(v40, v40[3]);
  BOOL v21 = (void *)sub_241CD75B0();
  uint64_t v22 = v31();

  sub_241A31190((uint64_t)v40);
  uint64_t v39 = v22;
  sub_241CD7730();
  sub_241A350E8();
  sub_241A33180(&qword_26B02EA68, (void (*)(uint64_t))sub_241A350E8);
  uint64_t v23 = sub_241CDA680();
  sub_241A31190((uint64_t)v40);
  swift_release();
  v40[0] = v23;
  sub_241CDA6B0();
  swift_release();
  sub_241CDA360();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_241A33180(&qword_26B02E928, (void (*)(uint64_t))sub_241A3530C);
  uint64_t v24 = v33;
  sub_241CDA800();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v24);
  sub_241A33180(&qword_26B032328, (void (*)(uint64_t))sub_241A35150);
  uint64_t v25 = v35;
  sub_241CDA6F0();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v25);
  sub_241A33180(&qword_26B0322D8, (void (*)(uint64_t))sub_241A351E4);
  uint64_t v26 = v37;
  uint64_t v27 = sub_241CDA690();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v26);
  v40[0] = v27;
  sub_241A35278();
  sub_241A33180(&qword_26B0322B0, (void (*)(uint64_t))sub_241A35278);
  uint64_t v28 = sub_241CDA6D0();
  swift_release();
  return v28;
}

void sub_241A350E8()
{
  if (!qword_26B0327B8)
  {
    sub_241A78F38();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0327B8);
    }
  }
}

void sub_241A35150()
{
  if (!qword_26B032330)
  {
    sub_241A3530C();
    sub_241A33180(&qword_26B02E928, (void (*)(uint64_t))sub_241A3530C);
    unint64_t v0 = sub_241CDA3D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032330);
    }
  }
}

void sub_241A351E4()
{
  if (!qword_26B0322E0)
  {
    sub_241A35150();
    sub_241A33180(&qword_26B032328, (void (*)(uint64_t))sub_241A35150);
    unint64_t v0 = sub_241CDA3A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0322E0);
    }
  }
}

void sub_241A35278()
{
  if (!qword_26B0322B8)
  {
    sub_241A78FB8();
    sub_241A33180(&qword_26B032600, (void (*)(uint64_t))sub_241A78FB8);
    unint64_t v0 = sub_241CDA380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0322B8);
    }
  }
}

void sub_241A3530C()
{
  if (!qword_26B0322A8)
  {
    sub_241A350E8();
    sub_241A33180(&qword_26B02EA68, (void (*)(uint64_t))sub_241A350E8);
    unint64_t v0 = sub_241CDA370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0322A8);
    }
  }
}

void sub_241A353A8()
{
  if (!qword_26B0322A0)
  {
    sub_241A350E8();
    sub_241A313AC(255, &qword_26B030858);
    sub_241A33180(&qword_26B02EA68, (void (*)(uint64_t))sub_241A350E8);
    unint64_t v0 = sub_241CDA370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0322A0);
    }
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for SummaryModelConfiguration.Audience(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t sub_241A35474()
{
  return sub_241A354AC(*v0);
}

uint64_t sub_241A354AC(char a1)
{
  if (!a1) {
    return 0x6956726564616568;
  }
  if (a1 == 1) {
    return 0xD000000000000015;
  }
  return 0xD000000000000016;
}

uint64_t sub_241A35510(uint64_t a1)
{
  return sub_241A35548(a1, v1, &qword_26B0385D0, MEMORY[0x263F445F8]);
}

uint64_t sub_241A35548(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A35738(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

void sub_241A355C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A3561C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A35680(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A356E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A35738(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A3579C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A35800(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A35864(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A358B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A3591C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A35970(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A359D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A35A38(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A35A8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A35AF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A35B54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A35BB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A35C0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A35C70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A35CD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A35D38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A35D9C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *sub_241A35DF0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SummariesPromotionGeneratorPipeline.FitnessPromotionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t sub_241A35F50()
{
  return swift_getWitnessTable();
}

uint64_t sub_241A35F6C()
{
  return sub_241A2C46C((uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_241A2D87C);
}

uint64_t sub_241A35F84()
{
  return sub_241A2C46C((uint64_t (*)(void, void, void, void, void, void, void, void, void))sub_241A2C4AC);
}

unint64_t sub_241A35FA0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_241A35FBC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_241A3600C()
{
  if (!qword_26B038860)
  {
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B038860);
    }
  }
}

void sub_241A36064(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241AF8FE4(255, a3);
    unint64_t v4 = sub_241CDC0E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A360C4()
{
  if (!qword_26B034EB8)
  {
    unint64_t v0 = sub_241CDBDF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034EB8);
    }
  }
}

void sub_241A36124(uint64_t a1)
{
}

unsigned char *sub_241A36158@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result & ~result[1] & 1;
  return result;
}

uint64_t type metadata accessor for SignificantChangesNotificationSwitchCellViewController()
{
  uint64_t result = qword_26B02FF68;
  if (!qword_26B02FF68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SignificantChangesPromotionTileActionHandler()
{
  uint64_t result = qword_268D42ED0;
  if (!qword_268D42ED0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A36208()
{
  if (*v0) {
    return 0x676E6972616873;
  }
  else {
    return 0x7972616D697270;
  }
}

uint64_t sub_241A3623C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241A36288()
{
  return swift_getWitnessTable();
}

uint64_t sub_241A362A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_241A362C0()
{
  return swift_getWitnessTable();
}

void sub_241A362DC()
{
  sub_241A35738(319, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_241A363B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 88);
}

uint64_t sub_241A363C0()
{
  return MEMORY[0x263EFDDD8];
}

uint64_t sub_241A363CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_241A363E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_241A36408()
{
  return swift_getWitnessTable();
}

uint64_t sub_241A36424()
{
  return swift_getWitnessTable();
}

uint64_t sub_241A36440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t type metadata accessor for SummariesPromotionGeneratorPipeline()
{
  uint64_t result = qword_26B02EC78;
  if (!qword_26B02EC78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A36494@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_241CD7740() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241A26250(v1 + v4, v5, a1);
}

uint64_t sub_241A3653C()
{
  return swift_retain();
}

uint64_t sub_241A36550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries35SummariesPromotionGeneratorPipeline_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

id sub_241A365C8@<X0>(id *a1@<X0>, BOOL *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_authorizationStatus);
  *a2 = result != (id)1;
  return result;
}

uint64_t sub_241A36604@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD7740() - 8);
  return sub_241A28CB4(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), *a1, a2);
}

uint64_t type metadata accessor for SummariesSettingsGeneratorPipeline()
{
  uint64_t result = qword_26B02EBA8;
  if (!qword_26B02EBA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A366F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_241CD7740() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_241A25A64(v4, a1);
}

uint64_t sub_241A3678C()
{
  return swift_retain();
}

uint64_t sub_241A367A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries34SummariesSettingsGeneratorPipeline_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_241A36818()
{
  if (!qword_26B031C78)
  {
    sub_241CDB540();
    sub_241A2C424(&qword_26B034D48, MEMORY[0x263F44AF8]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_26B031C78);
    }
  }
}

void sub_241A368CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_241A36CEC();
    uint64_t v7 = v6;
    uint64_t v8 = sub_241A2C424(&qword_26B038958, (void (*)(uint64_t))sub_241A36CEC);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241A36968()
{
  if (!qword_26B032898)
  {
    sub_241A36CEC();
    sub_241A2C394(&qword_26B038958, (void (*)(uint64_t))sub_241A36CEC);
    unint64_t v0 = sub_241CDA630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032898);
    }
  }
}

void sub_241A369FC()
{
  if (!qword_26B032878)
  {
    sub_241A313AC(255, &qword_26B034DE0);
    unint64_t v0 = sub_241CDA600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032878);
    }
  }
}

void sub_241A36A74()
{
  if (!qword_26B0327F0)
  {
    sub_241A35FBC(255, (unint64_t *)&qword_26B032070);
    unint64_t v0 = sub_241CDA5C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0327F0);
    }
  }
}

void sub_241A36ADC(uint64_t a1)
{
}

unint64_t sub_241A36B10()
{
  unint64_t result = qword_26B02EA80;
  if (!qword_26B02EA80)
  {
    sub_241A29514(255, &qword_26B0327E8, (uint64_t (*)(uint64_t))sub_241A29620, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B02EA80);
  }
  return result;
}

void sub_241A36B98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A36BFC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_241CDA510();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_241A36C58(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A36BFC(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A36CA8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C02218(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241A36CEC()
{
  if (!qword_26B032698)
  {
    sub_241A35FBC(255, (unint64_t *)&qword_26B032070);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032698);
    }
  }
}

void sub_241A36D64(uint64_t a1)
{
}

void sub_241A36D84()
{
  if (!qword_26B032530)
  {
    sub_241A371C0();
    sub_241A2C424(&qword_26B02E920, (void (*)(uint64_t))sub_241A371C0);
    unint64_t v0 = sub_241CDA460();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032530);
    }
  }
}

void sub_241A36E18()
{
  if (!qword_26B032478)
  {
    sub_241A36D84();
    sub_241A2C424(&qword_26B032528, (void (*)(uint64_t))sub_241A36D84);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032478);
    }
  }
}

void sub_241A36EB4()
{
  if (!qword_26B035690)
  {
    sub_241A36818();
    sub_241CDB540();
    sub_241A2C424(&qword_26B034D48, MEMORY[0x263F44AF8]);
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035690);
    }
  }
}

void sub_241A36F90()
{
  if (!qword_26B032428)
  {
    sub_241A369FC();
    sub_241A2C424(&qword_26B032870, (void (*)(uint64_t))sub_241A369FC);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032428);
    }
  }
}

unint64_t sub_241A3702C()
{
  unint64_t result = qword_26B02E948;
  if (!qword_26B02E948)
  {
    sub_241A370A4(255, &qword_26B0323C0, (unint64_t *)&qword_26B032758, MEMORY[0x263F8D4F8], &qword_26B02EA48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B02E948);
  }
  return result;
}

void sub_241A370A4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_241A36BFC(255, a3);
    sub_241A372C4();
    sub_241A36C58(a5, a3);
    unint64_t v8 = sub_241CDA3E0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_241A37148()
{
  unint64_t result = qword_26B035678;
  if (!qword_26B035678)
  {
    sub_241A370A4(255, &qword_26B035680, &qword_26B0356A0, (uint64_t)&type metadata for SummariesPromotionGeneratorPipeline.FitnessPromotionType, &qword_26B035698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035678);
  }
  return result;
}

void sub_241A371C0()
{
  if (!qword_26B032288)
  {
    sub_241A36BFC(255, (unint64_t *)&qword_26B032758);
    sub_241A36C58(&qword_26B02EA48, (unint64_t *)&qword_26B032758);
    unint64_t v0 = sub_241CDA340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032288);
    }
  }
}

uint64_t sub_241A37260(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_241A372C4()
{
  unint64_t result = qword_26B032070;
  if (!qword_26B032070)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B032070);
  }
  return result;
}

uint64_t sub_241A3731C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_241A37374(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void sub_241A373CC(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = v4;
  uint64_t v202 = a3;
  v188 = a2;
  v203 = a4;
  uint64_t v8 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v170 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A7D0(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v11 - 8);
  v201 = (char *)&v170 - v12;
  sub_241A3A7D0(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v13 - 8);
  v181 = (char *)&v170 - v14;
  uint64_t v192 = sub_241CD69B0();
  uint64_t v191 = *(void *)(v192 - 8);
  MEMORY[0x270FA5388](v192);
  v183 = (char *)&v170 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A7D0(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v16 - 8);
  v200 = (char *)&v170 - v17;
  uint64_t v18 = (void *)sub_241CD6810();
  uint64_t v198 = *(v18 - 1);
  id v199 = v18;
  MEMORY[0x270FA5388](v18);
  v179 = (char *)&v170 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A7D0(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v206 = (uint64_t)&v170 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v184 = (uint64_t)&v170 - v23;
  uint64_t v190 = sub_241CD6EE0();
  uint64_t v189 = *(void *)(v190 - 8);
  MEMORY[0x270FA5388](v190);
  v187 = (char *)&v170 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A7D0(0, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
  MEMORY[0x270FA5388](v25 - 8);
  v186 = (char *)&v170 - v26;
  sub_241A3A7D0(0, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
  MEMORY[0x270FA5388](v27 - 8);
  v185 = (char *)&v170 - v28;
  sub_241A3A7D0(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  v180 = (char *)&v170 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v182 = (uint64_t)&v170 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v194 = (uint64_t)&v170 - v34;
  uint64_t v195 = sub_241CD6D00();
  v197 = *(void **)(v195 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v195);
  v178 = (char *)&v170 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v170 - v38;
  MEMORY[0x270FA5388](v37);
  v193 = (char *)&v170 - v40;
  unint64_t v41 = self;
  unint64_t v42 = *v6;
  id v43 = objc_msgSend(v41, sel_sharedInstanceForHealthStore_, *v6);
  if (!v43)
  {
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  id v44 = v43;
  uint64_t v196 = (uint64_t)v6 + *(int *)(type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider() + 24);
  id v45 = objc_msgSend(v44, sel_displayTypeForObjectType_, *(void *)(v196 + 16));

  if (!v45)
  {
    sub_241A3A824();
    swift_allocError();
    swift_willThrow();
    return;
  }
  sub_241ADF518(a1);
  if (v5)
  {

    return;
  }
  uint64_t v47 = v46;
  if (!v46)
  {
LABEL_13:
    uint64_t v54 = sub_241CD7A10();
    uint64_t v55 = (uint64_t)v201;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v201, 1, 1, v54);
    uint64_t v56 = v206;
    (*(void (**)(uint64_t, uint64_t, uint64_t, id))(v198 + 56))(v206, 1, 1, v199);
    uint64_t v57 = v202;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v55, v57, v56, v10);
    sub_241CD89A0();
    uint64_t v58 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v200, 1, 1, v58);
    id v59 = v45;
    uint64_t v60 = sub_241CD8990();
    sub_241A3A878();
    int v62 = v203;
    sub_241A3AB20((uint64_t)v10, (uint64_t)v203 + *(int *)(v61 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v62[1] = 0;
    v62[2] = 0;
    *int v62 = v60;
    sub_241A3A914((uint64_t)v10);
    return;
  }
  if (!objc_msgSend(v46, sel_hasMinimumValue)
    || !objc_msgSend(v47, sel_hasMaximumValue)
    || !objc_msgSend(v47, sel_hasDateData))
  {

    goto LABEL_13;
  }
  id v177 = v47;
  uint64_t v175 = 0;
  uint64_t v48 = *(void **)(v196 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
  id v174 = v48;
  type metadata accessor for SnidgetStringBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v42;
  int v50 = self;
  id v173 = v48;
  uint64_t v51 = v42;
  id v52 = objc_msgSend(v50, sel_sharedInstanceForHealthStore_, v51);
  uint64_t v176 = inited;
  *(void *)(inited + 32) = v52;
  if (v174)
  {
    id v53 = v173;
  }
  else
  {
    id v63 = v52;
    id v53 = objc_msgSend(v63, sel_createHKUnitPreferenceController);
  }
  *(void *)(v176 + 24) = v53;
  id v64 = objc_msgSend(v177, sel_minimumValue);
  if (!v64) {
    goto LABEL_36;
  }
  os_log_t v65 = v64;
  id v66 = objc_msgSend(v64, sel_unitString);

  if (!v66)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  sub_241CDB0D0();

  uint64_t v67 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  id v174 = self;
  id v68 = objc_msgSend(v174, sel_unitFromString_, v67);

  id v69 = v177;
  id v70 = objc_msgSend(v177, sel_minimumValue);
  if (!v70)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  char v71 = v70;
  objc_msgSend(v70, sel_value);
  double v73 = v72;

  uint64_t v74 = self;
  id v173 = objc_msgSend(v74, sel_quantityWithUnit_doubleValue_, v68, v73);

  id v75 = objc_msgSend(v69, sel_maximumValue);
  if (!v75)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v76 = v75;
  id v77 = objc_msgSend(v75, sel_unitString);

  if (!v77)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  sub_241CDB0D0();

  uint64_t v78 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  id v79 = objc_msgSend(v174, sel_unitFromString_, v78);

  id v80 = v177;
  id v81 = objc_msgSend(v177, sel_maximumValue);
  if (!v81)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v82 = v81;
  objc_msgSend(v81, sel_value);
  double v84 = v83;

  id v85 = objc_msgSend(v74, sel_quantityWithUnit_doubleValue_, v79, v84);
  objc_msgSend(v80, sel_dateData);
  id v86 = (id)HKDecodeDateForValue();
  uint64_t v87 = v193;
  sub_241CD6CB0();

  id v88 = objc_allocWithZone(MEMORY[0x263F46850]);
  uint64_t v89 = (void *)sub_241CD6C60();
  id v90 = v173;
  id v91 = objc_msgSend(v88, sel_initWithMinimumValue_maximumValue_date_, v173, v85, v89);

  uint64_t v92 = (void *)v197[1];
  ++v197;
  id v174 = v92;
  ((void (*)(char *, uint64_t))v92)(v87, v195);
  id v93 = *(id *)(v176 + 24);
  uint64_t v94 = (void *)sub_241CD8EF0();
  uint64_t v95 = (void *)sub_241CD8F10();
  if (qword_26B032A38 != -1) {
    swift_once();
  }
  id v96 = objc_msgSend(v91, sel_attributedStringWithDisplayType_unitController_valueFont_unitFont_dateCache_, v45, v93, v94, v95, qword_26B041148);

  if (!v96)
  {
    uint64_t v104 = sub_241CD7A10();
    uint64_t v105 = (uint64_t)v201;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v201, 1, 1, v104);
    uint64_t v106 = v206;
    (*(void (**)(uint64_t, uint64_t, uint64_t, id))(v198 + 56))(v206, 1, 1, v199);
    uint64_t v107 = v202;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v105, v107, v106, v10);
    sub_241CD89A0();
    uint64_t v108 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v200, 1, 1, v108);
    id v109 = v45;
    uint64_t v110 = sub_241CD8990();
    sub_241A3A878();
    uint64_t v112 = v203;
    sub_241A3AB20((uint64_t)v10, (uint64_t)v203 + *(int *)(v111 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    swift_release();
    v112[1] = 0;
    v112[2] = 0;
    *uint64_t v112 = v110;
    sub_241A3A914((uint64_t)v10);
    return;
  }
  id v173 = v96;
  id v97 = v93;
  uint64_t v98 = sub_241CD8F10();
  uint64_t v99 = v91;
  uint64_t v100 = (void *)v98;
  id v171 = v99;
  id v101 = objc_msgSend(v99, sel_attributedSupplementaryStringWithDisplayType_unitController_font_, v45, v97, v98);

  if (v101)
  {
    id v102 = v101;
    uint64_t v103 = v194;
    sub_241CD69D0();
    v170 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v191 + 56);
    v170(v103, 0, 1, v192);
  }
  else
  {
    v170 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v191 + 56);
    v170(v194, 1, 1, v192);
  }
  uint64_t v113 = v196;
  v114 = *v6;
  v172 = v6[1];
  objc_msgSend(v177, sel_dateData);
  id v115 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  sub_241A3A71C();
  uint64_t v117 = (uint64_t)v185;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v185, 1, 1, v116);
  uint64_t v118 = *MEMORY[0x263F442D0];
  uint64_t v119 = sub_241CD8A60();
  uint64_t v120 = *(void *)(v119 - 8);
  uint64_t v121 = (uint64_t)v186;
  (*(void (**)(char *, uint64_t, uint64_t))(v120 + 104))(v186, v118, v119);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v120 + 56))(v121, 0, 1, v119);
  uint64_t v122 = (uint64_t)v187;
  sub_241CD6EA0();
  uint64_t v123 = v175;
  uint64_t v124 = sub_241BACC30(v114, v172, v113, v188, v39, v117, v121, 0, v122);
  if (v123)
  {

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v122, v190);
    sub_241A3A970(v121, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
    sub_241A3A970(v117, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
    ((void (*)(char *, uint64_t))v174)(v39, v195);
    sub_241A3A970(v194, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    return;
  }
  uint64_t v125 = v124;
  uint64_t v126 = v113;
  uint64_t v175 = 0;
  (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v122, v190);
  sub_241A3A970(v121, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
  sub_241A3A970(v117, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
  ((void (*)(char *, uint64_t))v174)(v39, v195);
  uint64_t v128 = v198;
  id v127 = v199;
  uint64_t v129 = *(void (**)(uint64_t, uint64_t, uint64_t, id))(v198 + 56);
  uint64_t v130 = v184;
  v129(v184, 1, 1, v199);
  v197 = v125;
  if (v125)
  {
    swift_retain();
    uint64_t v131 = v179;
    sub_241CD8A40();
    sub_241CD67E0();
    uint64_t v132 = v131;
    uint64_t v126 = v196;
    (*(void (**)(char *, id))(v128 + 8))(v132, v127);
    objc_msgSend(v177, sel_dateData);
    id v133 = v127;
    id v134 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v135 = v206;
    sub_241CD67C0();
    swift_release();
    sub_241A3A970(v130, &qword_26B038F10, MEMORY[0x263F062D0]);
    v129(v135, 0, 1, v133);
    sub_241A3AAA0(v135, v130);
  }
  sub_241CD89A0();
  sub_241A3A9CC();
  uint64_t v137 = *(int *)(v136 + 48);
  id v138 = v45;
  id v139 = v177;
  objc_msgSend(v177, sel_dateData);
  id v140 = (id)HKDecodeDateForValue();
  v141 = v200;
  sub_241CD6CB0();

  v141[v137] = 1;
  uint64_t v142 = *MEMORY[0x263F43F18];
  uint64_t v143 = sub_241CD8610();
  uint64_t v144 = *(void *)(v143 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v144 + 104))(v141, v142, v143);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
  id v199 = v138;
  uint64_t v145 = sub_241CD8990();
  sub_241A3AA34(v194, v182, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  v200 = (char *)v173;
  sub_241CD69D0();
  v170((uint64_t)v180, 1, 1, v192);
  uint64_t v204 = 0x5F74656764696E53;
  unint64_t v205 = 0xE800000000000000;
  id v146 = *(id *)(v126 + 16);
  id v147 = objc_msgSend(v146, sel_description);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  id v148 = objc_msgSend(v139, sel_minimumValue);
  if (!v148) {
    goto LABEL_42;
  }
  v149 = v148;
  uint64_t v198 = v145;
  v150 = (void *)sub_241CDB860();

  objc_msgSend(v150, sel__value);
  id v151 = objc_msgSend(v139, sel_maximumValue);
  if (v151)
  {
    v152 = v151;
    v153 = v139;
    v154 = (void *)sub_241CDB860();

    objc_msgSend(v154, sel__value);
    v155 = v181;
    sub_241CD8E60();
    swift_bridgeObjectRelease();
    uint64_t v156 = sub_241CD8E70();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v156 - 8) + 56))(v155, 0, 1, v156);
    sub_241CD8FF0();
    swift_allocObject();
    uint64_t v196 = sub_241CD8FE0();
    v157 = v197;
    swift_retain();
    v158 = v153;
    objc_msgSend(v153, sel_dateData);
    id v159 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v160 = (uint64_t)v201;
    sub_241CD79D0();
    uint64_t v161 = sub_241CD7A10();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v161 - 8) + 56))(v160, 0, 1, v161);
    v162 = (void (*)(uint64_t))MEMORY[0x263F062D0];
    uint64_t v163 = v184;
    uint64_t v164 = v206;
    sub_241A3AA34(v184, v206, &qword_26B038F10, MEMORY[0x263F062D0]);
    sub_241A3A878();
    uint64_t v167 = v202;
    v166 = v203;
    v168 = (char *)v203 + *(int *)(v165 + 52);
    swift_bridgeObjectRetain();
    sub_241B4A1A8(1, v160, v167, v164, v168);
    swift_release();

    swift_release();
    uint64_t v169 = v196;
    uint64_t *v166 = v198;
    v166[1] = v169;
    v166[2] = (uint64_t)v157;
    sub_241A3A970(v163, &qword_26B038F10, v162);
    sub_241A3A970(v194, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    return;
  }
LABEL_43:
  __break(1u);
}

id sub_241A38B38()
{
  return *v0;
}

uint64_t sub_241A38B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241A3AB20(v2 + *(int *)(a1 + 24), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241A38B78(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t variable initialization expression of SnidgetLevelChartView._displayScale()
{
  return swift_getKeyPath();
}

uint64_t sub_241A38BC0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_241CDA9E0();
  *a1 = v3;
  return result;
}

uint64_t sub_241A38BEC()
{
  return sub_241CDA9F0();
}

double variable initialization expression of SnidgetLevelChartView.maxChartWidth()
{
  return 80.0;
}

uint64_t variable initialization expression of SnidgetLevelChartView.previousViewModel()
{
  return 0;
}

uint64_t variable initialization expression of SnidgetLevelChartView._providedViewContext()
{
  sub_241CD85C0();
  sub_241A28414(&qword_26B030970, MEMORY[0x263F43F10]);

  return sub_241CDA9C0();
}

uint64_t variable initialization expression of SummaryChartModelConfiguration.primaryChartTimeScopes()
{
  return 0;
}

uint64_t variable initialization expression of SummaryChartModelConfiguration.sharingChartTimeScopes()
{
  return 0;
}

void type metadata accessor for HKActivityMoveMode(uint64_t a1)
{
}

void type metadata accessor for HKMCPregnancyState(uint64_t a1)
{
}

void type metadata accessor for HKChartDataSourceQueryRequestAudience(uint64_t a1)
{
}

void type metadata accessor for HKTimeScope(uint64_t a1)
{
}

uint64_t sub_241A38D4C(uint64_t a1, uint64_t a2)
{
  return sub_241A38EB8(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_241A38D64(uint64_t a1, id *a2)
{
  uint64_t result = sub_241CDB0B0();
  *a2 = 0;
  return result;
}

uint64_t sub_241A38DDC(uint64_t a1, id *a2)
{
  char v3 = sub_241CDB0C0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_241A38E5C@<X0>(uint64_t *a1@<X8>)
{
  sub_241CDB0D0();
  uint64_t v2 = sub_241CDB090();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_241A38EA0(uint64_t a1, uint64_t a2)
{
  return sub_241A38EB8(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_241A38EB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_241CDB0D0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_241A38EFC()
{
  sub_241CDB0D0();
  sub_241CDB170();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241A38F50()
{
  sub_241CDB0D0();
  sub_241CDC1D0();
  sub_241CDB170();
  uint64_t v0 = sub_241CDC200();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_241A38FCC(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_241A38FE0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_241A38FF0(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_241A38FFC(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_241A39004@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_241A39018@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_241A3902C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_241A39058@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_241A3907C(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_241A39090@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_241A390A4(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_241A390B8(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_241A390CC(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_241A390E0()
{
  return *v0 == 0;
}

uint64_t sub_241A390F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_241A39108(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_241A3911C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_241A39130(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_241A39160(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_241A39174(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_241A39188()
{
  return sub_241CDC200();
}

uint64_t sub_241A391D0()
{
  return sub_241CDC1E0();
}

uint64_t sub_241A391FC()
{
  return sub_241CDC200();
}

uint64_t sub_241A39240()
{
  uint64_t v0 = sub_241CDB0D0();
  uint64_t v2 = v1;
  if (v0 == sub_241CDB0D0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_241CDC100();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_241A392CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_241A39760(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_241A3930C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_241A39318@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_241CDB090();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_241A39360@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_241CDB0D0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_241A3938C(uint64_t a1)
{
  uint64_t v2 = sub_241A28414(&qword_26B0368B8, type metadata accessor for HKFeatureIdentifier);
  uint64_t v3 = sub_241A28414((unint64_t *)&unk_268D420F0, type metadata accessor for HKFeatureIdentifier);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

void type metadata accessor for HKCategoryValueAppleWalkingSteadinessEvent(uint64_t a1)
{
}

void type metadata accessor for HKCategoryValueAppleStandHour(uint64_t a1)
{
}

void type metadata accessor for UNNotificationPresentationOptions(uint64_t a1)
{
}

void type metadata accessor for HKProfileType(uint64_t a1)
{
}

void type metadata accessor for HKCategoryValueSleepAnalysis(uint64_t a1)
{
}

void type metadata accessor for HKBiologicalSex(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for HKCardioFitnessLevel(uint64_t a1)
{
}

void type metadata accessor for HKWheelchairUse(uint64_t a1)
{
}

uint64_t sub_241A395B0()
{
  return sub_241A28414(&qword_268D42030, type metadata accessor for HKCategoryValueSleepAnalysis);
}

uint64_t sub_241A395F8()
{
  return sub_241A28414(&qword_268D42038, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_241A39640()
{
  return sub_241A28414(&qword_268D42040, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_241A39688()
{
  return sub_241A28414(&qword_268D42048, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_241A396D0()
{
  return sub_241A28414((unint64_t *)&unk_268D42050, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_241A39718()
{
  return sub_241A28414(&qword_26B038078, type metadata accessor for HKCategoryValueAppleStandHour);
}

uint64_t sub_241A39760(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void type metadata accessor for HKFeatureIdentifier(uint64_t a1)
{
}

void type metadata accessor for HKDisplayTypeChartStyle(uint64_t a1)
{
}

char *sub_241A397E8(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[1];
    *((void *)a1 + 1) = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = *(char **)((char *)a2 + v7);
    *(void *)uint64_t v8 = v10;
    v8[8] = *((unsigned char *)a2 + v7 + 8);
    uint64_t v11 = *(char **)((char *)a2 + v7 + 16);
    *((void *)v8 + 2) = v11;
    uint64_t v12 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v13 = *(int *)(v12 + 28);
    uint64_t v24 = v9 + v13;
    uint64_t v25 = &v8[v13];
    uint64_t v14 = sub_241CD7DE0();
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    uint64_t v15 = v4;
    uint64_t v16 = v6;
    id v17 = v10;
    id v18 = v11;
    v23(v25, v24, v14);
    uint64_t v19 = *(int *)(v12 + 32);
    uint64_t v20 = *(void **)(v9 + v19);
    *(void *)&v8[v19] = v20;
    id v21 = v20;
  }
  return v5;
}

void sub_241A39934(id *a1, uint64_t a2)
{
  uint64_t v4 = (id *)((char *)a1 + *(int *)(a2 + 24));
  uint64_t v5 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v6 = (char *)v4 + *(int *)(v5 + 28);
  uint64_t v7 = sub_241CD7DE0();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = *(id *)((char *)v4 + *(int *)(v5 + 32));
}

void *sub_241A399EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void **)(a2 + v6);
  *(void *)uint64_t v7 = v9;
  v7[8] = *(unsigned char *)(a2 + v6 + 8);
  uint64_t v10 = *(void **)(a2 + v6 + 16);
  *((void *)v7 + 2) = v10;
  uint64_t v11 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v12 = *(int *)(v11 + 28);
  uint64_t v23 = v8 + v12;
  uint64_t v24 = &v7[v12];
  uint64_t v13 = sub_241CD7DE0();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  id v14 = v4;
  id v15 = v5;
  id v16 = v9;
  id v17 = v10;
  v22(v24, v23, v13);
  uint64_t v18 = *(int *)(v11 + 32);
  uint64_t v19 = *(void **)(v8 + v18);
  *(void *)&v7[v18] = v19;
  id v20 = v19;
  return a1;
}

uint64_t sub_241A39AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  id v15 = *(void **)(a1 + v12);
  id v16 = *(void **)(a2 + v12);
  *(void *)uint64_t v13 = v16;
  id v17 = v16;

  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v18 = *(void **)(v14 + 16);
  uint64_t v19 = *(void **)(v13 + 16);
  *(void *)(v13 + 16) = v18;
  id v20 = v18;

  uint64_t v21 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v22 = *(int *)(v21 + 28);
  uint64_t v23 = v13 + v22;
  uint64_t v24 = v14 + v22;
  uint64_t v25 = sub_241CD7DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  uint64_t v26 = *(int *)(v21 + 32);
  uint64_t v27 = *(void **)(v13 + v26);
  uint64_t v28 = *(void **)(v14 + v26);
  *(void *)(v13 + v26) = v28;
  id v29 = v28;

  return a1;
}

_OWORD *sub_241A39BF0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(void *)uint64_t v5 = *(void *)((char *)a2 + v4);
  v5[8] = *((unsigned char *)a2 + v4 + 8);
  *((void *)v5 + 2) = *(void *)((char *)a2 + v4 + 16);
  uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v8 = *(int *)(v7 + 28);
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v6[v8];
  uint64_t v11 = sub_241CD7DE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(void *)&v5[*(int *)(v7 + 32)] = *(void *)&v6[*(int *)(v7 + 32)];
  return a1;
}

uint64_t sub_241A39CB0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(void **)(a1 + v8);
  *(void *)uint64_t v9 = *(void *)v10;

  *(unsigned char *)(v9 + 8) = v10[8];
  uint64_t v12 = *(void **)(v9 + 16);
  *(void *)(v9 + 16) = *((void *)v10 + 2);

  uint64_t v13 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v14 = *(int *)(v13 + 28);
  uint64_t v15 = v9 + v14;
  id v16 = &v10[v14];
  uint64_t v17 = sub_241CD7DE0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = *(int *)(v13 + 32);
  uint64_t v19 = *(void **)(v9 + v18);
  *(void *)(v9 + v18) = *(void *)&v10[v18];

  return a1;
}

uint64_t sub_241A39DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241A39DBC);
}

uint64_t sub_241A39DBC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241A39E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241A39E80);
}

void *sub_241A39E80(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031E08;
  if (!qword_26B031E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A39F74()
{
  uint64_t result = type metadata accessor for SnidgetFeedItemGeneratorRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for HKDisplayTypeIdentifier(uint64_t a1)
{
}

uint64_t sub_241A3A038()
{
  return sub_241A28414((unint64_t *)&qword_26B032110, sub_241A3A080);
}

void sub_241A3A080(uint64_t a1)
{
}

uint64_t sub_241A3A0A0()
{
  return sub_241A28414(&qword_26B0320B8, MEMORY[0x263F44058]);
}

uint64_t sub_241A3A0E8()
{
  return sub_241A3A1EC((unint64_t *)&qword_26B0320F0);
}

void sub_241A3A11C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241A28414(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241A3A1B8()
{
  return sub_241A3A1EC((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241A3A1EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A3A11C(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    int v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241A28414((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241A28414(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A3A2D0()
{
  return sub_241A28414(&qword_26B0385C8, MEMORY[0x263F44308]);
}

uint64_t sub_241A3A318()
{
  return sub_241A28414(&qword_26B032140, MEMORY[0x263F44308]);
}

uint64_t sub_241A3A360(uint64_t a1)
{
  uint64_t result = sub_241A28414(&qword_26B037EF8, (void (*)(uint64_t))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241A3A3B8()
{
  return sub_241A28414(&qword_268D420E0, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_241A3A400()
{
  return sub_241A28414(&qword_268D420E8, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_241A3A448()
{
  return sub_241A28414((unint64_t *)&unk_26B0368C0, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_241A3A490()
{
  return sub_241A28414(&qword_26B0383F8, sub_241A3A4D8);
}

void sub_241A3A4D8(uint64_t a1)
{
}

uint64_t sub_241A3A4F8()
{
  return sub_241A28414(&qword_26B032E48, sub_241A3A540);
}

void sub_241A3A540(uint64_t a1)
{
}

void sub_241A3A560(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241A3A080(255);
    uint64_t v15 = v6;
    uint64_t v7 = sub_241CD86F0();
    uint64_t v8 = sub_241A28414((unint64_t *)&qword_26B032110, sub_241A3A080);
    uint64_t v9 = sub_241A28414(&qword_26B0320B8, MEMORY[0x263F44058]);
    uint64_t v10 = sub_241A3A1EC((unint64_t *)&qword_26B0320F0);
    uint64_t v11 = sub_241A3A1EC((unint64_t *)&qword_26B0320E0);
    uint64_t v12 = (void (*)(uint64_t))MEMORY[0x263F44308];
    v16[0] = v15;
    v16[1] = v7;
    void v16[2] = v8;
    v16[3] = v9;
    v16[4] = v10;
    v16[5] = v11;
    v16[6] = sub_241A28414(&qword_26B0385C8, MEMORY[0x263F44308]);
    v16[7] = sub_241A28414(&qword_26B032140, v12);
    unint64_t v13 = a3(a1, v16);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

void sub_241A3A71C()
{
  if (!qword_26B031FE0)
  {
    sub_241A3A7D0(255, &qword_26B0385B8, MEMORY[0x263F07490]);
    sub_241A3ABD8(255, (unint64_t *)&qword_26B034CF0, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B031FE0);
    }
  }
}

void sub_241A3A7D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_241A3A824()
{
  unint64_t result = qword_26B038410;
  if (!qword_26B038410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B038410);
  }
  return result;
}

void sub_241A3A878()
{
  if (!qword_26B033F48)
  {
    sub_241CD89A0();
    sub_241A3A11C(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    sub_241CD8AB0();
    unint64_t v0 = type metadata accessor for SnidgetHarnessGeneratorFeedItemModel();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B033F48);
    }
  }
}

uint64_t sub_241A3A914(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SnidgetFeedItemMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241A3A970(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241A3A7D0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241A3A9CC()
{
  if (!qword_26B031FF0)
  {
    sub_241CD6D00();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B031FF0);
    }
  }
}

uint64_t sub_241A3AA34(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241A3A7D0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241A3AAA0(uint64_t a1, uint64_t a2)
{
  sub_241A3A7D0(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241A3AB20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void type metadata accessor for Label(uint64_t a1)
{
}

void type metadata accessor for __HKStateOfMindDomain(uint64_t a1)
{
}

void sub_241A3ABD8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_241A3AC4C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    unint64_t v4 = 0x20676E697373694DLL;
    sub_241CDB180();
  }
  else
  {
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD000000000000014;
    sub_241CD9FA0();
    sub_241CDB180();
    swift_bridgeObjectRelease();
  }
  return v4;
}

BOOL sub_241A3AD40(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v123 = v4;
  uint64_t v124 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v122 = (char *)&v112 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v119 = (char *)&v112 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v112 - v13;
  sub_241A3DB5C(0, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v112 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v112 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  os_log_t v120 = (os_log_t)((char *)&v112 - v26);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  id v29 = (char *)&v112 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v121 = (uint64_t)&v112 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v112 - v32;
  if (!objc_msgSend(a1, sel_hasNotificationIdentifier)
    || (id v34 = objc_msgSend(a1, sel_notificationIdentifier)) == 0)
  {
    sub_241CDA160();
    id v45 = a1;
    uint64_t v46 = sub_241CDA190();
    os_log_type_t v47 = sub_241CDB670();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v126 = v49;
      *(_DWORD *)uint64_t v48 = 136315138;
      unint64_t v50 = sub_241A3D514(v45);
      uint64_t v125 = sub_241A33FE4(v50, v51, &v126);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v46, v47, "%s shouldGenerateNotification=false; no content state", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      MEMORY[0x245637F20](v48, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v124 + 8))(v8, v123);
    return 0;
  }
  uint64_t v35 = v34;
  uint64_t v117 = v14;
  uint64_t v36 = sub_241CDB0D0();
  unint64_t v38 = v37;

  swift_bridgeObjectRetain();
  uint64_t v118 = v36;
  LOBYTE(v36) = sub_241CDBBA0();
  swift_bridgeObjectRelease();
  if ((v36 & 1) == 0)
  {
    uint64_t v54 = v122;
    sub_241CDA160();
    sub_241A3DC7C(a2, (uint64_t)v21, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
    id v55 = a1;
    swift_bridgeObjectRetain();
    id v56 = v55;
    uint64_t v57 = sub_241CDA190();
    int v58 = sub_241CDB670();
    if (os_log_type_enabled(v57, (os_log_type_t)v58))
    {
      LODWORD(v121) = v58;
      unint64_t v59 = v38;
      uint64_t v60 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v126 = v61;
      *(_DWORD *)uint64_t v60 = 136315650;
      unint64_t v62 = sub_241A3D514(v56);
      uint64_t v125 = sub_241A33FE4(v62, v63, &v126);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v125 = sub_241A33FE4(v118, v59, &v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v60 + 22) = 2080;
      sub_241A3DC7C((uint64_t)v21, (uint64_t)v18, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
      uint64_t v64 = sub_241CD7C10();
      uint64_t v65 = *(void *)(v64 - 8);
      uint64_t v66 = v61;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v18, 1, v64) == 1)
      {
        uint64_t v67 = 7104878;
        sub_241A3DC20((uint64_t)v18, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
        unint64_t v68 = 0xE300000000000000;
      }
      else
      {
        uint64_t v67 = sub_241CD7B80();
        unint64_t v68 = v87;
        (*(void (**)(char *, uint64_t))(v65 + 8))(v18, v64);
      }
      uint64_t v89 = v123;
      uint64_t v88 = v124;
      id v90 = v122;
      uint64_t v125 = sub_241A33FE4(v67, v68, &v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A3DC20((uint64_t)v21, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
      _os_log_impl(&dword_241A23000, v57, (os_log_type_t)v121, "%s shouldGenerateNotification=false; notificationIdentifier: %s contentState: %s",
        (uint8_t *)v60,
        0x20u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v66, -1, -1);
      MEMORY[0x245637F20](v60, -1, -1);

      (*(void (**)(char *, uint64_t))(v88 + 8))(v90, v89);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_241A3DC20((uint64_t)v21, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
      (*(void (**)(char *, uint64_t))(v124 + 8))(v54, v123);
    }
    return 0;
  }
  unint64_t v39 = v38;
  sub_241A3DC7C(a2, (uint64_t)v33, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
  uint64_t v40 = sub_241CD7C10();
  uint64_t v41 = *(void *)(v40 - 8);
  id v115 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  uint64_t v116 = v41 + 48;
  int v42 = v115(v33, 1, v40);
  uint64_t v122 = (char *)v40;
  uint64_t v114 = v41;
  if (v42 == 1)
  {
    sub_241A3DC20((uint64_t)v33, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
    id v43 = 0;
    unint64_t v44 = 0;
  }
  else
  {
    id v43 = (void (*)(char *, uint64_t, uint64_t))sub_241CD7B80();
    unint64_t v44 = v69;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v40);
  }
  char v70 = sub_241A3BC74(a1, v43, v44);
  swift_bridgeObjectRelease();
  if (v70 == 2)
  {
    char v71 = v119;
    sub_241CDA160();
    os_log_t v72 = v120;
    sub_241A3DC7C(a2, (uint64_t)v120, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
    id v73 = a1;
    swift_bridgeObjectRetain();
    id v74 = v73;
    id v75 = sub_241CDA190();
    os_log_type_t v76 = sub_241CDB670();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      uint64_t v126 = v78;
      *(_DWORD *)uint64_t v77 = 136315650;
      unint64_t v79 = sub_241A3D514(v74);
      uint64_t v125 = sub_241A33FE4(v79, v80, &v126);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v125 = sub_241A33FE4(v118, v39, &v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v77 + 22) = 2080;
      sub_241A3DC7C((uint64_t)v120, (uint64_t)v24, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
      id v81 = v122;
      int v82 = v115(v24, 1, (uint64_t)v122);
      uint64_t v84 = v123;
      uint64_t v83 = v124;
      if (v82 == 1)
      {
        uint64_t v85 = 7104878;
        sub_241A3DC20((uint64_t)v24, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
        unint64_t v86 = 0xE300000000000000;
      }
      else
      {
        uint64_t v106 = sub_241CD7B80();
        uint64_t v107 = v81;
        uint64_t v85 = v106;
        unint64_t v86 = v108;
        (*(void (**)(char *, char *))(v114 + 8))(v24, v107);
      }
      uint64_t v125 = sub_241A33FE4(v85, v86, &v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A3DC20((uint64_t)v120, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
      _os_log_impl(&dword_241A23000, v75, v76, "%s shouldGenerateNotification notificationIdentifier: %s contentState: %s", (uint8_t *)v77, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v78, -1, -1);
      MEMORY[0x245637F20](v77, -1, -1);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v119, v84);
      return 1;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_241A3DC20((uint64_t)v72, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
      (*(void (**)(char *, uint64_t))(v124 + 8))(v71, v123);
      return 1;
    }
  }
  else
  {
    BOOL v52 = (v70 & 1) == 0;
    id v91 = v117;
    sub_241CDA160();
    uint64_t v92 = a2;
    uint64_t v93 = v121;
    sub_241A3DC7C(v92, v121, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
    id v94 = a1;
    swift_bridgeObjectRetain();
    id v95 = v94;
    id v96 = sub_241CDA190();
    int v97 = sub_241CDB670();
    if (os_log_type_enabled(v96, (os_log_type_t)v97))
    {
      LODWORD(v119) = v97;
      os_log_t v120 = v96;
      uint64_t v98 = swift_slowAlloc();
      uint64_t v113 = swift_slowAlloc();
      uint64_t v126 = v113;
      *(_DWORD *)uint64_t v98 = 136315906;
      unint64_t v99 = sub_241A3D514(v95);
      uint64_t v125 = sub_241A33FE4(v99, v100, &v126);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v98 + 12) = 1024;
      LODWORD(v125) = v70 & 1;
      sub_241CDBBF0();
      *(_WORD *)(v98 + 18) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v125 = sub_241A33FE4(v118, v39, &v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v98 + 28) = 2080;
      sub_241A3DC7C(v121, (uint64_t)v29, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
      id v101 = v122;
      int v102 = v115(v29, 1, (uint64_t)v122);
      uint64_t v103 = v123;
      if (v102 == 1)
      {
        uint64_t v104 = 7104878;
        sub_241A3DC20((uint64_t)v29, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
        unint64_t v105 = 0xE300000000000000;
      }
      else
      {
        uint64_t v104 = sub_241CD7B80();
        unint64_t v105 = v109;
        (*(void (**)(char *, char *))(v114 + 8))(v29, v101);
      }
      uint64_t v125 = sub_241A33FE4(v104, v105, &v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A3DC20(v121, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
      os_log_t v110 = v120;
      _os_log_impl(&dword_241A23000, v120, (os_log_type_t)v119, "%s shouldGenerateNotification isTrendSimilar: %{BOOL}d notificationIdentifier: %s contentState: %s", (uint8_t *)v98, 0x26u);
      uint64_t v111 = v113;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v111, -1, -1);
      MEMORY[0x245637F20](v98, -1, -1);

      (*(void (**)(char *, uint64_t))(v124 + 8))(v117, v103);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_241A3DC20(v93, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
      (*(void (**)(char *, uint64_t))(v124 + 8))(v91, v123);
    }
  }
  return v52;
}

BOOL sub_241A3BC74(void *a1, void (*a2)(char *, uint64_t, uint64_t), unint64_t a3)
{
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v130 = *(void *)(v6 - 8);
  uint64_t v131 = v6;
  MEMORY[0x270FA5388](v6);
  id v134 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3DB5C(0, &qword_268D42160, MEMORY[0x263F47038]);
  MEMORY[0x270FA5388](v8 - 8);
  os_log_t v120 = (char *)&v114 - v9;
  uint64_t v122 = sub_241CD9AF0();
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v119 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3DB5C(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v125 = (char *)&v114 - v12;
  sub_241A3DADC();
  uint64_t v128 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v132 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3DB5C(0, &qword_26B0321C0, MEMORY[0x263F46BE0]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v126 = (uint64_t)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v133 = (char *)&v114 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v129 = (char *)&v114 - v20;
  uint64_t v21 = sub_241CD98D0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v137 = v21;
  uint64_t v138 = v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v124 = (char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v136 = (char *)&v114 - v25;
  uint64_t v26 = sub_241CD6D00();
  uint64_t v27 = *(char **)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v123 = (char *)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v135 = (char *)&v114 - v30;
  sub_241A3DB5C(0, &qword_268D42168, (void (*)(uint64_t))sub_241A3DBB0);
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v33 = (char *)&v114 - v32;
  sub_241A3DBB0();
  uint64_t v35 = v34;
  uint64_t v36 = *(void *)(v34 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v34);
  unint64_t v39 = (char *)&v114 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  if (!a3) {
    return 0;
  }
  uint64_t v127 = (uint64_t)&v114 - v40;
  swift_bridgeObjectRetain();
  uint64_t v118 = a2;
  sub_241A3CF3C((uint64_t)a2, a3, (uint64_t)v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v33, 1, v35) != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v51 = *(int *)(v35 + 48);
    uint64_t v52 = v127;
    id v117 = a1;
    uint64_t v53 = v26;
    uint64_t v54 = v127 + v51;
    id v134 = &v33[v51];
    uint64_t v130 = *((void *)v27 + 4);
    uint64_t v131 = v127 + v51;
    ((void (*)(uint64_t, char *, uint64_t))v130)(v127, v33, v53);
    uint64_t v56 = v138 + 32;
    id v55 = *(void (**)(uint64_t, char *, uint64_t))(v138 + 32);
    uint64_t v57 = v54;
    uint64_t v58 = v137;
    v55(v57, v134, v137);
    unint64_t v59 = &v39[*(int *)(v35 + 48)];
    id v134 = v27;
    (*((void (**)(char *, uint64_t, uint64_t))v27 + 2))(v39, v52, v53);
    id v60 = v117;
    uint64_t v118 = *(void (**)(char *, uint64_t, uint64_t))(v138 + 16);
    v118(v59, v131, v58);
    uint64_t v131 = v53;
    uint64_t v114 = v27 + 32;
    ((void (*)(char *, char *, uint64_t))v130)(v135, v39, v53);
    uint64_t v116 = v56;
    id v115 = (void (*)(char *, uint64_t, uint64_t))v55;
    v55((uint64_t)v136, v59, v58);
    if (objc_msgSend(v60, sel_hasChangeTypeRawValue)
      && (id v61 = objc_msgSend(v60, sel_changeTypeRawValue)) != 0)
    {
      unint64_t v62 = v61;
      sub_241CDB0D0();

      uint64_t v63 = (uint64_t)v129;
      uint64_t v58 = v137;
      sub_241CD98B0();
      uint64_t v64 = v138;
    }
    else
    {
      uint64_t v64 = v138;
      uint64_t v63 = (uint64_t)v129;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v138 + 56))(v129, 1, 1, v58);
    }
    uint64_t v65 = (uint64_t)v132;
    uint64_t v66 = (uint64_t)v133;
    v118(v133, (uint64_t)v136, v58);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v66, 0, 1, v58);
    uint64_t v67 = v65 + *(int *)(v128 + 48);
    unint64_t v68 = (void (*)(uint64_t))MEMORY[0x263F46BE0];
    sub_241A3DC7C(v63, v65, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    unint64_t v69 = v68;
    uint64_t v70 = v137;
    sub_241A3DC7C(v66, v67, &qword_26B0321C0, v69);
    char v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
    int v72 = v71(v65, 1, v70);
    id v73 = v134;
    if (v72 == 1)
    {
      id v74 = (void (*)(uint64_t))MEMORY[0x263F46BE0];
      sub_241A3DC20(v66, &qword_26B0321C0, MEMORY[0x263F46BE0]);
      id v75 = v74;
      uint64_t v70 = v137;
      sub_241A3DC20(v63, &qword_26B0321C0, v75);
      int v76 = v71(v67, 1, v70);
      uint64_t v77 = v136;
      if (v76 == 1)
      {
        sub_241A3DC20(v65, &qword_26B0321C0, MEMORY[0x263F46BE0]);
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v78 = v126;
      sub_241A3DC7C(v65, v126, &qword_26B0321C0, MEMORY[0x263F46BE0]);
      if (v71(v67, 1, v70) != 1)
      {
        id v81 = v124;
        v115(v124, v67, v70);
        sub_241A3DD9C();
        LODWORD(v132) = sub_241CDB050();
        uint64_t v82 = v65;
        uint64_t v83 = *(void (**)(char *, uint64_t))(v138 + 8);
        v83(v81, v70);
        uint64_t v84 = (void (*)(uint64_t))MEMORY[0x263F46BE0];
        sub_241A3DC20((uint64_t)v133, &qword_26B0321C0, MEMORY[0x263F46BE0]);
        sub_241A3DC20(v63, &qword_26B0321C0, v84);
        v83((char *)v78, v137);
        uint64_t v85 = v84;
        uint64_t v70 = v137;
        sub_241A3DC20(v82, &qword_26B0321C0, v85);
        uint64_t v77 = v136;
        if (v132)
        {
LABEL_18:
          id v86 = v117;
          if (objc_msgSend(v117, sel_hasOriginalEventDateData))
          {
            objc_msgSend(v86, sel_originalEventDateData);
            unint64_t v87 = v73;
            id v88 = (id)HKDecodeDateForValue();
            uint64_t v89 = (uint64_t)v125;
            sub_241CD6CB0();

            uint64_t v90 = v131;
            (*((void (**)(uint64_t, void, uint64_t, uint64_t))v87 + 7))(v89, 0, 1, v131);
            int v91 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v87 + 6))(v89, 1, v90);
            uint64_t v92 = v138;
            if (v91 != 1)
            {
              uint64_t v93 = v123;
              ((void (*)(char *, uint64_t, uint64_t))v130)(v123, v89, v90);
              int v94 = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
              if (v94 == 4)
              {
                uint64_t v95 = (uint64_t)v120;
                sub_241CD9AD0();
              }
              else
              {
                uint64_t v95 = (uint64_t)v120;
                if (v94 != 5)
                {
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v121 + 56))(v120, 1, 1, v122);
                  sub_241A3DC20(v95, &qword_268D42160, MEMORY[0x263F47038]);
                  uint64_t v110 = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
                  sub_241A3DD48();
                  swift_allocError();
                  *(void *)uint64_t v111 = v110;
                  *(void *)(v111 + 8) = 0;
                  *(unsigned char *)(v111 + 16) = 0;
                  swift_willThrow();
                  uint64_t v50 = (uint64_t)(v134 + 8);
                  uint64_t v112 = (void (*)(char *, uint64_t))*((void *)v134 + 1);
                  uint64_t v113 = v131;
                  v112(v93, v131);
                  (*(void (**)(char *, uint64_t))(v92 + 8))(v77, v70);
                  v112(v135, v113);
LABEL_28:
                  sub_241A3DCE8(v127, (uint64_t (*)(void))sub_241A3DBB0);
                  return v50;
                }
                sub_241CD9AE0();
              }
              uint64_t v100 = v121;
              uint64_t v101 = v122;
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v121 + 56))(v95, 0, 1, v122);
              int v102 = v119;
              (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v119, v95, v101);
              sub_241CD9AC0();
              double v104 = v103;
              unint64_t v105 = v135;
              sub_241CD6C40();
              double v107 = fabs(v106);
              (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v101);
              unint64_t v108 = (void (*)(char *, uint64_t))*((void *)v134 + 1);
              uint64_t v109 = v131;
              v108(v123, v131);
              (*(void (**)(char *, uint64_t))(v92 + 8))(v77, v70);
              v108(v105, v109);
              sub_241A3DCE8(v127, (uint64_t (*)(void))sub_241A3DBB0);
              return v107 <= v104;
            }
          }
          else
          {
            id v96 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v73 + 7);
            uint64_t v89 = (uint64_t)v125;
            unint64_t v87 = v73;
            uint64_t v90 = v131;
            v96(v125, 1, 1, v131);
            uint64_t v92 = v138;
          }
          sub_241A3DC20(v89, &qword_26B0385B8, MEMORY[0x263F07490]);
          sub_241A3DD48();
          swift_allocError();
          *(void *)uint64_t v97 = 0xD000000000000011;
          *(void *)(v97 + 8) = 0x8000000241CDD170;
          *(unsigned char *)(v97 + 16) = 1;
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v77, v70);
          uint64_t v98 = (void (*)(char *, uint64_t))*((void *)v87 + 1);
          uint64_t v50 = (uint64_t)(v87 + 8);
          v98(v135, v90);
          goto LABEL_28;
        }
        v83(v136, v70);
LABEL_25:
        (*((void (**)(char *, uint64_t))v73 + 1))(v135, v131);
        sub_241A3DCE8(v127, (uint64_t (*)(void))sub_241A3DBB0);
        return 0;
      }
      uint64_t v79 = v78;
      unint64_t v80 = (void (*)(uint64_t))MEMORY[0x263F46BE0];
      sub_241A3DC20((uint64_t)v133, &qword_26B0321C0, MEMORY[0x263F46BE0]);
      sub_241A3DC20(v63, &qword_26B0321C0, v80);
      (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v79, v70);
      uint64_t v77 = v136;
    }
    sub_241A3DCE8(v65, (uint64_t (*)(void))sub_241A3DADC);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v77, v70);
    goto LABEL_25;
  }
  sub_241A3DC20((uint64_t)v33, &qword_268D42168, (void (*)(uint64_t))sub_241A3DBB0);
  uint64_t v41 = v134;
  sub_241CDA160();
  id v42 = a1;
  swift_bridgeObjectRetain();
  id v43 = v42;
  unint64_t v44 = sub_241CDA190();
  os_log_type_t v45 = sub_241CDB670();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v140 = v47;
    *(_DWORD *)uint64_t v46 = 136315394;
    unint64_t v48 = sub_241A3D514(v43);
    uint64_t v139 = sub_241A33FE4(v48, v49, &v140);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v139 = sub_241A33FE4((uint64_t)v118, a3, &v140);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_241A23000, v44, v45, "%s Unable to process content state %s", (uint8_t *)v46, 0x16u);
    uint64_t v50 = 2;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v47, -1, -1);
    MEMORY[0x245637F20](v46, -1, -1);

    (*(void (**)(char *, uint64_t))(v130 + 8))(v134, v131);
  }
  else
  {

    uint64_t v50 = 2;
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v130 + 8))(v41, v131);
  }
  return v50;
}

uint64_t sub_241A3CD14(void *a1, uint64_t a2)
{
  sub_241A3DB5C(0, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17 - v5;
  if (objc_msgSend(a1, sel_hasNotificationIdentifier)
    && (id v7 = objc_msgSend(a1, sel_notificationIdentifier)) != 0
    && (uint64_t v8 = v7,
        sub_241CDB0D0(),
        v8,
        LOBYTE(v8) = sub_241CDBB90(),
        swift_bridgeObjectRelease(),
        (v8 & 1) == 0))
  {
    sub_241A3DC7C(a2, (uint64_t)v6, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
    uint64_t v11 = sub_241CD7C10();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
    {
      sub_241A3DC20((uint64_t)v6, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878]);
      uint64_t v13 = 0;
      unint64_t v14 = 0;
    }
    else
    {
      uint64_t v13 = (void (*)(char *, uint64_t, uint64_t))sub_241CD7B80();
      unint64_t v14 = v15;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
    }
    BOOL v16 = sub_241A3BC74(a1, v13, v14);
    swift_bridgeObjectRelease();
    char v9 = v16;
  }
  else
  {
    char v9 = 1;
  }
  return v9 & 1;
}

uint64_t sub_241A3CF3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_241A3DB5C(0, &qword_26B0321C0, MEMORY[0x263F46BE0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v52 - v7;
  uint64_t v9 = sub_241CD98D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v58 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3DB5C(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v14 = (char *)&v52 - v13;
  uint64_t v15 = sub_241CD6D00();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v59 = (char *)&v52 - v20;
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  unint64_t v21 = sub_241A3DE4C();
  uint64_t v22 = (void *)MEMORY[0x245636F80](95, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x263F8D310], v21);
  uint64_t v23 = v22;
  if (v22[2] != 2)
  {
    sub_241A3DBB0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(a3, 1, 1, v44);
    return swift_bridgeObjectRelease();
  }
  uint64_t v55 = v10;
  uint64_t v56 = v8;
  uint64_t v57 = a3;
  uint64_t v24 = v22[4];
  uint64_t v25 = v22[5];
  uint64_t v27 = v22[6];
  uint64_t v26 = v22[7];
  swift_bridgeObjectRetain();
  MEMORY[0x245636490](v24, v25, v27, v26);
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  uint64_t v29 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v28, sel_dateFromString_, v29);

  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_9;
  }
  uint64_t v54 = v9;
  sub_241CD6CB0();

  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v31(v14, v19, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_9:

    swift_bridgeObjectRelease();
    uint64_t v41 = &qword_26B0385B8;
    id v42 = (void (*)(uint64_t))MEMORY[0x263F07490];
    uint64_t v43 = (uint64_t)v14;
    goto LABEL_10;
  }
  uint64_t v32 = v59;
  uint64_t v53 = (void (*)(uint64_t, char *, uint64_t))v31;
  uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v31)(v59, v14, v15);
  if (v23[2] < 2uLL)
  {
    __break(1u);
    return result;
  }
  uint64_t v34 = v23[8];
  uint64_t v35 = v23[9];
  uint64_t v36 = v23[10];
  uint64_t v37 = v23[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  MEMORY[0x245636490](v34, v35, v36, v37);
  swift_bridgeObjectRelease();
  uint64_t v38 = (uint64_t)v56;
  sub_241CD98B0();

  uint64_t v39 = v54;
  uint64_t v40 = v55;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v38, 1, v54) != 1)
  {
    uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 32);
    uint64_t v47 = v58;
    v46(v58, v38, v39);
    sub_241A3DBB0();
    uint64_t v49 = v48;
    uint64_t v50 = v57;
    uint64_t v51 = (char *)(v57 + *(int *)(v48 + 48));
    v53(v57, v32, v15);
    v46(v51, (uint64_t)v47, v39);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v50, 0, 1, v49);
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v32, v15);
  uint64_t v41 = &qword_26B0321C0;
  id v42 = (void (*)(uint64_t))MEMORY[0x263F46BE0];
  uint64_t v43 = v38;
LABEL_10:
  sub_241A3DC20(v43, v41, v42);
  sub_241A3DBB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v57, 1, 1, v45);
}

unint64_t sub_241A3D514(void *a1)
{
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(a1, sel_objectTypeIdentifier);
  if (v2)
  {
    int v3 = v2;
    sub_241CDB0D0();
  }
  sub_241A3DDF4();
  sub_241CDB120();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t sub_241A3D5E8(void *a1, char a2)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v39 = (uint64_t)a1;
  id v11 = a1;
  sub_241A3DA64();
  if (swift_dynamicCast())
  {
    uint64_t v12 = v37[0];
    uint64_t v13 = v37[1];
    char v14 = v38;
    sub_241CDA160();
    sub_241A3DABC(v12, v13, v14);
    uint64_t v15 = sub_241CDA190();
    os_log_type_t v16 = sub_241CDB650();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v34 = v18;
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v36 = v4;
      v37[0] = v18;
      unint64_t v19 = sub_241A3AC4C(v12, v13, v14);
      uint64_t v35 = v5;
      uint64_t v39 = sub_241A33FE4(v19, v20, v37);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A3DACC(v12, v13, v14);
      sub_241A3DACC(v12, v13, v14);
      *(_WORD *)(v17 + 12) = 1024;
      LODWORD(v39) = a2 & 1;
      sub_241CDBBF0();
      _os_log_impl(&dword_241A23000, v15, v16, "[Trend Notification] Error: %s using fallback value: %{BOOL}d", (uint8_t *)v17, 0x12u);
      uint64_t v21 = v34;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v21, -1, -1);
      MEMORY[0x245637F20](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v36);
    }
    else
    {
      sub_241A3DACC(v12, v13, v14);
      sub_241A3DACC(v12, v13, v14);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
  }
  else
  {
    sub_241CDA160();
    id v22 = a1;
    id v23 = a1;
    uint64_t v24 = sub_241CDA190();
    os_log_type_t v25 = sub_241CDB650();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v37[0] = v36;
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v39 = (uint64_t)a1;
      id v27 = a1;
      uint64_t v28 = sub_241CDB130();
      uint64_t v29 = v5;
      uint64_t v39 = sub_241A33FE4(v28, v30, v37);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v26 + 12) = 1024;
      LODWORD(v39) = a2 & 1;
      sub_241CDBBF0();
      _os_log_impl(&dword_241A23000, v24, v25, "[Trend Notification] Unrecognized Error: %s using fallback value: %{BOOL}d", (uint8_t *)v26, 0x12u);
      uint64_t v31 = v36;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v31, -1, -1);
      MEMORY[0x245637F20](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v4);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  return a2 & 1;
}

unint64_t sub_241A3DA64()
{
  unint64_t result = qword_26B038870;
  if (!qword_26B038870)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B038870);
  }
  return result;
}

uint64_t sub_241A3DABC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_241A3DACC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_241A3DADC()
{
  if (!qword_26B035668)
  {
    sub_241A3DB5C(255, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B035668);
    }
  }
}

void sub_241A3DB5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A3DBB0()
{
  if (!qword_268D42170)
  {
    sub_241CD6D00();
    sub_241CD98D0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D42170);
    }
  }
}

uint64_t sub_241A3DC20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241A3DB5C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241A3DC7C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241A3DB5C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241A3DCE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_241A3DD48()
{
  unint64_t result = qword_268D42178;
  if (!qword_268D42178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42178);
  }
  return result;
}

unint64_t sub_241A3DD9C()
{
  unint64_t result = qword_268D42180;
  if (!qword_268D42180)
  {
    sub_241CD98D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42180);
  }
  return result;
}

void sub_241A3DDF4()
{
  if (!qword_26B038840)
  {
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B038840);
    }
  }
}

unint64_t sub_241A3DE4C()
{
  unint64_t result = qword_26B034BE8;
  if (!qword_26B034BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B034BE8);
  }
  return result;
}

uint64_t destroy for TrendNotificationUtilities.ProcessingError(uint64_t a1)
{
  return sub_241A3DACC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s9Summaries26TrendNotificationUtilitiesV15ProcessingErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_241A3DABC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TrendNotificationUtilities.ProcessingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_241A3DABC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_241A3DACC(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for TrendNotificationUtilities.ProcessingError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TrendNotificationUtilities.ProcessingError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_241A3DACC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendNotificationUtilities.ProcessingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TrendNotificationUtilities.ProcessingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_241A3E040(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_241A3E04C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TrendNotificationUtilities.ProcessingError()
{
  return &type metadata for TrendNotificationUtilities.ProcessingError;
}

void sub_241A3E068(void *a1, uint64_t a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v35 = a3;
  uint64_t v8 = sub_241CD6D00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD6810();
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v5 + qword_26B041200;
  os_log_type_t v16 = *(void **)(v15 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  self;
  uint64_t v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    uint64_t v18 = v17;
    id v32 = v16;
    id v19 = objc_msgSend(a1, sel_endDate);
    sub_241CD6CB0();

    sub_241CD6770();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    unint64_t v20 = self;
    uint64_t v21 = (void *)sub_241CD6790();
    id v22 = objc_msgSend(v20, sel_predicateForSamplesWithinDateInterval_options_, v21, 0);

    id v23 = (void *)swift_allocObject();
    uint64_t v24 = v35;
    v23[2] = v18;
    v23[3] = v24;
    v23[4] = a4;
    v23[5] = v5;
    v23[6] = a1;
    id v25 = objc_allocWithZone(MEMORY[0x263F0A6C0]);
    aBlock[4] = sub_241A3F110;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241A3F120;
    aBlock[3] = &unk_26F5C0938;
    uint64_t v26 = _Block_copy(aBlock);
    id v27 = v32;
    swift_retain();
    swift_retain();
    id v28 = a1;
    id v29 = objc_msgSend(v25, sel_initWithSampleType_predicate_resultsHandler_, v18, v22, v26);
    _Block_release(v26);
    swift_release();
    objc_msgSend(*(id *)(v15 + 16), sel_executeQuery_, v29);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
  }
  else
  {
    sub_241A3F000();
    sub_241A3F068();
    unint64_t v30 = (void *)swift_allocError();
    *uint64_t v31 = 0;
    v35(v30, 1);
  }
}

void sub_241A3E410(uint64_t a1, uint64_t a2, void *a3, void *a4, void (*a5)(id, uint64_t), uint64_t a6, uint64_t a7, void *a8)
{
  v35[1] = a7;
  v35[2] = a6;
  uint64_t v36 = a5;
  sub_241A355C8(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  MEMORY[0x270FA5388](v12 - 8);
  v35[0] = (char *)v35 - v13;
  sub_241A355C8(0, &qword_26B032050, MEMORY[0x263F45780]);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)v35 - v18;
  uint64_t v20 = sub_241CD6D00();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  id v23 = (char *)v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 && (id v24 = a4, v25 = sub_241B32564(v24, a2), v24, v25))
  {
    uint64_t v26 = a8;
    id v27 = objc_msgSend(v25, sel_integerValue);
    id v28 = objc_msgSend(v26, sel_endDate);
    sub_241CD6CB0();

    id v29 = sub_241A3E7C8((uint64_t)v27, (uint64_t)v23);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    v36(v29, 0);
  }
  else if (a3)
  {
    id v30 = a3;
    v36(a3, 1);
  }
  else
  {
    sub_241CD7A80();
    uint64_t v31 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v19, 0, 1, v31);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v32 = sub_241CD9970();
    uint64_t v33 = v35[0];
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v35[0], 1, 1, v32);
    sub_241A3F28C((uint64_t)v19, (uint64_t)v17);
    id v34 = sub_241A53EB0(0, 0xF000000000000000, 11, v33, (uint64_t)v17, 0, 0);
    sub_241A3F30C((uint64_t)v19);
    v36(v34, 0);
  }
}

id sub_241A3E7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a2;
  sub_241A355C8(0, &qword_26B032050, MEMORY[0x263F45780]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  char v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v38 - v7;
  sub_241A355C8(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v38 - v10;
  sub_241A355C8(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v43 = sub_241CD9970();
  uint64_t v15 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CD6D00();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 1)
  {
    sub_241CD7A80();
    uint64_t v37 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v8, 0, 1, v37);
    sub_241A313AC(0, &qword_26B030440);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v43);
    sub_241A3F28C((uint64_t)v8, (uint64_t)v6);
    id v36 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v11, (uint64_t)v6, 0, 0);
    sub_241A3F30C((uint64_t)v8);
    return v36;
  }
  id v22 = objc_msgSend(self, sel_countUnit);
  id v23 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v22, (double)a1);

  sub_241A313AC(0, &qword_26B034E30);
  id v24 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v40 = a1;
  v24(v21, v42, v18);
  id v39 = v23;
  id v25 = HKCodableSummaryQuantityValue.init(quantity:date:)(v39, (uint64_t)v21);
  uint64_t v26 = v41 + qword_268D4B190;
  uint64_t v27 = sub_241CD9D80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v17, v26, v27);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F46C38], v43);
  sub_241A313AC(0, &qword_26B034E48);
  sub_241CD6770();
  uint64_t v28 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v14, 0, 1, v28);
  id v29 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v14, v40, 0);
  id result = objc_msgSend(v25, sel_data);
  if (result)
  {
    uint64_t v31 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v32 = sub_241CD6AE0();
    unint64_t v34 = v33;

    uint64_t v35 = v43;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v17, v43);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v35);
    uint64_t v45 = 0;
    memset(v44, 0, sizeof(v44));
    id v36 = sub_241A54648(v32, v34, 14, (uint64_t)v11, (uint64_t)v29, 0, (uint64_t)v44);

    sub_241A37374(v32, v34);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v35);

    return v36;
  }
  __break(1u);
  return result;
}

uint64_t sub_241A3EDBC()
{
  uint64_t v1 = v0 + qword_268D4B190;
  uint64_t v2 = sub_241CD9D80();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_241A3EE28()
{
  sub_241A3F384(v0 + qword_26B041200);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_268D4B190;
  uint64_t v4 = sub_241CD9D80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SampleCountMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B037DD8;
  if (!qword_26B037DD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A3EF70()
{
  uint64_t result = sub_241CD9D80();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_241A3F000()
{
  if (!qword_268D42188)
  {
    sub_241A313AC(255, &qword_26B0304D8);
    unint64_t v0 = type metadata accessor for MostRecentSampleCurrentValueSharableModelStep.SampleProcessingError();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42188);
    }
  }
}

unint64_t sub_241A3F068()
{
  unint64_t result = qword_268D42190;
  if (!qword_268D42190)
  {
    sub_241A3F000();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42190);
  }
  return result;
}

uint64_t sub_241A3F0C0()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_241A3F110(uint64_t a1, uint64_t a2, void *a3)
{
  sub_241A3E410(a1, a2, a3, *(void **)(v3 + 16), *(void (**)(id, uint64_t))(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void **)(v3 + 48));
}

uint64_t sub_241A3F120(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_241A313AC(0, (unint64_t *)&qword_26B038E58);
    sub_241A313AC(0, (unint64_t *)&qword_26B0304E8);
    sub_241A3F224();
    uint64_t v5 = sub_241CDAF90();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241A3F20C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241A3F21C()
{
  return swift_release();
}

unint64_t sub_241A3F224()
{
  unint64_t result = qword_26B038E60;
  if (!qword_26B038E60)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B038E58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B038E60);
  }
  return result;
}

uint64_t sub_241A3F28C(uint64_t a1, uint64_t a2)
{
  sub_241A355C8(0, &qword_26B032050, MEMORY[0x263F45780]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241A3F30C(uint64_t a1)
{
  sub_241A355C8(0, &qword_26B032050, MEMORY[0x263F45780]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241A3F384(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241A3F3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241A3F3F4);
}

uint64_t sub_241A3F3F4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    id v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    id v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241A3F4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241A3F4B8);
}

void *sub_241A3F4B8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TimePeriodSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031D30;
  if (!qword_26B031D30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_241A3F5B0()
{
  unint64_t result = qword_26B032110;
  if (!qword_26B032110)
  {
    sub_241A3F6A0(255, &qword_26B032118, MEMORY[0x263F44150]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032110);
  }
  return result;
}

uint64_t sub_241A3F624()
{
  return sub_241A3F93C(&qword_26B0320B8, MEMORY[0x263F44058]);
}

uint64_t sub_241A3F66C()
{
  return sub_241A3F770((unint64_t *)&qword_26B0320F0);
}

void sub_241A3F6A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241A3F93C(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241A3F73C()
{
  return sub_241A3F770((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241A3F770(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A3F6A0(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241A3F93C((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241A3F93C(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A3F854()
{
  return sub_241A3F93C(&qword_26B0385C8, MEMORY[0x263F44308]);
}

uint64_t sub_241A3F89C()
{
  return sub_241A3F93C(&qword_26B032140, MEMORY[0x263F44308]);
}

uint64_t sub_241A3F8E4(uint64_t a1)
{
  uint64_t result = sub_241A3F93C(&qword_26B037E70, (void (*)(uint64_t))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241A3F93C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A3F984()
{
  return sub_241A3FA24(&qword_26B0383F8, &qword_26B038400, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241A3F9D4()
{
  return sub_241A3FA24(&qword_26B032E48, &qword_26B032E50, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241A3FA24(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A3FA68(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241A3FA68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241A3F6A0(255, &qword_26B032118, MEMORY[0x263F44150]);
    uint64_t v15 = v6;
    uint64_t v7 = sub_241CD86F0();
    unint64_t v8 = sub_241A3F5B0();
    uint64_t v9 = sub_241A3F93C(&qword_26B0320B8, MEMORY[0x263F44058]);
    uint64_t v10 = sub_241A3F770((unint64_t *)&qword_26B0320F0);
    uint64_t v11 = sub_241A3F770((unint64_t *)&qword_26B0320E0);
    uint64_t v12 = (void (*)(uint64_t))MEMORY[0x263F44308];
    v16[0] = v15;
    v16[1] = v7;
    void v16[2] = v8;
    v16[3] = v9;
    v16[4] = v10;
    v16[5] = v11;
    v16[6] = sub_241A3F93C(&qword_26B0385C8, MEMORY[0x263F44308]);
    v16[7] = sub_241A3F93C(&qword_26B032140, v12);
    unint64_t v13 = a3(a1, v16);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

void sub_241A3FC10(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v180 = a3;
  v170 = a2;
  v186 = a1;
  v181 = a4;
  uint64_t v5 = type metadata accessor for TimePeriodSnidgetFeedItemModelProvider();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  v183 = (char *)v154 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (void *)((char *)v154 - v8);
  uint64_t v10 = (char *)sub_241CDA1A0();
  uint64_t v184 = (void (**)(void, void))*((void *)v10 - 1);
  v185 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v154 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v175 = (char *)v154 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A7D0(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v15 - 8);
  v179 = (char *)v154 - v16;
  sub_241A3A7D0(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v17 - 8);
  v158 = (char *)v154 - v18;
  sub_241A3A7D0(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v19 - 8);
  v178 = (char *)v154 - v20;
  uint64_t v21 = sub_241CD6810();
  uint64_t v176 = *(void *)(v21 - 8);
  uint64_t v177 = v21;
  MEMORY[0x270FA5388](v21);
  v155 = (char *)v154 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A7D0(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v182 = (uint64_t)v154 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v161 = (uint64_t)v154 - v26;
  uint64_t v163 = sub_241CD6EE0();
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163);
  uint64_t v169 = (char *)v154 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A7D0(0, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
  MEMORY[0x270FA5388](v28 - 8);
  v166 = (char *)v154 - v29;
  sub_241A3A7D0(0, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v165 = (char *)v154 - v31;
  uint64_t v168 = sub_241CD6D00();
  uint64_t v167 = *(void *)(v168 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v168);
  v154[1] = (char *)v154 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  id v159 = (char *)v154 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v164 = (char *)v154 - v36;
  sub_241A3A7D0(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v38 = MEMORY[0x270FA5388](v37 - 8);
  v157 = (char *)v154 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v160 = (char *)v154 - v41;
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)v154 - v42;
  uint64_t v174 = sub_241CD69B0();
  uint64_t v173 = *(void *)(v174 - 8);
  uint64_t v44 = MEMORY[0x270FA5388](v174);
  uint64_t v156 = (char *)v154 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v44);
  v172 = (char *)v154 - v46;
  uint64_t v47 = self;
  uint64_t v48 = (void *)*v4;
  id v49 = objc_msgSend(v47, sel_sharedInstanceForHealthStore_, *v4);
  if (!v49)
  {
    __break(1u);
    return;
  }
  uint64_t v50 = v49;
  uint64_t v171 = (uint64_t)v4 + *(int *)(v5 + 24);
  id v51 = objc_msgSend(v49, sel_displayTypeForObjectType_, *(void *)(v171 + 16));

  if (!v51)
  {
    sub_241CDA0F0();
    sub_241A41394((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
    uint64_t v54 = v183;
    sub_241A41394((uint64_t)v4, (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
    uint64_t v55 = sub_241CDA190();
    os_log_type_t v56 = sub_241CDB650();
    int v57 = v56;
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v58 = swift_slowAlloc();
      LODWORD(v182) = v57;
      uint64_t v59 = v58;
      id v187 = (id)swift_slowAlloc();
      v188[0] = (uint64_t)v187;
      *(_DWORD *)uint64_t v59 = 136315394;
      uint64_t v60 = sub_241AE02B4(*v9, *((unsigned __int8 *)v9 + *(int *)(v5 + 24) + 8));
      uint64_t v189 = sub_241A33FE4(v60, v61, v188);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A413FC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
      *(_WORD *)(v59 + 12) = 2080;
      id v62 = objc_msgSend(*(id *)&v54[*(int *)(v5 + 24) + 16], sel_sensitiveLoggingIdentifier);
      uint64_t v63 = sub_241CDB0D0();
      v186 = v12;
      unint64_t v65 = v64;

      uint64_t v189 = sub_241A33FE4(v63, v65, v188);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A413FC((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_241A23000, v55, (os_log_type_t)v182, "[%s]: unable to find display type: %s", (uint8_t *)v59, 0x16u);
      id v66 = v187;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v66, -1, -1);
      MEMORY[0x245637F20](v59, -1, -1);

      ((void (**)(void *, char *))v184)[1](v186, v185);
    }
    else
    {
      sub_241A413FC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
      sub_241A413FC((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);

      ((void (**)(char *, char *))v184)[1](v12, v185);
    }
    sub_241A41340();
    swift_allocError();
    unsigned char *v93 = 0;
    swift_willThrow();
    return;
  }
  id v52 = v187;
  sub_241ADF558(v186);
  if (v52)
  {

    return;
  }
  uint64_t v67 = v53;
  uint64_t v68 = v182;
  if (!v53)
  {
LABEL_15:
    uint64_t v94 = sub_241CD7A10();
    uint64_t v95 = (uint64_t)v179;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v179, 1, 1, v94);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v176 + 56))(v68, 1, 1, v177);
    uint64_t v96 = v180;
    swift_bridgeObjectRetain();
    uint64_t v97 = v175;
    sub_241B4A1A8(0, v95, v96, v68, v175);
    sub_241CD89A0();
    uint64_t v98 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v178, 1, 1, v98);
    id v99 = v51;
    uint64_t v100 = sub_241CD8990();
    sub_241A3A878();
    int v102 = v181;
    sub_241A41394((uint64_t)v97, (uint64_t)v181 + *(int *)(v101 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v102[1] = 0;
    v102[2] = 0;
    *int v102 = v100;
    uint64_t v92 = (uint64_t)v97;
    goto LABEL_16;
  }
  if (!objc_msgSend(v53, sel_hasTimeInterval) || !objc_msgSend(v67, sel_hasDateData))
  {

    goto LABEL_15;
  }
  unint64_t v69 = (void *)v4[1];
  type metadata accessor for SnidgetStringBuilder();
  uint64_t inited = (void *)swift_initStackObject();
  inited[2] = v48;
  char v71 = self;
  int v72 = v48;
  id v73 = v67;
  id v74 = v72;
  id v75 = v69;
  id v76 = objc_msgSend(v71, sel_sharedInstanceForHealthStore_, v74);
  inited[3] = v75;
  inited[4] = v76;
  id v77 = objc_msgSend(self, sel_secondUnit);
  id v187 = v73;
  objc_msgSend(v73, sel_timeInterval);
  id v79 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v77, v78);

  v186 = inited;
  SnidgetStringBuilder.makeQuantityPrimaryAttributedString(displayType:quantity:)(v51, v79, v43);

  uint64_t v80 = v173;
  uint64_t v81 = v174;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v43, 1, v174) == 1)
  {
    sub_241A3A970((uint64_t)v43, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
    uint64_t v82 = sub_241CD7A10();
    uint64_t v83 = (uint64_t)v179;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v179, 1, 1, v82);
    uint64_t v84 = v182;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v176 + 56))(v182, 1, 1, v177);
    uint64_t v85 = v180;
    swift_bridgeObjectRetain();
    id v86 = v175;
    sub_241B4A1A8(0, v83, v85, v84, v175);
    sub_241CD89A0();
    uint64_t v87 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v178, 1, 1, v87);
    id v88 = v51;
    uint64_t v89 = sub_241CD8990();
    sub_241A3A878();
    int v91 = v181;
    sub_241A41394((uint64_t)v86, (uint64_t)v181 + *(int *)(v90 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    swift_release();
    v91[1] = 0;
    v91[2] = 0;
    *int v91 = v89;
    uint64_t v92 = (uint64_t)v86;
LABEL_16:
    sub_241A413FC(v92, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v172, v43, v81);
  v185 = v74;
  id v103 = v187;
  objc_msgSend(v187, sel_dateData);
  id v104 = (id)HKDecodeDateForValue();
  uint64_t v184 = (void (**)(void, void))v75;
  unint64_t v105 = v164;
  sub_241CD6CB0();

  sub_241A3A71C();
  uint64_t v107 = v106;
  uint64_t v108 = (uint64_t)v165;
  uint64_t v109 = &v165[*(int *)(v106 + 48)];
  objc_msgSend(v103, sel_dateData);
  id v110 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v111 = v167;
  uint64_t v112 = v168;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v167 + 56))(v108, 0, 1, v168);
  *(void *)uint64_t v109 = 0;
  v109[8] = 1;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v108, 0, 1, v107);
  uint64_t v113 = sub_241CD8A60();
  uint64_t v114 = (uint64_t)v166;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v166, 1, 1, v113);
  uint64_t v115 = (uint64_t)v169;
  sub_241CD6EA0();
  uint64_t v116 = v105;
  id v117 = (char *)sub_241BACC30(v185, v184, v171, v170, v105, v108, v114, 0, v115);
  (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v115, v163);
  sub_241A3A970(v114, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
  sub_241A3A970(v108, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
  (*(void (**)(void *, uint64_t))(v111 + 8))(v116, v112);
  uint64_t v119 = v176;
  uint64_t v118 = v177;
  os_log_t v120 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v176 + 56);
  v120(v161, 1, 1, v177);
  id v121 = v187;
  v185 = v117;
  if (v117)
  {
    swift_retain();
    uint64_t v184 = (void (**)(void, void))v120;
    uint64_t v122 = v155;
    sub_241CD8A40();
    sub_241CD67E0();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v122, v118);
    objc_msgSend(v121, sel_dateData);
    uint64_t v123 = v118;
    id v124 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v125 = v182;
    uint64_t v126 = v161;
    sub_241CD67C0();
    swift_release();
    sub_241A3A970(v126, &qword_26B038F10, MEMORY[0x263F062D0]);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v184)(v125, 0, 1, v123);
    sub_241A3AAA0(v125, v126);
  }
  sub_241CD89A0();
  sub_241A3A9CC();
  uint64_t v128 = *(int *)(v127 + 48);
  v183 = (char *)v51;
  objc_msgSend(v121, sel_dateData);
  id v129 = (id)HKDecodeDateForValue();
  uint64_t v130 = v178;
  sub_241CD6CB0();

  v130[v128] = 0;
  uint64_t v131 = *MEMORY[0x263F43F18];
  uint64_t v132 = sub_241CD8610();
  uint64_t v133 = *(void *)(v132 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v133 + 104))(v130, v131, v132);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
  uint64_t v184 = (void (**)(void, void))sub_241CD8990();
  uint64_t v134 = v173;
  uint64_t v135 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v173 + 56);
  uint64_t v136 = v174;
  v135(v160, 1, 1, v174);
  (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v156, v172, v136);
  v135(v157, 1, 1, v136);
  v188[0] = 0x5F74656764696E53;
  v188[1] = 0xE800000000000000;
  id v137 = *(id *)(v171 + 16);
  id v138 = objc_msgSend(v137, sel_description);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  id v139 = v187;
  objc_msgSend(v187, sel_timeInterval);
  uint64_t v140 = v158;
  sub_241CD8E60();
  swift_bridgeObjectRelease();
  uint64_t v141 = sub_241CD8E70();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v141 - 8) + 56))(v140, 0, 1, v141);
  sub_241CD8FF0();
  swift_allocObject();
  v178 = (char *)sub_241CD8FE0();
  uint64_t v142 = v185;
  swift_retain();
  uint64_t v143 = v139;
  objc_msgSend(v139, sel_dateData);
  id v144 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v145 = (uint64_t)v179;
  sub_241CD79D0();
  uint64_t v146 = sub_241CD7A10();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v146 - 8) + 56))(v145, 0, 1, v146);
  uint64_t v147 = v161;
  uint64_t v148 = v182;
  sub_241A4145C(v161, v182);
  sub_241A3A878();
  uint64_t v151 = v180;
  v150 = v181;
  v152 = (char *)v181 + *(int *)(v149 + 52);
  swift_bridgeObjectRetain();
  sub_241B4A1A8(1, v145, v151, v148, v152);
  swift_release();

  swift_release();
  v153 = v178;
  uint64_t *v150 = (uint64_t)v184;
  v150[1] = (uint64_t)v153;
  v150[2] = (uint64_t)v142;
  sub_241A3A970(v147, &qword_26B038F10, MEMORY[0x263F062D0]);
  (*(void (**)(char *, uint64_t))(v134 + 8))(v172, v174);
}

uint64_t sub_241A4128C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241A41394(v2 + *(int *)(a1 + 24), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241A412C4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_241A412E8()
{
  if (!qword_26B034CF0)
  {
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034CF0);
    }
  }
}

unint64_t sub_241A41340()
{
  unint64_t result = qword_268D42198;
  if (!qword_268D42198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42198);
  }
  return result;
}

uint64_t sub_241A41394(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241A413FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241A4145C(uint64_t a1, uint64_t a2)
{
  sub_241A3A7D0(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id static HKCodableSummaryCurrentValue.noData()()
{
  unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A41708(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v15 - v2;
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
  sub_241A41708(0, &qword_26B032050, MEMORY[0x263F45780], v0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v15 - v9;
  sub_241CD7A80();
  uint64_t v11 = sub_241CD7AB0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  sub_241A313AC(0, &qword_26B030440);
  uint64_t v12 = sub_241CD9970();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v3, 1, 1, v12);
  sub_241A55068((uint64_t)v10, (uint64_t)v8, &qword_26B032050, v4);
  id v13 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v3, (uint64_t)v8, 0, 0);
  sub_241A55F04((uint64_t)v10, &qword_26B032050, v4);
  return v13;
}

void sub_241A41708(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id HKCodableSummaryQuantityValue.init(quantity:date:)(void *a1, uint64_t a2)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v5 = result;
    sub_241A313AC(0, &qword_26B038918);
    id v6 = v5;
    id v7 = a1;
    unint64_t v8 = (void *)sub_241CDB870();
    objc_msgSend(v6, sel_setValue_, v8);

    uint64_t v9 = (void *)sub_241CD6C60();
    double v10 = MEMORY[0x245637600]();

    objc_msgSend(v6, sel_setDateData_, v10);
    uint64_t v11 = sub_241CD6D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a2, v11);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)(uint64_t a1, uint64_t a2, char a3)
{
  sub_241A41708(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = sub_241CD6810();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v14 = result;
    sub_241A55068(a1, (uint64_t)v8, &qword_26B038F10, MEMORY[0x263F062D0]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      id v15 = v14;
      sub_241A55F04((uint64_t)v8, &qword_26B038F10, MEMORY[0x263F062D0]);
      if (a3)
      {
LABEL_4:
        sub_241A55F04(a1, &qword_26B038F10, MEMORY[0x263F062D0]);

        return v14;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      sub_241A313AC(0, &qword_26B0303E8);
      id v16 = v14;
      uint64_t v17 = (void *)sub_241CDB930();
      objc_msgSend(v16, sel_setDateInterval_, v17);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      if (a3) {
        goto LABEL_4;
      }
    }
    objc_msgSend(v14, sel_setDataCount_, a2);

    sub_241A55F04(a1, &qword_26B038F10, MEMORY[0x263F062D0]);
    return v14;
  }
  __break(1u);
  return result;
}

id HKCodableSummaryCurrentValue.init(quantityValue:queryConfiguration:supplementaryValue:metadata:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_241A4605C(a1, a2, a3, a4, 14);
}

void HKCodableSummaryTimePeriodValue.date.getter()
{
}

void LevelView.DataConfiguration.init(codable:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  v37[1] = a2;
  uint64_t v40 = sub_241CDA080();
  uint64_t v44 = *(void *)(v40 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v42 = (char *)v37 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)v37 - v7;
  uint64_t v8 = sub_241CD6A60();
  unint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v38 = a1;
  id v11 = objc_msgSend(a1, sel_sortedNormalizedBuckets);
  if (!v11) {
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF980]), sel_init);
  }
  unint64_t v50 = MEMORY[0x263F8EE78];
  id v12 = v11;
  sub_241CDBAE0();

  sub_241A55020(&qword_26B02E8C0, MEMORY[0x263F06DC0]);
  sub_241CDBBE0();
  while (v49)
  {
    sub_241A54AA0(&v48, v47);
    sub_241A340B8((uint64_t)v47, (uint64_t)v45);
    sub_241A313AC(0, &qword_26B0304A8);
    if ((swift_dynamicCast() & 1) == 0) {
      uint64_t v46 = 0;
    }
    uint64_t v13 = sub_241A31190((uint64_t)v47);
    if (v46)
    {
      MEMORY[0x2456365D0](v13);
      if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_241CDB2F0();
      }
      sub_241CDB310();
      sub_241CDB2E0();
    }
    sub_241CDBBE0();
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v8);
  unint64_t v14 = v50;

  objc_msgSend(v38, sel_normalizedValue);
  if (v14 >> 62) {
    goto LABEL_29;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v15)
  {
    while (1)
    {
      *(void *)&long long v48 = MEMORY[0x263F8EE78];
      sub_241A52108(0, v15 & ~(v15 >> 63), 0);
      if (v15 < 0) {
        break;
      }
      uint64_t v16 = 0;
      unint64_t v39 = v14 & 0xC000000000000001;
      uint64_t v17 = v48;
      uint64_t v18 = (void (**)(char *, char *, uint64_t))(v44 + 32);
      uint64_t v19 = &off_2650F5000;
      uint64_t v20 = v41;
      while (v15 != v16)
      {
        if (v39) {
          id v21 = (id)MEMORY[0x245637160](v16, v14);
        }
        else {
          id v21 = *(id *)(v14 + 8 * v16 + 32);
        }
        uint64_t v22 = v21;
        id v23 = [v21 (SEL)v19[98]];
        if (!v23) {
          goto LABEL_33;
        }
        uint64_t v24 = v23;
        objc_msgSend(v23, sel_lowerBound);
        double v26 = v25;

        id v27 = [v22 (SEL)v19[98]];
        if (!v27) {
          goto LABEL_32;
        }
        uint64_t v28 = v27;
        objc_msgSend(v27, sel_upperBound);
        double v30 = v29;

        if (v26 > v30) {
          goto LABEL_28;
        }
        objc_msgSend(v22, sel_highlighted);
        uint64_t v31 = v43;
        sub_241CDA050();

        uint64_t v32 = *v18;
        uint64_t v33 = v42;
        uint64_t v34 = v40;
        (*v18)(v42, v31, v40);
        v32(v20, v33, v34);
        *(void *)&long long v48 = v17;
        unint64_t v36 = *(void *)(v17 + 16);
        unint64_t v35 = *(void *)(v17 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_241A52108(v35 > 1, v36 + 1, 1);
          uint64_t v17 = v48;
        }
        ++v16;
        *(void *)(v17 + 16) = v36 + 1;
        v32((char *)(v17+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v36), v20, v34);
        uint64_t v19 = &off_2650F5000;
        if (v15 == v16) {
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_241CDBF50();
      swift_bridgeObjectRelease();
      if (!v15) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  else
  {
LABEL_30:
    swift_bridgeObjectRelease();
    sub_241CDA000();
  }
}

void LevelView.DataConfiguration.Bucket.init(codable:)(void *a1)
{
  id v1 = objc_msgSend(a1, sel_range);
  if (!v1) {
    goto LABEL_8;
  }
  uint64_t v2 = v1;
  objc_msgSend(v1, sel_lowerBound);
  double v4 = v3;

  id v5 = objc_msgSend(a1, sel_range);
  if (!v5)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v6 = v5;
  objc_msgSend(v5, sel_upperBound);
  double v8 = v7;

  if (v4 > v8)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(a1, sel_highlighted);
  sub_241CDA050();
}

uint64_t sub_241A4221C(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_241CDBE80();
    uint64_t v9 = *(void *)(sub_241CD7020() - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_241CDBE60();
      sub_241CDBE90();
      sub_241CDBEA0();
      sub_241CDBE70();
      v10 += v11;
      if (!--v6) {
        return v13;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_241A42364(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_241CDBE80();
    uint64_t v9 = *(void *)(sub_241CD9CA0() - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_241CDBE60();
      sub_241CDBE90();
      sub_241CDBEA0();
      sub_241CDBE70();
      v10 += v11;
      if (!--v6) {
        return v13;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_241A424AC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v18 = sub_241CD7190();
  uint64_t v6 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  double v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_241A522FC(0, v9, 0);
    uint64_t v10 = v21;
    uint64_t v11 = *(void *)(sub_241CD7020() - 8);
    uint64_t v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v17 = *(void *)(v11 + 72);
    v16[1] = v6 + 32;
    while (1)
    {
      v19(v12);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v10;
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_241A522FC(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v21;
      }
      *(void *)(v10 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, v8, v18);
      v12 += v17;
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_241A426B8(void (*a1)(long long *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_241A5236C(0, v5, 0);
    uint64_t v6 = v22;
    int64_t v9 = (uint64_t *)(a3 + 32);
    while (1)
    {
      uint64_t v10 = *v9++;
      uint64_t v19 = v10;
      a1(&v20, &v19);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      long long v11 = v20;
      long long v12 = v21;
      uint64_t v22 = v6;
      unint64_t v14 = *(void *)(v6 + 16);
      unint64_t v13 = *(void *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        long long v17 = v21;
        long long v18 = v20;
        sub_241A5236C(v13 > 1, v14 + 1, 1);
        long long v12 = v17;
        long long v11 = v18;
        uint64_t v6 = v22;
      }
      *(void *)(v6 + 16) = v14 + 1;
      uint64_t v15 = v6 + 32 * v14;
      *(_OWORD *)(v15 + 32) = v11;
      *(_OWORD *)(v15 + 48) = v12;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_241A427D0(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x263F8EE78];
    if (!v6) {
      break;
    }
    uint64_t v13 = MEMORY[0x263F8EE78];
    uint64_t result = sub_241CDBE80();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x245637160](v8, a3);
      }
      else {
        id v9 = *(id *)(a3 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      id v11 = v9;
      a1(&v12, &v11);

      if (v3) {
        return swift_release();
      }
      ++v8;
      sub_241CDBE60();
      sub_241CDBE90();
      sub_241CDBEA0();
      sub_241CDBE70();
      if (v6 == v8) {
        return v13;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  return result;
}

void sub_241A42940(void (*a1)(void *__return_ptr, id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v6 = a3;
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_241A521D8(0, v5, 0);
    uint64_t v7 = v35;
    uint64_t v9 = sub_241A53B6C(v6);
    uint64_t v10 = 0;
    uint64_t v11 = v6 + 64;
    uint64_t v26 = v6 + 80;
    int64_t v27 = v5;
    uint64_t v29 = v6 + 64;
    uint64_t v30 = v6;
    int v28 = v8;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(v6 + 32))
    {
      unint64_t v14 = (unint64_t)v9 >> 6;
      if ((*(void *)(v11 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(v6 + 36) != v8) {
        goto LABEL_26;
      }
      uint64_t v32 = v10;
      id v33 = *(id *)(*(void *)(v6 + 48) + 8 * v9);
      id v15 = v33;
      a1(v34, &v33);
      if (v4)
      {
        swift_release();

        return;
      }

      uint64_t v16 = v34[0];
      uint64_t v17 = v34[1];
      uint64_t v35 = v7;
      unint64_t v18 = *(void *)(v7 + 16);
      unint64_t v19 = *(void *)(v7 + 24);
      if (v18 >= v19 >> 1)
      {
        sub_241A521D8(v19 > 1, v18 + 1, 1);
        uint64_t v7 = v35;
      }
      *(void *)(v7 + 16) = v18 + 1;
      uint64_t v20 = v7 + 16 * v18;
      *(void *)(v20 + 32) = v16;
      *(void *)(v20 + 40) = v17;
      uint64_t v6 = v30;
      int64_t v12 = 1 << *(unsigned char *)(v30 + 32);
      if (v9 >= v12) {
        goto LABEL_27;
      }
      uint64_t v11 = v29;
      uint64_t v21 = *(void *)(v29 + 8 * v14);
      if ((v21 & (1 << v9)) == 0) {
        goto LABEL_28;
      }
      int v8 = v28;
      if (*(_DWORD *)(v30 + 36) != v28) {
        goto LABEL_29;
      }
      unint64_t v22 = v21 & (-2 << (v9 & 0x3F));
      if (v22)
      {
        int64_t v12 = __clz(__rbit64(v22)) | v9 & 0xFFFFFFFFFFFFFFC0;
        uint64_t v4 = 0;
        int64_t v13 = v27;
      }
      else
      {
        unint64_t v23 = v14 + 1;
        unint64_t v24 = (unint64_t)(v12 + 63) >> 6;
        uint64_t v4 = 0;
        int64_t v13 = v27;
        if (v14 + 1 < v24)
        {
          unint64_t v25 = *(void *)(v29 + 8 * v23);
          if (v25)
          {
LABEL_21:
            int64_t v12 = __clz(__rbit64(v25)) + (v23 << 6);
          }
          else
          {
            while (v24 - 2 != v14)
            {
              unint64_t v25 = *(void *)(v26 + 8 * v14++);
              if (v25)
              {
                unint64_t v23 = v14 + 1;
                goto LABEL_21;
              }
            }
          }
        }
      }
      uint64_t v10 = v32 + 1;
      uint64_t v9 = v12;
      if (v32 + 1 == v13) {
        return;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
}

uint64_t sub_241A42BA0(void (*a1)(long long *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  uint64_t v7 = a3;
  uint64_t v25 = MEMORY[0x263F8EE78];
  sub_241A5240C(0, v5, 0);
  uint64_t v6 = v25;
  uint64_t result = sub_241A53ACC(v7);
  uint64_t v9 = result;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  uint64_t v21 = v7 + 56;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(v7 + 32))
  {
    if (((*(void *)(v21 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(v7 + 36) != v11) {
      goto LABEL_16;
    }
    unint64_t v14 = (void *)(*(void *)(v7 + 48) + 16 * v9);
    uint64_t v15 = v14[1];
    v23[0] = *v14;
    v23[1] = v15;
    swift_bridgeObjectRetain();
    a1(v24, v23);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t v16 = v7;
    swift_bridgeObjectRelease();
    uint64_t v25 = v6;
    unint64_t v18 = *(void *)(v6 + 16);
    unint64_t v17 = *(void *)(v6 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_241A5240C(v17 > 1, v18 + 1, 1);
      uint64_t v6 = v25;
    }
    *(void *)(v6 + 16) = v18 + 1;
    sub_241A5598C(v24, v6 + 40 * v18 + 32);
    uint64_t v7 = v16;
    uint64_t result = sub_241BBE0AC(v9, v11, v13 & 1, v16);
    uint64_t v9 = result;
    uint64_t v11 = v19;
    char v13 = v20 & 1;
    --v5;
    uint64_t v4 = 0;
    if (!v5)
    {
      sub_241A55980(result, v19, v20 & 1);
      return v6;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_241A42D74(void (*a1)(long long *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_241A524F0(0, v5, 0);
    uint64_t v6 = v15;
    for (uint64_t i = (char *)(a3 + 32); ; ++i)
    {
      char v13 = *i;
      a1(v14, &v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v15 = v6;
      unint64_t v11 = *(void *)(v6 + 16);
      unint64_t v10 = *(void *)(v6 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_241A524F0(v10 > 1, v11 + 1, 1);
        uint64_t v6 = v15;
      }
      *(void *)(v6 + 16) = v11 + 1;
      sub_241A5598C(v14, v6 + 40 * v11 + 32);
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

id sub_241A42E90()
{
  uint64_t v0 = sub_241CDA080();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F464E8]), sel_init);
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  int64_t v5 = result;
  sub_241CDA010();
  objc_msgSend(v5, sel_setNormalizedValue_);
  uint64_t v6 = sub_241CDA030();
  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v26 = v5;
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_241A520E8(0, v7, 0);
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    uint64_t v8 = v1 + 16;
    uint64_t v10 = *(unsigned __int8 *)(v8 + 64);
    v25[1] = v6;
    uint64_t v11 = v6 + ((v10 + 32) & ~v10);
    char v12 = (void (**)(char *, uint64_t))(v8 - 8);
    uint64_t v27 = *(void *)(v8 + 56);
    int v28 = v9;
    while (1)
    {
      v28(v3, v11, v0);
      id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F464F0]), sel_init);
      if (!result) {
        break;
      }
      char v13 = result;
      id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F464A8]), sel_init);
      uint64_t v15 = v14;
      if (v14)
      {
        id v16 = v14;
        sub_241CDA060();
        objc_msgSend(v16, sel_setLowerBound_);

        id v17 = v16;
        sub_241CDA060();
        objc_msgSend(v17, sel_setUpperBound_, v18);
      }
      objc_msgSend(v13, sel_setRange_, v15);
      objc_msgSend(v13, sel_setHighlighted_, sub_241CDA040() & 1);

      uint64_t v30 = sub_241A313AC(0, &qword_26B0304A8);
      *(void *)&long long v29 = v13;
      (*v12)(v3, v0);
      uint64_t v19 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_241A520E8(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v31;
      }
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v20 = *(void *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_241A520E8(v20 > 1, v21 + 1, 1);
        uint64_t v19 = v31;
      }
      *(void *)(v19 + 16) = v21 + 1;
      sub_241A54AA0(&v29, (_OWORD *)(v19 + 32 * v21 + 32));
      v11 += v27;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        int64_t v5 = v26;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
LABEL_14:
  id v22 = objc_allocWithZone(MEMORY[0x263EFF980]);
  unint64_t v23 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v22, sel_initWithArray_, v23);

  objc_msgSend(v5, sel_setSortedNormalizedBuckets_, v24);
  return v5;
}

id sub_241A431FC()
{
  return objc_msgSend(v0, sel_hasLatestSupportedVersion);
}

id sub_241A43220(char a1)
{
  return objc_msgSend(v1, sel_setHasLatestSupportedVersion_, a1 & 1);
}

id (*sub_241A43234(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasLatestSupportedVersion);
  return sub_241A43288;
}

id sub_241A43288(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasLatestSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_241A432A0()
{
  return objc_msgSend(v0, sel_latestSupportedVersion);
}

id sub_241A432B0(uint64_t a1)
{
  return objc_msgSend(v1, sel_setLatestSupportedVersion_, a1);
}

id (*sub_241A432C4(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_latestSupportedVersion);
  return sub_241A43318;
}

id sub_241A43318(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setLatestSupportedVersion_, *(void *)a1);
}

id sub_241A4332C()
{
  return objc_msgSend(v0, sel_hasMinimumSupportedVersion);
}

id sub_241A43350(char a1)
{
  return objc_msgSend(v1, sel_setHasMinimumSupportedVersion_, a1 & 1);
}

id (*sub_241A43364(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasMinimumSupportedVersion);
  return sub_241A433B8;
}

id sub_241A433B8(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasMinimumSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_241A433D0()
{
  return objc_msgSend(v0, sel_minimumSupportedVersion);
}

id sub_241A433E0(uint64_t a1)
{
  return objc_msgSend(v1, sel_setMinimumSupportedVersion_, a1);
}

id (*sub_241A433F4(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_minimumSupportedVersion);
  return sub_241A43448;
}

id sub_241A43448(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setMinimumSupportedVersion_, *(void *)a1);
}

uint64_t static HKCodableSummaryData.currentCodeVersion.getter()
{
  return sub_241CD7A80();
}

unint64_t HKCodableSummaryData.Kind.rawValue.getter(char a1)
{
  unint64_t result = 0x646F4D7472616863;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x56746E6572727563;
      break;
    case 2:
      unint64_t result = 0x616E41646E657274;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_241A4351C()
{
  return sub_241A43524();
}

uint64_t sub_241A43524()
{
  return sub_241CDC200();
}

uint64_t sub_241A4361C()
{
  sub_241CDB170();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241A436FC()
{
  return sub_241A43704();
}

uint64_t sub_241A43704()
{
  return sub_241CDC200();
}

uint64_t sub_241A437F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_241A43828(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEA00000000006C65;
  uint64_t v3 = 0x646F4D7472616863;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC00000065756C61;
      uint64_t v3 = 0x56746E6572727563;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "trendAnalysis");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000017;
      *(void *)(a1 + 8) = 0x8000000241CDCF70;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_241A438E0(unsigned __int8 *a1, char *a2)
{
  return sub_241B6950C(*a1, *a2);
}

uint64_t HKCodableSummaryData.kind.getter()
{
  if (!objc_msgSend(v0, sel_hasKindRawValue)) {
    return 4;
  }
  id v1 = objc_msgSend(v0, sel_kindRawValue);
  if (!v1) {
    return 4;
  }
  unint64_t v2 = v1;
  sub_241CDB0D0();

  return _sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0();
}

BOOL HKCodableSummaryData.audience.getter()
{
  if (!objc_msgSend(v0, sel_hasAudienceRawValue)) {
    return 1;
  }
  id v1 = objc_msgSend(v0, sel_audienceRawValue);
  if (!v1) {
    return 1;
  }
  unint64_t v2 = v1;
  sub_241CDB0D0();

  uint64_t v3 = sub_241CDBFD0();
  swift_bridgeObjectRelease();
  return v3 != 0;
}

void HKCodableSummaryData.audience.setter()
{
  id v1 = (id)sub_241CDB090();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setAudienceRawValue_, v1);
}

void (*HKCodableSummaryData.audience.modify(uint64_t a1))(void **a1)
{
  unint64_t v2 = v1;
  *(void *)a1 = v2;
  if (objc_msgSend(v2, sel_hasAudienceRawValue)
    && (id v4 = objc_msgSend(v2, sel_audienceRawValue)) != 0)
  {
    int64_t v5 = v4;
    sub_241CDB0D0();

    uint64_t v6 = sub_241CDBFD0();
    swift_bridgeObjectRelease();
    BOOL v7 = v6 != 0;
  }
  else
  {
    BOOL v7 = 1;
  }
  *(unsigned char *)(a1 + 8) = v7;
  return sub_241A43B68;
}

void sub_241A43B68(void **a1)
{
  id v1 = *a1;
  id v2 = (id)sub_241CDB090();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAudienceRawValue_, v2);
}

id HKCodableSummaryData.queryAnchor.getter()
{
  if (!objc_msgSend(v0, sel_hasDatabaseChangesQueryAnchor)) {
    return 0;
  }
  id v1 = objc_msgSend(v0, sel_databaseChangesQueryAnchor);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = HKCodableQueryAnchor.queryAnchor.getter();

  return v3;
}

id HKCodableQueryAnchor.queryAnchor.getter()
{
  swift_getObjectType();
  uint64_t v1 = sub_241CDA1A0();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = 0;
  if (!objc_msgSend(v0, sel_hasEncodedQueryAnchorData)) {
    return (id)v2;
  }
  id result = objc_msgSend(v0, sel_encodedQueryAnchorData);
  if (result)
  {
    id v4 = result;
    sub_241A313AC(0, &qword_26B0303A8);
    sub_241A313AC(0, (unint64_t *)&qword_26B030380);
    uint64_t v5 = sub_241CD6AE0();
    unint64_t v7 = v6;

    uint64_t v2 = sub_241CDB880();
    sub_241A37374(v5, v7);
    return (id)v2;
  }
  __break(1u);
  return result;
}

void *HKCodableSummaryData.init(contentData:kind:queryAnchor:audience:version:)(uint64_t a1, unint64_t a2, char a3, void *a4, char a5, uint64_t a6)
{
  uint64_t v9 = sub_241A54BF8(a1, a2, a3, a4, a5 & 1, a6);

  sub_241A54FC8(a1, a2);
  return v9;
}

id HKCodableQueryAnchor.init(queryAnchor:)(void *a1)
{
  uint64_t v2 = v1;
  v36[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!v8) {
    __break(1u);
  }
  uint64_t v9 = v8;
  uint64_t v10 = self;
  id v35 = 0;
  id v11 = v9;
  id v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, &v35);
  id v13 = v35;
  if (v12)
  {
    uint64_t v14 = sub_241CD6AE0();
    unint64_t v16 = v15;

    id v17 = (void *)sub_241CD6AD0();
    sub_241A37374(v14, v16);
    objc_msgSend(v11, sel_setEncodedQueryAnchorData_, v17);
  }
  else
  {
    double v18 = v13;

    uint64_t v19 = (void *)sub_241CD6A40();
    swift_willThrow();
    sub_241CDA140();
    id v20 = v19;
    id v21 = v19;
    id v22 = sub_241CDA190();
    os_log_type_t v23 = sub_241CDB650();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v34 = v5;
      uint64_t v25 = v24;
      uint64_t v33 = swift_slowAlloc();
      id v35 = v2;
      v36[0] = v33;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getMetatypeMetadata();
      uint64_t v26 = sub_241CDB120();
      id v35 = (id)sub_241A33FE4(v26, v27, v36);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      id v35 = v19;
      id v28 = v19;
      sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
      uint64_t v29 = sub_241CDB120();
      id v35 = (id)sub_241A33FE4(v29, v30, v36);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241A23000, v22, v23, "[%s]: error encoding query anchor: %s", (uint8_t *)v25, 0x16u);
      uint64_t v31 = v33;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v31, -1, -1);
      MEMORY[0x245637F20](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v4);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  return v11;
}

void *HKCodableSummaryData.init(currentValue:queryAnchor:audience:version:)(void *a1, void *a2, int a3, uint64_t a4)
{
  LODWORD(v5) = a3;
  uint64_t v8 = sub_241CD7AB0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    int v20 = v5;
    uint64_t v5 = a4;
    id v12 = objc_msgSend(a1, sel_data);
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = sub_241CD6AE0();
      unint64_t v16 = v15;
    }
    else
    {
      uint64_t v14 = 0;
      unint64_t v16 = 0xF000000000000000;
    }
    a4 = v5;
    LOBYTE(v5) = v20;
  }
  else
  {
    uint64_t v14 = 0;
    unint64_t v16 = 0xF000000000000000;
  }
  sub_241CD7A80();
  id v17 = sub_241A54BF8(v14, v16, 1, a2, v5 & 1, (uint64_t)v11);

  sub_241A54FC8(v14, v16);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a4, v8);
  return v17;
}

void *HKCodableSummaryData.init(trendAnalysis:queryAnchor:audience:version:)(void *a1, void *a2, int a3, uint64_t a4)
{
  return sub_241A44594(a1, a2, a3, a4, 2);
}

void *HKCodableSummaryData.init(correlatedTrendAnalysis:queryAnchor:audience:version:)(void *a1, void *a2, int a3, uint64_t a4)
{
  return sub_241A44594(a1, a2, a3, a4, 3);
}

void *HKCodableSummaryData.init(chartModel:queryAnchor:audience:version:)(void *a1, void *a2, int a3, uint64_t a4)
{
  return sub_241A44594(a1, a2, a3, a4, 0);
}

void *sub_241A44594(void *a1, void *a2, int a3, uint64_t a4, int a5)
{
  int v25 = a3;
  uint64_t v9 = sub_241CD7AB0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v27 = a5;
  uint64_t v26 = a2;
  uint64_t v13 = a4;
  if (a1 && (id v14 = objc_msgSend(a1, sel_data)) != 0)
  {
    unint64_t v15 = v14;
    uint64_t v16 = sub_241CD6AE0();
    unint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    unint64_t v18 = 0xF000000000000000;
  }
  int v19 = v25 & 1;
  uint64_t v20 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  id v21 = v26;
  id v22 = sub_241A54BF8(v16, v18, v27, v26, v19, (uint64_t)v12);

  sub_241A54FC8(v16, v18);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v20, v9);
  return v22;
}

uint64_t HKCodableSummaryData.isContentCompatibleWithCurrentVersion.getter()
{
  sub_241A41708(0, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  id v86 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v85 = (char *)&v81 - v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v81 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v81 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  id v14 = (char *)&v81 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v81 - v15;
  uint64_t v17 = sub_241CD7AB0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v87 = (char *)&v81 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v81 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  id v88 = (char *)&v81 - v28;
  MEMORY[0x270FA5388](v27);
  unint64_t v30 = (char *)&v81 - v29;
  if (!objc_msgSend(v0, sel_hasContentData) || !objc_msgSend(v0, sel_hasKindRawValue))
  {
LABEL_29:
    LOBYTE(v31) = 0;
    return v31 & 1;
  }
  uint64_t v84 = v14;
  uint64_t v31 = (char *)objc_msgSend(v0, sel_kindRawValue);
  if (v31)
  {
    uint64_t v82 = v17;
    uint64_t v83 = v18;
    sub_241CDB0D0();

    LOBYTE(v31) = 0;
    switch(_sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0())
    {
      case 1u:
        id v38 = objc_msgSend(v0, sel_contentData);
        if (v38)
        {
          unint64_t v39 = v38;
          uint64_t v40 = sub_241CD6AE0();
          unint64_t v42 = v41;

          uint64_t v43 = (void *)sub_241CD6AD0();
          sub_241A37374(v40, v42);
        }
        else
        {
          uint64_t v43 = 0;
        }
        uint64_t v66 = v82;
        uint64_t v67 = v83;
        id v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F465E0]), sel_initWithData_, v43);

        if (!v68) {
          goto LABEL_29;
        }
        sub_241A313AC(0, &qword_26B030440);
        sub_241A54FDC((unint64_t *)&qword_26B030438, &qword_26B030440);
        sub_241CD8A10();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v8, 1, v66) == 1)
        {

          int v57 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
          uint64_t v58 = (uint64_t)v8;
          goto LABEL_28;
        }
        (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v87, v8, v66);
        id v74 = objc_msgSend(v68, sel_kindRawValue);
        if (!v74
          || (id v75 = v74,
              sub_241CDB0D0(),
              v75,
              _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0() == 22))
        {
          uint64_t v79 = 1;
          uint64_t v76 = (uint64_t)v85;
        }
        else
        {
          uint64_t v76 = (uint64_t)v85;
          sub_241CD7A80();
          uint64_t v79 = 0;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v76, v79, 1, v66);
        uint64_t v80 = v87;
        LOBYTE(v31) = sub_241CD7A70();

        sub_241A55F04(v76, &qword_26B032050, MEMORY[0x263F45780]);
        (*(void (**)(char *, uint64_t))(v67 + 8))(v80, v66);
        return v31 & 1;
      case 2u:
        id v44 = objc_msgSend(v0, sel_contentData);
        if (v44)
        {
          uint64_t v45 = v44;
          uint64_t v46 = sub_241CD6AE0();
          unint64_t v48 = v47;

          uint64_t v49 = (void *)sub_241CD6AD0();
          sub_241A37374(v46, v48);
        }
        else
        {
          uint64_t v49 = 0;
        }
        uint64_t v61 = v82;
        uint64_t v69 = v83;
        uint64_t v31 = v84;
        id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46650]), sel_initWithData_, v49);

        if (!v60) {
          goto LABEL_29;
        }
        sub_241A313AC(0, &qword_26B030450);
        sub_241A54FDC(&qword_26B030448, &qword_26B030450);
        uint64_t v16 = v86;
        sub_241CD8A10();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v16, 1, v61) == 1) {
          goto LABEL_27;
        }
        (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v21, v16, v61);
        id v77 = v88;
        sub_241CD7A80();
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v31, v77, v61);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v31, 0, 1, v61);
        uint64_t v78 = (uint64_t)v31;
        LOBYTE(v31) = sub_241CD7A70();

        sub_241A55F04(v78, &qword_26B032050, MEMORY[0x263F45780]);
        unint64_t v64 = *(void (**)(char *, uint64_t))(v69 + 8);
        v64(v77, v61);
        unint64_t v65 = v21;
        goto LABEL_36;
      case 3u:
        id v50 = objc_msgSend(v0, sel_contentData);
        if (v50)
        {
          uint64_t v51 = sub_241CD6AE0();
          unint64_t v53 = v52;

          id v50 = (id)sub_241CD6AD0();
          sub_241A37374(v51, v53);
        }
        uint64_t v54 = v82;
        uint64_t v55 = v83;
        id v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F465D0]), sel_initWithData_, v50);

        if (!v56) {
          goto LABEL_29;
        }
        sub_241A313AC(0, &qword_268D421A0);
        sub_241A54FDC(&qword_268D421A8, &qword_268D421A0);
        sub_241CD8A10();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v11, 1, v54) == 1)
        {

          int v57 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
          uint64_t v58 = (uint64_t)v11;
          goto LABEL_28;
        }
        (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v26, v11, v54);
        char v71 = v88;
        sub_241CD7A80();
        uint64_t v72 = (uint64_t)v84;
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v84, v71, v54);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v72, 0, 1, v54);
        LOBYTE(v31) = sub_241CD7A70();

        sub_241A55F04(v72, &qword_26B032050, MEMORY[0x263F45780]);
        id v73 = *(void (**)(char *, uint64_t))(v55 + 8);
        v73(v71, v54);
        v73(v26, v54);
        return v31 & 1;
      case 4u:
        return v31 & 1;
      default:
        id v32 = objc_msgSend(v0, sel_contentData);
        if (v32)
        {
          uint64_t v33 = v32;
          uint64_t v34 = sub_241CD6AE0();
          unint64_t v36 = v35;

          uint64_t v37 = (void *)sub_241CD6AD0();
          sub_241A37374(v34, v36);
        }
        else
        {
          uint64_t v37 = 0;
        }
        uint64_t v59 = v83;
        id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46498]), sel_initWithData_, v37);

        if (!v60) {
          goto LABEL_29;
        }
        sub_241A313AC(0, &qword_26B030428);
        sub_241A54FDC(&qword_26B030420, &qword_26B030428);
        sub_241CD8A10();
        uint64_t v61 = v82;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v16, 1, v82) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v30, v16, v61);
          id v62 = v88;
          sub_241CD7A80();
          uint64_t v63 = (uint64_t)v84;
          (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v84, v62, v61);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v63, 0, 1, v61);
          LOBYTE(v31) = sub_241CD7A70();

          sub_241A55F04(v63, &qword_26B032050, MEMORY[0x263F45780]);
          unint64_t v64 = *(void (**)(char *, uint64_t))(v59 + 8);
          v64(v62, v61);
          unint64_t v65 = v30;
LABEL_36:
          v64(v65, v61);
          return v31 & 1;
        }
LABEL_27:

        int v57 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
        uint64_t v58 = (uint64_t)v16;
LABEL_28:
        sub_241A55F04(v58, &qword_26B032050, v57);
        break;
    }
    goto LABEL_29;
  }
  return v31 & 1;
}

uint64_t HKCodableSummaryCurrentValue.kind.getter()
{
  id v1 = objc_msgSend(v0, sel_kindRawValue);
  if (!v1) {
    return 22;
  }
  uint64_t v2 = v1;
  sub_241CDB0D0();

  return _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
}

uint64_t static HKCodableSummaryCurrentValue.currentCodeVersion(for:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  if (a1 == 22)
  {
    uint64_t v3 = sub_241CD7AB0();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    uint64_t v6 = v3;
    uint64_t v7 = a2;
    uint64_t v8 = 1;
  }
  else
  {
    sub_241CD7A80();
    uint64_t v4 = sub_241CD7AB0();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    uint64_t v6 = v4;
    uint64_t v7 = a2;
    uint64_t v8 = 0;
  }

  return v5(v7, v8, 1, v6);
}

id (*sub_241A4540C(uint64_t a1))(uint64_t)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasLatestSupportedVersion);
  return sub_241A56060;
}

id (*sub_241A45460(void *a1))(uint64_t)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_latestSupportedVersion);
  return sub_241A56064;
}

id (*sub_241A454B4(uint64_t a1))(uint64_t)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasMinimumSupportedVersion);
  return sub_241A56068;
}

id (*sub_241A45508(void *a1))(uint64_t)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_minimumSupportedVersion);
  return sub_241A5606C;
}

unint64_t HKCodableSummaryCurrentValue.Kind.rawValue.getter(char a1)
{
  unint64_t result = 0x7974697669746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6472754262694661;
      break;
    case 2:
      unint64_t result = 0x7078456F69647561;
      break;
    case 3:
      unint64_t result = 0x6172676F69647561;
      break;
    case 4:
      unint64_t result = 0x4D65636E616C6162;
      break;
    case 5:
      unint64_t result = 0x657250646F6F6C62;
      break;
    case 6:
      unint64_t result = 0x79726F6765746163;
      break;
    case 7:
      unint64_t result = 0x69466F6964726163;
      break;
    case 8:
    case 19:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 929325415;
      break;
    case 10:
      unint64_t result = 0x6563655274736F6DLL;
      break;
    case 11:
      unint64_t result = 0x617461446F6ELL;
      break;
    case 12:
      unint64_t result = 0x46676E696F676E6FLL;
      break;
    case 13:
      unint64_t result = 963733616;
      break;
    case 14:
      unint64_t result = 0x797469746E617571;
      break;
    case 15:
      unint64_t result = 0x7065656C73;
      break;
    case 16:
      unint64_t result = 0x4D664F6574617473;
      break;
    case 17:
      unint64_t result = 0x69726550656D6974;
      break;
    case 18:
      unint64_t result = 0xD000000000000012;
      break;
    case 20:
      unint64_t result = 0xD000000000000015;
      break;
    case 21:
      unint64_t result = 0x7461777265646E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_241A45850(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = HKCodableSummaryCurrentValue.Kind.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == HKCodableSummaryCurrentValue.Kind.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_241CDC100();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_241A458DC()
{
  char v1 = *v0;
  sub_241CDC1D0();
  HKCodableSummaryCurrentValue.Kind.rawValue.getter(v1);
  sub_241CDB170();
  swift_bridgeObjectRelease();
  return sub_241CDC200();
}

uint64_t sub_241A45940()
{
  HKCodableSummaryCurrentValue.Kind.rawValue.getter(*v0);
  sub_241CDB170();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241A45994()
{
  char v1 = *v0;
  sub_241CDC1D0();
  HKCodableSummaryCurrentValue.Kind.rawValue.getter(v1);
  sub_241CDB170();
  swift_bridgeObjectRelease();
  return sub_241CDC200();
}

uint64_t sub_241A459F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_241A45A24@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = HKCodableSummaryCurrentValue.Kind.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id HKCodableSummaryCurrentValue.unwrappedValue()()
{
  id v1 = objc_msgSend(v0, sel_kindRawValue);
  if (!v1) {
    return 0;
  }
  char v2 = v1;
  sub_241CDB0D0();

  unsigned __int8 v3 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
  if (v3 == 22) {
    return 0;
  }

  return sub_241A45AE0(v3);
}

id sub_241A45AE0(unsigned __int8 a1)
{
  if (!objc_msgSend(v1, sel_hasValueData)) {
    return 0;
  }
  id v3 = (id)sub_241A53C70(a1);
  if (v3)
  {
    id v4 = objc_msgSend(v1, sel_valueData);
    if (v4)
    {
      uint64_t v5 = sub_241CD6AE0();
      unint64_t v7 = v6;

      id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v4 = (id)sub_241CD6AD0();
      sub_241A37374(v5, v7);
    }
    else
    {
      id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    }
    id v3 = objc_msgSend(v8, sel_initWithData_, v4);
  }
  return v3;
}

uint64_t HKCodableSummaryCurrentValue.queryConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  uint64_t v3 = sub_241CDA1A0();
  MEMORY[0x270FA5388](v3);
  if (objc_msgSend(v1, sel_hasQueryConfigurationData)
    && (id v4 = objc_msgSend(v1, sel_queryConfigurationData)) != 0)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_241CD6AE0();
    unint64_t v8 = v7;

    sub_241CD6710();
    swift_allocObject();
    sub_241CD6700();
    uint64_t v9 = sub_241CD9970();
    sub_241A55020(&qword_26B0321E8, MEMORY[0x263F46CA8]);
    sub_241CD66F0();
    sub_241A37374(v6, v8);
    swift_release();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v13 = a1;
    uint64_t v14 = 0;
    uint64_t v15 = v9;
  }
  else
  {
    uint64_t v10 = sub_241CD9970();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v15 = v10;
    uint64_t v13 = a1;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

uint64_t static HKCodableSummaryAudiogramValue.currentCodeVersion.getter()
{
  return sub_241CD7A80();
}

id HKCodableSummaryCurrentValue.init(categoryValue:queryConfiguration:supplementaryValue:metadata:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_241A4605C(a1, a2, a3, a4, 6);
}

id sub_241A4605C(void *a1, uint64_t a2, void *a3, uint64_t a4, int a5)
{
  int v21 = a5;
  sub_241A41708(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v20 - v10;
  id result = objc_msgSend(a1, sel_data);
  if (result)
  {
    uint64_t v13 = result;
    uint64_t v14 = sub_241CD6AE0();
    unint64_t v16 = v15;

    uint64_t v17 = sub_241CD9970();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v11, a2, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v11, 0, 1, v17);
    uint64_t v23 = 0;
    memset(v22, 0, sizeof(v22));
    id v19 = sub_241A54648(v14, v16, v21, (uint64_t)v11, (uint64_t)a3, a4, (uint64_t)v22);

    sub_241A37374(v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a2, v17);
    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCurrentValue.init(timePeriodValue:queryConfiguration:supplementaryValue:metadata:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_241A41708(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v18 - v9;
  id result = objc_msgSend(a1, sel_data);
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = sub_241CD6AE0();
    unint64_t v15 = v14;

    unint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
    sub_241A55068(a2, (uint64_t)v10, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    uint64_t v19 = 0;
    memset(v18, 0, sizeof(v18));
    id v17 = sub_241A54648(v13, v15, 17, (uint64_t)v10, (uint64_t)a3, a4, (uint64_t)v18);

    sub_241A37374(v13, v15);
    sub_241A55F04(a2, (unint64_t *)&qword_26B0321F0, v16);
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCurrentValue.init(cardioFitnessValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A466E4(a1, a2, a3, 7);
}

id HKCodableSummaryCurrentValue.init(sleepDurationValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 15);
}

id HKCodableSummaryCurrentValue.init(audioExposureValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 2);
}

id sub_241A463CC(void *a1, uint64_t a2, void *a3, char a4)
{
  sub_241A41708(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v18 - v9;
  id result = objc_msgSend(a1, sel_data);
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = sub_241CD6AE0();
    unint64_t v15 = v14;

    unint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
    sub_241A55068(a2, (uint64_t)v10, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    uint64_t v19 = 0;
    memset(v18, 0, sizeof(v18));
    id v17 = sub_241A54648(v13, v15, a4, (uint64_t)v10, (uint64_t)a3, 0, (uint64_t)v18);

    sub_241A37374(v13, v15);
    sub_241A55F04(a2, (unint64_t *)&qword_26B0321F0, v16);
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCurrentValue.init(audiogramValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 3);
}

id HKCodableSummaryCurrentValue.init(activitySummaryValue:supplementaryValue:)(void *a1, void *a2)
{
  sub_241A41708(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15[-1] - v5;
  id result = objc_msgSend(a1, sel_data);
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = sub_241CD6AE0();
    unint64_t v11 = v10;

    uint64_t v12 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v15[3] = sub_241A313AC(0, &qword_26B02E818);
    v15[4] = &off_26F5C0A88;
    v15[0] = a1;
    id v13 = sub_241A54648(v9, v11, 0, (uint64_t)v6, (uint64_t)a2, 0, (uint64_t)v15);

    sub_241A37374(v9, v11);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCurrentValue.init(aFibBurdenValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A466E4(a1, a2, a3, 1);
}

id sub_241A466E4(void *a1, uint64_t a2, void *a3, char a4)
{
  sub_241A41708(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)v19 - v9;
  id result = objc_msgSend(a1, sel_data);
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = sub_241CD6AE0();
    unint64_t v15 = v14;

    uint64_t v16 = sub_241CD9970();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v10, a2, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
    uint64_t v20 = 0;
    memset(v19, 0, sizeof(v19));
    id v18 = sub_241A54648(v13, v15, a4, (uint64_t)v10, (uint64_t)a3, 0, (uint64_t)v19);

    sub_241A37374(v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a2, v16);
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCurrentValue.init(bloodPressureValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 5);
}

id HKCodableSummaryCurrentValue.init(electrocardiogramValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 8);
}

id HKCodableSummaryCurrentValue.init(ongoingFactorsValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 12);
}

id HKCodableSummaryCurrentValue.init(visionPrescriptionValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 18);
}

id HKCodableSummaryCurrentValue.init(walkingSteadinessValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 19);
}

id HKCodableSummaryCurrentValue.init(breathingDisturbancesValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 20);
}

id HKCodableSummaryCurrentValue.init(underwaterDepthValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 21);
}

id HKCodableSummaryCurrentValue.init(balanceMetricsValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 4);
}

id HKCodableSummaryCurrentValue.init(stateOfMindValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 16);
}

id HKCodableSummaryCurrentValue.init(gad7Value:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 9);
}

id HKCodableSummaryCurrentValue.init(phq9Value:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 13);
}

id HKCodableSummaryCurrentValue.init(mostRecentRangeValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_241A463CC(a1, a2, a3, 10);
}

void HKCodableSummaryQuantityValue.date.getter()
{
}

id HKCodableSummaryCategoryValue.init(categoryValue:date:)(uint64_t a1, uint64_t a2)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v5 = result;
    objc_msgSend(v5, sel_setCategoryValue_, a1);
    uint64_t v6 = (void *)sub_241CD6C60();
    double v7 = MEMORY[0x245637600]();

    objc_msgSend(v5, sel_setDateData_, v7);
    uint64_t v8 = sub_241CD6D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a2, v8);
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void HKCodableSummaryCategoryValue.date.getter()
{
}

id HKCodableSummaryCardioFitnessValue.init(quantity:date:cardioFitnessLevel:dataConfiguration:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v9 = result;
    sub_241A313AC(0, &qword_26B038918);
    id v10 = v9;
    id v11 = a1;
    uint64_t v12 = (void *)sub_241CDB870();
    objc_msgSend(v10, sel_setValue_, v12);

    uint64_t v13 = (void *)sub_241CD6C60();
    double v14 = MEMORY[0x245637600]();

    objc_msgSend(v10, sel_setDateData_, v14);
    objc_msgSend(v10, sel_setClassificationRawValue_, a3);
    objc_msgSend(v10, sel_setLevelViewDataConfiguration_, a4);

    uint64_t v15 = sub_241CD6D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a2, v15);
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCardioFitnessValue.cardioFitnessLevel.getter()
{
  if (objc_msgSend(v0, sel_hasClassificationRawValue)) {
    return objc_msgSend(v0, sel_classificationRawValue);
  }
  else {
    return 0;
  }
}

void HKCodableSummaryCardioFitnessValue.date.getter()
{
}

id HKCodableSummaryActivityRingsValue.init(activitySummary:date:hasEverHadAWatch:activityResumeDate:)(void *a1, char *a2, int a3, uint64_t a4)
{
  uint64_t v79 = a4;
  int v78 = a3;
  sub_241A41708(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  id v77 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v76 = (char *)&v72 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v72 - v11;
  uint64_t v13 = sub_241CD6D00();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v74 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v73 = (char *)&v72 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  int v21 = (char *)&v72 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v72 - v22;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result)
  {
    __break(1u);
    return result;
  }
  id v25 = result;
  id v75 = a2;
  uint64_t v26 = (void *)sub_241CD6C60();
  double v27 = MEMORY[0x245637600]();

  objc_msgSend(v25, sel_setDateData_, v27);
  objc_msgSend(v25, sel_setActivityMoveMode_, objc_msgSend(a1, sel_activityMoveMode));
  sub_241A313AC(0, &qword_26B038918);
  id v28 = objc_msgSend(a1, sel_activeEnergyBurned);
  uint64_t v29 = (void *)sub_241CDB870();
  objc_msgSend(v25, sel_setActiveEnergyBurned_, v29);

  id v30 = objc_msgSend(a1, sel_activeEnergyBurnedGoal);
  uint64_t v31 = (void *)sub_241CDB870();
  objc_msgSend(v25, sel_setActiveEnergyBurnedGoal_, v31);

  id v32 = objc_msgSend(a1, sel_appleMoveTime);
  uint64_t v33 = (void *)sub_241CDB870();
  objc_msgSend(v25, sel_setAppleMoveTime_, v33);

  id v34 = objc_msgSend(a1, sel_appleMoveTimeGoal);
  unint64_t v35 = (void *)sub_241CDB870();
  objc_msgSend(v25, sel_setAppleMoveTimeGoal_, v35);

  id v36 = objc_msgSend(a1, sel_appleExerciseTime);
  uint64_t v37 = (void *)sub_241CDB870();
  objc_msgSend(v25, sel_setAppleExerciseTime_, v37);

  id v38 = objc_msgSend(a1, sel_appleStandHours);
  unint64_t v39 = (void *)sub_241CDB870();
  objc_msgSend(v25, sel_setAppleStandHours_, v39);

  id v40 = objc_msgSend(a1, sel__creationDate);
  sub_241CD6CB0();

  unint64_t v41 = (void *)sub_241CD6C60();
  uint64_t v42 = v14 + 8;
  uint64_t v80 = *(void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v81 = v14;
  v80(v23, v13);
  double v43 = MEMORY[0x245637600](v41);

  objc_msgSend(v25, sel_setCreationDate_, v43);
  id v44 = objc_msgSend(a1, sel_exerciseTimeGoal);
  if (v44)
  {
    id v45 = v44;
    uint64_t v46 = (void *)sub_241CDB870();
    objc_msgSend(v25, sel_setAppleExerciseTimeGoal_, v46);
  }
  id v47 = objc_msgSend(a1, sel_standHoursGoal);
  if (v47)
  {
    id v48 = v47;
    uint64_t v49 = (void *)sub_241CDB870();
    objc_msgSend(v25, sel_setAppleStandHoursGoal_, v49);
  }
  id v50 = objc_msgSend(a1, sel__startDate);
  if (!v50)
  {
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56);
    v54(v12, 1, 1, v13);
LABEL_10:
    sub_241A55F04((uint64_t)v12, &qword_26B0385B8, MEMORY[0x263F07490]);
    goto LABEL_12;
  }
  uint64_t v51 = v50;
  uint64_t v72 = v42;
  sub_241CD6CB0();

  uint64_t v52 = v81;
  unint64_t v53 = *(void (**)(char *, char *, uint64_t))(v81 + 32);
  v53(v12, v23, v13);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
  v54(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v12, 1, v13) == 1) {
    goto LABEL_10;
  }
  v53(v21, v12, v13);
  uint64_t v55 = (void *)sub_241CD6C60();
  double v56 = MEMORY[0x245637600]();

  objc_msgSend(v25, sel_setStartDate_, v56);
  v80(v21, v13);
LABEL_12:
  uint64_t v57 = (uint64_t)v76;
  id v58 = objc_msgSend(a1, sel__endDate);
  uint64_t v59 = v81;
  if (!v58)
  {
    v54((char *)v57, 1, 1, v13);
    goto LABEL_16;
  }
  id v60 = v58;
  sub_241CD6CB0();

  uint64_t v61 = *(void (**)(uint64_t, char *, uint64_t))(v59 + 32);
  v61(v57, v23, v13);
  v54((char *)v57, 0, 1, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v57, 1, v13) == 1)
  {
LABEL_16:
    sub_241A55F04(v57, &qword_26B0385B8, MEMORY[0x263F07490]);
    goto LABEL_17;
  }
  id v62 = v73;
  v61((uint64_t)v73, (char *)v57, v13);
  uint64_t v63 = (void *)sub_241CD6C60();
  double v64 = MEMORY[0x245637600]();

  objc_msgSend(v25, sel_setEndDate_, v64);
  v80(v62, v13);
LABEL_17:
  uint64_t v65 = (uint64_t)v77;
  objc_msgSend(v25, sel_setHasEverHadAWatch_, v78 & 1);
  objc_msgSend(v25, sel_setPaused_, objc_msgSend(a1, sel_isPaused));
  uint64_t v66 = v79;
  sub_241A55068(v79, v65, &qword_26B0385B8, MEMORY[0x263F07490]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v65, 1, v13) == 1)
  {

    uint64_t v67 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_241A55F04(v66, &qword_26B0385B8, MEMORY[0x263F07490]);
    v80(v75, v13);
    sub_241A55F04(v65, &qword_26B0385B8, v67);
  }
  else
  {
    id v68 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v74, v65, v13);
    uint64_t v69 = (void *)sub_241CD6C60();
    double v70 = MEMORY[0x245637600]();

    objc_msgSend(v25, sel_setActivityResumeDate_, v70);
    sub_241A55F04(v66, &qword_26B0385B8, MEMORY[0x263F07490]);
    char v71 = v80;
    v80(v75, v13);
    v71(v68, v13);
  }
  return v25;
}

void HKCodableSummaryActivityRingsValue.date.getter()
{
}

id HKCodableSummaryActivityRingsValue.activitySummary.getter()
{
  id v1 = v0;
  uint64_t v2 = sub_241CD6D00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = 0;
  if (!objc_msgSend(v0, sel_hasActivityMoveMode)) {
    return v6;
  }
  if (!objc_msgSend(v0, sel_hasActiveEnergyBurned)
    || !objc_msgSend(v0, sel_hasActiveEnergyBurnedGoal)
    || !objc_msgSend(v0, sel_hasAppleMoveTime)
    || !objc_msgSend(v0, sel_hasAppleMoveTimeGoal)
    || !objc_msgSend(v0, sel_hasAppleExerciseTime)
    || !objc_msgSend(v0, sel_hasAppleStandHours)
    || !objc_msgSend(v0, sel_hasCreationDate))
  {
    return 0;
  }
  id v7 = objc_msgSend(v0, sel_activityMoveMode);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A090]), sel_init);
  objc_msgSend(v6, sel_setActivityMoveMode_, v7);
  id result = objc_msgSend(v1, sel_activeEnergyBurned);
  if (!result)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v9 = result;
  uint64_t v10 = (void *)sub_241CDB860();

  objc_msgSend(v6, sel_setActiveEnergyBurned_, v10);
  id result = objc_msgSend(v1, sel_activeEnergyBurnedGoal);
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v11 = result;
  uint64_t v12 = (void *)sub_241CDB860();

  objc_msgSend(v6, sel_setActiveEnergyBurnedGoal_, v12);
  id result = objc_msgSend(v1, sel_appleMoveTime);
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v13 = result;
  uint64_t v14 = (void *)sub_241CDB860();

  objc_msgSend(v6, sel_setAppleMoveTime_, v14);
  id result = objc_msgSend(v1, sel_appleMoveTimeGoal);
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v15 = result;
  uint64_t v16 = (void *)sub_241CDB860();

  objc_msgSend(v6, sel_setAppleMoveTimeGoal_, v16);
  id result = objc_msgSend(v1, sel_appleExerciseTime);
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v17 = result;
  uint64_t v18 = (void *)sub_241CDB860();

  objc_msgSend(v6, sel_setAppleExerciseTime_, v18);
  id result = objc_msgSend(v1, sel_appleStandHours);
  if (!result)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v19 = result;
  uint64_t v20 = (void *)sub_241CDB860();

  objc_msgSend(v6, sel_setAppleStandHours_, v20);
  objc_msgSend(v1, sel_creationDate);
  id v21 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v22 = (void *)sub_241CD6C60();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  v23(v5, v2);
  objc_msgSend(v6, sel__setCreationDate_, v22);

  if (objc_msgSend(v1, sel_hasAppleExerciseTimeGoal))
  {
    id result = objc_msgSend(v1, sel_appleExerciseTimeGoal);
    if (result)
    {
      uint64_t v24 = result;
      id v25 = (void *)sub_241CDB860();

      objc_msgSend(v6, sel_setExerciseTimeGoal_, v25);
      goto LABEL_18;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_18:
  if (!objc_msgSend(v1, sel_hasAppleStandHoursGoal))
  {
LABEL_21:
    if (objc_msgSend(v1, sel_hasStartDate))
    {
      objc_msgSend(v1, sel_startDate);
      id v28 = (id)HKDecodeDateForValue();
      sub_241CD6CB0();

      uint64_t v29 = (void *)sub_241CD6C60();
      v23(v5, v2);
      objc_msgSend(v6, sel__setStartDate_, v29);
    }
    if (objc_msgSend(v1, sel_hasEndDate))
    {
      objc_msgSend(v1, sel_endDate);
      id v30 = (id)HKDecodeDateForValue();
      sub_241CD6CB0();

      uint64_t v31 = (void *)sub_241CD6C60();
      v23(v5, v2);
      objc_msgSend(v6, sel__setEndDate_, v31);
    }
    if (objc_msgSend(v1, sel_hasPaused)) {
      id v32 = objc_msgSend(v1, sel_paused);
    }
    else {
      id v32 = 0;
    }
    objc_msgSend(v6, sel_setPaused_, v32);
    return v6;
  }
  id result = objc_msgSend(v1, sel_appleStandHoursGoal);
  if (result)
  {
    uint64_t v26 = result;
    double v27 = (void *)sub_241CDB860();

    objc_msgSend(v6, sel_setStandHoursGoal_, v27);
    goto LABEL_21;
  }
LABEL_38:
  __break(1u);
  return result;
}

id HKCodableSummaryActivityRingsValue.standHoursGoal.getter()
{
  return sub_241A47AD8((SEL *)&selRef_hasAppleStandHoursGoal, (SEL *)&selRef_appleStandHoursGoal);
}

id HKCodableSummaryActivityRingsValue.exerciseTimeGoal.getter()
{
  return sub_241A47AD8((SEL *)&selRef_hasAppleExerciseTimeGoal, (SEL *)&selRef_appleExerciseTimeGoal);
}

id sub_241A47AD8(SEL *a1, SEL *a2)
{
  if (![v2 *a1]) {
    return 0;
  }
  id result = [v2 *a2];
  if (result)
  {
    id v5 = result;
    uint64_t v6 = sub_241CDB860();

    return (id)v6;
  }
  __break(1u);
  return result;
}

id HKCodableSummaryTimePeriodValue.init(timeInterval:date:)(uint64_t a1, double a2)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v5 = result;
    objc_msgSend(v5, sel_setTimeInterval_, a2);
    uint64_t v6 = (void *)sub_241CD6C60();
    double v7 = MEMORY[0x245637600]();

    objc_msgSend(v5, sel_setDateData_, v7);
    uint64_t v8 = sub_241CD6D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummarySleepDurationValue.init(inBedDuration:asleepDuration:endOfSleepDate:)(uint64_t a1, char a2, uint64_t a3, double a4)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v9 = result;
    objc_msgSend(v9, sel_setInBedDuration_, a4);
    if ((a2 & 1) == 0)
    {
      double v10 = *(double *)&a1;
      id v11 = v9;
      objc_msgSend(v11, sel_setAsleepDuration_, v10);
    }
    uint64_t v12 = (void *)sub_241CD6C60();
    double v13 = MEMORY[0x245637600]();

    objc_msgSend(v9, sel_setEndOfSleepTimeIntervalSinceReferenceDate_, v13);
    uint64_t v14 = sub_241CD6D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a3, v14);
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummarySleepDurationValue.hasEndOfSleepDate.getter()
{
  return objc_msgSend(v0, sel_hasEndOfSleepTimeIntervalSinceReferenceDate);
}

void HKCodableSummarySleepDurationValue.endOfSleepDate.getter()
{
}

uint64_t HKCodableSummarySleepDurationValue.endOfSleepDate.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)sub_241CD6C60();
  double v5 = MEMORY[0x245637600]();

  objc_msgSend(v2, sel_setEndOfSleepTimeIntervalSinceReferenceDate_, v5);
  uint64_t v6 = sub_241CD6D00();
  double v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(a1, v6);
}

void (*HKCodableSummarySleepDurationValue.endOfSleepDate.modify(void *a1))(void ***a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_241CD6D00();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  objc_msgSend(v1, sel_endOfSleepTimeIntervalSinceReferenceDate);
  id v7 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  return sub_241A47ED8;
}

void sub_241A47ED8(void ***a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[3];
  uint64_t v4 = (*a1)[4];
  uint64_t v5 = (*a1)[1];
  size_t v6 = (void (**)(void *, void *, void *))(*a1)[2];
  id v7 = **a1;
  if (a2)
  {
    v6[2]((*a1)[3], v4, v5);
    uint64_t v8 = (void *)sub_241CD6C60();
    double v9 = MEMORY[0x245637600]();

    objc_msgSend(v7, sel_setEndOfSleepTimeIntervalSinceReferenceDate_, v9);
    double v10 = v6[1];
    ((void (*)(void *, void *))v10)(v3, v5);
    ((void (*)(void *, void *))v10)(v4, v5);
  }
  else
  {
    id v11 = (void *)sub_241CD6C60();
    double v12 = MEMORY[0x245637600]();

    objc_msgSend(v7, sel_setEndOfSleepTimeIntervalSinceReferenceDate_, v12);
    ((void (*)(void *, void *))v6[1])(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

id HKCodableAFibBurdenValue.decodedDayIndexRange.getter()
{
  if (!objc_msgSend(v0, sel_hasDayIndexRange)) {
    return 0;
  }
  id result = objc_msgSend(v0, sel_dayIndexRange);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_241CDB960();

    return (id)v3;
  }
  __break(1u);
  return result;
}

id HKCodableSummaryAudioExposureValue.init(leqQuantity:secondsListened:daysAggregated:lastUpdatedDate:)(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    double v9 = result;
    sub_241A313AC(0, &qword_26B038918);
    id v10 = v9;
    id v11 = a1;
    double v12 = (void *)sub_241CDB870();
    objc_msgSend(v10, sel_setLeqQuantity_, v12);

    objc_msgSend(v10, sel_setSecondsListened_, a4);
    objc_msgSend(v10, sel_setDaysAggregated_, a2);
    double v13 = (void *)sub_241CD6C60();
    double v14 = MEMORY[0x245637600]();

    objc_msgSend(v10, sel_setLastUpdatedDateData_, v14);
    uint64_t v15 = sub_241CD6D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a3, v15);
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryAudiogramValue.init(audiogram:)(void *a1)
{
  uint64_t v2 = sub_241CD6D00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result) {
    goto LABEL_25;
  }
  id v7 = result;
  id v8 = objc_msgSend(a1, sel_averageLeftEarSensitivity);
  if (v8)
  {
    double v9 = v8;
    sub_241A313AC(0, &qword_26B038918);
    id v10 = v9;
    id v11 = (void *)sub_241CDB870();
    objc_msgSend(v7, sel_setAverageLeftEarSensitivity_, v11);
  }
  id v12 = objc_msgSend(a1, sel_averageRightEarSensitivity);
  if (v12)
  {
    double v13 = v12;
    sub_241A313AC(0, &qword_26B038918);
    id v14 = v13;
    uint64_t v15 = (void *)sub_241CDB870();
    objc_msgSend(v7, sel_setAverageRightEarSensitivity_, v15);
  }
  id v16 = objc_msgSend(a1, sel_minimumSensitivity);
  if (v16)
  {
    uint64_t v17 = v16;
    sub_241A313AC(0, &qword_26B038918);
    id v18 = v17;
    uint64_t v19 = (void *)sub_241CDB870();
    objc_msgSend(v7, sel_setMinimumSensitivity_, v19);
  }
  id v20 = objc_msgSend(a1, sel_maximumSensitivity);
  if (v20)
  {
    id v21 = v20;
    sub_241A313AC(0, &qword_26B038918);
    id v22 = v21;
    uint64_t v23 = (void *)sub_241CDB870();
    objc_msgSend(v7, sel_setMaximumSensitivity_, v23);
  }
  id v24 = objc_msgSend(a1, sel_endDate);
  sub_241CD6CB0();

  id v25 = (void *)sub_241CD6C60();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  double v26 = MEMORY[0x245637600](v25);

  objc_msgSend(v7, sel_setTimestampData_, v26);
  id v27 = objc_msgSend(a1, sel_sensitivityPoints);
  sub_241A313AC(0, &qword_26B030418);
  unint64_t v28 = sub_241CDB2C0();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_12;
    }
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_23:
    id v38 = objc_allocWithZone(MEMORY[0x263EFF980]);
    unint64_t v39 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v40 = objc_msgSend(v38, sel_initWithArray_, v39);

    objc_msgSend(v7, sel_setSensitivityPoints_, v40);
    return v7;
  }
  uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v29) {
    goto LABEL_22;
  }
LABEL_12:
  uint64_t v44 = MEMORY[0x263F8EE78];
  id result = (id)sub_241A520E8(0, v29 & ~(v29 >> 63), 0);
  if ((v29 & 0x8000000000000000) == 0)
  {
    unint64_t v41 = a1;
    uint64_t v30 = v44;
    uint64_t v31 = sub_241A313AC(0, &qword_26B030478);
    for (uint64_t i = 0; i != v29; ++i)
    {
      if ((v28 & 0xC000000000000001) != 0) {
        id v33 = (id)MEMORY[0x245637160](i, v28);
      }
      else {
        id v33 = *(id *)(v28 + 8 * i + 32);
      }
      id v34 = v33;
      id v35 = HKCodableAudiogramSensitivityPoint.init(sensitivityPoint:)(v34);
      uint64_t v43 = v31;

      *(void *)&long long v42 = v35;
      uint64_t v44 = v30;
      unint64_t v37 = *(void *)(v30 + 16);
      unint64_t v36 = *(void *)(v30 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_241A520E8(v36 > 1, v37 + 1, 1);
        uint64_t v30 = v44;
      }
      *(void *)(v30 + 16) = v37 + 1;
      sub_241A54AA0(&v42, (_OWORD *)(v30 + 32 * v37 + 32));
    }
    swift_bridgeObjectRelease();
    a1 = v41;
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

id HKCodableAudiogramSensitivityPoint.init(sensitivityPoint:)(void *a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v3 = result;
  sub_241A313AC(0, &qword_26B038918);
  id v4 = v3;
  id v5 = objc_msgSend(a1, sel_frequency);
  size_t v6 = (void *)sub_241CDB870();
  objc_msgSend(v4, sel_setFrequency_, v6);

  id v7 = objc_msgSend(a1, sel_tests);
  sub_241A313AC(0, &qword_26B031F20);
  unint64_t v8 = sub_241CDB2C0();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    unint64_t v12 = MEMORY[0x263F8EE78];
LABEL_13:
    sub_241A48B5C(v12, &qword_26B031F30);
    swift_bridgeObjectRelease();
    id v13 = objc_allocWithZone(MEMORY[0x263EFF980]);
    id v14 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v13, sel_initWithArray_, v14);

    objc_msgSend(v4, sel_setTests_, v15);
    return v4;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9) {
    goto LABEL_12;
  }
LABEL_4:
  unint64_t v16 = MEMORY[0x263F8EE78];
  id result = (id)sub_241CDBE80();
  if ((v9 & 0x8000000000000000) == 0)
  {
    sub_241A313AC(0, &qword_26B031F30);
    uint64_t v10 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x245637160](v10, v8);
      }
      else {
        id v11 = *(id *)(v8 + 8 * v10 + 32);
      }
      ++v10;
      HKCodableAudiogramSensitivityTest.init(test:)(v11);
      sub_241CDBE60();
      sub_241CDBE90();
      sub_241CDBEA0();
      sub_241CDBE70();
    }
    while (v9 != v10);
    unint64_t v12 = v16;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

void HKCodableSummaryAudiogramValue.timestamp.getter()
{
}

id HKCodableAudiogramSensitivityTest.init(test:)(void *a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v3 = result;
    sub_241A313AC(0, &qword_26B038918);
    id v4 = v3;
    id v5 = objc_msgSend(a1, sel_sensitivity);
    size_t v6 = (void *)sub_241CDB870();
    objc_msgSend(v4, sel_setSensitivity_, v6);

    objc_msgSend(v4, sel_setMasked_, objc_msgSend(a1, sel_masked));
    objc_msgSend(v4, sel_setSide_, objc_msgSend(a1, sel_side));
    objc_msgSend(v4, sel_setType_, objc_msgSend(a1, sel_type));
    id v7 = objc_msgSend(a1, sel_clampingRange);
    id v8 = v4;
    if (v7)
    {
      uint64_t v9 = v7;
      sub_241A313AC(0, &qword_268D421B0);
      id v10 = v9;
      id v8 = HKCodableAudiogramSensitivityPointClampingRange.init(clampingRange:)(v10);
      objc_msgSend(v4, sel_setClampingRange_, v8);
    }
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241A48B5C(unint64_t a1, unint64_t *a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (!v4) {
    return v5;
  }
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t result = sub_241A520E8(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        MEMORY[0x245637160](i, a1);
        sub_241A313AC(0, a2);
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_241A520E8(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v9 = *(void *)(v5 + 16);
        unint64_t v8 = *(void *)(v5 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_241A520E8(v8 > 1, v9 + 1, 1);
          uint64_t v5 = v15;
        }
        *(void *)(v5 + 16) = v9 + 1;
        sub_241A54AA0(v14, (_OWORD *)(v5 + 32 * v9 + 32));
      }
    }
    else
    {
      id v10 = (id *)(a1 + 32);
      sub_241A313AC(0, a2);
      do
      {
        id v11 = *v10;
        swift_dynamicCast();
        uint64_t v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_241A520E8(0, *(void *)(v5 + 16) + 1, 1);
          uint64_t v5 = v15;
        }
        unint64_t v13 = *(void *)(v5 + 16);
        unint64_t v12 = *(void *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_241A520E8(v12 > 1, v13 + 1, 1);
          uint64_t v5 = v15;
        }
        *(void *)(v5 + 16) = v13 + 1;
        sub_241A54AA0(v14, (_OWORD *)(v5 + 32 * v13 + 32));
        ++v10;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_241A48DB0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_241A520E8(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_241A520E8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_241A520E8(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_241A54AA0(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_241A48ED8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_241A521F8(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    uint64_t v5 = MEMORY[0x263F8D310];
    do
    {
      uint64_t v7 = *(v4 - 1);
      uint64_t v6 = *v4;
      uint64_t v14 = v2;
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
      {
        sub_241A521F8(v9 > 1, v8 + 1, 1);
        uint64_t v2 = v14;
      }
      v4 += 2;
      uint64_t v12 = v5;
      unint64_t v13 = sub_241A55A74();
      *(void *)&long long v11 = v7;
      *((void *)&v11 + 1) = v6;
      *(void *)(v2 + 16) = v8 + 1;
      sub_241A5598C(&v11, v2 + 40 * v8 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_241A48FD4(unint64_t a1)
{
  return sub_241A48B5C(a1, &qword_26B038438);
}

id HKCodableAudiogramSensitivityPointClampingRange.init(clampingRange:)(void *a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v3 = result;
    id v4 = objc_msgSend(a1, sel_upperBound);
    if (v4)
    {
      uint64_t v5 = v4;
      sub_241A313AC(0, &qword_26B038918);
      id v6 = v5;
      uint64_t v7 = (void *)sub_241CDB870();
      objc_msgSend(v3, sel_setUpperBound_, v7);
    }
    id v8 = objc_msgSend(a1, sel_lowerBound);
    unint64_t v9 = v3;
    if (v8)
    {
      id v10 = v8;
      sub_241A313AC(0, &qword_26B038918);
      id v11 = v10;
      unint64_t v9 = (void *)sub_241CDB870();
      objc_msgSend(v3, sel_setLowerBound_, v9);
    }
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241A49124(char *a1)
{
  sub_241A55554();
  uint64_t v63 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  double v64 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v59 = (char *)v55 - v5;
  sub_241A555BC(0, &qword_26B036820, MEMORY[0x263F8D870]);
  id v68 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v67 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v66 = (char *)v55 - v9;
  sub_241A555BC(0, (unint64_t *)&qword_26B0367B8, MEMORY[0x263F8D1A0]);
  uint64_t v60 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  id v62 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (uint64_t)v55 - v13;
  uint64_t v14 = sub_241CDAF60();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v65 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v20 = (char *)v55 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v69 = (char *)v55 - v22;
  MEMORY[0x270FA5388](v21);
  id v24 = (char *)v55 - v23;
  uint64_t result = (uint64_t)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v26 = (id)result;
    uint64_t v27 = sub_241CD6FF0();
    MEMORY[0x270FA5388](v27);
    v55[-2] = a1;
    unint64_t v28 = sub_241A4221C((void (*)(uint64_t *__return_ptr, uint64_t))sub_241A55658, (uint64_t)&v55[-4], v27);
    swift_bridgeObjectRelease();
    sub_241A48B5C(v28, &qword_26B036910);
    swift_bridgeObjectRelease();
    id v29 = objc_allocWithZone(MEMORY[0x263EFF980]);
    uint64_t v30 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v29, sel_initWithArray_, v30);

    objc_msgSend(v26, sel_setBaselineComparisons_, v31);
    sub_241CD7090();
    uint64_t v32 = sub_241CDAF50();
    uint64_t v33 = v15;
    id v35 = (char *)(v15 + 8);
    id v34 = *(void (**)(char *, uint64_t))(v15 + 8);
    v34(v24, v14);
    id v57 = v26;
    objc_msgSend(v26, sel_setMorningIndex_, v32);
    v55[1] = sub_241A313AC(0, &qword_26B0368E0);
    uint64_t v36 = (uint64_t)v66;
    sub_241CD70B0();
    uint64_t v58 = v33;
    unint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
    v37(v24, v36, v14);
    sub_241A55678(v36);
    uint64_t v38 = (uint64_t)v67;
    uint64_t v66 = a1;
    sub_241CD70B0();
    uint64_t v39 = v38 + v68[9];
    double v56 = v37;
    v37(v20, v39, v14);
    sub_241A55678(v38);
    id v40 = v65;
    sub_241CDAF10();
    sub_241CDAF20();
    v34(v40, v14);
    uint64_t v67 = v35;
    id v68 = (int *)v34;
    v34(v20, v14);
    sub_241A55020(&qword_26B0356B8, MEMORY[0x263F090E8]);
    uint64_t result = sub_241CDB030();
    if (result)
    {
      uint64_t v41 = v63;
      long long v42 = v59;
      uint64_t v43 = &v59[*(int *)(v63 + 48)];
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
      v44(v59, v24, v14);
      uint64_t v65 = v43;
      v44(v43, v69, v14);
      id v45 = v64;
      uint64_t v46 = &v64[*(int *)(v41 + 48)];
      id v47 = (void (*)(char *, char *, uint64_t))v56;
      v56(v64, (uint64_t)v42, v14);
      v47(v46, v43, v14);
      uint64_t v48 = (uint64_t)v62;
      v44(v62, v45, v14);
      uint64_t v49 = (void (*)(char *, uint64_t))v68;
      ((void (*)(char *, uint64_t))v68)(v46, v14);
      id v50 = &v45[*(int *)(v41 + 48)];
      v44(v45, v42, v14);
      v44(v50, v65, v14);
      v44((char *)(v48 + *(int *)(v60 + 36)), v50, v14);
      v49(v45, v14);
      sub_241A55764(v48, v61, (unint64_t *)&qword_26B0367B8, MEMORY[0x263F8D1A0]);
      uint64_t v51 = sub_241CDB700();
      uint64_t v52 = (void *)MEMORY[0x245636CB0](v51);
      id v53 = v57;
      objc_msgSend(v57, sel_setBaselineRange_, v52);

      uint64_t v54 = sub_241CD70F0();
      (*(void (**)(char *, uint64_t))(*(void *)(v54 - 8) + 8))(v66, v54);
      return (uint64_t)v53;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_241A4983C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v3 = sub_241CD7020();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD7190();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v16 - v12;
  sub_241CD70C0();
  sub_241A313AC(0, &qword_26B036910);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  id v14 = sub_241A49A38((uint64_t)v6, (uint64_t)v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  *uint64_t v17 = v14;
  return result;
}

id sub_241A49A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD71E0();
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A41708(0, &qword_26B0354C0, MEMORY[0x263F42CA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = sub_241CD6FC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = sub_241CD7080();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v20 = result;
    uint64_t v27 = a1;
    objc_msgSend(v20, sel_setDataType_, sub_241CD7010());
    sub_241A313AC(0, &qword_26B036900);
    sub_241CD7180();
    id v21 = sub_241A4BD50((uint64_t)v18);
    objc_msgSend(v20, sel_setAggregate_, v21);

    sub_241CD7160();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_241A55F04((uint64_t)v8, &qword_26B0354C0, MEMORY[0x263F42CA0]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
      sub_241A313AC(0, &qword_26B0368F8);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
      id v22 = sub_241A4C260((uint64_t)v13);
      objc_msgSend(v20, sel_setBaseline_, v22);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
    uint64_t v23 = (uint64_t)v28;
    sub_241A313AC(0, &qword_26B036918);
    sub_241CD7130();
    id v24 = sub_241A4B854(v23);
    objc_msgSend(v20, sel_setAvailability_, v24);

    uint64_t v25 = sub_241CD7190();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a2, v25);
    uint64_t v26 = sub_241CD7020();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v27, v26);
    return v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241A49E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A41708(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v145 = (char *)&v129 - v8;
  uint64_t v9 = sub_241CDAF60();
  MEMORY[0x270FA5388](v9 - 8);
  id v144 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A41708(0, &qword_26B0354F8, MEMORY[0x263F42E58], v6);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v143 = (char *)&v129 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v147 = (char *)&v129 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v150 = (char *)&v129 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v154 = (char *)&v129 - v19;
  MEMORY[0x270FA5388](v18);
  id v21 = (char *)&v129 - v20;
  uint64_t v158 = sub_241CD7020();
  uint64_t v160 = *(void *)(v158 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v158);
  uint64_t v146 = (char *)&v129 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v149 = (char *)&v129 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v152 = (char *)&v129 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v129 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v129 - v31;
  uint64_t v157 = sub_241CD7190();
  v155 = *(void (***)(char *, unint64_t, uint64_t))(v157 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v157);
  uint64_t v140 = (char *)&v129 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  id v139 = (char *)&v129 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  id v138 = (char *)&v129 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  id v137 = (char *)&v129 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v142 = (char *)&v129 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v136 = (char *)&v129 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v148 = (char *)&v129 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v151 = (char *)&v129 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  v153 = (char *)&v129 - v50;
  MEMORY[0x270FA5388](v49);
  uint64_t v156 = (char *)&v129 - v51;
  sub_241A556F0();
  MEMORY[0x270FA5388](v52 - 8);
  uint64_t v54 = (char *)&v129 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A555BC(0, &qword_26B036820, MEMORY[0x263F8D870]);
  uint64_t v56 = v55;
  uint64_t v57 = *(void *)(v55 - 8);
  uint64_t v58 = MEMORY[0x270FA5388](v55);
  uint64_t v141 = (uint64_t)&v129 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v58);
  uint64_t v159 = (uint64_t)&v129 - v60;
  id v161 = v3;
  id v61 = objc_msgSend(v3, sel_baselineComparisons);
  if (v61)
  {
    id v62 = v61;
    unint64_t v162 = 0;
    sub_241A313AC(0, &qword_26B036910);
    sub_241CDB2B0();

    unint64_t v64 = v162;
    if (v162)
    {
      uint64_t v134 = a2;
      MEMORY[0x270FA5388](v63);
      *(&v129 - 2) = a1;
      unint64_t v65 = sub_241AFE5C0((void (*)(id *))sub_241A55D64, (uint64_t)(&v129 - 4), v64);
      swift_bridgeObjectRelease();
      if (*(void *)(v65 + 16))
      {
        sub_241A55D80();
        uint64_t v66 = sub_241CDBF90();
      }
      else
      {
        uint64_t v66 = MEMORY[0x263F8EE80];
      }
      unint64_t v162 = v66;
      uint64_t v70 = swift_bridgeObjectRetain();
      sub_241A53468(v70, 1, &v162);
      swift_bridgeObjectRelease();
      unint64_t v135 = v162;
      id v71 = objc_msgSend(v161, sel_baselineRange);
      if (!v71)
      {
        __break(1u);
        uint64_t result = swift_unexpectedError();
        __break(1u);
        return result;
      }
      uint64_t v72 = v71;
      sub_241CDB960();
      char v74 = v73;

      if (v74)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v54, 1, 1, v56);
        uint64_t v76 = v134;
      }
      else
      {
        sub_241CDB6F0();
        int v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48))(v54, 1, v56);
        uint64_t v76 = v134;
        if (v75 != 1)
        {
          sub_241A55764((uint64_t)v54, v159, &qword_26B036820, MEMORY[0x263F8D870]);
          uint64_t v77 = *MEMORY[0x263F42CC8];
          uint64_t v78 = v160;
          uint64_t v79 = v158;
          uint64_t v133 = *(void (**)(char *, uint64_t, uint64_t))(v160 + 104);
          v133(v32, v77, v158);
          unint64_t v80 = v135;
          if (*(void *)(v135 + 16))
          {
            unint64_t v81 = sub_241C0B674((uint64_t)v32);
            uint64_t v82 = v155;
            if (v83)
            {
              uint64_t v84 = v157;
              v155[2](v21, *(void *)(v80 + 56) + (void)v155[9] * v81, v157);
              uint64_t v85 = v82[7];
              ((void (*)(char *, void, uint64_t, uint64_t))v85)(v21, 0, 1, v84);
            }
            else
            {
              uint64_t v85 = v155[7];
              uint64_t v84 = v157;
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v85)(v21, 1, 1, v157);
            }
            uint64_t v76 = v134;
          }
          else
          {
            uint64_t v82 = v155;
            uint64_t v85 = v155[7];
            uint64_t v84 = v157;
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v85)(v21, 1, 1, v157);
          }
          id v86 = *(void (***)(char *, unint64_t, uint64_t))(v78 + 8);
          uint64_t v160 = v78 + 8;
          v155 = v86;
          ((void (*)(char *, uint64_t))v86)(v32, v79);
          uint64_t v87 = v82[6];
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v87)(v21, 1, v84) == 1)
          {
            sub_241A55678(v159);
            swift_release();
            id v88 = (uint64_t (*)(uint64_t))MEMORY[0x263F42E58];
            uint64_t v89 = (uint64_t)v21;
          }
          else
          {
            uint64_t v132 = v85;
            uint64_t v90 = v82[4];
            uint64_t v131 = v82 + 4;
            uint64_t v130 = v90;
            v90(v156, (unint64_t)v21, v84);
            v133(v30, *MEMORY[0x263F42CB0], v79);
            unint64_t v91 = v135;
            if (*(void *)(v135 + 16))
            {
              unint64_t v92 = sub_241C0B674((uint64_t)v30);
              uint64_t v93 = v154;
              if (v94)
              {
                v82[2](v154, *(void *)(v91 + 56) + (void)v82[9] * v92, v157);
                uint64_t v95 = 0;
              }
              else
              {
                uint64_t v95 = 1;
              }
              uint64_t v76 = v134;
            }
            else
            {
              uint64_t v95 = 1;
              uint64_t v93 = v154;
            }
            uint64_t v96 = v93;
            uint64_t v97 = v157;
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v132)(v96, v95, 1, v157);
            uint64_t v98 = v30;
            uint64_t v99 = v97;
            uint64_t v100 = v154;
            uint64_t v101 = v158;
            ((void (*)(char *, uint64_t))v155)(v98, v158);
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v87)(v100, 1, v99) == 1)
            {
              swift_release();
              ((void (*)(char *, uint64_t))v82[1])(v156, v99);
            }
            else
            {
              v130(v153, (unint64_t)v100, v99);
              uint64_t v102 = (uint64_t)v152;
              v133(v152, *MEMORY[0x263F42CB8], v101);
              unint64_t v103 = v135;
              if (*(void *)(v135 + 16))
              {
                unint64_t v104 = sub_241C0B674(v102);
                uint64_t v100 = v150;
                if (v105)
                {
                  v82[2](v150, *(void *)(v103 + 56) + (void)v82[9] * v104, v99);
                  uint64_t v106 = 0;
                }
                else
                {
                  uint64_t v106 = 1;
                }
                uint64_t v76 = v134;
              }
              else
              {
                uint64_t v106 = 1;
                uint64_t v100 = v150;
              }
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v132)(v100, v106, 1, v99);
              uint64_t v107 = v158;
              ((void (*)(char *, uint64_t))v155)(v152, v158);
              if (((unsigned int (*)(char *, uint64_t, uint64_t))v87)(v100, 1, v99) == 1)
              {
                swift_release();
                uint64_t v108 = v82[1];
                ((void (*)(char *, uint64_t))v108)(v153, v99);
              }
              else
              {
                v130(v151, (unint64_t)v100, v99);
                uint64_t v109 = (uint64_t)v149;
                v133(v149, *MEMORY[0x263F42CC0], v107);
                unint64_t v110 = v135;
                if (*(void *)(v135 + 16))
                {
                  unint64_t v111 = sub_241C0B674(v109);
                  uint64_t v100 = v147;
                  if (v112)
                  {
                    v82[2](v147, *(void *)(v110 + 56) + (void)v82[9] * v111, v99);
                    uint64_t v113 = 0;
                  }
                  else
                  {
                    uint64_t v113 = 1;
                  }
                  uint64_t v76 = v134;
                }
                else
                {
                  uint64_t v113 = 1;
                  uint64_t v100 = v147;
                }
                ((void (*)(char *, uint64_t, uint64_t, uint64_t))v132)(v100, v113, 1, v99);
                uint64_t v114 = v158;
                ((void (*)(char *, uint64_t))v155)(v149, v158);
                if (((unsigned int (*)(char *, uint64_t, uint64_t))v87)(v100, 1, v99) == 1)
                {
                  swift_release();
                  uint64_t v108 = v82[1];
                  ((void (*)(char *, uint64_t))v108)(v151, v99);
                }
                else
                {
                  v130(v148, (unint64_t)v100, v99);
                  uint64_t v115 = (uint64_t)v146;
                  v133(v146, *MEMORY[0x263F42CA8], v114);
                  unint64_t v116 = v135;
                  if (*(void *)(v135 + 16))
                  {
                    unint64_t v117 = sub_241C0B674(v115);
                    uint64_t v100 = v143;
                    if (v118)
                    {
                      v82[2](v143, *(void *)(v116 + 56) + (void)v82[9] * v117, v99);
                      uint64_t v119 = 0;
                    }
                    else
                    {
                      uint64_t v119 = 1;
                    }
                    uint64_t v76 = v134;
                  }
                  else
                  {
                    uint64_t v119 = 1;
                    uint64_t v100 = v143;
                  }
                  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v132)(v100, v119, 1, v99);
                  swift_release();
                  ((void (*)(char *, uint64_t))v155)(v146, v158);
                  if (((unsigned int (*)(char *, uint64_t, uint64_t))v87)(v100, 1, v99) != 1)
                  {
                    id v121 = v136;
                    v130(v136, (unint64_t)v100, v99);
                    objc_msgSend(v161, sel_morningIndex);
                    sub_241CDAF40();
                    sub_241A557D0(v159, v141);
                    uint64_t v122 = sub_241CD6D00();
                    uint64_t v123 = v99;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v145, 1, 1, v122);
                    id v124 = v82[2];
                    v124(v142, (unint64_t)v156, v99);
                    v124(v137, (unint64_t)v153, v99);
                    v124(v138, (unint64_t)v151, v99);
                    uint64_t v125 = v148;
                    v124(v139, (unint64_t)v148, v123);
                    v124(v140, (unint64_t)v121, v123);
                    uint64_t v126 = v134;
                    sub_241CD70A0();
                    uint64_t v127 = v82[1];
                    ((void (*)(char *, uint64_t))v127)(v121, v123);
                    ((void (*)(char *, uint64_t))v127)(v125, v123);
                    ((void (*)(char *, uint64_t))v127)(v151, v123);
                    ((void (*)(char *, uint64_t))v127)(v153, v123);
                    ((void (*)(char *, uint64_t))v127)(v156, v123);
                    sub_241A55678(v159);
                    uint64_t v128 = sub_241CD70F0();
                    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v126, 0, 1, v128);
                  }
                  uint64_t v108 = v82[1];
                  ((void (*)(char *, uint64_t))v108)(v148, v99);
                  ((void (*)(char *, uint64_t))v108)(v151, v99);
                }
                ((void (*)(char *, uint64_t))v108)(v153, v99);
              }
              ((void (*)(char *, uint64_t))v108)(v156, v99);
            }
            sub_241A55678(v159);
            id v88 = (uint64_t (*)(uint64_t))MEMORY[0x263F42E58];
            uint64_t v89 = (uint64_t)v100;
          }
          sub_241A55F04(v89, &qword_26B0354F8, v88);
          goto LABEL_58;
        }
      }
      swift_release();
      sub_241A55B98((uint64_t)v54, (uint64_t (*)(void))sub_241A556F0);
LABEL_58:
      uint64_t v120 = sub_241CD70F0();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v76, 1, 1, v120);
    }
  }
  uint64_t v67 = sub_241CD70F0();
  id v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56);

  return v68(a2, 1, 1, v67);
}

uint64_t sub_241A4B024@<X0>(void **a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A41708(0, &qword_26B0354D8, MEMORY[0x263F42CD0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = sub_241CD7020();
  uint64_t v32 = *(char **)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A41708(0, &qword_26B0354F8, MEMORY[0x263F42E58], v5);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = sub_241CD7190();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  sub_241A4B420(a2, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    uint64_t v19 = &qword_26B0354F8;
    uint64_t v20 = (uint64_t (*)(uint64_t))MEMORY[0x263F42E58];
    uint64_t v21 = (uint64_t)v13;
LABEL_5:
    sub_241A55F04(v21, v19, v20);
    sub_241A55E2C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v33, 1, 1, v23);
  }
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v22(v17, v13, v14);
  objc_msgSend(v18, sel_dataType);
  sub_241CD7000();
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v32 + 6))(v8, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v19 = &qword_26B0354D8;
    uint64_t v20 = (uint64_t (*)(uint64_t))MEMORY[0x263F42CD0];
    uint64_t v21 = (uint64_t)v8;
    goto LABEL_5;
  }
  uint64_t v30 = (void (*)(uint64_t, char *, uint64_t))v22;
  uint64_t v25 = v31;
  uint64_t v26 = (void (*)(char *, char *, uint64_t))*((void *)v32 + 4);
  v26(v31, v8, v9);
  sub_241A55E2C();
  uint64_t v28 = v27;
  uint64_t v29 = v33;
  uint64_t v32 = &v33[*(int *)(v27 + 48)];
  v26(v33, v25, v9);
  v30((uint64_t)v32, v17, v14);
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v29, 0, 1, v28);
}

id sub_241A4B420@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v29 = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A41708(0, &qword_26B0354C0, MEMORY[0x263F42CA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_241CD7080();
  MEMORY[0x270FA5388](v9 - 8);
  sub_241A41708(0, &qword_26B035500, MEMORY[0x263F42ED8], v5);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = sub_241CD71E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v28 - v18;
  id v20 = objc_msgSend(v3, sel_availability);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_8;
  }
  uint64_t v21 = v20;
  sub_241A4BB40((uint64_t)v12);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_8:
    sub_241A55F04((uint64_t)v12, &qword_26B035500, MEMORY[0x263F42ED8]);
    uint64_t v25 = sub_241CD7190();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a2, 1, 1, v25);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
  id result = objc_msgSend(v3, sel_aggregate);
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v23 = result;
  sub_241A4C3E4(v29);

  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  if (!objc_msgSend(v3, sel_hasBaseline))
  {
    uint64_t v26 = sub_241CD6FC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v8, 1, 1, v26);
    goto LABEL_10;
  }
  id result = objc_msgSend(v3, sel_baseline);
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v24 = result;
  sub_241A4C8FC();

LABEL_10:
  sub_241CD7170();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  uint64_t v27 = sub_241CD7190();
  return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a2, 0, 1, v27);
}

id sub_241A4B854(uint64_t a1)
{
  sub_241A555BC(0, &qword_26B036820, MEMORY[0x263F8D870]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v21 - v8;
  sub_241A556F0();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - v14;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v17 = result;
    sub_241CD71B0();
    sub_241A55E9C((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(void))sub_241A556F0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
    {
      uint64_t v18 = 0;
    }
    else
    {
      sub_241A55764((uint64_t)v13, (uint64_t)v9, &qword_26B036820, MEMORY[0x263F8D870]);
      sub_241A313AC(0, &qword_26B0368E0);
      sub_241A557D0((uint64_t)v9, (uint64_t)v7);
      uint64_t v19 = sub_241CDB720();
      uint64_t v18 = (void *)MEMORY[0x245636CB0](v19);
      sub_241A55678((uint64_t)v9);
    }
    sub_241A55B98((uint64_t)v15, (uint64_t (*)(void))sub_241A556F0);
    objc_msgSend(v17, sel_setAnalyzedRange_, v18);

    objc_msgSend(v17, sel_setCount_, sub_241CD71C0());
    objc_msgSend(v17, sel_setRequiredCount_, sub_241CD71D0());

    uint64_t v20 = sub_241CD71E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(a1, v20);
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241A4BB40@<X0>(uint64_t a1@<X8>)
{
  sub_241A556F0();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v1, sel_hasCount) && objc_msgSend(v1, sel_hasRequiredCount))
  {
    if (!objc_msgSend(v1, sel_hasAnalyzedRange)) {
      goto LABEL_10;
    }
    id result = objc_msgSend(v1, sel_analyzedRange);
    if (result)
    {
      uint64_t v7 = result;
      sub_241CDB960();
      char v9 = v8;

      if ((v9 & 1) == 0)
      {
        sub_241CDB6F0();
LABEL_11:
        objc_msgSend(v1, sel_count);
        objc_msgSend(v1, sel_requiredCount);
        return (id)sub_241CD71A0();
      }
LABEL_10:
      sub_241A555BC(0, &qword_26B036820, MEMORY[0x263F8D870]);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
      goto LABEL_11;
    }
    __break(1u);
  }
  else
  {
    uint64_t v10 = sub_241CD71E0();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    return (id)v11(a1, 1, 1, v10);
  }
  return result;
}

id sub_241A4BD50(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A41708(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v30 - v4;
  sub_241A41708(0, &qword_26B0385B8, MEMORY[0x263F07490], v2);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v30 - v7;
  uint64_t v9 = sub_241CD6D00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v31 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CDAF60();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v17 = result;
    sub_241CD7040();
    uint64_t v18 = sub_241CDAF50();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    objc_msgSend(v17, sel_setMorningIndex_, v18);
    uint64_t v19 = sub_241CD7070();
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      sub_241A313AC(0, &qword_26B038918);
      id v21 = v20;
      uint64_t v22 = (void *)sub_241CDB870();
      objc_msgSend(v17, sel_setQuantity_, v22);
    }
    sub_241CD7060();
    uint64_t v23 = sub_241CD6810();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v5, 1, v23) == 1)
    {
      sub_241A55F04((uint64_t)v5, &qword_26B038F10, MEMORY[0x263F062D0]);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    else
    {
      sub_241CD67B0();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
      {
        uint64_t v26 = v31;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v8, v9);
        uint64_t v27 = (void *)sub_241CD6C60();
        double v28 = MEMORY[0x245637600]();

        objc_msgSend(v17, sel_setLatestSampleEndDate_, v28);
        uint64_t v29 = sub_241CD7080();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a1, v29);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v26, v9);
        return v17;
      }
    }

    uint64_t v25 = sub_241CD7080();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
    sub_241A55F04((uint64_t)v8, &qword_26B0385B8, MEMORY[0x263F07490]);
    return v17;
  }
  __break(1u);
  return result;
}

id sub_241A4C260(uint64_t a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    uint64_t v3 = result;
    sub_241A313AC(0, &qword_26B038918);
    id v4 = v3;
    sub_241CD6FB0();
    uint64_t v5 = (void *)sub_241CDB870();
    objc_msgSend(v4, sel_setMiddle_, v5);

    uint64_t v6 = (void *)sub_241CD6F90();
    id v7 = objc_msgSend(v6, sel_minimum);

    char v8 = (void *)sub_241CDB870();
    objc_msgSend(v4, sel_setMedialRangeMinimum_, v8);

    uint64_t v9 = (void *)sub_241CD6F90();
    id v10 = objc_msgSend(v9, sel_maximum);

    uint64_t v11 = (void *)sub_241CDB870();
    objc_msgSend(v4, sel_setMedialRangeMaximum_, v11);

    uint64_t v12 = sub_241CD6FC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241A4C3E4(void *a1)
{
  uint64_t v2 = v1;
  id v37 = a1;
  uint64_t v3 = sub_241CD7030();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A41708(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v36 = (char *)v33 - v9;
  uint64_t v10 = sub_241CD6D00();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  v33[2] = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v33[1] = (char *)v33 - v13;
  sub_241A41708(0, &qword_26B038F10, MEMORY[0x263F062D0], v7);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v33 - v15;
  uint64_t v17 = sub_241CD6EE0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_241CDAF60();
  MEMORY[0x270FA5388](v21 - 8);
  objc_msgSend(v2, sel_morningIndex);
  sub_241CDAF40();
  uint64_t v22 = *(void (**)(char *, id, uint64_t))(v18 + 16);
  v33[3] = v20;
  v22(v20, v37, v17);
  uint64_t v23 = &off_2650F5000;
  id v24 = 0;
  if (objc_msgSend(v2, sel_hasQuantity))
  {
    id result = objc_msgSend(v2, sel_quantity);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v26 = result;
    id v24 = objc_msgSend(self, sel_createWithCodableQuantity_, result);
  }
  id v37 = v24;
  if (objc_msgSend(v2, sel_hasLatestSampleEndDate))
  {
    objc_msgSend(v2, sel_latestSampleEndDate);
    id v27 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    objc_msgSend(v2, sel_latestSampleEndDate);
    id v28 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v23 = &off_2650F5000;
    sub_241CD67C0();
    uint64_t v29 = sub_241CD6810();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v16, 0, 1, v29);
  }
  else
  {
    uint64_t v30 = sub_241CD6810();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v16, 1, 1, v30);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v36, 1, 1, v35);
  unsigned int v31 = [v2 (SEL)v23[339]];
  uint64_t v32 = (unsigned int *)MEMORY[0x263F42D20];
  if (!v31) {
    uint64_t v32 = (unsigned int *)MEMORY[0x263F42D18];
  }
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *v32, v3);
  return (id)sub_241CD7050();
}

uint64_t sub_241A4C8FC()
{
  int64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_middle);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v6 = v2;
  id v7 = self;
  id v8 = objc_msgSend(v7, sel_createWithCodableQuantity_, v6);

  id v2 = objc_msgSend(v1, sel_medialRangeMinimum);
  if (!v2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v9 = v2;
  id v10 = objc_msgSend(v7, sel_createWithCodableQuantity_, v2);

  id v2 = objc_msgSend(v1, sel_medialRangeMaximum);
  if (!v2)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x270F311F8](v2, v3, v4, v5);
  }
  uint64_t v11 = v2;
  id v12 = objc_msgSend(v7, sel_createWithCodableQuantity_, v2);

  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v10, v12, 1, 1);
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_countUnit);
  id v16 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v15, 0.0);

  id v17 = objc_msgSend(v14, sel_countUnit);
  id v18 = (id)HKQuantityRangeInclusive();

  id v2 = v8;
  id v3 = v13;
  id v4 = v16;
  id v5 = v18;

  return MEMORY[0x270F311F8](v2, v3, v4, v5);
}

uint64_t HKCodableSummaryBloodPressureValue.init(correlation:)(void *a1)
{
  uint64_t v2 = sub_241CD6D00();
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A313AC(0, (unint64_t *)&qword_26B030398);
  id v5 = (void *)MEMORY[0x245636A00]((id)*MEMORY[0x263F09C28]);
  uint64_t v6 = (void *)MEMORY[0x245636A00]((id)*MEMORY[0x263F09C20]);
  id v7 = objc_msgSend(a1, sel_objectsForType_, v5);
  sub_241A313AC(0, &qword_26B0304D8);
  sub_241A54FDC((unint64_t *)&qword_26B0304E0, &qword_26B0304D8);
  uint64_t v8 = sub_241CDB370();

  uint64_t v9 = (void *)sub_241A4CEC8(v8, sub_241BBE4B4, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_241BBE194);
  swift_bridgeObjectRelease();
  if (v9)
  {
    self;
    uint64_t v10 = swift_dynamicCastObjCClass();
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      id v12 = objc_msgSend(a1, sel_objectsForType_, v6);
      uint64_t v13 = sub_241CDB370();

      uint64_t v14 = (void *)sub_241A4CEC8(v13, sub_241BBE4B4, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_241BBE194);
      swift_bridgeObjectRelease();
      if (v14)
      {
        self;
        uint64_t v15 = swift_dynamicCastObjCClass();
        if (v15)
        {
          id v16 = (void *)v15;
          id v17 = objc_msgSend(v11, sel_quantity);
          id v18 = objc_msgSend(v16, sel_quantity);
          id v19 = objc_msgSend(a1, sel_endDate);
          sub_241CD6CB0();

          id v20 = HKCodableSummaryBloodPressureValue.init(systolicValue:diastolicValue:timestamp:)(v17, v18, (uint64_t)v4);
          return (uint64_t)v20;
        }
      }
    }
    else
    {
    }
  }
  uint64_t result = sub_241CDBF10();
  __break(1u);
  return result;
}

uint64_t sub_241A4CE70(uint64_t a1)
{
  return sub_241A4CEC8(a1, sub_241BBE4B4, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_241BBE4A0);
}

uint64_t sub_241A4CE9C(uint64_t a1)
{
  return sub_241A4CEC8(a1, sub_241BBE4B4, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_241BBE1A8);
}

uint64_t sub_241A4CEC8(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t, BOOL, uint64_t))
{
  unint64_t v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = sub_241CDBCA0();
    uint64_t v8 = v7;
    uint64_t v9 = sub_241CDBD60();
    char v11 = MEMORY[0x245637010](v6, v8, v9, v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_3:
      sub_241A55980(v6, v8, v5 != 0);
      return 0;
    }
LABEL_7:
    uint64_t v12 = a3(v6, v8, v5 != 0, a1);
    sub_241A55980(v6, v8, v5 != 0);
    return v12;
  }
  uint64_t result = a2(a1);
  if ((v15 & 1) == 0)
  {
    uint64_t v8 = v14;
    if (*(_DWORD *)(a1 + 36) == v14)
    {
      uint64_t v6 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id HKCodableSummaryBloodPressureValue.init(systolicValue:diastolicValue:timestamp:)(void *a1, void *a2, uint64_t a3)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v7 = result;
    id v8 = objc_msgSend(a1, sel_codableRepresentation);
    objc_msgSend(v7, sel_setSystolicValue_, v8);

    id v9 = objc_msgSend(a2, sel_codableRepresentation);
    objc_msgSend(v7, sel_setDiastolicValue_, v9);

    uint64_t v10 = (void *)sub_241CD6C60();
    double v11 = MEMORY[0x245637600]();

    objc_msgSend(v7, sel_setTimestampData_, v11);
    uint64_t v12 = sub_241CD6D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a3, v12);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void HKCodableSummaryBloodPressureValue.timestamp.getter()
{
}

id HKCodableSummaryElectrocardiogramValue.init(algorithmVersion:classification:timestamp:averageHeartRate:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result) {
    goto LABEL_8;
  }
  id v9 = result;
  id result = objc_msgSend(v9, sel_setAlgorithmVersionRawValue_, a1);
  if (a2 < 0)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  objc_msgSend(v9, sel_setClassificationRawValue_, a2);
  uint64_t v10 = (void *)sub_241CD6C60();
  double v11 = MEMORY[0x245637600]();

  objc_msgSend(v9, sel_setTimestampData_, v11);
  if (a4) {
    id v12 = objc_msgSend(a4, sel_codableRepresentation);
  }
  else {
    id v12 = 0;
  }
  objc_msgSend(v9, sel_setAverageHeartRate_, v12);

  uint64_t v13 = sub_241CD6D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a3, v13);
  return v9;
}

void HKCodableSummaryElectrocardiogramValue.timestamp.getter()
{
}

id HKCodableSummaryOngoingFactorsValue.init(categoryValueRawValues:earliestStartDate:latestEndDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v7 = result;
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      id v9 = result;
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v8; ++i)
      {
        uint64_t v11 = *(void *)(a1 + 8 * i + 32);
        objc_msgSend(v9, sel_addCategoryValueRawValues_, v11);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      id v12 = result;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)sub_241CD6C60();
    double v14 = MEMORY[0x245637600]();

    objc_msgSend(v7, sel_setEarliestStartDate_, v14);
    char v15 = (void *)sub_241CD6C60();
    double v16 = MEMORY[0x245637600]();

    objc_msgSend(v7, sel_setLatestEndDate_, v16);
    uint64_t v17 = sub_241CD6D00();
    id v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
    v18(a3, v17);
    v18(a2, v17);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void HKCodableSummaryOngoingFactorsValue.earliestStartDateTimestamp.getter()
{
}

void HKCodableSummaryOngoingFactorsValue.latestEndDateTimestamp.getter()
{
}

uint64_t HKCodableSummaryOngoingFactorsValue.init(ongoingSamples:)(unint64_t a1)
{
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A41708(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  int v75 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v65 - v10;
  uint64_t v12 = sub_241CD6D00();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v70 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v69 = (char *)&v65 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v72 = (char *)&v65 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  char v74 = (char *)&v65 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  id v24 = (char *)&v65 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v76 = (char *)&v65 - v25;
  unint64_t v26 = sub_241A4DC3C(a1);
  swift_bridgeObjectRelease();
  if (!v26)
  {
LABEL_29:
    sub_241CDA0F0();
    uint64_t v48 = sub_241CDA190();
    os_log_type_t v49 = sub_241CDB650();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl(&dword_241A23000, v48, v49, "Unable to get ongoing samples, earlier start date or latest end date to create an ongoing factors value", v50, 2u);
      MEMORY[0x245637F20](v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  uint64_t v67 = v1;
  uint64_t v68 = v3;
  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v28 = MEMORY[0x263F8EE78];
  uint64_t v79 = v12;
  uint64_t v73 = v4;
  id v71 = v6;
  if (v27)
  {
    uint64_t v80 = MEMORY[0x263F8EE78];
    uint64_t result = sub_241A52188(0, v27 & ~(v27 >> 63), 0);
    if (v27 < 0)
    {
      __break(1u);
      goto LABEL_47;
    }
    uint64_t v78 = v11;
    uint64_t v30 = 0;
    uint64_t v28 = v80;
    do
    {
      if ((v26 & 0xC000000000000001) != 0) {
        id v31 = (id)MEMORY[0x245637160](v30, v26);
      }
      else {
        id v31 = *(id *)(v26 + 8 * v30 + 32);
      }
      uint64_t v32 = v31;
      id v33 = objc_msgSend(v31, sel_startDate);
      sub_241CD6CB0();

      uint64_t v80 = v28;
      unint64_t v35 = *(void *)(v28 + 16);
      unint64_t v34 = *(void *)(v28 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_241A52188(v34 > 1, v35 + 1, 1);
        uint64_t v28 = v80;
      }
      ++v30;
      *(void *)(v28 + 16) = v35 + 1;
      unint64_t v36 = v28
          + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))
          + *(void *)(v13 + 72) * v35;
      uint64_t v12 = v79;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v36, v24, v79);
    }
    while (v27 != v30);
    uint64_t v4 = v73;
    uint64_t v6 = v71;
    uint64_t v11 = v78;
  }
  sub_241A4DE68(v28, v11);
  swift_bridgeObjectRelease();
  id v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v37(v11, 1, v12) == 1)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    sub_241A55F04((uint64_t)v11, &qword_26B0385B8, MEMORY[0x263F07490]);
    uint64_t v3 = v68;
    goto LABEL_29;
  }
  uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v78 = (char *)(v13 + 32);
  v77(v76, v11, v12);
  uint64_t v38 = MEMORY[0x263F8EE78];
  uint64_t v66 = v37;
  if (v27)
  {
    uint64_t v65 = v13 + 48;
    uint64_t v80 = MEMORY[0x263F8EE78];
    uint64_t result = sub_241A52188(0, v27 & ~(v27 >> 63), 0);
    if ((v27 & 0x8000000000000000) == 0)
    {
      uint64_t v39 = 0;
      uint64_t v40 = v80;
      uint64_t v41 = v72;
      do
      {
        if ((v26 & 0xC000000000000001) != 0) {
          id v42 = (id)MEMORY[0x245637160](v39, v26);
        }
        else {
          id v42 = *(id *)(v26 + 8 * v39 + 32);
        }
        uint64_t v43 = v42;
        id v44 = objc_msgSend(v42, sel_endDate);
        sub_241CD6CB0();

        uint64_t v80 = v40;
        unint64_t v46 = *(void *)(v40 + 16);
        unint64_t v45 = *(void *)(v40 + 24);
        if (v46 >= v45 >> 1)
        {
          sub_241A52188(v45 > 1, v46 + 1, 1);
          uint64_t v40 = v80;
        }
        ++v39;
        *(void *)(v40 + 16) = v46 + 1;
        unint64_t v47 = v40
            + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))
            + *(void *)(v13 + 72) * v46;
        uint64_t v12 = v79;
        v77((char *)v47, v41, v79);
      }
      while (v27 != v39);
      uint64_t v4 = v73;
      uint64_t v38 = MEMORY[0x263F8EE78];
      goto LABEL_26;
    }
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v40 = MEMORY[0x263F8EE78];
LABEL_26:
  uint64_t v11 = v75;
  sub_241A4E324(v40, v75);
  swift_bridgeObjectRelease();
  if (v66(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v76, v12);
    uint64_t v6 = v71;
    goto LABEL_28;
  }
  v77(v74, v11, v12);
  if (!v27)
  {
    swift_bridgeObjectRelease();
    uint64_t v53 = MEMORY[0x263F8EE78];
LABEL_44:
    uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v60 = (uint64_t)v69;
    id v61 = v76;
    v59(v69, v76, v12);
    uint64_t v62 = (uint64_t)v70;
    uint64_t v63 = v74;
    v59(v70, v74, v12);
    id v51 = HKCodableSummaryOngoingFactorsValue.init(categoryValueRawValues:earliestStartDate:latestEndDate:)(v53, v60, v62);
    unint64_t v64 = *(void (**)(char *, uint64_t))(v13 + 8);
    v64(v63, v12);
    v64(v61, v12);
    return (uint64_t)v51;
  }
  uint64_t v80 = v38;
  uint64_t result = sub_241A52158(0, v27 & ~(v27 >> 63), 0);
  if ((v27 & 0x8000000000000000) == 0)
  {
    uint64_t v52 = 0;
    uint64_t v53 = v80;
    do
    {
      if ((v26 & 0xC000000000000001) != 0) {
        id v54 = (id)MEMORY[0x245637160](v52, v26);
      }
      else {
        id v54 = *(id *)(v26 + 8 * v52 + 32);
      }
      uint64_t v55 = v54;
      id v56 = objc_msgSend(v54, sel_value);

      uint64_t v80 = v53;
      unint64_t v58 = *(void *)(v53 + 16);
      unint64_t v57 = *(void *)(v53 + 24);
      if (v58 >= v57 >> 1)
      {
        sub_241A52158(v57 > 1, v58 + 1, 1);
        uint64_t v53 = v80;
      }
      ++v52;
      *(void *)(v53 + 16) = v58 + 1;
      *(void *)(v53 + 8 * v58 + 32) = v56;
    }
    while (v27 != v52);
    swift_bridgeObjectRelease();
    uint64_t v12 = v79;
    goto LABEL_44;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_241A4DC3C(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_241CDBE80();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x245637160](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_241CDBE60();
        sub_241CDBE90();
        sub_241CDBEA0();
        sub_241CDBE70();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        uint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_241CDBE60();
        sub_241CDBE90();
        sub_241CDBEA0();
        sub_241CDBE70();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_241CDBF50();
    swift_bridgeObjectRelease();
    sub_241CDBE80();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_241A4DE24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v5 < v2) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

uint64_t sub_241A4DE68@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_241A41708(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_241CD6D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  unint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    uint64_t v19 = v38;
LABEL_5:
    sub_241A55F04((uint64_t)v9, &qword_26B0385B8, MEMORY[0x263F07490]);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  uint64_t v30 = a2;
  id v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    id v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    unint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_241A55020((unint64_t *)&qword_26B02E8D0, MEMORY[0x263F07490]);
      char v27 = sub_241CDB010();
      uint64_t v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_241A55F04((uint64_t)v7, &qword_26B0385B8, MEMORY[0x263F07490]);
  uint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

uint64_t sub_241A4E2E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v2 < v5) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

uint64_t sub_241A4E324@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_241A41708(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_241CD6D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  unint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    uint64_t v19 = v38;
LABEL_5:
    sub_241A55F04((uint64_t)v9, &qword_26B0385B8, MEMORY[0x263F07490]);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  uint64_t v30 = a2;
  id v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    id v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    unint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_241A55020((unint64_t *)&qword_26B02E8D0, MEMORY[0x263F07490]);
      char v27 = sub_241CDB010();
      uint64_t v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_241A55F04((uint64_t)v7, &qword_26B0385B8, MEMORY[0x263F07490]);
  uint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

id HKCodableSummaryVisionPrescriptionValue.init(visionPrescription:hasImage:)(void *a1, char a2)
{
  uint64_t v4 = sub_241CD6D00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v9 = result;
    id v10 = objc_msgSend(a1, sel_dateIssued);
    sub_241CD6CB0();

    uint64_t v11 = (void *)sub_241CD6C60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    double v12 = MEMORY[0x245637600](v11);

    objc_msgSend(v9, sel_setTimestampData_, v12);
    id v13 = objc_msgSend(a1, sel_leftSphere);
    if (v13)
    {
      uint64_t v14 = v13;
      id v15 = objc_msgSend(v13, sel_codableRepresentation);
    }
    else
    {
      id v15 = 0;
    }
    objc_msgSend(v9, sel_setLeftEyeSphere_, v15);

    id v16 = objc_msgSend(a1, sel_rightSphere);
    if (v16)
    {
      uint64_t v17 = v16;
      id v18 = objc_msgSend(v16, sel_codableRepresentation);
    }
    else
    {
      id v18 = 0;
    }
    objc_msgSend(v9, sel_setRightEyeSphere_, v18);

    sub_241A313AC(0, &qword_268D421B8);
    id v19 = a1;
    id v20 = HKCodablePrescriptionType.init(from:)(v19);
    objc_msgSend(v9, sel_setPrescriptionType_, v20);

    objc_msgSend(v9, sel_setHasImage_, a2 & 1);
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodablePrescriptionType.init(from:)(void *a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v3 = result;
    id v4 = objc_msgSend(a1, sel_prescriptionType);
    if (v4 == (id)1)
    {
      id v5 = (id)HKVisionPrescriptionTypeDetailedLongLocalizedString();
      if (!v5)
      {
        sub_241CDB0D0();
        id v5 = (id)sub_241CDB090();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if (v4 == (id)2)
      {
        objc_msgSend(v3, sel_setContacts_, 1);
        id v5 = v3;
LABEL_9:

        return v3;
      }
      id v5 = (id)sub_241CDB090();
    }
    objc_msgSend(v3, sel_setGlassesDescription_, v5);

    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void HKCodableSummaryVisionPrescriptionValue.timestamp.getter()
{
}

void sub_241A4EB0C(SEL *a1)
{
  [v1 *a1];
  id v2 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();
}

id HKCodableSummaryWalkingSteadinessValue.init(codableQuantity:classification:dataConfiguration:)(void *a1, uint64_t a2, void *a3)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v7 = result;
    objc_msgSend(v7, sel_setQuantity_, a1);
    objc_msgSend(v7, sel_setClassificationRawValue_, a2);
    objc_msgSend(v7, sel_setLevelViewDataConfiguration_, a3);

    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241A4EC10(void *a1)
{
  uint64_t v66 = sub_241CDA080();
  uint64_t v2 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  id v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD6D00();
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CDA090();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(a1, sel_quantityType);
  id v13 = objc_msgSend(v12, sel_code);

  if (v13 == (id)275)
  {
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    id v15 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
    if (v15)
    {
      id v16 = &off_2650F5000;
      id v17 = objc_msgSend(a1, sel_quantity);
      uint64_t v65 = sub_241CDBAB0();
      if (v18)
      {

        return 0;
      }
      else
      {
        id v60 = v15;
        id v61 = v7;
        uint64_t v62 = v11;
        uint64_t v19 = sub_241CDBAC0();
        int64_t v20 = *(void *)(v19 + 16);
        if (v20)
        {
          id v56 = ObjCClassFromMetadata;
          uint64_t v57 = v9;
          uint64_t v58 = v8;
          uint64_t v59 = a1;
          uint64_t v67 = MEMORY[0x263F8EE78];
          int64_t v64 = v20;
          sub_241A52108(0, v20, 0);
          uint64_t v21 = v67;
          uint64_t v22 = self;
          uint64_t v23 = 0;
          uint64_t v63 = v2 + 32;
          while (1)
          {
            uint64_t v24 = v19;
            uint64_t v25 = *(void *)(v19 + 8 * v23 + 32);
            id v26 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
            objc_msgSend(v26, sel__value);
            double v28 = v27;

            id v29 = objc_msgSend(v22, sel_countUnit);
            if (v25 == 1)
            {
              id v30 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
              objc_msgSend(v30, sel__value);
              double v32 = v31;

              double v33 = v32 + 29.0;
            }
            else
            {
              if (v25) {
                goto LABEL_24;
              }
              id v34 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
              objc_msgSend(v34, sel__value);
              double v33 = v35;
            }
            id v36 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v29, v33);

            objc_msgSend(v36, sel__value);
            double v38 = v37;

            if (v28 > v38) {
              break;
            }
            sub_241CDA050();
            uint64_t v67 = v21;
            unint64_t v40 = *(void *)(v21 + 16);
            unint64_t v39 = *(void *)(v21 + 24);
            if (v40 >= v39 >> 1)
            {
              sub_241A52108(v39 > 1, v40 + 1, 1);
              uint64_t v21 = v67;
            }
            ++v23;
            *(void *)(v21 + 16) = v40 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v21+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v40, v4, v66);
            uint64_t v19 = v24;
            if (v64 == v23)
            {
              swift_bridgeObjectRelease();
              uint64_t v8 = v58;
              a1 = v59;
              ObjCClassFromMetadata = v56;
              uint64_t v9 = v57;
              id v16 = &off_2650F5000;
              goto LABEL_18;
            }
          }
          __break(1u);
          goto LABEL_22;
        }
        swift_bridgeObjectRelease();
LABEL_18:
        sub_241A54AB0();
        uint64_t v42 = v41;
        uint64_t v44 = v43;
        id v45 = [a1 (SEL)v16[216]];
        objc_msgSend(v45, sel__value);
        uint64_t v47 = v46;

        uint64_t v68 = v44;
        uint64_t v69 = v47;
        uint64_t v67 = v42;
        sub_241CDB000();
        uint64_t v48 = v62;
        sub_241CDA020();
        sub_241A313AC(0, &qword_26B034E30);
        id v49 = [a1 (SEL)v16 + 1243];
        uint64_t v50 = (uint64_t)v61;
        sub_241AF30A4(a1);
        id v51 = HKCodableSummaryQuantityValue.init(quantity:date:)(v49, v50);
        id v52 = sub_241A42E90();
        id v53 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
        if (!v53) {
          goto LABEL_23;
        }
        id v15 = v53;
        id v54 = v53;
        objc_msgSend(v54, sel_setQuantity_, v51);
        objc_msgSend(v54, sel_setClassificationRawValue_, v65);
        objc_msgSend(v54, sel_setLevelViewDataConfiguration_, v52);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v48, v8);
      }
    }
    else
    {
    }
    return (uint64_t)v15;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_241CDBF10();
  __break(1u);
  return result;
}

id sub_241A4F20C(void *a1)
{
  uint64_t v2 = sub_241CD6D00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v7 = result;
    id v8 = objc_msgSend(a1, sel_startDate);
    sub_241CD6CB0();

    uint64_t v9 = (void *)sub_241CD6C60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    double v10 = MEMORY[0x245637600](v9);

    objc_msgSend(v7, sel_setDateData_, v10);
    objc_msgSend(v7, sel_setReflectiveInterval_, objc_msgSend(a1, sel_reflectiveInterval));
    objc_msgSend(a1, sel_valence);
    objc_msgSend(v7, sel_setValence_);
    uint64_t v11 = sub_241CDB610();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      id v13 = (uint64_t *)(v11 + 32);
      do
      {
        uint64_t v14 = *v13++;
        objc_msgSend(v7, sel_addLabels_, v14);
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_241CDB620();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      id v17 = (uint64_t *)(v15 + 32);
      do
      {
        uint64_t v18 = *v17++;
        objc_msgSend(v7, sel_addDomains_, v18);
        --v16;
      }
      while (v16);
    }

    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241A4F424(void *a1)
{
  uint64_t v2 = sub_241CD6D00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v7 = result;
    id v8 = objc_msgSend(a1, sel_startDate);
    sub_241CD6CB0();

    uint64_t v9 = (void *)sub_241CD6C60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    double v10 = MEMORY[0x245637600](v9);

    objc_msgSend(v7, sel_setDateData_, v10);
    objc_msgSend(v7, sel_setScore_, objc_msgSend(a1, sel_score));
    objc_msgSend(v7, sel_setRisk_, objc_msgSend(a1, sel_risk));

    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241A4F5C4(void *a1, void *a2, uint64_t a3)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v7 = result;
    sub_241A313AC(0, &qword_26B038918);
    id v8 = v7;
    id v9 = a1;
    double v10 = (void *)sub_241CDB870();
    objc_msgSend(v8, sel_setMinimumValue_, v10);

    id v11 = a2;
    uint64_t v12 = (void *)sub_241CDB870();
    objc_msgSend(v8, sel_setMaximumValue_, v12);

    id v13 = (void *)sub_241CD6C60();
    double v14 = MEMORY[0x245637600]();

    objc_msgSend(v8, sel_setDateData_, v14);
    uint64_t v15 = sub_241CD6D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a3, v15);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryTrendValue.init(engineOutput:coveredDateRange:dataPresencePoints:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_241A41708(0, &qword_26B032228, MEMORY[0x263F47050], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v16 - v6;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v9 = result;
    double v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
    sub_241A55068(a1, (uint64_t)v7, &qword_26B032228, MEMORY[0x263F47050]);
    id v11 = v9;
    HKCodableSummaryTrendValue.engineOutput.setter((uint64_t)v7);
    sub_241CD9FA0();
    uint64_t v12 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setCoveredDateRangeRawValue_, v12);

    sub_241A48B5C(a3, &qword_26B0304B0);
    swift_bridgeObjectRelease();
    id v13 = objc_allocWithZone(MEMORY[0x263EFF980]);
    double v14 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v13, sel_initWithArray_, v14);

    objc_msgSend(v11, sel_setDataPresencePoints_, v15);
    sub_241A55F04(a1, &qword_26B032228, v10);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HKCodableSummaryTrendValue.engineOutput.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v24 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
  sub_241A41708(0, &qword_26B032228, MEMORY[0x263F47050], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  double v10 = (char *)v21 - v9;
  uint64_t v11 = sub_241CD9B80();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  double v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A55068(a1, (uint64_t)v10, &qword_26B032228, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    id v15 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
    sub_241A55F04((uint64_t)v10, &qword_26B032228, MEMORY[0x263F47050]);
    objc_msgSend(v2, sel_setAnalysisData_, 0);
    return sub_241A55F04(a1, &qword_26B032228, v15);
  }
  else
  {
    v21[2] = v6;
    v21[3] = v4;
    uint64_t v22 = a1;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_241CD6740();
    swift_allocObject();
    sub_241CD6730();
    sub_241A55020(&qword_26B02E910, MEMORY[0x263F47050]);
    uint64_t v17 = sub_241CD6720();
    unint64_t v19 = v18;
    swift_release();
    int64_t v20 = (void *)sub_241CD6AD0();
    sub_241A37374(v17, v19);
    objc_msgSend(v2, sel_setAnalysisData_, v20);

    sub_241A55F04(v22, &qword_26B032228, MEMORY[0x263F47050]);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

void HKCodableSummaryTrendValue.coveredDateRange.setter(char a1)
{
  if (a1 == 6)
  {
    id v2 = 0;
    objc_msgSend(v1, sel_setCoveredDateRangeRawValue_, 0);
  }
  else
  {
    sub_241CD9FA0();
    id v2 = (id)sub_241CDB090();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setCoveredDateRangeRawValue_, v2);
  }
}

uint64_t HKCodableSummaryTrendValue.engineOutput.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  uint64_t v3 = sub_241CDA1A0();
  MEMORY[0x270FA5388](v3);
  if (objc_msgSend(v1, sel_hasAnalysisData)
    && (id v4 = objc_msgSend(v1, sel_analysisData)) != 0)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_241CD6AE0();
    unint64_t v8 = v7;

    sub_241CD6710();
    swift_allocObject();
    sub_241CD6700();
    uint64_t v9 = sub_241CD9B80();
    sub_241A55020(&qword_26B02E918, MEMORY[0x263F47050]);
    sub_241CD66F0();
    sub_241A37374(v6, v8);
    swift_release();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v13 = a1;
    uint64_t v14 = 0;
    uint64_t v15 = v9;
  }
  else
  {
    uint64_t v10 = sub_241CD9B80();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v15 = v10;
    uint64_t v13 = a1;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

void (*HKCodableSummaryTrendValue.engineOutput.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  sub_241A41708(0, &qword_26B032228, MEMORY[0x263F47050], MEMORY[0x263F8D8F0]);
  size_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  uint64_t v5 = malloc(v4);
  a1[2] = v5;
  HKCodableSummaryTrendValue.engineOutput.getter((uint64_t)v5);
  return sub_241A5043C;
}

void sub_241A5043C(uint64_t a1, char a2)
{
  id v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  if (a2)
  {
    size_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F47050];
    sub_241A55068(*(void *)(a1 + 16), (uint64_t)v2, &qword_26B032228, MEMORY[0x263F47050]);
    HKCodableSummaryTrendValue.engineOutput.setter((uint64_t)v2);
    sub_241A55F04((uint64_t)v3, &qword_26B032228, v4);
  }
  else
  {
    HKCodableSummaryTrendValue.engineOutput.setter(*(void *)(a1 + 16));
  }
  free(v3);

  free(v2);
}

uint64_t HKCodableSummaryTrendValue.coveredDateRange.getter()
{
  if (objc_msgSend(v0, sel_hasCoveredDateRangeRawValue))
  {
    id v1 = objc_msgSend(v0, sel_coveredDateRangeRawValue);
    if (v1)
    {
      id v2 = v1;
      sub_241CDB0D0();

      JUMPOUT(0x2456352D0);
    }
  }
  return 6;
}

void (*HKCodableSummaryTrendValue.coveredDateRange.modify(uint64_t a1))(uint64_t a1)
{
  id v2 = v1;
  *(void *)a1 = v2;
  if (objc_msgSend(v2, sel_hasCoveredDateRangeRawValue)
    && (id v4 = objc_msgSend(v2, sel_coveredDateRangeRawValue)) != 0)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_241CDB0D0();
    uint64_t v8 = v7;

    char v9 = MEMORY[0x2456352D0](v6, v8);
  }
  else
  {
    char v9 = 6;
  }
  *(unsigned char *)(a1 + 8) = v9;
  return sub_241A5062C;
}

void sub_241A5062C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8) == 6)
  {
    id v2 = 0;
  }
  else
  {
    sub_241CD9FA0();
    id v3 = (id)sub_241CDB090();
    swift_bridgeObjectRelease();
    id v2 = v3;
  }
  id v4 = v2;
  objc_msgSend(*(id *)a1, sel_setCoveredDateRangeRawValue_);
}

id HKCodableSummaryTrendResults.init(values:version:)(unint64_t a1, uint64_t a2)
{
  sub_241A41708(0, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - v5;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v8 = result;
    sub_241A48B5C(a1, &qword_26B0303F8);
    swift_bridgeObjectRelease();
    id v9 = objc_allocWithZone(MEMORY[0x263EFF980]);
    uint64_t v10 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v9, sel_initWithArray_, v10);

    objc_msgSend(v8, sel_setTrendValues_, v11);
    uint64_t v12 = sub_241CD7AB0();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, a2, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
    sub_241A54FDC(&qword_26B030448, &qword_26B030450);
    sub_241CD8A20();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HKCodableSummaryTrendResults.trendValuesArray.getter()
{
  return sub_241A50B58(&qword_26B0303F8);
}

id HKCodableSummaryCorrelatedTrendResults.init(values:version:)(unint64_t a1, uint64_t a2)
{
  sub_241A41708(0, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - v5;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v8 = result;
    sub_241A48B5C(a1, &qword_268D421C0);
    swift_bridgeObjectRelease();
    id v9 = objc_allocWithZone(MEMORY[0x263EFF980]);
    uint64_t v10 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v9, sel_initWithArray_, v10);

    objc_msgSend(v8, sel_setTrendValues_, v11);
    uint64_t v12 = sub_241CD7AB0();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, a2, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
    sub_241A54FDC(&qword_268D421A8, &qword_268D421A0);
    sub_241CD8A20();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HKCodableSummaryCorrelatedTrendResults.trendValuesArray.getter()
{
  return sub_241A50B58(&qword_268D421C0);
}

uint64_t sub_241A50B58(unint64_t *a1)
{
  id v3 = objc_msgSend(v1, sel_trendValues);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_241A313AC(0, a1);
    sub_241CDB2B0();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

id HKCodableSummaryCorrelatedTrendValue.init(objectType:trendValue:)(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  sub_241CDB0D0();

  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v6 = result;
    uint64_t v7 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setObjectTypeIdentifier_, v7);

    objc_msgSend(v6, sel_setTrendValue_, a2);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCorrelatedTrendValue.init(objectTypeIdentifier:trendValue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v5 = result;
    id v6 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setObjectTypeIdentifier_, v6);

    objc_msgSend(v5, sel_setTrendValue_, a3);
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCorrelatedTrendValue.objectType.getter()
{
  if (!objc_msgSend(v0, sel_hasObjectTypeIdentifier)) {
    return 0;
  }
  id v1 = self;
  id v2 = objc_msgSend(v0, sel_objectTypeIdentifier);
  id v3 = objc_msgSend(v1, sel__typeWithIdentifier_, v2);

  return v3;
}

uint64_t HKCodableChartSharableModel.values(for:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 3:
      if (!objc_msgSend(v2, sel_hasSixMonthData)
        || !objc_msgSend(v2, sel_hasSixMonthDateInterval))
      {
        goto LABEL_22;
      }
      id v10 = objc_msgSend(v2, sel_sixMonthData);
      if (!v10)
      {
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      *a2 = v10;
      id v11 = objc_msgSend(v2, sel_sixMonthDateInterval);
      if (v11) {
        goto LABEL_21;
      }
      __break(1u);
LABEL_7:
      if (!objc_msgSend(v2, sel_hasMonthData)
        || !objc_msgSend(v2, sel_hasMonthDateInterval))
      {
        goto LABEL_22;
      }
      id v12 = objc_msgSend(v2, sel_monthData);
      if (!v12) {
        goto LABEL_30;
      }
      *a2 = v12;
      id v11 = objc_msgSend(v2, sel_monthDateInterval);
      if (v11) {
        goto LABEL_21;
      }
      __break(1u);
LABEL_12:
      if (!objc_msgSend(v2, sel_hasWeekData) || !objc_msgSend(v2, sel_hasWeekDateInterval)) {
        goto LABEL_22;
      }
      id v13 = objc_msgSend(v2, sel_weekData);
      if (!v13)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      *a2 = v13;
      id v11 = objc_msgSend(v2, sel_weekDateInterval);
      if (!v11)
      {
        __break(1u);
LABEL_17:
        if (objc_msgSend(v2, sel_hasDayData) && objc_msgSend(v2, sel_hasDayDateInterval))
        {
          id v14 = objc_msgSend(v2, sel_dayData);
          if (v14)
          {
            *a2 = v14;
            id v11 = objc_msgSend(v2, sel_dayDateInterval);
            if (v11) {
              goto LABEL_21;
            }
LABEL_33:
            __break(1u);
            JUMPOUT(0x241A5131CLL);
          }
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
LABEL_22:
        sub_241A550E8();
        unint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
        uint64_t v21 = v22;
        unint64_t v19 = a2;
        uint64_t v20 = 1;
        goto LABEL_23;
      }
LABEL_21:
      uint64_t v15 = v11;
      sub_241A550E8();
      uint64_t v17 = v16;
      sub_241CDB920();

      unint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
      unint64_t v19 = a2;
      uint64_t v20 = 0;
      uint64_t v21 = v17;
LABEL_23:
      return v18(v19, v20, 1, v21);
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_12;
    case 6:
      goto LABEL_17;
    default:
      sub_241CDA140();
      uint64_t v24 = sub_241CDA190();
      os_log_type_t v25 = sub_241CDB650();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        uint64_t v35 = v34;
        *(_DWORD *)uint64_t v26 = 136315394;
        uint64_t v36 = ObjectType;
        swift_getMetatypeMetadata();
        uint64_t v27 = sub_241CDB120();
        uint64_t v36 = sub_241A33FE4(v27, v28, &v35);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2080;
        uint64_t v36 = a1;
        type metadata accessor for HKTimeScope(0);
        uint64_t v29 = sub_241CDB120();
        uint64_t v36 = sub_241A33FE4(v29, v30, &v35);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v24, v25, "[%s]: Unsupported time scope for charts: %s", (uint8_t *)v26, 0x16u);
        uint64_t v31 = v34;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v31, -1, -1);
        MEMORY[0x245637F20](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_241A550E8();
      return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a2, 1, 1, v32);
  }
}

Swift::String __swiftcall HKCodableChartSharableModel.logModelBytes()()
{
  id v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F086F0]), sel_init);
  objc_msgSend(v2, sel_setCountStyle_, 1);
  if (!objc_msgSend(v0, sel_hasDayData)) {
    goto LABEL_12;
  }
  id v3 = objc_msgSend(v0, sel_dayData);
  if (!v3) {
    goto LABEL_55;
  }
  id v4 = v3;
  unsigned int v5 = objc_msgSend(v3, sel_hasQueryDataObject);

  if (v5)
  {
    id v6 = objc_msgSend(v1, sel_dayData);
    if (!v6)
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_queryDataObject);

    if (v8)
    {
      uint64_t v9 = sub_241CD6AE0();
      unint64_t v11 = v10;

      uint64_t v12 = 0;
      switch(v11 >> 62)
      {
        case 1uLL:
          if (!__OFSUB__(HIDWORD(v9), v9))
          {
            uint64_t v12 = HIDWORD(v9) - (int)v9;
LABEL_11:
            id v15 = objc_msgSend(v2, sel_stringFromByteCount_, v12);
            sub_241CDB0D0();

            uint64_t v58 = 0x203A796164;
            unint64_t v61 = 0xE500000000000000;
            sub_241CDB180();
            swift_bridgeObjectRelease();
            sub_241CDB180();
            sub_241CDB180();
            swift_bridgeObjectRelease();
            sub_241A37374(v9, v11);
            goto LABEL_12;
          }
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          break;
        case 2uLL:
          uint64_t v14 = *(void *)(v9 + 16);
          uint64_t v13 = *(void *)(v9 + 24);
          uint64_t v12 = v13 - v14;
          if (!__OFSUB__(v13, v14)) {
            goto LABEL_11;
          }
          goto LABEL_48;
        case 3uLL:
          goto LABEL_11;
        default:
          uint64_t v12 = BYTE6(v11);
          goto LABEL_11;
      }
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
  }
LABEL_12:
  if (!objc_msgSend(v1, sel_hasWeekData, v58, v61)) {
    goto LABEL_23;
  }
  id v16 = objc_msgSend(v1, sel_weekData);
  if (!v16)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v17 = v16;
  unsigned int v18 = objc_msgSend(v16, sel_hasQueryDataObject);

  if (v18)
  {
    id v19 = objc_msgSend(v1, sel_weekData);
    if (!v19)
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    uint64_t v20 = v19;
    id v21 = objc_msgSend(v19, sel_queryDataObject);

    if (v21)
    {
      uint64_t v22 = sub_241CD6AE0();
      unint64_t v24 = v23;

      uint64_t v25 = 0;
      switch(v24 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v22), v22)) {
            goto LABEL_49;
          }
          uint64_t v25 = HIDWORD(v22) - (int)v22;
LABEL_22:
          id v28 = objc_msgSend(v2, sel_stringFromByteCount_, v25);
          sub_241CDB0D0();

          uint64_t v59 = 0x203A6B656577;
          unint64_t v62 = 0xE600000000000000;
          sub_241CDB180();
          swift_bridgeObjectRelease();
          sub_241CDB180();
          sub_241CDB180();
          swift_bridgeObjectRelease();
          sub_241A37374(v22, v24);
          break;
        case 2uLL:
          uint64_t v27 = *(void *)(v22 + 16);
          uint64_t v26 = *(void *)(v22 + 24);
          uint64_t v25 = v26 - v27;
          if (!__OFSUB__(v26, v27)) {
            goto LABEL_22;
          }
          goto LABEL_50;
        case 3uLL:
          goto LABEL_22;
        default:
          uint64_t v25 = BYTE6(v24);
          goto LABEL_22;
      }
    }
  }
LABEL_23:
  if (!objc_msgSend(v1, sel_hasMonthData, v59, v62)) {
    goto LABEL_34;
  }
  id v29 = objc_msgSend(v1, sel_monthData);
  if (!v29)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  unint64_t v30 = v29;
  unsigned int v31 = objc_msgSend(v29, sel_hasQueryDataObject);

  if (v31)
  {
    id v32 = objc_msgSend(v1, sel_monthData);
    if (!v32)
    {
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    uint64_t v33 = v32;
    id v34 = objc_msgSend(v32, sel_queryDataObject);

    if (v34)
    {
      uint64_t v35 = sub_241CD6AE0();
      unint64_t v37 = v36;

      uint64_t v38 = 0;
      switch(v37 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v35), v35)) {
            goto LABEL_51;
          }
          uint64_t v38 = HIDWORD(v35) - (int)v35;
LABEL_33:
          id v41 = objc_msgSend(v2, sel_stringFromByteCount_, v38);
          sub_241CDB0D0();

          uint64_t v60 = 0x203A68746E6F6DLL;
          unint64_t v63 = 0xE700000000000000;
          sub_241CDB180();
          swift_bridgeObjectRelease();
          sub_241CDB180();
          sub_241CDB180();
          swift_bridgeObjectRelease();
          sub_241A37374(v35, v37);
          break;
        case 2uLL:
          uint64_t v40 = *(void *)(v35 + 16);
          uint64_t v39 = *(void *)(v35 + 24);
          uint64_t v38 = v39 - v40;
          if (!__OFSUB__(v39, v40)) {
            goto LABEL_33;
          }
          goto LABEL_52;
        case 3uLL:
          goto LABEL_33;
        default:
          uint64_t v38 = BYTE6(v37);
          goto LABEL_33;
      }
    }
  }
LABEL_34:
  if (!objc_msgSend(v1, sel_hasSixMonthData, v60, v63))
  {
LABEL_41:

    goto LABEL_42;
  }
  id v42 = objc_msgSend(v1, sel_sixMonthData);
  if (!v42) {
    goto LABEL_58;
  }
  uint64_t v43 = v42;
  unsigned int v44 = objc_msgSend(v42, sel_hasQueryDataObject);

  if (!v44) {
    goto LABEL_41;
  }
  id v45 = objc_msgSend(v1, sel_sixMonthData);
  if (!v45)
  {
LABEL_62:
    __break(1u);
    JUMPOUT(0x241A519E0);
  }
  uint64_t v46 = v45;
  id v47 = objc_msgSend(v45, sel_queryDataObject);

  if (!v47) {
    goto LABEL_41;
  }
  uint64_t v48 = sub_241CD6AE0();
  unint64_t v50 = v49;

  uint64_t v51 = 0;
  switch(v50 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v48), v48)) {
        goto LABEL_53;
      }
      uint64_t v51 = HIDWORD(v48) - (int)v48;
LABEL_46:
      id v56 = objc_msgSend(v2, sel_stringFromByteCount_, v51);
      sub_241CDB0D0();

      sub_241CDB180();
      swift_bridgeObjectRelease();
      sub_241CDB180();
      sub_241CDB180();
      swift_bridgeObjectRelease();

      sub_241A37374(v48, v50);
      break;
    case 2uLL:
      uint64_t v55 = *(void *)(v48 + 16);
      uint64_t v54 = *(void *)(v48 + 24);
      uint64_t v51 = v54 - v55;
      if (!__OFSUB__(v54, v55)) {
        goto LABEL_46;
      }
      goto LABEL_54;
    case 3uLL:
      goto LABEL_46;
    default:
      uint64_t v51 = BYTE6(v50);
      goto LABEL_46;
  }
LABEL_42:
  uint64_t v52 = 0;
  id v53 = (void *)0xE000000000000000;
  result._object = v53;
  result._countAndFlagsBits = v52;
  return result;
}

uint64_t sub_241A51A20()
{
  uint64_t v0 = sub_241CD7AB0();
  sub_241A55888(v0, qword_26B041128);
  sub_241A55850(v0, (uint64_t)qword_26B041128);
  return sub_241CD7A80();
}

id sub_241A51A74(uint64_t a1)
{
  sub_241A41708(0, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v12 - v3;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result)
  {
    __break(1u);
    return result;
  }
  id v6 = result;
  if (a1 == 2)
  {
    a1 = 1;
    objc_msgSend(result, sel_setHasIsUsingWheelchair_, 1);
  }
  else
  {
    if (a1 != 1)
    {
      id v7 = result;
      if (a1) {
        a1 = 0;
      }
      id v8 = &selRef_setHasIsUsingWheelchair_;
      goto LABEL_11;
    }
    objc_msgSend(result, sel_setHasIsUsingWheelchair_, 1);
    a1 = 0;
  }
  id v8 = &selRef_setIsUsingWheelchair_;
LABEL_11:
  objc_msgSend(v6, *v8, a1);
  if (qword_26B030400 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_241CD7AB0();
  uint64_t v10 = sub_241A55850(v9, (uint64_t)qword_26B041128);
  uint64_t v11 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v4, v10, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v4, 0, 1, v9);
  sub_241A54FDC(&qword_26B030408, (unint64_t *)&qword_26B030410);
  sub_241CD8A20();

  return v6;
}

uint64_t sub_241A51CB8()
{
  return swift_slowAlloc();
}

uint64_t sub_241A51CC0(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_241A51CFC()
{
}

uint64_t sub_241A51D08(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_241CDBF00();
    __break(1u);
  }
  else if (a1)
  {
    sub_241A35FBC(0, (unint64_t *)&qword_26B035008);
    uint64_t result = sub_241CDB300();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_241A51DB8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_241A51DE0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_241A33FE4(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_241CDBBF0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_241A51E58(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_241A56000(0, &qword_26B034FD8, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

unsigned char **sub_241A51FC8(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  id v4 = *result;
  *id v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_241A51FD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A5304C(a1, a2, a3, (void *)*v3, &qword_26B034F38, MEMORY[0x263F45738], MEMORY[0x263F45738]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A52028(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A5304C(a1, a2, a3, (void *)*v3, &qword_26B034F20, MEMORY[0x263F45618], MEMORY[0x263F45618]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A52078(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A5304C(a1, a2, a3, (void *)*v3, &qword_26B034F00, (uint64_t (*)(uint64_t))sub_241A55C0C, (uint64_t (*)(void))sub_241A55C0C);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A520C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A52534(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_241A520E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A526E8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_241A52108(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A5304C(a1, a2, a3, (void *)*v3, &qword_26B036998, MEMORY[0x263F47220], MEMORY[0x263F47220]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A52158(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A52ED4(a1, a2, a3, *v3, &qword_26B034FB8, MEMORY[0x263F8D6C8]);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_241A52188(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A5304C(a1, a2, a3, (void *)*v3, &qword_26B034F10, MEMORY[0x263F07490], MEMORY[0x263F07490]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A521D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A5287C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_241A521F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A532B0(a1, a2, a3, (void *)*v3, (void (*)(void))sub_241A55AC8, (unint64_t *)&qword_26B035008);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A5223C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A5304C(a1, a2, a3, (void *)*v3, &qword_26B038858, MEMORY[0x263F45630], MEMORY[0x263F45630]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A5228C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A5304C(a1, a2, a3, (void *)*v3, &qword_268D42200, MEMORY[0x263F42CD0], MEMORY[0x263F42CD0]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A522DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A52A3C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_241A522FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A5304C(a1, a2, a3, (void *)*v3, &qword_26B036968, MEMORY[0x263F42E58], MEMORY[0x263F42E58]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A5234C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A52B94(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_241A5236C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A52D20(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A5238C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A52ED4(a1, a2, a3, *v3, &qword_26B034FD0, MEMORY[0x263F8E5C0]);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_241A523BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A5304C(a1, a2, a3, (void *)*v3, &qword_26B034F08, (uint64_t (*)(uint64_t))sub_241A558EC, (uint64_t (*)(void))sub_241A558EC);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A5240C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A532B0(a1, a2, a3, (void *)*v3, (void (*)(void))sub_241A55A0C, (unint64_t *)&qword_26B032070);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A52450(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A5304C(a1, a2, a3, (void *)*v3, &qword_26B034F98, (uint64_t (*)(uint64_t))sub_241A36A74, (uint64_t (*)(void))sub_241A36A74);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A524A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A5304C(a1, a2, a3, (void *)*v3, &qword_268D421F8, MEMORY[0x263F45878], MEMORY[0x263F45878]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A524F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241A532B0(a1, a2, a3, (void *)*v3, (void (*)(void))sub_241A559A4, &qword_26B032068);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_241A52534(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241A56000(0, &qword_26B034FB0, MEMORY[0x263F8D538], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241A526B4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_241A5304C(a1, a2, a3, a4, &qword_268D421D8, (uint64_t (*)(uint64_t))type metadata accessor for TrendNotificationModel, (uint64_t (*)(void))type metadata accessor for TrendNotificationModel);
}

uint64_t sub_241A526E8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241A56000(0, &qword_26B034FE8, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241A5287C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241A56000(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241A52A08(char a1, int64_t a2, char a3, void *a4)
{
  return sub_241A5304C(a1, a2, a3, a4, &qword_26B0369B0, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
}

uint64_t sub_241A52A3C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241A55CE8();
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241A52B94(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241A56000(0, &qword_26B0380C0, (uint64_t)&type metadata for LocalizationOverride, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241A52D20(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241A41708(0, &qword_26B034FA8, (uint64_t (*)(uint64_t))sub_241A55F74, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_241A55F74();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241A52ED4(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_241A56000(0, a5, a6, MEMORY[0x263F8E0F8]);
    uint64_t v12 = (char *)swift_allocObject();
    int64_t v13 = j__malloc_size(v12);
    uint64_t v14 = v13 - 32;
    if (v13 < 32) {
      uint64_t v14 = v13 - 25;
    }
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * (v14 >> 3);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v15 = v12 + 32;
  id v16 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v15 >= &v16[8 * v10]) {
      memmove(v15, v16, 8 * v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[8 * v10] || v15 >= &v16[8 * v10])
  {
    memcpy(v15, v16, 8 * v10);
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241A5304C(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_241A41708(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  size_t v18 = j__malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (char *)v17 + v21;
  unint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  uint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241A532B0(char a1, int64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    a5(0);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_241A35FBC(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

void sub_241A53468(uint64_t a1, int a2, unint64_t *a3)
{
  uint64_t v72 = a3;
  uint64_t v6 = sub_241CD7190();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD7020();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A55E2C();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    int v61 = a2;
    uint64_t v59 = v3;
    uint64_t v60 = v18;
    id v19 = (char *)&v57 + *(int *)(v15 + 48) - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v58 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v20 = a1 + v58;
    uint64_t v65 = *(void *)(v16 + 72);
    uint64_t v62 = a1;
    unint64_t v21 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_bridgeObjectRetain();
    sub_241A55E9C(v20, (uint64_t)v21, (uint64_t (*)(void))sub_241A55E2C);
    unint64_t v22 = (unint64_t)v9;
    uint64_t v66 = v11;
    unint64_t v23 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    int64_t v64 = v21;
    uint64_t v70 = v10;
    v24(v13, v21, v10);
    uint64_t v67 = v7;
    unint64_t v68 = v22;
    unint64_t v26 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32);
    uint64_t v25 = (void (**)(unint64_t, char *, uint64_t))(v7 + 32);
    unint64_t v63 = v19;
    uint64_t v27 = v19;
    id v28 = v26;
    uint64_t v69 = v6;
    v26(v22, (unint64_t)v27, v6);
    unint64_t v29 = *v72;
    id v71 = v13;
    unint64_t v31 = sub_241C0B674((uint64_t)v13);
    uint64_t v32 = *(void *)(v29 + 16);
    BOOL v33 = (v30 & 1) == 0;
    uint64_t v34 = v32 + v33;
    if (__OFADD__(v32, v33)) {
      goto LABEL_23;
    }
    LOBYTE(v22) = v30;
    if (*(void *)(v29 + 24) >= v34)
    {
      unint64_t v37 = v72;
      if ((v61 & 1) == 0) {
        goto LABEL_25;
      }
      goto LABEL_9;
    }
    sub_241B08ECC(v34, v61 & 1);
    unint64_t v35 = sub_241C0B674((uint64_t)v71);
    if ((v22 & 1) == (v36 & 1))
    {
      unint64_t v31 = v35;
      while (1)
      {
        unint64_t v37 = v72;
LABEL_9:
        if (v22) {
          break;
        }
        unint64_t v22 = *v37;
        *(void *)(*v37 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        v24((char *)(*(void *)(v22 + 48) + *(void *)(v66 + 72) * v31), v71, v70);
        v28(*(void *)(v22 + 56) + *(void *)(v67 + 72) * v31, v68, v69);
        uint64_t v40 = *(void *)(v22 + 16);
        BOOL v41 = __OFADD__(v40, 1);
        uint64_t v42 = v40 + 1;
        if (!v41)
        {
          *(void *)(v22 + 16) = v42;
          uint64_t v24 = (void (*)(char *, char *, uint64_t))(v60 - 1);
          if (v60 == 1)
          {
LABEL_22:
            swift_bridgeObjectRelease_n();
            return;
          }
          unint64_t v31 = v62 + v65 + v58;
          while (1)
          {
            uint64_t v43 = (uint64_t)v64;
            sub_241A55E9C(v31, (uint64_t)v64, (uint64_t (*)(void))sub_241A55E2C);
            unsigned int v44 = *v23;
            uint64_t v45 = (uint64_t)v71;
            (*v23)(v71, v43, v70);
            uint64_t v46 = *v25;
            (*v25)(v68, v63, v69);
            unint64_t v47 = *v72;
            unint64_t v22 = sub_241C0B674(v45);
            uint64_t v49 = *(void *)(v47 + 16);
            BOOL v50 = (v48 & 1) == 0;
            uint64_t v51 = v49 + v50;
            if (__OFADD__(v49, v50)) {
              break;
            }
            id v28 = v48;
            if (*(void *)(v47 + 24) < v51)
            {
              sub_241B08ECC(v51, 1);
              unint64_t v52 = sub_241C0B674((uint64_t)v71);
              if ((v28 & 1) != (v53 & 1)) {
                goto LABEL_26;
              }
              unint64_t v22 = v52;
            }
            if (v28) {
              goto LABEL_10;
            }
            uint64_t v54 = (void *)*v72;
            *(void *)(*v72 + 8 * (v22 >> 6) + 64) |= 1 << v22;
            v44((char *)(v54[6] + *(void *)(v66 + 72) * v22), (uint64_t)v71, v70);
            v46(v54[7] + *(void *)(v67 + 72) * v22, (char *)v68, v69);
            uint64_t v55 = v54[2];
            BOOL v41 = __OFADD__(v55, 1);
            uint64_t v56 = v55 + 1;
            if (v41) {
              goto LABEL_24;
            }
            v54[2] = v56;
            v31 += v65;
            uint64_t v24 = (void (*)(char *, char *, uint64_t))((char *)v24 - 1);
            if (!v24) {
              goto LABEL_22;
            }
          }
LABEL_23:
          __break(1u);
        }
LABEL_24:
        __break(1u);
LABEL_25:
        sub_241B07E3C();
      }
LABEL_10:
      uint64_t v38 = (void *)swift_allocError();
      swift_willThrow();
      id v75 = v38;
      id v39 = v38;
      sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
      if (swift_dynamicCast()) {
        goto LABEL_27;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v67 + 8))(v68, v69);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v71, v70);
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_26:
      sub_241CDC170();
      __break(1u);
LABEL_27:
      uint64_t v73 = 0;
      unint64_t v74 = 0xE000000000000000;
      sub_241CDBE00();
      sub_241CDB180();
      sub_241CDBEB0();
      sub_241CDB180();
      sub_241CDBF10();
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_241A53ACC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_241A53B6C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  unint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0()
{
  unint64_t v0 = sub_241CDC130();
  swift_bridgeObjectRelease();
  if (v0 >= 0x16) {
    return 22;
  }
  else {
    return v0;
  }
}

uint64_t sub_241A53C70(unsigned __int8 a1)
{
  uint64_t v1 = a1;
  uint64_t result = 0;
  switch(v1)
  {
    case 1:
      uint64_t v3 = (unint64_t *)&unk_26B034E38;
      return sub_241A313AC(0, v3);
    case 2:
      uint64_t v3 = (unint64_t *)&unk_26B030480;
      return sub_241A313AC(0, v3);
    case 3:
      uint64_t v3 = (unint64_t *)&unk_26B030460;
      return sub_241A313AC(0, v3);
    case 4:
      uint64_t v3 = (unint64_t *)&unk_26B036908;
      return sub_241A313AC(0, v3);
    case 5:
      uint64_t v3 = (unint64_t *)&unk_26B030488;
      return sub_241A313AC(0, v3);
    case 6:
      uint64_t v3 = (unint64_t *)&unk_26B034E28;
      return sub_241A313AC(0, v3);
    case 7:
      uint64_t v3 = (unint64_t *)&unk_26B030490;
      return sub_241A313AC(0, v3);
    case 8:
      uint64_t v3 = (unint64_t *)&unk_26B02E828;
      return sub_241A313AC(0, v3);
    case 9:
      uint64_t v3 = (unint64_t *)&unk_268D421F0;
      return sub_241A313AC(0, v3);
    case 10:
      uint64_t v3 = (unint64_t *)&unk_26B034E70;
      return sub_241A313AC(0, v3);
    case 11:
      return result;
    case 12:
      uint64_t v3 = (unint64_t *)&unk_26B02E820;
      return sub_241A313AC(0, v3);
    case 13:
      uint64_t v3 = (unint64_t *)&unk_268D421E8;
      return sub_241A313AC(0, v3);
    case 14:
      uint64_t v3 = (unint64_t *)&unk_26B034E30;
      return sub_241A313AC(0, v3);
    case 15:
      uint64_t v3 = (unint64_t *)&unk_26B030498;
      return sub_241A313AC(0, v3);
    case 16:
      uint64_t v3 = (unint64_t *)&unk_26B034E40;
      return sub_241A313AC(0, v3);
    case 17:
      uint64_t v3 = (unint64_t *)&unk_26B030468;
      return sub_241A313AC(0, v3);
    case 18:
      uint64_t v3 = (unint64_t *)&unk_268D421E0;
      return sub_241A313AC(0, v3);
    case 19:
      uint64_t v3 = (unint64_t *)&unk_26B0304A0;
      return sub_241A313AC(0, v3);
    case 20:
      uint64_t v3 = (unint64_t *)&unk_26B038088;
      return sub_241A313AC(0, v3);
    case 21:
      uint64_t v3 = (unint64_t *)&unk_26B034E78;
      return sub_241A313AC(0, v3);
    default:
      uint64_t v3 = &qword_26B02E818;
      return sub_241A313AC(0, v3);
  }
}

id sub_241A53EB0(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v43 = a5;
  uint64_t v48 = a4;
  uint64_t v14 = sub_241CDA1A0();
  v42[1] = *(void *)(v14 - 8);
  v42[2] = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v45 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A41708(0, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  id v19 = (char *)v42 - v18;
  sub_241A41708(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v16);
  MEMORY[0x270FA5388](v20 - 8);
  unint64_t v22 = (char *)v42 - v21;
  uint64_t v46 = sub_241CD9970();
  uint64_t v23 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v25 = (char *)v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v8;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v47 = result;
    if (a2 >> 60 != 15)
    {
      sub_241A55BF8(a1, a2);
      uint64_t v27 = v19;
      uint64_t v28 = v23;
      uint64_t v29 = a6;
      char v30 = (void *)sub_241CD6AD0();
      objc_msgSend(v47, sel_setValueData_, v30);

      a6 = v29;
      uint64_t v23 = v28;
      id v19 = v27;
      sub_241A54FC8(a1, a2);
    }
    id v31 = v47;
    if (a3 != 22)
    {
      HKCodableSummaryCurrentValue.Kind.rawValue.getter(a3);
      uint64_t v32 = (void *)sub_241CDB090();
      swift_bridgeObjectRelease();
      objc_msgSend(v31, sel_setKindRawValue_, v32);
    }
    if (a6) {
      objc_msgSend(v31, sel_setSupplementaryValue_, a6);
    }
    uint64_t v33 = v46;
    if (a7)
    {
      uint64_t v34 = (void *)sub_241CDAF70();
      swift_bridgeObjectRelease();
      id v35 = objc_msgSend(v34, sel_codableMetadata);

      objc_msgSend(v31, sel_setMetadataDictionary_, v35);
    }
    sub_241A55068(v48, (uint64_t)v22, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v33) == 1)
    {
      sub_241A55F04((uint64_t)v22, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v22, v33);
      sub_241CD6740();
      swift_allocObject();
      sub_241CD6730();
      sub_241A55020(&qword_26B02E908, MEMORY[0x263F46CA8]);
      uint64_t v36 = sub_241CD6720();
      unint64_t v38 = v37;
      swift_release();
      id v39 = (void *)sub_241CD6AD0();
      sub_241A37374(v36, v38);
      objc_msgSend(v31, sel_setQueryConfigurationData_, v39);

      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v33);
    }
    uint64_t v40 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v41 = v43;
    sub_241A55068(v43, (uint64_t)v19, &qword_26B032050, MEMORY[0x263F45780]);
    sub_241A54FDC((unint64_t *)&qword_26B030438, &qword_26B030440);
    sub_241CD8A20();

    sub_241A55F04(v41, &qword_26B032050, v40);
    sub_241A55F04(v48, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    return v31;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241A54648(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a6;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v34 = a1;
  unint64_t v35 = a2;
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A41708(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v34 - v11;
  sub_241A41708(0, &qword_26B032050, MEMORY[0x263F45780], v9);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  id v19 = (char *)&v34 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v34 - v20;
  uint64_t v36 = a7;
  sub_241A55E9C(a7, (uint64_t)v40, (uint64_t (*)(void))sub_241A55B30);
  uint64_t v22 = v41;
  if (!v41)
  {
    sub_241A55B98((uint64_t)v40, (uint64_t (*)(void))sub_241A55B30);
    uint64_t v27 = sub_241CD7AB0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v19, 1, 1, v27);
    goto LABEL_5;
  }
  uint64_t v23 = v42;
  sub_241A311E0(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  uint64_t v24 = sub_241CD7AB0();
  uint64_t v25 = *(void *)(v24 - 8);
  unint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56);
  v26(v19, 0, 1, v24);
  sub_241A31190((uint64_t)v40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v19, 1, v24) == 1)
  {
LABEL_5:
    sub_241CD7A80();
    uint64_t v28 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v21, 0, 1, v28);
    sub_241A55F04((uint64_t)v19, &qword_26B032050, MEMORY[0x263F45780]);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v21, v19, v24);
  v26(v21, 0, 1, v24);
LABEL_6:
  uint64_t v29 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
  uint64_t v30 = v37;
  sub_241A55068(v37, (uint64_t)v12, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  id v31 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
  sub_241A55068((uint64_t)v21, (uint64_t)v16, &qword_26B032050, MEMORY[0x263F45780]);
  id v32 = sub_241A53EB0(v34, v35, a3, (uint64_t)v12, (uint64_t)v16, v38, v39);
  sub_241A55B98(v36, (uint64_t (*)(void))sub_241A55B30);
  sub_241A55F04(v30, (unint64_t *)&qword_26B0321F0, v29);
  sub_241A55F04((uint64_t)v21, &qword_26B032050, v31);
  return v32;
}

_OWORD *sub_241A54AA0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_241A54AB0()
{
  id v0 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
  objc_msgSend(v0, sel__value);
  double v2 = v1;

  id v3 = objc_msgSend(self, sel_countUnit);
  id v4 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
  objc_msgSend(v4, sel__value);
  double v6 = v5;

  id v7 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v3, v6 + 29.0);
  objc_msgSend(v7, sel__value);
  double v9 = v8;

  if (v2 > v9) {
    __break(1u);
  }
}

uint64_t _sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = sub_241CDBFD0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

void *sub_241A54BF8(uint64_t a1, unint64_t a2, char a3, void *a4, int a5, uint64_t a6)
{
  sub_241A41708(0, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v29 - v13;
  id v15 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!v15)
  {
    __break(1u);
    JUMPOUT(0x241A54FB4);
  }
  uint64_t v16 = v15;
  v29[1] = a5;
  uint64_t v30 = a6;
  if (a4)
  {
    sub_241A313AC(0, &qword_26B038E70);
    id v17 = a4;
    id v18 = v16;
    id v19 = v17;
    id v20 = HKCodableQueryAnchor.init(queryAnchor:)(v19);
    objc_msgSend(v18, sel_setDatabaseChangesQueryAnchor_, v20);
  }
  else
  {
    id v21 = v15;
  }
  if (a2 >> 60 != 15)
  {
    sub_241A3731C(a1, a2);
    uint64_t v22 = (void *)sub_241CD6AD0();
    objc_msgSend(v16, sel_setContentData_, v22);

    sub_241A54FC8(a1, a2);
  }
  switch(a3)
  {
    case 4:
      break;
    default:
      uint64_t v23 = (void *)sub_241CDB090();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_setKindRawValue_, v23);

      break;
  }
  uint64_t v24 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setAudienceRawValue_, v24);

  uint64_t v25 = sub_241CD7AB0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v14, v30, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v14, 0, 1, v25);
  sub_241A54FDC(&qword_26B0303D8, (unint64_t *)&qword_26B0303E0);
  sub_241CD8A20();

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v25);
  return v16;
}

uint64_t sub_241A54FC8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_241A37374(a1, a2);
  }
  return a1;
}

uint64_t sub_241A54FDC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A313AC(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A55020(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A55068(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A41708(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_241A550E8()
{
  if (!qword_26B034D10)
  {
    sub_241A313AC(255, &qword_26B034D20);
    sub_241CD6810();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B034D10);
    }
  }
}

unint64_t sub_241A55170()
{
  unint64_t result = qword_268D421C8;
  if (!qword_268D421C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D421C8);
  }
  return result;
}

unint64_t sub_241A551C8()
{
  unint64_t result = qword_268D421D0;
  if (!qword_268D421D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D421D0);
  }
  return result;
}

uint64_t _s4KindOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s4KindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241A55378);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_241A553A0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_241A553A8(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for HKCodableSummaryData.Kind()
{
  return &type metadata for HKCodableSummaryData.Kind;
}

uint64_t _s4KindOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s4KindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241A5551CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HKCodableSummaryCurrentValue.Kind()
{
  return &type metadata for HKCodableSummaryCurrentValue.Kind;
}

void sub_241A55554()
{
  if (!qword_26B0356B0)
  {
    sub_241CDAF60();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B0356B0);
    }
  }
}

void sub_241A555BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CDAF60();
    uint64_t v7 = sub_241A55020(&qword_26B0356B8, MEMORY[0x263F090E8]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241A55658@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_241A4983C(a1, a2);
}

uint64_t sub_241A55678(uint64_t a1)
{
  sub_241A555BC(0, &qword_26B036820, MEMORY[0x263F8D870]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241A556F0()
{
  if (!qword_26B036828)
  {
    sub_241A555BC(255, &qword_26B036820, MEMORY[0x263F8D870]);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B036828);
    }
  }
}

uint64_t sub_241A55764(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_241A555BC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_241A557D0(uint64_t a1, uint64_t a2)
{
  sub_241A555BC(0, &qword_26B036820, MEMORY[0x263F8D870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241A55850(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *sub_241A55888(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_241A558EC()
{
  if (!qword_26B031F78)
  {
    sub_241CD6810();
    sub_241A56000(255, (unint64_t *)&qword_26B034CF0, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B031F78);
    }
  }
}

uint64_t sub_241A55980(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_241A5598C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_241A559A4()
{
  if (!qword_26B034F58)
  {
    sub_241A35FBC(255, &qword_26B032068);
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034F58);
    }
  }
}

void sub_241A55A0C()
{
  if (!qword_26B034F60)
  {
    sub_241A35FBC(255, (unint64_t *)&qword_26B032070);
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034F60);
    }
  }
}

unint64_t sub_241A55A74()
{
  unint64_t result = qword_26B030358;
  if (!qword_26B030358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030358);
  }
  return result;
}

void sub_241A55AC8()
{
  if (!qword_26B034FE0)
  {
    sub_241A35FBC(255, (unint64_t *)&qword_26B035008);
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034FE0);
    }
  }
}

void sub_241A55B30()
{
  if (!qword_26B0335C8)
  {
    sub_241A35FBC(255, &qword_26B0335C0);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0335C8);
    }
  }
}

uint64_t sub_241A55B98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241A55BF8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_241A3731C(a1, a2);
  }
  return a1;
}

void sub_241A55C0C()
{
  if (!qword_26B031F60)
  {
    sub_241CD6810();
    sub_241A55C80();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B031F60);
    }
  }
}

void sub_241A55C80()
{
  if (!qword_26B034CC0)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B0304E8);
    unint64_t v0 = sub_241CDB320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034CC0);
    }
  }
}

void sub_241A55CE8()
{
  if (!qword_26B0369C0)
  {
    sub_241A56000(255, (unint64_t *)&qword_26B034CF0, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0369C0);
    }
  }
}

uint64_t sub_241A55D64@<X0>(void **a1@<X0>, char *a2@<X8>)
{
  return sub_241A4B024(a1, *(void **)(v2 + 16), a2);
}

void sub_241A55D80()
{
  if (!qword_26B036948)
  {
    sub_241CD7020();
    sub_241CD7190();
    sub_241A55020(&qword_26B0354C8, MEMORY[0x263F42CD0]);
    unint64_t v0 = sub_241CDBFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B036948);
    }
  }
}

void sub_241A55E2C()
{
  if (!qword_26B0354E0)
  {
    sub_241CD7020();
    sub_241CD7190();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B0354E0);
    }
  }
}

uint64_t sub_241A55E9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241A55F04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A41708(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241A55F74()
{
  if (!qword_26B034C08)
  {
    sub_241A56000(255, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B034C08);
    }
  }
}

void sub_241A56000(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241A56090()
{
  uint64_t v1 = *v0;
  if ((objc_msgSend(v1, sel_paused) & 1) == 0
    && (objc_msgSend(v1, sel_hasAppleStandHoursGoal) & 1) != 0)
  {
    objc_msgSend(v1, sel_hasAppleExerciseTimeGoal);
  }

  return sub_241CD7A80();
}

id sub_241A5611C()
{
  uint64_t v0 = sub_241CDA1A0();
  uint64_t v29 = *(void *)(v0 - 8);
  uint64_t v30 = v0;
  MEMORY[0x270FA5388](v0);
  id v32 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_241CD9280();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  MEMORY[0x270FA5388](v2);
  id v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241CD7B00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A5B410();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD7B30();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD7720();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_241A59F84(&qword_26B031AA8, MEMORY[0x263F457B0]);
    swift_willThrowTypedImpl();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    id v15 = (void *)sub_241CD76D0();
    uint64_t v16 = (void *)*MEMORY[0x263F09730];
LABEL_5:
    id v21 = v31;
    id v19 = v16;
    id v20 = 0;
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  sub_241CD7B20();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v15 = (void *)sub_241CD76D0();
  uint64_t v16 = (void *)*MEMORY[0x263F09730];
  if (!v18) {
    goto LABEL_5;
  }
  id v19 = v16;
  id v20 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  id v21 = v31;
LABEL_6:
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v19, v15, v20);

  sub_241A313AC(0, &qword_26B031F18);
  sub_241CD92F0();
  uint64_t v23 = (void *)sub_241CD9290();
  id v24 = objc_msgSend(v23, sel_areAllRequirementsSatisfied);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v28);
  return v24;
}

uint64_t sub_241A56770@<X0>(uint64_t a1@<X8>)
{
  return sub_241A5B2E8(v1, a1, &qword_26B038F10, MEMORY[0x263F062D0]);
}

uint64_t sub_241A567AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_241CD77C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_241A5681C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_241A56828(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_241A56860(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_241A5686C@<X0>(uint64_t a1@<X8>)
{
  return sub_241A57054(type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_241A56884@<X0>(uint64_t a1@<X8>)
{
  return sub_241A57054(type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_241A5689C@<X0>(uint64_t a1@<X8>)
{
  return sub_241A5692C(type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_241A568B4@<X0>(uint64_t a1@<X8>)
{
  return sub_241A5692C(type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_241A568CC@<X0>(uint64_t a1@<X8>)
{
  return sub_241A573D0(type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_241A568E4@<X0>(uint64_t a1@<X8>)
{
  return sub_241A5692C(type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_241A568FC@<X0>(uint64_t a1@<X8>)
{
  return sub_241A5692C(type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_241A56914@<X0>(uint64_t a1@<X8>)
{
  return sub_241A5692C(type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request, a1);
}

uint64_t sub_241A5692C@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  v21[1] = a2;
  v21[0] = sub_241CD7650();
  uint64_t v4 = *(void *)(v21[0] - 8);
  MEMORY[0x270FA5388](v21[0]);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)sub_241CD76E0();
  sub_241A5B368(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v9 = a1(0);
  *(void *)(inited + 32) = sub_241CD7770();
  v21[2] = inited;
  sub_241CDB2E0();
  char v10 = *(unsigned char *)(v2 + *(int *)(v9 + 36));
  sub_241A3561C(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v11 = sub_241CD73B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  if (v10)
  {
    *(_OWORD *)(v15 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v15 + v14, *MEMORY[0x263F454D0], v11);
  }
  else
  {
    *(_OWORD *)(v15 + 16) = xmmword_241CEB720;
    unint64_t v17 = v15 + v14;
    uint64_t v18 = *(void (**)(unint64_t, void, uint64_t))(v12 + 104);
    v18(v17, *MEMORY[0x263F45520], v11);
    v18(v17 + v13, *MEMORY[0x263F45538], v11);
  }
  id v16 = v7;
  sub_241C5D74C(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v19 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v19);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, void))(v4 + 104))(v6, *MEMORY[0x263F45690], v21[0]);
  sub_241CD7680();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241A56C90@<X0>(uint64_t a1@<X8>)
{
  return sub_241A57054(type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_241A56CA8@<X0>(uint64_t a1@<X8>)
{
  return sub_241A56CD8(type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_241A56CC0@<X0>(uint64_t a1@<X8>)
{
  return sub_241A56CD8(type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_241A56CD8@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  v21[1] = a2;
  v21[0] = sub_241CD7650();
  uint64_t v4 = *(void *)(v21[0] - 8);
  MEMORY[0x270FA5388](v21[0]);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)sub_241CD76E0();
  sub_241A5B368(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v9 = a1(0);
  *(void *)(inited + 32) = sub_241CD7770();
  v21[2] = inited;
  sub_241CDB2E0();
  char v10 = *(unsigned char *)(v2 + *(int *)(v9 + 24));
  sub_241A3561C(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v11 = sub_241CD73B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  if (v10)
  {
    *(_OWORD *)(v15 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v15 + v14, *MEMORY[0x263F454D0], v11);
  }
  else
  {
    *(_OWORD *)(v15 + 16) = xmmword_241CEB720;
    unint64_t v17 = v15 + v14;
    uint64_t v18 = *(void (**)(unint64_t, void, uint64_t))(v12 + 104);
    v18(v17, *MEMORY[0x263F45520], v11);
    v18(v17 + v13, *MEMORY[0x263F45538], v11);
  }
  id v16 = v7;
  sub_241C5D74C(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v19 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v19);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, void))(v4 + 104))(v6, *MEMORY[0x263F45690], v21[0]);
  sub_241CD7680();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241A5703C@<X0>(uint64_t a1@<X8>)
{
  return sub_241A57054(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_241A57054@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  v21[1] = a2;
  v21[0] = sub_241CD7650();
  uint64_t v4 = *(void *)(v21[0] - 8);
  MEMORY[0x270FA5388](v21[0]);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)sub_241CD76E0();
  sub_241A5B368(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v9 = a1(0);
  *(void *)(inited + 32) = sub_241CD7770();
  v21[2] = inited;
  sub_241CDB2E0();
  char v10 = *(unsigned char *)(v2 + *(int *)(v9 + 40));
  sub_241A3561C(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v11 = sub_241CD73B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  if (v10)
  {
    *(_OWORD *)(v15 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v15 + v14, *MEMORY[0x263F454D0], v11);
  }
  else
  {
    *(_OWORD *)(v15 + 16) = xmmword_241CEB720;
    unint64_t v17 = v15 + v14;
    uint64_t v18 = *(void (**)(unint64_t, void, uint64_t))(v12 + 104);
    v18(v17, *MEMORY[0x263F45520], v11);
    v18(v17 + v13, *MEMORY[0x263F45538], v11);
  }
  id v16 = v7;
  sub_241C5D74C(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v19 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v19);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, void))(v4 + 104))(v6, *MEMORY[0x263F45690], v21[0]);
  sub_241CD7680();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241A573B8@<X0>(uint64_t a1@<X8>)
{
  return sub_241A573D0(type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_241A573D0@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  v21[1] = a2;
  v21[0] = sub_241CD7650();
  uint64_t v4 = *(void *)(v21[0] - 8);
  MEMORY[0x270FA5388](v21[0]);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)sub_241CD76E0();
  sub_241A5B368(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v9 = a1(0);
  *(void *)(inited + 32) = sub_241CD7770();
  v21[2] = inited;
  sub_241CDB2E0();
  char v10 = *(unsigned char *)(v2 + *(int *)(v9 + 20));
  sub_241A3561C(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v11 = sub_241CD73B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  if (v10)
  {
    *(_OWORD *)(v15 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v15 + v14, *MEMORY[0x263F454D0], v11);
  }
  else
  {
    *(_OWORD *)(v15 + 16) = xmmword_241CEB720;
    unint64_t v17 = v15 + v14;
    uint64_t v18 = *(void (**)(unint64_t, void, uint64_t))(v12 + 104);
    v18(v17, *MEMORY[0x263F45520], v11);
    v18(v17 + v13, *MEMORY[0x263F45538], v11);
  }
  id v16 = v7;
  sub_241C5D74C(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v19 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v19);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, void))(v4 + 104))(v6, *MEMORY[0x263F45690], v21[0]);
  sub_241CD7680();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241A57734@<X0>(uint64_t a1@<X8>)
{
  v18[1] = a1;
  v18[0] = sub_241CD7650();
  uint64_t v2 = *(void *)(v18[0] - 8);
  MEMORY[0x270FA5388](v18[0]);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_241CD76E0();
  sub_241A5B368(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = sub_241CD7770();
  _OWORD v18[2] = inited;
  sub_241CDB2E0();
  char v7 = *(unsigned char *)(v1
                + *(int *)(type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0)
                         + 40));
  sub_241A3561C(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v8 = sub_241CD73B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  if (v7)
  {
    *(_OWORD *)(v12 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v12 + v11, *MEMORY[0x263F454D0], v8);
  }
  else
  {
    *(_OWORD *)(v12 + 16) = xmmword_241CEB720;
    unint64_t v14 = v12 + v11;
    uint64_t v15 = *(void (**)(unint64_t, void, uint64_t))(v9 + 104);
    v15(v14, *MEMORY[0x263F45520], v8);
    v15(v14 + v10, *MEMORY[0x263F45538], v8);
  }
  id v13 = v5;
  sub_241C5D74C(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v16 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, void))(v2 + 104))(v4, *MEMORY[0x263F45690], v18[0]);
  sub_241CD7680();

  return swift_bridgeObjectRelease();
}

uint64_t *sub_241A57A88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = *v3;
  uint64_t v30 = sub_241CD7650();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_241CD7690();
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  id v26 = (id)sub_241CD76E0();
  sub_241A5B368(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v10 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v34 = inited;
  sub_241CDB2E0();
  char v11 = *(unsigned char *)(a2 + *(int *)(v10 + 40));
  sub_241A3561C(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v12 = sub_241CD73B0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  if (v11)
  {
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v16 + v15, *MEMORY[0x263F454D0], v12);
  }
  else
  {
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_241CEB720;
    unint64_t v18 = v16 + v15;
    unint64_t v19 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
    v19(v18, *MEMORY[0x263F45520], v12);
    v19(v18 + v14, *MEMORY[0x263F45538], v12);
  }
  id v17 = v26;
  sub_241C5D74C(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v20 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v20);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, *MEMORY[0x263F45690], v30);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries54CardioFitnessCurrentValueSummarySharableModelGenerator_domain, v8, v31);
  uint64_t v21 = sub_241A59F84(&qword_26B02FD38, (void (*)(uint64_t))type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator);
  uint64_t v22 = v33;
  uint64_t v23 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v33, a2, v32, v21);
  sub_241A5B3B4(a2);
  uint64_t v24 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v22, v24);
  v3[2] = v23;
  return v3;
}

uint64_t sub_241A57F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_241CD7650();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD7690();
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A5B0FC();
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v51 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v40 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  int v43 = (*(uint64_t (**)(uint64_t))(a3 + *(int *)(v12 + 44)))(a2);
  uint64_t v46 = sub_241CD76D0();
  uint64_t v13 = self;
  uint64_t v14 = (void *)sub_241CD6790();
  id v15 = objc_msgSend(v13, sel_predicateForSamplesWithinDateInterval_options_, v14, 0);

  sub_241CD76B0();
  sub_241A311E0(v54, v54[3]);
  uint64_t v16 = (void *)sub_241CD75B0();
  id v17 = (void *)sub_241CD7770();
  id v18 = v15;
  uint64_t v19 = sub_241CDB5D0();

  id v41 = v18;
  sub_241A31190((uint64_t)v54);
  uint64_t v53 = v19;
  sub_241CD7730();
  unint64_t v20 = (void *)sub_241CD76E0();
  sub_241A5B368(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v52 = inited;
  sub_241CDB2E0();
  LOBYTE(a3) = *(unsigned char *)(a3 + *(int *)(v12 + 40));
  sub_241A3561C(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v22 = sub_241CD73B0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 72);
  unint64_t v25 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  if (a3)
  {
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v26 + v25, *MEMORY[0x263F454D0], v22);
  }
  else
  {
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_241CEB720;
    unint64_t v28 = v26 + v25;
    uint64_t v29 = *(void (**)(unint64_t, void, uint64_t))(v23 + 104);
    v29(v28, *MEMORY[0x263F45520], v22);
    v29(v28 + v24, *MEMORY[0x263F45538], v22);
  }
  id v27 = v20;
  sub_241C5D74C(v26);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v30 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v30);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v42, *MEMORY[0x263F45690], v45);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241A5B1CC();
  sub_241A59F84(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
  uint64_t v31 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v48);
  sub_241A31190((uint64_t)v54);
  swift_release();
  v54[0] = v31;
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = (void *)v46;
  *(void *)(v32 + 16) = v49;
  *(void *)(v32 + 24) = v33;
  *(unsigned char *)(v32 + 32) = v43 & 1;
  sub_241A5B368(0, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper, (uint64_t (*)(void, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  id v34 = v33;
  unint64_t v35 = v40;
  sub_241CDA710();
  swift_release();
  swift_release();
  sub_241A59F84(&qword_26B02E970, (void (*)(uint64_t))sub_241A5B0FC);
  uint64_t v36 = v51;
  uint64_t v37 = sub_241CDA6D0();

  (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v36);
  return v37;
}

double sub_241A58660@<D0>(void **a1@<X0>, void *a2@<X2>, char a3@<W3>, void *a4@<X8>)
{
  uint64_t v5 = *a1;
  if (*a1 && (self, (uint64_t v8 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v9 = (void *)v8;
    id v10 = v5;
    id v11 = sub_241A58704(a2, v9, a3 & 1);
    *a4 = v9;
    a4[1] = a3 & 1;
    if (v12) {
      id v14 = v11;
    }
    else {
      id v14 = 0;
    }
    a4[2] = v14;
    a4[3] = v12 == 0;
    a4[4] = v12;
  }
  else
  {
    a4[4] = 0;
    double result = 0.0;
    *(_OWORD *)a4 = 0u;
    *((_OWORD *)a4 + 1) = 0u;
  }
  return result;
}

id sub_241A58704(void *a1, void *a2, char a3)
{
  uint64_t v6 = sub_241CDA1A0();
  MEMORY[0x270FA5388](v6);
  id result = 0;
  if (a3) {
    return sub_241A79214(a2, a1);
  }
  return result;
}

id sub_241A589B8(uint64_t a1, char *a2)
{
  id v75 = a2;
  uint64_t v3 = sub_241CD6D00();
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v74 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD9970();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v77 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v70 = (char *)&v69 - v9;
  id v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A3561C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v69 - v12;
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3561C(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v10);
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v20 = (char *)&v69 - v19;
  sub_241A3561C(0, &qword_26B032050, MEMORY[0x263F45780], v10);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v69 - v25;
  sub_241A5A030(a1, (uint64_t)v81, (uint64_t)&unk_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper, (uint64_t)type metadata accessor for SummaryModelQueryOutput, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241A5B368);
  if (!*(void *)&v81[0])
  {
    sub_241CD7A80();
    uint64_t v60 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v26, 0, 1, v60);
    sub_241A313AC(0, &qword_26B030440);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v20, 1, 1, v5);
    sub_241A5B2E8((uint64_t)v26, (uint64_t)v24, &qword_26B032050, MEMORY[0x263F45780]);
    id v49 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v20, (uint64_t)v24, 0, 0);
    sub_241A3F30C((uint64_t)v26);
    return v49;
  }
  uint64_t v72 = v20;
  v83[0] = v81[0];
  v83[1] = v81[1];
  uint64_t v84 = v82;
  uint64_t v76 = v17;
  id v27 = *(void **)&v81[0];
  sub_241A5A030((uint64_t)&v84, (uint64_t)v85, (uint64_t)&qword_26B031EF8, (uint64_t)sub_241A5A0A4, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241A3561C);
  uint64_t v28 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v29 = v75;
  id v30 = v27;
  uint64_t v31 = v76;
  id v32 = v30;
  sub_241A5A1D0((uint64_t)v85);
  sub_241CD9E50();
  sub_241A313AC(0, &qword_26B034E48);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v13, v31, v14);
  uint64_t v73 = v15;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  id v33 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v13, 1, 0);
  id v34 = objc_msgSend(v32, sel_sampleType);
  id v35 = objc_msgSend(v34, sel_code);

  uint64_t v36 = v29;
  id v71 = v32;
  if (v35 == (id)124 && (BYTE8(v83[0]) & 1) != 0 && (uint64_t v37 = sub_241A59390((uint64_t)v83)) != 0)
  {
    uint64_t v38 = (void *)v37;
    uint64_t v39 = v70;
    sub_241CD9A90();
    uint64_t v40 = v5;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v39, *MEMORY[0x263F46C48], v5);
    id v41 = v33;
    uint64_t v42 = v38;
    id result = objc_msgSend(v38, sel_data);
    if (result)
    {
      uint64_t v44 = result;
      sub_241A313AC(0, &qword_26B030440);
      uint64_t v45 = sub_241CD6AE0();
      unint64_t v47 = v46;

      uint64_t v48 = (uint64_t)v72;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v72, v39, v40);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v48, 0, 1, v40);
      uint64_t v80 = 0;
      long long v78 = 0u;
      long long v79 = 0u;
      id v49 = sub_241A54648(v45, v47, 7, v48, (uint64_t)v41, 0, (uint64_t)&v78);

      sub_241A37374(v45, v47);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v39, v40);
      id v50 = v71;

      sub_241A5B0C8((uint64_t)v85);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v14);
      return v49;
    }
  }
  else
  {
    sub_241A313AC(0, &qword_26B034E30);
    id v51 = objc_msgSend(v32, sel_quantity);
    uint64_t v52 = (uint64_t)v74;
    sub_241AF30A4(v32);
    uint64_t v53 = (char *)HKCodableSummaryQuantityValue.init(quantity:date:)(v51, v52);
    uint64_t v54 = &v36[*(int *)(v28 + 32)];
    uint64_t v55 = sub_241CD9ED0();
    uint64_t v56 = v77;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v77, v54, v55);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v56, *MEMORY[0x263F46C78], v5);
    id v57 = objc_msgSend(v32, sel_metadata);
    uint64_t v69 = v14;
    if (v57)
    {
      unint64_t v58 = v57;
      uint64_t v59 = sub_241CDAF90();
    }
    else
    {
      uint64_t v59 = 0;
    }
    id v61 = v33;
    id result = objc_msgSend(v53, sel_data);
    id v75 = v53;
    if (result)
    {
      uint64_t v62 = result;
      sub_241A313AC(0, &qword_26B030440);
      uint64_t v63 = sub_241CD6AE0();
      unint64_t v65 = v64;

      uint64_t v66 = (uint64_t)v72;
      uint64_t v67 = v77;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v72, v77, v5);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v66, 0, 1, v5);
      uint64_t v80 = 0;
      long long v78 = 0u;
      long long v79 = 0u;
      id v49 = sub_241A54648(v63, v65, 14, v66, (uint64_t)v61, v59, (uint64_t)&v78);

      sub_241A37374(v63, v65);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v67, v5);
      id v68 = v71;

      sub_241A5B0C8((uint64_t)v85);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v69);
      return v49;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_241A59390(uint64_t a1)
{
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_241CDA080();
  uint64_t v6 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD6D00();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v54 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CDA090();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x263F8D8F0];
  sub_241A5A030(a1 + 16, (uint64_t)v62, (uint64_t)&qword_26B034DD0, (uint64_t)type metadata accessor for HKCardioFitnessLevel, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241A3561C);
  uint64_t v14 = (id *)a1;
  sub_241A5A030((uint64_t)v62, (uint64_t)&v63, (uint64_t)&qword_26B034DD0, (uint64_t)type metadata accessor for HKCardioFitnessLevel, v13, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241A3561C);
  if ((v64 & 1) != 0 || !*(void *)(a1 + 32))
  {
    uint64_t v58 = v3;
    sub_241CDA140();
    id v27 = *(id *)a1;
    sub_241A5A030(a1 + 32, (uint64_t)v61, (uint64_t)&qword_26B031EF8, (uint64_t)sub_241A5A0A4, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241A3561C);
    id v28 = v27;
    sub_241A5A1D0((uint64_t)v61);
    id v29 = v28;
    sub_241A5A1D0((uint64_t)v61);
    id v30 = v29;
    sub_241A5A1D0((uint64_t)v61);
    id v31 = v30;
    sub_241A5A1D0((uint64_t)v61);
    id v32 = sub_241CDA190();
    os_log_type_t v33 = sub_241CDB650();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v60 = v56;
      *(_DWORD *)uint64_t v34 = 136315650;
      v59[0] = v57;
      swift_getMetatypeMetadata();
      uint64_t v57 = v2;
      uint64_t v35 = sub_241CDB120();
      v59[0] = sub_241A33FE4(v35, v36, &v60);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
      sub_241A5A030((uint64_t)v62, (uint64_t)v59, (uint64_t)&qword_26B034DD0, (uint64_t)type metadata accessor for HKCardioFitnessLevel, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241A3561C);
      sub_241A3561C(0, &qword_26B034DD0, (uint64_t (*)(uint64_t))type metadata accessor for HKCardioFitnessLevel, v37);
      uint64_t v38 = sub_241CDB120();
      v59[0] = sub_241A33FE4(v38, v39, &v60);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      sub_241A5B0C8((uint64_t)v61);

      sub_241A5B0C8((uint64_t)v61);
      *(_WORD *)(v34 + 22) = 2080;
      sub_241A5A030((uint64_t)v61, (uint64_t)v59, (uint64_t)&qword_26B031EF8, (uint64_t)sub_241A5A0A4, (uint64_t)v37, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241A3561C);
      sub_241A5A1D0((uint64_t)v61);
      sub_241A3561C(0, &qword_26B031EF8, (uint64_t (*)(uint64_t))sub_241A5A0A4, v37);
      uint64_t v40 = sub_241CDB120();
      v59[0] = sub_241A33FE4(v40, v41, &v60);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      sub_241A5B0C8((uint64_t)v61);

      sub_241A5B0C8((uint64_t)v61);
      _os_log_impl(&dword_241A23000, v32, v33, "[%s]: Unable to generate HKCodableSummaryCardioFitnessValue, cardio fitness data is missing. level:%s, data:%s. Falling back to quantity kind", (uint8_t *)v34, 0x20u);
      uint64_t v42 = v56;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v42, -1, -1);
      MEMORY[0x245637F20](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v58 + 8))(v5, v57);
    }
    else
    {

      sub_241A5B0C8((uint64_t)v61);
      sub_241A5B0C8((uint64_t)v61);

      sub_241A5B0C8((uint64_t)v61);
      sub_241A5B0C8((uint64_t)v61);

      (*(void (**)(char *, uint64_t))(v58 + 8))(v5, v2);
    }
    return 0;
  }
  uint64_t v57 = v63;
  unint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_241A5A1FC(v15);
  swift_bridgeObjectRelease();
  if (v16 < 0 || (v16 & 0x4000000000000000) != 0) {
    goto LABEL_21;
  }
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17)
  {
LABEL_22:
    swift_release();
LABEL_23:
    id v44 = *v14;
    id v45 = objc_msgSend(v44, sel_quantity);
    objc_msgSend(v45, sel__value);

    unint64_t v46 = v53;
    sub_241CDA020();
    id v47 = sub_241A42E90();
    sub_241A313AC(0, &qword_26B030490);
    id v48 = objc_msgSend(v44, sel_quantity);
    id v49 = objc_msgSend(v44, sel_endDate);
    uint64_t v50 = (uint64_t)v54;
    sub_241CD6CB0();

    id v43 = HKCodableSummaryCardioFitnessValue.init(quantity:date:cardioFitnessLevel:dataConfiguration:)(v48, v50, v57, v47);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v46, v56);
    return (uint64_t)v43;
  }
  while (1)
  {
    uint64_t v52 = v14;
    v59[0] = MEMORY[0x263F8EE78];
    uint64_t result = sub_241A52108(0, v17 & ~(v17 >> 63), 0);
    if (v17 < 0) {
      break;
    }
    uint64_t v14 = 0;
    uint64_t v19 = v59[0];
    while (1)
    {
      id v20 = (v16 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x245637160](v14, v16)
          : *(id *)(v16 + 8 * (void)v14 + 32);
      uint64_t v21 = v20;
      objc_msgSend(v20, sel_vo2MaxLowerBound);
      double v23 = v22;
      objc_msgSend(v21, sel_vo2MaxUpperBound);
      if (v23 > v24) {
        break;
      }
      objc_msgSend(v21, sel_cardioFitnessLevel);
      sub_241CDA050();

      v59[0] = v19;
      unint64_t v26 = *(void *)(v19 + 16);
      unint64_t v25 = *(void *)(v19 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_241A52108(v25 > 1, v26 + 1, 1);
        uint64_t v19 = v59[0];
      }
      uint64_t v14 = (id *)((char *)v14 + 1);
      *(void *)(v19 + 16) = v26 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v19+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v26, v8, v58);
      if ((id *)v17 == v14)
      {
        swift_release();
        uint64_t v14 = v52;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_241CDBF50();
    swift_release();
    if (!v17) {
      goto LABEL_22;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_241A59C50()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries54CardioFitnessCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241A59CF8()
{
  return type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B02E7E0);
}

uint64_t sub_241A59D20()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_241A59DC4(uint64_t a1, char *a2)
{
  sub_241A5A030(a1, (uint64_t)v4, (uint64_t)&unk_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper, (uint64_t)type metadata accessor for SummaryModelQueryOutput, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241A5B368);
  return sub_241A589B8((uint64_t)v4, a2);
}

uint64_t sub_241A59E38()
{
  return swift_retain();
}

uint64_t sub_241A59E44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries54CardioFitnessCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

_UNKNOWN **sub_241A59EBC()
{
  return &off_26F5C0AA0;
}

uint64_t sub_241A59EC8(uint64_t a1)
{
  uint64_t result = sub_241A59F84(&qword_26B02FD30, (void (*)(uint64_t))type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241A59F20()
{
  return &off_26F5C0AE8;
}

uint64_t sub_241A59F2C(uint64_t a1)
{
  uint64_t result = sub_241A59F84(&qword_26B02FD40, (void (*)(uint64_t))type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241A59F84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_241A59FCC()
{
  return &off_26F5C0B00;
}

uint64_t sub_241A59FD8(uint64_t a1)
{
  uint64_t result = sub_241A59F84(&qword_26B034510, (void (*)(uint64_t))type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241A5A030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

void sub_241A5A0A4()
{
  if (!qword_26B030838)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B0304E8);
    sub_241A313AC(255, &qword_26B0303F0);
    sub_241A5A160(qword_26B0304F0, (unint64_t *)&qword_26B0304E8);
    unint64_t v0 = sub_241CDAFB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B030838);
    }
  }
}

uint64_t sub_241A5A160(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A313AC(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B02E7D0);
}

uint64_t sub_241A5A1D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_241A5A1FC(unint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_241CDBD00();
    if (v2) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = (uint64_t *)MEMORY[0x263F8EE78];
  }
  else
  {
    sub_241A5B368(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v3 = (uint64_t *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_241A5A6D8((uint64_t)&v8, v3 + 4, v2, a1);
  uint64_t result = sub_241A5B0F4();
  if (v6 == v2) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_241A5A31C(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_241CDBD00();
    if (v2) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    sub_241A5B368(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_241A5A9AC(&v8, v3 + 4, v2, a1);
  uint64_t result = sub_241A5B0F4();
  if (v6 == (void *)v2) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_241A5A43C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_241A5B368(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_241A5ACB8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_241A5B0F4();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_241A5A544(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_241A5B368(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241A5A6D8(uint64_t result, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = (void *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    uint64_t result = sub_241CDBEC0();
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    unint64_t v4 = result | 0x8000000000000000;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    int64_t v11 = 0;
    a3 = 0;
LABEL_45:
    *uint64_t v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    v7[3] = v11;
    v7[4] = v10;
    return a3;
  }
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v8 = a4 + 64;
  uint64_t v20 = ~v19;
  uint64_t v21 = -v19;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v10 = v22 & *(void *)(a4 + 64);
  uint64_t v9 = v20;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_45;
  }
  if (a3 < 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v23 = v9;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v24 = (unint64_t)(v9 + 64) >> 6;
  while ((v4 & 0x8000000000000000) != 0)
  {
    if (!sub_241CDBEF0())
    {
      a3 = v12;
LABEL_44:
      uint64_t v9 = v23;
      goto LABEL_45;
    }
    swift_unknownObjectRelease();
    sub_241A313AC(0, &qword_26B0303F0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v15 = v25;
    uint64_t result = swift_unknownObjectRelease();
    if (!v25) {
      goto LABEL_43;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3) {
      goto LABEL_44;
    }
  }
  if (v10)
  {
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v11 << 6);
    goto LABEL_7;
  }
  int64_t v16 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v16 >= v24) {
    goto LABEL_39;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  if (v17) {
    goto LABEL_23;
  }
  v11 += 2;
  if (v16 + 1 >= v24)
  {
    unint64_t v10 = 0;
    int64_t v11 = v16;
    goto LABEL_43;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v11);
  if (v17)
  {
LABEL_16:
    int64_t v16 = v11;
LABEL_23:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
LABEL_7:
    uint64_t result = (uint64_t)*(id *)(*(void *)(v4 + 56) + 8 * v14);
    uint64_t v15 = result;
    if (!result) {
      goto LABEL_43;
    }
    goto LABEL_8;
  }
  int64_t v18 = v16 + 2;
  if (v16 + 2 >= v24) {
    goto LABEL_39;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
LABEL_22:
    int64_t v16 = v18;
    goto LABEL_23;
  }
  int64_t v11 = v16 + 3;
  if (v16 + 3 >= v24)
  {
    unint64_t v10 = 0;
    int64_t v11 = v16 + 2;
    goto LABEL_43;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v11);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v16 + 4;
  if (v16 + 4 >= v24)
  {
LABEL_39:
    unint64_t v10 = 0;
LABEL_43:
    a3 = v12;
    goto LABEL_44;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17) {
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v16 >= v24)
    {
      unint64_t v10 = 0;
      int64_t v11 = v24 - 1;
      goto LABEL_43;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

void *sub_241A5A9AC(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  int64_t v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_241CDBCB0();
    sub_241A313AC(0, (unint64_t *)&qword_26B038440);
    sub_241A5A160((unint64_t *)&qword_26B030378, (unint64_t *)&qword_26B038440);
    uint64_t result = (void *)sub_241CDB3C0();
    uint64_t v4 = v27;
    uint64_t v7 = v28;
    uint64_t v8 = v29;
    int64_t v9 = v30;
    unint64_t v10 = v31;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v11 = 0;
    goto LABEL_38;
  }
  int64_t v9 = 0;
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = a4 + 56;
  uint64_t v8 = ~v19;
  uint64_t v20 = -v19;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v10 = v21 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v11 = 0;
LABEL_38:
    uint64_t v22 = v24;
LABEL_41:
    *uint64_t v22 = v4;
    v22[1] = v7;
    _OWORD v22[2] = v8;
    v22[3] = v9;
    v22[4] = v10;
    return (void *)v11;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v11 = 0;
  int64_t v25 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_241CDBD40()) {
        goto LABEL_40;
      }
      sub_241A313AC(0, (unint64_t *)&qword_26B038440);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v25)
    {
      unint64_t v10 = 0;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    if (v16) {
      goto LABEL_23;
    }
    int64_t v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      unint64_t v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25) {
        goto LABEL_44;
      }
      unint64_t v16 = *(void *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        int64_t v15 = v9 + 3;
        goto LABEL_23;
      }
      int64_t v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        unint64_t v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v17);
      if (!v16)
      {
        int64_t v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          unint64_t v10 = 0;
          int64_t v9 = v17;
          goto LABEL_40;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v15);
        if (!v16)
        {
          int64_t v18 = v9 + 6;
          while (v25 != v18)
          {
            unint64_t v16 = *(void *)(v7 + 8 * v18++);
            if (v16)
            {
              int64_t v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v10 = 0;
          int64_t v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v15 = v17;
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v9 = v15;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    id v14 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      uint64_t v11 = a3;
LABEL_40:
      uint64_t v8 = v23;
      uint64_t v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_241A5ACB8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_241A5AEB8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
LABEL_36:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_241A37260(*(void *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_241A5598C(v21, (uint64_t)v22);
    uint64_t result = sub_241A5598C(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      uint64_t v13 = a3;
LABEL_35:
      uint64_t v7 = v20;
      goto LABEL_36;
    }
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v17);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v12 = v17 + 1;
  if (v17 + 2 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  int64_t v12 = v17 + 2;
  if (v17 + 3 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  int64_t v19 = v17 + 4;
  int64_t v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    unint64_t v9 = 0;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    int64_t v17 = v19;
LABEL_23:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      int64_t v12 = v14 - 1;
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_241A5B0C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_241A5B0F4()
{
  return swift_release();
}

void sub_241A5B0FC()
{
  if (!qword_26B032408)
  {
    sub_241A5B1CC();
    sub_241A5B368(255, &qword_26B032CA0, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper, (uint64_t (*)(void, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241A59F84(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032408);
    }
  }
}

void sub_241A5B1CC()
{
  if (!qword_26B032790)
  {
    sub_241A5B23C();
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032790);
    }
  }
}

void sub_241A5B23C()
{
  if (!qword_26B034E90)
  {
    sub_241A313AC(255, &qword_26B0304D8);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034E90);
    }
  }
}

uint64_t sub_241A5B2A4()
{
  return MEMORY[0x270FA0238](v0, 33, 7);
}

double sub_241A5B2DC@<D0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_241A58660(a1, *(void **)(v2 + 24), *(unsigned char *)(v2 + 32), a2);
}

uint64_t sub_241A5B2E8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A3561C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_241A5B368(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241A5B3B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241A5B410()
{
  if (!qword_26B031F40)
  {
    sub_241CD7B30();
    sub_241CD7B00();
    sub_241A59F84(&qword_26B031AA8, MEMORY[0x263F457B0]);
    unint64_t v0 = sub_241CDC210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031F40);
    }
  }
}

unint64_t sub_241A5B4BC()
{
  unint64_t result = qword_268D42208;
  if (!qword_268D42208)
  {
    type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(255);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D42208);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  unint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper()
{
  return &type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper;
}

char *sub_241A5B748(char *a1, uint64_t *a2, int *a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    id v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_241CD6810();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_241A3561C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    int64_t v12 = &v4[v11];
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    v4[a3[6]] = *((unsigned char *)a2 + a3[6]);
    unint64_t v16 = &v4[v15];
    int64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *(void *)unint64_t v16 = *v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = a3[8];
    uint64_t v20 = &v4[v19];
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_241CD9ED0();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    unint64_t v26 = *(void **)((char *)a2 + v24);
    *(void *)&v4[v24] = v26;
    v4[v25] = *((unsigned char *)a2 + v25);
    uint64_t v27 = a3[11];
    uint64_t v28 = &v4[v27];
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *(void *)uint64_t v28 = *v29;
    *((void *)v28 + 1) = v30;
    id v31 = v26;
  }
  swift_retain();
  return v4;
}

uint64_t sub_241A5B9D8(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return swift_release();
}

char *sub_241A5BB44(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A3561C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_241CD9ED0();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = *(void **)&a2[v22];
  *(void *)&a1[v22] = v24;
  a1[v23] = a2[v23];
  uint64_t v25 = a3[11];
  unint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *((void *)v27 + 1);
  *(void *)unint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  id v29 = v24;
  swift_retain();
  return a1;
}

char *sub_241A5BD88(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A3561C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  a1[a3[6]] = a2[a3[6]];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_241CD9ED0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = *(void **)&a2[v23];
  uint64_t v25 = *(void **)&a1[v23];
  *(void *)&a1[v23] = v24;
  id v26 = v24;

  a1[a3[10]] = a2[a3[10]];
  uint64_t v27 = a3[11];
  uint64_t v28 = &a1[v27];
  id v29 = &a2[v27];
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = v30;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_241A5C044(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A3561C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_241CD9ED0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v18] = a2[v18];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  return a1;
}

char *sub_241A5C250(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A3561C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_241CD9ED0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  uint64_t v25 = a3[9];
  id v26 = *(void **)&a1[v25];
  *(void *)&a1[v25] = *(void *)&a2[v25];

  uint64_t v27 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(_OWORD *)&a1[v27] = *(_OWORD *)&a2[v27];
  swift_release();
  return a1;
}

uint64_t sub_241A5C4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241A5C4F8);
}

uint64_t sub_241A5C4F8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_241A3561C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD77C0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[7] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_241CD9ED0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_241A5C6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241A5C6C0);
}

uint64_t sub_241A5C6C0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_241A3561C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_241CD77C0();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_241CD9ED0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_241A5C874()
{
  sub_241A3561C(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_241CD77C0();
    if (v1 <= 0x3F)
    {
      sub_241CD9ED0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

id sub_241A5C9D8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v62 - v10;
  sub_241A5D1DC();
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v62 - v16;
  self;
  uint64_t v18 = swift_dynamicCastObjCClass();
  if (!v18)
  {
    sub_241CDA140();
    id v35 = a1;
    unint64_t v36 = sub_241CDA190();
    os_log_type_t v37 = sub_241CDB650();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(void *)&v66[0] = v39;
      *(_DWORD *)uint64_t v38 = 136315394;
      uint64_t v40 = sub_241CDC270();
      uint64_t v68 = sub_241A33FE4(v40, v41, (uint64_t *)v66);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      uint64_t v63 = v38 + 14;
      id v42 = objc_msgSend(v35, sel_sampleType);
      id v43 = objc_msgSend(v42, sel_identifier);
      uint64_t v64 = v6;
      id v44 = v43;

      uint64_t v45 = sub_241CDB0D0();
      unint64_t v47 = v46;

      uint64_t v68 = sub_241A33FE4(v45, v47, (uint64_t *)v66);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v36, v37, "[%s]: Unsupported sample type: %s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v39, -1, -1);
      MEMORY[0x245637F20](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v65 + 8))(v9, v64);
      return 0;
    }

    uint64_t v60 = *(void (**)(char *, uint64_t))(v65 + 8);
    id v61 = v9;
LABEL_12:
    v60(v61, v6);
    return 0;
  }
  uint64_t v19 = (void *)v18;
  sub_241A313AC(0, &qword_26B038088);
  id v20 = a1;
  uint64_t v21 = sub_241A4EC10(v19);
  if (!v21)
  {
    sub_241CDA140();
    id v48 = v20;
    id v49 = sub_241CDA190();
    os_log_type_t v50 = sub_241CDB650();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      *(void *)&v66[0] = v64;
      *(_DWORD *)uint64_t v51 = 136315394;
      uint64_t v52 = sub_241CDC270();
      uint64_t v68 = sub_241A33FE4(v52, v53, (uint64_t *)v66);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2080;
      uint64_t v63 = v51 + 14;
      id v54 = v48;
      id v55 = objc_msgSend(v54, sel_description);
      uint64_t v56 = sub_241CDB0D0();
      unint64_t v58 = v57;

      uint64_t v68 = sub_241A33FE4(v56, v58, (uint64_t *)v66);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v49, v50, "[%s]: Unable to create breathing disturbances data for sample: %s", (uint8_t *)v51, 0x16u);
      uint64_t v59 = v64;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v59, -1, -1);
      MEMORY[0x245637F20](v51, -1, -1);
    }
    else
    {
    }
    uint64_t v60 = *(void (**)(char *, uint64_t))(v65 + 8);
    id v61 = v11;
    goto LABEL_12;
  }
  uint64_t v22 = (void *)v21;
  uint64_t v23 = a2
      + *(int *)(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0) + 32);
  uint64_t v24 = sub_241CD9ED0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v17, v23, v24);
  uint64_t v25 = *MEMORY[0x263F46C78];
  uint64_t v26 = sub_241CD9970();
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v17, v25, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v17, 0, 1, v26);
  id v28 = a3;
  id result = objc_msgSend(v22, sel_data);
  if (result)
  {
    uint64_t v30 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v31 = sub_241CD6AE0();
    unint64_t v33 = v32;

    sub_241A5D234((uint64_t)v17, (uint64_t)v15);
    uint64_t v67 = 0;
    memset(v66, 0, sizeof(v66));
    id v34 = sub_241A54648(v31, v33, 20, (uint64_t)v15, (uint64_t)v28, 0, (uint64_t)v66);

    sub_241A37374(v31, v33);
    sub_241A5D298((uint64_t)v17);

    return v34;
  }
  __break(1u);
  return result;
}

uint64_t sub_241A5D0A4()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries57MostRecentSampleCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241A5D150()
{
  return type metadata accessor for BreathingDisturbancesCurrentValueSummarySharableModelGenerator();
}

uint64_t type metadata accessor for BreathingDisturbancesCurrentValueSummarySharableModelGenerator()
{
  uint64_t result = qword_268D42210;
  if (!qword_268D42210) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A5D1A4()
{
  return swift_updateClassMetadata2();
}

void sub_241A5D1DC()
{
  if (!qword_26B0321F0)
  {
    sub_241CD9970();
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0321F0);
    }
  }
}

uint64_t sub_241A5D234(uint64_t a1, uint64_t a2)
{
  sub_241A5D1DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241A5D298(uint64_t a1)
{
  sub_241A5D1DC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241A5D2F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v14 = a1;
  uint64_t v17 = a2;
  uint64_t v16 = sub_241CD7650();
  uint64_t v2 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241CD76E0();
  sub_241A683BC(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v5 = sub_241CD73B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_241CEB8E0;
  unint64_t v10 = v9 + v8;
  uint64_t v11 = *(void (**)(unint64_t, void, uint64_t))(v6 + 104);
  v11(v10, *MEMORY[0x263F45520], v5);
  v11(v10 + v7, *MEMORY[0x263F45538], v5);
  v11(v10 + 2 * v7, *MEMORY[0x263F454D0], v5);
  v11(v10 + 3 * v7, *MEMORY[0x263F45508], v5);
  v11(v10 + 4 * v7, *MEMORY[0x263F45500], v5);
  uint64_t v18 = v14;
  sub_241A683BC(0, &qword_26B034C68, type metadata accessor for SummaryModelConfiguration, MEMORY[0x263F8D488]);
  sub_241A694C0((unint64_t *)&qword_26B034C70, &qword_26B034C68, type metadata accessor for SummaryModelConfiguration);
  sub_241A27D54(&qword_26B0330B0, (void (*)(uint64_t))type metadata accessor for SummaryModelConfiguration);
  if ((unint64_t)sub_241CDB3E0() >> 62)
  {
    sub_241A313AC(0, (unint64_t *)&qword_26B038440);
    sub_241CDBF30();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_241CDC110();
    sub_241A313AC(0, (unint64_t *)&qword_26B038440);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F45690], v16);
  return sub_241CD7670();
}

uint64_t sub_241A5D6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))sub_241CDB550();
  uint64_t v5 = v4(a1, a2);
  swift_release();
  v8[5] = v5;
  sub_241CD7730();
  sub_241A693CC(0);
  sub_241A27D54(&qword_26B0327A8, sub_241A693CC);
  uint64_t v6 = sub_241CDA680();
  sub_241A31190((uint64_t)v8);
  swift_release();
  return v6;
}

uint64_t sub_241A5D798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_241CDB530();
  uint64_t v7 = v6(a1, a2, a3);
  swift_release();
  v10[5] = v7;
  sub_241CD7730();
  sub_241A692D8(0);
  sub_241A27D54(&qword_26B032798, sub_241A692D8);
  uint64_t v8 = sub_241CDA680();
  sub_241A31190((uint64_t)v10);
  swift_release();
  return v8;
}

uint64_t sub_241A5D890()
{
  return HKCodableSummaryData.isContentCompatibleWithCurrentVersion.getter() & 1;
}

uint64_t sub_241A5D8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v124 = a2;
  uint64_t v125 = a1;
  uint64_t v5 = *v3;
  uint64_t v121 = a3;
  uint64_t v122 = v5;
  uint64_t v6 = sub_241CD7690();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v106 = v8;
  uint64_t v107 = &v91[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A67D48();
  uint64_t v109 = v9;
  uint64_t v108 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v119 = &v91[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A67F00();
  uint64_t v111 = *(void *)(v11 - 8);
  uint64_t v112 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v110 = &v91[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_241CD7740();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v101 = &v91[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v117 = &v91[-v18];
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v116 = &v91[-v20];
  uint64_t v104 = v21;
  MEMORY[0x270FA5388](v19);
  uint64_t v95 = &v91[-v22];
  uint64_t v100 = sub_241CDA1A0();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v24 = &v91[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v114 = sub_241CD6EE0();
  uint64_t v25 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  uint64_t v27 = &v91[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v118 = v14;
  uint64_t v123 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v123((char *)v3 + OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_context, v125, v13);
  uint64_t v113 = v7;
  id v28 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v120 = v6;
  uint64_t v103 = v7 + 16;
  uint64_t v102 = v28;
  v28((unsigned char *)v3 + OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_domain, v124, v6);
  id v29 = objc_msgSend(objc_allocWithZone((Class)sub_241CD8110()), sel_init);
  *(void *)((char *)v3 + OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_calendarCache) = v29;
  id v30 = v29;
  sub_241CD76B0();
  sub_241A311E0(v127, v127[3]);
  uint64_t v31 = (void *)sub_241CD75B0();
  id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46780]), sel_initWithHealthStore_, v31);

  sub_241A31190((uint64_t)v127);
  id v105 = v30;
  id v33 = objc_msgSend(v30, sel_currentCalendar);
  sub_241CD6E50();

  id v34 = objc_allocWithZone(MEMORY[0x263F466D8]);
  id v35 = (void *)sub_241CD6E40();
  unint64_t v36 = (void *)sub_241CDB090();
  id v37 = objc_msgSend(v34, sel_initWithCalendar_queryIdentifier_, v35, v36);

  uint64_t v38 = v123;
  (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v27, v114);
  objc_msgSend(v32, sel_setSleepDataSourceProvider_, v37);

  uint64_t v114 = (uint64_t)v4;
  *(void *)((char *)v4 + OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_chartFactory) = v32;
  uint64_t v39 = v95;
  id v97 = v32;
  sub_241CDA0F0();
  uint64_t v40 = v125;
  v38(v39, v125, v13);
  v38(v116, v40, v13);
  uint64_t v41 = v14 + 16;
  v38(v117, v40, v13);
  uint64_t v98 = v24;
  id v42 = sub_241CDA190();
  os_log_type_t v43 = sub_241CDB670();
  int v44 = v43;
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v94 = swift_slowAlloc();
    uint64_t v126 = v94;
    *(_DWORD *)uint64_t v45 = 136315906;
    v127[0] = v122;
    swift_getMetatypeMetadata();
    os_log_t v93 = v42;
    uint64_t v46 = sub_241CDB120();
    v127[0] = sub_241A33FE4(v46, v47, &v126);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2080;
    id v48 = (void *)sub_241CD76E0();
    uint64_t v49 = sub_241CD73E0();
    int v92 = v44;
    os_log_type_t v50 = v39;
    unint64_t v52 = v51;

    v127[0] = sub_241A33FE4(v49, v52, &v126);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    unint64_t v53 = *(unsigned char **)(v118 + 8);
    uint64_t v96 = (v118 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    ((void (*)(char *, uint64_t))v53)(v50, v13);
    *(_WORD *)(v45 + 22) = 2080;
    id v54 = v116;
    sub_241CD76C0();
    uint64_t v55 = sub_241CD7C90();
    v127[0] = sub_241A33FE4(v55, v56, &v126);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v53)(v54, v13);
    *(_WORD *)(v45 + 32) = 2080;
    unint64_t v57 = v101;
    unint64_t v58 = v117;
    v123(v101, (uint64_t)v117, v13);
    uint64_t v59 = sub_241CDB120();
    v127[0] = sub_241A33FE4(v59, v60, &v126);
    sub_241CDBBF0();
    uint64_t v38 = v123;
    swift_bridgeObjectRelease();
    unint64_t v117 = v53;
    ((void (*)(char *, uint64_t))v53)(v58, v13);
    os_log_t v61 = v93;
    _os_log_impl(&dword_241A23000, v93, (os_log_type_t)v92, "[%s]_<%s>_%s: Initializing publisher for context: %s", (uint8_t *)v45, 0x2Au);
    uint64_t v62 = v94;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v62, -1, -1);
    MEMORY[0x245637F20](v45, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v99 + 8))(v98, v100);
  }
  else
  {
    uint64_t v63 = *(unsigned char **)(v118 + 8);
    uint64_t v96 = (v118 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    ((void (*)(char *, uint64_t))v63)(v39, v13);
    ((void (*)(char *, uint64_t))v63)(v116, v13);
    uint64_t v64 = v117;
    unint64_t v117 = v63;
    ((void (*)(char *, uint64_t))v63)(v64, v13);

    (*(void (**)(unsigned char *, uint64_t))(v99 + 8))(v98, v100);
    unint64_t v57 = v101;
  }
  v127[0] = v121;
  v38(v57, v125, v13);
  uint64_t v100 = v41;
  uint64_t v65 = v118;
  uint64_t v66 = *(unsigned __int8 *)(v118 + 80);
  uint64_t v101 = (char *)(v66 | 7);
  uint64_t v67 = (v66 + 16) & ~v66;
  uint64_t v115 = v13;
  unint64_t v116 = (char *)v67;
  uint64_t v68 = v13;
  unint64_t v69 = (v104 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v70 = swift_allocObject();
  uint64_t v118 = *(void *)(v65 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v118)(v70 + v67, v57, v68);
  *(void *)(v70 + v69) = v122;
  sub_241A67E50();
  id v71 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_241A691F4(0, &qword_26B031C30, MEMORY[0x263EFDCF0]);
  sub_241A27D54(&qword_26B031C18, (void (*)(uint64_t))sub_241A67E50);
  sub_241A69294(&qword_26B031C28, &qword_26B031C30, v71);
  sub_241CDA750();
  swift_release();
  uint64_t v72 = v57;
  uint64_t v73 = v115;
  v123(v72, v125, v115);
  unint64_t v74 = v107;
  v102(v107, v124, v120);
  unint64_t v75 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v76 = v113;
  unint64_t v77 = (v75 + *(unsigned __int8 *)(v113 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
  unint64_t v78 = (v106 + v77 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v79 = swift_allocObject();
  ((void (*)(char *, char *, uint64_t))v118)(&v116[v79], v72, v73);
  uint64_t v80 = v97;
  *(void *)(v79 + v69) = v97;
  unint64_t v81 = v105;
  *(void *)(v79 + v75) = v105;
  uint64_t v82 = v120;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v76 + 32))(v79 + v77, v74, v120);
  *(void *)(v79 + v78) = v122;
  sub_241A35FBC(0, &qword_26B032058);
  sub_241A27D54(&qword_26B031BB0, (void (*)(uint64_t))sub_241A67D48);
  id v83 = v81;
  id v84 = v80;
  uint64_t v85 = v110;
  uint64_t v86 = v109;
  uint64_t v87 = v119;
  sub_241CDA6E0();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v108 + 8))(v87, v86);
  sub_241A27D54(&qword_26B031B20, (void (*)(uint64_t))sub_241A67F00);
  uint64_t v88 = v112;
  uint64_t v89 = sub_241CDA6D0();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v124, v82);
  ((void (*)(uint64_t, uint64_t))v117)(v125, v115);
  (*(void (**)(unsigned char *, uint64_t))(v111 + 8))(v85, v88);
  uint64_t result = v114;
  *(void *)(v114 + OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_publisher) = v89;
  return result;
}

uint64_t sub_241A5E630@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v50 = a3;
  unint64_t v58 = a4;
  sub_241A691F4(0, &qword_268D422B8, MEMORY[0x263EFDE08]);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  uint64_t v52 = v7;
  MEMORY[0x270FA5388](v6);
  unint64_t v57 = (char *)&v47 - v8;
  uint64_t v9 = sub_241CD7740();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v47 - v14;
  uint64_t v16 = sub_241CDA1A0();
  uint64_t v55 = *(void *)(v16 - 8);
  uint64_t v56 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  sub_241CDA0F0();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v20(v15, a2, v9);
  unint64_t v53 = v13;
  v20(v13, a2, v9);
  id v21 = v19;
  id v22 = v19;
  id v54 = v18;
  uint64_t v23 = sub_241CDA190();
  os_log_type_t v24 = sub_241CDB650();
  int v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v26 = swift_slowAlloc();
    int v48 = v25;
    uint64_t v27 = v26;
    uint64_t v49 = swift_slowAlloc();
    uint64_t v60 = v49;
    *(_DWORD *)uint64_t v27 = 136315906;
    os_log_t v47 = v23;
    uint64_t v28 = sub_241CDC270();
    uint64_t v59 = sub_241A33FE4(v28, v29, &v60);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    id v30 = (void *)sub_241CD76E0();
    uint64_t v31 = sub_241CD73E0();
    unint64_t v33 = v32;

    uint64_t v59 = sub_241A33FE4(v31, v33, &v60);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    id v34 = *(void (**)(char *, uint64_t))(v10 + 8);
    v34(v15, v9);
    *(_WORD *)(v27 + 22) = 2080;
    id v35 = v53;
    sub_241CD76C0();
    uint64_t v36 = sub_241CD7C90();
    uint64_t v59 = sub_241A33FE4(v36, v37, &v60);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    v34(v35, v9);
    *(_WORD *)(v27 + 32) = 2080;
    uint64_t v59 = (uint64_t)v19;
    id v38 = v19;
    sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
    uint64_t v39 = sub_241CDB120();
    uint64_t v59 = sub_241A33FE4(v39, v40, &v60);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    uint64_t v23 = v47;
    _os_log_impl(&dword_241A23000, v47, (os_log_type_t)v48, "[%s]_%s_%s: Failed to create requests publisher: %s", (uint8_t *)v27, 0x2Au);
    uint64_t v41 = v49;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v41, -1, -1);
    MEMORY[0x245637F20](v27, -1, -1);
  }
  else
  {
    id v42 = *(void (**)(char *, uint64_t))(v10 + 8);
    v42(v15, v9);
    v42(v53, v9);
  }
  (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v56);
  sub_241A683BC(0, (unint64_t *)&unk_26B031AB8, type metadata accessor for SummaryModelConfiguration.Request, MEMORY[0x263F43968]);
  os_log_type_t v43 = v57;
  sub_241CDA5E0();
  sub_241A69294(&qword_268D422C0, &qword_268D422B8, MEMORY[0x263EFDE08]);
  uint64_t v44 = v51;
  uint64_t v45 = sub_241CDA6D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v43, v44);
  *unint64_t v58 = v45;
  return result;
}

void sub_241A5EBF8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, NSObject *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v162 = a6;
  os_log_t v159 = a5;
  uint64_t v157 = a4;
  uint64_t v165 = (uint64_t *)a7;
  uint64_t v158 = sub_241CD7690();
  uint64_t v161 = *(void *)(v158 - 8);
  MEMORY[0x270FA5388](v158);
  uint64_t v160 = (char *)&v154 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_241CD7740();
  uint64_t v11 = *(void *)(v167 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v167);
  uint64_t v14 = (char *)&v154 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v154 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v154 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v154 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v156 = (char *)&v154 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v154 - v26;
  uint64_t v164 = sub_241CDA1A0();
  uint64_t v163 = *(void *)(v164 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v164);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = *(void *)a1;
  id v166 = *(id *)(a1 + 8);
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a1 + 16) == 1)
    {
      id v34 = v31;
      id v35 = v166;
      sub_241CDA0F0();
      uint64_t v36 = v11;
      unint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
      uint64_t v38 = v167;
      v37(v17, a2, v167);
      v37(v14, a2, v38);
      id v39 = v35;
      swift_bridgeObjectRetain_n();
      id v166 = v39;
      unint64_t v40 = sub_241CDA190();
      os_log_type_t v41 = sub_241CDB670();
      int v42 = v41;
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v43 = swift_slowAlloc();
        uint64_t v157 = v34;
        uint64_t v44 = v43;
        uint64_t v156 = (char *)swift_slowAlloc();
        *(void *)&long long v170 = v156;
        *(_DWORD *)uint64_t v44 = 136316162;
        os_log_t v155 = v40;
        *(void *)&v172[0] = v162;
        swift_getMetatypeMetadata();
        LODWORD(v162) = v42;
        uint64_t v45 = sub_241CDB120();
        *(void *)&v172[0] = sub_241A33FE4(v45, v46, (uint64_t *)&v170);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 12) = 2080;
        os_log_t v47 = (void *)sub_241CD76E0();
        uint64_t v48 = sub_241CD73E0();
        v154 = v33;
        uint64_t v49 = v48;
        unint64_t v51 = v50;

        *(void *)&v172[0] = sub_241A33FE4(v49, v51, (uint64_t *)&v170);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        uint64_t v52 = *(void (**)(char *, uint64_t))(v36 + 8);
        v52(v17, v38);
        *(_WORD *)(v44 + 22) = 2080;
        sub_241CD76C0();
        uint64_t v53 = sub_241CD7C90();
        *(void *)&v172[0] = sub_241A33FE4(v53, v54, (uint64_t *)&v170);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        v52(v14, v38);
        *(_WORD *)(v44 + 32) = 2048;
        uint64_t v55 = (uint64_t)v154;
        Class isa = v154[2].isa;
        swift_bridgeObjectRelease();
        *(void *)&v172[0] = isa;
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 42) = 2080;
        unint64_t v57 = v166;
        id v58 = v166;
        id v59 = objc_msgSend(v58, sel_description);
        uint64_t v60 = sub_241CDB0D0();
        unint64_t v62 = v61;

        *(void *)&v172[0] = sub_241A33FE4(v60, v62, (uint64_t *)&v170);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        os_log_t v63 = v155;
        _os_log_impl(&dword_241A23000, v155, (os_log_type_t)v162, "[%s]_<%s>_%s: Emitting updateAnchorMetadata for %ld sharable models to anchor %s", (uint8_t *)v44, 0x34u);
        uint64_t v64 = v156;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v64, -1, -1);
        MEMORY[0x245637F20](v44, -1, -1);

        (*(void (**)(void *, uint64_t))(v163 + 8))(v157, v164);
        uint64_t v65 = v55;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v133 = *(void (**)(char *, uint64_t))(v36 + 8);
        v133(v17, v38);
        v133(v14, v38);

        unint64_t v57 = v166;
        swift_bridgeObjectRelease();
        (*(void (**)(void *, uint64_t))(v163 + 8))(v34, v164);
        uint64_t v65 = v33;
      }
      uint64_t v134 = v160;
      os_log_t v135 = v159;
      uint64_t v136 = v158;
      id v137 = v57;
      id v138 = sub_241A678BC(v65, v137);

      sub_241A683BC(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
      uint64_t v139 = *(void *)(sub_241CD7C30() - 8);
      unint64_t v140 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
      uint64_t v141 = swift_allocObject();
      *(_OWORD *)(v141 + 16) = xmmword_241CEB730;
      *(void *)(v141 + v140) = v138;
      (*(void (**)(void))(v139 + 104))();
      (*(void (**)(char *, os_log_t, uint64_t))(v161 + 16))(v134, v135, v136);
      uint64_t v142 = sub_241CD7CC0();
      uint64_t v143 = MEMORY[0x263F45918];
      id v144 = v165;
      v165[3] = v142;
      v144[4] = v143;
      sub_241A25BC8(v144);
      sub_241CD7CB0();
    }
    else
    {
      uint64_t v94 = (char *)&v154 - v30;
      v169[3] = sub_241A313AC(0, (unint64_t *)&qword_26B038E78);
      v169[4] = &protocol witness table for HKHealthChartFactory;
      v169[0] = a3;
      sub_241A313AC(0, &qword_26B030850);
      uint64_t v95 = v33;
      uint64_t v96 = v166;
      sub_241A68420(v33, v166, 2);
      id v97 = a3;
      uint64_t v98 = (uint64_t (*)(void))sub_241CDB8E0();
      sub_241A5FFE8(v33, a2, (uint64_t)v169, v157, v98, v99, (uint64_t **)&v170);
      swift_release();
      sub_241A31190((uint64_t)v169);
      if (v171)
      {
        sub_241A5598C(&v170, (uint64_t)v172);
        sub_241CDA0F0();
        uint64_t v100 = v11;
        uint64_t v101 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
        uint64_t v102 = v167;
        v101(v27, a2, v167);
        uint64_t v103 = v156;
        v101(v156, a2, v102);
        sub_241A37260((uint64_t)v172, (uint64_t)&v170);
        sub_241A68420(v95, v96, 2);
        sub_241A68420(v95, v96, 2);
        sub_241A68420(v95, v96, 2);
        sub_241A68420(v95, v96, 2);
        sub_241A68420(v95, v96, 2);
        swift_retain();
        uint64_t v104 = sub_241CDA190();
        os_log_type_t v105 = sub_241CDB670();
        int v106 = v105;
        if (os_log_type_enabled(v104, v105))
        {
          uint64_t v107 = v100;
          uint64_t v108 = swift_slowAlloc();
          uint64_t v161 = swift_slowAlloc();
          uint64_t v168 = v161;
          *(_DWORD *)uint64_t v108 = 136316674;
          LODWORD(v160) = v106;
          v169[0] = v162;
          swift_getMetatypeMetadata();
          uint64_t v109 = sub_241CDB120();
          os_log_t v159 = v104;
          v169[0] = sub_241A33FE4(v109, v110, &v168);
          unint64_t v162 = v94;
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v108 + 12) = 2080;
          uint64_t v111 = (void *)sub_241CD76E0();
          uint64_t v112 = sub_241CD73E0();
          unint64_t v114 = v113;

          v169[0] = sub_241A33FE4(v112, v114, &v168);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          uint64_t v115 = *(void (**)(char *, uint64_t))(v107 + 8);
          uint64_t v116 = v167;
          v115(v27, v167);
          *(_WORD *)(v108 + 22) = 2080;
          unint64_t v117 = v156;
          sub_241CD76C0();
          uint64_t v118 = sub_241CD7C90();
          v169[0] = sub_241A33FE4(v118, v119, &v168);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          v115(v117, v116);
          *(_WORD *)(v108 + 32) = 2080;
          if (*(unsigned char *)(v95 + 16)) {
            uint64_t v120 = 0x676E6972616873;
          }
          else {
            uint64_t v120 = 0x7972616D697270;
          }
          v169[0] = sub_241A33FE4(v120, 0xE700000000000000, &v168);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          uint64_t v121 = v166;
          sub_241A68494(v95, v166, 2);
          sub_241A68494(v95, v121, 2);
          *(_WORD *)(v108 + 42) = 2080;
          sub_241A311E0(&v170, v171);
          swift_getDynamicType();
          uint64_t v122 = sub_241CDC270();
          v169[0] = sub_241A33FE4(v122, v123, &v168);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A31190((uint64_t)&v170);
          *(_WORD *)(v108 + 52) = 2080;
          uint64_t v124 = sub_241A313AC(0, (unint64_t *)&qword_26B038E58);
          uint64_t v125 = swift_bridgeObjectRetain();
          uint64_t v126 = MEMORY[0x245636610](v125, v124);
          unint64_t v128 = v127;
          swift_bridgeObjectRelease();
          v169[0] = sub_241A33FE4(v126, v128, &v168);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A68494(v95, v121, 2);
          sub_241A68494(v95, v121, 2);
          *(_WORD *)(v108 + 62) = 2080;
          unint64_t v129 = AnchoredTypeState.logDescription.getter();
          v169[0] = sub_241A33FE4(v129, v130, &v168);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A68494(v95, v121, 2);
          sub_241A68494(v95, v121, 2);
          os_log_t v131 = v159;
          _os_log_impl(&dword_241A23000, v159, (os_log_type_t)v160, "[%s]_<%s>_%s_audience=%s: Emitting %s for type: %s, typeState: %s", (uint8_t *)v108, 0x48u);
          uint64_t v132 = v161;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v132, -1, -1);
          MEMORY[0x245637F20](v108, -1, -1);

          sub_241A68494(v95, v121, 2);
          (*(void (**)(char *, uint64_t))(v163 + 8))(v162, v164);
        }
        else
        {
          sub_241A68494(v95, v96, 2);
          v153 = *(void (**)(char *, uint64_t))(v100 + 8);
          v153(v27, v102);
          v153(v103, v102);
          sub_241A68494(v95, v96, 2);
          sub_241A68494(v95, v96, 2);
          sub_241A31190((uint64_t)&v170);
          sub_241A68494(v95, v96, 2);
          sub_241A68494(v95, v96, 2);
          swift_release();

          swift_release();
          (*(void (**)(char *, uint64_t))(v163 + 8))(v94, v164);
        }
        sub_241A5598C(v172, (uint64_t)v165);
      }
      else
      {
        sub_241A68494(v33, v96, 2);
        sub_241A68690((uint64_t)&v170, &qword_268D42220, &qword_26B032058);
        v152 = v165;
        v165[4] = 0;
        *(_OWORD *)v152 = 0u;
        *((_OWORD *)v152 + 1) = 0u;
      }
    }
  }
  else
  {
    unint64_t v66 = v33;
    uint64_t v67 = v32;
    swift_bridgeObjectRetain();
    sub_241CDA0F0();
    uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v69 = v167;
    v68(v23, a2, v167);
    v68(v20, a2, v69);
    uint64_t v70 = v166;
    sub_241A68420(v33, v166, 0);
    swift_bridgeObjectRetain();
    id v71 = sub_241CDA190();
    int v72 = sub_241CDB670();
    if (os_log_type_enabled(v71, (os_log_type_t)v72))
    {
      LODWORD(v156) = v72;
      v154 = v71;
      uint64_t v157 = v67;
      uint64_t v73 = swift_slowAlloc();
      os_log_t v155 = (os_log_t)swift_slowAlloc();
      *(void *)&long long v170 = v155;
      *(_DWORD *)uint64_t v73 = 136315906;
      *(void *)&v172[0] = v162;
      swift_getMetatypeMetadata();
      uint64_t v74 = v11;
      uint64_t v75 = sub_241CDB120();
      *(void *)&v172[0] = sub_241A33FE4(v75, v76, (uint64_t *)&v170);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 2080;
      unint64_t v77 = (void *)sub_241CD76E0();
      uint64_t v78 = sub_241CD73E0();
      unint64_t v80 = v79;

      *(void *)&v172[0] = sub_241A33FE4(v78, v80, (uint64_t *)&v170);
      unint64_t v66 = v33;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      unint64_t v81 = *(void (**)(char *, uint64_t))(v74 + 8);
      uint64_t v82 = v167;
      v81(v23, v167);
      *(_WORD *)(v73 + 22) = 2080;
      sub_241CD76C0();
      uint64_t v83 = sub_241CD7C90();
      *(void *)&v172[0] = sub_241A33FE4(v83, v84, (uint64_t *)&v170);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      v81(v20, v82);
      *(_WORD *)(v73 + 32) = 2048;
      if (v66 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v85 = sub_241CDBF50();
        sub_241A68494(v66, v166, 0);
      }
      else
      {
        uint64_t v85 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v86 = v165;
      uint64_t v87 = v166;
      uint64_t v88 = v163;
      uint64_t v89 = v160;
      os_log_t v90 = v159;
      uint64_t v91 = v158;
      int v92 = v154;
      sub_241A68494(v66, v166, 0);
      *(void *)&v172[0] = v85;
      sub_241CDBBF0();
      sub_241A68494(v66, v87, 0);
      _os_log_impl(&dword_241A23000, v92, (os_log_type_t)v156, "[%s]_<%s>_%s: Emitting reuse for %ld shared summaries", (uint8_t *)v73, 0x2Au);
      os_log_t v93 = v155;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v93, -1, -1);
      MEMORY[0x245637F20](v73, -1, -1);

      (*(void (**)(void *, uint64_t))(v88 + 8))(v157, v164);
    }
    else
    {
      sub_241A68494(v33, v70, 0);
      uint64_t v145 = *(void (**)(char *, uint64_t))(v11 + 8);
      uint64_t v146 = v167;
      v145(v23, v167);
      v145(v20, v146);
      sub_241A68494(v66, v70, 0);

      (*(void (**)(void *, uint64_t))(v163 + 8))(v67, v164);
      uint64_t v86 = v165;
      uint64_t v89 = v160;
      os_log_t v90 = v159;
      uint64_t v91 = v158;
    }
    sub_241A683BC(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
    uint64_t v147 = *(void *)(sub_241CD7C30() - 8);
    unint64_t v148 = (*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
    uint64_t v149 = swift_allocObject();
    *(_OWORD *)(v149 + 16) = xmmword_241CEB730;
    *(void *)(v149 + v148) = v66;
    (*(void (**)(void))(v147 + 104))();
    (*(void (**)(char *, os_log_t, uint64_t))(v161 + 16))(v89, v90, v91);
    uint64_t v150 = sub_241CD7CC0();
    uint64_t v151 = MEMORY[0x263F45918];
    v86[3] = v150;
    v86[4] = v151;
    sub_241A25BC8(v86);
    sub_241CD7CB0();
  }
}

uint64_t sub_241A5FFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t (*a5)(void)@<X4>, void (*a6)(char *, uint64_t)@<X5>, uint64_t **a7@<X8>)
{
  unint64_t v79 = a5;
  uint64_t v78 = a6;
  uint64_t v68 = a4;
  uint64_t v67 = a3;
  uint64_t v81 = a2;
  uint64_t v82 = a7;
  uint64_t v73 = type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x270FA5388](v73);
  unint64_t v77 = (uint64_t *)((char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = sub_241CD7740();
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v74 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_241CD9BA0();
  uint64_t v76 = *(void *)(v80 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v80);
  int v72 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v75 = (char *)&v65 - v12;
  uint64_t v13 = sub_241CD9A30();
  uint64_t v69 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = ((char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_241CD9970();
  uint64_t v66 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (void **)((char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = *(void *)(a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration)
      + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  sub_241A689B0(v25, (uint64_t)v24, type metadata accessor for SummaryModelConfiguration.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_241A685A4(0, (unint64_t *)&qword_26B0321E0, MEMORY[0x263F46CA8], sub_241A68508);
      uint64_t v61 = (uint64_t)v24 + *(int *)(v60 + 48);
      uint64_t v62 = v66;
      (*(void (**)(char *, void **, uint64_t))(v66 + 32))(v18, v24, v16);
      sub_241A69098(v61, (uint64_t)v21, (uint64_t (*)(void))sub_241A68508);
      uint64_t v63 = SummaryModelConfiguration.modelUniqueIdentifier.getter();
      sub_241A615C0(v81, v63, v64, v18, a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState, *(unsigned __int8 *)(a1+ OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal), (uint64_t)v21, v68, v82, *(unsigned char *)(a1 + 16));
      swift_bridgeObjectRelease();
      sub_241A68744((uint64_t)v21, (uint64_t (*)(void))sub_241A68508);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v18, v16);
      break;
    case 2u:
      sub_241A685A4(0, (unint64_t *)&qword_26B0321F8, MEMORY[0x263F46CD8], (void (*)(uint64_t))sub_241A6853C);
      swift_release();
      uint64_t v34 = v69;
      (*(void (**)(NSObject *, void **, uint64_t))(v69 + 32))(v15, v24, v13);
      uint64_t v35 = SummaryModelConfiguration.modelUniqueIdentifier.getter();
      uint64_t v37 = v36;
      uint64_t v38 = a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
      int v39 = *(unsigned __int8 *)(a1
                               + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal);
      v83[3] = v80;
      v83[4] = MEMORY[0x263F47068];
      sub_241A25BC8(v83);
      sub_241CD9B90();
      sub_241A654D0(v81, v35, v37, v15, v38, v39, (uint64_t)v83, v79, v82, (uint64_t)v78);
      swift_bridgeObjectRelease();
      (*(void (**)(NSObject *, uint64_t))(v34 + 8))(v15, v13);
      uint64_t result = sub_241A31190((uint64_t)v83);
      break;
    case 3u:
      unint64_t v40 = *v24;
      swift_release();
      uint64_t v41 = SummaryModelConfiguration.modelUniqueIdentifier.getter();
      uint64_t v43 = v42;
      uint64_t v44 = a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
      char v45 = *(unsigned char *)(a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal);
      unint64_t v46 = v75;
      sub_241CD9B90();
      uint64_t v47 = (uint64_t)v74;
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v74, v81, v71);
      uint64_t v48 = v73;
      uint64_t v49 = v77;
      unint64_t v50 = (char *)v77 + *(int *)(v73 + 20);
      uint64_t v51 = sub_241CD77C0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v50, v44, v51);
      *uint64_t v49 = (uint64_t)v40;
      *((unsigned char *)v49 + *(int *)(v48 + 24)) = v45;
      uint64_t v52 = (uint64_t *)((char *)v49 + *(int *)(v48 + 28));
      *uint64_t v52 = v41;
      v52[1] = v43;
      uint64_t v53 = type metadata accessor for CorrelatedTrendSummarySharableModelGenerator(0);
      unint64_t v54 = (uint64_t *)swift_allocObject();
      uint64_t v55 = v76;
      uint64_t v56 = v72;
      uint64_t v57 = v80;
      (*(void (**)(uint64_t (*)(uint64_t, uint64_t), char *, uint64_t))(v76 + 16))(v72, v46, v80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v58 = sub_241A66E98(v47, v49, v56, v54);
      id v59 = v82;
      v82[3] = (uint64_t *)v53;
      v59[4] = (uint64_t *)sub_241A27D54(&qword_268D42228, (void (*)(uint64_t))type metadata accessor for CorrelatedTrendSummarySharableModelGenerator);
      *id v59 = v58;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v46, v57);
      break;
    default:
      uint64_t v26 = *v24;
      sub_241A2F180();
      uint64_t v28 = (uint64_t)v24 + *(int *)(v27 + 48);
      swift_release();
      sub_241A69098(v28, (uint64_t)v21, (uint64_t (*)(void))sub_241A68508);
      uint64_t v29 = a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
      int v30 = *(unsigned __int8 *)(a1
                               + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal);
      uint64_t v31 = SummaryModelConfiguration.modelUniqueIdentifier.getter();
      sub_241A60C18(v81, v29, v30, v31, v32, *(unsigned char *)(a1 + 16), v26, (uint64_t)v21, v82, v67, v79, v78);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_241A68744((uint64_t)v21, (uint64_t (*)(void))sub_241A68508);
      break;
  }
  return result;
}

uint64_t sub_241A608A8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_context;
  uint64_t v4 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241A609BC()
{
  return type metadata accessor for SummariesSharableModelGeneratorPipeline();
}

uint64_t type metadata accessor for SummariesSharableModelGeneratorPipeline()
{
  uint64_t result = qword_26B0389A8;
  if (!qword_26B0389A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A60A10()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD7740();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_241A60AFC()
{
  return swift_retain();
}

uint64_t sub_241A60B10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241A60B88()
{
  return sub_241A27D54(&qword_26B0389A0, (void (*)(uint64_t))type metadata accessor for SummariesSharableModelGeneratorPipeline);
}

uint64_t sub_241A60BD0()
{
  return sub_241A27D54(&qword_26B0330B0, (void (*)(uint64_t))type metadata accessor for SummaryModelConfiguration);
}

uint64_t sub_241A60C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t (*a11)(void), void (*a12)(char *, uint64_t))
{
  uint64_t v83 = a4;
  id v84 = a7;
  uint64_t v76 = a1;
  uint64_t v80 = a9;
  uint64_t v78 = a11;
  unint64_t v79 = a12;
  int v81 = a6 & 1;
  LODWORD(v82) = a3;
  uint64_t v75 = sub_241CD7740();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  unint64_t v77 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_241CD6EE0();
  uint64_t v73 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v66 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_241CD6D00();
  uint64_t v72 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v67 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_241CD8E20();
  uint64_t v65 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v71 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_241CD77C0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for ChartSharableModelGenerator.Request(0);
  uint64_t v27 = (int *)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  int v30 = (char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v65 - v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, a2, v22);
  sub_241A689B0(a8, (uint64_t)v21, (uint64_t (*)(void))sub_241A68508);
  uint64_t v33 = (uint64_t)&v30[v27[11]];
  uint64_t v34 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v30, v25, v22);
  v30[v27[7]] = (char)v82;
  uint64_t v35 = (uint64_t *)&v30[v27[8]];
  id v36 = v84;
  *uint64_t v35 = v83;
  v35[1] = a5;
  *(void *)&v30[v27[9]] = v36;
  v30[v27[10]] = v81;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_241A6862C((uint64_t)v21, v33);
  sub_241A69098((uint64_t)v30, (uint64_t)v32, type metadata accessor for ChartSharableModelGenerator.Request);
  uint64_t v85 = sub_241CD7770();
  sub_241A313AC(0, (unint64_t *)&qword_26B038E58);
  sub_241A35FBC(0, &qword_26B032150);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v89 = 0;
    long long v87 = 0u;
    long long v88 = 0u;
    sub_241A68690((uint64_t)&v87, &qword_26B032158, &qword_26B032150);
LABEL_7:
    unint64_t v54 = v79;
    uint64_t v53 = v80;
    uint64_t v56 = (uint64_t)v77;
    uint64_t v55 = v78;
    uint64_t v57 = v75;
    uint64_t v39 = v76;
    uint64_t v58 = v74;
    sub_241A37260(a10, (uint64_t)&v87);
    goto LABEL_10;
  }
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  sub_241A5598C(&v87, (uint64_t)v86);
  sub_241A311E0(v86, v86[3]);
  if ((sub_241CD8C70() & 1) == 0)
  {
    sub_241A31190((uint64_t)v86);
    goto LABEL_7;
  }
  uint64_t v82 = v32;
  uint64_t v39 = v76;
  sub_241CD76B0();
  sub_241A311E0(&v87, *((uint64_t *)&v88 + 1));
  id v84 = (id)sub_241CD75F0();
  sub_241A31190((uint64_t)&v87);
  sub_241A313AC(0, qword_26B038448);
  unint64_t v40 = (void *)sub_241CD7770();
  id v41 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_electrocardiogramType);
  char v42 = sub_241CDBB60();

  uint64_t v83 = sub_241CD7770();
  uint64_t v43 = (void (**)(char *, uint64_t))(v38 + 8);
  uint64_t v44 = (void (**)(char *, uint64_t))(v37 + 8);
  char v45 = (void (**)(char *, void, uint64_t))(v65 + 104);
  unint64_t v46 = v66;
  uint64_t v47 = v67;
  sub_241CD76B0();
  sub_241A311E0(&v87, *((uint64_t *)&v88 + 1));
  sub_241CD75B0();
  id v48 = v84;
  sub_241CD6CF0();
  sub_241CD6EA0();
  if (v42)
  {
    uint64_t v49 = v46;
    unint64_t v50 = v71;
    sub_241CD6780();
    (*v43)(v49, v70);
    (*v44)(v47, v69);
    (*v45)(v50, *MEMORY[0x263F444E8], v68);
    uint64_t v51 = sub_241CD9220();
    swift_allocObject();
    uint64_t v52 = sub_241CD9210();
  }
  else
  {
    id v59 = v46;
    uint64_t v60 = v71;
    sub_241CD6780();
    (*v43)(v59, v70);
    (*v44)(v47, v69);
    (*v45)(v60, *MEMORY[0x263F444E8], v68);
    uint64_t v51 = sub_241CD8E40();
    swift_allocObject();
    uint64_t v52 = sub_241CD8E10();
  }
  uint64_t v61 = v52;
  sub_241A31190((uint64_t)&v87);
  *((void *)&v88 + 1) = v51;
  uint64_t v89 = &protocol witness table for DataTypeMostRecentSamplesQuery;

  *(void *)&long long v87 = v61;
  sub_241A31190((uint64_t)v86);
  unint64_t v54 = v79;
  uint64_t v53 = v80;
  uint64_t v56 = (uint64_t)v77;
  uint64_t v55 = v78;
  uint64_t v57 = v75;
  uint64_t v58 = v74;
  uint64_t v32 = v82;
LABEL_10:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v56, v39, v57);
  sub_241A689B0((uint64_t)v32, (uint64_t)v30, type metadata accessor for ChartSharableModelGenerator.Request);
  sub_241A37260((uint64_t)&v87, (uint64_t)v86);
  uint64_t v62 = type metadata accessor for ChartSharableModelGenerator(0);
  swift_allocObject();
  uint64_t v63 = sub_241BEEEA8(v56, (uint64_t)v30, (uint64_t)v86, v55, v54);
  uint64_t v53[3] = v62;
  v53[4] = sub_241A27D54(&qword_26B033310, (void (*)(uint64_t))type metadata accessor for ChartSharableModelGenerator);
  void *v53 = v63;
  sub_241A31190((uint64_t)&v87);
  return sub_241A68744((uint64_t)v32, type metadata accessor for ChartSharableModelGenerator.Request);
}

uint64_t sub_241A615C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t **a9@<X8>, char a10)
{
  id v498 = a8;
  uint64_t v516 = a7;
  uint64_t v517 = a5;
  LODWORD(v518) = a6;
  v515 = a4;
  uint64_t v519 = a3;
  v520 = a9;
  uint64_t v521 = a2;
  uint64_t v511 = a1;
  LODWORD(v522) = a10 & 1;
  uint64_t v433 = sub_241CDA1A0();
  uint64_t v432 = *(void *)(v433 - 8);
  MEMORY[0x270FA5388](v433);
  v440 = (char *)&v425 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v471 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v11 = MEMORY[0x270FA5388](v471);
  uint64_t v472 = (uint64_t)&v425 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v474 = (char *)&v425 - v13;
  uint64_t v475 = sub_241CD9EA0();
  uint64_t v473 = *(void *)(v475 - 8);
  MEMORY[0x270FA5388](v475);
  v478 = (char *)&v425 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v437 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v15 = MEMORY[0x270FA5388](v437);
  uint64_t v438 = (uint64_t)&v425 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  v439 = (char *)&v425 - v17;
  uint64_t v441 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v18 = MEMORY[0x270FA5388](v441);
  uint64_t v442 = (uint64_t)&v425 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v443 = (uint64_t)&v425 - v20;
  uint64_t v447 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v21 = MEMORY[0x270FA5388](v447);
  v448 = (char *)&v425 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v449 = (uint64_t)&v425 - v23;
  uint64_t v429 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v24 = MEMORY[0x270FA5388](v429);
  v430 = (char *)&v425 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v431 = (uint64_t)&v425 - v26;
  uint64_t v444 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v27 = MEMORY[0x270FA5388](v444);
  v445 = (char *)&v425 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v446 = (uint64_t)&v425 - v29;
  uint64_t v465 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v30 = MEMORY[0x270FA5388](v465);
  uint64_t v466 = (uint64_t)&v425 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  v469 = (char *)&v425 - v32;
  uint64_t v470 = sub_241CD9DE0();
  uint64_t v468 = *(void *)(v470 - 8);
  MEMORY[0x270FA5388](v470);
  v467 = (char *)&v425 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v451 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v34 = MEMORY[0x270FA5388](v451);
  v452 = (char *)&v425 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v454 = (uint64_t)&v425 - v36;
  uint64_t v457 = sub_241CD9AA0();
  uint64_t v453 = *(void *)(v457 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v457);
  v450 = (char *)&v425 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  v456 = (char *)&v425 - v39;
  uint64_t v483 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v40 = MEMORY[0x270FA5388](v483);
  uint64_t v455 = (uint64_t)&v425 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v484 = (uint64_t)&v425 - v43;
  MEMORY[0x270FA5388](v42);
  v485 = (char *)&v425 - v44;
  uint64_t v488 = sub_241CD9F10();
  uint64_t v487 = *(void *)(v488 - 8);
  MEMORY[0x270FA5388](v488);
  v486 = (char *)&v425 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v493 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
  uint64_t v46 = MEMORY[0x270FA5388](v493);
  v494 = (char *)&v425 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v46);
  uint64_t v496 = (uint64_t)&v425 - v48;
  uint64_t v497 = sub_241CD9BD0();
  uint64_t v495 = *(void *)(v497 - 8);
  uint64_t v49 = MEMORY[0x270FA5388](v497);
  v492 = (char *)&v425 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v49);
  v504 = (char *)&v425 - v51;
  uint64_t v458 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v52 = MEMORY[0x270FA5388](v458);
  uint64_t v459 = (uint64_t)&v425 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v52);
  v462 = (char *)&v425 - v54;
  uint64_t v463 = sub_241CD9D80();
  uint64_t v461 = *(void *)(v463 - 8);
  MEMORY[0x270FA5388](v463);
  v460 = (char *)&v425 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = (int *)type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v57 = MEMORY[0x270FA5388](v56);
  uint64_t v507 = (uint64_t)&v425 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v57);
  uint64_t v60 = (char *)&v425 - v59;
  uint64_t v510 = sub_241CD9D00();
  uint64_t v513 = *(void *)(v510 - 8);
  MEMORY[0x270FA5388](v510);
  v512 = (char *)&v425 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v500 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  uint64_t v62 = MEMORY[0x270FA5388](v500);
  v501 = (char *)&v425 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v62);
  uint64_t v503 = (uint64_t)&v425 - v64;
  uint64_t v509 = sub_241CD9F00();
  uint64_t v502 = *(void *)(v509 - 8);
  uint64_t v65 = MEMORY[0x270FA5388](v509);
  v499 = (char *)&v425 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v65);
  v508 = (char *)&v425 - v67;
  uint64_t v514 = sub_241CD7740();
  uint64_t v68 = *(void *)(v514 - 8);
  uint64_t v69 = MEMORY[0x270FA5388](v514);
  v436 = (char *)&v425 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  v476 = (char *)&v425 - v72;
  MEMORY[0x270FA5388](v71);
  uint64_t v74 = (char *)&v425 - v73;
  sub_241A68508(0);
  MEMORY[0x270FA5388](v75 - 8);
  uint64_t v506 = (uint64_t)&v425 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_241CD77C0();
  uint64_t v78 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  v505 = (char *)&v425 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v479 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v80 = MEMORY[0x270FA5388](v479);
  uint64_t v481 = (uint64_t)&v425 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  uint64_t v477 = (uint64_t)&v425 - v83;
  MEMORY[0x270FA5388](v82);
  uint64_t v489 = (uint64_t)&v425 - v84;
  uint64_t v491 = sub_241CD9ED0();
  uint64_t v490 = *(void *)(v491 - 8);
  uint64_t v85 = MEMORY[0x270FA5388](v491);
  v482 = (char *)&v425 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = MEMORY[0x270FA5388](v85);
  v464 = (char *)&v425 - v88;
  MEMORY[0x270FA5388](v87);
  v480 = (char *)&v425 - v89;
  uint64_t v90 = sub_241CD9970();
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v92 = MEMORY[0x270FA5388](v90);
  v427 = (char *)&v425 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = MEMORY[0x270FA5388](v92);
  v435 = (char *)&v425 - v95;
  MEMORY[0x270FA5388](v94);
  id v97 = (char *)&v425 - v96;
  v434 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  v434((char *)&v425 - v96, v515, v90);
  int v98 = (*(uint64_t (**)(char *, uint64_t))(v91 + 88))(v97, v90);
  if (v98 == *MEMORY[0x263F46C30])
  {
    (*(void (**)(char *, uint64_t))(v91 + 96))(v97, v90);
    uint64_t v100 = v512;
    uint64_t v99 = v513;
    uint64_t v101 = v97;
    uint64_t v102 = v510;
    (*(void (**)(char *, char *, uint64_t))(v513 + 32))(v512, v101, v510);
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v60, v100, v102);
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(&v60[v56[5]], v517, v77);
    sub_241A689B0(v516, (uint64_t)&v60[v56[7]], (uint64_t (*)(void))sub_241A68508);
    v60[v56[6]] = v518 & 1;
    uint64_t v103 = &v60[v56[8]];
    uint64_t v104 = v519;
    *(void *)uint64_t v103 = v521;
    *((void *)v103 + 1) = v104;
    v60[v56[9]] = (char)v522;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v74, v511, v514);
    uint64_t v105 = v507;
    sub_241A689B0((uint64_t)v60, v507, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v106 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v107 = sub_241AE5F84((uint64_t)v74, v105);
    uint64_t v108 = v520;
    v520[3] = (uint64_t *)v106;
    v108[4] = (uint64_t *)sub_241A27D54(&qword_26B038A80, (void (*)(uint64_t))type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator);
    *uint64_t v108 = v107;
    sub_241A68744((uint64_t)v60, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
    return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v100, v102);
  }
  unint64_t v110 = v512;
  uint64_t v111 = v513;
  uint64_t v507 = v77;
  uint64_t v112 = v78;
  uint64_t v428 = v68;
  v426 = v74;
  if (v98 == *MEMORY[0x263F46C88])
  {
    unint64_t v113 = v97;
    (*(void (**)(char *, uint64_t))(v91 + 96))(v97, v90);
    uint64_t v114 = v502;
    uint64_t v115 = *(void (**)(char *, char *, uint64_t))(v502 + 32);
    uint64_t v116 = v508;
    uint64_t v117 = v509;
    v115(v508, v113, v509);
    uint64_t v118 = v112;
    unint64_t v119 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
    uint64_t v120 = v505;
    uint64_t v121 = v507;
    v119(v505, v517, v507);
    uint64_t v122 = v506;
    sub_241A689B0(v516, v506, (uint64_t (*)(void))sub_241A68508);
    unint64_t v123 = v499;
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v499, v116, v117);
    uint64_t v124 = sub_241CD6810();
    uint64_t v125 = (uint64_t)v501;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v501, 1, 1, v124);
    uint64_t v126 = (int *)v500;
    (*(void (**)(uint64_t, char *, uint64_t))(v118 + 32))(v125 + *(int *)(v500 + 20), v120, v121);
    *(unsigned char *)(v125 + v126[6]) = v518 & 1;
    uint64_t v127 = v519;
    swift_bridgeObjectRetain();
    sub_241A6862C(v122, v125);
    unint64_t v128 = (void *)(v125 + v126[7]);
    *unint64_t v128 = v521;
    v128[1] = v127;
    uint64_t v129 = v509;
    v115((char *)(v125 + v126[8]), v123, v509);
    *(unsigned char *)(v125 + v126[9]) = (_BYTE)v522;
    uint64_t v130 = v503;
    sub_241A69098(v125, v503, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    uint64_t v131 = (uint64_t)v426;
    (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
    sub_241A689B0(v130, v125, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    uint64_t v132 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator(0);
    swift_allocObject();
    uint64_t v133 = sub_241CB5A0C(v131, v125);
    uint64_t v134 = v520;
    v520[3] = (uint64_t *)v132;
    v134[4] = (uint64_t *)sub_241A27D54(&qword_26B02FE90, (void (*)(uint64_t))type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator);
    *uint64_t v134 = v133;
    sub_241A68744(v130, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    return (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v508, v129);
  }
  if (v98 == *MEMORY[0x263F46C98])
  {
    (*(void (**)(char *, uint64_t))(v91 + 96))(v97, v90);
    uint64_t v135 = v495;
    v515 = *(char **)(v495 + 32);
    uint64_t v136 = v504;
    uint64_t v137 = v497;
    ((void (*)(char *, char *, uint64_t))v515)(v504, v97, v497);
    uint64_t v138 = v78;
    uint64_t v139 = v505;
    uint64_t v140 = v507;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v505, v517, v507);
    uint64_t v141 = v506;
    sub_241A689B0(v516, v506, (uint64_t (*)(void))sub_241A68508);
    uint64_t v142 = v492;
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v492, v136, v137);
    uint64_t v143 = sub_241CD6810();
    uint64_t v144 = (uint64_t)v494;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v494, 1, 1, v143);
    uint64_t v145 = (int *)v493;
    (*(void (**)(uint64_t, char *, uint64_t))(v138 + 32))(v144 + *(int *)(v493 + 20), v139, v140);
    *(unsigned char *)(v144 + v145[6]) = v518 & 1;
    uint64_t v146 = v519;
    swift_bridgeObjectRetain();
    id v147 = v498;
    sub_241A6862C(v141, v144);
    unint64_t v148 = (void *)(v144 + v145[7]);
    *unint64_t v148 = v521;
    v148[1] = v146;
    ((void (*)(uint64_t, char *, uint64_t))v515)(v144 + v145[8], v142, v137);
    *(void *)(v144 + v145[9]) = v147;
    *(unsigned char *)(v144 + v145[10]) = (_BYTE)v522;
    uint64_t v149 = v496;
    sub_241A69098(v144, v496, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    sub_241A689B0(v149, v144, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    uint64_t v150 = (uint64_t)v426;
    (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
    uint64_t v151 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator(0);
    swift_allocObject();
    v152 = sub_241CCC3E0(v144, v150);
    v153 = v520;
    v520[3] = (uint64_t *)v151;
    v153[4] = (uint64_t *)sub_241A27D54(&qword_26B02FA20, (void (*)(uint64_t))type metadata accessor for SleepDurationValueSummarySharableModelGenerator);
    char *v153 = v152;
    sub_241A68744(v149, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    v154 = *(uint64_t (**)(char *, uint64_t))(v135 + 8);
    os_log_t v155 = v504;
LABEL_8:
    uint64_t v156 = v137;
    return v154(v155, v156);
  }
  uint64_t v157 = v519;
  uint64_t v158 = v97;
  if (v98 == *MEMORY[0x263F46C90])
  {
    uint64_t v159 = v521;
    (*(void (**)(char *, uint64_t))(v91 + 96))(v97, v90);
    uint64_t v160 = v487;
    uint64_t v161 = v157;
    unint64_t v162 = v486;
    uint64_t v163 = v97;
    uint64_t v164 = v488;
    (*(void (**)(char *, char *, uint64_t))(v487 + 32))(v486, v163, v488);
    uint64_t v165 = (uint64_t)v485;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v485, v517, v507);
    id v166 = (int *)v483;
    (*(void (**)(uint64_t, char *, uint64_t))(v160 + 16))(v165 + *(int *)(v483 + 28), v162, v164);
    sub_241A689B0(v516, v165 + v166[9], (uint64_t (*)(void))sub_241A68508);
    *(unsigned char *)(v165 + v166[5]) = v518 & 1;
    uint64_t v167 = (void *)(v165 + v166[6]);
    *uint64_t v167 = v159;
    v167[1] = v161;
    *(void *)(v165 + v166[8]) = 0;
    *(unsigned char *)(v165 + v166[10]) = (_BYTE)v522;
    uint64_t v168 = (uint64_t)v426;
    (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
    uint64_t v169 = v484;
    sub_241A689B0(v165, v484, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    uint64_t v170 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v171 = sub_241A69618(v168, v169);
    v172 = v520;
    v520[3] = (uint64_t *)v170;
    v172[4] = (uint64_t *)sub_241A27D54(&qword_26B030280, (void (*)(uint64_t))type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator);
    char *v172 = v171;
    sub_241A68744(v165, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    return (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v162, v164);
  }
  if (v98 != *MEMORY[0x263F46C78])
  {
    if (v98 == *MEMORY[0x263F46C68])
    {
      uint64_t v208 = v521;
      char v209 = (char)v522;
      (*(void (**)(char *, uint64_t))(v91 + 96))(v97, v90);
      uint64_t v210 = v473;
      v211 = v478;
      v212 = v97;
      uint64_t v213 = v475;
      (*(void (**)(char *, char *, uint64_t))(v473 + 32))(v478, v212, v475);
      uint64_t v214 = (uint64_t)v474;
      (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v474, v211, v213);
      v215 = (int *)v471;
      sub_241A689B0(v516, v214 + *(int *)(v471 + 20), (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v214 + v215[7], v517, v507);
      *(unsigned char *)(v214 + v215[6]) = v209;
      *(unsigned char *)(v214 + v215[8]) = v518 & 1;
      v216 = (void *)(v214 + v215[9]);
      void *v216 = v208;
      v216[1] = v157;
      uint64_t v217 = (uint64_t)v426;
      (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
      uint64_t v218 = v472;
      sub_241A689B0(v214, v472, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
      uint64_t v219 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator(0);
      swift_allocObject();
      swift_bridgeObjectRetain();
      v220 = sub_241CD0104(v217, v218);
      v221 = v520;
      v520[3] = (uint64_t *)v219;
      v221[4] = (uint64_t *)sub_241A27D54(&qword_26B034778, (void (*)(uint64_t))type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator);
      *v221 = v220;
      sub_241A68744(v214, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
      v154 = *(uint64_t (**)(char *, uint64_t))(v210 + 8);
      v222 = &v510;
LABEL_18:
      os_log_t v155 = (char *)*(v222 - 32);
      uint64_t v156 = v213;
      return v154(v155, v156);
    }
    if (v98 == *MEMORY[0x263F46C40])
    {
      uint64_t v223 = v521;
      char v224 = (char)v522;
      (*(void (**)(char *, uint64_t))(v91 + 96))(v97, v90);
      uint64_t v91 = v468;
      id v97 = v467;
      uint64_t v90 = v470;
      (*(void (**)(char *, char *, uint64_t))(v468 + 32))(v467, v158, v470);
      uint64_t v225 = v157;
      uint64_t v226 = (uint64_t)v469;
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v469, v97, v90);
      v227 = (int *)v465;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v226 + *(int *)(v465 + 20), v517, v507);
      sub_241A689B0(v516, v226 + v227[7], (uint64_t (*)(void))sub_241A68508);
      *(unsigned char *)(v226 + v227[6]) = v518 & 1;
      v228 = (void *)(v226 + v227[8]);
      void *v228 = v223;
      v228[1] = v225;
      *(unsigned char *)(v226 + v227[9]) = v224;
      uint64_t v229 = (uint64_t)v426;
      (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
      uint64_t v230 = v466;
      sub_241A689B0(v226, v466, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
      uint64_t v231 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator(0);
      swift_allocObject();
      swift_bridgeObjectRetain();
      v232 = sub_241AB97B0(v229, v230);
      v233 = v520;
      v520[3] = (uint64_t *)v231;
      v233[4] = (uint64_t *)sub_241A27D54(&qword_26B02FBD0, (void (*)(uint64_t))type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator);
      *v233 = v232;
      v234 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request;
    }
    else
    {
      if (v98 == *MEMORY[0x263F46CA0])
      {
        (*(void (**)(char *, uint64_t))(v91 + 96))(v97, v90);
        uint64_t v241 = v490;
        v515 = *(char **)(v490 + 32);
        v242 = v480;
        uint64_t v243 = v491;
        ((void (*)(char *, char *, uint64_t))v515)(v480, v97, v491);
        uint64_t v244 = v112;
        v245 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
        uint64_t v246 = v157;
        v247 = v505;
        uint64_t v248 = v507;
        v245(v505, v517, v507);
        uint64_t v249 = v506;
        sub_241A689B0(v516, v506, (uint64_t (*)(void))sub_241A68508);
        v250 = v464;
        (*(void (**)(char *, char *, uint64_t))(v241 + 16))(v464, v242, v243);
        uint64_t v251 = sub_241CD6810();
        uint64_t v252 = v477;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v251 - 8) + 56))(v477, 1, 1, v251);
        v253 = (int *)v479;
        (*(void (**)(uint64_t, char *, uint64_t))(v244 + 32))(v252 + *(int *)(v479 + 20), v247, v248);
        *(unsigned char *)(v252 + v253[6]) = v518 & 1;
        swift_bridgeObjectRetain();
        id v254 = v498;
        sub_241A6862C(v249, v252);
        v255 = (void *)(v252 + v253[7]);
        void *v255 = v521;
        v255[1] = v246;
        uint64_t v256 = v491;
        ((void (*)(uint64_t, char *, uint64_t))v515)(v252 + v253[8], v250, v491);
        *(void *)(v252 + v253[9]) = v254;
        *(unsigned char *)(v252 + v253[10]) = (_BYTE)v522;
        uint64_t v257 = v489;
        sub_241A69098(v252, v489, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        uint64_t v258 = (uint64_t)v426;
        (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
        sub_241A689B0(v257, v252, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        uint64_t v259 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator(0);
        swift_allocObject();
        v260 = sub_241C9A534(v258, v252);
        v261 = v520;
        v520[3] = (uint64_t *)v259;
        v261[4] = (uint64_t *)sub_241A27D54(&qword_26B038D68, (void (*)(uint64_t))type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator);
        *v261 = v260;
        sub_241A68744(v257, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        return (*(uint64_t (**)(char *, uint64_t))(v241 + 8))(v480, v256);
      }
      if (v98 != *MEMORY[0x263F46C38])
      {
        char v296 = (char)v518;
        uint64_t v297 = v516;
        if (v98 == *MEMORY[0x263F46C28])
        {
          (*(void (**)(char *, uint64_t))(v91 + 96))(v97, v90);
          uint64_t v298 = v487;
          v299 = v486;
          uint64_t v300 = v488;
          (*(void (**)(char *, char *, uint64_t))(v487 + 32))(v486, v97, v488);
          v301 = (char *)objc_msgSend(self, sel_predicateForCategorySamplesWithOperatorType_value_, 4, 0);
          v515 = v301;
          uint64_t v302 = (uint64_t)v485;
          (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v485, v517, v507);
          v303 = (int *)v483;
          (*(void (**)(uint64_t, char *, uint64_t))(v298 + 16))(v302 + *(int *)(v483 + 28), v299, v300);
          sub_241A689B0(v297, v302 + v303[9], (uint64_t (*)(void))sub_241A68508);
          *(unsigned char *)(v302 + v303[5]) = v296 & 1;
          v304 = (void *)(v302 + v303[6]);
          uint64_t v305 = v519;
          void *v304 = v521;
          v304[1] = v305;
          *(void *)(v302 + v303[8]) = v301;
          *(unsigned char *)(v302 + v303[10]) = (_BYTE)v522;
          uint64_t v306 = v428;
          v307 = *(void (**)(char *, uint64_t, uint64_t))(v428 + 16);
          v308 = v426;
          uint64_t v309 = v514;
          v307(v426, v511, v514);
          uint64_t v310 = v484;
          sub_241A689B0(v302, v484, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
          uint64_t v311 = type metadata accessor for StandHoursCurrentValueSummarySharableModelGenerator(0);
          v522 = swift_allocObject();
          uint64_t v312 = (uint64_t)v476;
          v307(v476, (uint64_t)v308, v309);
          uint64_t v313 = v455;
          sub_241A689B0(v310, v455, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
          swift_bridgeObjectRetain();
          v314 = v515;
          v315 = sub_241A69618(v312, v313);
          sub_241A68744(v310, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
          (*(void (**)(char *, uint64_t))(v306 + 8))(v308, v309);
          v316 = v520;
          v520[3] = (uint64_t *)v311;
          v316[4] = (uint64_t *)sub_241A27D54(&qword_26B02FAE8, (void (*)(uint64_t))type metadata accessor for StandHoursCurrentValueSummarySharableModelGenerator);

          *v316 = v315;
          sub_241A68744(v302, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
          return (*(uint64_t (**)(char *, uint64_t))(v487 + 8))(v486, v488);
        }
        if (v98 == *MEMORY[0x263F46C58])
        {
          (*(void (**)(char *, uint64_t))(v91 + 96))(v97, v90);
          uint64_t v317 = v453;
          v515 = *(char **)(v453 + 32);
          v318 = v456;
          uint64_t v319 = v457;
          ((void (*)(char *, char *, uint64_t))v515)(v456, v97, v457);
          uint64_t v320 = v112;
          v321 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
          v322 = v505;
          uint64_t v323 = v507;
          v321(v505, v517, v507);
          uint64_t v324 = v506;
          sub_241A689B0(v297, v506, (uint64_t (*)(void))sub_241A68508);
          v325 = v450;
          (*(void (**)(char *, char *, uint64_t))(v317 + 16))(v450, v318, v319);
          uint64_t v326 = sub_241CD6810();
          uint64_t v327 = (uint64_t)v452;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v326 - 8) + 56))(v452, 1, 1, v326);
          v328 = (int *)v451;
          (*(void (**)(uint64_t, char *, uint64_t))(v320 + 32))(v327 + *(int *)(v451 + 20), v322, v323);
          *(unsigned char *)(v327 + v328[6]) = v518 & 1;
          uint64_t v329 = v519;
          swift_bridgeObjectRetain();
          id v330 = v498;
          sub_241A6862C(v324, v327);
          v331 = (void *)(v327 + v328[7]);
          void *v331 = v521;
          v331[1] = v329;
          uint64_t v213 = v457;
          ((void (*)(uint64_t, char *, uint64_t))v515)(v327 + v328[8], v325, v457);
          *(void *)(v327 + v328[9]) = v330;
          *(unsigned char *)(v327 + v328[10]) = (_BYTE)v522;
          uint64_t v332 = v454;
          sub_241A69098(v327, v454, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
          uint64_t v333 = (uint64_t)v426;
          (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
          sub_241A689B0(v332, v327, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
          uint64_t v334 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator(0);
          swift_allocObject();
          v335 = sub_241C740A4(v333, v327);
          v336 = v520;
          v520[3] = (uint64_t *)v334;
          v336[4] = (uint64_t *)sub_241A27D54(&qword_26B030020, (void (*)(uint64_t))type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator);
          *v336 = v335;
          sub_241A68744(v332, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
          v154 = *(uint64_t (**)(char *, uint64_t))(v317 + 8);
          v222 = &v488;
          goto LABEL_18;
        }
        if (v98 == *MEMORY[0x263F46C48])
        {
          v515 = v97;
          uint64_t v337 = v112;
          v338 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
          v339 = v505;
          uint64_t v340 = v507;
          v338(v505, v517, v507);
          uint64_t v341 = v506;
          sub_241A689B0(v297, v506, (uint64_t (*)(void))sub_241A68508);
          uint64_t v342 = v519;
          swift_bridgeObjectRetain();
          v343 = v480;
          sub_241CD9EC0();
          uint64_t v344 = sub_241CD6810();
          uint64_t v345 = (uint64_t)v448;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v344 - 8) + 56))(v448, 1, 1, v344);
          v346 = (int *)v447;
          v347 = (id (**)())(v345 + *(int *)(v447 + 44));
          *v347 = sub_241A5611C;
          v347[1] = 0;
          (*(void (**)(uint64_t, char *, uint64_t))(v337 + 32))(v345 + v346[5], v339, v340);
          *(unsigned char *)(v345 + v346[6]) = v518 & 1;
          id v348 = v498;
          sub_241A6862C(v341, v345);
          v349 = (void *)(v345 + v346[7]);
          void *v349 = v521;
          v349[1] = v342;
          (*(void (**)(uint64_t, char *, uint64_t))(v490 + 32))(v345 + v346[8], v343, v491);
          *(void *)(v345 + v346[9]) = v348;
          *(unsigned char *)(v345 + v346[10]) = (_BYTE)v522;
          uint64_t v350 = v449;
          sub_241A69098(v345, v449, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
          uint64_t v351 = (uint64_t)v426;
          (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
          sub_241A689B0(v350, v345, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
          uint64_t v352 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator(0);
          swift_allocObject();
          v353 = sub_241A57A88(v351, v345);
          v354 = v520;
          v520[3] = (uint64_t *)v352;
          v354[4] = (uint64_t *)sub_241A27D54(&qword_26B02FD30, (void (*)(uint64_t))type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator);
          *v354 = v353;
          sub_241A68744(v350, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
          v154 = *(uint64_t (**)(char *, uint64_t))(v91 + 8);
          os_log_t v155 = v515;
          goto LABEL_36;
        }
        if (v98 == *MEMORY[0x263F46C20])
        {
          uint64_t v355 = v112;
          v356 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
          v357 = v505;
          uint64_t v358 = v507;
          v356(v505, v517, v507);
          uint64_t v359 = v506;
          sub_241A689B0(v297, v506, (uint64_t (*)(void))sub_241A68508);
          uint64_t v360 = sub_241CD6810();
          uint64_t v361 = (uint64_t)v445;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v360 - 8) + 56))(v445, 1, 1, v360);
          v362 = v158;
          v363 = (int *)v444;
          (*(void (**)(uint64_t, char *, uint64_t))(v355 + 32))(v361 + *(int *)(v444 + 24), v357, v358);
          *(unsigned char *)(v361 + v363[7]) = v518 & 1;
          uint64_t v364 = v519;
          swift_bridgeObjectRetain();
          id v97 = v362;
          id v365 = v498;
          sub_241A6862C(v359, v361);
          *(unsigned char *)(v361 + v363[5]) = (_BYTE)v522;
          v366 = (void *)(v361 + v363[8]);
          void *v366 = v521;
          v366[1] = v364;
          *(void *)(v361 + v363[9]) = v365;
          uint64_t v367 = v446;
          sub_241A69098(v361, v446, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
          uint64_t v368 = (uint64_t)v426;
          (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
          sub_241A689B0(v367, v361, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
          uint64_t v369 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator(0);
          swift_allocObject();
          v370 = sub_241C77CCC(v368, v361);
          v371 = v520;
          v520[3] = (uint64_t *)v369;
          v371[4] = (uint64_t *)sub_241A27D54(&qword_26B034350, (void (*)(uint64_t))type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator);
          *v371 = v370;
          v372 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request;
        }
        else
        {
          if (v98 == *MEMORY[0x263F46C80])
          {
            uint64_t v373 = v443;
            sub_241A689B0(v516, v443, (uint64_t (*)(void))sub_241A68508);
            v374 = (int *)v441;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v373 + *(int *)(v441 + 24), v517, v507);
            *(unsigned char *)(v373 + v374[5]) = (_BYTE)v522;
            *(unsigned char *)(v373 + v374[7]) = v518 & 1;
            v375 = (void *)(v373 + v374[8]);
            uint64_t v376 = v519;
            void *v375 = v521;
            v375[1] = v376;
            uint64_t v377 = (uint64_t)v426;
            (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
            uint64_t v378 = v442;
            sub_241A689B0(v373, v442, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
            uint64_t v379 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator(0);
            swift_allocObject();
            swift_bridgeObjectRetain();
            v380 = sub_241BFF854(v377, v378);
            v381 = v520;
            v520[3] = (uint64_t *)v379;
            v381[4] = (uint64_t *)sub_241A27D54(&qword_26B034B08, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator);
            *v381 = v380;
            v294 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request;
            uint64_t v295 = v373;
            goto LABEL_35;
          }
          if (v98 == *MEMORY[0x263F46C70])
          {
            (*(void (**)(char *, uint64_t))(v91 + 96))(v97, v90);
            uint64_t v382 = v111;
            v383 = v110;
            uint64_t v137 = v510;
            (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v110, v97, v510);
            uint64_t v384 = (uint64_t)v439;
            (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v439, v110, v137);
            v385 = (int *)v437;
            sub_241A689B0(v516, v384 + *(int *)(v437 + 20), (uint64_t (*)(void))sub_241A68508);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v384 + v385[7], v517, v507);
            *(unsigned char *)(v384 + v385[6]) = (_BYTE)v522;
            *(unsigned char *)(v384 + v385[8]) = v518 & 1;
            v386 = (void *)(v384 + v385[9]);
            uint64_t v387 = v519;
            void *v386 = v521;
            v386[1] = v387;
            uint64_t v388 = (uint64_t)v426;
            (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
            uint64_t v389 = v438;
            sub_241A689B0(v384, v438, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
            uint64_t v390 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator(0);
            swift_allocObject();
            swift_bridgeObjectRetain();
            v391 = sub_241C04E84(v388, v389);
            v392 = v520;
            v520[3] = (uint64_t *)v390;
            v392[4] = (uint64_t *)sub_241A27D54(&qword_26B034988, (void (*)(uint64_t))type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator);
            *v392 = v391;
            sub_241A68744(v384, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
            v154 = *(uint64_t (**)(char *, uint64_t))(v382 + 8);
            os_log_t v155 = v383;
            goto LABEL_8;
          }
          if (v98 != *MEMORY[0x263F46C50])
          {
            sub_241CDA0F0();
            (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v436, v511, v514);
            v434(v435, v515, v90);
            v408 = sub_241CDA190();
            os_log_type_t v409 = sub_241CDB670();
            v522 = v408;
            LODWORD(v521) = v409;
            if (os_log_type_enabled(v408, v409))
            {
              uint64_t v410 = swift_slowAlloc();
              uint64_t v519 = swift_slowAlloc();
              uint64_t v524 = v519;
              *(_DWORD *)uint64_t v410 = 136315650;
              uint64_t v411 = sub_241CDC270();
              uint64_t v523 = sub_241A33FE4(v411, v412, &v524);
              v518 = &v524;
              sub_241CDBBF0();
              swift_bridgeObjectRelease();
              *(_WORD *)(v410 + 12) = 2080;
              uint64_t v517 = v410 + 14;
              v413 = v436;
              v414 = (void *)sub_241CD76E0();
              uint64_t v415 = sub_241CD73E0();
              unint64_t v417 = v416;

              uint64_t v523 = sub_241A33FE4(v415, v417, &v524);
              sub_241CDBBF0();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v428 + 8))(v413, v514);
              *(_WORD *)(v410 + 22) = 2080;
              v418 = v435;
              v434(v427, v435, v90);
              uint64_t v419 = sub_241CDB120();
              uint64_t v523 = sub_241A33FE4(v419, v420, &v524);
              sub_241CDBBF0();
              swift_bridgeObjectRelease();
              v421 = *(void (**)(char *, uint64_t))(v91 + 8);
              v421(v418, v90);
              v422 = v522;
              _os_log_impl(&dword_241A23000, v522, (os_log_type_t)v521, "[%s]_%s: Unimplemented generator type for %s", (uint8_t *)v410, 0x20u);
              uint64_t v423 = v519;
              swift_arrayDestroy();
              MEMORY[0x245637F20](v423, -1, -1);
              MEMORY[0x245637F20](v410, -1, -1);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v428 + 8))(v436, v514);
              v421 = *(void (**)(char *, uint64_t))(v91 + 8);
              v421(v435, v90);
            }
            (*(void (**)(char *, uint64_t))(v432 + 8))(v440, v433);
            v424 = v520;
            v520[4] = 0;
            *(_OWORD *)v424 = 0u;
            *((_OWORD *)v424 + 1) = 0u;
            return ((uint64_t (*)(char *, uint64_t))v421)(v97, v90);
          }
          uint64_t v393 = v112;
          v394 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
          v395 = v505;
          uint64_t v396 = v507;
          v394(v505, v517, v507);
          uint64_t v397 = v506;
          sub_241A689B0(v516, v506, (uint64_t (*)(void))sub_241A68508);
          uint64_t v398 = sub_241CD6810();
          uint64_t v399 = (uint64_t)v430;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v398 - 8) + 56))(v430, 1, 1, v398);
          v400 = (int *)v429;
          (*(void (**)(uint64_t, char *, uint64_t))(v393 + 32))(v399 + *(int *)(v429 + 20), v395, v396);
          *(unsigned char *)(v399 + v400[6]) = v518 & 1;
          uint64_t v401 = v519;
          swift_bridgeObjectRetain();
          id v402 = v498;
          sub_241A6862C(v397, v399);
          v403 = (void *)(v399 + v400[7]);
          void *v403 = v521;
          v403[1] = v401;
          *(void *)(v399 + v400[8]) = v402;
          *(unsigned char *)(v399 + v400[9]) = (_BYTE)v522;
          uint64_t v367 = v431;
          sub_241A69098(v399, v431, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
          sub_241A689B0(v367, v399, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
          uint64_t v404 = (uint64_t)v426;
          (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
          uint64_t v405 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator(0);
          swift_allocObject();
          v406 = sub_241AE9E08(v399, v404);
          v407 = v520;
          v520[3] = (uint64_t *)v405;
          v407[4] = (uint64_t *)sub_241A27D54(&qword_268D42230, (void (*)(uint64_t))type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator);
          *v407 = v406;
          v372 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request;
        }
        v294 = v372;
        uint64_t v295 = v367;
LABEL_35:
        sub_241A68744(v295, v294);
        v154 = *(uint64_t (**)(char *, uint64_t))(v91 + 8);
        os_log_t v155 = v97;
LABEL_36:
        uint64_t v156 = v90;
        return v154(v155, v156);
      }
      uint64_t v284 = v521;
      char v285 = (char)v522;
      (*(void (**)(char *, uint64_t))(v91 + 96))(v97, v90);
      uint64_t v91 = v461;
      id v97 = v460;
      uint64_t v90 = v463;
      (*(void (**)(char *, char *, uint64_t))(v461 + 32))(v460, v158, v463);
      uint64_t v286 = v157;
      uint64_t v226 = (uint64_t)v462;
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v462, v97, v90);
      v287 = (int *)v458;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v226 + *(int *)(v458 + 20), v517, v507);
      sub_241A689B0(v516, v226 + v287[7], (uint64_t (*)(void))sub_241A68508);
      *(unsigned char *)(v226 + v287[6]) = v518 & 1;
      v288 = (void *)(v226 + v287[8]);
      void *v288 = v284;
      v288[1] = v286;
      *(unsigned char *)(v226 + v287[9]) = v285;
      uint64_t v289 = (uint64_t)v426;
      (*(void (**)(char *, uint64_t, uint64_t))(v428 + 16))(v426, v511, v514);
      uint64_t v290 = v459;
      sub_241A689B0(v226, v459, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
      uint64_t v291 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator(0);
      swift_allocObject();
      swift_bridgeObjectRetain();
      v292 = sub_241C88FC0(v289, v290);
      v293 = v520;
      v520[3] = (uint64_t *)v291;
      v293[4] = (uint64_t *)sub_241A27D54(&qword_26B038BF0, (void (*)(uint64_t))type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator);
      *v293 = v292;
      v234 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request;
    }
    v294 = v234;
    uint64_t v295 = v226;
    goto LABEL_35;
  }
  (*(void (**)(char *, uint64_t))(v91 + 96))(v97, v90);
  uint64_t v173 = v490;
  uint64_t v174 = v157;
  v515 = *(char **)(v490 + 32);
  uint64_t v175 = v482;
  uint64_t v176 = v97;
  uint64_t v177 = v491;
  ((void (*)(char *, char *, uint64_t))v515)(v482, v176, v491);
  uint64_t v178 = v112;
  v179 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
  uint64_t v180 = v505;
  uint64_t v181 = v507;
  v179(v505, v517, v507);
  uint64_t v182 = v506;
  sub_241A689B0(v516, v506, (uint64_t (*)(void))sub_241A68508);
  v183 = *(void (**)(char *, char *, uint64_t))(v173 + 16);
  uint64_t v184 = v480;
  v183(v480, v175, v177);
  uint64_t v185 = sub_241CD6810();
  uint64_t v186 = v489;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v185 - 8) + 56))(v489, 1, 1, v185);
  id v187 = (int *)v479;
  (*(void (**)(uint64_t, char *, uint64_t))(v178 + 32))(v186 + *(int *)(v479 + 20), v180, v181);
  *(unsigned char *)(v186 + v187[6]) = v518 & 1;
  swift_bridgeObjectRetain();
  id v188 = v498;
  sub_241A6862C(v182, v186);
  uint64_t v189 = (void *)(v186 + v187[7]);
  *uint64_t v189 = v521;
  v189[1] = v174;
  ((void (*)(uint64_t, char *, uint64_t))v515)(v186 + v187[8], v184, v177);
  *(void *)(v186 + v187[9]) = v188;
  *(unsigned char *)(v186 + v187[10]) = (_BYTE)v522;
  uint64_t v190 = v481;
  sub_241A69098(v186, v481, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
  uint64_t v191 = (void *)sub_241CD7770();
  id v192 = objc_msgSend(v191, sel_code);

  v193 = v520;
  uint64_t v194 = (uint64_t)v426;
  uint64_t v195 = v511;
  uint64_t v196 = v428;
  uint64_t v197 = v514;
  switch((unint64_t)v192)
  {
    case 0x113uLL:
      uint64_t v198 = *(void (**)(char *, uint64_t, uint64_t))(v428 + 16);
      v198(v426, v511, v514);
      uint64_t v199 = v190;
      uint64_t v200 = v489;
      sub_241A689B0(v199, v489, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      uint64_t v201 = type metadata accessor for BreathingDisturbancesCurrentValueSummarySharableModelGenerator();
      swift_allocObject();
      uint64_t v202 = (uint64_t)v476;
      v198(v476, v194, v197);
      uint64_t v203 = v477;
      sub_241A689B0(v200, v477, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      uint64_t v204 = sub_241C9A534(v202, v203);
      sub_241A68744(v200, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v194, v197);
      unint64_t v205 = v520;
      v520[3] = (uint64_t *)v201;
      uint64_t v206 = (unint64_t *)&unk_268D42238;
      v207 = type metadata accessor for BreathingDisturbancesCurrentValueSummarySharableModelGenerator;
      goto LABEL_29;
    case 0x114uLL:
    case 0x115uLL:
    case 0x116uLL:
    case 0x117uLL:
    case 0x118uLL:
    case 0x119uLL:
    case 0x11AuLL:
    case 0x11BuLL:
    case 0x11DuLL:
    case 0x11EuLL:
      goto LABEL_25;
    case 0x11CuLL:
      v266 = *(void (**)(char *, uint64_t, uint64_t))(v428 + 16);
      v266(v426, v511, v514);
      uint64_t v267 = v190;
      uint64_t v268 = v489;
      sub_241A689B0(v267, v489, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      uint64_t v269 = type metadata accessor for StateOfMindCurrentValueSummarySharableModelGenerator();
      swift_allocObject();
      uint64_t v270 = (uint64_t)v476;
      v266(v476, v194, v197);
      uint64_t v271 = v477;
      sub_241A689B0(v268, v477, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      uint64_t v204 = sub_241C9A534(v270, v271);
      sub_241A68744(v268, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v194, v197);
      unint64_t v205 = v520;
      v520[3] = (uint64_t *)v269;
      uint64_t v206 = (unint64_t *)&unk_26B034430;
      v207 = type metadata accessor for StateOfMindCurrentValueSummarySharableModelGenerator;
      goto LABEL_29;
    case 0x11FuLL:
      v272 = *(void (**)(char *, uint64_t, uint64_t))(v428 + 16);
      v272(v426, v511, v514);
      uint64_t v273 = v190;
      uint64_t v274 = v489;
      sub_241A689B0(v273, v489, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      uint64_t v275 = type metadata accessor for GAD7AssessmentCurrentValueSummarySharableModelGenerator();
      swift_allocObject();
      uint64_t v276 = (uint64_t)v476;
      v272(v476, v194, v197);
      uint64_t v277 = v477;
      sub_241A689B0(v274, v477, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      uint64_t v204 = sub_241C9A534(v276, v277);
      sub_241A68744(v274, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v194, v197);
      unint64_t v205 = v520;
      v520[3] = (uint64_t *)v275;
      uint64_t v206 = (unint64_t *)&unk_26B034520;
      v207 = type metadata accessor for GAD7AssessmentCurrentValueSummarySharableModelGenerator;
      goto LABEL_29;
    case 0x120uLL:
      v278 = *(void (**)(char *, uint64_t, uint64_t))(v428 + 16);
      v278(v426, v511, v514);
      uint64_t v279 = v190;
      uint64_t v280 = v489;
      sub_241A689B0(v279, v489, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      uint64_t v281 = type metadata accessor for PHQ9AssessmentCurrentValueSummarySharableModelGenerator();
      swift_allocObject();
      uint64_t v282 = (uint64_t)v476;
      v278(v476, v194, v197);
      uint64_t v283 = v477;
      sub_241A689B0(v280, v477, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      uint64_t v204 = sub_241C9A534(v282, v283);
      sub_241A68744(v280, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v194, v197);
      unint64_t v205 = v520;
      v520[3] = (uint64_t *)v281;
      uint64_t v206 = (unint64_t *)&unk_26B034600;
      v207 = type metadata accessor for PHQ9AssessmentCurrentValueSummarySharableModelGenerator;
      goto LABEL_29;
    default:
      v193 = v520;
      uint64_t v194 = (uint64_t)v426;
      uint64_t v195 = v511;
      uint64_t v196 = v428;
      uint64_t v197 = v514;
      if (v192 == (id)144)
      {
        v235 = *(void (**)(char *, uint64_t, uint64_t))(v428 + 16);
        v235(v426, v511, v514);
        uint64_t v236 = v190;
        uint64_t v237 = v489;
        sub_241A689B0(v236, v489, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        uint64_t v238 = type metadata accessor for ElectrocardiogramCurrentValueSummarySharableModelGenerator();
        swift_allocObject();
        uint64_t v239 = (uint64_t)v476;
        v235(v476, v194, v197);
        uint64_t v240 = v477;
        sub_241A689B0(v237, v477, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        uint64_t v204 = sub_241C9A534(v239, v240);
        sub_241A68744(v237, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v194, v197);
        unint64_t v205 = v520;
        v520[3] = (uint64_t *)v238;
        uint64_t v206 = (unint64_t *)&unk_26B0300F8;
        v207 = type metadata accessor for ElectrocardiogramCurrentValueSummarySharableModelGenerator;
LABEL_29:
        v205[4] = (uint64_t *)sub_241A27D54(v206, (void (*)(uint64_t))v207);
        *unint64_t v205 = v204;
        uint64_t v265 = v481;
      }
      else
      {
LABEL_25:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v196 + 16))(v194, v195, v197);
        uint64_t v262 = v489;
        sub_241A689B0(v190, v489, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        uint64_t v263 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator(0);
        swift_allocObject();
        v264 = sub_241C9A534(v194, v262);
        v193[3] = (uint64_t *)v263;
        v193[4] = (uint64_t *)sub_241A27D54(&qword_26B038D68, (void (*)(uint64_t))type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator);
        char *v193 = v264;
        uint64_t v265 = v190;
      }
      sub_241A68744(v265, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v490 + 8))(v482, v491);
      break;
  }
  return result;
}

uint64_t sub_241A654D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t (*a8)(void)@<X7>, uint64_t **a9@<X8>, uint64_t a10)
{
  uint64_t v186 = a8;
  uint64_t v184 = a7;
  int v182 = a6;
  uint64_t v180 = a5;
  uint64_t v185 = a3;
  uint64_t v183 = a2;
  uint64_t v190 = a1;
  id v192 = a9;
  uint64_t v163 = sub_241CD9A30();
  uint64_t v162 = *(void *)(v163 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v163);
  uint64_t v149 = &v148[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v161 = &v148[-v13];
  uint64_t v157 = sub_241CDA1A0();
  uint64_t v156 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  uint64_t v164 = &v148[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v155 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  uint64_t v15 = MEMORY[0x270FA5388](v155);
  uint64_t v158 = &v148[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v160 = &v148[-v17];
  uint64_t v154 = sub_241CD6DE0();
  uint64_t v153 = *(void *)(v154 - 8);
  MEMORY[0x270FA5388](v154);
  v152 = &v148[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v151 = sub_241CD6EE0();
  uint64_t v159 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151);
  uint64_t v173 = &v148[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v175 = (void *)sub_241CD9BD0();
  uint64_t v174 = *(v175 - 1);
  MEMORY[0x270FA5388](v175);
  v172 = &v148[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v193 = sub_241CD7740();
  uint64_t v191 = *(void *)(v193 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v193);
  uint64_t v171 = &v148[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = &v148[-v24];
  MEMORY[0x270FA5388](v23);
  uint64_t v181 = &v148[-v26];
  uint64_t v194 = sub_241CD77C0();
  uint64_t v179 = *(void *)(v194 - 8);
  MEMORY[0x270FA5388](v194);
  id v187 = &v148[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A683BC(0, &qword_26B02E900, MEMORY[0x263F46B28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v169 = &v148[-v29];
  uint64_t v189 = sub_241CD6D00();
  uint64_t v178 = *(void *)(v189 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v189);
  uint64_t v150 = &v148[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v196 = &v148[-v33];
  MEMORY[0x270FA5388](v32);
  uint64_t v198 = &v148[-v34];
  uint64_t v176 = sub_241CD97E0();
  uint64_t v35 = *(void *)(v176 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v176);
  id v166 = &v148[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = &v148[-v38];
  uint64_t v167 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  uint64_t v40 = MEMORY[0x270FA5388](v167);
  uint64_t v168 = &v148[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v40);
  uint64_t v170 = &v148[-v42];
  uint64_t v197 = sub_241CD9D00();
  uint64_t v195 = *(char **)(v197 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v197);
  uint64_t v165 = &v148[-((v44 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v43);
  uint64_t v199 = &v148[-v45];
  uint64_t v46 = sub_241CD9970();
  uint64_t v47 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v49 = &v148[-((v48 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v50 = sub_241CD99A0();
  uint64_t v200 = a4;
  uint64_t v202 = a4;
  unint64_t v51 = sub_241AFE950((void (*)(void))sub_241A687A4, (uint64_t)v201, v50);
  swift_bridgeObjectRelease();
  if (*(void *)(v51 + 16))
  {
    sub_241A687C0();
    uint64_t v52 = sub_241CDBF90();
  }
  else
  {
    uint64_t v52 = MEMORY[0x263F8EE80];
  }
  uint64_t v203 = v52;
  uint64_t v53 = swift_bridgeObjectRetain();
  sub_241B078E0(v53, 1, &v203);
  uint64_t v177 = a10;
  swift_bridgeObjectRelease();
  uint64_t v54 = v203;
  sub_241CD9990();
  int v55 = (*(uint64_t (**)(unsigned char *, uint64_t))(v47 + 88))(v49, v46);
  BOOL v56 = v55 == *MEMORY[0x263F46C30];
  uint64_t v188 = v54;
  if (v56)
  {
    (*(void (**)(unsigned char *, uint64_t))(v47 + 96))(v49, v46);
    uint64_t v57 = v195;
    uint64_t v175 = (void *)*((void *)v195 + 4);
    uint64_t v58 = v199;
    uint64_t v59 = v197;
    ((void (*)(unsigned char *, unsigned char *))v175)(v199, v49);
    sub_241CD9CB0();
    sub_241CD97D0();
    uint64_t v60 = *(void (**)(unsigned char *, uint64_t))(v35 + 8);
    uint64_t v61 = v176;
    v60(v39, v176);
    uint64_t v62 = v165;
    (*((void (**)(unsigned char *, unsigned char *, uint64_t))v57 + 2))(v165, v58, v59);
    uint64_t v63 = (uint64_t)v169;
    sub_241CD9A20();
    uint64_t v64 = v179;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v179 + 16))(v187, v180, v194);
    uint64_t v180 = sub_241CD99C0();
    uint64_t v65 = v166;
    sub_241CD99B0();
    sub_241CD97D0();
    v60(v65, v61);
    uint64_t v66 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v178 + 32);
    uint64_t v67 = (uint64_t)v170;
    uint64_t v68 = v189;
    v66(v170, v198, v189);
    uint64_t v69 = (int *)v167;
    uint64_t v70 = v62;
    uint64_t v71 = v197;
    ((void (*)(uint64_t, unsigned char *, uint64_t))v175)(v67 + *(int *)(v167 + 20), v70, v197);
    sub_241A68880(v63, v67 + v69[6]);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v64 + 32))(v67 + v69[7], v187, v194);
    *(unsigned char *)(v67 + v69[8]) = v182 & 1;
    *(void *)(v67 + v69[9]) = v180;
    *(void *)(v67 + v69[10]) = v188;
    v66((unsigned char *)(v67 + v69[11]), v196, v68);
    uint64_t v72 = (void *)(v67 + v69[12]);
    uint64_t v73 = v185;
    *uint64_t v72 = v183;
    v72[1] = v73;
    uint64_t v74 = (uint64_t)v181;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v191 + 16))(v181, v190, v193);
    uint64_t v75 = v168;
    sub_241A689B0(v67, (uint64_t)v168, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
    sub_241A37260(v184, (uint64_t)&v203);
    uint64_t v76 = type metadata accessor for StatisticTrendSummarySharableModelGenerator(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_241B63100(v74, (uint64_t)v75, (uint64_t)&v203, v186, v177);
    uint64_t v78 = v192;
    v192[3] = (uint64_t *)v76;
    v78[4] = (uint64_t *)sub_241A27D54(&qword_26B02F8B0, (void (*)(uint64_t))type metadata accessor for StatisticTrendSummarySharableModelGenerator);
    *uint64_t v78 = v77;
    sub_241A68744(v67, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
    return (*((uint64_t (**)(unsigned char *, uint64_t))v195 + 1))(v199, v71);
  }
  else if (v55 == *MEMORY[0x263F46C98])
  {
    (*(void (**)(unsigned char *, uint64_t))(v47 + 96))(v49, v46);
    (*(void (**)(unsigned char *, unsigned char *, void *))(v174 + 32))(v172, v49, v175);
    sub_241CD9BC0();
    sub_241A683BC(0, &qword_26B034F70, MEMORY[0x263F46B90], MEMORY[0x263F8E0F8]);
    uint64_t v80 = sub_241CD9840();
    uint64_t v81 = *(void *)(v80 - 8);
    unint64_t v82 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
    uint64_t v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v81 + 104))(v83 + v82, *MEMORY[0x263F46B80], v80);
    uint64_t v84 = *MEMORY[0x263F46AB8];
    uint64_t v85 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v35 + 104);
    uint64_t v86 = v176;
    v85(v39, v84, v176);
    sub_241CD9CE0();
    uint64_t v87 = v153;
    uint64_t v88 = v152;
    uint64_t v89 = v154;
    (*(void (**)(unsigned char *, void, uint64_t))(v153 + 104))(v152, *MEMORY[0x263F07740], v154);
    sub_241CD6DF0();
    (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v88, v89);
    v85(v39, v84, v86);
    uint64_t v90 = v196;
    sub_241CD97D0();
    uint64_t v170 = *(unsigned char **)(v35 + 8);
    ((void (*)(unsigned char *, uint64_t))v170)(v39, v86);
    uint64_t v91 = (void *)sub_241CD6C60();
    uint64_t v92 = v178;
    uint64_t v93 = (unsigned char *)(v178 + 8);
    uint64_t v94 = *(unsigned char **)(v178 + 8);
    ((void (*)(unsigned char *, uint64_t))v94)(v90, v189);
    uint64_t v171 = v94;
    id v187 = v93;
    uint64_t v95 = (void *)sub_241CD6E40();
    id v96 = objc_msgSend(v91, sel_hk_sleepDayStartWithCalendar_, v95);

    sub_241CD6CB0();
    sub_241CD99B0();
    id v97 = v150;
    sub_241CD97D0();
    ((void (*)(unsigned char *, uint64_t))v170)(v39, v86);
    int v98 = (void *)sub_241CD6C60();
    uint64_t v99 = v189;
    ((void (*)(unsigned char *, uint64_t))v94)(v97, v189);
    uint64_t v100 = (void *)sub_241CD6E40();
    id v101 = objc_msgSend(v98, sel_hk_sleepDayStartWithCalendar_, v100);

    uint64_t v102 = v196;
    sub_241CD6CB0();

    uint64_t v103 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v92 + 16);
    uint64_t v104 = (uint64_t)v160;
    v103(v160, v198, v99);
    uint64_t v105 = (int *)v155;
    uint64_t v106 = v195;
    (*((void (**)(uint64_t, unsigned char *, uint64_t))v195 + 2))(v104 + *(int *)(v155 + 20), v199, v197);
    uint64_t v107 = sub_241CD99C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v179 + 16))(v104 + v105[8], v180, v194);
    v103((unsigned char *)(v104 + v105[10]), v102, v99);
    *(void *)(v104 + v105[6]) = v107;
    *(void *)(v104 + v105[7]) = v188;
    *(unsigned char *)(v104 + v105[9]) = v182 & 1;
    uint64_t v108 = (void *)(v104 + v105[11]);
    uint64_t v109 = v185;
    *uint64_t v108 = v183;
    v108[1] = v109;
    uint64_t v110 = (uint64_t)v181;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v191 + 16))(v181, v190, v193);
    uint64_t v111 = v158;
    sub_241A689B0(v104, (uint64_t)v158, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
    sub_241A37260(v184, (uint64_t)&v203);
    uint64_t v112 = type metadata accessor for SleepTrendSummarySharableModelGenerator(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    unint64_t v113 = sub_241C243D4(v110, (uint64_t)v111, (uint64_t)&v203, v186, v177);
    uint64_t v114 = v192;
    v192[3] = (uint64_t *)v112;
    v114[4] = (uint64_t *)sub_241A27D54(&qword_26B02F640, (void (*)(uint64_t))type metadata accessor for SleepTrendSummarySharableModelGenerator);
    char *v114 = v113;
    sub_241A68744(v104, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
    uint64_t v115 = (void (*)(unsigned char *, uint64_t))v171;
    ((void (*)(unsigned char *, uint64_t))v171)(v102, v99);
    v115(v198, v99);
    (*(void (**)(unsigned char *, uint64_t))(v159 + 8))(v173, v151);
    (*((void (**)(unsigned char *, uint64_t))v106 + 1))(v199, v197);
    return (*(uint64_t (**)(unsigned char *, void *))(v174 + 8))(v172, v175);
  }
  else
  {
    uint64_t v199 = (unsigned char *)v46;
    swift_release();
    uint64_t v116 = v164;
    sub_241CDA0F0();
    uint64_t v117 = v191;
    uint64_t v118 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v191 + 16);
    uint64_t v198 = v25;
    uint64_t v119 = v190;
    uint64_t v120 = v193;
    v118(v25, v190, v193);
    v118(v171, v119, v120);
    uint64_t v121 = v162;
    uint64_t v122 = v161;
    uint64_t v123 = v163;
    uint64_t v196 = *(unsigned char **)(v162 + 16);
    ((void (*)(unsigned char *, NSObject *, uint64_t))v196)(v161, v200, v163);
    uint64_t v124 = sub_241CDA190();
    os_log_type_t v125 = sub_241CDB670();
    uint64_t v200 = v124;
    LODWORD(v197) = v125;
    if (os_log_type_enabled(v124, v125))
    {
      uint64_t v126 = swift_slowAlloc();
      uint64_t v194 = swift_slowAlloc();
      uint64_t v203 = v194;
      *(_DWORD *)uint64_t v126 = 136315906;
      uint64_t v127 = sub_241CDC270();
      uint64_t v204 = sub_241A33FE4(v127, v128, &v203);
      uint64_t v195 = &v205;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v126 + 12) = 2080;
      uint64_t v190 = v126 + 14;
      uint64_t v129 = v198;
      uint64_t v130 = (void *)sub_241CD76E0();
      uint64_t v131 = sub_241CD73E0();
      unint64_t v133 = v132;

      uint64_t v204 = sub_241A33FE4(v131, v133, &v203);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      uint64_t v134 = *(void (**)(unsigned char *, uint64_t))(v117 + 8);
      uint64_t v135 = v129;
      uint64_t v136 = v193;
      v134(v135, v193);
      *(_WORD *)(v126 + 22) = 2080;
      uint64_t v198 = (unsigned char *)(v126 + 24);
      uint64_t v137 = v171;
      sub_241CD76C0();
      uint64_t v138 = sub_241CD7C90();
      uint64_t v204 = sub_241A33FE4(v138, v139, &v203);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      v134(v137, v136);
      *(_WORD *)(v126 + 32) = 2080;
      uint64_t v140 = v161;
      uint64_t v141 = v163;
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v196)(v149, v161, v163);
      uint64_t v142 = sub_241CDB120();
      uint64_t v204 = sub_241A33FE4(v142, v143, &v203);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v162 + 8))(v140, v141);
      uint64_t v144 = v200;
      _os_log_impl(&dword_241A23000, v200, (os_log_type_t)v197, "[%s]_%s_%s: Unimplemented trend generator type for %s", (uint8_t *)v126, 0x2Au);
      uint64_t v145 = v194;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v145, -1, -1);
      MEMORY[0x245637F20](v126, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v156 + 8))(v164, v157);
    }
    else
    {
      uint64_t v146 = *(void (**)(unsigned char *, uint64_t))(v117 + 8);
      v146(v198, v120);
      v146(v171, v120);
      (*(void (**)(unsigned char *, uint64_t))(v121 + 8))(v122, v123);

      (*(void (**)(unsigned char *, uint64_t))(v156 + 8))(v116, v157);
    }
    id v147 = v192;
    v192[4] = 0;
    *(_OWORD *)id v147 = 0u;
    *((_OWORD *)v147 + 1) = 0u;
    return (*(uint64_t (**)(unsigned char *, unsigned char *))(v47 + 8))(v49, v199);
  }
}

uint64_t sub_241A66BF0@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_241A68914(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  *a2 = v8;
  sub_241CD99C0();
  uint64_t v9 = sub_241CD99E0();
  if (v9)
  {
    uint64_t v10 = v9;
    if (*(void *)(v9 + 16) && (unint64_t v11 = sub_241C0B70C(v8), (v12 & 1) != 0))
    {
      unint64_t v13 = v11;
      uint64_t v23 = *(void *)(v10 + 56);
      uint64_t v14 = sub_241CD9960();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v24 = v2;
      uint64_t v16 = v15;
      (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v7, v23 + *(void *)(v15 + 72) * v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v14);
    }
    else
    {
      uint64_t v17 = sub_241CD9960();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = sub_241CD9960();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v7, 1, 1, v18);
  }
  sub_241A68948();
  uint64_t v20 = v19;
  sub_241CD99F0();
  sub_241CD9AB0();
  swift_bridgeObjectRelease();
  sub_241A68744((uint64_t)v7, (uint64_t (*)(void))sub_241A68914);
  return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 0, 1, v20);
}

uint64_t *sub_241A66E98(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t *a4)
{
  uint64_t v8 = *a4;
  uint64_t v9 = sub_241CD7690();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B5A9F4(a1, (uint64_t)v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))((uint64_t)a4 + OBJC_IVAR____TtC9Summaries44CorrelatedTrendSummarySharableModelGenerator_domain, v12, v9);
  sub_241A689B0((uint64_t)a2, (uint64_t)a4 + OBJC_IVAR____TtC9Summaries44CorrelatedTrendSummarySharableModelGenerator_request, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);
  uint64_t v13 = sub_241A67098(a1, a2, a3, v8);
  uint64_t v14 = sub_241CD9BA0();
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t), uint64_t))(*(void *)(v14 - 8) + 8))(a3, v14);
  sub_241A68744((uint64_t)a2, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);
  uint64_t v15 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Summaries44CorrelatedTrendSummarySharableModelGenerator_publisher) = v13;
  return a4;
}

uint64_t sub_241A67098(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v54 = a4;
  uint64_t v52 = a3;
  uint64_t v48 = a1;
  uint64_t v7 = sub_241CD7740();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  uint64_t v61 = *(void *)(v59 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0);
  uint64_t v57 = *(void *)(v9 - 8);
  uint64_t v56 = *(void *)(v57 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v55 = (uint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68A18();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v63 = v11;
  uint64_t v64 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68B6C(0);
  uint64_t v50 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68CB8(0, &qword_268D42278, (uint64_t (*)(uint64_t))sub_241A68B6C, sub_241A68D38, MEMORY[0x263EFDC10]);
  uint64_t v49 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v47 - v20;
  sub_241A68D6C();
  uint64_t v51 = v22;
  uint64_t v53 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_241CD9BA0();
  v71[3] = v25;
  v71[4] = MEMORY[0x263F47068];
  uint64_t v26 = sub_241A25BC8(v71);
  (*(void (**)(uint64_t *, uint64_t (*)(uint64_t, uint64_t), uint64_t))(*(void *)(v25 - 8) + 16))(v26, v52, v25);
  uint64_t v27 = a2;
  uint64_t v47 = a2;
  uint64_t v28 = *a2;
  uint64_t v66 = a4;
  uint64_t v67 = a1;
  uint64_t v68 = v27;
  uint64_t v69 = v71;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_241A42364((void (*)(uint64_t *__return_ptr, uint64_t))sub_241A68ED8, (uint64_t)v65, v28);
  swift_bridgeObjectRelease();
  uint64_t v70 = v29;
  sub_241A68BB4();
  uint64_t v52 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D488];
  sub_241A683BC(0, (unint64_t *)&qword_268D42298, (uint64_t (*)(uint64_t))sub_241A68BB4, MEMORY[0x263F8D488]);
  sub_241A68C84();
  sub_241A694C0(&qword_268D422A0, (unint64_t *)&qword_268D42298, (uint64_t (*)(uint64_t))sub_241A68BB4);
  sub_241CDA4C0();
  sub_241A68D38();
  uint64_t v30 = v50;
  sub_241CDA7A0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v30);
  sub_241A313AC(0, &qword_268D421A0);
  sub_241A68E3C();
  uint64_t v31 = v49;
  sub_241CDA710();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v31);
  sub_241A27D54(&qword_268D422A8, (void (*)(uint64_t))sub_241A68D6C);
  uint64_t v32 = v51;
  uint64_t v33 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v32);
  uint64_t v70 = v33;
  uint64_t v34 = v55;
  sub_241A689B0((uint64_t)v47, v55, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);
  uint64_t v35 = v59;
  uint64_t v36 = v60;
  uint64_t v37 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, v48, v60);
  unint64_t v38 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  unint64_t v39 = (v56 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = v35;
  unint64_t v41 = (*(unsigned __int8 *)(v35 + 80) + v39 + 8) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v42 = swift_allocObject();
  sub_241A69098(v34, v42 + v38, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);
  *(void *)(v42 + v39) = v54;
  (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v42 + v41, v37, v36);
  sub_241A68AF4();
  sub_241A683BC(0, &qword_26B034C38, MEMORY[0x263F458B0], v52);
  sub_241A27D54(&qword_268D42250, (void (*)(uint64_t))sub_241A68AF4);
  uint64_t v43 = v62;
  sub_241CDA710();
  swift_release();
  sub_241A27D54(&qword_268D422B0, (void (*)(uint64_t))sub_241A68A18);
  uint64_t v44 = v63;
  uint64_t v45 = sub_241CDA6D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v43, v44);
  sub_241A31190((uint64_t)v71);
  return v45;
}

id sub_241A678BC(uint64_t a1, void *a2)
{
  id v39 = a2;
  uint64_t v4 = sub_241CD79A0();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v41 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  unint64_t v38 = (char *)v33 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v37 = (char *)v33 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v33[1] = v2;
    unint64_t v34 = v14;
    uint64_t v15 = a1 + v14;
    uint64_t v16 = *(void *)(v10 + 72);
    uint64_t v35 = (void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    uint64_t v36 = v11;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v10 + 32);
    v33[0] = a1;
    swift_bridgeObjectRetain();
    unint64_t v17 = MEMORY[0x263F8EE78];
    uint64_t v18 = v36;
    while (1)
    {
      unint64_t v42 = v17;
      uint64_t v19 = sub_241CD7970();
      unint64_t v21 = v20;
      id v22 = objc_allocWithZone(MEMORY[0x263F465E8]);
      uint64_t v23 = (void *)sub_241CD6AD0();
      sub_241A37374(v19, v21);
      id v24 = objc_msgSend(v22, sel_initWithData_, v23);

      if (v24)
      {
        sub_241A313AC(0, &qword_26B038E70);
        id v25 = HKCodableQueryAnchor.init(queryAnchor:)(v39);
        objc_msgSend(v24, sel_setDatabaseChangesQueryAnchor_, v25);

        (*v35)(v18, v15, v4);
        id result = objc_msgSend(v24, sel_data);
        if (!result)
        {
          __break(1u);
          return result;
        }
        uint64_t v27 = result;
        sub_241CD6AE0();

        sub_241CD7980();
        uint64_t v28 = *v40;
        uint64_t v29 = v38;
        (*v40)(v38, v18, v4);
        uint64_t v30 = v37;
        v28(v37, (uint64_t)v29, v4);
        v28(v41, (uint64_t)v30, v4);
        unint64_t v17 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v17 = sub_241AF76C4(0, *(void *)(v17 + 16) + 1, 1, v17);
        }
        unint64_t v32 = *(void *)(v17 + 16);
        unint64_t v31 = *(void *)(v17 + 24);
        if (v32 >= v31 >> 1) {
          unint64_t v17 = sub_241AF76C4(v31 > 1, v32 + 1, 1, v17);
        }
        *(void *)(v17 + 16) = v32 + 1;
        v28((char *)(v17 + v34 + v32 * v16), (uint64_t)v41, v4);
      }
      else
      {
        unint64_t v17 = v42;
      }
      v15 += v16;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        return (id)v17;
      }
    }
  }
  return (id)MEMORY[0x263F8EE78];
}

id sub_241A67C58()
{
  uint64_t v0 = sub_241CD7970();
  unint64_t v2 = v1;
  id v3 = objc_allocWithZone(MEMORY[0x263F465E8]);
  uint64_t v4 = (void *)sub_241CD6AD0();
  sub_241A37374(v0, v2);
  id v5 = objc_msgSend(v3, sel_initWithData_, v4);

  if (!v5) {
    return 0;
  }
  if (objc_msgSend(v5, sel_hasContentData)
    && objc_msgSend(v5, sel_hasDatabaseChangesQueryAnchor)
    && (id v6 = objc_msgSend(v5, sel_databaseChangesQueryAnchor)) != 0)
  {
    uint64_t v7 = v6;
    id v8 = HKCodableQueryAnchor.queryAnchor.getter();
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

void sub_241A67D48()
{
  if (!qword_26B031BB8)
  {
    sub_241A67E50();
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_241A691F4(255, &qword_26B031C30, MEMORY[0x263EFDCF0]);
    sub_241A27D54(&qword_26B031C18, (void (*)(uint64_t))sub_241A67E50);
    sub_241A69294(&qword_26B031C28, &qword_26B031C30, v0);
    unint64_t v1 = sub_241CDA430();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B031BB8);
    }
  }
}

void sub_241A67E50()
{
  if (!qword_26B031C20)
  {
    sub_241A683BC(255, (unint64_t *)&unk_26B031AB8, type metadata accessor for SummaryModelConfiguration.Request, MEMORY[0x263F43968]);
    sub_241A35FBC(255, (unint64_t *)&qword_26B038870);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031C20);
    }
  }
}

void sub_241A67F00()
{
  if (!qword_26B031B28)
  {
    sub_241A67D48();
    sub_241A35FBC(255, &qword_26B032058);
    sub_241A27D54(&qword_26B031BB0, (void (*)(uint64_t))sub_241A67D48);
    unint64_t v0 = sub_241CDA370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031B28);
    }
  }
}

uint64_t sub_241A67FBC()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241A68058@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD7740() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241A5E630(a1, v2 + v6, v7, a2);
}

uint64_t sub_241A68104()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = sub_241CD7690();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v6 + v9 + 8) & ~v9;
  uint64_t v13 = v3 | v9 | 7;
  unint64_t v11 = ((*(void *)(v8 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v7);

  return MEMORY[0x270FA0238](v0, v11, v13);
}

void sub_241A68290(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD7740() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_241CD7690() - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = *(void **)(v2 + v7);
  uint64_t v12 = *(void **)(v2 + v8);
  uint64_t v13 = *(char **)(v2 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_241A5EBF8(a1, v2 + v6, v11, v12, (v2 + v10), v13, a2);
}

void sub_241A683BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241A68420(uint64_t a1, void *a2, char a3)
{
  switch(a3)
  {
    case 2:
      swift_retain();
      break;
    case 1:
      swift_bridgeObjectRetain();
      id v4 = a2;
      break;
    case 0:
      swift_bridgeObjectRetain();
      break;
  }
}

void sub_241A68494(uint64_t a1, void *a2, char a3)
{
  switch(a3)
  {
    case 2:
      swift_release();
      break;
    case 1:
      swift_bridgeObjectRelease();

      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
}

void sub_241A68508(uint64_t a1)
{
}

void sub_241A6853C()
{
  if (!qword_26B032758)
  {
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032758);
    }
  }
}

void sub_241A685A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_241A6862C(uint64_t a1, uint64_t a2)
{
  sub_241A68508(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_241A68690(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_241A686EC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241A686EC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241A35FBC(255, a3);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241A68744(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241A687A4@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_241A66BF0(a1, a2);
}

void sub_241A687C0()
{
  if (!qword_26B034ED0)
  {
    sub_241CD9B00();
    sub_241A6882C();
    unint64_t v0 = sub_241CDBFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034ED0);
    }
  }
}

unint64_t sub_241A6882C()
{
  unint64_t result = qword_26B032260;
  if (!qword_26B032260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032260);
  }
  return result;
}

uint64_t sub_241A68880(uint64_t a1, uint64_t a2)
{
  sub_241A683BC(0, &qword_26B02E900, MEMORY[0x263F46B28], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241A68914(uint64_t a1)
{
}

void sub_241A68948()
{
  if (!qword_26B032268)
  {
    sub_241CD9B00();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B032268);
    }
  }
}

uint64_t sub_241A689B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_241A68A18()
{
  if (!qword_268D42240)
  {
    sub_241A68AF4();
    sub_241A683BC(255, &qword_26B034C38, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    sub_241A27D54(&qword_268D42250, (void (*)(uint64_t))sub_241A68AF4);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42240);
    }
  }
}

void sub_241A68AF4()
{
  if (!qword_268D42248)
  {
    sub_241A313AC(255, &qword_268D421A0);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42248);
    }
  }
}

void sub_241A68B6C(uint64_t a1)
{
}

void sub_241A68BB4()
{
  if (!qword_268D42260)
  {
    sub_241A68C1C();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42260);
    }
  }
}

void sub_241A68C1C()
{
  if (!qword_268D42268)
  {
    sub_241A313AC(255, &qword_268D421C0);
    unint64_t v0 = sub_241CDB320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42268);
    }
  }
}

uint64_t sub_241A68C84()
{
  return sub_241A27D54(&qword_268D42270, (void (*)(uint64_t))sub_241A68BB4);
}

void sub_241A68CB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_241A68D38()
{
  return sub_241A27D54(&qword_268D42280, sub_241A68B6C);
}

void sub_241A68D6C()
{
  if (!qword_268D42288)
  {
    sub_241A68CB8(255, &qword_268D42278, (uint64_t (*)(uint64_t))sub_241A68B6C, sub_241A68D38, MEMORY[0x263EFDC10]);
    sub_241A313AC(255, &qword_268D421A0);
    sub_241A68E3C();
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42288);
    }
  }
}

unint64_t sub_241A68E3C()
{
  unint64_t result = qword_268D42290;
  if (!qword_268D42290)
  {
    sub_241A68CB8(255, &qword_268D42278, (uint64_t (*)(uint64_t))sub_241A68B6C, sub_241A68D38, MEMORY[0x263EFDC10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42290);
  }
  return result;
}

uint64_t sub_241A68ED8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241B5AE34(a1, v2[3], v2[4], v2[5], a2);
}

uint64_t sub_241A68EFC()
{
  uint64_t v1 = (int *)(type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_241CD7740();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v7 + 8) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v2 | v7 | 7;
  swift_bridgeObjectRelease();
  uint64_t v11 = v0 + v3 + v1[7];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);

  return MEMORY[0x270FA0238](v0, v9, v10);
}

uint64_t sub_241A69098(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_241A69100(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_241CD7740() - 8);
  uint64_t v9 = v2 + ((v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  sub_241B5B354(a1, v2 + v6, v9, a2);
}

void sub_241A691F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_241A683BC(255, (unint64_t *)&unk_26B031AB8, type metadata accessor for SummaryModelConfiguration.Request, MEMORY[0x263F43968]);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241A69294(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A691F4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241A692D8(uint64_t a1)
{
}

void sub_241A6930C(uint64_t a1)
{
}

void sub_241A69340()
{
  if (!qword_26B034BF8)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B038E58);
    sub_241CD6810();
    sub_241A3F224();
    unint64_t v0 = sub_241CDAFB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034BF8);
    }
  }
}

void sub_241A693CC(uint64_t a1)
{
}

void sub_241A69400(uint64_t a1)
{
}

void sub_241A69434(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    uint64_t v8 = sub_241A35FBC(255, (unint64_t *)&qword_26B038870);
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241A694C0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A683BC(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A69518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241A6AA7C(v2 + *(int *)(a1 + 36), a2, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
}

uint64_t sub_241A6956C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_241CD77C0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_241A695D4(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_241A695E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t *sub_241A69618(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = *v3;
  uint64_t v31 = sub_241CD7650();
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_241CD7690();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a1;
  id v28 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v36 = inited;
  sub_241CDB2E0();
  uint64_t v11 = *(int *)(type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0)
               + 40);
  uint64_t v34 = a2;
  char v12 = *(unsigned char *)(a2 + v11);
  sub_241A294B0(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v13 = sub_241CD73B0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  if (v12)
  {
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v17 + v16, *MEMORY[0x263F454D0], v13);
  }
  else
  {
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_241CEB720;
    unint64_t v19 = v17 + v16;
    unint64_t v20 = *(void (**)(unint64_t, void, uint64_t))(v14 + 104);
    v20(v19, *MEMORY[0x263F45520], v13);
    v20(v19 + v15, *MEMORY[0x263F45538], v13);
  }
  id v18 = v28;
  sub_241C5D74C(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v21 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v7, *MEMORY[0x263F45690], v31);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))((uint64_t)v3+ OBJC_IVAR____TtC9Summaries71MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator_domain, v9, v32);
  uint64_t v22 = sub_241A6A95C(&qword_26B030288, (void (*)(uint64_t))type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator);
  uint64_t v24 = v34;
  uint64_t v23 = v35;
  uint64_t v25 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v35, v34, v33, v22);
  sub_241A6AB5C(v24, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
  uint64_t v26 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v23, v26);
  v3[2] = v25;
  return v3;
}

uint64_t sub_241A69AD0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A294B0(0, (unint64_t *)&unk_26B034CE0, (uint64_t (*)(uint64_t))sub_241A6AA08, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v24 - v6);
  sub_241A6AA08();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A6AA7C(a1, (uint64_t)v7, (unint64_t *)&unk_26B034CE0, (uint64_t (*)(uint64_t))sub_241A6AA08, v4);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_241A6AAEC((uint64_t)v7, (unint64_t *)&unk_26B034CE0, (uint64_t (*)(uint64_t))sub_241A6AA08);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a2, 1, 1, v9);
  }
  else
  {
    uint64_t v14 = *(int *)(v9 + 48);
    uint64_t v15 = &v12[v14];
    unint64_t v16 = (char *)v7 + v14;
    uint64_t v17 = *(int *)(v9 + 64);
    uint64_t v18 = *v7;
    uint64_t v19 = sub_241CD6D00();
    unint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
    v20(v15, v16, v19);
    uint64_t v21 = *(uint64_t *)((char *)v7 + v17);
    uint64_t v22 = (char *)a2 + *(int *)(v9 + 48);
    uint64_t v23 = *(int *)(v9 + 64);
    *a2 = v18;
    v20(v22, v15, v19);
    *(void *)((char *)a2 + v23) = v21;
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
  }
}

id sub_241A69D28(void *a1, uint64_t a2)
{
  uint64_t v75 = a2;
  uint64_t v81 = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A294B0(0, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v78 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v70 - v6;
  sub_241A294B0(0, &qword_26B038F10, MEMORY[0x263F062D0], v2);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v77 = (char *)&v70 - v9;
  sub_241A294B0(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v2);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v80 = (uint64_t)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v79 = (uint64_t)&v70 - v13;
  sub_241A294B0(0, &qword_26B032CC0, (uint64_t (*)(uint64_t))sub_241A6AA08, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  MEMORY[0x270FA5388](v14 - 8);
  unint64_t v16 = (char *)&v70 - v15;
  sub_241A294B0(0, (unint64_t *)&unk_26B034CE0, (uint64_t (*)(uint64_t))sub_241A6AA08, v2);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (double *)((char *)&v70 - v18);
  sub_241A6AA08();
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v74 = (uint64_t *)((char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (double *)((char *)&v70 - v26);
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (uint64_t *)((char *)&v70 - v28);
  sub_241A6AA7C((uint64_t)v81, (uint64_t)v16, &qword_26B032CC0, (uint64_t (*)(uint64_t))sub_241A6AA08, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v31 = 1;
  if (v30(v16, 1, v21) != 1)
  {
    sub_241A6ABBC((uint64_t)v16, (uint64_t)v19);
    uint64_t v31 = 0;
  }
  (*(void (**)(double *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v19, v31, 1, v21);
  if (v30((char *)v19, 1, v21) == 1)
  {
    sub_241A6AAEC((uint64_t)v19, (unint64_t *)&unk_26B034CE0, (uint64_t (*)(uint64_t))sub_241A6AA08);
    sub_241CD7A80();
    uint64_t v32 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v7, 0, 1, v32);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v33 = sub_241CD9970();
    uint64_t v34 = v80;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v80, 1, 1, v33);
    uint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v36 = v78;
    sub_241A6AA7C((uint64_t)v7, v78, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    id v37 = sub_241A53EB0(0, 0xF000000000000000, 11, v34, v36, 0, 0);
    sub_241A6AAEC((uint64_t)v7, &qword_26B032050, v35);
    return v37;
  }
  uint64_t v38 = *(int *)(v21 + 48);
  id v39 = (char *)v29 + v38;
  uint64_t v40 = *(int *)(v21 + 64);
  unint64_t v41 = (char *)v19 + v38;
  double v42 = *v19;
  *uint64_t v29 = *(void *)v19;
  uint64_t v43 = sub_241CD6D00();
  uint64_t v44 = *(void *)(v43 - 8);
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v39, v41, v43);
  uint64_t v45 = *(void *)((char *)v19 + v40);
  uint64_t v78 = v40;
  *(void *)((char *)v29 + v40) = v45;
  uint64_t v46 = (char *)v27 + *(int *)(v21 + 48);
  uint64_t v47 = *(int *)(v21 + 64);
  double *v27 = v42;
  uint64_t v48 = v39;
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  uint64_t v73 = v44 + 16;
  v72(v46, v39, v43);
  *(void *)((char *)v27 + v47) = v45;
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46638]), sel_init);
  uint64_t v81 = v29;
  if (result)
  {
    id v50 = result;
    objc_msgSend(v50, sel_setTimeInterval_, v42);
    uint64_t v51 = (void *)sub_241CD6C60();
    double v52 = MEMORY[0x245637600]();

    objc_msgSend(v50, sel_setDateData_, v52);
    uint64_t v71 = *(void (**)(char *, uint64_t))(v44 + 8);
    v71(v46, v43);
    uint64_t v53 = v79;
    (*(void (**)(uint64_t))(v76 + 104))(v75);
    uint64_t v54 = sub_241CD9970();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
    sub_241A313AC(0, &qword_26B034E48);
    uint64_t v55 = (uint64_t)v77;
    sub_241CD6770();
    uint64_t v56 = sub_241CD6810();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 0, 1, v56);
    uint64_t v57 = v74;
    uint64_t v58 = (char *)v74 + *(int *)(v21 + 48);
    uint64_t v59 = *(int *)(v21 + 64);
    uint64_t v60 = v81;
    *uint64_t v74 = *v81;
    v72(v58, v48, v43);
    uint64_t v61 = *(void *)((char *)v60 + v78);
    *(void *)((char *)v57 + v59) = v61;
    id v62 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)(v55, v61, 0);
    v71(v58, v43);
    id result = objc_msgSend(v50, sel_data);
    if (result)
    {
      uint64_t v63 = result;
      sub_241A313AC(0, &qword_26B030440);
      uint64_t v64 = sub_241CD6AE0();
      unint64_t v66 = v65;

      uint64_t v67 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
      uint64_t v69 = v79;
      uint64_t v68 = v80;
      sub_241A6AA7C(v79, v80, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
      uint64_t v83 = 0;
      memset(v82, 0, sizeof(v82));
      id v37 = sub_241A54648(v64, v66, 17, v68, (uint64_t)v62, 0, (uint64_t)v82);

      sub_241A37374(v64, v66);
      sub_241A6AAEC(v69, (unint64_t *)&qword_26B0321F0, v67);
      sub_241A6AB5C((uint64_t)v81, (uint64_t (*)(void))sub_241A6AA08);
      return v37;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_241A6A604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241A6A76C(a1, MEMORY[0x263F46C90], a2);
}

uint64_t sub_241A6A610()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries71MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241A6A6B8()
{
  return type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B030298);
}

uint64_t sub_241A6A6E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries71MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241A6A760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241A6A76C(a1, MEMORY[0x263F46C28], a2);
}

uint64_t sub_241A6A76C@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1
     + *(int *)(type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0)
              + 28);
  uint64_t v6 = sub_241CD9F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, v5, v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_241CD9970();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(a3, v7, v8);
}

uint64_t sub_241A6A834()
{
  return type metadata accessor for StandHoursCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for StandHoursCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B02FAF0);
}

uint64_t sub_241A6A85C()
{
  return swift_updateClassMetadata2();
}

_UNKNOWN **sub_241A6A894()
{
  return &off_26F5C0C40;
}

uint64_t sub_241A6A8A0(uint64_t a1)
{
  uint64_t result = sub_241A6A95C(&qword_26B030280, (void (*)(uint64_t))type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241A6A8F8()
{
  return &off_26F5C0C88;
}

uint64_t sub_241A6A904(uint64_t a1)
{
  uint64_t result = sub_241A6A95C(&qword_26B030290, (void (*)(uint64_t))type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241A6A95C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_241A6A9A4()
{
  return &off_26F5C0CA0;
}

uint64_t sub_241A6A9B0(uint64_t a1)
{
  uint64_t result = sub_241A6A95C(&qword_26B034BE0, (void (*)(uint64_t))type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_241A6AA08()
{
  if (!qword_26B034CD8)
  {
    sub_241CD6D00();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26B034CD8);
    }
  }
}

uint64_t sub_241A6AA7C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_241A294B0(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_241A6AAEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A294B0(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241A6AB5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241A6ABBC(uint64_t a1, uint64_t a2)
{
  sub_241A6AA08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241A6AC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_241CD7650();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v32 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD7690();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A6B220();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD76B0();
  sub_241A311E0(v41, v41[3]);
  uint64_t v12 = (void *)sub_241CD75B0();
  uint64_t v13 = (void *)sub_241CD7770();
  uint64_t v14 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v15 = sub_241CDB5E0();

  sub_241A31190((uint64_t)v41);
  uint64_t v40 = v15;
  sub_241CD7730();
  unint64_t v16 = (void *)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v39 = inited;
  sub_241CDB2E0();
  char v18 = *(unsigned char *)(a3 + *(int *)(v14 + 40));
  sub_241A294B0(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v19 = sub_241CD73B0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 72);
  unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  if (v18)
  {
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v23 + v22, *MEMORY[0x263F454D0], v19);
  }
  else
  {
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_241CEB720;
    unint64_t v25 = v23 + v22;
    uint64_t v26 = *(void (**)(unint64_t, void, uint64_t))(v20 + 104);
    v26(v25, *MEMORY[0x263F45520], v19);
    v26(v25 + v21, *MEMORY[0x263F45538], v19);
  }
  id v24 = v16;
  sub_241C5D74C(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v27 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v27);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, *MEMORY[0x263F45690], v34);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241A6B2FC();
  sub_241A6A95C(&qword_26B02EA50, (void (*)(uint64_t))sub_241A6B2FC);
  uint64_t v28 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v36);
  sub_241A31190((uint64_t)v41);
  swift_release();
  v41[0] = v28;
  sub_241A294B0(0, &qword_26B032CC0, (uint64_t (*)(uint64_t))sub_241A6AA08, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_241CDA710();
  swift_release();
  sub_241A6A95C(&qword_26B02E950, (void (*)(uint64_t))sub_241A6B220);
  uint64_t v29 = v38;
  uint64_t v30 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v29);
  return v30;
}

void sub_241A6B220()
{
  if (!qword_26B0323C8)
  {
    sub_241A6B2FC();
    sub_241A294B0(255, &qword_26B032CC0, (uint64_t (*)(uint64_t))sub_241A6AA08, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241A6A95C(&qword_26B02EA50, (void (*)(uint64_t))sub_241A6B2FC);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0323C8);
    }
  }
}

void sub_241A6B2FC()
{
  if (!qword_26B032760)
  {
    sub_241A294B0(255, (unint64_t *)&unk_26B034CE0, (uint64_t (*)(uint64_t))sub_241A6AA08, MEMORY[0x263F8D8F0]);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032760);
    }
  }
}

uint64_t type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B0301D8);
}

void *sub_241A6B3BC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD77C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_241CD9F10();
    unint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    uint64_t v17 = a3[8];
    uint64_t v18 = a3[9];
    uint64_t v19 = *(void **)((char *)a2 + v17);
    *(void *)((char *)a1 + v17) = v19;
    uint64_t v20 = (char *)a1 + v18;
    uint64_t v21 = (char *)a2 + v18;
    uint64_t v22 = sub_241CD6810();
    uint64_t v23 = *(void *)(v22 - 8);
    id v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    id v25 = v19;
    if (v24(v21, 1, v22))
    {
      sub_241A294B0(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(v20, v21, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  }
  return a1;
}

uint64_t sub_241A6B620(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[7];
  uint64_t v6 = sub_241CD9F10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  uint64_t v7 = a1 + a2[9];
  uint64_t v8 = sub_241CD6810();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_241A6B788(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_241CD9F10();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (const void *)(a2 + v17);
  uint64_t v21 = sub_241CD6810();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
  id v24 = v18;
  if (v23(v20, 1, v21))
  {
    sub_241A294B0(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_241A6B99C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_241CD9F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = *(void **)(a1 + v14);
  uint64_t v16 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v16;
  id v17 = v16;

  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = sub_241CD6810();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v19, v20, v21);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    sub_241A294B0(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_7:
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_241A6BC28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_241CD9F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_241CD6810();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_241A294B0(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_241A6BE1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_241CD9F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);

  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = sub_241CD6810();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    sub_241A294B0(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_7:
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_241A6C090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241A6C0A4);
}

uint64_t sub_241A6C0A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD77C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[6] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = sub_241CD9F10();
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[7];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    sub_241A294B0(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[9];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_241A6C258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241A6C26C);
}

uint64_t sub_241A6C26C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_241CD77C0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_241CD9F10();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[7];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  sub_241A294B0(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[9];

  return v16(v18, a2, a2, v17);
}

void sub_241A6C420()
{
  sub_241CD77C0();
  if (v0 <= 0x3F)
  {
    sub_241CD9F10();
    if (v1 <= 0x3F)
    {
      sub_241A294B0(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_241A6C570(uint64_t a1, unint64_t a2)
{
  uint64_t v265 = (char *)a2;
  uint64_t v227 = a1;
  sub_241A72428(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  char v209 = (char *)&v199 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  v245 = (char *)&v199 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v225 = (char *)&v199 - v8;
  uint64_t v243 = sub_241CD7AB0();
  uint64_t v226 = *(void *)(v243 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v243);
  uint64_t v223 = (char *)&v199 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  char v224 = (char *)&v199 - v11;
  sub_241A29514(0, &qword_26B0327E8, (uint64_t (*)(uint64_t))sub_241A29620, MEMORY[0x263EFDDF8]);
  uint64_t v255 = v12;
  uint64_t v258 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v257 = (char *)&v199 - v13;
  sub_241A7245C();
  uint64_t v229 = v14;
  uint64_t v228 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v249 = (char *)&v199 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A72660();
  uint64_t v232 = v16;
  uint64_t v231 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v230 = (char *)&v199 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A729A8(0, &qword_268D422F8, (void (*)(uint64_t))sub_241A72660, sub_241A29620, (void (*)(void))sub_241A72A38);
  uint64_t v235 = v18;
  uint64_t v234 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  v233 = (char *)&v199 - v19;
  sub_241A72A6C();
  uint64_t v238 = v20;
  uint64_t v237 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v236 = (char *)&v199 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A72C28();
  uint64_t v241 = v22;
  uint64_t v240 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v239 = (char *)&v199 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A75A70(0, &qword_268D42338, sub_241A72D34, (void (*)(void))sub_241A72DEC);
  uint64_t v214 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v213 = (char *)&v199 - v25;
  sub_241A72E20();
  uint64_t v218 = v26;
  uint64_t v217 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  v215 = (char *)&v199 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A730A4();
  uint64_t v211 = v28;
  uint64_t v219 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  v216 = (char *)&v199 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x263F8EE60] + 8;
  sub_241A76634(0, (unint64_t *)&qword_26B032818, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDDF8]);
  uint64_t v204 = v31;
  uint64_t v208 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v202 = (char *)&v199 - v32;
  sub_241A74F70(0, &qword_268D42388, v30, MEMORY[0x263EFDEA0]);
  uint64_t v203 = v33;
  uint64_t v207 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v206 = (char *)&v199 - v34;
  uint64_t v35 = (char *)sub_241CDA1A0();
  uint64_t v36 = *((void *)v35 - 1);
  uint64_t v259 = v35;
  uint64_t v260 = v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v253 = (char *)&v199 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v222 = (char *)&v199 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v248 = (char *)&v199 - v42;
  MEMORY[0x270FA5388](v41);
  char v205 = (char *)&v199 - v43;
  sub_241A29620(0);
  uint64_t v261 = v44;
  uint64_t v45 = MEMORY[0x270FA5388](v44);
  uint64_t v256 = (char *)&v199 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  uint64_t v221 = (uint64_t)&v199 - v47;
  uint64_t v48 = sub_241CD75A0();
  uint64_t v262 = *(void (***)(char *, uint64_t, void))(v48 - 8);
  uint64_t v263 = v48;
  MEMORY[0x270FA5388](v48);
  uint64_t v210 = (char *)&v199 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A762B8(0, &qword_268D42348, sub_241A72F0C, (void (*)(void))sub_241A72F60);
  uint64_t v247 = v50;
  uint64_t v246 = *(void *)(v50 - 8);
  uint64_t v51 = MEMORY[0x270FA5388](v50);
  v212 = (char *)&v199 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v51);
  v250 = (char *)&v199 - v53;
  sub_241A72DB8(0);
  uint64_t v55 = MEMORY[0x270FA5388](v54 - 8);
  v220 = (char *)&v199 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v55);
  uint64_t v244 = (char *)&v199 - v57;
  uint64_t v58 = sub_241CD6D00();
  uint64_t v252 = *(void *)(v58 - 8);
  uint64_t v59 = *(void *)(v252 + 64);
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v61 = MEMORY[0x270FA5388](v60);
  uint64_t v63 = (char *)&v199 - v62;
  MEMORY[0x270FA5388](v61);
  unint64_t v65 = (char *)&v199 - v64;
  uint64_t v66 = type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
  MEMORY[0x270FA5388](v66);
  uint64_t v251 = v2;
  uint64_t v69 = v2;
  uint64_t v67 = (void *)*v2;
  uint64_t v68 = (void *)v69[1];
  uint64_t v70 = (void *)sub_241CDB4D0();
  uint64_t v254 = sub_241CA1EFC(v68);
  v264 = v71;

  uint64_t v72 = sub_241A73ECC((unint64_t)v265, (uint64_t)v68);
  uint64_t v73 = v67;
  uint64_t v74 = v248;
  uint64_t v75 = v244;
  uint64_t v243 = v59;
  uint64_t v201 = (char *)&v199 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = v65;
  v253 = v63;
  uint64_t v242 = v58;
  if (v72)
  {
    uint64_t v76 = v72;
    objc_msgSend(v76, sel_endDate);
    id v77 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    unsigned __int8 v78 = objc_msgSend(v76, sel_hasSampleUUID);
    uint64_t v200 = v68;
    if ((v78 & 1) != 0 && (id v79 = objc_msgSend(v76, sel_sampleUUID)) != 0)
    {
      uint64_t v80 = v79;
      v245 = (char *)sub_241CDB0D0();
      uint64_t v257 = v81;
    }
    else
    {
      v245 = 0;
      uint64_t v257 = 0;
    }
    uint64_t v82 = (uint64_t)v75;
    uint64_t v83 = v73;
    uint64_t v84 = (uint64_t)v251;
    uint64_t v85 = (void *)v251[2];
    sub_241CD6710();
    swift_allocObject();
    id v86 = v83;
    id v87 = v85;
    uint64_t v88 = sub_241CD6700();
    sub_241CD6740();
    swift_allocObject();
    uint64_t v89 = sub_241CD6730();
    id v90 = objc_allocWithZone(MEMORY[0x263F0A2F8]);
    uint64_t v91 = (char *)v86;
    uint64_t v92 = (void *)sub_241CDB090();
    uint64_t v93 = (char *)objc_msgSend(v90, sel_initWithProtectionCategory_domain_healthStore_, 0, v92, v87);

    *(void *)&long long v268 = v91;
    BYTE8(v268) = 0;
    uint64_t v256 = (char *)v88;
    *(void *)&long long v269 = v88;
    *((void *)&v269 + 1) = v89;
    uint64_t v226 = v89;
    char v224 = v93;
    uint64_t v270 = v93;
    uint64_t v94 = *(void **)(v84 + 80);
    sub_241CD7320();
    swift_allocObject();
    id v95 = v87;
    id v96 = v94;
    uint64_t v258 = sub_241CD72F0();
    objc_msgSend(v76, sel_endDate);
    id v97 = (id)HKDecodeDateForValue();
    int v98 = v253;
    sub_241CD6CB0();

    uint64_t v99 = *(void *)(v84 + 24);
    uint64_t v100 = v252;
    uint64_t v101 = v252 + 16;
    uint64_t v102 = v242;
    uint64_t v248 = *(char **)(v252 + 16);
    ((void (*)(uint64_t, char *, uint64_t))v248)(v82, v98, v242);
    uint64_t v103 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v100 + 56);
    v103(v82, 0, 1, v102);
    uint64_t v104 = v82;
    uint64_t v105 = (uint64_t)v220;
    sub_241CD6C00();
    v103(v105, 0, 1, v102);
    uint64_t v225 = v91;
    unint64_t v106 = (unint64_t)v264;
    uint64_t v244 = (char *)sub_241A6EF64(v91, v99, v104, v105, v254, (uint64_t)v264, (uint64_t)&unk_26F5C0F20, (uint64_t)sub_241A76458, (uint64_t)&unk_26F5C0F48, (uint64_t)sub_241A764A4);
    sub_241A76258(v105, (uint64_t (*)(void))sub_241A72DB8);
    sub_241A76258(v104, (uint64_t (*)(void))sub_241A72DB8);
    uint64_t v267 = (char *)sub_241B7BD38(v200);
    *(void *)(swift_allocObject() + 16) = v76;
    sub_241A72F0C(0);
    sub_241A72F60();
    uint64_t v223 = v76;
    uint64_t v107 = v250;
    sub_241CDA780();
    swift_release();
    swift_release();
    uint64_t v108 = v221;
    sub_241A74918(v227, v221, (uint64_t (*)(void))sub_241A29620);
    uint64_t v110 = v262;
    uint64_t v109 = v263;
    int v111 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v262[6])(v108, 1, v263);
    uint64_t v255 = v101;
    if (v111 == 1)
    {
      sub_241A76258(v108, (uint64_t (*)(void))sub_241A29620);
    }
    else
    {
      uint64_t v123 = v210;
      v110[4](v210, v108, v109);
      uint64_t v124 = sub_241CD7560();
      uint64_t v125 = sub_241CD7830();
      char v127 = sub_241AFF278(v125, v126, v124);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v127)
      {
        unint64_t v128 = v205;
        sub_241CDA0F0();
        swift_bridgeObjectRetain_n();
        uint64_t v129 = sub_241CDA190();
        os_log_type_t v130 = sub_241CDB670();
        if (os_log_type_enabled(v129, v130))
        {
          uint64_t v131 = swift_slowAlloc();
          uint64_t v132 = swift_slowAlloc();
          uint64_t v267 = (char *)v132;
          *(_DWORD *)uint64_t v131 = 136315394;
          uint64_t v266 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CEBB40, (uint64_t *)&v267);
          sub_241CDBBF0();
          *(_WORD *)(v131 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v266 = sub_241A33FE4(v254, v106, (uint64_t *)&v267);
          sub_241CDBBF0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_241A23000, v129, v130, "%s The previous feed item is a mismatch file for identifier %s", (uint8_t *)v131, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v132, -1, -1);
          MEMORY[0x245637F20](v131, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(char *, char *))(v260 + 8))(v128, v259);
        uint64_t v145 = v201;
        uint64_t v139 = MEMORY[0x263F8EE60];
        uint64_t v146 = v204;
        uint64_t v147 = v203;
        uint64_t v148 = MEMORY[0x263F8EE60] + 8;
        uint64_t v149 = v202;
        sub_241CDA5D0();
        sub_241A3DA64();
        uint64_t v150 = v206;
        sub_241CDA590();
        (*(void (**)(char *, uint64_t))(v208 + 8))(v149, v146);
        sub_241A74F0C(&qword_268D423A8, &qword_268D42388, v148);
        uint64_t v144 = sub_241CDA6D0();
        (*(void (**)(char *, uint64_t))(v207 + 8))(v150, v147);
        ((void (*)(char *, uint64_t))v110[1])(v210, v109);
        goto LABEL_19;
      }
      ((void (*)(char *, uint64_t))v110[1])(v123, v109);
    }
    uint64_t v137 = v247;
    uint64_t v138 = v246;
    uint64_t v139 = MEMORY[0x263F8EE60];
    uint64_t v140 = v211;
    uint64_t v267 = v244;
    sub_241A3DA64();
    sub_241A72D34(0);
    sub_241A72DEC();
    sub_241CDA810();
    (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v212, v107, v137);
    sub_241A72F94();
    sub_241A7301C();
    uint64_t v141 = v215;
    sub_241CDA350();
    sub_241A728C4(&qword_268D42380, (void (*)(uint64_t))sub_241A72E20);
    uint64_t v142 = v216;
    uint64_t v143 = v218;
    sub_241CDA710();
    (*(void (**)(char *, uint64_t))(v217 + 8))(v141, v143);
    sub_241A728C4(&qword_268D42398, (void (*)(uint64_t))sub_241A730A4);
    uint64_t v144 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v219 + 8))(v142, v140);
    uint64_t v145 = v201;
LABEL_19:
    uint64_t v263 = v144;
    uint64_t v267 = (char *)v144;
    uint64_t v151 = swift_allocObject();
    uint64_t v152 = (uint64_t)v251;
    long long v153 = *((_OWORD *)v251 + 3);
    *(_OWORD *)(v151 + 48) = *((_OWORD *)v251 + 2);
    *(_OWORD *)(v151 + 64) = v153;
    *(_OWORD *)(v151 + 80) = *(_OWORD *)(v152 + 64);
    uint64_t v154 = *(void *)(v152 + 80);
    long long v155 = *(_OWORD *)(v152 + 16);
    *(_OWORD *)(v151 + 16) = *(_OWORD *)v152;
    *(_OWORD *)(v151 + 32) = v155;
    uint64_t v156 = v258;
    *(void *)(v151 + 96) = v154;
    *(void *)(v151 + 104) = v156;
    swift_retain();
    sub_241A747C8(v152);
    swift_retain();
    sub_241CDA4F0();
    sub_241A74F70(0, (unint64_t *)&qword_26B0327C0, v139 + 8, MEMORY[0x263EFDCF0]);
    sub_241A29514(0, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878], MEMORY[0x263F8D8F0]);
    sub_241A72540();
    sub_241A725E0();
    sub_241A728C4((unint64_t *)&qword_26B032688, (void (*)(uint64_t))sub_241A72540);
    sub_241CDA7C0();
    swift_release();
    swift_release();
    uint64_t v157 = v242;
    ((void (*)(char *, char *, uint64_t))v248)(v145, v265, v242);
    uint64_t v158 = v145;
    uint64_t v159 = *(unsigned __int8 *)(v252 + 80);
    uint64_t v160 = v252;
    uint64_t v161 = (v159 + 32) & ~v159;
    uint64_t v227 = v159 | 7;
    uint64_t v259 = (char *)(v243 + 7);
    unint64_t v162 = (v243 + 7 + v161) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v163 = swift_allocObject();
    uint64_t v164 = v257;
    *(void *)(v163 + 16) = v245;
    *(void *)(v163 + 24) = v164;
    uint64_t v257 = v164;
    uint64_t v165 = *(void (**)(uint64_t, char *, uint64_t))(v160 + 32);
    v222 = (char *)(v160 + 32);
    uint64_t v243 = (uint64_t)v165;
    v165(v163 + v161, v158, v157);
    unint64_t v166 = v163 + v162;
    long long v167 = *(_OWORD *)(v152 + 48);
    *(_OWORD *)(v166 + 32) = *(_OWORD *)(v152 + 32);
    *(_OWORD *)(v166 + 48) = v167;
    *(_OWORD *)(v166 + 64) = *(_OWORD *)(v152 + 64);
    *(void *)(v166 + 80) = *(void *)(v152 + 80);
    long long v168 = *(_OWORD *)(v152 + 16);
    *(_OWORD *)unint64_t v166 = *(_OWORD *)v152;
    *(_OWORD *)(v166 + 16) = v168;
    uint64_t v169 = v223;
    *(void *)(v163 + ((v162 + 95) & 0xFFFFFFFFFFFFFFF8)) = v223;
    uint64_t v262 = v169;
    sub_241A747C8(v152);
    swift_bridgeObjectRetain();
    sub_241CDA4F0();
    sub_241A72828();
    sub_241A729A8(0, &qword_268D422D0, sub_241A72760, (void (*)(uint64_t))sub_241A72828, (void (*)(void))sub_241A72890);
    uint64_t v260 = MEMORY[0x263EFDC28];
    sub_241A728C4(&qword_26B038300, (void (*)(uint64_t))sub_241A7245C);
    sub_241A7290C();
    uint64_t v170 = v230;
    uint64_t v171 = v229;
    v172 = v249;
    sub_241CDA7C0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v228 + 8))(v172, v171);
    uint64_t v173 = swift_allocObject();
    long long v174 = *(_OWORD *)(v152 + 48);
    *(_OWORD *)(v173 + 48) = *(_OWORD *)(v152 + 32);
    *(_OWORD *)(v173 + 64) = v174;
    *(_OWORD *)(v173 + 80) = *(_OWORD *)(v152 + 64);
    uint64_t v175 = *(void *)(v152 + 80);
    long long v176 = *(_OWORD *)(v152 + 16);
    *(_OWORD *)(v173 + 16) = *(_OWORD *)v152;
    *(_OWORD *)(v173 + 32) = v176;
    id v177 = v262;
    *(void *)(v173 + 96) = v175;
    *(void *)(v173 + 104) = v177;
    *(void *)(v173 + 112) = v258;
    uint64_t v178 = swift_allocObject();
    *(void *)(v178 + 16) = sub_241A74CB4;
    *(void *)(v178 + 24) = v173;
    uint64_t v262 = (void (**)(char *, uint64_t, void))v177;
    sub_241A747C8(v152);
    sub_241A72A38();
    swift_retain();
    uint64_t v179 = v233;
    uint64_t v180 = v232;
    sub_241CDA710();
    swift_release();
    (*(void (**)(char *, uint64_t))(v231 + 8))(v170, v180);
    uint64_t v181 = v201;
    uint64_t v182 = v242;
    ((void (*)(char *, char *, uint64_t))v248)(v201, v265, v242);
    uint64_t v183 = (v159 + 48) & ~v159;
    unint64_t v184 = (unint64_t)&v259[v183] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v185 = (void *)swift_allocObject();
    uint64_t v186 = v257;
    v185[2] = v245;
    v185[3] = v186;
    id v187 = v264;
    v185[4] = v254;
    v185[5] = v187;
    ((void (*)(char *, char *, uint64_t))v243)((char *)v185 + v183, v181, v182);
    uint64_t v188 = (char *)v185 + v184;
    long long v189 = v269;
    *(_OWORD *)uint64_t v188 = v268;
    *((_OWORD *)v188 + 1) = v189;
    *((void *)v188 + 4) = v270;
    v264 = v225;
    swift_retain();
    swift_retain();
    uint64_t v259 = v224;
    sub_241CDA4F0();
    sub_241A72780(0, &qword_268D42310, sub_241A29620);
    sub_241A72B8C();
    sub_241A76404(&qword_268D42318, (uint64_t)&qword_268D42310, (uint64_t)sub_241A29620, (void (*)(uint64_t))sub_241A72780);
    uint64_t v190 = v236;
    uint64_t v191 = v235;
    sub_241CDA7C0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v234 + 8))(v179, v191);
    sub_241A72D54(0, (unint64_t *)&qword_26B032648, sub_241A29620);
    sub_241A728C4(&qword_268D42330, (void (*)(uint64_t))sub_241A72A6C);
    sub_241A76404(&qword_26B02E9F0, (uint64_t)&qword_26B032648, (uint64_t)sub_241A29620, (void (*)(uint64_t))sub_241A72D54);
    id v192 = v239;
    uint64_t v193 = v238;
    sub_241CDA750();
    (*(void (**)(char *, uint64_t))(v237 + 8))(v190, v193);
    sub_241A728C4(&qword_268D423A0, (void (*)(uint64_t))sub_241A72C28);
    uint64_t v194 = v241;
    uint64_t v136 = sub_241CDA6D0();
    swift_release();
    swift_release();

    swift_release();
    swift_release();

    swift_release();
    id v195 = v262;

    (*(void (**)(char *, uint64_t))(v240 + 8))(v192, v194);
    (*(void (**)(char *, uint64_t))(v246 + 8))(v250, v247);
    uint64_t v196 = *(void (**)(char *, uint64_t))(v252 + 8);
    uint64_t v197 = v242;
    v196(v253, v242);
    v196(v265, v197);
    return v136;
  }
  swift_bridgeObjectRelease();
  uint64_t v112 = v74;
  sub_241CDA0F0();
  uint64_t v113 = (uint64_t)v251;
  sub_241A747C8((uint64_t)v251);
  sub_241A747C8(v113);
  uint64_t v114 = sub_241CDA190();
  os_log_type_t v115 = sub_241CDB670();
  if (os_log_type_enabled(v114, v115))
  {
    uint64_t v116 = swift_slowAlloc();
    uint64_t v265 = (char *)swift_slowAlloc();
    *(void *)&long long v268 = v265;
    *(_DWORD *)uint64_t v116 = 136446466;
    uint64_t v267 = (char *)sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CEBB40, (uint64_t *)&v268);
    sub_241CDBBF0();
    *(_WORD *)(v116 + 12) = 2080;
    id v117 = objc_msgSend(v68, sel_identifier);
    uint64_t v118 = v113;
    uint64_t v119 = sub_241CDB0D0();
    unint64_t v121 = v120;

    uint64_t v267 = (char *)sub_241A33FE4(v119, v121, (uint64_t *)&v268);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241A74850(v118);
    sub_241A74850(v118);
    _os_log_impl(&dword_241A23000, v114, v115, "%{public}s No samples found for %s", (uint8_t *)v116, 0x16u);
    unint64_t v122 = (unint64_t)v265;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v122, -1, -1);
    MEMORY[0x245637F20](v116, -1, -1);

    (*(void (**)(char *, char *))(v260 + 8))(v248, v259);
  }
  else
  {
    sub_241A74850(v113);
    sub_241A74850(v113);

    (*(void (**)(char *, char *))(v260 + 8))(v112, v259);
  }
  uint64_t v134 = v257;
  uint64_t v133 = v258;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v262[7])(v256, 1, 1, v263);
  sub_241CDA5D0();
  sub_241A36B10();
  uint64_t v135 = v255;
  uint64_t v136 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v134, v135);
  return v136;
}

uint64_t sub_241A6EE8C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_241A6EEB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_241A6EF64(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_26F5C0F20, (uint64_t)sub_241A76458, (uint64_t)&unk_26F5C0F48, (uint64_t)sub_241A764A4);
}

uint64_t sub_241A6EF0C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_241A6EF64(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_26F5C1010, (uint64_t)sub_241A78304, (uint64_t)&unk_26F5C1038, (uint64_t)sub_241A7847C);
}

uint64_t sub_241A6EF64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v47 = a8;
  uint64_t v43 = a2;
  uint64_t v44 = a7;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v42 = a4;
  uint64_t v55 = a10;
  uint64_t v50 = a3;
  uint64_t v51 = a9;
  sub_241A762B8(0, &qword_26B0382E8, sub_241A72D34, (void (*)(void))sub_241A72DEC);
  uint64_t v56 = *(void *)(v11 - 8);
  uint64_t v57 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v54 = (char *)&v41 - v12;
  sub_241A76328();
  uint64_t v45 = *(void *)(v13 - 8);
  uint64_t v46 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A72DB8(0);
  uint64_t v48 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v49 = v17;
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29514(0, &qword_26B038358, (uint64_t (*)(uint64_t))sub_241A72DB8, MEMORY[0x263EFDDF8]);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v41 - v22;
  uint64_t v24 = a1;
  id v25 = objc_msgSend(a1, sel_profileIdentifier);
  id v26 = objc_msgSend(v25, sel_type);

  if (v26 == (id)1)
  {
    sub_241A74918(v42, (uint64_t)v18, (uint64_t (*)(void))sub_241A72DB8);
    sub_241CDA5D0();
    sub_241A76544();
    uint64_t v27 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    uint64_t v28 = v24;
  }
  else
  {
    uint64_t v28 = v24;
    id v29 = objc_msgSend(v24, sel_profileIdentifier);
    uint64_t v58 = sub_241CDBA10();
    *(void *)(swift_allocObject() + 16) = v28;
    sub_241A72780(0, &qword_26B038330, sub_241A72DB8);
    sub_241A72D34(0);
    sub_241A76404(&qword_26B02E9E8, (uint64_t)&qword_26B038330, (uint64_t)sub_241A72DB8, (void (*)(uint64_t))sub_241A72780);
    sub_241A72DEC();
    id v30 = v28;
    sub_241CDA750();
    swift_release();
    swift_release();
    sub_241A728C4(&qword_268D42440, (void (*)(uint64_t))sub_241A76328);
    uint64_t v31 = v46;
    uint64_t v27 = sub_241CDA6D0();

    (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v31);
  }
  uint64_t v58 = v27;
  sub_241A74918(v50, (uint64_t)v18, (uint64_t (*)(void))sub_241A72DB8);
  unint64_t v32 = (*(unsigned __int8 *)(v48 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v33 = (void *)swift_allocObject();
  uint64_t v34 = v52;
  uint64_t v35 = v53;
  void v33[2] = v28;
  v33[3] = v34;
  void v33[4] = v35;
  sub_241A75214((uint64_t)v18, (uint64_t)v33 + v32, (uint64_t (*)(void))sub_241A72DB8);
  sub_241A72D34(0);
  sub_241A72DEC();
  id v36 = v28;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v37 = v54;
  sub_241CDA780();
  swift_release();
  swift_release();
  sub_241A764BC();
  uint64_t v38 = v57;
  uint64_t v39 = sub_241CDA6D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v38);
  return v39;
}

uint64_t sub_241A6F508(uint64_t a1, void *a2)
{
  sub_241A72F2C(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A74918(a1, (uint64_t)v6, (uint64_t (*)(void))sub_241A72F2C);
  uint64_t v7 = type metadata accessor for SummaryAlertContentState();
  char v8 = 1;
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  uint64_t v10 = (uint64_t (*)(void))sub_241A72F2C;
  if (v9 != 1)
  {
    char v8 = sub_241CC9950(a2);
    uint64_t v10 = (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState;
  }
  sub_241A76258((uint64_t)v6, v10);
  return v8 & 1;
}

uint64_t sub_241A6F620()
{
  unint64_t v1 = *v0;
  unint64_t v2 = (void *)sub_241CDB4D0();
  sub_241CA1EFC(v0[1]);
  sub_241CDB180();

  id v3 = objc_allocWithZone(MEMORY[0x263F0A470]);
  id v4 = v1;
  uint64_t v5 = (void *)sub_241CDB090();
  id v6 = objc_msgSend(v3, sel_initWithCategory_domainName_healthStore_, 1, v5, v4);

  sub_241B96518();
  sub_241CD7320();
  sub_241A728C4(&qword_26B031AA0, MEMORY[0x263F454B0]);
  uint64_t v7 = sub_241CD7D90();
  swift_bridgeObjectRelease();

  swift_release();
  return v7;
}

uint64_t sub_241A6F7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v38 = a5;
  uint64_t v36 = a6;
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v35 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD6D00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  if (!a2)
  {
    sub_241CD6B00();
    sub_241CDB340();
  }
  uint64_t v16 = *(void (**)(char *, uint64_t))(v13 + 8);
  swift_bridgeObjectRetain();
  v16(v15, v12);
  uint64_t v17 = v37;
  char v18 = sub_241CDBB90();
  swift_bridgeObjectRelease();
  if (v18)
  {
    uint64_t v19 = (void *)sub_241CDB4D0();
    id v20 = sub_241B99118((uint64_t)v19, *(void **)(a4 + 8), v38);
    unint64_t v22 = v21;

    sub_241CDA160();
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_241CDA190();
    os_log_type_t v24 = sub_241CDB670();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      id v34 = v20;
      uint64_t v26 = v25;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v40 = v27;
      *(_DWORD *)uint64_t v26 = 136446466;
      uint64_t v39 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CEBB40, &v40);
      sub_241CDBBF0();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_241A33FE4((uint64_t)v34, v22, &v40);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v23, v24, "%{public}s Removing any notifications that may have been delivered: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      uint64_t v28 = v27;
      uint64_t v17 = v37;
      MEMORY[0x245637F20](v28, -1, -1);
      uint64_t v29 = v26;
      id v20 = v34;
      MEMORY[0x245637F20](v29, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v9);
    swift_getObjectType();
    sub_241A76634(0, (unint64_t *)&qword_26B038860, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_241CEB730;
    *(void *)(v30 + 32) = v20;
    *(void *)(v30 + 40) = v22;
    sub_241CD7B50();
    swift_bridgeObjectRelease();
  }
  char v31 = sub_241B994C4(v17, v38);
  uint64_t v40 = *(void *)(a4 + 72);
  *(unsigned char *)(swift_allocObject() + 16) = v31 & 1;
  sub_241A72760(0);
  sub_241A72828();
  sub_241A72890();
  swift_retain();
  sub_241CDA710();
  swift_release();
  return swift_release();
}

uint64_t sub_241A6FC34@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, void *a4@<X3>, char **a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v44 = a5;
  int v45 = a2;
  uint64_t v50 = a6;
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v47 = *(void *)(v9 - 8);
  unint64_t v48 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v49 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A727F4(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CD78F0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  char v18 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  id v20 = (char *)&v43 - v19;
  sub_241A29620(0);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a4;
  sub_241BA66D8(a1, a4, (uint64_t)v23);
  os_log_type_t v24 = (void *)sub_241CDB4D0();
  if (v24)
  {
    uint64_t v25 = v24;
    if (objc_msgSend(v24, sel_type) == (id)2)
    {
      id v43 = v25;
      sub_241A74918(a1, (uint64_t)v13, (uint64_t (*)(void))sub_241A727F4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
      {
        sub_241A76258((uint64_t)v13, (uint64_t (*)(void))sub_241A727F4);
        uint64_t v26 = v49;
        sub_241CDA0F0();
        uint64_t v27 = sub_241CDA190();
        os_log_type_t v28 = sub_241CDB650();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc();
          uint64_t v30 = swift_slowAlloc();
          uint64_t v52 = v30;
          *(_DWORD *)uint64_t v29 = 136315138;
          uint64_t v51 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CEBB40, &v52);
          sub_241CDBBF0();
          _os_log_impl(&dword_241A23000, v27, v28, "%s No profileDisplayName for a summarySharing alert notification.", v29, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v30, -1, -1);
          MEMORY[0x245637F20](v29, -1, -1);
        }

        (*(void (**)(char *, unint64_t))(v47 + 8))(v26, v48);
      }
      else
      {
        char v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        v31(v20, v13, v14);
        uint64_t v32 = sub_241CD75A0();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v23, 1, v32))
        {
          (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
          uint64_t v33 = *v44;
          unint64_t v34 = (*(unsigned __int8 *)(v15 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
          unint64_t v48 = (v16 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v49 = v33;
          uint64_t v35 = swift_allocObject();
          long long v36 = *(_OWORD *)(a3 + 48);
          *(_OWORD *)(v35 + 56) = *(_OWORD *)(a3 + 32);
          *(_OWORD *)(v35 + 72) = v36;
          *(_OWORD *)(v35 + 88) = *(_OWORD *)(a3 + 64);
          long long v37 = *(_OWORD *)(a3 + 16);
          *(_OWORD *)(v35 + 24) = *(_OWORD *)a3;
          *(unsigned char *)(v35 + 16) = v45 & 1;
          uint64_t v38 = *(void *)(a3 + 80);
          *(_OWORD *)(v35 + 40) = v37;
          unint64_t v39 = v35 + v34;
          uint64_t v40 = v46;
          *(void *)(v35 + 104) = v38;
          *(void *)(v35 + 112) = v40;
          v31((char *)v39, v18, v14);
          *(void *)(v35 + v48) = v49;
          sub_241A747C8(a3);
          id v41 = v40;
          swift_retain();
          sub_241CD7450();

          (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
        }
      }
    }
    else
    {
    }
  }
  return sub_241A75214((uint64_t)v23, v50, (uint64_t (*)(void))sub_241A29620);
}

uint64_t sub_241A701AC(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v11 = sub_241CDA1A0();
  uint64_t v30 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CD6D00();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v18 = *a6;
    swift_retain();
    sub_241CD6C00();
    sub_241A73190(a4, a5, v18, v17, a3);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    swift_release();
    sub_241A313AC(0, &qword_268D423E8);
    sub_241A3DA64();
    sub_241CDA500();
    return swift_release();
  }
  else
  {
    sub_241CDA160();
    sub_241A747C8(a3);
    sub_241A747C8(a3);
    id v20 = sub_241CDA190();
    os_log_type_t v21 = sub_241CDB670();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v32 = v29;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v31 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CEBB40, &v32);
      sub_241CDBBF0();
      *(_WORD *)(v22 + 12) = 2080;
      v28[1] = v22 + 14;
      id v23 = objc_msgSend(*(id *)(a3 + 8), sel_identifier);
      uint64_t v24 = sub_241CDB0D0();
      unint64_t v26 = v25;

      uint64_t v31 = sub_241A33FE4(v24, v26, &v32);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A74850(a3);
      sub_241A74850(a3);
      _os_log_impl(&dword_241A23000, v20, v21, "%s Not generating notification for %s", (uint8_t *)v22, 0x16u);
      uint64_t v27 = v29;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v27, -1, -1);
      MEMORY[0x245637F20](v22, -1, -1);
    }
    else
    {
      sub_241A74850(a3);
      sub_241A74850(a3);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v11);
  }
}

uint64_t sub_241A70554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v69 = a7;
  uint64_t v66 = (char *)a6;
  uint64_t v64 = a5;
  uint64_t v63 = a4;
  uint64_t v62 = a3;
  v59[1] = a2;
  uint64_t v81 = a1;
  uint64_t v84 = a8;
  sub_241A29620(0);
  uint64_t v83 = v8;
  uint64_t v79 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v80 = v9;
  uint64_t v82 = (uint64_t)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29514(0, &qword_268D423B0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, MEMORY[0x263EFDDF8]);
  uint64_t v67 = *(void *)(v10 - 8);
  uint64_t v68 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v65 = (char *)v59 - v11;
  sub_241A74F70(0, &qword_268D423B8, MEMORY[0x263F06F78], MEMORY[0x263EFDEA0]);
  uint64_t v72 = *(void *)(v12 - 8);
  uint64_t v73 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v70 = (char *)v59 - v13;
  sub_241A74FE0();
  uint64_t v74 = *(void *)(v14 - 8);
  uint64_t v75 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v71 = (char *)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A750D8();
  uint64_t v77 = *(void *)(v16 - 8);
  uint64_t v78 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v76 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CD6D00();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  os_log_type_t v21 = (char *)v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (int *)type metadata accessor for SummaryAlertContentState();
  uint64_t v60 = *((void *)v22 - 1);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  unint64_t v25 = (char *)v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v85 = (uint64_t)v59 - v26;
  sub_241A7517C(0);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v30 = (char *)v59 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)v59 - v31;
  uint64_t v33 = sub_241CD6D70();
  unint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
  v34(v32, 1, 1, v33);
  if (v62)
  {
    sub_241CD6D10();
    sub_241A76258((uint64_t)v32, (uint64_t (*)(void))sub_241A7517C);
    sub_241A75214((uint64_t)v30, (uint64_t)v32, (uint64_t (*)(void))sub_241A7517C);
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v21, v66, v18);
  sub_241A74918((uint64_t)v32, (uint64_t)v30, (uint64_t (*)(void))sub_241A7517C);
  uint64_t v35 = v22[6];
  uint64_t v66 = v32;
  uint64_t v36 = (uint64_t)&v25[v35];
  v34(&v25[v35], 1, 1, v33);
  uint64_t v37 = v64;
  *(void *)unint64_t v25 = v63;
  *((void *)v25 + 1) = v37;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v25[v22[5]], v21, v18);
  swift_bridgeObjectRetain();
  sub_241A751B0((uint64_t)v30, v36);
  v25[v22[7]] = 1;
  v25[v22[8]] = 0;
  uint64_t v38 = v85;
  sub_241A75214((uint64_t)v25, v85, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState);
  unint64_t v39 = (void *)v69[4];
  sub_241A74918(v38, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState);
  swift_retain();
  id v40 = v39;
  id v41 = v65;
  sub_241CDA5D0();
  uint64_t v42 = MEMORY[0x263F06F78];
  id v43 = v70;
  uint64_t v44 = v68;
  sub_241CDA5B0();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v41, v44);
  sub_241A74918(v38, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState);
  unint64_t v45 = (*(unsigned __int8 *)(v60 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v40;
  sub_241A75214((uint64_t)v25, v46 + v45, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState);
  uint64_t v69 = v40;
  sub_241CDA4F0();
  sub_241A74F70(0, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
  sub_241A74F0C((unint64_t *)&qword_268D423C8, &qword_268D423B8, v42);
  sub_241A725E0();
  uint64_t v47 = v71;
  uint64_t v48 = v73;
  sub_241CDA7C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v43, v48);
  sub_241A728C4(&qword_268D423D8, (void (*)(uint64_t))sub_241A74FE0);
  uint64_t v49 = v75;
  uint64_t v50 = sub_241CDA6D0();

  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v47, v49);
  uint64_t v86 = v50;
  uint64_t v51 = v82;
  sub_241A74918(v81, v82, (uint64_t (*)(void))sub_241A29620);
  unint64_t v52 = (*(unsigned __int8 *)(v79 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  uint64_t v53 = swift_allocObject();
  sub_241A75214(v51, v53 + v52, (uint64_t (*)(void))sub_241A29620);
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = sub_241A755B0;
  *(void *)(v54 + 24) = v53;
  uint64_t v55 = v76;
  sub_241CDA710();
  swift_release();
  swift_release();
  sub_241A728C4(&qword_268D423E0, (void (*)(uint64_t))sub_241A750D8);
  uint64_t v56 = v78;
  uint64_t v57 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v55, v56);
  sub_241A76258(v85, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState);
  uint64_t result = sub_241A76258((uint64_t)v66, (uint64_t (*)(void))sub_241A7517C);
  *uint64_t v84 = v57;
  return result;
}

uint64_t sub_241A70F58@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_241A29620(0);
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29514(0, &qword_26B0327E8, (uint64_t (*)(uint64_t))sub_241A29620, MEMORY[0x263EFDDF8]);
  uint64_t v8 = v7;
  uint64_t v35 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v34 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  sub_241CDA0F0();
  id v15 = v14;
  id v16 = v14;
  uint64_t v17 = sub_241CDA190();
  os_log_type_t v18 = sub_241CDB650();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v31 = v6;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v33 = a2;
    uint64_t v30 = v21;
    uint64_t v37 = v21;
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v32 = v8;
    uint64_t v36 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CEBB40, &v37);
    sub_241CDBBF0();
    *(_WORD *)(v20 + 12) = 2082;
    uint64_t v36 = (uint64_t)v14;
    id v22 = v14;
    sub_241A3DA64();
    uint64_t v23 = sub_241CDB130();
    uint64_t v36 = sub_241A33FE4(v23, v24, &v37);
    uint64_t v8 = v32;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v17, v18, "%{public}s Shared Alert Feed Item Error: %{public}s", (uint8_t *)v20, 0x16u);
    uint64_t v25 = v30;
    swift_arrayDestroy();
    a2 = v33;
    MEMORY[0x245637F20](v25, -1, -1);
    uint64_t v26 = v20;
    id v6 = v31;
    MEMORY[0x245637F20](v26, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v34);
  uint64_t v27 = sub_241CD75A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v6, 1, 1, v27);
  sub_241CDA5D0();
  sub_241A36B10();
  uint64_t v28 = sub_241CDA6D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v10, v8);
  *a2 = v28;
  return result;
}

uint64_t sub_241A7135C(void *a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v46 = a3;
  unint64_t v47 = a4;
  sub_241A72DB8(0);
  unint64_t v7 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29514(0, &qword_26B038358, (uint64_t (*)(uint64_t))sub_241A72DB8, MEMORY[0x263EFDDF8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t v15 = sub_241CDA1A0();
  uint64_t v49 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0F0();
  id v18 = a2;
  id v19 = a1;
  id v20 = v18;
  id v21 = a1;
  uint64_t v48 = v17;
  id v22 = sub_241CDA190();
  os_log_type_t v23 = sub_241CDB650();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v44 = v15;
    uint64_t v26 = v25;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v26 = 136315650;
    int v42 = v24;
    uint64_t v50 = sub_241A33FE4(v46, v47, &v51);
    unint64_t v47 = v7;
    sub_241CDBBF0();
    *(_WORD *)(v26 + 12) = 2080;
    unint64_t v45 = v14;
    uint64_t v27 = (void *)sub_241CDB4D0();
    uint64_t v28 = sub_241CD73D0();
    os_log_t v41 = v22;
    uint64_t v29 = v28;
    uint64_t v46 = v11;
    unint64_t v31 = v30;

    uint64_t v50 = sub_241A33FE4(v29, v31, &v51);
    uint64_t v14 = v45;
    sub_241CDBBF0();

    uint64_t v11 = v46;
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2080;
    uint64_t v50 = (uint64_t)a1;
    id v32 = a1;
    sub_241A3DA64();
    uint64_t v33 = sub_241CDB130();
    uint64_t v50 = sub_241A33FE4(v33, v34, &v51);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    os_log_t v35 = v41;
    _os_log_impl(&dword_241A23000, v41, (os_log_type_t)v42, "[%s]_%s: fetchIncomingAcceptedEntryDateAccepted error %s", (uint8_t *)v26, 0x20u);
    uint64_t v36 = v43;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v36, -1, -1);
    MEMORY[0x245637F20](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v44);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v15);
  }
  uint64_t v37 = sub_241CD6D00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v9, 1, 1, v37);
  sub_241CDA5D0();
  sub_241A76544();
  uint64_t v38 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v38;
}

uint64_t sub_241A717F0(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_241A71828(a1, a2, a3, a4, a5, 0xD00000000000002DLL, 0x8000000241CEBB40);
}

uint64_t sub_241A7180C(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_241A71828(a1, a2, a3, a4, a5, 0xD000000000000034, 0x8000000241CDDB30);
}

uint64_t sub_241A71828(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  int v98 = (unsigned char *)a6;
  unint64_t v99 = a7;
  id v96 = (unsigned char *)a5;
  uint64_t v100 = a3;
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v102 = v10;
  uint64_t v103 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v93 = &v89[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v95 = &v89[-v15];
  MEMORY[0x270FA5388](v14);
  uint64_t v101 = &v89[-v16];
  sub_241A72DB8(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  id v20 = &v89[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v18);
  id v22 = &v89[-v21];
  uint64_t v23 = sub_241CD6D00();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v94 = &v89[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  id v97 = &v89[-v28];
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  unint64_t v31 = &v89[-v30];
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = &v89[-v32];
  sub_241A74918(a1, (uint64_t)v22, (uint64_t (*)(void))sub_241A72DB8);
  unint64_t v34 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v24 + 48);
  if (v34(v22, 1, v23) == 1)
  {
    sub_241A76258((uint64_t)v22, (uint64_t (*)(void))sub_241A72DB8);
    sub_241CDA0F0();
    id v35 = a2;
    swift_bridgeObjectRetain_n();
    id v36 = v35;
    uint64_t v37 = sub_241CDA190();
    os_log_type_t v38 = sub_241CDB650();
    unint64_t v39 = a4;
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v40 = swift_slowAlloc();
      id v97 = (unsigned char *)swift_slowAlloc();
      id v105 = v97;
      *(_DWORD *)uint64_t v40 = 136315651;
      uint64_t v104 = sub_241A33FE4((uint64_t)v98, v99, (uint64_t *)&v105);
      sub_241CDBBF0();
      *(_WORD *)(v40 + 12) = 2080;
      os_log_t v41 = (void *)sub_241CDB4D0();
      uint64_t v42 = sub_241CD73D0();
      unint64_t v44 = v43;

      uint64_t v104 = sub_241A33FE4(v42, v44, (uint64_t *)&v105);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 22) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v104 = sub_241A33FE4(v100, v39, (uint64_t *)&v105);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v37, v38, "[%s]_%s: Unable to access sharing entry date accepted for identifier %{private}s", (uint8_t *)v40, 0x20u);
      unint64_t v45 = v97;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v45, -1, -1);
      MEMORY[0x245637F20](v40, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(unsigned char *, uint64_t))(v103 + 8))(v101, v102);
LABEL_19:
    LOBYTE(v60) = 0;
    return v60 & 1;
  }
  id v92 = a2;
  uint64_t v101 = (unsigned char *)v24;
  uint64_t v46 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v24 + 32);
  v46(v33, v22, v23);
  sub_241A74918((uint64_t)v96, (uint64_t)v20, (uint64_t (*)(void))sub_241A72DB8);
  if (v34(v20, 1, v23) == 1)
  {
    id v96 = v33;
    id v97 = (unsigned char *)v23;
    sub_241A76258((uint64_t)v20, (uint64_t (*)(void))sub_241A72DB8);
    unint64_t v47 = v93;
    sub_241CDA0F0();
    id v48 = v92;
    unint64_t v49 = a4;
    swift_bridgeObjectRetain_n();
    id v50 = v48;
    uint64_t v51 = sub_241CDA190();
    os_log_type_t v52 = sub_241CDB670();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      id v95 = (unsigned char *)swift_slowAlloc();
      id v105 = v95;
      *(_DWORD *)uint64_t v53 = 136315651;
      uint64_t v104 = sub_241A33FE4((uint64_t)v98, v99, (uint64_t *)&v105);
      sub_241CDBBF0();
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v54 = (void *)sub_241CDB4D0();
      uint64_t v55 = sub_241CD73D0();
      unint64_t v57 = v56;

      uint64_t v104 = sub_241A33FE4(v55, v57, (uint64_t *)&v105);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 22) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v104 = sub_241A33FE4(v100, v49, (uint64_t *)&v105);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v51, v52, "[%s]_%s: Provided model date is nil for identifier %{private}s", (uint8_t *)v53, 0x20u);
      uint64_t v58 = v95;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v58, -1, -1);
      MEMORY[0x245637F20](v53, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v103 + 8))(v93, v102);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v103 + 8))(v47, v102);
    }
    (*((void (**)(unsigned char *, unsigned char *))v101 + 1))(v96, v97);
    goto LABEL_19;
  }
  uint64_t v59 = (uint64_t)v31;
  v46(v31, v20, v23);
  sub_241A728C4((unint64_t *)&qword_26B02E8D0, MEMORY[0x263F07490]);
  LODWORD(v93) = sub_241CDB010();
  unsigned int v60 = v93 ^ 1;
  uint64_t v61 = v95;
  sub_241CDA0F0();
  uint64_t v62 = (void (*)(unsigned char *, unsigned char *, uint64_t))*((void *)v101 + 2);
  v62(v97, v33, v23);
  uint64_t v63 = v94;
  v62(v94, (unsigned char *)v59, v23);
  id v64 = v92;
  unint64_t v65 = a4;
  swift_bridgeObjectRetain_n();
  id v66 = v64;
  uint64_t v67 = sub_241CDA190();
  os_log_type_t v68 = sub_241CDB670();
  int v69 = v68;
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v70 = swift_slowAlloc();
    id v92 = (id)swift_slowAlloc();
    id v105 = v92;
    *(_DWORD *)uint64_t v70 = 136316419;
    os_log_t v91 = v67;
    uint64_t v104 = sub_241A33FE4((uint64_t)v98, v99, (uint64_t *)&v105);
    int v90 = v69;
    sub_241CDBBF0();
    *(_WORD *)(v70 + 12) = 2080;
    id v96 = v33;
    uint64_t v71 = (void *)sub_241CDB4D0();
    uint64_t v72 = sub_241CD73D0();
    int v98 = (unsigned char *)v59;
    uint64_t v73 = v72;
    LODWORD(v99) = v60;
    unint64_t v75 = v74;

    uint64_t v104 = sub_241A33FE4(v73, v75, (uint64_t *)&v105);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v70 + 22) = 2081;
    sub_241A728C4(&qword_26B02E8E0, MEMORY[0x263F07490]);
    uint64_t v76 = v97;
    uint64_t v77 = sub_241CDC0D0();
    uint64_t v104 = sub_241A33FE4(v77, v78, (uint64_t *)&v105);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    uint64_t v79 = (void (*)(unsigned char *, uint64_t))*((void *)v101 + 1);
    v79(v76, v23);
    *(_WORD *)(v70 + 32) = 2080;
    if (v93) {
      uint64_t v80 = 544501614;
    }
    else {
      uint64_t v80 = 0;
    }
    if (v93) {
      unint64_t v81 = 0xE400000000000000;
    }
    else {
      unint64_t v81 = 0xE000000000000000;
    }
    uint64_t v104 = sub_241A33FE4(v80, v81, (uint64_t *)&v105);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v70 + 42) = 2081;
    uint64_t v82 = v94;
    uint64_t v83 = sub_241CDC0D0();
    uint64_t v104 = sub_241A33FE4(v83, v84, (uint64_t *)&v105);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    v79(v82, v23);
    *(_WORD *)(v70 + 52) = 2081;
    LOBYTE(v60) = v99;
    swift_bridgeObjectRetain();
    uint64_t v104 = sub_241A33FE4(v100, v65, (uint64_t *)&v105);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    os_log_t v85 = v91;
    _os_log_impl(&dword_241A23000, v91, (os_log_type_t)v90, "[%s]_%s Threshold date %{private}s is %sbefore model date %{private}s for identifier %{private}s", (uint8_t *)v70, 0x3Eu);
    id v86 = v92;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v86, -1, -1);
    MEMORY[0x245637F20](v70, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v103 + 8))(v95, v102);
    v79(v98, v23);
    v79(v96, v23);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v88 = (void (*)(unsigned char *, uint64_t))*((void *)v101 + 1);
    v88(v63, v23);
    v88(v97, v23);

    (*(void (**)(unsigned char *, uint64_t))(v103 + 8))(v61, v102);
    v88((unsigned char *)v59, v23);
    v88(v33, v23);
  }
  return v60 & 1;
}

void sub_241A72428(uint64_t a1)
{
}

void sub_241A7245C()
{
  if (!qword_26B038308)
  {
    sub_241A72540();
    sub_241A74F70(255, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
    sub_241A728C4((unint64_t *)&qword_26B032688, (void (*)(uint64_t))sub_241A72540);
    sub_241A725E0();
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B038308);
    }
  }
}

void sub_241A72540()
{
  if (!qword_26B032690)
  {
    sub_241A29514(255, (unint64_t *)&qword_26B032060, MEMORY[0x263F45878], MEMORY[0x263F8D8F0]);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032690);
    }
  }
}

unint64_t sub_241A725E0()
{
  unint64_t result = qword_26B02EA70;
  if (!qword_26B02EA70)
  {
    sub_241A74F70(255, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B02EA70);
  }
  return result;
}

void sub_241A72660()
{
  if (!qword_268D422C8)
  {
    sub_241A729A8(255, &qword_268D422D0, sub_241A72760, (void (*)(uint64_t))sub_241A72828, (void (*)(void))sub_241A72890);
    sub_241A7245C();
    sub_241A7290C();
    sub_241A728C4(&qword_26B038300, (void (*)(uint64_t))sub_241A7245C);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D422C8);
    }
  }
}

void sub_241A72760(uint64_t a1)
{
}

void sub_241A72780(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_241A3DA64();
    unint64_t v4 = sub_241CDA510();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A727F4(uint64_t a1)
{
}

void sub_241A72828()
{
  if (!qword_268D422E0)
  {
    sub_241A727F4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D422E0);
    }
  }
}

uint64_t sub_241A72890()
{
  return sub_241A728C4(&qword_268D422E8, sub_241A72760);
}

uint64_t sub_241A728C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241A7290C()
{
  unint64_t result = qword_268D422F0;
  if (!qword_268D422F0)
  {
    sub_241A729A8(255, &qword_268D422D0, sub_241A72760, (void (*)(uint64_t))sub_241A72828, (void (*)(void))sub_241A72890);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D422F0);
  }
  return result;
}

void sub_241A729A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_241CDA3E0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241A72A38()
{
  return sub_241A728C4(&qword_268D42300, (void (*)(uint64_t))sub_241A72660);
}

void sub_241A72A6C()
{
  if (!qword_268D42308)
  {
    sub_241A72780(255, &qword_268D42310, sub_241A29620);
    sub_241A729A8(255, &qword_268D422F8, (void (*)(uint64_t))sub_241A72660, sub_241A29620, (void (*)(void))sub_241A72A38);
    sub_241A76404(&qword_268D42318, (uint64_t)&qword_268D42310, (uint64_t)sub_241A29620, (void (*)(uint64_t))sub_241A72780);
    sub_241A72B8C();
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42308);
    }
  }
}

unint64_t sub_241A72B8C()
{
  unint64_t result = qword_268D42320;
  if (!qword_268D42320)
  {
    sub_241A729A8(255, &qword_268D422F8, (void (*)(uint64_t))sub_241A72660, sub_241A29620, (void (*)(void))sub_241A72A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42320);
  }
  return result;
}

void sub_241A72C28()
{
  if (!qword_268D42328)
  {
    sub_241A72A6C();
    sub_241A72D54(255, (unint64_t *)&qword_26B032648, sub_241A29620);
    sub_241A728C4(&qword_268D42330, (void (*)(uint64_t))sub_241A72A6C);
    sub_241A76404(&qword_26B02E9F0, (uint64_t)&qword_26B032648, (uint64_t)sub_241A29620, (void (*)(uint64_t))sub_241A72D54);
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42328);
    }
  }
}

void sub_241A72D34(uint64_t a1)
{
}

void sub_241A72D54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDA510();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A72DB8(uint64_t a1)
{
}

uint64_t sub_241A72DEC()
{
  return sub_241A728C4(&qword_26B036A20, sub_241A72D34);
}

void sub_241A72E20()
{
  if (!qword_268D42340)
  {
    sub_241A75A70(255, &qword_268D42338, sub_241A72D34, (void (*)(void))sub_241A72DEC);
    sub_241A762B8(255, &qword_268D42348, sub_241A72F0C, (void (*)(void))sub_241A72F60);
    sub_241A72F94();
    sub_241A7301C();
    unint64_t v0 = sub_241CDA340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42340);
    }
  }
}

void sub_241A72F0C(uint64_t a1)
{
}

void sub_241A72F2C(uint64_t a1)
{
}

uint64_t sub_241A72F60()
{
  return sub_241A728C4(&qword_268D42360, sub_241A72F0C);
}

unint64_t sub_241A72F94()
{
  unint64_t result = qword_268D42368;
  if (!qword_268D42368)
  {
    sub_241A75A70(255, &qword_268D42338, sub_241A72D34, (void (*)(void))sub_241A72DEC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42368);
  }
  return result;
}

unint64_t sub_241A7301C()
{
  unint64_t result = qword_268D42370;
  if (!qword_268D42370)
  {
    sub_241A762B8(255, &qword_268D42348, sub_241A72F0C, (void (*)(void))sub_241A72F60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42370);
  }
  return result;
}

void sub_241A730A4()
{
  if (!qword_268D42378)
  {
    sub_241A72E20();
    sub_241A728C4(&qword_268D42380, (void (*)(uint64_t))sub_241A72E20);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42378);
    }
  }
}

uint64_t type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError()
{
  uint64_t result = qword_268D42468;
  if (!qword_268D42468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A73190(void *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v94 = a4;
  uint64_t v96 = a2;
  uint64_t v99 = sub_241CD78F0();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v95 = v8;
  id v97 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_241CD8DD0();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v89 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A75828();
  uint64_t v102 = v10;
  uint64_t v101 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v100 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A758E4();
  uint64_t v13 = v12;
  uint64_t v105 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v103 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A75BC4();
  uint64_t v16 = v15;
  uint64_t v106 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v104 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_241CDA1A0();
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v109 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_241CD6D00();
  uint64_t v19 = *(void *)(v113 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v113);
  uint64_t v88 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v80 - v23;
  uint64_t v87 = v25;
  MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v80 - v26;
  v116[3] = sub_241CD7320();
  v116[4] = sub_241A728C4(&qword_26B031AA0, MEMORY[0x263F454B0]);
  v116[0] = a3;
  uint64_t v28 = *(void *)a5;
  swift_retain();
  uint64_t v84 = v28;
  uint64_t v29 = (void *)sub_241CDB4D0();
  *(void *)&long long v115 = sub_241CA1EFC(*(void **)(a5 + 8));
  *((void *)&v115 + 1) = v30;
  sub_241CDB180();

  long long v31 = v115;
  objc_msgSend(a1, sel_endDate);
  id v32 = (id)HKDecodeDateForValue();
  int v111 = v27;
  sub_241CD6CB0();

  id v110 = a1;
  unsigned int v33 = objc_msgSend(a1, sel_hasSampleUUID);
  uint64_t v34 = 0;
  id v35 = 0;
  if (v33)
  {
    id v35 = objc_msgSend(v110, sel_sampleUUID);
    if (v35)
    {
      uint64_t v34 = sub_241CDB0D0();
      uint64_t v37 = v36;

      id v35 = v37;
    }
    else
    {
      uint64_t v34 = 0;
    }
  }
  uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v83(v24, v111, v113);
  uint64_t v107 = v13;
  uint64_t v108 = v16;
  if (v35)
  {
    id v81 = v35;
    uint64_t v82 = v34;
  }
  else
  {
    sub_241CD6B00();
    uint64_t v82 = sub_241CDB340();
    id v81 = v38;
  }
  unint64_t v39 = v109;
  uint64_t v112 = v31;
  uint64_t v40 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v93 = v19 + 8;
  id v92 = v40;
  v40(v24, v113);
  sub_241CDA160();
  swift_bridgeObjectRetain_n();
  os_log_t v41 = sub_241CDA190();
  os_log_type_t v42 = sub_241CDB670();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(void *)&long long v115 = v44;
    *(_DWORD *)uint64_t v43 = 136446466;
    uint64_t v114 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CEBB40, (uint64_t *)&v115);
    sub_241CDBBF0();
    *(_WORD *)(v43 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v114 = sub_241A33FE4(v112, *((unint64_t *)&v31 + 1), (uint64_t *)&v115);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_241A23000, v41, v42, "%{public}s Proceeding with notification for %s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v44, -1, -1);
    uint64_t v45 = v43;
    uint64_t v46 = *((void *)&v31 + 1);
    MEMORY[0x245637F20](v45, -1, -1);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v109, v86);
  }
  else
  {

    uint64_t v46 = *((void *)&v31 + 1);
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v39, v86);
  }
  uint64_t v47 = v90;
  id v48 = v89;
  uint64_t v49 = v91;
  (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, *MEMORY[0x263F444B8], v91);
  sub_241A75D64();
  uint64_t v50 = sub_241CD8820();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  *(void *)&long long v115 = v50;
  uint64_t v51 = v88;
  uint64_t v52 = v113;
  v83(v88, v94, v113);
  unint64_t v53 = (*(unsigned __int8 *)(v19 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v54 = (v87 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  long long v56 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v55 + 48) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v55 + 64) = v56;
  *(_OWORD *)(v55 + 80) = *(_OWORD *)(a5 + 64);
  *(void *)(v55 + 96) = *(void *)(a5 + 80);
  long long v57 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v55 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v55 + 32) = v57;
  (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v55 + v53, v51, v52);
  uint64_t v58 = (void *)(v55 + v54);
  *uint64_t v58 = v112;
  v58[1] = v46;
  swift_bridgeObjectRetain();
  sub_241A747C8(a5);
  sub_241CDA4F0();
  sub_241A6853C();
  sub_241A72D34(0);
  sub_241A728C4(&qword_26B02EA48, (void (*)(uint64_t))sub_241A6853C);
  sub_241A72DEC();
  uint64_t v59 = v100;
  sub_241CDA840();
  swift_release();
  swift_release();
  uint64_t v60 = v98;
  uint64_t v61 = v97;
  uint64_t v62 = v99;
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v97, v96, v99);
  unint64_t v63 = (*(unsigned __int8 *)(v60 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = v112;
  *(void *)(v64 + 24) = v46;
  id v65 = v81;
  *(void *)(v64 + 32) = v82;
  *(void *)(v64 + 40) = v65;
  long long v66 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v64 + 80) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v64 + 96) = v66;
  *(_OWORD *)(v64 + 112) = *(_OWORD *)(a5 + 64);
  uint64_t v67 = *(void *)(a5 + 80);
  long long v68 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v64 + 48) = *(_OWORD *)a5;
  *(_OWORD *)(v64 + 64) = v68;
  id v69 = v110;
  *(void *)(v64 + 128) = v67;
  *(void *)(v64 + 136) = v69;
  (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v64 + v63, v61, v62);
  sub_241A747C8(a5);
  id v70 = v69;
  sub_241CDA4F0();
  sub_241A72780(0, &qword_268D423F8, (void (*)(uint64_t))sub_241A759F0);
  sub_241A75B08();
  sub_241A76404(&qword_268D42408, (uint64_t)&qword_268D423F8, (uint64_t)sub_241A759F0, (void (*)(uint64_t))sub_241A72780);
  uint64_t v71 = v103;
  uint64_t v72 = v102;
  sub_241CDA830();
  swift_release();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v59, v72);
  sub_241A37260((uint64_t)v116, (uint64_t)&v115);
  uint64_t v73 = swift_allocObject();
  sub_241A5598C(&v115, v73 + 16);
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = sub_241A76184;
  *(void *)(v74 + 24) = v73;
  sub_241CDA4F0();
  sub_241A313AC(0, &qword_268D423E8);
  sub_241A75CB0();
  sub_241A728C4(&qword_268D42428, (void (*)(uint64_t))sub_241A758E4);
  sub_241A728C4(&qword_268D42420, (void (*)(uint64_t))sub_241A75CB0);
  unint64_t v75 = v104;
  uint64_t v76 = v107;
  sub_241CDA7C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v71, v76);
  sub_241A728C4(&qword_268D42438, (void (*)(uint64_t))sub_241A75BC4);
  uint64_t v77 = v108;
  uint64_t v78 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v75, v77);
  v92(v111, v113);
  sub_241A31190((uint64_t)v116);
  return v78;
}

void *sub_241A73ECC(unint64_t a1, uint64_t a2)
{
  id v3 = v2;
  unint64_t v6 = (void *)sub_241CDA1A0();
  uint64_t v7 = *(v6 - 1);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A72428(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = a1;
  uint64_t v75 = sub_241CD7AB0();
  uint64_t v14 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v76 = v13;
  if (v13 >> 62) {
    goto LABEL_31;
  }
  uint64_t v17 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v17; uint64_t v17 = sub_241CDBF50())
  {
    uint64_t v72 = v9;
    uint64_t v73 = (char *)v17;
    id v70 = v6;
    uint64_t v71 = a2;
    long long v68 = v3;
    uint64_t v69 = v7;
    uint64_t v18 = sub_241A313AC(0, &qword_26B030430);
    unint64_t v19 = v76;
    a2 = v18;
    id v20 = 0;
    uint64_t v74 = v76 & 0xC000000000000001;
    id v3 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v7 = 4;
    while (1)
    {
      uint64_t v14 = v7 - 4;
      uint64_t v21 = v74 ? (void *)MEMORY[0x245637160](v7 - 4) : *(id *)(v19 + 8 * v7);
      unint64_t v6 = v21;
      uint64_t v9 = (char *)(v7 - 3);
      if (__OFADD__(v14, 1)) {
        break;
      }
      sub_241CDB400();
      sub_241CD8A10();
      char v22 = sub_241CD7A70();
      sub_241A76258((uint64_t)v12, (uint64_t (*)(void))sub_241A72428);
      (*v3)(v16, v75);
      if ((v22 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
        sub_241A728C4(&qword_268D42448, (void (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
        swift_allocError();
        uint64_t v30 = v29;
        sub_241A7474C();
        *uint64_t v30 = sub_241CDC270();
        v30[1] = v31;
        sub_241CDB400();
        sub_241CD8A10();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

LABEL_29:
        return v6;
      }
      if (v20)
      {
        id v23 = v20;
        objc_msgSend(v6, sel_endDate);
        double v25 = v24;
        objc_msgSend(v23, sel_endDate);
        double v27 = v26;

        if (v27 >= v25) {
          uint64_t v28 = v6;
        }
        else {
          uint64_t v28 = v23;
        }
        if (v27 >= v25) {
          unint64_t v6 = v23;
        }
      }
      unint64_t v19 = v76;
      ++v7;
      id v20 = v6;
      if (v9 == v73)
      {
        swift_bridgeObjectRelease();
        id v32 = self;
        unint64_t v76 = v6;
        id v33 = objc_msgSend((id)v76, sel_dataType);
        id v34 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, v33);
        id v35 = objc_msgSend(v32, sel_dataTypeWithNumber_, v34);

        id v36 = v71;
        if (v35)
        {
          sub_241A313AC(0, (unint64_t *)&qword_26B038440);
          uint64_t v37 = v36;
          id v38 = v35;
          char v39 = sub_241CDBB60();

          if (v39)
          {
            id v40 = v38;
            char v41 = sub_241CDB440();

            if (v41)
            {

              return v6;
            }
          }
        }
        os_log_type_t v42 = v72;
        sub_241CDA0F0();
        id v43 = v35;
        uint64_t v44 = v36;
        id v45 = v43;
        uint64_t v46 = v44;
        id v47 = v45;
        id v48 = sub_241CDA190();
        int v49 = sub_241CDB650();
        if (os_log_type_enabled(v48, (os_log_type_t)v49))
        {
          LODWORD(v68) = v49;
          uint64_t v71 = v48;
          uint64_t v50 = swift_slowAlloc();
          uint64_t v74 = swift_slowAlloc();
          uint64_t v78 = v74;
          *(_DWORD *)uint64_t v50 = 136446978;
          uint64_t v77 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CEBB40, &v78);
          sub_241CDBBF0();
          *(_WORD *)(v50 + 12) = 2080;
          uint64_t v77 = (uint64_t)v35;
          sub_241A765CC();
          uint64_t v75 = (uint64_t)v47;
          id v51 = v47;
          uint64_t v52 = sub_241CDB120();
          uint64_t v77 = sub_241A33FE4(v52, v53, &v78);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          *(_WORD *)(v50 + 22) = 2080;
          uint64_t v73 = (char *)(v50 + 24);
          unint64_t v54 = v46;
          id v55 = [v54 description];
          uint64_t v56 = sub_241CDB0D0();
          unint64_t v58 = v57;

          uint64_t v77 = sub_241A33FE4(v56, v58, &v78);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          *(_WORD *)(v50 + 32) = 2080;
          if (v35) {
            char v59 = sub_241CDB440() & 1;
          }
          else {
            char v59 = 2;
          }
          uint64_t v61 = v69;
          uint64_t v60 = v70;
          uint64_t v62 = v71;
          os_log_type_t v63 = v68;
          LOBYTE(v77) = v59;
          sub_241A76634(0, &qword_268D42458, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
          uint64_t v64 = sub_241CDB120();
          uint64_t v77 = sub_241A33FE4(v64, v65, &v78);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241A23000, v62, v63, "%{public}s Unexpected data type %s. Expected %s to conform to alert event type: %s", (uint8_t *)v50, 0x2Au);
          uint64_t v66 = v74;
          swift_arrayDestroy();
          MEMORY[0x245637F20](v66, -1, -1);
          MEMORY[0x245637F20](v50, -1, -1);

          (*(void (**)(char *, void *))(v61 + 8))(v72, v60);
          id v47 = (id)v75;
        }
        else
        {

          (*(void (**)(char *, void *))(v69 + 8))(v42, v70);
        }
        unint64_t v6 = (void *)type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
        sub_241A728C4(&qword_268D42448, (void (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

        id v20 = (id)v76;
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return 0;
}

void sub_241A7474C()
{
  if (!qword_268D42390)
  {
    sub_241CD7AB0();
    sub_241A72428(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D42390);
    }
  }
}

uint64_t sub_241A747C8(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 8);
  id v3 = *(void **)(a1 + 16);
  unint64_t v4 = *(void **)(a1 + 24);
  uint64_t v5 = *(void **)(a1 + 32);
  unint64_t v6 = *(void **)(a1 + 80);
  id v7 = *(id *)a1;
  id v8 = v2;
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v12 = v6;
  return a1;
}

uint64_t sub_241A74850(uint64_t a1)
{
  unint64_t v2 = *(void **)a1;
  id v3 = *(void **)(a1 + 8);
  unint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 24);
  unint64_t v6 = *(void **)(a1 + 32);

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return a1;
}

uint64_t sub_241A748D8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241A74910(uint64_t a1)
{
  return sub_241A6F508(a1, *(void **)(v1 + 16));
}

uint64_t sub_241A74918(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241A74980()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_241A74A00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_241A6F620();
  *a1 = result;
  return result;
}

uint64_t sub_241A74A34()
{
  uint64_t v1 = sub_241CD6D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 95) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, v7 + 8, v5);
}

uint64_t sub_241A74B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD6D00() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + 24);
  id v9 = *(void **)(v2 + ((v7 + 95) & 0xFFFFFFFFFFFFFFF8));

  return sub_241A6F7A0(a1, v8, v2 + v6, v2 + v7, v9, a2);
}

uint64_t sub_241A74C2C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_241A74CB4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  return sub_241A6FC34(a1, a2, v3 + 16, *(void **)(v3 + 104), (char **)(v3 + 112), a3);
}

uint64_t sub_241A74CC4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241A74CFC(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void))(v1 + 16);
  sub_241A72828();
  return v3(a1, *(unsigned __int8 *)(a1 + *(int *)(v4 + 48)));
}

uint64_t sub_241A74D4C()
{
  uint64_t v1 = sub_241CD6D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v6 + 40, v5);
}

uint64_t sub_241A74E58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD6D00() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2[2];
  uint64_t v8 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v10 = v2[5];
  id v11 = (void *)((char *)v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241A70554(a1, v7, v8, v9, v10, (uint64_t)v2 + v6, v11, a2);
}

uint64_t sub_241A74F0C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A74F70(255, a2, a3, MEMORY[0x263EFDEA0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241A74F70(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v8 = sub_241A3DA64();
    unint64_t v9 = a4(a1, a3, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241A74FE0()
{
  if (!qword_268D423C0)
  {
    sub_241A74F70(255, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
    uint64_t v0 = MEMORY[0x263F06F78];
    sub_241A74F70(255, &qword_268D423B8, MEMORY[0x263F06F78], MEMORY[0x263EFDEA0]);
    sub_241A725E0();
    sub_241A74F0C((unint64_t *)&qword_268D423C8, &qword_268D423B8, v0);
    unint64_t v1 = sub_241CDA490();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D423C0);
    }
  }
}

void sub_241A750D8()
{
  if (!qword_268D423D0)
  {
    sub_241A74F70(255, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
    sub_241A29620(255);
    sub_241A725E0();
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D423D0);
    }
  }
}

void sub_241A7517C(uint64_t a1)
{
}

uint64_t sub_241A751B0(uint64_t a1, uint64_t a2)
{
  sub_241A7517C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_241A75214(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241A7527C@<X0>(uint64_t *a1@<X8>)
{
  return sub_241B7C77C(a1);
}

uint64_t sub_241A75298()
{
  uint64_t v1 = (int *)(type metadata accessor for SummaryAlertContentState() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);

  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[7];
  uint64_t v6 = sub_241CD6D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + v3 + v1[8];
  uint64_t v8 = sub_241CD6D70();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241A75410@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for SummaryAlertContentState();

  return sub_241B7C814(a1, a2);
}

uint64_t sub_241A75494()
{
  sub_241A29620(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = sub_241CD75A0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241A755B0@<X0>(uint64_t a1@<X8>)
{
  sub_241A29620(0);
  return sub_241A74918(v1+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), a1, (uint64_t (*)(void))sub_241A29620);
}

uint64_t sub_241A75628()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_241A75650()
{
  uint64_t v1 = sub_241CD78F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 120) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_241A75780(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_241CD78F0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  char v5 = *(unsigned char *)(v1 + 16);
  unint64_t v6 = *(void **)(v1 + 112);
  uint64_t v7 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241A701AC(a1, v5, v1 + 24, v6, v1 + v4, v7);
}

void sub_241A75828()
{
  if (!qword_26B0382F8)
  {
    sub_241A72D34(255);
    sub_241A6853C();
    sub_241A72DEC();
    sub_241A728C4(&qword_26B02EA48, (void (*)(uint64_t))sub_241A6853C);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0382F8);
    }
  }
}

void sub_241A758E4()
{
  if (!qword_268D423F0)
  {
    sub_241A72780(255, &qword_268D423F8, (void (*)(uint64_t))sub_241A759F0);
    sub_241A75A70(255, &qword_26B0382D8, (void (*)(uint64_t))sub_241A75828, (void (*)(void))sub_241A75B08);
    sub_241A76404(&qword_268D42408, (uint64_t)&qword_268D423F8, (uint64_t)sub_241A759F0, (void (*)(uint64_t))sub_241A72780);
    sub_241A75B3C();
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D423F0);
    }
  }
}

void sub_241A759F0()
{
  if (!qword_268D42400)
  {
    sub_241A313AC(255, &qword_268D423E8);
    sub_241CD7C10();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D42400);
    }
  }
}

void sub_241A75A70(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_241A3DA64();
    a4();
    unint64_t v6 = sub_241CDA3B0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_241A75B08()
{
  return sub_241A728C4(&qword_26B0382F0, (void (*)(uint64_t))sub_241A75828);
}

unint64_t sub_241A75B3C()
{
  unint64_t result = qword_26B0382D0;
  if (!qword_26B0382D0)
  {
    sub_241A75A70(255, &qword_26B0382D8, (void (*)(uint64_t))sub_241A75828, (void (*)(void))sub_241A75B08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0382D0);
  }
  return result;
}

void sub_241A75BC4()
{
  if (!qword_268D42410)
  {
    sub_241A75CB0();
    sub_241A758E4();
    sub_241A728C4(&qword_268D42420, (void (*)(uint64_t))sub_241A75CB0);
    sub_241A728C4(&qword_268D42428, (void (*)(uint64_t))sub_241A758E4);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42410);
    }
  }
}

void sub_241A75CB0()
{
  if (!qword_268D42418)
  {
    sub_241A74F70(255, (unint64_t *)&qword_26B0327C0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDCF0]);
    sub_241A313AC(255, &qword_268D423E8);
    sub_241A725E0();
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42418);
    }
  }
}

unint64_t sub_241A75D64()
{
  unint64_t result = qword_268D42430;
  if (!qword_268D42430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42430);
  }
  return result;
}

uint64_t sub_241A75DB8()
{
  uint64_t v1 = sub_241CD6D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 104) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v6 + 16, v5);
}

uint64_t sub_241A75EE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_241CD6D00() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + v5);
  uint64_t v7 = *(void *)(v1 + v5 + 8);

  return sub_241B96920(v1 + 16, v1 + v4, v6, v7, a1);
}

uint64_t sub_241A75F98()
{
  uint64_t v1 = sub_241CD78F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 144) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_241A760BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_241CD78F0() - 8);
  uint64_t v4 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (void *)v1[17];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_241B96CDC(v4, v5, v6, v7, (uint64_t)(v1 + 6), v8, v9, a1);
}

uint64_t sub_241A7614C()
{
  sub_241A31190(v0 + 16);

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_241A76184@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_241B98768(a1, a2, (void *)(v3 + 16), a3);
}

uint64_t sub_241A7618C(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  sub_241A759F0();
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_241A761E8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_241A761F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = *(unsigned char *)(v2 + 16);
  sub_241A72828();
  uint64_t v7 = *(int *)(v6 + 48);
  uint64_t result = sub_241A74918(a1, a2, (uint64_t (*)(void))sub_241A727F4);
  *(unsigned char *)(a2 + v7) = v5;
  return result;
}

uint64_t sub_241A76258(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_241A762B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_241CDA470();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_241A76328()
{
  if (!qword_26B0382E0)
  {
    sub_241A72780(255, &qword_26B038330, sub_241A72DB8);
    sub_241A72D34(255);
    sub_241A76404(&qword_26B02E9E8, (uint64_t)&qword_26B038330, (uint64_t)sub_241A72DB8, (void (*)(uint64_t))sub_241A72780);
    sub_241A72DEC();
    unint64_t v0 = sub_241CDA430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0382E0);
    }
  }
}

uint64_t sub_241A76404(unint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a4(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A76458@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_241A7135C(*a1, *(void **)(v2 + 16), 0xD00000000000002DLL, 0x8000000241CEBB40);
  *a2 = result;
  return result;
}

uint64_t sub_241A764A4(uint64_t a1)
{
  return sub_241A78494(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_241A717F0);
}

unint64_t sub_241A764BC()
{
  unint64_t result = qword_26B036A10;
  if (!qword_26B036A10)
  {
    sub_241A762B8(255, &qword_26B0382E8, sub_241A72D34, (void (*)(void))sub_241A72DEC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B036A10);
  }
  return result;
}

unint64_t sub_241A76544()
{
  unint64_t result = qword_26B036A38;
  if (!qword_26B036A38)
  {
    sub_241A29514(255, &qword_26B038358, (uint64_t (*)(uint64_t))sub_241A72DB8, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B036A38);
  }
  return result;
}

void sub_241A765CC()
{
  if (!qword_268D42450)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B038440);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42450);
    }
  }
}

void sub_241A76634(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

id sub_241A76680(void *a1)
{
  sub_241A72428(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = (void *)sub_241CD7AB0();
  uint64_t v6 = *(v5 - 1);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD7A80();
  sub_241A313AC(0, &qword_26B030428);
  sub_241A54FDC(&qword_26B030420, &qword_26B030428);
  sub_241CD8A10();
  char v9 = sub_241CD7A70();
  sub_241A76258((uint64_t)v4, (uint64_t (*)(void))sub_241A72428);
  uint64_t v10 = *(void (**)(char *, void *))(v6 + 8);
  v10(v8, v5);
  if ((v9 & 1) == 0)
  {
    type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_241A728C4(&qword_268D42448, (void (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
    swift_allocError();
    double v26 = v25;
    sub_241A7474C();
    *double v26 = sub_241CDC270();
    v26[1] = v27;
    sub_241CD7A80();
    id v24 = a1;
    sub_241CD8A10();
LABEL_16:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v24;
  }
  if (!objc_msgSend(a1, sel_hasSixMonthData)
    || (id v11 = objc_msgSend(a1, sel_sixMonthData)) == 0)
  {
    id v24 = (id)type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_241A728C4(&qword_268D42448, (void (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
    swift_allocError();
    *uint64_t v28 = 0xD000000000000024;
    v28[1] = 0x8000000241CDDAA0;
    goto LABEL_16;
  }
  id v12 = v11;
  if (!objc_msgSend(v11, sel_hasType) || objc_msgSend(v12, sel_type) != 11)
  {
    id v24 = (id)type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_241A728C4(&qword_268D42448, (void (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
    swift_allocError();
    unint64_t v31 = 0xD000000000000025;
    id v32 = "Query data type is not a notification";
LABEL_19:
    *uint64_t v30 = v31;
    v30[1] = (unint64_t)(v32 - 32) | 0x8000000000000000;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    return v24;
  }
  if (!objc_msgSend(v12, sel_hasQueryDataObject)) {
    goto LABEL_20;
  }
  id v13 = objc_msgSend(v12, sel_queryDataObject);
  if (v13)
  {
    uint64_t v14 = sub_241CD6AE0();
    uint64_t v37 = v5;
    uint64_t v15 = v14;
    unint64_t v17 = v16;

    id v13 = (id)sub_241CD6AD0();
    uint64_t v18 = v15;
    unint64_t v5 = v37;
    sub_241A37374(v18, v17);
  }
  unint64_t v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46518]), sel_initWithData_, v13);

  if (!v19)
  {
LABEL_20:
    id v24 = (id)type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_241A728C4(&qword_268D42448, (void (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
    swift_allocError();
    unint64_t v31 = 0xD00000000000002ALL;
    id v32 = "Can not access six month query data object";
    goto LABEL_19;
  }
  uint64_t v20 = sub_241A313AC(0, &qword_268D42460);
  sub_241CDB400();
  v36[1] = v20;
  uint64_t v37 = v19;
  sub_241CD8A10();
  LOBYTE(v20) = sub_241CD7A70();
  sub_241A76258((uint64_t)v4, (uint64_t (*)(void))sub_241A72428);
  v10(v8, v5);
  if (v20)
  {
    id v21 = v37;
    id v22 = objc_msgSend(v37, sel_samples);
    if (v22
      && (id v23 = v22,
          id v38 = 0,
          sub_241A313AC(0, &qword_26B030430),
          sub_241CDB2B0(),
          v23,
          (id v24 = v38) != 0))
    {
    }
    else
    {
      swift_bridgeObjectRelease();

      return (id)MEMORY[0x263F8EE78];
    }
  }
  else
  {
    type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_241A728C4(&qword_268D42448, (void (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
    swift_allocError();
    id v34 = v33;
    sub_241A7474C();
    *id v34 = sub_241CDC270();
    v34[1] = v35;
    sub_241CDB400();
    id v24 = v37;
    sub_241CD8A10();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v24;
}

void *sub_241A76D6C(void *a1)
{
  sub_241A72428(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7AB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD7A80();
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  sub_241A54FDC(&qword_26B0303D8, (unint64_t *)&qword_26B0303E0);
  sub_241CD8A10();
  char v9 = sub_241CD7A70();
  sub_241A76258((uint64_t)v4, (uint64_t (*)(void))sub_241A72428);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    if (objc_msgSend(a1, sel_hasContentData))
    {
      id v10 = objc_msgSend(a1, sel_contentData);
      if (v10)
      {
        id v11 = v10;
        uint64_t v12 = sub_241CD6AE0();
        unint64_t v14 = v13;

        if (objc_msgSend(a1, sel_hasKindRawValue)
          && (id v15 = objc_msgSend(a1, sel_kindRawValue)) != 0)
        {
          unint64_t v16 = v15;
          sub_241CDB0D0();

          switch(_sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0())
          {
            case 1u:
            case 2u:
            case 3u:
              char v22 = sub_241CDC100();
              swift_bridgeObjectRelease();
              if ((v22 & 1) == 0) {
                goto LABEL_15;
              }
              break;
            case 4u:
              goto LABEL_15;
            default:
              swift_bridgeObjectRelease();
              break;
          }
          id v23 = objc_allocWithZone(MEMORY[0x263F46498]);
          sub_241A3731C(v12, v14);
          id v24 = (void *)sub_241CD6AD0();
          sub_241A37374(v12, v14);
          id v25 = objc_msgSend(v23, sel_initWithData_, v24);

          if (v25)
          {
            a1 = sub_241A76680(v25);

            sub_241A37374(v12, v14);
            return a1;
          }
          a1 = (void *)type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
          sub_241A728C4(&qword_268D42448, (void (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
          swift_allocError();
          unint64_t v27 = 0xD00000000000002ALL;
          uint64_t v28 = "Can not create HKCodableChartSharableModel";
        }
        else
        {
LABEL_15:
          a1 = (void *)type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
          sub_241A728C4(&qword_268D42448, (void (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
          swift_allocError();
          unint64_t v27 = 0xD000000000000024;
          uint64_t v28 = "Summary data is not chart model kind";
        }
        *double v26 = v27;
        v26[1] = (unint64_t)(v28 - 32) | 0x8000000000000000;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_241A37374(v12, v14);
        return a1;
      }
    }
    type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_241A728C4(&qword_268D42448, (void (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
    swift_allocError();
    *uint64_t v20 = 0xD00000000000001BLL;
    v20[1] = 0x8000000241CDDA20;
  }
  else
  {
    type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_241A728C4(&qword_268D42448, (void (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
    swift_allocError();
    uint64_t v18 = v17;
    sub_241A7474C();
    *uint64_t v18 = sub_241CDC270();
    v18[1] = v19;
    sub_241CD7A80();
    sub_241CD8A10();
  }
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return a1;
}

uint64_t *sub_241A77380(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      sub_241A7474C();
      uint64_t v12 = v11;
      uint64_t v13 = *(int *)(v11 + 48);
      id v23 = (char *)a1 + v13;
      unint64_t v14 = (char *)a2 + v13;
      uint64_t v15 = sub_241CD7AB0();
      uint64_t v16 = *(void *)(v15 - 8);
      unint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
      swift_bridgeObjectRetain();
      v17(v23, v14, v15);
      uint64_t v18 = *(int *)(v12 + 64);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v20, 1, v15))
      {
        sub_241A72428(0);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        v17(v19, v20, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
      }
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_241A77598(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    sub_241A7474C();
    uint64_t v4 = v3;
    uint64_t v5 = a1 + *(int *)(v3 + 48);
    uint64_t v6 = sub_241CD7AB0();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v9(v5, v6);
    uint64_t v8 = a1 + *(int *)(v4 + 64);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6);
    if (!result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v6);
    }
  }
  else if (!result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_241A776E4(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    sub_241A7474C();
    uint64_t v10 = v9;
    uint64_t v11 = *(int *)(v9 + 48);
    uint64_t v21 = (char *)a1 + v11;
    uint64_t v12 = (char *)a2 + v11;
    uint64_t v13 = sub_241CD7AB0();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    v15(v21, v12, v13);
    uint64_t v16 = *(int *)(v10 + 64);
    unint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13))
    {
      sub_241A72428(0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v15(v17, v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_241A778B8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_241A76258((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_241A7474C();
      uint64_t v8 = v7;
      uint64_t v9 = *(int *)(v7 + 48);
      uint64_t v19 = (char *)a1 + v9;
      uint64_t v10 = (char *)a2 + v9;
      uint64_t v11 = sub_241CD7AB0();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      swift_bridgeObjectRetain();
      v13(v19, v10, v11);
      uint64_t v14 = *(int *)(v8 + 64);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
      {
        sub_241A72428(0);
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        v13(v15, v16, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_241A77AC0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_241A7474C();
    uint64_t v7 = v6;
    uint64_t v8 = *(int *)(v6 + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241CD7AB0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v13(v9, v10, v11);
    uint64_t v14 = *(int *)(v7 + 64);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
    {
      sub_241A72428(0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_241A77C60(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_241A76258((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_241A7474C();
      uint64_t v7 = v6;
      uint64_t v8 = *(int *)(v6 + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_241CD7AB0();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v13(v9, v10, v11);
      uint64_t v14 = *(int *)(v7 + 64);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
      {
        sub_241A72428(0);
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        v13(v15, v16, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s9Summaries25SummaryModelConfigurationC4KindOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t _s9Summaries25SummaryModelConfigurationC4KindOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_241A77E78()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_241A77E88()
{
  v2[4] = &unk_241CEBBA0;
  sub_241CD7AB0();
  if (v0 <= 0x3F)
  {
    sub_241A72428(319);
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      v2[5] = v2;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void destroy for AlertFeedItemWithNotificationSchedulerFactory(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 80);
}

uint64_t initializeWithCopy for AlertFeedItemWithNotificationSchedulerFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void **)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  id v10 = v3;
  id v11 = v4;
  id v12 = v5;
  id v13 = v6;
  id v14 = v7;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v15 = v9;
  return a1;
}

uint64_t assignWithCopy for AlertFeedItemWithNotificationSchedulerFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 24);
  id v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  uint64_t v16 = *(void **)(a2 + 32);
  uint64_t v17 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v16;
  id v18 = v16;

  uint64_t v19 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = v19;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  uint64_t v20 = *(void **)(a2 + 80);
  uint64_t v21 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v20;
  id v22 = v20;

  return a1;
}

__n128 initializeWithTake for AlertFeedItemWithNotificationSchedulerFactory(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AlertFeedItemWithNotificationSchedulerFactory(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  long long v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  uint64_t v6 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  uint64_t v8 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  return a1;
}

uint64_t getEnumTagSinglePayload for AlertFeedItemWithNotificationSchedulerFactory(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AlertFeedItemWithNotificationSchedulerFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory()
{
  return &type metadata for AlertFeedItemWithNotificationSchedulerFactory;
}

uint64_t sub_241A78304@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_241A7135C(*a1, *(void **)(v2 + 16), 0xD000000000000034, 0x8000000241CDDB30);
  *a2 = result;
  return result;
}

uint64_t sub_241A78350()
{
  sub_241A72DB8(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  swift_bridgeObjectRelease();
  uint64_t v5 = sub_241CD6D00();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241A7847C(uint64_t a1)
{
  return sub_241A78494(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_241A7180C);
}

uint64_t sub_241A78494(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, char *))
{
  sub_241A72DB8(0);
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (char *)v2
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));

  return a2(a1, v5, v6, v7, v8);
}

uint64_t sub_241A78530@<X0>(uint64_t a1@<X8>)
{
  sub_241A78694();
  uint64_t v2 = (void *)sub_241CDB6D0();
  sub_241CD7750();
  uint64_t v3 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_241CDBC50();

    swift_unknownObjectRelease();
  }
  else
  {

    memset(v9, 0, sizeof(v9));
  }
  sub_241A786D4((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    uint64_t v5 = sub_241CD6D00();
    int v6 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_241A78794((uint64_t)v10);
    uint64_t v8 = sub_241CD6D00();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

unint64_t sub_241A78694()
{
  unint64_t result = qword_26B0303A0;
  if (!qword_26B0303A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0303A0);
  }
  return result;
}

uint64_t sub_241A786D4(uint64_t a1, uint64_t a2)
{
  sub_241A78738();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241A78738()
{
  if (!qword_26B035010)
  {
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035010);
    }
  }
}

uint64_t sub_241A78794(uint64_t a1)
{
  sub_241A78738();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AFibBurdenAdditionalInputSignalsProvider()
{
  return &type metadata for AFibBurdenAdditionalInputSignalsProvider;
}

uint64_t sub_241A78800()
{
  uint64_t v0 = sub_241CD96A0();
  MEMORY[0x270FA5388](v0 - 8);
  sub_241A78918();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_241CEB720;
  uint64_t v2 = sub_241CD9680();
  *(void *)(v1 + 56) = v2;
  unint64_t v3 = sub_241A789C8();
  *(void *)(v1 + 64) = v3;
  sub_241A25BC8((uint64_t *)(v1 + 32));
  sub_241CD9690();
  sub_241CD9670();
  sub_241CD96C0();
  *(void *)(v1 + 96) = v2;
  *(void *)(v1 + 104) = v3;
  sub_241A25BC8((uint64_t *)(v1 + 72));
  sub_241CD96B0();
  return v1;
}

void sub_241A78918()
{
  if (!qword_26B036980)
  {
    sub_241A78970();
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B036980);
    }
  }
}

unint64_t sub_241A78970()
{
  unint64_t result = qword_26B035648;
  if (!qword_26B035648)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B035648);
  }
  return result;
}

unint64_t sub_241A789C8()
{
  unint64_t result = qword_26B035600;
  if (!qword_26B035600)
  {
    sub_241CD9680();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035600);
  }
  return result;
}

ValueMetadata *type metadata accessor for SummariesFirstRestoreUtilities()
{
  return &type metadata for SummariesFirstRestoreUtilities;
}

uint64_t sub_241A78A30@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_241CDB9C0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_241A78A68(unsigned __int8 *a1)
{
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v6 = *a1;
  sub_241CDA0F0();
  uint64_t v7 = sub_241CDA190();
  os_log_type_t v8 = sub_241CDB670();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    id v14 = &type metadata for SummariesFirstRestoreUtilities;
    uint64_t v15 = v10;
    sub_241A79104();
    uint64_t v11 = sub_241CDB120();
    id v14 = (ValueMetadata *)sub_241A33FE4(v11, v12, &v15);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 1024;
    LODWORD(v14) = v6;
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v7, v8, "[%s]: Received new firstRestoreConcluded value: %{BOOL}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v10, -1, -1);
    MEMORY[0x245637F20](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_241A78C70(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_241A30954(a1, a2, a3);
}

uint64_t sub_241A78C88(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v28 = sub_241CD7020();
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v28);
  unint64_t v27 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v29 = MEMORY[0x263F8EE78];
  uint64_t v26 = *(void *)(a3 + 16);
  if (v26)
  {
    unint64_t v14 = 0;
    uint64_t v21 = a3;
    id v22 = (void (**)(char *, uint64_t))(v7 + 8);
    id v24 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v25 = v7 + 16;
    v20[0] = a1;
    v20[1] = a2;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v13 = *(void *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a3 + v15 + v13 * v14, v28);
      char v16 = a1(v12);
      if (v3)
      {
        (*v22)(v12, v28);
        swift_bridgeObjectRelease();
        swift_release();
        return v13;
      }
      if (v16)
      {
        id v23 = *v24;
        v23(v27, v12, v28);
        uint64_t v17 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_241A5228C(0, *(void *)(v17 + 16) + 1, 1);
          uint64_t v17 = v29;
        }
        unint64_t v19 = *(void *)(v17 + 16);
        unint64_t v18 = *(void *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_241A5228C(v18 > 1, v19 + 1, 1);
          uint64_t v17 = v29;
        }
        *(void *)(v17 + 16) = v19 + 1;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v23)(v17 + v15 + v19 * v13, v27, v28);
        uint64_t v29 = v17;
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v22)(v12, v28);
      }
      if (v26 == ++v14)
      {
        uint64_t v13 = v29;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_241A78F30()
{
  return swift_bridgeObjectRetain();
}

void sub_241A78F38()
{
  if (!qword_26B035000)
  {
    sub_241A313AC(255, &qword_26B030858);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDC210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035000);
    }
  }
}

void sub_241A78FB8()
{
  if (!qword_26B032608)
  {
    sub_241A351E4();
    sub_241A36B98(255, &qword_26B032088, MEMORY[0x263F43558]);
    sub_241A33180(&qword_26B0322D8, (void (*)(uint64_t))sub_241A351E4);
    sub_241A79090();
    unint64_t v0 = sub_241CDA4D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032608);
    }
  }
}

unint64_t sub_241A79090()
{
  unint64_t result = qword_26B032080;
  if (!qword_26B032080)
  {
    sub_241A36B98(255, &qword_26B032088, MEMORY[0x263F43558]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032080);
  }
  return result;
}

unint64_t sub_241A79104()
{
  unint64_t result = qword_26B0328C0;
  if (!qword_26B0328C0)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0328C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DiskSummaryModelConfigurationProvider()
{
  return &type metadata for DiskSummaryModelConfigurationProvider;
}

uint64_t sub_241A79150()
{
  return sub_241A33180(&qword_26B0330B0, (void (*)(uint64_t))type metadata accessor for SummaryModelConfiguration);
}

unint64_t sub_241A79198(uint64_t a1)
{
  unint64_t result = sub_241A791C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_241A791C0()
{
  unint64_t result = qword_26B033F70;
  if (!qword_26B033F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033F70);
  }
  return result;
}

id sub_241A79214(void *a1, void *a2)
{
  v26[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_241CD6D00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[0] = 0;
  id v8 = objc_msgSend(a2, sel_biologicalSexWithError_, v26);
  if (v8
    && (uint64_t v9 = v8,
        id v10 = v26[0],
        id v11 = objc_msgSend(v9, sel_biologicalSex),
        v9,
        v26[0] = 0,
        (id v12 = objc_msgSend(a2, sel_dateOfBirthComponentsWithError_, v26)) != 0))
  {
    uint64_t v13 = v12;
    id v14 = v26[0];
    id v15 = objc_msgSend(a1, sel_endDate);
    sub_241CD6CB0();

    char v16 = (void *)sub_241CD6C60();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    id v17 = objc_msgSend(v13, sel_hk_ageWithCurrentDate_, v16);

    unint64_t v18 = self;
    id v19 = objc_msgSend(a1, sel_quantity);
    objc_msgSend(v19, sel__value);
    double v21 = v20;

    id v22 = objc_msgSend(v18, sel_cardioFitnessLevelForVO2Max_biologicalSex_age_, v11, v17, v21);
    id v23 = objc_msgSend(v18, sel_cardioFitnessDataForBiologicalSex_age_, v11, v17);
    if (v23)
    {
      id v24 = v23;
      sub_241A313AC(0, (unint64_t *)&qword_26B0304E8);
      sub_241A313AC(0, &qword_26B0303F0);
      sub_241A7A5B0();
      sub_241CDAF90();
    }
    else
    {
      sub_241A7A55C();
      swift_allocError();
      swift_willThrow();
    }
  }
  else
  {
    id v22 = v26[0];
    sub_241CD6A40();

    swift_willThrow();
  }
  return v22;
}

uint64_t sub_241A79538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_241CD9ED0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  id v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  id v17 = (char *)&v33 - v16;
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v33 - v18;
  sub_241A7A67C(a2, (uint64_t)&v41, &qword_26B036370, &qword_26B036368);
  sub_241A7A618(a1, (uint64_t)v19);
  if (v42)
  {
    swift_retain();
    sub_241A3F384((uint64_t)v19);
    sub_241A5598C(&v41, (uint64_t)&v43);
  }
  else
  {
    uint64_t v33 = *((void *)v19 + 2);
    uint64_t v35 = a2;
    uint64_t v34 = v7;
    uint64_t v20 = *MEMORY[0x263F09730];
    uint64_t v21 = a1;
    id v22 = v14;
    uint64_t v23 = a3;
    id v24 = v10;
    uint64_t v25 = v8;
    id v26 = objc_allocWithZone(MEMORY[0x263F0A3D0]);
    swift_retain();
    unint64_t v27 = v26;
    uint64_t v8 = v25;
    id v10 = v24;
    a3 = v23;
    id v14 = v22;
    a1 = v21;
    uint64_t v28 = v20;
    uint64_t v7 = v34;
    a2 = v35;
    id v29 = objc_msgSend(v27, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v28, v33, 0);
    uint64_t v44 = &type metadata for HealthStoreCardioFitnessAvailabilityProvider;
    id v45 = &off_26F5C11D0;
    *(void *)&long long v43 = v29;
    sub_241A3F384((uint64_t)v19);
    sub_241A68690((uint64_t)&v41, &qword_26B036370, &qword_26B036368);
  }
  sub_241A5598C(&v43, v3 + qword_26B0366A0);
  sub_241A7A67C(a3, (uint64_t)&v36, &qword_26B035C50, &qword_26B035C48);
  sub_241A7A618(a1, (uint64_t)v17);
  if (v37)
  {
    sub_241A3F384((uint64_t)v17);
    sub_241A5598C(&v36, (uint64_t)&v38);
  }
  else
  {
    uint64_t v30 = (void *)*((void *)v17 + 2);
    char v39 = &type metadata for HealthStoreCardioFitnessMetadataProvider;
    id v40 = &off_26F5C11C0;
    *(void *)&long long v38 = v30;
    id v31 = v30;
    sub_241A3F384((uint64_t)v17);
    sub_241A68690((uint64_t)&v36, &qword_26B035C50, &qword_26B035C48);
  }
  sub_241A5598C(&v38, v3 + qword_26B036698);
  swift_release();
  sub_241A7A618(a1, (uint64_t)v14);
  sub_241CD9EC0();
  sub_241A68690(a3, &qword_26B035C50, &qword_26B035C48);
  sub_241A68690(a2, &qword_26B036370, &qword_26B036368);
  sub_241A3F384(a1);
  sub_241A7A6EC((uint64_t)v14, v3 + qword_26B041200);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v3 + qword_26B0411F8, v10, v7);
  return v3;
}

void sub_241A79928(void *a1, void *a2, void (*a3)(id, void), uint64_t a4)
{
  uint64_t v58 = a4;
  id v51 = a2;
  unint64_t v54 = a1;
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_241CD6D00();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A5D1DC();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v50 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD9970();
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v53 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  int v49 = (char *)&v49 - v16;
  uint64_t v17 = sub_241CD9280();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A311E0((void *)(v4 + qword_26B0366A0), *(void *)(v4 + qword_26B0366A0 + 24));
  sub_241A313AC(0, &qword_26B031F18);
  sub_241CD92F0();
  id v55 = a3;
  uint64_t v21 = (void *)sub_241CD9290();
  LODWORD(a3) = objc_msgSend(v21, sel_areAllRequirementsSatisfied);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (a3)
  {
    id v22 = sub_241A7A134(v54);
    uint64_t v23 = v49;
    sub_241CD9A90();
    uint64_t v25 = v52;
    uint64_t v24 = v53;
    (*(void (**)(char *, void, uint64_t))(v52 + 104))(v23, *MEMORY[0x263F46C48], v53);
    id v26 = v51;
    id v27 = objc_msgSend(v22, sel_data);
    if (v27)
    {
      uint64_t v28 = v27;
      sub_241A313AC(0, &qword_26B030440);
      uint64_t v29 = sub_241CD6AE0();
      unint64_t v31 = v30;

      uint64_t v32 = (uint64_t)v50;
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v50, v23, v24);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v32, 0, 1, v24);
      uint64_t v61 = 0;
      long long v59 = 0u;
      long long v60 = 0u;
      id v33 = sub_241A54648(v29, v31, 7, v32, (uint64_t)v26, 0, (uint64_t)&v59);

      sub_241A37374(v29, v31);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
      id v34 = v33;
      v55(v33, 0);

      return;
    }
    goto LABEL_8;
  }
  sub_241A313AC(0, &qword_26B034E30);
  uint64_t v35 = v54;
  id v36 = objc_msgSend(v54, sel_quantity);
  sub_241AF30A4(v35);
  id v37 = HKCodableSummaryQuantityValue.init(quantity:date:)(v36, (uint64_t)v9);
  sub_241CD9EC0();
  uint64_t v39 = v52;
  uint64_t v38 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v15, *MEMORY[0x263F46C78], v53);
  id v40 = v51;
  id v41 = objc_msgSend(v37, sel_data);
  if (!v41)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  uint64_t v42 = v41;
  sub_241A313AC(0, &qword_26B030440);
  uint64_t v43 = sub_241CD6AE0();
  unint64_t v45 = v44;

  uint64_t v46 = (uint64_t)v50;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v50, v15, v38);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v46, 0, 1, v38);
  uint64_t v61 = 0;
  long long v59 = 0u;
  long long v60 = 0u;
  id v47 = sub_241A54648(v43, v45, 14, v46, (uint64_t)v40, 0, (uint64_t)&v59);

  sub_241A37374(v43, v45);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v38);
  id v48 = v47;
  v55(v47, 0);
}

char *sub_241A7A134(void *a1)
{
  uint64_t v4 = sub_241CD6D00();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CDA090();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void **)sub_241A311E0(&v1[qword_26B036698], *(void *)&v1[qword_26B036698 + 24]);
  id v12 = sub_241A79214(a1, *v11);
  if (!v2)
  {
    uint64_t v13 = (uint64_t)v12;
    unint64_t v14 = swift_bridgeObjectRetain();
    unint64_t v15 = sub_241A5A1FC(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_241A7A804(v15, v13);
    uint64_t v22 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(a1, sel_quantity);
    objc_msgSend(v16, sel__value);

    sub_241CDA020();
    v21[1] = sub_241A313AC(0, &qword_26B030490);
    id v17 = objc_msgSend(a1, sel_quantity);
    id v18 = objc_msgSend(a1, sel_endDate);
    sub_241CD6CB0();

    id v19 = sub_241A42E90();
    uint64_t v1 = (char *)HKCodableSummaryCardioFitnessValue.init(quantity:date:cardioFitnessLevel:dataConfiguration:)(v17, (uint64_t)v6, v22, v19);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v1;
}

uint64_t sub_241A7A3B4()
{
  sub_241A31190(v0 + qword_26B0366A0);
  uint64_t v1 = v0 + qword_26B036698;

  return sub_241A31190(v1);
}

uint64_t sub_241A7A3F4()
{
  sub_241A3F384(v0 + qword_26B041200);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_241A31190(v0 + qword_26B0366A0);
  sub_241A31190(v0 + qword_26B036698);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CardioFitnessMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B036780;
  if (!qword_26B036780) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A7A518()
{
  return swift_initClassMetadata2();
}

unint64_t sub_241A7A55C()
{
  unint64_t result = qword_268D42478;
  if (!qword_268D42478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42478);
  }
  return result;
}

unint64_t sub_241A7A5B0()
{
  unint64_t result = qword_26B0304F0[0];
  if (!qword_26B0304F0[0])
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B0304E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B0304F0);
  }
  return result;
}

uint64_t sub_241A7A618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241A7A67C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_241A686EC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241A7A6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241A7A750()
{
  return 1;
}

uint64_t sub_241A7A758()
{
  return sub_241CDC200();
}

uint64_t sub_241A7A79C()
{
  return sub_241CDC1E0();
}

uint64_t sub_241A7A7C4()
{
  return sub_241CDC200();
}

uint64_t sub_241A7A804(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v21 = a2;
  uint64_t v20 = sub_241CDA080();
  uint64_t v5 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    if (!v8) {
      return v9;
    }
    uint64_t v22 = MEMORY[0x263F8EE78];
    uint64_t result = sub_241A52108(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v11 = 0;
    id v18 = v3;
    unint64_t v19 = a1 & 0xC000000000000001;
    uint64_t v9 = v22;
    while (v8 != v11)
    {
      if (v19) {
        id v12 = (id)MEMORY[0x245637160](v11, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v11 + 32);
      }
      uint64_t v3 = v12;
      objc_msgSend(v12, sel_vo2MaxLowerBound, v18);
      double v14 = v13;
      objc_msgSend(v3, sel_vo2MaxUpperBound);
      if (v14 > v15) {
        goto LABEL_16;
      }
      objc_msgSend(v3, sel_cardioFitnessLevel);
      sub_241CDA050();

      uint64_t v22 = v9;
      unint64_t v17 = *(void *)(v9 + 16);
      unint64_t v16 = *(void *)(v9 + 24);
      uint64_t v3 = (void *)(v17 + 1);
      if (v17 >= v16 >> 1)
      {
        sub_241A52108(v16 > 1, v17 + 1, 1);
        uint64_t v9 = v22;
      }
      ++v11;
      *(void *)(v9 + 16) = v3;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v17, v7, v20);
      if (v8 == v11) {
        return v9;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for HealthStoreCardioFitnessMetadataProvider()
{
  return &type metadata for HealthStoreCardioFitnessMetadataProvider;
}

ValueMetadata *type metadata accessor for HealthStoreCardioFitnessAvailabilityProvider()
{
  return &type metadata for HealthStoreCardioFitnessAvailabilityProvider;
}

uint64_t getEnumTagSinglePayload for HealthStoreCardioFitnessMetadataProvider.CardioFitnessFetchError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for HealthStoreCardioFitnessMetadataProvider.CardioFitnessFetchError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x241A7AB78);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_241A7ABA0()
{
  return 0;
}

ValueMetadata *type metadata accessor for HealthStoreCardioFitnessMetadataProvider.CardioFitnessFetchError()
{
  return &type metadata for HealthStoreCardioFitnessMetadataProvider.CardioFitnessFetchError;
}

unint64_t sub_241A7ABBC()
{
  unint64_t result = qword_268D42480;
  if (!qword_268D42480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42480);
  }
  return result;
}

uint64_t sub_241A7AC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_241A7AC18()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CDBBD0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_241A7ACF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  int v10 = *(_DWORD *)(v8 + 80);
  uint64_t v11 = v10;
  uint64_t v12 = v6 + v10;
  uint64_t v13 = (v6 + v11) & ~v11;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v14 = *(void *)(v8 + 64);
  }
  else {
    size_t v14 = *(void *)(v8 + 64) + 1;
  }
  unint64_t v15 = ((v14 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v16 = v10 | *(_DWORD *)(v5 + 80) & 0xF8;
  int v17 = (*(_DWORD *)(v5 + 80) | v10) & 0x100000;
  if (v16 > 7 || v17 != 0 || v15 > 0x18)
  {
    uint64_t v20 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v20 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v21 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v22 = (const void *)(((unint64_t)a2 + v12) & v21);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v22, 1, v7))
    {
      memcpy((void *)(((unint64_t)v4 + v12) & v21), v22, v14);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)v4 + v12) & v21, v22, v7);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v9 + 56))(((unint64_t)v4 + v12) & v21, 0, 1, v7);
    }
    *(void *)(((((unint64_t)v4 + v12) & v21) + v14 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v22 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_241A7AEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (v5 + a1 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6)) {
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, v6);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_241A7B008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (void *)((v11 + a1) & ~v10);
  uint64_t v13 = (const void *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v12, v13, v8);
    id v18 = *(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56);
    uint64_t v17 = v9 + 56;
    v18(v12, 0, 1, v8);
    int v14 = *(_DWORD *)(v17 + 28);
    size_t v15 = *(void *)(v17 + 8);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  *(void *)(((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241A7B174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (void *)((v10 + a1) & ~v9);
  uint64_t v12 = (void *)((v10 + a2) & ~v9);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v14 = v13(v11, 1, v7);
  int v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v11, v12, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v11, v12, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v11, v12, v18);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v19 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v8 + 64) + 1;
  }
  *(void *)(((unint64_t)v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241A7B368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (void *)((v11 + a1) & ~v10);
  uint64_t v13 = (const void *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v12, v13, v8);
    size_t v18 = *(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56);
    uint64_t v17 = v9 + 56;
    v18(v12, 0, 1, v8);
    int v14 = *(_DWORD *)(v17 + 28);
    size_t v15 = *(void *)(v17 + 8);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  *(void *)(((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_241A7B4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (void *)((v10 + a1) & ~v9);
  uint64_t v12 = (void *)((v10 + a2) & ~v9);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v14 = v13(v11, 1, v7);
  int v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v11, v12, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_12;
    }
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v11, v12, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
    int v16 = *(_DWORD *)(v8 + 84);
    size_t v17 = *(void *)(v8 + 64);
  }
  if (v16) {
    size_t v18 = v17;
  }
  else {
    size_t v18 = v17 + 1;
  }
  memcpy(v11, v12, v18);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v19 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v8 + 64) + 1;
  }
  *(void *)(((unint64_t)v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v12 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241A7B6BC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  if (v9 <= v6) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = v9;
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)(v4 - 8) + 64) + v11;
  uint64_t v14 = v12 + 7;
  if (v10 < a2)
  {
    unint64_t v15 = ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = a2 - v10 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v15);
        if (!*((unsigned char *)a1 + v15)) {
          break;
        }
        goto LABEL_28;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v15);
        if (*(_WORD *)((char *)a1 + v15)) {
          goto LABEL_28;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x241A7B8ECLL);
      case 4:
        int v19 = *(_DWORD *)((char *)a1 + v15);
        if (!v19) {
          break;
        }
LABEL_28:
        int v20 = v19 - 1;
        if ((v15 & 0xFFFFFFF8) != 0)
        {
          int v20 = 0;
          int v21 = *a1;
        }
        else
        {
          int v21 = 0;
        }
        return v10 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  if (v6 == v10)
  {
    uint64_t v22 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v5 + 48);
    return v22(a1, v6, v4);
  }
  unint64_t v24 = ((unint64_t)a1 + v13) & ~v11;
  if (v9 == v10)
  {
    if (v8 >= 2)
    {
      unsigned int v26 = (*(uint64_t (**)(unint64_t))(v7 + 48))(v24);
      if (v26 >= 2) {
        return v26 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  unint64_t v25 = *(void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
  if (v25 >= 0xFFFFFFFF) {
    LODWORD(v25) = -1;
  }
  return (v25 + 1);
}

void sub_241A7B900(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a4 + 24) - 8);
  int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  if (v9) {
    unsigned int v12 = v9 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v12 <= v7) {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v13 = v12;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  uint64_t v14 = v10 + v11;
  uint64_t v15 = (v10 + v11) & ~v11;
  if (v9) {
    uint64_t v16 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v17 = v16 + 7;
  size_t v18 = ((v17 + v15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v17 + v15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v19 = a3 - v13 + 1;
  }
  else {
    unsigned int v19 = 2;
  }
  if (v19 >= 0x10000) {
    int v20 = 4;
  }
  else {
    int v20 = 2;
  }
  if (v19 < 0x100) {
    int v20 = 1;
  }
  if (v19 >= 2) {
    unsigned int v21 = v20;
  }
  else {
    unsigned int v21 = 0;
  }
  if (v13 < a3) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0;
  }
  if (a2 > v13)
  {
    if (v18) {
      int v23 = 1;
    }
    else {
      int v23 = a2 - v13;
    }
    if (v18)
    {
      int v24 = ~v13 + a2;
      bzero(a1, v18);
      *(_DWORD *)a1 = v24;
    }
    switch(v22)
    {
      case 1:
        a1[v18] = v23;
        return;
      case 2:
        *(_WORD *)&a1[v18] = v23;
        return;
      case 3:
        goto LABEL_56;
      case 4:
        *(_DWORD *)&a1[v18] = v23;
        return;
      default:
        return;
    }
  }
  switch(v22)
  {
    case 1:
      a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 2:
      *(_WORD *)&a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x241A7BB94);
    case 4:
      *(_DWORD *)&a1[v18] = 0;
      goto LABEL_40;
    default:
LABEL_40:
      if (a2)
      {
LABEL_41:
        if (v7 == v13)
        {
          unint64_t v25 = *(void (**)(char *))(v6 + 56);
          v25(a1);
        }
        else
        {
          unint64_t v26 = (unint64_t)&a1[v14] & ~v11;
          if (v12 == v13)
          {
            uint64_t v27 = a2 + 1;
            uint64_t v28 = *(void (**)(unint64_t, uint64_t))(v8 + 56);
            v28(v26, v27);
          }
          else
          {
            if ((a2 & 0x80000000) != 0) {
              uint64_t v29 = a2 ^ 0x80000000;
            }
            else {
              uint64_t v29 = a2 - 1;
            }
            *(void *)((v17 + v26) & 0xFFFFFFFFFFFFFFF8) = v29;
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SnidgetHarnessViewFeedItemGeneratorInputModel()
{
  return sub_241A91234();
}

uint64_t sub_241A7BBD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_241A7BBDC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_241CDBBD0();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for SnidgetFeedItemMetadata(319);
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_241A7BD28(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v53 = a3[2];
  uint64_t v3 = *(void *)(v53 - 8);
  uint64_t v54 = a3[3];
  uint64_t v52 = *(void *)(v54 - 8);
  int v60 = *(_DWORD *)(v52 + 80);
  uint64_t v51 = *(void *)(v3 + 64) + v60;
  uint64_t v48 = v60;
  uint64_t v56 = a3[4];
  uint64_t v4 = *(void *)(v56 - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v55 = v4;
  uint64_t v6 = v5;
  uint64_t v50 = *(void *)(v52 + 64) + v5;
  if (*(_DWORD *)(v4 + 84)) {
    size_t v7 = *(void *)(*(void *)(v56 - 8) + 64);
  }
  else {
    size_t v7 = *(void *)(*(void *)(v56 - 8) + 64) + 1;
  }
  uint64_t v57 = sub_241CD7A10();
  uint64_t v8 = *(void *)(v57 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = sub_241CD6810();
  uint64_t v12 = v3;
  uint64_t v58 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  unint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v9 | v14 | 7;
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v16 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v59 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v13 + 84)) {
    uint64_t v17 = *(void *)(*(void *)(v11 - 8) + 64);
  }
  else {
    uint64_t v17 = *(void *)(*(void *)(v11 - 8) + 64) + 1;
  }
  int v18 = *(_DWORD *)(v12 + 80);
  uint64_t v19 = v15 | (v5 | v60 | v18);
  if (v19 != 7
    || ((v5 | v60 | v9 | *(_DWORD *)(v13 + 80) | v18) & 0x100000) != 0
    || v17
     + ((v14
       + 8
       + ((v16 + 7 + ((v9 + 1) & ~(unint64_t)v9)) & 0xFFFFFFFFFFFFFFF8)) & ~v14)
     + ((v15 + v7 + ((v50 + (v51 & ~(unint64_t)v60)) & ~(unint64_t)v5)) & ~v15) > 0x18)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    unint64_t v26 = (uint64_t *)(v22 + ((v19 + 16) & ~v19));
    swift_retain();
  }
  else
  {
    uint64_t v45 = *(_DWORD *)(v13 + 80);
    uint64_t v46 = v9 + 1;
    size_t v43 = v16;
    uint64_t v47 = v16 + 7;
    unint64_t v61 = v14 + 8;
    size_t v44 = v17;
    uint64_t v23 = ~v48;
    uint64_t v24 = ~v6;
    uint64_t v25 = ~v15;
    uint64_t v49 = ~v10;
    unint64_t v26 = a1;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v53);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v52 + 16))(((unint64_t)a1 + v51) & v23, ((unint64_t)a2 + v51) & v23, v54);
    uint64_t v27 = (void *)(((((unint64_t)a1 + v51) & v23) + v50) & v24);
    uint64_t v28 = (const void *)(((((unint64_t)a2 + v51) & v23) + v50) & v24);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v28, 1, v56))
    {
      size_t v30 = v7;
      memcpy(v27, v28, v7);
      uint64_t v31 = v8;
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v55 + 16))(v27, v28, v56);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v27, 0, 1, v56);
      uint64_t v31 = v8;
      size_t v30 = v7;
    }
    uint64_t v32 = ~v45;
    id v33 = (unsigned char *)(((unint64_t)v27 + v30 + v15) & v25);
    id v34 = (unsigned char *)(((unint64_t)v28 + v30 + v15) & v25);
    *id v33 = *v34;
    uint64_t v35 = (void *)((unint64_t)&v33[v46] & v49);
    id v36 = (const void *)((unint64_t)&v34[v46] & v49);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v36, 1, v57))
    {
      memcpy(v35, v36, v43);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v35, v36, v57);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v35, 0, 1, v57);
    }
    id v37 = (void *)(((unint64_t)v35 + v47) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v38 = (void *)(((unint64_t)v36 + v47) & 0xFFFFFFFFFFFFFFF8);
    *id v37 = *v38;
    uint64_t v39 = (void *)(((unint64_t)v37 + v61) & v32);
    id v40 = (const void *)(((unint64_t)v38 + v61) & v32);
    id v41 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v59 + 48);
    swift_bridgeObjectRetain();
    if (v41(v40, 1, v58))
    {
      memcpy(v39, v40, v44);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v59 + 16))(v39, v40, v58);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v39, 0, 1, v58);
    }
  }
  return v26;
}

uint64_t sub_241A7C28C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = a2[4];
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10)) {
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v12, v10);
  }
  int v13 = *(_DWORD *)(v11 + 84);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v15 = sub_241CD7A10();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = sub_241CD6810();
  BOOL v19 = v13 == 0;
  uint64_t v28 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v21 = v14 + v12;
  if (v19) {
    ++v21;
  }
  uint64_t v22 = (v17 + ((v21 + (v17 | v20 | 7)) & ~(v17 | v20 | 7)) + 1) & ~v17;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v22, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v22, v15);
  }
  uint64_t v23 = v22 + *(void *)(v16 + 64);
  if (!*(_DWORD *)(v16 + 84)) {
    ++v23;
  }
  unint64_t v24 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v25 = (v20 + v24 + 8) & ~v20;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v25, 1, v18);
  if (!result)
  {
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8);
    return v27(v25, v18);
  }
  return result;
}

uint64_t sub_241A7C548(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = a3[4];
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v17 + v11) & ~v16);
  BOOL v19 = (const void *)((v17 + v12) & ~v16);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14))
  {
    int v20 = *(_DWORD *)(v15 + 84);
    uint64_t v21 = *(void *)(v15 + 64);
    if (v20) {
      size_t v22 = *(void *)(v15 + 64);
    }
    else {
      size_t v22 = v21 + 1;
    }
    memcpy(v18, v19, v22);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v18, v19, v14);
    unint64_t v24 = *(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56);
    uint64_t v23 = v15 + 56;
    v24(v18, 0, 1, v14);
    int v20 = *(_DWORD *)(v23 + 28);
    uint64_t v21 = *(void *)(v23 + 8);
  }
  if (v20) {
    uint64_t v25 = v21;
  }
  else {
    uint64_t v25 = v21 + 1;
  }
  uint64_t v26 = sub_241CD7A10();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = sub_241CD6810();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = v28 | v31 | 7;
  id v33 = (unsigned char *)(((unint64_t)v18 + v32 + v25) & ~v32);
  id v34 = (unsigned char *)(((unint64_t)v19 + v32 + v25) & ~v32);
  *id v33 = *v34;
  uint64_t v35 = (void *)((unint64_t)&v33[v28 + 1] & ~v28);
  id v36 = (const void *)((unint64_t)&v34[v28 + 1] & ~v28);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v36, 1, v26))
  {
    int v37 = *(_DWORD *)(v27 + 84);
    size_t v38 = *(void *)(v27 + 64);
    if (v37) {
      size_t v39 = v38;
    }
    else {
      size_t v39 = v38 + 1;
    }
    memcpy(v35, v36, v39);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v35, v36, v26);
    id v41 = *(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56);
    uint64_t v40 = v27 + 56;
    v41(v35, 0, 1, v26);
    int v37 = *(_DWORD *)(v40 + 28);
    size_t v38 = *(void *)(v40 + 8);
  }
  if (v37) {
    size_t v42 = v38;
  }
  else {
    size_t v42 = v38 + 1;
  }
  size_t v43 = (void *)(((unint64_t)v35 + v42 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v44 = (void *)(((unint64_t)v36 + v42 + 7) & 0xFFFFFFFFFFFFFFF8);
  *size_t v43 = *v44;
  uint64_t v45 = (void *)(((unint64_t)v43 + v31 + 8) & ~v31);
  uint64_t v46 = (const void *)(((unint64_t)v44 + v31 + 8) & ~v31);
  uint64_t v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
  swift_bridgeObjectRetain();
  if (v47(v46, 1, v29))
  {
    if (*(_DWORD *)(v30 + 84)) {
      size_t v48 = *(void *)(v30 + 64);
    }
    else {
      size_t v48 = *(void *)(v30 + 64) + 1;
    }
    memcpy(v45, v46, v48);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v45, v46, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v45, 0, 1, v29);
  }
  return a1;
}

uint64_t sub_241A7C8F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v57 = a1;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = a3[4];
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v17 + v11) & ~v16);
  BOOL v19 = (void *)((v17 + v12) & ~v16);
  int v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v12) = v20(v18, 1, v14);
  int v21 = v20(v19, 1, v14);
  if (v12)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v18, v19, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      goto LABEL_12;
    }
    int v22 = *(_DWORD *)(v15 + 84);
    size_t v23 = *(void *)(v15 + 64);
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v18, v19, v14);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v18, v14);
    int v22 = *(_DWORD *)(v15 + 84);
    size_t v23 = *(void *)(v15 + 64);
  }
  if (v22) {
    size_t v24 = v23;
  }
  else {
    size_t v24 = v23 + 1;
  }
  memcpy(v18, v19, v24);
LABEL_12:
  if (*(_DWORD *)(v15 + 84)) {
    uint64_t v25 = *(void *)(v15 + 64);
  }
  else {
    uint64_t v25 = *(void *)(v15 + 64) + 1;
  }
  uint64_t v26 = sub_241CD7A10();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = sub_241CD6810();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = v28 | v31 | 7;
  id v33 = (unsigned char *)(((unint64_t)v18 + v32 + v25) & ~v32);
  id v34 = (unsigned char *)(((unint64_t)v19 + v32 + v25) & ~v32);
  *id v33 = *v34;
  uint64_t v35 = (void *)((unint64_t)&v33[v28 + 1] & ~v28);
  id v36 = (void *)((unint64_t)&v34[v28 + 1] & ~v28);
  int v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v38 = v37(v35, 1, v26);
  int v39 = v37(v36, 1, v26);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v35, v36, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v35, 0, 1, v26);
      goto LABEL_26;
    }
    int v40 = *(_DWORD *)(v27 + 84);
    size_t v41 = *(void *)(v27 + 64);
  }
  else
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v35, v36, v26);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v35, v26);
    int v40 = *(_DWORD *)(v27 + 84);
    size_t v41 = *(void *)(v27 + 64);
  }
  if (v40) {
    size_t v42 = v41;
  }
  else {
    size_t v42 = v41 + 1;
  }
  memcpy(v35, v36, v42);
LABEL_26:
  if (*(_DWORD *)(v27 + 84)) {
    uint64_t v43 = *(void *)(v27 + 64);
  }
  else {
    uint64_t v43 = *(void *)(v27 + 64) + 1;
  }
  size_t v44 = (void *)(((unint64_t)v35 + v43 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v45 = (void *)(((unint64_t)v36 + v43 + 7) & 0xFFFFFFFFFFFFFFF8);
  void *v44 = *v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = (void *)(((unint64_t)v44 + v31 + 8) & ~v31);
  uint64_t v47 = (void *)(((unint64_t)v45 + v31 + 8) & ~v31);
  size_t v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v49 = v48(v46, 1, v29);
  int v50 = v48(v47, 1, v29);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 16))(v46, v47, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v46, 0, 1, v29);
      return v57;
    }
    int v51 = *(_DWORD *)(v30 + 84);
    size_t v52 = *(void *)(v30 + 64);
  }
  else
  {
    if (!v50)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 24))(v46, v47, v29);
      return v57;
    }
    uint64_t v54 = *(void (**)(void *, uint64_t))(v30 + 8);
    uint64_t v53 = v30 + 8;
    v54(v46, v29);
    int v51 = *(_DWORD *)(v53 + 76);
    size_t v52 = *(void *)(v53 + 56);
  }
  if (v51) {
    size_t v55 = v52;
  }
  else {
    size_t v55 = v52 + 1;
  }
  memcpy(v46, v47, v55);
  return v57;
}

uint64_t sub_241A7CE00(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = a3[4];
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v17 + v11) & ~v16);
  BOOL v19 = (const void *)((v17 + v12) & ~v16);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14))
  {
    int v20 = *(_DWORD *)(v15 + 84);
    uint64_t v21 = *(void *)(v15 + 64);
    if (v20) {
      size_t v22 = *(void *)(v15 + 64);
    }
    else {
      size_t v22 = v21 + 1;
    }
    memcpy(v18, v19, v22);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v18, v19, v14);
    size_t v24 = *(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56);
    uint64_t v23 = v15 + 56;
    v24(v18, 0, 1, v14);
    int v20 = *(_DWORD *)(v23 + 28);
    uint64_t v21 = *(void *)(v23 + 8);
  }
  if (v20) {
    uint64_t v25 = v21;
  }
  else {
    uint64_t v25 = v21 + 1;
  }
  uint64_t v26 = sub_241CD7A10();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = sub_241CD6810();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = v28 | v31 | 7;
  id v33 = (unsigned char *)(((unint64_t)v18 + v32 + v25) & ~v32);
  id v34 = (unsigned char *)(((unint64_t)v19 + v32 + v25) & ~v32);
  *id v33 = *v34;
  uint64_t v35 = (void *)((unint64_t)&v33[v28 + 1] & ~v28);
  id v36 = (const void *)((unint64_t)&v34[v28 + 1] & ~v28);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v36, 1, v26))
  {
    int v37 = *(_DWORD *)(v27 + 84);
    size_t v38 = *(void *)(v27 + 64);
    if (v37) {
      size_t v39 = v38;
    }
    else {
      size_t v39 = v38 + 1;
    }
    memcpy(v35, v36, v39);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 32))(v35, v36, v26);
    size_t v41 = *(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56);
    uint64_t v40 = v27 + 56;
    v41(v35, 0, 1, v26);
    int v37 = *(_DWORD *)(v40 + 28);
    size_t v38 = *(void *)(v40 + 8);
  }
  if (v37) {
    size_t v42 = v38;
  }
  else {
    size_t v42 = v38 + 1;
  }
  uint64_t v43 = (void *)(((unint64_t)v35 + v42 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v44 = (void *)(((unint64_t)v36 + v42 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v43 = *v44;
  uint64_t v45 = (void *)(((unint64_t)v43 + v31 + 8) & ~v31);
  uint64_t v46 = (const void *)(((unint64_t)v44 + v31 + 8) & ~v31);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v46, 1, v29))
  {
    if (*(_DWORD *)(v30 + 84)) {
      size_t v47 = *(void *)(v30 + 64);
    }
    else {
      size_t v47 = *(void *)(v30 + 64) + 1;
    }
    memcpy(v45, v46, v47);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v45, v46, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v45, 0, 1, v29);
  }
  return a1;
}

uint64_t sub_241A7D1A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v57 = a1;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = a3[4];
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (void *)((v17 + v11) & ~v16);
  BOOL v19 = (void *)((v17 + v12) & ~v16);
  int v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v12) = v20(v18, 1, v14);
  int v21 = v20(v19, 1, v14);
  if (v12)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v18, v19, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      goto LABEL_12;
    }
    int v22 = *(_DWORD *)(v15 + 84);
    size_t v23 = *(void *)(v15 + 64);
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v18, v19, v14);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v18, v14);
    int v22 = *(_DWORD *)(v15 + 84);
    size_t v23 = *(void *)(v15 + 64);
  }
  if (v22) {
    size_t v24 = v23;
  }
  else {
    size_t v24 = v23 + 1;
  }
  memcpy(v18, v19, v24);
LABEL_12:
  if (*(_DWORD *)(v15 + 84)) {
    uint64_t v25 = *(void *)(v15 + 64);
  }
  else {
    uint64_t v25 = *(void *)(v15 + 64) + 1;
  }
  uint64_t v26 = sub_241CD7A10();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = sub_241CD6810();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = v28 | v31 | 7;
  id v33 = (unsigned char *)(((unint64_t)v18 + v32 + v25) & ~v32);
  id v34 = (unsigned char *)(((unint64_t)v19 + v32 + v25) & ~v32);
  *id v33 = *v34;
  uint64_t v35 = (void *)((unint64_t)&v33[v28 + 1] & ~v28);
  id v36 = (void *)((unint64_t)&v34[v28 + 1] & ~v28);
  int v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v38 = v37(v35, 1, v26);
  int v39 = v37(v36, 1, v26);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v35, v36, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v35, 0, 1, v26);
      goto LABEL_26;
    }
    int v40 = *(_DWORD *)(v27 + 84);
    size_t v41 = *(void *)(v27 + 64);
  }
  else
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v35, v36, v26);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v35, v26);
    int v40 = *(_DWORD *)(v27 + 84);
    size_t v41 = *(void *)(v27 + 64);
  }
  if (v40) {
    size_t v42 = v41;
  }
  else {
    size_t v42 = v41 + 1;
  }
  memcpy(v35, v36, v42);
LABEL_26:
  if (*(_DWORD *)(v27 + 84)) {
    uint64_t v43 = *(void *)(v27 + 64);
  }
  else {
    uint64_t v43 = *(void *)(v27 + 64) + 1;
  }
  size_t v44 = (void *)(((unint64_t)v35 + v43 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v45 = (void *)(((unint64_t)v36 + v43 + 7) & 0xFFFFFFFFFFFFFFF8);
  void *v44 = *v45;
  swift_bridgeObjectRelease();
  uint64_t v46 = (void *)(((unint64_t)v44 + v31 + 8) & ~v31);
  size_t v47 = (void *)(((unint64_t)v45 + v31 + 8) & ~v31);
  size_t v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v49 = v48(v46, 1, v29);
  int v50 = v48(v47, 1, v29);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v46, v47, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v46, 0, 1, v29);
      return v57;
    }
    int v51 = *(_DWORD *)(v30 + 84);
    size_t v52 = *(void *)(v30 + 64);
  }
  else
  {
    if (!v50)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v46, v47, v29);
      return v57;
    }
    uint64_t v54 = *(void (**)(void *, uint64_t))(v30 + 8);
    uint64_t v53 = v30 + 8;
    v54(v46, v29);
    int v51 = *(_DWORD *)(v53 + 76);
    size_t v52 = *(void *)(v53 + 56);
  }
  if (v51) {
    size_t v55 = v52;
  }
  else {
    size_t v55 = v52 + 1;
  }
  memcpy(v46, v47, v55);
  return v57;
}

uint64_t sub_241A7D6AC(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v54 = a3[2];
  uint64_t v60 = *(void *)(v54 - 8);
  uint64_t v52 = a3[3];
  uint64_t v59 = *(void *)(v52 - 8);
  unsigned int v3 = *(_DWORD *)(v59 + 84);
  unsigned int v53 = v3;
  unsigned int v55 = *(_DWORD *)(v60 + 84);
  if (v3 <= v55) {
    unsigned int v3 = *(_DWORD *)(v60 + 84);
  }
  uint64_t v50 = a3[4];
  uint64_t v57 = *(void *)(v50 - 8);
  uint64_t v4 = *(unsigned int *)(v57 + 84);
  unsigned int v5 = v4 - 1;
  if (!v4) {
    unsigned int v5 = 0;
  }
  unsigned int v51 = v5;
  if (v5 <= v3) {
    unsigned int v6 = v3;
  }
  else {
    unsigned int v6 = v5;
  }
  uint64_t v49 = sub_241CD7A10();
  uint64_t v7 = *(void *)(v49 - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(unsigned int *)(v7 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  uint64_t v11 = sub_241CD6810();
  uint64_t result = a2;
  uint64_t v13 = *(void *)(v11 - 8);
  int v14 = *(_DWORD *)(v13 + 84);
  unsigned int v15 = v14 - 1;
  if (!v14) {
    unsigned int v15 = 0;
  }
  if (v10 <= v15) {
    unsigned int v16 = v15;
  }
  else {
    unsigned int v16 = v10;
  }
  if (v16 <= 0x7FFFFFFF) {
    unsigned int v17 = 0x7FFFFFFF;
  }
  else {
    unsigned int v17 = v16;
  }
  if (v17 <= v6) {
    unsigned int v18 = v6;
  }
  else {
    unsigned int v18 = v17;
  }
  if (v4) {
    uint64_t v19 = *(void *)(v57 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v57 + 64) + 1;
  }
  if (v9) {
    uint64_t v20 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v20 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v21 = *(unsigned __int8 *)(v59 + 80);
  uint64_t v22 = *(void *)(v59 + 64);
  uint64_t v23 = *(unsigned __int8 *)(v57 + 80);
  uint64_t v24 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v25 = *(unsigned __int8 *)(v13 + 80);
  if (v14) {
    uint64_t v26 = *(void *)(*(void *)(v11 - 8) + 64);
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(v11 - 8) + 64) + 1;
  }
  if (!a2) {
    return result;
  }
  unsigned int v27 = v10;
  uint64_t v28 = *(void *)(v60 + 64) + v21;
  uint64_t v29 = v24 | v25 | 7;
  uint64_t v30 = v24 + 1;
  uint64_t v31 = v20 + 7;
  uint64_t v32 = v25 + 8;
  id v33 = a1;
  if (a2 > v18)
  {
    unint64_t v34 = v26
        + ((v32 + ((v31 + (v30 & ~v24)) & 0xFFFFFFFFFFFFFFF8)) & ~v25)
        + ((v29 + v19 + ((v22 + v23 + (v28 & ~v21)) & ~v23)) & ~v29);
    char v35 = 8 * v34;
    if (v34 > 3) {
      goto LABEL_34;
    }
    unsigned int v37 = ((a2 - v18 + ~(-1 << v35)) >> v35) + 1;
    if (HIWORD(v37))
    {
      int v36 = *(_DWORD *)((char *)a1 + v34);
      if (v36) {
        goto LABEL_41;
      }
    }
    else
    {
      if (v37 <= 0xFF)
      {
        if (v37 < 2) {
          goto LABEL_51;
        }
LABEL_34:
        int v36 = *((unsigned __int8 *)a1 + v34);
        if (!*((unsigned char *)a1 + v34)) {
          goto LABEL_51;
        }
LABEL_41:
        int v38 = (v36 - 1) << v35;
        if (v34 > 3) {
          int v38 = 0;
        }
        if (v34)
        {
          if (v34 <= 3) {
            int v39 = v34;
          }
          else {
            int v39 = 4;
          }
          switch(v39)
          {
            case 2:
              int v40 = *a1;
              break;
            case 3:
              int v40 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v40 = *(_DWORD *)a1;
              break;
            default:
              int v40 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v40 = 0;
        }
        return v18 + (v40 | v38) + 1;
      }
      int v36 = *(unsigned __int16 *)((char *)a1 + v34);
      if (*(unsigned __int16 *)((char *)a1 + v34)) {
        goto LABEL_41;
      }
    }
  }
LABEL_51:
  if (v55 == v18)
  {
    uint64_t v41 = v54;
    size_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v60 + 48);
    uint64_t v43 = v55;
LABEL_55:
    return v42(v33, v43, v41);
  }
  id v33 = (unsigned __int16 *)(((unint64_t)a1 + v28) & ~v21);
  if (v53 == v18)
  {
    size_t v42 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v59 + 48);
    uint64_t v43 = v53;
    uint64_t v41 = v52;
    goto LABEL_55;
  }
  unint64_t v44 = ((unint64_t)v33 + v22 + v23) & ~v23;
  if (v51 == v18)
  {
    unsigned int v45 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v57 + 48))(v44, v4, v50);
    goto LABEL_71;
  }
  uint64_t v46 = (v30 + ((v44 + v19 + v29) & ~v29)) & ~v24;
  if (v27 == v17)
  {
    unsigned int v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v46, v9, v49);
    goto LABEL_71;
  }
  size_t v47 = (uint64_t *)((v31 + v46) & 0xFFFFFFFFFFFFFFF8);
  if ((v16 & 0x80000000) != 0)
  {
    unsigned int v45 = (*(uint64_t (**)(unint64_t))(v13 + 48))(((unint64_t)v47 + v32) & ~v25);
LABEL_71:
    if (v45 >= 2) {
      return v45 - 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v48 = *v47;
  if ((unint64_t)*v47 >= 0xFFFFFFFF) {
    LODWORD(v48) = -1;
  }
  return (v48 + 1);
}

void sub_241A7DB94(unsigned char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  uint64_t v65 = a4[2];
  uint64_t v67 = *(void *)(v65 - 8);
  uint64_t v63 = a4[3];
  uint64_t v4 = *(void *)(v63 - 8);
  uint64_t v74 = v4;
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v64 = v5;
  unsigned int v66 = *(_DWORD *)(v67 + 84);
  if (v5 <= v66) {
    unsigned int v5 = *(_DWORD *)(v67 + 84);
  }
  uint64_t v61 = a4[4];
  uint64_t v6 = *(void *)(v61 - 8);
  uint64_t v73 = v6;
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  unsigned int v8 = v7 - 1;
  if (!v7) {
    unsigned int v8 = 0;
  }
  unsigned int v62 = v8;
  if (v8 > v5) {
    unsigned int v5 = v8;
  }
  unsigned int v68 = v5;
  uint64_t v60 = sub_241CD7A10();
  uint64_t v9 = *(void *)(v60 - 8);
  uint64_t v72 = v9;
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  unsigned int v12 = v11;
  int v75 = 0;
  uint64_t v13 = *(void *)(sub_241CD6810() - 8);
  uint64_t v14 = v13;
  int v15 = *(_DWORD *)(v13 + 84);
  if (v15) {
    unsigned int v16 = v15 - 1;
  }
  else {
    unsigned int v16 = 0;
  }
  uint64_t v17 = *(void *)(v6 + 64);
  uint64_t v18 = *(void *)(v67 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v20 = *(void *)(v4 + 64);
  uint64_t v21 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v23 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v24 = *(void *)(v13 + 64);
  if (v11 <= v16) {
    unsigned int v25 = v16;
  }
  else {
    unsigned int v25 = v11;
  }
  if (v25 <= 0x7FFFFFFF) {
    unsigned int v26 = 0x7FFFFFFF;
  }
  else {
    unsigned int v26 = v25;
  }
  if (v26 <= v68) {
    unsigned int v27 = v68;
  }
  else {
    unsigned int v27 = v26;
  }
  if (v7) {
    uint64_t v28 = v17;
  }
  else {
    uint64_t v28 = v17 + 1;
  }
  if (v10) {
    uint64_t v29 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v30 = v18 + v19;
  uint64_t v31 = v22 | v23 | 7;
  uint64_t v32 = (v31 + v28 + ((v20 + v21 + ((v18 + v19) & ~v19)) & ~v21)) & ~v31;
  uint64_t v33 = v22 + 1;
  uint64_t v34 = v29 + 7;
  uint64_t v35 = v29 + 7 + ((v22 + 1) & ~v22);
  uint64_t v36 = v23 + 8;
  if (v15) {
    uint64_t v37 = v24;
  }
  else {
    uint64_t v37 = v24 + 1;
  }
  size_t v38 = v32 + v37 + ((v23 + 8 + (v35 & 0xFFFFFFFFFFFFFFF8)) & ~v23);
  if (a3 > v27)
  {
    if (v38 <= 3)
    {
      unsigned int v40 = ((a3 - v27 + ~(-1 << (8 * v38))) >> (8 * v38)) + 1;
      if (HIWORD(v40))
      {
        int v39 = 4;
      }
      else if (v40 >= 0x100)
      {
        int v39 = 2;
      }
      else
      {
        int v39 = v40 > 1;
      }
    }
    else
    {
      int v39 = 1;
    }
    int v75 = v39;
  }
  if (v27 < a2)
  {
    unsigned int v41 = ~v27 + a2;
    if (v38 < 4)
    {
      int v42 = (v41 >> (8 * v38)) + 1;
      if (v38)
      {
        int v47 = v41 & ~(-1 << (8 * v38));
        bzero(a1, v38);
        if (v38 == 3)
        {
          *(_WORD *)a1 = v47;
          a1[2] = BYTE2(v47);
        }
        else if (v38 == 2)
        {
          *(_WORD *)a1 = v47;
        }
        else
        {
          *a1 = v47;
        }
      }
    }
    else
    {
      bzero(a1, v38);
      *(_DWORD *)a1 = v41;
      int v42 = 1;
    }
    switch(v75)
    {
      case 1:
        a1[v38] = v42;
        return;
      case 2:
        *(_WORD *)&a1[v38] = v42;
        return;
      case 3:
        goto LABEL_93;
      case 4:
        *(_DWORD *)&a1[v38] = v42;
        return;
      default:
        return;
    }
  }
  uint64_t v43 = ~v23;
  uint64_t v44 = ~v19;
  uint64_t v45 = ~v22;
  uint64_t v46 = a1;
  switch(v75)
  {
    case 1:
      a1[v38] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_52;
    case 2:
      *(_WORD *)&a1[v38] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_52;
    case 3:
LABEL_93:
      __break(1u);
      JUMPOUT(0x241A7E1CCLL);
    case 4:
      *(_DWORD *)&a1[v38] = 0;
      goto LABEL_51;
    default:
LABEL_51:
      if (!a2) {
        return;
      }
LABEL_52:
      if (v66 == v27)
      {
        uint64_t v48 = v65;
        uint64_t v49 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v67 + 56);
        uint64_t v50 = a2;
        uint64_t v51 = v66;
LABEL_79:
        v49(v46, v50, v51, v48);
        return;
      }
      uint64_t v46 = (unsigned char *)((unint64_t)&a1[v30] & v44);
      if (v64 == v27)
      {
        uint64_t v49 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v74 + 56);
        uint64_t v50 = a2;
        uint64_t v51 = v64;
        uint64_t v48 = v63;
        goto LABEL_79;
      }
      uint64_t v46 = (unsigned char *)((unint64_t)&v46[v20 + v21] & ~v21);
      if (v62 == v27)
      {
        uint64_t v50 = a2 + 1;
        uint64_t v49 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v73 + 56);
        uint64_t v51 = v7;
        uint64_t v48 = v61;
        goto LABEL_79;
      }
      uint64_t v52 = (unint64_t)&v46[v28 + v31] & ~v31;
      if (v26 >= a2)
      {
        uint64_t v46 = (unsigned char *)((v33 + v52) & v45);
        if (v12 == v26)
        {
          uint64_t v50 = a2 + 1;
          uint64_t v49 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v72 + 56);
          uint64_t v51 = v10;
          uint64_t v48 = v60;
          goto LABEL_79;
        }
        uint64_t v57 = (void *)((unint64_t)&v46[v34] & 0xFFFFFFFFFFFFFFF8);
        if ((v25 & 0x80000000) != 0)
        {
          uint64_t v59 = *(void (**)(unint64_t, void))(v14 + 56);
          v59(((unint64_t)v57 + v36) & v43, a2 + 1);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v58 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v58 = a2 - 1;
          }
          void *v57 = v58;
        }
      }
      else
      {
        size_t v53 = ((v36 + (v35 & 0xFFFFFFF8)) & v43) + v37;
        if (v53 <= 3) {
          int v54 = ~(-1 << (8 * (((v36 + (v35 & 0xF8)) & v43) + v37)));
        }
        else {
          int v54 = -1;
        }
        if (v53)
        {
          int v55 = v54 & (~v26 + a2);
          if (v53 <= 3) {
            int v56 = ((v36 + (v35 & 0xFFFFFFF8)) & v43) + v37;
          }
          else {
            int v56 = 4;
          }
          bzero((void *)((unint64_t)&v46[v28 + v31] & ~v31), v53);
          switch(v56)
          {
            case 2:
              *(_WORD *)uint64_t v52 = v55;
              break;
            case 3:
              *(_WORD *)uint64_t v52 = v55;
              *(unsigned char *)(v52 + 2) = BYTE2(v55);
              break;
            case 4:
              *(_DWORD *)uint64_t v52 = v55;
              break;
            default:
              *(unsigned char *)uint64_t v52 = v55;
              break;
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SnidgetHarnessGeneratorFeedItemModel()
{
  return sub_241A91234();
}

void *sub_241A7E21C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if ((unint64_t)a1 >= 2)
  {
    unsigned int v5 = (void *)a3;
    if (a3 >= 2)
    {
      sub_241A91968(a1);
      sub_241A91968(v5);
      sub_241AFF3B0(a4);
    }
    else
    {
      id v6 = a1;
      swift_bridgeObjectRetain();
      unsigned int v5 = 0;
    }
    id v8 = v5;
    swift_bridgeObjectRetain();
    id v9 = a1;
    sub_241A91910(a1, v5);
  }
  return a1;
}

id sub_241A7E2E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 24));
  if ((_BYTE)v21[1])
  {
    sub_241A3A878();
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    int v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A3A878();
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, (uint64_t)v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v35[1] = 0;
        v35[2] = 0;
        *uint64_t v35 = v32;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD00000000000002BLL, 0x8000000241CDDCD0, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 24) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A3A878();
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A7EA18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TimePeriodSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 24));
  if ((_BYTE)v21[1])
  {
    sub_241A3A878();
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    int v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A3A878();
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, (uint64_t)v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v35[1] = 0;
        v35[2] = 0;
        *uint64_t v35 = v32;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD000000000000026, 0x8000000241CDDF30, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 24) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A3A878();
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A7F14C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 24));
  if ((_BYTE)v21[1])
  {
    sub_241A921B8(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A921B8(0);
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        *(void *)uint64_t v35 = v32;
        *(_OWORD *)(v35 + 8) = xmmword_241CEBF20;
        *(void *)(v35 + 24) = 0;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD000000000000029, 0x8000000241CDDD30, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 24) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A921B8(0);
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A7F88C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StateOfMindSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if ((_BYTE)v21[1])
  {
    sub_241A9260C(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A9260C(0);
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        *(void *)(v35 + 8) = 0;
        *(void *)(v35 + 16) = 0;
        *(void *)uint64_t v35 = v32;
        *(unsigned char *)(v35 + 24) = 1;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD000000000000027, 0x8000000241CDDD90, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A9260C(0);
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A7FFC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if ((_BYTE)v21[1])
  {
    sub_241A3A878();
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A3A878();
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, (uint64_t)v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v35[1] = 0;
        v35[2] = 0;
        *uint64_t v35 = v32;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD00000000000002ELL, 0x8000000241CDDD00, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A3A878();
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A806FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for QuantityValueSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 24));
  if ((_BYTE)v21[1])
  {
    sub_241A3A878();
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A3A878();
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, (uint64_t)v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v35[1] = 0;
        v35[2] = 0;
        *uint64_t v35 = v32;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD000000000000029, 0x8000000241CDDC30, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 24) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A3A878();
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A80E30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ECGSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if ((_BYTE)v21[1])
  {
    sub_241A93604(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A93604(0);
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        *(void *)uint64_t v35 = v32;
        *(void *)(v35 + 8) = 0;
        *(unsigned char *)(v35 + 16) = 1;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ECGSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD00000000000001FLL, 0x8000000241CDDE50, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ECGSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ECGSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A93604(0);
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A81568@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SleepSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if ((_BYTE)v21[1])
  {
    sub_241A92964(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A92964(0);
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, (uint64_t)v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v35[1] = 0;
        v35[2] = 0;
        *uint64_t v35 = v32;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD000000000000021, 0x8000000241CDDDC0, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A92964(0);
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A81C9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BalanceSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if ((_BYTE)v21[1])
  {
    sub_241A91DB4(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A91DB4(0);
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        *(void *)uint64_t v35 = v32;
        *(_OWORD *)(v35 + 8) = 0u;
        *(_OWORD *)(v35 + 24) = 0u;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BalanceSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD000000000000023, 0x8000000241CDDCA0, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BalanceSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BalanceSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A91DB4(0);
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A823D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if ((_BYTE)v21[1])
  {
    sub_241A93F80(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A93F80(0);
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        *(void *)uint64_t v35 = v32;
        *(void *)(v35 + 8) = 0;
        *(unsigned char *)(v35 + 16) = 1;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD000000000000026, 0x8000000241CDDED0, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A93F80(0);
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A82B10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BloodPressureSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 24));
  if ((_BYTE)v21[1])
  {
    sub_241A3A878();
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A3A878();
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, (uint64_t)v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v35[1] = 0;
        v35[2] = 0;
        *uint64_t v35 = v32;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BloodPressureSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD000000000000029, 0x8000000241CDDEA0, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 24) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BloodPressureSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BloodPressureSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A3A878();
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A83244@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CategoryValueSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 24));
  if ((_BYTE)v21[1])
  {
    sub_241A3A878();
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A3A878();
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, (uint64_t)v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v35[1] = 0;
        v35[2] = 0;
        *uint64_t v35 = v32;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD000000000000029, 0x8000000241CDDF60, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 24) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A3A878();
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A83978@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if ((_BYTE)v21[1])
  {
    sub_241A92CDC(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A92CDC(0);
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        *(void *)uint64_t v35 = v32;
        *(void *)(v35 + 8) = 0;
        *(unsigned char *)(v35 + 16) = 1;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD00000000000002ALL, 0x8000000241CDDE20, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A92CDC(0);
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A840B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if ((_BYTE)v21[1])
  {
    sub_241A3A878();
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A3A878();
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, (uint64_t)v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v35[1] = 0;
        v35[2] = 0;
        *uint64_t v35 = v32;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD00000000000002ALL, 0x8000000241CDDE70, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A3A878();
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A847E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if ((_BYTE)v21[1])
  {
    sub_241A92CDC(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A92CDC(0);
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        *(void *)uint64_t v35 = v32;
        *(void *)(v35 + 8) = 0;
        *(unsigned char *)(v35 + 16) = 1;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD00000000000002ALL, 0x8000000241CDDDF0, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A92CDC(0);
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A84F1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 24));
  if ((_BYTE)v21[1])
  {
    sub_241A3A878();
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A3A878();
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, (uint64_t)v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v35[1] = 0;
        v35[2] = 0;
        *uint64_t v35 = v32;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD00000000000002BLL, 0x8000000241CDDD60, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 24) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A3A878();
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A85650@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if ((_BYTE)v21[1])
  {
    sub_241A919AC(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A919AC(0);
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, (uint64_t)v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v35[1] = 0;
        v35[2] = 0;
        *uint64_t v35 = v32;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD00000000000002DLL, 0x8000000241CDDF00, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A919AC(0);
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_241A85D84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35680(0, &qword_26B0320B0, MEMORY[0x263F43F20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unsigned int v11 = (char *)&v47 - v10;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v47 - v13;
  sub_241A35680(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if ((_BYTE)v21[1])
  {
    sub_241A919AC(0);
    uint64_t v23 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    return (id)v23(a1, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      unsigned int v25 = result;
      id v26 = v21[2];
      id v27 = objc_msgSend(v25, sel_displayTypeForObjectType_, v26);

      if (v27)
      {
        uint64_t v28 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 1, 1, v29);
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, v20);
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
        id v31 = v27;
        uint64_t v32 = sub_241CD8990();
        sub_241A919AC(0);
        uint64_t v34 = v33;
        uint64_t v35 = v47;
        sub_241A94368((uint64_t)v20, (uint64_t)v47 + *(int *)(v33 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v35[1] = 0;
        v35[2] = 0;
        *uint64_t v35 = v32;
        sub_241A91870((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      }
      else
      {
        uint64_t v36 = v50;
        sub_241CDA0F0();
        sub_241A94368((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
        uint64_t v37 = sub_241CDA190();
        os_log_type_t v38 = sub_241CDB650();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v52 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          uint64_t v51 = sub_241A33FE4(0xD000000000000036, 0x8000000241CDDC60, &v52);
          sub_241CDBBF0();
          *(_WORD *)(v39 + 12) = 2080;
          id v41 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v42 = sub_241CDB0D0();
          unint64_t v44 = v43;

          uint64_t v51 = sub_241A33FE4(v42, v44, &v52);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_241A23000, v37, v38, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v40, -1, -1);
          MEMORY[0x245637F20](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
        }
        else
        {
          sub_241A91870((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
        }
        uint64_t v45 = v47;
        sub_241A919AC(0);
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_241A864B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A864D0(a1, a2);
}

uint64_t sub_241A864D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v78 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v88 = (uint64_t)&v70 - v5;
  uint64_t v90 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v90 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A878();
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v85 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)&v70 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v81 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v70 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (uint64_t *)((char *)&v70 - v15);
  uint64_t v16 = type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v16);
  uint64_t v79 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v82 = *(void *)(v18 - 8);
  uint64_t v83 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v86 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v22 = a1[2];
  sub_241A912E0();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 24) = xmmword_241CEBF30;
  *(void *)(v23 + 16) = v21;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v23 + 24);
  *(void *)(v23 + 24) = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241A93440(v24);
  swift_beginAccess();
  uint64_t v87 = v23;
  *(void *)(v23 + 32) = v22;
  swift_release();
  uint64_t v76 = v16;
  uint64_t v25 = v2 + *(int *)(v16 + 24);
  if (objc_msgSend(*(id *)(v25 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    uint64_t v75 = v8;
    sub_241CDA0F0();
    uint64_t v26 = v79;
    sub_241A94368(v2, v79, (uint64_t (*)(void))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);
    uint64_t v27 = (uint64_t)v91;
    uint64_t v28 = v80;
    sub_241A94368((uint64_t)v91, (uint64_t)v80, (uint64_t (*)(void))sub_241A3A878);
    uint64_t v29 = v81;
    sub_241A94368(v27, (uint64_t)v81, (uint64_t (*)(void))sub_241A3A878);
    sub_241A94368(v27, v84, (uint64_t (*)(void))sub_241A3A878);
    sub_241A94368(v27, v85, (uint64_t (*)(void))sub_241A3A878);
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB670();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v72 = v34;
      uint64_t v74 = swift_slowAlloc();
      v92[0] = v74;
      *(_DWORD *)uint64_t v33 = 138413315;
      int v73 = v32;
      uint64_t v35 = v26;
      uint64_t v36 = *(void **)(v26 + *(int *)(v76 + 24) + 16);
      os_log_t v71 = v30;
      uint64_t v93 = (uint64_t)v36;
      uint64_t v76 = v25;
      id v37 = v36;
      sub_241CDBBF0();
      *uint64_t v34 = v36;
      sub_241A91870(v35, (uint64_t (*)(void))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v93 = *v28;
      sub_241CD89A0();
      swift_retain();
      uint64_t v38 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v38, v39, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A3A878);
      *(_WORD *)(v33 + 22) = 2081;
      uint64_t v93 = *((void *)v29 + 1);
      sub_241A91264(0);
      swift_retain();
      uint64_t v40 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v40, v41, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A3A878);
      *(_WORD *)(v33 + 32) = 2080;
      uint64_t v42 = v84;
      uint64_t v93 = *(void *)(v84 + 16);
      id v81 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
      sub_241A35680(0, &qword_26B032148, MEMORY[0x263F44308], MEMORY[0x263F8D8F0]);
      swift_retain();
      uint64_t v43 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v43, v44, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v42, (uint64_t (*)(void))sub_241A3A878);
      *(_WORD *)(v33 + 42) = 2080;
      uint64_t v8 = v75;
      uint64_t v45 = v85;
      sub_241A94368(v85 + *(int *)(v75 + 52), v77, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v46 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v46, v47, v92);
      uint64_t v25 = v76;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v45, (uint64_t (*)(void))sub_241A3A878);
      os_log_t v48 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v73, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v33, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, v81);
      uint64_t v49 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      uint64_t v50 = v74;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v50, -1, -1);
      MEMORY[0x245637F20](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
    }
    else
    {
      sub_241A91870(v26, (uint64_t (*)(void))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A3A878);
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A3A878);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A3A878);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A3A878);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
      uint64_t v8 = v75;
    }
  }
  uint64_t v51 = *(void **)(v25 + 16);
  uint64_t v52 = (uint64_t)v91 + *(int *)(v8 + 52);
  uint64_t v53 = v88;
  sub_241A4145C(v52 + *(int *)(v90 + 28), v88);
  sub_241A916BC();
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v54 + qword_26B0413C0;
  uint64_t v56 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
  id v57 = v51;
  id v58 = objc_msgSend(v57, sel_identifier);
  uint64_t v59 = sub_241CDB0D0();
  uint64_t v61 = v60;

  *(void *)(v54 + 16) = v59;
  *(void *)(v54 + 24) = v61;
  swift_beginAccess();
  sub_241A6862C(v53, v55);
  swift_endAccess();
  v92[0] = v54;
  sub_241A942D8(&qword_26B032DB0, (void (*)(uint64_t))sub_241A916BC);
  uint64_t v62 = v89;
  uint64_t v63 = sub_241CD87E0();
  if (v62)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v66 = v63;
    uint64_t v67 = v64;
    swift_release();
    sub_241A35680(0, &qword_26B0334D0, (uint64_t (*)(uint64_t))sub_241A912E0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    uint64_t v69 = v78;
    uint64_t result = sub_241A94368(v52, (uint64_t)v78 + *(int *)(v68 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    uint64_t *v69 = v87;
    v69[1] = v66;
    v69[2] = v67;
  }
  return result;
}

uint64_t sub_241A86F2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v77 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v89 = (uint64_t)&v73 - v4;
  uint64_t v92 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v92);
  uint64_t v76 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A921B8(0);
  uint64_t v91 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v86 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v81 = (uint64_t)&v73 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v85 = (uint64_t)&v73 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v84 = (uint64_t *)((char *)&v73 - v13);
  uint64_t v82 = type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v82);
  uint64_t v78 = (uint64_t)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_241CDA1A0();
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v87 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v18 = a1[2];
  uint64_t v19 = a1[3];
  sub_241A9223C();
  uint64_t v20 = swift_allocObject();
  *(int64x2_t *)(v20 + 24) = vdupq_n_s64(1uLL);
  *(void *)(v20 + 40) = 0;
  *(void *)(v20 + 16) = v17;
  swift_beginAccess();
  uint64_t v21 = *(void *)(v20 + 24);
  *(void *)(v20 + 24) = v16;
  uint64_t v22 = v83;
  swift_retain();
  sub_241A9245C(v18);
  uint64_t v23 = a1;
  swift_retain();
  sub_241A93440(v21);
  uint64_t v24 = v91;
  swift_beginAccess();
  uint64_t v25 = *(void *)(v20 + 32);
  *(void *)(v20 + 32) = v18;
  *(void *)(v20 + 40) = v19;
  uint64_t v88 = v20;
  uint64_t v26 = v82;
  sub_241A924A4(v25);
  uint64_t v27 = v22 + *(int *)(v26 + 24);
  if (objc_msgSend(*(id *)(v27 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_241CDA0F0();
    uint64_t v28 = v78;
    sub_241A94368(v22, v78, (uint64_t (*)(void))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
    sub_241A94368((uint64_t)a1, (uint64_t)v84, (uint64_t (*)(void))sub_241A921B8);
    sub_241A94368((uint64_t)a1, v85, (uint64_t (*)(void))sub_241A921B8);
    uint64_t v29 = v81;
    sub_241A94368((uint64_t)a1, v81, (uint64_t (*)(void))sub_241A921B8);
    sub_241A94368((uint64_t)a1, v86, (uint64_t (*)(void))sub_241A921B8);
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB670();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      uint64_t v95 = v83;
      *(_DWORD *)uint64_t v33 = 138413315;
      int v75 = v32;
      uint64_t v35 = v28 + *(int *)(v26 + 24);
      uint64_t v36 = v28;
      id v37 = *(void **)(v35 + 16);
      os_log_t v74 = v30;
      uint64_t v93 = (uint64_t)v37;
      uint64_t v82 = v27;
      id v38 = v37;
      sub_241CDBBF0();
      *uint64_t v34 = v37;
      sub_241A91870(v36, (uint64_t (*)(void))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
      *(_WORD *)(v33 + 12) = 2080;
      unint64_t v39 = v84;
      uint64_t v93 = *v84;
      sub_241CD89A0();
      swift_retain();
      uint64_t v40 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v40, v41, &v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v39, (uint64_t (*)(void))sub_241A921B8);
      *(_WORD *)(v33 + 22) = 2081;
      uint64_t v42 = v85;
      uint64_t v93 = *(void *)(v85 + 8);
      sub_241A91264(0);
      swift_retain();
      uint64_t v43 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v43, v44, &v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v42, (uint64_t (*)(void))sub_241A921B8);
      *(_WORD *)(v33 + 32) = 2080;
      uint64_t v45 = v81;
      uint64_t v46 = *(void *)(v81 + 24);
      uint64_t v93 = *(void *)(v81 + 16);
      uint64_t v94 = v46;
      sub_241A9245C(v93);
      sub_241A94320(0, qword_26B038890);
      uint64_t v47 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v47, v48, &v95);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v45, (uint64_t (*)(void))sub_241A921B8);
      *(_WORD *)(v33 + 42) = 2080;
      uint64_t v24 = v91;
      uint64_t v49 = v86;
      sub_241A94368(v86 + *(int *)(v91 + 52), v76, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v50 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v50, v51, &v95);
      sub_241CDBBF0();
      uint64_t v27 = v82;
      swift_bridgeObjectRelease();
      sub_241A91870(v49, (uint64_t (*)(void))sub_241A921B8);
      os_log_t v52 = v74;
      _os_log_impl(&dword_241A23000, v74, (os_log_type_t)v75, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v33, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v34, -1, -1);
      uint64_t v53 = v83;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v53, -1, -1);
      MEMORY[0x245637F20](v33, -1, -1);
    }
    else
    {
      sub_241A91870(v28, (uint64_t (*)(void))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v84, (uint64_t (*)(void))sub_241A921B8);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A921B8);
      sub_241A91870(v29, (uint64_t (*)(void))sub_241A921B8);
      sub_241A91870(v86, (uint64_t (*)(void))sub_241A921B8);
    }
    (*(void (**)(char *, uint64_t))(v79 + 8))(v87, v80);
  }
  uint64_t v54 = *(void **)(v27 + 16);
  uint64_t v55 = (uint64_t)v23 + *(int *)(v24 + 52);
  uint64_t v56 = v89;
  sub_241A4145C(v55 + *(int *)(v92 + 28), v89);
  sub_241A924E8();
  uint64_t v57 = swift_allocObject();
  uint64_t v58 = v57 + qword_26B0413C0;
  uint64_t v59 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 1, 1, v59);
  id v60 = v54;
  id v61 = objc_msgSend(v60, sel_identifier);
  uint64_t v62 = sub_241CDB0D0();
  uint64_t v64 = v63;

  *(void *)(v57 + 16) = v62;
  *(void *)(v57 + 24) = v64;
  swift_beginAccess();
  sub_241A6862C(v56, v58);
  swift_endAccess();
  uint64_t v93 = v57;
  sub_241A942D8(&qword_26B032D50, (void (*)(uint64_t))sub_241A924E8);
  uint64_t v65 = v90;
  uint64_t v66 = sub_241CD87E0();
  if (v65)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v69 = v66;
    uint64_t v70 = v67;
    swift_release();
    sub_241A35680(0, &qword_26B0334A0, (uint64_t (*)(uint64_t))sub_241A9223C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    uint64_t v72 = v77;
    uint64_t result = sub_241A94368(v55, (uint64_t)v77 + *(int *)(v71 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *uint64_t v72 = v88;
    v72[1] = v69;
    v72[2] = v70;
  }
  return result;
}

uint64_t sub_241A87934@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v76 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v87 = (uint64_t)&v71 - v4;
  uint64_t v89 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v89 - 8);
  uint64_t v75 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A9260C(0);
  uint64_t v90 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v84 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v83 = (uint64_t)&v71 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v78 = (uint64_t)&v71 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v82 = (uint64_t *)((char *)&v71 - v13);
  uint64_t v14 = type metadata accessor for StateOfMindSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v14);
  uint64_t v77 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_241CDA1A0();
  uint64_t v79 = *(void *)(v16 - 8);
  uint64_t v80 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v85 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)a1;
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = *(void *)(a1 + 16);
  char v21 = *(unsigned char *)(a1 + 24);
  sub_241A92620();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 24) = xmmword_241CEBF30;
  *(unsigned char *)(v22 + 40) = 1;
  *(void *)(v22 + 16) = v18;
  swift_beginAccess();
  uint64_t v23 = *(void *)(v22 + 24);
  *(void *)(v22 + 24) = v19;
  swift_retain();
  swift_retain();
  sub_241A93440(v23);
  uint64_t v24 = v14;
  swift_beginAccess();
  *(void *)(v22 + 32) = v20;
  uint64_t v86 = v22;
  *(unsigned char *)(v22 + 40) = v21;
  uint64_t v25 = v81;
  uint64_t v26 = v81 + *(int *)(v14 + 20);
  if (objc_msgSend(*(id *)(v26 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_241CDA0F0();
    uint64_t v27 = v25;
    uint64_t v28 = v77;
    sub_241A94368(v27, v77, (uint64_t (*)(void))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);
    sub_241A94368(a1, (uint64_t)v82, (uint64_t (*)(void))sub_241A9260C);
    uint64_t v29 = v78;
    sub_241A94368(a1, v78, (uint64_t (*)(void))sub_241A9260C);
    sub_241A94368(a1, v83, (uint64_t (*)(void))sub_241A9260C);
    sub_241A94368(a1, v84, (uint64_t (*)(void))sub_241A9260C);
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB670();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      uint64_t v93 = v81;
      *(_DWORD *)uint64_t v33 = 138413315;
      int v73 = v32;
      uint64_t v35 = v28 + *(int *)(v24 + 20);
      os_log_t v72 = v30;
      uint64_t v36 = *(void **)(v35 + 16);
      uint64_t v91 = (uint64_t)v36;
      uint64_t v74 = v26;
      id v37 = v36;
      sub_241CDBBF0();
      *uint64_t v34 = v36;
      sub_241A91870(v28, (uint64_t (*)(void))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);
      *(_WORD *)(v33 + 12) = 2080;
      id v38 = v82;
      uint64_t v91 = *v82;
      sub_241CD89A0();
      swift_retain();
      uint64_t v39 = sub_241CDB120();
      uint64_t v91 = sub_241A33FE4(v39, v40, &v93);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v38, (uint64_t (*)(void))sub_241A9260C);
      *(_WORD *)(v33 + 22) = 2081;
      uint64_t v91 = *(void *)(v29 + 8);
      sub_241A91264(0);
      swift_retain();
      uint64_t v41 = sub_241CDB120();
      uint64_t v91 = sub_241A33FE4(v41, v42, &v93);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v29, (uint64_t (*)(void))sub_241A9260C);
      *(_WORD *)(v33 + 32) = 2080;
      uint64_t v43 = v83;
      char v44 = *(unsigned char *)(v83 + 24);
      uint64_t v91 = *(void *)(v83 + 16);
      char v92 = v44;
      sub_241A94320(0, &qword_26B033D48);
      uint64_t v45 = sub_241CDB120();
      uint64_t v91 = sub_241A33FE4(v45, v46, &v93);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v43, (uint64_t (*)(void))sub_241A9260C);
      *(_WORD *)(v33 + 42) = 2080;
      uint64_t v47 = v84;
      sub_241A94368(v84 + *(int *)(v90 + 52), v75, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v48 = sub_241CDB120();
      uint64_t v91 = sub_241A33FE4(v48, v49, &v93);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      uint64_t v50 = v47;
      uint64_t v26 = v74;
      sub_241A91870(v50, (uint64_t (*)(void))sub_241A9260C);
      uint64_t v30 = v72;
      _os_log_impl(&dword_241A23000, v72, (os_log_type_t)v73, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v33, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v34, -1, -1);
      uint64_t v51 = v81;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v51, -1, -1);
      MEMORY[0x245637F20](v33, -1, -1);
    }
    else
    {
      sub_241A91870(v28, (uint64_t (*)(void))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v82, (uint64_t (*)(void))sub_241A9260C);
      sub_241A91870(v29, (uint64_t (*)(void))sub_241A9260C);
      sub_241A91870(v83, (uint64_t (*)(void))sub_241A9260C);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A9260C);
    }

    (*(void (**)(char *, uint64_t))(v79 + 8))(v85, v80);
  }
  os_log_t v52 = *(void **)(v26 + 16);
  uint64_t v53 = a1 + *(int *)(v90 + 52);
  uint64_t v54 = v87;
  sub_241A4145C(v53 + *(int *)(v89 + 28), v87);
  sub_241A92840();
  uint64_t v55 = swift_allocObject();
  uint64_t v56 = v55 + qword_26B0413C0;
  uint64_t v57 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 1, 1, v57);
  id v58 = v52;
  id v59 = objc_msgSend(v58, sel_identifier);
  uint64_t v60 = sub_241CDB0D0();
  uint64_t v62 = v61;

  *(void *)(v55 + 16) = v60;
  *(void *)(v55 + 24) = v62;
  swift_beginAccess();
  sub_241A6862C(v54, v56);
  swift_endAccess();
  uint64_t v91 = v55;
  sub_241A942D8(&qword_26B032D40, (void (*)(uint64_t))sub_241A92840);
  uint64_t v63 = v88;
  uint64_t v64 = sub_241CD87E0();
  if (v63)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v67 = v64;
    uint64_t v68 = v65;
    swift_release();
    sub_241A35680(0, &qword_26B033498, (uint64_t (*)(uint64_t))sub_241A92620, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    uint64_t v70 = v76;
    uint64_t result = sub_241A94368(v53, (uint64_t)v76 + *(int *)(v69 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *uint64_t v70 = v86;
    v70[1] = v67;
    v70[2] = v68;
  }
  return result;
}

uint64_t sub_241A88320@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v78 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v88 = (uint64_t)&v70 - v5;
  uint64_t v90 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v90 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A878();
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v85 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)&v70 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v70 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (uint64_t *)((char *)&v70 - v15);
  uint64_t v16 = type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v16);
  uint64_t v79 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v82 = *(void *)(v18 - 8);
  uint64_t v83 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v86 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v22 = a1[2];
  sub_241A912E0();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 24) = xmmword_241CEBF30;
  *(void *)(v23 + 16) = v21;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v23 + 24);
  *(void *)(v23 + 24) = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241A93440(v24);
  swift_beginAccess();
  uint64_t v87 = v23;
  *(void *)(v23 + 32) = v22;
  swift_release();
  uint64_t v76 = v16;
  uint64_t v25 = v2 + *(int *)(v16 + 20);
  if (objc_msgSend(*(id *)(v25 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    uint64_t v75 = v8;
    sub_241CDA0F0();
    uint64_t v26 = v79;
    sub_241A94368(v2, v79, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
    uint64_t v27 = (uint64_t)v91;
    uint64_t v28 = v80;
    sub_241A94368((uint64_t)v91, (uint64_t)v80, (uint64_t (*)(void))sub_241A3A878);
    uint64_t v29 = v81;
    sub_241A94368(v27, (uint64_t)v81, (uint64_t (*)(void))sub_241A3A878);
    sub_241A94368(v27, v84, (uint64_t (*)(void))sub_241A3A878);
    sub_241A94368(v27, v85, (uint64_t (*)(void))sub_241A3A878);
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB670();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      os_log_t v72 = v34;
      uint64_t v74 = swift_slowAlloc();
      v92[0] = v74;
      *(_DWORD *)uint64_t v33 = 138413315;
      int v73 = v32;
      uint64_t v35 = v26;
      uint64_t v36 = *(void **)(v26 + *(int *)(v76 + 20) + 16);
      os_log_t v71 = v30;
      uint64_t v93 = (uint64_t)v36;
      uint64_t v76 = v25;
      id v37 = v36;
      sub_241CDBBF0();
      *uint64_t v34 = v36;
      sub_241A91870(v35, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v93 = *v28;
      sub_241CD89A0();
      swift_retain();
      uint64_t v38 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v38, v39, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A3A878);
      *(_WORD *)(v33 + 22) = 2081;
      uint64_t v93 = *((void *)v29 + 1);
      sub_241A91264(0);
      swift_retain();
      uint64_t v40 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v40, v41, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A3A878);
      *(_WORD *)(v33 + 32) = 2080;
      uint64_t v42 = v84;
      uint64_t v93 = *(void *)(v84 + 16);
      uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
      sub_241A35680(0, &qword_26B032148, MEMORY[0x263F44308], MEMORY[0x263F8D8F0]);
      swift_retain();
      uint64_t v43 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v43, v44, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v42, (uint64_t (*)(void))sub_241A3A878);
      *(_WORD *)(v33 + 42) = 2080;
      uint64_t v8 = v75;
      uint64_t v45 = v85;
      sub_241A94368(v85 + *(int *)(v75 + 52), v77, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v46 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v46, v47, v92);
      uint64_t v25 = v76;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v45, (uint64_t (*)(void))sub_241A3A878);
      os_log_t v48 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v73, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v33, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, v81);
      unint64_t v49 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      uint64_t v50 = v74;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v50, -1, -1);
      MEMORY[0x245637F20](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
    }
    else
    {
      sub_241A91870(v26, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A3A878);
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A3A878);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A3A878);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A3A878);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
      uint64_t v8 = v75;
    }
  }
  uint64_t v51 = *(void **)(v25 + 16);
  uint64_t v52 = (uint64_t)v91 + *(int *)(v8 + 52);
  uint64_t v53 = v88;
  sub_241A4145C(v52 + *(int *)(v90 + 28), v88);
  sub_241A916BC();
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v54 + qword_26B0413C0;
  uint64_t v56 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
  id v57 = v51;
  id v58 = objc_msgSend(v57, sel_identifier);
  uint64_t v59 = sub_241CDB0D0();
  uint64_t v61 = v60;

  *(void *)(v54 + 16) = v59;
  *(void *)(v54 + 24) = v61;
  swift_beginAccess();
  sub_241A6862C(v53, v55);
  swift_endAccess();
  v92[0] = v54;
  sub_241A942D8(&qword_26B032DB0, (void (*)(uint64_t))sub_241A916BC);
  uint64_t v62 = v89;
  uint64_t v63 = sub_241CD87E0();
  if (v62)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v66 = v63;
    uint64_t v67 = v64;
    swift_release();
    sub_241A35680(0, &qword_26B0334D0, (uint64_t (*)(uint64_t))sub_241A912E0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    uint64_t v69 = v78;
    uint64_t result = sub_241A94368(v52, (uint64_t)v78 + *(int *)(v68 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    uint64_t *v69 = v87;
    v69[1] = v66;
    v69[2] = v67;
  }
  return result;
}

uint64_t sub_241A88D7C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v79 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v89 = (uint64_t)&v74 - v4;
  uint64_t v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v78 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A93604(0);
  uint64_t v91 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v86 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v85 = (uint64_t)&v74 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v84 = (uint64_t)&v74 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v83 = (void **)((char *)&v74 - v14);
  uint64_t v15 = type metadata accessor for ECGSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v80 = *(void *)(v18 - 8);
  uint64_t v81 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v87 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void *)(a1 + 8);
  char v22 = *(unsigned char *)(a1 + 16);
  sub_241A93618();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 24) = 1;
  uint64_t v24 = (uint64_t *)(v23 + 24);
  *(unsigned char *)(v23 + 32) = 1;
  uint64_t v25 = (unsigned char *)(v23 + 32);
  uint64_t v88 = v23;
  *(void *)(v23 + 16) = v20;
  swift_beginAccess();
  uint64_t v26 = *v24;
  *uint64_t v24 = v21;
  swift_retain();
  uint64_t v27 = v82;
  swift_retain();
  sub_241A93440(v26);
  swift_beginAccess();
  *uint64_t v25 = v22;
  uint64_t v28 = v5;
  uint64_t v29 = v27 + *(int *)(v15 + 20);
  if (objc_msgSend(*(id *)(v29 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_241CDA0F0();
    uint64_t v30 = (uint64_t)v17;
    sub_241A94368(v27, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ECGSnidgetFeedItemModelProvider);
    sub_241A94368(a1, (uint64_t)v83, (uint64_t (*)(void))sub_241A93604);
    sub_241A94368(a1, v84, (uint64_t (*)(void))sub_241A93604);
    sub_241A94368(a1, v85, (uint64_t (*)(void))sub_241A93604);
    sub_241A94368(a1, v86, (uint64_t (*)(void))sub_241A93604);
    os_log_type_t v31 = sub_241CDA190();
    os_log_type_t v32 = sub_241CDB670();
    int v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v34 = swift_slowAlloc();
      int v76 = v33;
      uint64_t v35 = v34;
      uint64_t v36 = (void *)swift_slowAlloc();
      uint64_t v74 = v36;
      uint64_t v77 = swift_slowAlloc();
      v92[0] = v77;
      *(_DWORD *)uint64_t v35 = 138413315;
      os_log_t v75 = v31;
      uint64_t v37 = v30 + *(int *)(v15 + 20);
      uint64_t v82 = v29;
      uint64_t v38 = *(void **)(v37 + 16);
      uint64_t v93 = (uint64_t)v38;
      id v39 = v38;
      sub_241CDBBF0();
      *uint64_t v36 = v38;
      uint64_t v40 = v28;
      sub_241A91870(v30, (uint64_t (*)(void))type metadata accessor for ECGSnidgetFeedItemModelProvider);
      *(_WORD *)(v35 + 12) = 2080;
      unint64_t v41 = v83;
      uint64_t v93 = *v83;
      sub_241CD89A0();
      swift_retain();
      uint64_t v42 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v42, v43, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v41, (uint64_t (*)(void))sub_241A93604);
      *(_WORD *)(v35 + 22) = 2081;
      uint64_t v44 = v84;
      uint64_t v93 = *(void *)(v84 + 8);
      sub_241A91264(0);
      swift_retain();
      uint64_t v45 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v45, v46, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v44, (uint64_t (*)(void))sub_241A93604);
      *(_WORD *)(v35 + 32) = 2080;
      uint64_t v47 = v85;
      LOBYTE(v93) = *(unsigned char *)(v85 + 16);
      sub_241A94320(0, &qword_26B0333F0);
      uint64_t v48 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v48, v49, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v47, (uint64_t (*)(void))sub_241A93604);
      *(_WORD *)(v35 + 42) = 2080;
      uint64_t v50 = v86;
      sub_241A94368(v86 + *(int *)(v91 + 52), v78, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v28 = v40;
      uint64_t v51 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v51, v52, v92);
      sub_241CDBBF0();
      uint64_t v29 = v82;
      swift_bridgeObjectRelease();
      sub_241A91870(v50, (uint64_t (*)(void))sub_241A93604);
      os_log_type_t v31 = v75;
      _os_log_impl(&dword_241A23000, v75, (os_log_type_t)v76, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v35, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, MEMORY[0x263F8D8F0]);
      uint64_t v53 = v74;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v53, -1, -1);
      uint64_t v54 = v77;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v54, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);
    }
    else
    {
      sub_241A91870(v30, (uint64_t (*)(void))type metadata accessor for ECGSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v83, (uint64_t (*)(void))sub_241A93604);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A93604);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A93604);
      sub_241A91870(v86, (uint64_t (*)(void))sub_241A93604);
    }

    (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v81);
  }
  uint64_t v55 = *(void **)(v29 + 16);
  uint64_t v56 = a1 + *(int *)(v91 + 52);
  uint64_t v57 = v89;
  sub_241A4145C(v56 + *(int *)(v28 + 28), v89);
  sub_241A93838();
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = v58 + qword_26B0413C0;
  uint64_t v60 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
  id v61 = v55;
  id v62 = objc_msgSend(v61, sel_identifier);
  uint64_t v63 = sub_241CDB0D0();
  uint64_t v65 = v64;

  *(void *)(v58 + 16) = v63;
  *(void *)(v58 + 24) = v65;
  swift_beginAccess();
  sub_241A6862C(v57, v59);
  swift_endAccess();
  v92[0] = v58;
  sub_241A942D8(&qword_26B032D60, (void (*)(uint64_t))sub_241A93838);
  uint64_t v66 = v90;
  uint64_t v67 = sub_241CD87E0();
  if (v66)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v70 = v67;
    uint64_t v71 = v68;
    swift_release();
    sub_241A35680(0, &qword_26B0334A8, (uint64_t (*)(uint64_t))sub_241A93618, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    int v73 = v79;
    uint64_t result = sub_241A94368(v56, (uint64_t)v79 + *(int *)(v72 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *int v73 = v88;
    v73[1] = v70;
    v73[2] = v71;
  }
  return result;
}

uint64_t sub_241A89760@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v78 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v88 = (uint64_t)&v70 - v5;
  uint64_t v90 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v90 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A92964(0);
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v85 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)&v70 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v70 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (uint64_t *)((char *)&v70 - v15);
  uint64_t v16 = type metadata accessor for SleepSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v16);
  uint64_t v79 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v82 = *(void *)(v18 - 8);
  uint64_t v83 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v86 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v22 = a1[2];
  sub_241A92998();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 24) = xmmword_241CEBF30;
  *(void *)(v23 + 16) = v21;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v23 + 24);
  *(void *)(v23 + 24) = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241A93440(v24);
  swift_beginAccess();
  uint64_t v87 = v23;
  *(void *)(v23 + 32) = v22;
  swift_release();
  uint64_t v76 = v16;
  uint64_t v25 = v2 + *(int *)(v16 + 20);
  if (objc_msgSend(*(id *)(v25 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    uint64_t v75 = v8;
    sub_241CDA0F0();
    uint64_t v26 = v79;
    sub_241A94368(v2, v79, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
    uint64_t v27 = (uint64_t)v91;
    uint64_t v28 = v80;
    sub_241A94368((uint64_t)v91, (uint64_t)v80, (uint64_t (*)(void))sub_241A92964);
    uint64_t v29 = v81;
    sub_241A94368(v27, (uint64_t)v81, (uint64_t (*)(void))sub_241A92964);
    sub_241A94368(v27, v84, (uint64_t (*)(void))sub_241A92964);
    sub_241A94368(v27, v85, (uint64_t (*)(void))sub_241A92964);
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB670();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v72 = v34;
      uint64_t v74 = swift_slowAlloc();
      v92[0] = v74;
      *(_DWORD *)uint64_t v33 = 138413315;
      int v73 = v32;
      uint64_t v35 = v26;
      uint64_t v36 = *(void **)(v26 + *(int *)(v76 + 20) + 16);
      os_log_t v71 = v30;
      uint64_t v93 = (uint64_t)v36;
      uint64_t v76 = v25;
      id v37 = v36;
      sub_241CDBBF0();
      *uint64_t v34 = v36;
      sub_241A91870(v35, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v93 = *v28;
      sub_241CD89A0();
      swift_retain();
      uint64_t v38 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v38, v39, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A92964);
      *(_WORD *)(v33 + 22) = 2081;
      uint64_t v93 = *((void *)v29 + 1);
      sub_241A91264(0);
      swift_retain();
      uint64_t v40 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v40, v41, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A92964);
      *(_WORD *)(v33 + 32) = 2080;
      uint64_t v42 = v84;
      uint64_t v93 = *(void *)(v84 + 16);
      uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
      sub_241A35680(0, &qword_26B032F40, (uint64_t (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel, MEMORY[0x263F8D8F0]);
      swift_retain();
      uint64_t v43 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v43, v44, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v42, (uint64_t (*)(void))sub_241A92964);
      *(_WORD *)(v33 + 42) = 2080;
      uint64_t v8 = v75;
      uint64_t v45 = v85;
      sub_241A94368(v85 + *(int *)(v75 + 52), v77, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v46 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v46, v47, v92);
      uint64_t v25 = v76;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v45, (uint64_t (*)(void))sub_241A92964);
      os_log_t v48 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v73, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v33, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, v81);
      unint64_t v49 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      uint64_t v50 = v74;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v50, -1, -1);
      MEMORY[0x245637F20](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
    }
    else
    {
      sub_241A91870(v26, (uint64_t (*)(void))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A92964);
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A92964);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A92964);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A92964);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
      uint64_t v8 = v75;
    }
  }
  uint64_t v51 = *(void **)(v25 + 16);
  uint64_t v52 = (uint64_t)v91 + *(int *)(v8 + 52);
  uint64_t v53 = v88;
  sub_241A4145C(v52 + *(int *)(v90 + 28), v88);
  sub_241A92B64();
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v54 + qword_26B0413C0;
  uint64_t v56 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
  id v57 = v51;
  id v58 = objc_msgSend(v57, sel_identifier);
  uint64_t v59 = sub_241CDB0D0();
  uint64_t v61 = v60;

  *(void *)(v54 + 16) = v59;
  *(void *)(v54 + 24) = v61;
  swift_beginAccess();
  sub_241A6862C(v53, v55);
  swift_endAccess();
  v92[0] = v54;
  sub_241A942D8(&qword_26B032D90, (void (*)(uint64_t))sub_241A92B64);
  uint64_t v62 = v89;
  uint64_t v63 = sub_241CD87E0();
  if (v62)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v66 = v63;
    uint64_t v67 = v64;
    swift_release();
    sub_241A35680(0, &qword_26B0334C0, (uint64_t (*)(uint64_t))sub_241A92998, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    uint64_t v69 = v78;
    uint64_t result = sub_241A94368(v52, (uint64_t)v78 + *(int *)(v68 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    uint64_t *v69 = v87;
    v69[1] = v66;
    v69[2] = v67;
  }
  return result;
}

uint64_t sub_241A8A1BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v80 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v93 = (uint64_t)&v77 - v4;
  uint64_t v96 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v96);
  uint64_t v79 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A91DB4(0);
  uint64_t v95 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v90 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v84 = (os_log_t *)((char *)&v77 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v89 = (uint64_t)&v77 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v88 = (uint64_t *)((char *)&v77 - v13);
  uint64_t v86 = type metadata accessor for BalanceSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v86);
  uint64_t v81 = (uint64_t)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_241CDA1A0();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v91 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1;
  uint64_t v85 = a1;
  uint64_t v17 = *a1;
  uint64_t v18 = v16[1];
  uint64_t v19 = v16[2];
  uint64_t v21 = v16[3];
  uint64_t v20 = v16[4];
  sub_241A91DC8();
  uint64_t v22 = (void *)swift_allocObject();
  v22[3] = 1;
  v22[5] = 0;
  v22[6] = 0;
  v22[4] = 0;
  long long v22[2] = v17;
  swift_beginAccess();
  uint64_t v23 = v22[3];
  v22[3] = v18;
  swift_retain();
  sub_241A91FC8(v19);
  uint64_t v24 = v87;
  swift_retain();
  uint64_t v25 = v23;
  uint64_t v26 = v95;
  sub_241A93440(v25);
  swift_beginAccess();
  uint64_t v27 = v22[4];
  v22[4] = v19;
  v22[5] = v21;
  v22[6] = v20;
  uint64_t v28 = (uint64_t)v85;
  uint64_t v29 = v86;
  char v92 = v22;
  sub_241A92014(v27);
  uint64_t v30 = v24 + *(int *)(v29 + 20);
  if (objc_msgSend(*(id *)(v30 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_241CDA0F0();
    uint64_t v31 = v81;
    sub_241A94368(v24, v81, (uint64_t (*)(void))type metadata accessor for BalanceSnidgetFeedItemModelProvider);
    sub_241A94368(v28, (uint64_t)v88, (uint64_t (*)(void))sub_241A91DB4);
    sub_241A94368(v28, v89, (uint64_t (*)(void))sub_241A91DB4);
    int v32 = v84;
    sub_241A94368(v28, (uint64_t)v84, (uint64_t (*)(void))sub_241A91DB4);
    sub_241A94368(v28, v90, (uint64_t (*)(void))sub_241A91DB4);
    uint64_t v33 = sub_241CDA190();
    os_log_type_t v34 = sub_241CDB670();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      id v37 = (void *)swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      uint64_t v100 = v87;
      *(_DWORD *)uint64_t v36 = 138413315;
      int v78 = v35;
      uint64_t v38 = v31 + *(int *)(v29 + 20);
      uint64_t v39 = v31;
      uint64_t v40 = *(void **)(v38 + 16);
      os_log_t v77 = v33;
      uint64_t v97 = (uint64_t)v40;
      uint64_t v86 = v30;
      id v41 = v40;
      sub_241CDBBF0();
      *id v37 = v40;
      sub_241A91870(v39, (uint64_t (*)(void))type metadata accessor for BalanceSnidgetFeedItemModelProvider);
      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v42 = v88;
      uint64_t v97 = *v88;
      sub_241CD89A0();
      swift_retain();
      uint64_t v43 = sub_241CDB120();
      uint64_t v97 = sub_241A33FE4(v43, v44, &v100);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v42, (uint64_t (*)(void))sub_241A91DB4);
      *(_WORD *)(v36 + 22) = 2081;
      uint64_t v45 = v89;
      uint64_t v97 = *(void *)(v89 + 8);
      sub_241A91264(0);
      swift_retain();
      uint64_t v46 = sub_241CDB120();
      uint64_t v97 = sub_241A33FE4(v46, v47, &v100);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v45, (uint64_t (*)(void))sub_241A91DB4);
      *(_WORD *)(v36 + 32) = 2080;
      os_log_t v48 = v84;
      uint64_t v49 = v84[3];
      uint64_t v50 = v84[4];
      uint64_t v97 = v84[2];
      uint64_t v98 = v49;
      uint64_t v99 = v50;
      sub_241A91FC8(v97);
      sub_241A94320(0, &qword_26B035EC8);
      uint64_t v51 = sub_241CDB120();
      uint64_t v97 = sub_241A33FE4(v51, v52, &v100);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v48, (uint64_t (*)(void))sub_241A91DB4);
      *(_WORD *)(v36 + 42) = 2080;
      uint64_t v26 = v95;
      uint64_t v53 = v90;
      sub_241A94368(v90 + *(int *)(v95 + 52), v79, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v54 = sub_241CDB120();
      uint64_t v97 = sub_241A33FE4(v54, v55, &v100);
      sub_241CDBBF0();
      uint64_t v30 = v86;
      swift_bridgeObjectRelease();
      sub_241A91870(v53, (uint64_t (*)(void))sub_241A91DB4);
      os_log_t v56 = v77;
      _os_log_impl(&dword_241A23000, v77, (os_log_type_t)v78, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v36, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v37, -1, -1);
      uint64_t v57 = v87;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v57, -1, -1);
      MEMORY[0x245637F20](v36, -1, -1);
    }
    else
    {
      sub_241A91870(v31, (uint64_t (*)(void))type metadata accessor for BalanceSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v88, (uint64_t (*)(void))sub_241A91DB4);
      sub_241A91870(v89, (uint64_t (*)(void))sub_241A91DB4);
      sub_241A91870((uint64_t)v32, (uint64_t (*)(void))sub_241A91DB4);
      sub_241A91870(v90, (uint64_t (*)(void))sub_241A91DB4);
    }
    (*(void (**)(char *, uint64_t))(v82 + 8))(v91, v83);
  }
  id v58 = *(void **)(v30 + 16);
  uint64_t v59 = v28 + *(int *)(v26 + 52);
  uint64_t v60 = v93;
  sub_241A4145C(v59 + *(int *)(v96 + 28), v93);
  sub_241A92060();
  uint64_t v61 = swift_allocObject();
  uint64_t v62 = v61 + qword_26B0413C0;
  uint64_t v63 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 1, 1, v63);
  id v64 = v58;
  id v65 = objc_msgSend(v64, sel_identifier);
  uint64_t v66 = sub_241CDB0D0();
  uint64_t v68 = v67;

  *(void *)(v61 + 16) = v66;
  *(void *)(v61 + 24) = v68;
  swift_beginAccess();
  sub_241A6862C(v60, v62);
  swift_endAccess();
  uint64_t v97 = v61;
  sub_241A942D8(&qword_26B035C10, (void (*)(uint64_t))sub_241A92060);
  uint64_t v69 = v94;
  uint64_t v70 = sub_241CD87E0();
  if (v69)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v73 = v70;
    uint64_t v74 = v71;
    swift_release();
    sub_241A35680(0, &qword_26B035C40, (uint64_t (*)(uint64_t))sub_241A91DC8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    uint64_t v76 = v80;
    uint64_t result = sub_241A94368(v59, (uint64_t)v80 + *(int *)(v75 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    void *v76 = v92;
    v76[1] = v73;
    v76[2] = v74;
  }
  return result;
}

uint64_t sub_241A8ABEC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v91 = a1;
  int v78 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v88 = (uint64_t)&v70 - v5;
  uint64_t v90 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v90 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A9395C(0);
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v85 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)&v70 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v70 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (uint64_t *)((char *)&v70 - v15);
  uint64_t v16 = type metadata accessor for AudiogramSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v16);
  uint64_t v79 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v82 = *(void *)(v18 - 8);
  uint64_t v83 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v86 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v22 = a1[2];
  sub_241A93A0C();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 24) = xmmword_241CEBF30;
  *(void *)(v23 + 16) = v21;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v23 + 24);
  *(void *)(v23 + 24) = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241A93440(v24);
  swift_beginAccess();
  uint64_t v87 = v23;
  *(void *)(v23 + 32) = v22;
  swift_release();
  uint64_t v76 = v16;
  uint64_t v25 = v2 + *(int *)(v16 + 20);
  if (objc_msgSend(*(id *)(v25 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    uint64_t v75 = v8;
    sub_241CDA0F0();
    uint64_t v26 = v79;
    sub_241A94368(v2, v79, (uint64_t (*)(void))type metadata accessor for AudiogramSnidgetFeedItemModelProvider);
    uint64_t v27 = (uint64_t)v91;
    uint64_t v28 = v80;
    sub_241A94368((uint64_t)v91, (uint64_t)v80, (uint64_t (*)(void))sub_241A9395C);
    uint64_t v29 = v81;
    sub_241A94368(v27, (uint64_t)v81, (uint64_t (*)(void))sub_241A9395C);
    sub_241A94368(v27, v84, (uint64_t (*)(void))sub_241A9395C);
    sub_241A94368(v27, v85, (uint64_t (*)(void))sub_241A9395C);
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB670();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      os_log_type_t v34 = (void *)swift_slowAlloc();
      uint64_t v72 = v34;
      uint64_t v74 = swift_slowAlloc();
      v92[0] = v74;
      *(_DWORD *)uint64_t v33 = 138413315;
      int v73 = v32;
      uint64_t v35 = v26;
      uint64_t v36 = *(void **)(v26 + *(int *)(v76 + 20) + 16);
      os_log_t v71 = v30;
      uint64_t v93 = (uint64_t)v36;
      uint64_t v76 = v25;
      id v37 = v36;
      sub_241CDBBF0();
      *os_log_type_t v34 = v36;
      sub_241A91870(v35, (uint64_t (*)(void))type metadata accessor for AudiogramSnidgetFeedItemModelProvider);
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v93 = *v28;
      sub_241CD89A0();
      swift_retain();
      uint64_t v38 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v38, v39, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A9395C);
      *(_WORD *)(v33 + 22) = 2081;
      uint64_t v93 = *((void *)v29 + 1);
      sub_241A93990(0);
      swift_retain();
      uint64_t v40 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v40, v41, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A9395C);
      *(_WORD *)(v33 + 32) = 2080;
      uint64_t v42 = v84;
      uint64_t v93 = *(void *)(v84 + 16);
      uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
      sub_241A35680(0, &qword_26B032148, MEMORY[0x263F44308], MEMORY[0x263F8D8F0]);
      swift_retain();
      uint64_t v43 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v43, v44, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v42, (uint64_t (*)(void))sub_241A9395C);
      *(_WORD *)(v33 + 42) = 2080;
      uint64_t v8 = v75;
      uint64_t v45 = v85;
      sub_241A94368(v85 + *(int *)(v75 + 52), v77, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v46 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v46, v47, v92);
      uint64_t v25 = v76;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v45, (uint64_t (*)(void))sub_241A9395C);
      os_log_t v48 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v73, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v33, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, v81);
      uint64_t v49 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      uint64_t v50 = v74;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v50, -1, -1);
      MEMORY[0x245637F20](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
    }
    else
    {
      sub_241A91870(v26, (uint64_t (*)(void))type metadata accessor for AudiogramSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A9395C);
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A9395C);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A9395C);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A9395C);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
      uint64_t v8 = v75;
    }
  }
  uint64_t v51 = *(void **)(v25 + 16);
  uint64_t v52 = (uint64_t)v91 + *(int *)(v8 + 52);
  uint64_t v53 = v88;
  sub_241A4145C(v52 + *(int *)(v90 + 28), v88);
  sub_241A93DCC();
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v54 + qword_26B0413C0;
  uint64_t v56 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
  id v57 = v51;
  id v58 = objc_msgSend(v57, sel_identifier);
  uint64_t v59 = sub_241CDB0D0();
  uint64_t v61 = v60;

  *(void *)(v54 + 16) = v59;
  *(void *)(v54 + 24) = v61;
  swift_beginAccess();
  sub_241A6862C(v53, v55);
  swift_endAccess();
  v92[0] = v54;
  sub_241A942D8(&qword_26B037E00, (void (*)(uint64_t))sub_241A93DCC);
  uint64_t v62 = v89;
  uint64_t v63 = sub_241CD87E0();
  if (v62)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v66 = v63;
    uint64_t v67 = v64;
    swift_release();
    sub_241A35680(0, &qword_26B037E20, (uint64_t (*)(uint64_t))sub_241A93A0C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    uint64_t v69 = v78;
    uint64_t result = sub_241A94368(v52, (uint64_t)v78 + *(int *)(v68 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    uint64_t *v69 = v87;
    v69[1] = v66;
    v69[2] = v67;
  }
  return result;
}

uint64_t sub_241A8B648@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v79 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v89 = (uint64_t)&v74 - v4;
  uint64_t v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v78 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A93F80(0);
  uint64_t v91 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v86 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v85 = (uint64_t)&v74 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v84 = (uint64_t)&v74 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v83 = (void **)((char *)&v74 - v14);
  uint64_t v15 = type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v80 = *(void *)(v18 - 8);
  uint64_t v81 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v87 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void *)(a1 + 8);
  char v22 = *(unsigned char *)(a1 + 16);
  sub_241A93F94();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 24) = 1;
  uint64_t v24 = (uint64_t *)(v23 + 24);
  *(unsigned char *)(v23 + 32) = 1;
  uint64_t v25 = (unsigned char *)(v23 + 32);
  uint64_t v88 = v23;
  *(void *)(v23 + 16) = v20;
  swift_beginAccess();
  uint64_t v26 = *v24;
  *uint64_t v24 = v21;
  swift_retain();
  uint64_t v27 = v82;
  swift_retain();
  sub_241A93440(v26);
  swift_beginAccess();
  *uint64_t v25 = v22;
  uint64_t v28 = v5;
  uint64_t v29 = v27 + *(int *)(v15 + 20);
  if (objc_msgSend(*(id *)(v29 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_241CDA0F0();
    uint64_t v30 = (uint64_t)v17;
    sub_241A94368(v27, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
    sub_241A94368(a1, (uint64_t)v83, (uint64_t (*)(void))sub_241A93F80);
    sub_241A94368(a1, v84, (uint64_t (*)(void))sub_241A93F80);
    sub_241A94368(a1, v85, (uint64_t (*)(void))sub_241A93F80);
    sub_241A94368(a1, v86, (uint64_t (*)(void))sub_241A93F80);
    os_log_type_t v31 = sub_241CDA190();
    os_log_type_t v32 = sub_241CDB670();
    int v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v34 = swift_slowAlloc();
      int v76 = v33;
      uint64_t v35 = v34;
      uint64_t v36 = (void *)swift_slowAlloc();
      uint64_t v74 = v36;
      uint64_t v77 = swift_slowAlloc();
      v92[0] = v77;
      *(_DWORD *)uint64_t v35 = 138413315;
      os_log_t v75 = v31;
      uint64_t v37 = v30 + *(int *)(v15 + 20);
      uint64_t v82 = v29;
      uint64_t v38 = *(void **)(v37 + 16);
      uint64_t v93 = (uint64_t)v38;
      id v39 = v38;
      sub_241CDBBF0();
      *uint64_t v36 = v38;
      uint64_t v40 = v28;
      sub_241A91870(v30, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
      *(_WORD *)(v35 + 12) = 2080;
      unint64_t v41 = v83;
      uint64_t v93 = *v83;
      sub_241CD89A0();
      swift_retain();
      uint64_t v42 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v42, v43, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v41, (uint64_t (*)(void))sub_241A93F80);
      *(_WORD *)(v35 + 22) = 2081;
      uint64_t v44 = v84;
      uint64_t v93 = *(void *)(v84 + 8);
      sub_241A91264(0);
      swift_retain();
      uint64_t v45 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v45, v46, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v44, (uint64_t (*)(void))sub_241A93F80);
      *(_WORD *)(v35 + 32) = 2080;
      uint64_t v47 = v85;
      LOBYTE(v93) = *(unsigned char *)(v85 + 16);
      sub_241A94320(0, &qword_26B0334E8);
      uint64_t v48 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v48, v49, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v47, (uint64_t (*)(void))sub_241A93F80);
      *(_WORD *)(v35 + 42) = 2080;
      uint64_t v50 = v86;
      sub_241A94368(v86 + *(int *)(v91 + 52), v78, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v28 = v40;
      uint64_t v51 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v51, v52, v92);
      sub_241CDBBF0();
      uint64_t v29 = v82;
      swift_bridgeObjectRelease();
      sub_241A91870(v50, (uint64_t (*)(void))sub_241A93F80);
      os_log_type_t v31 = v75;
      _os_log_impl(&dword_241A23000, v75, (os_log_type_t)v76, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v35, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, MEMORY[0x263F8D8F0]);
      uint64_t v53 = v74;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v53, -1, -1);
      uint64_t v54 = v77;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v54, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);
    }
    else
    {
      sub_241A91870(v30, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v83, (uint64_t (*)(void))sub_241A93F80);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A93F80);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A93F80);
      sub_241A91870(v86, (uint64_t (*)(void))sub_241A93F80);
    }

    (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v81);
  }
  uint64_t v55 = *(void **)(v29 + 16);
  uint64_t v56 = a1 + *(int *)(v91 + 52);
  uint64_t v57 = v89;
  sub_241A4145C(v56 + *(int *)(v28 + 28), v89);
  sub_241A941B4();
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = v58 + qword_26B0413C0;
  uint64_t v60 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
  id v61 = v55;
  id v62 = objc_msgSend(v61, sel_identifier);
  uint64_t v63 = sub_241CDB0D0();
  uint64_t v65 = v64;

  *(void *)(v58 + 16) = v63;
  *(void *)(v58 + 24) = v65;
  swift_beginAccess();
  sub_241A6862C(v57, v59);
  swift_endAccess();
  v92[0] = v58;
  sub_241A942D8(&qword_26B032D70, (void (*)(uint64_t))sub_241A941B4);
  uint64_t v66 = v90;
  uint64_t v67 = sub_241CD87E0();
  if (v66)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v70 = v67;
    uint64_t v71 = v68;
    swift_release();
    sub_241A35680(0, &qword_26B0334B0, (uint64_t (*)(uint64_t))sub_241A93F94, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    int v73 = v79;
    uint64_t result = sub_241A94368(v56, (uint64_t)v79 + *(int *)(v72 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *int v73 = v88;
    v73[1] = v70;
    v73[2] = v71;
  }
  return result;
}

uint64_t sub_241A8C02C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v78 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v88 = (uint64_t)&v70 - v5;
  uint64_t v90 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v90 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A93034(0);
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v85 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)&v70 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v70 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (uint64_t *)((char *)&v70 - v15);
  uint64_t v16 = type metadata accessor for AudioExposureSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v16);
  uint64_t v79 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v82 = *(void *)(v18 - 8);
  uint64_t v83 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v86 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v22 = a1[2];
  sub_241A930E4();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 24) = xmmword_241CEBF30;
  *(void *)(v23 + 16) = v21;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v23 + 24);
  *(void *)(v23 + 24) = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241A93440(v24);
  swift_beginAccess();
  uint64_t v87 = v23;
  *(void *)(v23 + 32) = v22;
  swift_release();
  uint64_t v76 = v16;
  uint64_t v25 = v2 + *(int *)(v16 + 24);
  if (objc_msgSend(*(id *)(v25 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    uint64_t v75 = v8;
    sub_241CDA0F0();
    uint64_t v26 = v79;
    sub_241A94368(v2, v79, (uint64_t (*)(void))type metadata accessor for AudioExposureSnidgetFeedItemModelProvider);
    uint64_t v27 = (uint64_t)v91;
    uint64_t v28 = v80;
    sub_241A94368((uint64_t)v91, (uint64_t)v80, (uint64_t (*)(void))sub_241A93034);
    uint64_t v29 = v81;
    sub_241A94368(v27, (uint64_t)v81, (uint64_t (*)(void))sub_241A93034);
    sub_241A94368(v27, v84, (uint64_t (*)(void))sub_241A93034);
    sub_241A94368(v27, v85, (uint64_t (*)(void))sub_241A93034);
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB670();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v72 = v34;
      uint64_t v74 = swift_slowAlloc();
      v92[0] = v74;
      *(_DWORD *)uint64_t v33 = 138413315;
      int v73 = v32;
      uint64_t v35 = v26;
      uint64_t v36 = *(void **)(v26 + *(int *)(v76 + 24) + 16);
      os_log_t v71 = v30;
      uint64_t v93 = (uint64_t)v36;
      uint64_t v76 = v25;
      id v37 = v36;
      sub_241CDBBF0();
      *uint64_t v34 = v36;
      sub_241A91870(v35, (uint64_t (*)(void))type metadata accessor for AudioExposureSnidgetFeedItemModelProvider);
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v93 = *v28;
      sub_241CD89A0();
      swift_retain();
      uint64_t v38 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v38, v39, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A93034);
      *(_WORD *)(v33 + 22) = 2081;
      uint64_t v93 = *((void *)v29 + 1);
      sub_241A93068(0);
      swift_retain();
      uint64_t v40 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v40, v41, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A93034);
      *(_WORD *)(v33 + 32) = 2080;
      uint64_t v42 = v84;
      uint64_t v93 = *(void *)(v84 + 16);
      uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
      sub_241A35680(0, &qword_26B032148, MEMORY[0x263F44308], MEMORY[0x263F8D8F0]);
      swift_retain();
      uint64_t v43 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v43, v44, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v42, (uint64_t (*)(void))sub_241A93034);
      *(_WORD *)(v33 + 42) = 2080;
      uint64_t v8 = v75;
      uint64_t v45 = v85;
      sub_241A94368(v85 + *(int *)(v75 + 52), v77, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v46 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v46, v47, v92);
      uint64_t v25 = v76;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v45, (uint64_t (*)(void))sub_241A93034);
      os_log_t v48 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v73, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v33, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, v81);
      unint64_t v49 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      uint64_t v50 = v74;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v50, -1, -1);
      MEMORY[0x245637F20](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
    }
    else
    {
      sub_241A91870(v26, (uint64_t (*)(void))type metadata accessor for AudioExposureSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A93034);
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A93034);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A93034);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A93034);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
      uint64_t v8 = v75;
    }
  }
  uint64_t v51 = *(void **)(v25 + 16);
  uint64_t v52 = (uint64_t)v91 + *(int *)(v8 + 52);
  uint64_t v53 = v88;
  sub_241A4145C(v52 + *(int *)(v90 + 28), v88);
  sub_241A93450();
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v54 + qword_26B0413C0;
  uint64_t v56 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
  id v57 = v51;
  id v58 = objc_msgSend(v57, sel_identifier);
  uint64_t v59 = sub_241CDB0D0();
  uint64_t v61 = v60;

  *(void *)(v54 + 16) = v59;
  *(void *)(v54 + 24) = v61;
  swift_beginAccess();
  sub_241A6862C(v53, v55);
  swift_endAccess();
  v92[0] = v54;
  sub_241A942D8(&qword_26B032D30, (void (*)(uint64_t))sub_241A93450);
  uint64_t v62 = v89;
  uint64_t v63 = sub_241CD87E0();
  if (v62)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v66 = v63;
    uint64_t v67 = v64;
    swift_release();
    sub_241A35680(0, &qword_26B033490, (uint64_t (*)(uint64_t))sub_241A930E4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    uint64_t v69 = v78;
    uint64_t result = sub_241A94368(v52, (uint64_t)v78 + *(int *)(v68 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    uint64_t *v69 = v87;
    v69[1] = v66;
    v69[2] = v67;
  }
  return result;
}

uint64_t sub_241A8CA88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v79 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v89 = (uint64_t)&v74 - v4;
  uint64_t v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v78 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A92CDC(0);
  uint64_t v91 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v86 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v85 = (uint64_t)&v74 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v84 = (uint64_t)&v74 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v83 = (void **)((char *)&v74 - v14);
  uint64_t v15 = type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v80 = *(void *)(v18 - 8);
  uint64_t v81 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v87 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void *)(a1 + 8);
  char v22 = *(unsigned char *)(a1 + 16);
  sub_241A92CF0();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 24) = 1;
  uint64_t v24 = (uint64_t *)(v23 + 24);
  *(unsigned char *)(v23 + 32) = 1;
  uint64_t v25 = (unsigned char *)(v23 + 32);
  uint64_t v88 = v23;
  *(void *)(v23 + 16) = v20;
  swift_beginAccess();
  uint64_t v26 = *v24;
  *uint64_t v24 = v21;
  swift_retain();
  uint64_t v27 = v82;
  swift_retain();
  sub_241A93440(v26);
  swift_beginAccess();
  *uint64_t v25 = v22;
  uint64_t v28 = v5;
  uint64_t v29 = v27 + *(int *)(v15 + 20);
  if (objc_msgSend(*(id *)(v29 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_241CDA0F0();
    uint64_t v30 = (uint64_t)v17;
    sub_241A94368(v27, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider);
    sub_241A94368(a1, (uint64_t)v83, (uint64_t (*)(void))sub_241A92CDC);
    sub_241A94368(a1, v84, (uint64_t (*)(void))sub_241A92CDC);
    sub_241A94368(a1, v85, (uint64_t (*)(void))sub_241A92CDC);
    sub_241A94368(a1, v86, (uint64_t (*)(void))sub_241A92CDC);
    os_log_type_t v31 = sub_241CDA190();
    os_log_type_t v32 = sub_241CDB670();
    int v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v34 = swift_slowAlloc();
      int v76 = v33;
      uint64_t v35 = v34;
      uint64_t v36 = (void *)swift_slowAlloc();
      uint64_t v74 = v36;
      uint64_t v77 = swift_slowAlloc();
      v92[0] = v77;
      *(_DWORD *)uint64_t v35 = 138413315;
      os_log_t v75 = v31;
      uint64_t v37 = v30 + *(int *)(v15 + 20);
      uint64_t v82 = v29;
      uint64_t v38 = *(void **)(v37 + 16);
      uint64_t v93 = (uint64_t)v38;
      id v39 = v38;
      sub_241CDBBF0();
      *uint64_t v36 = v38;
      uint64_t v40 = v28;
      sub_241A91870(v30, (uint64_t (*)(void))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider);
      *(_WORD *)(v35 + 12) = 2080;
      unint64_t v41 = v83;
      uint64_t v93 = *v83;
      sub_241CD89A0();
      swift_retain();
      uint64_t v42 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v42, v43, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v41, (uint64_t (*)(void))sub_241A92CDC);
      *(_WORD *)(v35 + 22) = 2081;
      uint64_t v44 = v84;
      uint64_t v93 = *(void *)(v84 + 8);
      sub_241A91264(0);
      swift_retain();
      uint64_t v45 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v45, v46, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v44, (uint64_t (*)(void))sub_241A92CDC);
      *(_WORD *)(v35 + 32) = 2080;
      uint64_t v47 = v85;
      LOBYTE(v93) = *(unsigned char *)(v85 + 16);
      sub_241A94320(0, &qword_26B0335A8);
      uint64_t v48 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v48, v49, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v47, (uint64_t (*)(void))sub_241A92CDC);
      *(_WORD *)(v35 + 42) = 2080;
      uint64_t v50 = v86;
      sub_241A94368(v86 + *(int *)(v91 + 52), v78, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v28 = v40;
      uint64_t v51 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v51, v52, v92);
      sub_241CDBBF0();
      uint64_t v29 = v82;
      swift_bridgeObjectRelease();
      sub_241A91870(v50, (uint64_t (*)(void))sub_241A92CDC);
      os_log_type_t v31 = v75;
      _os_log_impl(&dword_241A23000, v75, (os_log_type_t)v76, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v35, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, MEMORY[0x263F8D8F0]);
      uint64_t v53 = v74;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v53, -1, -1);
      uint64_t v54 = v77;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v54, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);
    }
    else
    {
      sub_241A91870(v30, (uint64_t (*)(void))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v83, (uint64_t (*)(void))sub_241A92CDC);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A92CDC);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A92CDC);
      sub_241A91870(v86, (uint64_t (*)(void))sub_241A92CDC);
    }

    (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v81);
  }
  uint64_t v55 = *(void **)(v29 + 16);
  uint64_t v56 = a1 + *(int *)(v91 + 52);
  uint64_t v57 = v89;
  sub_241A4145C(v56 + *(int *)(v28 + 28), v89);
  sub_241A92F10();
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = v58 + qword_26B0413C0;
  uint64_t v60 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
  id v61 = v55;
  id v62 = objc_msgSend(v61, sel_identifier);
  uint64_t v63 = sub_241CDB0D0();
  uint64_t v65 = v64;

  *(void *)(v58 + 16) = v63;
  *(void *)(v58 + 24) = v65;
  swift_beginAccess();
  sub_241A6862C(v57, v59);
  swift_endAccess();
  v92[0] = v58;
  sub_241A942D8(&qword_26B032D80, (void (*)(uint64_t))sub_241A92F10);
  uint64_t v66 = v90;
  uint64_t v67 = sub_241CD87E0();
  if (v66)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v70 = v67;
    uint64_t v71 = v68;
    swift_release();
    sub_241A35680(0, &qword_26B0334B8, (uint64_t (*)(uint64_t))sub_241A92CF0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    int v73 = v79;
    uint64_t result = sub_241A94368(v56, (uint64_t)v79 + *(int *)(v72 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *int v73 = v88;
    v73[1] = v70;
    v73[2] = v71;
  }
  return result;
}

uint64_t sub_241A8D46C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v78 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v88 = (uint64_t)&v70 - v5;
  uint64_t v90 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v90 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A878();
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v85 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)&v70 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v70 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (uint64_t *)((char *)&v70 - v15);
  uint64_t v16 = type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v16);
  uint64_t v79 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v82 = *(void *)(v18 - 8);
  uint64_t v83 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v86 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v22 = a1[2];
  sub_241A912E0();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 24) = xmmword_241CEBF30;
  *(void *)(v23 + 16) = v21;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v23 + 24);
  *(void *)(v23 + 24) = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241A93440(v24);
  swift_beginAccess();
  uint64_t v87 = v23;
  *(void *)(v23 + 32) = v22;
  swift_release();
  uint64_t v76 = v16;
  uint64_t v25 = v2 + *(int *)(v16 + 20);
  if (objc_msgSend(*(id *)(v25 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    uint64_t v75 = v8;
    sub_241CDA0F0();
    uint64_t v26 = v79;
    sub_241A94368(v2, v79, (uint64_t (*)(void))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider);
    uint64_t v27 = (uint64_t)v91;
    uint64_t v28 = v80;
    sub_241A94368((uint64_t)v91, (uint64_t)v80, (uint64_t (*)(void))sub_241A3A878);
    uint64_t v29 = v81;
    sub_241A94368(v27, (uint64_t)v81, (uint64_t (*)(void))sub_241A3A878);
    sub_241A94368(v27, v84, (uint64_t (*)(void))sub_241A3A878);
    sub_241A94368(v27, v85, (uint64_t (*)(void))sub_241A3A878);
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB670();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v72 = v34;
      uint64_t v74 = swift_slowAlloc();
      v92[0] = v74;
      *(_DWORD *)uint64_t v33 = 138413315;
      int v73 = v32;
      uint64_t v35 = v26;
      uint64_t v36 = *(void **)(v26 + *(int *)(v76 + 20) + 16);
      os_log_t v71 = v30;
      uint64_t v93 = (uint64_t)v36;
      uint64_t v76 = v25;
      id v37 = v36;
      sub_241CDBBF0();
      *uint64_t v34 = v36;
      sub_241A91870(v35, (uint64_t (*)(void))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider);
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v93 = *v28;
      sub_241CD89A0();
      swift_retain();
      uint64_t v38 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v38, v39, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A3A878);
      *(_WORD *)(v33 + 22) = 2081;
      uint64_t v93 = *((void *)v29 + 1);
      sub_241A91264(0);
      swift_retain();
      uint64_t v40 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v40, v41, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A3A878);
      *(_WORD *)(v33 + 32) = 2080;
      uint64_t v42 = v84;
      uint64_t v93 = *(void *)(v84 + 16);
      uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
      sub_241A35680(0, &qword_26B032148, MEMORY[0x263F44308], MEMORY[0x263F8D8F0]);
      swift_retain();
      uint64_t v43 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v43, v44, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v42, (uint64_t (*)(void))sub_241A3A878);
      *(_WORD *)(v33 + 42) = 2080;
      uint64_t v8 = v75;
      uint64_t v45 = v85;
      sub_241A94368(v85 + *(int *)(v75 + 52), v77, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v46 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v46, v47, v92);
      uint64_t v25 = v76;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v45, (uint64_t (*)(void))sub_241A3A878);
      os_log_t v48 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v73, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v33, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, v81);
      unint64_t v49 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      uint64_t v50 = v74;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v50, -1, -1);
      MEMORY[0x245637F20](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
    }
    else
    {
      sub_241A91870(v26, (uint64_t (*)(void))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A3A878);
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A3A878);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A3A878);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A3A878);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
      uint64_t v8 = v75;
    }
  }
  uint64_t v51 = *(void **)(v25 + 16);
  uint64_t v52 = (uint64_t)v91 + *(int *)(v8 + 52);
  uint64_t v53 = v88;
  sub_241A4145C(v52 + *(int *)(v90 + 28), v88);
  sub_241A916BC();
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v54 + qword_26B0413C0;
  uint64_t v56 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
  id v57 = v51;
  id v58 = objc_msgSend(v57, sel_identifier);
  uint64_t v59 = sub_241CDB0D0();
  uint64_t v61 = v60;

  *(void *)(v54 + 16) = v59;
  *(void *)(v54 + 24) = v61;
  swift_beginAccess();
  sub_241A6862C(v53, v55);
  swift_endAccess();
  v92[0] = v54;
  sub_241A942D8(&qword_26B032DB0, (void (*)(uint64_t))sub_241A916BC);
  uint64_t v62 = v89;
  uint64_t v63 = sub_241CD87E0();
  if (v62)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v66 = v63;
    uint64_t v67 = v64;
    swift_release();
    sub_241A35680(0, &qword_26B0334D0, (uint64_t (*)(uint64_t))sub_241A912E0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    uint64_t v69 = v78;
    uint64_t result = sub_241A94368(v52, (uint64_t)v78 + *(int *)(v68 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    uint64_t *v69 = v87;
    v69[1] = v66;
    v69[2] = v67;
  }
  return result;
}

uint64_t sub_241A8DEC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v79 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v89 = (uint64_t)&v74 - v4;
  uint64_t v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v78 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A92CDC(0);
  uint64_t v91 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v86 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v85 = (uint64_t)&v74 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v84 = (uint64_t)&v74 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v83 = (void **)((char *)&v74 - v14);
  uint64_t v15 = type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v80 = *(void *)(v18 - 8);
  uint64_t v81 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v87 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void *)(a1 + 8);
  char v22 = *(unsigned char *)(a1 + 16);
  sub_241A92CF0();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 24) = 1;
  uint64_t v24 = (uint64_t *)(v23 + 24);
  *(unsigned char *)(v23 + 32) = 1;
  uint64_t v25 = (unsigned char *)(v23 + 32);
  uint64_t v88 = v23;
  *(void *)(v23 + 16) = v20;
  swift_beginAccess();
  uint64_t v26 = *v24;
  *uint64_t v24 = v21;
  swift_retain();
  uint64_t v27 = v82;
  swift_retain();
  sub_241A93440(v26);
  swift_beginAccess();
  *uint64_t v25 = v22;
  uint64_t v28 = v5;
  uint64_t v29 = v27 + *(int *)(v15 + 20);
  if (objc_msgSend(*(id *)(v29 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_241CDA0F0();
    uint64_t v30 = (uint64_t)v17;
    sub_241A94368(v27, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider);
    sub_241A94368(a1, (uint64_t)v83, (uint64_t (*)(void))sub_241A92CDC);
    sub_241A94368(a1, v84, (uint64_t (*)(void))sub_241A92CDC);
    sub_241A94368(a1, v85, (uint64_t (*)(void))sub_241A92CDC);
    sub_241A94368(a1, v86, (uint64_t (*)(void))sub_241A92CDC);
    os_log_type_t v31 = sub_241CDA190();
    os_log_type_t v32 = sub_241CDB670();
    int v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v34 = swift_slowAlloc();
      int v76 = v33;
      uint64_t v35 = v34;
      uint64_t v36 = (void *)swift_slowAlloc();
      uint64_t v74 = v36;
      uint64_t v77 = swift_slowAlloc();
      v92[0] = v77;
      *(_DWORD *)uint64_t v35 = 138413315;
      os_log_t v75 = v31;
      uint64_t v37 = v30 + *(int *)(v15 + 20);
      uint64_t v82 = v29;
      uint64_t v38 = *(void **)(v37 + 16);
      uint64_t v93 = (uint64_t)v38;
      id v39 = v38;
      sub_241CDBBF0();
      *uint64_t v36 = v38;
      uint64_t v40 = v28;
      sub_241A91870(v30, (uint64_t (*)(void))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider);
      *(_WORD *)(v35 + 12) = 2080;
      unint64_t v41 = v83;
      uint64_t v93 = *v83;
      sub_241CD89A0();
      swift_retain();
      uint64_t v42 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v42, v43, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v41, (uint64_t (*)(void))sub_241A92CDC);
      *(_WORD *)(v35 + 22) = 2081;
      uint64_t v44 = v84;
      uint64_t v93 = *(void *)(v84 + 8);
      sub_241A91264(0);
      swift_retain();
      uint64_t v45 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v45, v46, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v44, (uint64_t (*)(void))sub_241A92CDC);
      *(_WORD *)(v35 + 32) = 2080;
      uint64_t v47 = v85;
      LOBYTE(v93) = *(unsigned char *)(v85 + 16);
      sub_241A94320(0, &qword_26B0335A8);
      uint64_t v48 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v48, v49, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v47, (uint64_t (*)(void))sub_241A92CDC);
      *(_WORD *)(v35 + 42) = 2080;
      uint64_t v50 = v86;
      sub_241A94368(v86 + *(int *)(v91 + 52), v78, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v28 = v40;
      uint64_t v51 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v51, v52, v92);
      sub_241CDBBF0();
      uint64_t v29 = v82;
      swift_bridgeObjectRelease();
      sub_241A91870(v50, (uint64_t (*)(void))sub_241A92CDC);
      os_log_type_t v31 = v75;
      _os_log_impl(&dword_241A23000, v75, (os_log_type_t)v76, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v35, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, MEMORY[0x263F8D8F0]);
      uint64_t v53 = v74;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v53, -1, -1);
      uint64_t v54 = v77;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v54, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);
    }
    else
    {
      sub_241A91870(v30, (uint64_t (*)(void))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v83, (uint64_t (*)(void))sub_241A92CDC);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A92CDC);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A92CDC);
      sub_241A91870(v86, (uint64_t (*)(void))sub_241A92CDC);
    }

    (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v81);
  }
  uint64_t v55 = *(void **)(v29 + 16);
  uint64_t v56 = a1 + *(int *)(v91 + 52);
  uint64_t v57 = v89;
  sub_241A4145C(v56 + *(int *)(v28 + 28), v89);
  sub_241A92F10();
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = v58 + qword_26B0413C0;
  uint64_t v60 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
  id v61 = v55;
  id v62 = objc_msgSend(v61, sel_identifier);
  uint64_t v63 = sub_241CDB0D0();
  uint64_t v65 = v64;

  *(void *)(v58 + 16) = v63;
  *(void *)(v58 + 24) = v65;
  swift_beginAccess();
  sub_241A6862C(v57, v59);
  swift_endAccess();
  v92[0] = v58;
  sub_241A942D8(&qword_26B032D80, (void (*)(uint64_t))sub_241A92F10);
  uint64_t v66 = v90;
  uint64_t v67 = sub_241CD87E0();
  if (v66)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v70 = v67;
    uint64_t v71 = v68;
    swift_release();
    sub_241A35680(0, &qword_26B0334B8, (uint64_t (*)(uint64_t))sub_241A92CF0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    int v73 = v79;
    uint64_t result = sub_241A94368(v56, (uint64_t)v79 + *(int *)(v72 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *int v73 = v88;
    v73[1] = v70;
    v73[2] = v71;
  }
  return result;
}

uint64_t sub_241A8E8AC@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v84 = a4;
  uint64_t v82 = a3;
  uint64_t v96 = a1;
  uint64_t v80 = a5;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v93 = (uint64_t)&v75 - v8;
  uint64_t v95 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v95 - 8);
  uint64_t v79 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3A878();
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v90 = (uint64_t)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v89 = (uint64_t)&v75 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v85 = (uint64_t)&v75 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v83 = (uint64_t *)((char *)&v75 - v18);
  uint64_t v19 = a2(0);
  MEMORY[0x270FA5388](v19);
  uint64_t v81 = (uint64_t)&v75 - v20;
  uint64_t v21 = sub_241CDA1A0();
  uint64_t v86 = *(void *)(v21 - 8);
  uint64_t v87 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v91 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *a1;
  uint64_t v23 = a1[1];
  uint64_t v25 = a1[2];
  sub_241A912E0();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 24) = xmmword_241CEBF30;
  *(void *)(v26 + 16) = v24;
  swift_beginAccess();
  uint64_t v27 = *(void *)(v26 + 24);
  *(void *)(v26 + 24) = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241A93440(v27);
  uint64_t v28 = v88;
  swift_beginAccess();
  uint64_t v92 = v26;
  *(void *)(v26 + 32) = v25;
  swift_release();
  os_log_t v78 = (os_log_t)v19;
  uint64_t v29 = v28 + *(int *)(v19 + 24);
  if (objc_msgSend(*(id *)(v29 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    uint64_t v77 = v11;
    sub_241CDA0F0();
    uint64_t v30 = v81;
    sub_241A94368(v28, v81, v82);
    uint64_t v31 = (uint64_t)v96;
    os_log_type_t v32 = v83;
    sub_241A94368((uint64_t)v96, (uint64_t)v83, (uint64_t (*)(void))sub_241A3A878);
    uint64_t v33 = v85;
    sub_241A94368(v31, v85, (uint64_t (*)(void))sub_241A3A878);
    sub_241A94368(v31, v89, (uint64_t (*)(void))sub_241A3A878);
    sub_241A94368(v31, v90, (uint64_t (*)(void))sub_241A3A878);
    uint64_t v34 = sub_241CDA190();
    os_log_type_t v35 = sub_241CDB670();
    int v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = (void *)swift_slowAlloc();
      os_log_t v75 = v38;
      uint64_t v82 = (uint64_t (*)(void))swift_slowAlloc();
      v97[0] = (uint64_t)v82;
      *(_DWORD *)uint64_t v37 = 138413315;
      int v76 = v36;
      uint64_t v39 = v30;
      uint64_t v40 = *(void **)(v30 + SLODWORD(v78[3].isa) + 16);
      os_log_t v78 = v34;
      uint64_t v98 = (uint64_t)v40;
      uint64_t v88 = v29;
      id v41 = v40;
      sub_241CDBBF0();
      void *v38 = v40;
      sub_241A91870(v39, v84);
      *(_WORD *)(v37 + 12) = 2080;
      uint64_t v98 = *v32;
      sub_241CD89A0();
      swift_retain();
      uint64_t v42 = sub_241CDB120();
      uint64_t v98 = sub_241A33FE4(v42, v43, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v32, (uint64_t (*)(void))sub_241A3A878);
      *(_WORD *)(v37 + 22) = 2081;
      uint64_t v98 = *(void *)(v33 + 8);
      sub_241A91264(0);
      swift_retain();
      uint64_t v44 = sub_241CDB120();
      uint64_t v98 = sub_241A33FE4(v44, v45, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v33, (uint64_t (*)(void))sub_241A3A878);
      *(_WORD *)(v37 + 32) = 2080;
      uint64_t v46 = v89;
      uint64_t v98 = *(void *)(v89 + 16);
      uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
      sub_241A35680(0, &qword_26B032148, MEMORY[0x263F44308], MEMORY[0x263F8D8F0]);
      swift_retain();
      uint64_t v48 = sub_241CDB120();
      uint64_t v98 = sub_241A33FE4(v48, v49, v97);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v46, (uint64_t (*)(void))sub_241A3A878);
      *(_WORD *)(v37 + 42) = 2080;
      uint64_t v11 = v77;
      uint64_t v50 = v90;
      sub_241A94368(v90 + *(int *)(v77 + 52), v79, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v51 = sub_241CDB120();
      uint64_t v98 = sub_241A33FE4(v51, v52, v97);
      uint64_t v29 = v88;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v50, (uint64_t (*)(void))sub_241A3A878);
      os_log_t v53 = v78;
      _os_log_impl(&dword_241A23000, v78, (os_log_type_t)v76, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v37, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, v47);
      uint64_t v54 = v75;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v54, -1, -1);
      uint64_t v55 = v82;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v55, -1, -1);
      MEMORY[0x245637F20](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v86 + 8))(v91, v87);
    }
    else
    {
      sub_241A91870(v30, v84);
      sub_241A91870((uint64_t)v32, (uint64_t (*)(void))sub_241A3A878);
      sub_241A91870(v33, (uint64_t (*)(void))sub_241A3A878);
      sub_241A91870(v89, (uint64_t (*)(void))sub_241A3A878);
      sub_241A91870(v90, (uint64_t (*)(void))sub_241A3A878);

      (*(void (**)(char *, uint64_t))(v86 + 8))(v91, v87);
      uint64_t v11 = v77;
    }
  }
  uint64_t v56 = *(void **)(v29 + 16);
  uint64_t v57 = (uint64_t)v96 + *(int *)(v11 + 52);
  uint64_t v58 = v93;
  sub_241A4145C(v57 + *(int *)(v95 + 28), v93);
  sub_241A916BC();
  uint64_t v59 = swift_allocObject();
  uint64_t v60 = v59 + qword_26B0413C0;
  uint64_t v61 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v60, 1, 1, v61);
  id v62 = v56;
  id v63 = objc_msgSend(v62, sel_identifier);
  uint64_t v64 = sub_241CDB0D0();
  uint64_t v66 = v65;

  *(void *)(v59 + 16) = v64;
  *(void *)(v59 + 24) = v66;
  swift_beginAccess();
  sub_241A6862C(v58, v60);
  swift_endAccess();
  v97[0] = v59;
  sub_241A942D8(&qword_26B032DB0, (void (*)(uint64_t))sub_241A916BC);
  uint64_t v67 = v94;
  uint64_t v68 = sub_241CD87E0();
  if (v67)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v71 = v68;
    uint64_t v72 = v69;
    swift_release();
    sub_241A35680(0, &qword_26B0334D0, (uint64_t (*)(uint64_t))sub_241A912E0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    uint64_t v74 = v80;
    uint64_t result = sub_241A94368(v57, (uint64_t)v80 + *(int *)(v73 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *uint64_t v74 = v92;
    v74[1] = v71;
    v74[2] = v72;
  }
  return result;
}

uint64_t sub_241A8F2FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v91 = a1;
  os_log_t v78 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v88 = (uint64_t)&v70 - v5;
  uint64_t v90 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v90 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A919AC(0);
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v85 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)&v70 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v70 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (uint64_t *)((char *)&v70 - v15);
  uint64_t v16 = type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v16);
  uint64_t v79 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v82 = *(void *)(v18 - 8);
  uint64_t v83 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v86 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v22 = a1[2];
  sub_241A91A70();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 24) = xmmword_241CEBF30;
  *(void *)(v23 + 16) = v21;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v23 + 24);
  *(void *)(v23 + 24) = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241A93440(v24);
  swift_beginAccess();
  uint64_t v87 = v23;
  *(void *)(v23 + 32) = v22;
  swift_release();
  uint64_t v76 = v16;
  uint64_t v25 = v2 + *(int *)(v16 + 20);
  if (objc_msgSend(*(id *)(v25 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    uint64_t v75 = v8;
    sub_241CDA0F0();
    uint64_t v26 = v79;
    sub_241A94368(v2, v79, (uint64_t (*)(void))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
    uint64_t v27 = (uint64_t)v91;
    uint64_t v28 = v80;
    sub_241A94368((uint64_t)v91, (uint64_t)v80, (uint64_t (*)(void))sub_241A919AC);
    uint64_t v29 = v81;
    sub_241A94368(v27, (uint64_t)v81, (uint64_t (*)(void))sub_241A919AC);
    sub_241A94368(v27, v84, (uint64_t (*)(void))sub_241A919AC);
    sub_241A94368(v27, v85, (uint64_t (*)(void))sub_241A919AC);
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB670();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v72 = v34;
      uint64_t v74 = swift_slowAlloc();
      v92[0] = v74;
      *(_DWORD *)uint64_t v33 = 138413315;
      int v73 = v32;
      uint64_t v35 = v26;
      int v36 = *(void **)(v26 + *(int *)(v76 + 20) + 16);
      os_log_t v71 = v30;
      uint64_t v93 = (uint64_t)v36;
      uint64_t v76 = v25;
      id v37 = v36;
      sub_241CDBBF0();
      *uint64_t v34 = v36;
      sub_241A91870(v35, (uint64_t (*)(void))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v93 = *v28;
      sub_241CD89A0();
      swift_retain();
      uint64_t v38 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v38, v39, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A919AC);
      *(_WORD *)(v33 + 22) = 2081;
      uint64_t v93 = *((void *)v29 + 1);
      sub_241A91264(0);
      swift_retain();
      uint64_t v40 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v40, v41, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A919AC);
      *(_WORD *)(v33 + 32) = 2080;
      uint64_t v42 = v84;
      uint64_t v93 = *(void *)(v84 + 16);
      uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
      sub_241A35680(0, &qword_26B038888, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, MEMORY[0x263F8D8F0]);
      swift_retain();
      uint64_t v43 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v43, v44, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v42, (uint64_t (*)(void))sub_241A919AC);
      *(_WORD *)(v33 + 42) = 2080;
      uint64_t v8 = v75;
      uint64_t v45 = v85;
      sub_241A94368(v85 + *(int *)(v75 + 52), v77, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v46 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v46, v47, v92);
      uint64_t v25 = v76;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v45, (uint64_t (*)(void))sub_241A919AC);
      os_log_t v48 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v73, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v33, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, v81);
      unint64_t v49 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      uint64_t v50 = v74;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v50, -1, -1);
      MEMORY[0x245637F20](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
    }
    else
    {
      sub_241A91870(v26, (uint64_t (*)(void))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A919AC);
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A919AC);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A919AC);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A919AC);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
      uint64_t v8 = v75;
    }
  }
  uint64_t v51 = *(void **)(v25 + 16);
  uint64_t v52 = (uint64_t)v91 + *(int *)(v8 + 52);
  uint64_t v53 = v88;
  sub_241A4145C(v52 + *(int *)(v90 + 28), v88);
  sub_241A91C3C();
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v54 + qword_26B0413C0;
  uint64_t v56 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
  id v57 = v51;
  id v58 = objc_msgSend(v57, sel_identifier);
  uint64_t v59 = sub_241CDB0D0();
  uint64_t v61 = v60;

  *(void *)(v54 + 16) = v59;
  *(void *)(v54 + 24) = v61;
  swift_beginAccess();
  sub_241A6862C(v53, v55);
  swift_endAccess();
  v92[0] = v54;
  sub_241A942D8(&qword_26B032DA0, (void (*)(uint64_t))sub_241A91C3C);
  uint64_t v62 = v89;
  uint64_t v63 = sub_241CD87E0();
  if (v62)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v66 = v63;
    uint64_t v67 = v64;
    swift_release();
    sub_241A35680(0, &qword_26B0334C8, (uint64_t (*)(uint64_t))sub_241A91A70, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    uint64_t v69 = v78;
    uint64_t result = sub_241A94368(v52, (uint64_t)v78 + *(int *)(v68 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    uint64_t *v69 = v87;
    v69[1] = v66;
    v69[2] = v67;
  }
  return result;
}

uint64_t sub_241A8FD58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v91 = a1;
  os_log_t v78 = a2;
  sub_241A35680(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v88 = (uint64_t)&v70 - v5;
  uint64_t v90 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v90 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A919AC(0);
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v85 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)&v70 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v70 - v14);
  MEMORY[0x270FA5388](v13);
  uint64_t v80 = (uint64_t *)((char *)&v70 - v15);
  uint64_t v16 = type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v16);
  uint64_t v79 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CDA1A0();
  uint64_t v82 = *(void *)(v18 - 8);
  uint64_t v83 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v86 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v22 = a1[2];
  sub_241A91A70();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 24) = xmmword_241CEBF30;
  *(void *)(v23 + 16) = v21;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v23 + 24);
  *(void *)(v23 + 24) = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_241A93440(v24);
  swift_beginAccess();
  uint64_t v87 = v23;
  *(void *)(v23 + 32) = v22;
  swift_release();
  uint64_t v76 = v16;
  uint64_t v25 = v2 + *(int *)(v16 + 20);
  if (objc_msgSend(*(id *)(v25 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    uint64_t v75 = v8;
    sub_241CDA0F0();
    uint64_t v26 = v79;
    sub_241A94368(v2, v79, (uint64_t (*)(void))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
    uint64_t v27 = (uint64_t)v91;
    uint64_t v28 = v80;
    sub_241A94368((uint64_t)v91, (uint64_t)v80, (uint64_t (*)(void))sub_241A919AC);
    uint64_t v29 = v81;
    sub_241A94368(v27, (uint64_t)v81, (uint64_t (*)(void))sub_241A919AC);
    sub_241A94368(v27, v84, (uint64_t (*)(void))sub_241A919AC);
    sub_241A94368(v27, v85, (uint64_t (*)(void))sub_241A919AC);
    uint64_t v30 = sub_241CDA190();
    os_log_type_t v31 = sub_241CDB670();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v72 = v34;
      uint64_t v74 = swift_slowAlloc();
      v92[0] = v74;
      *(_DWORD *)uint64_t v33 = 138413315;
      int v73 = v32;
      uint64_t v35 = v26;
      int v36 = *(void **)(v26 + *(int *)(v76 + 20) + 16);
      os_log_t v71 = v30;
      uint64_t v93 = (uint64_t)v36;
      uint64_t v76 = v25;
      id v37 = v36;
      sub_241CDBBF0();
      *uint64_t v34 = v36;
      sub_241A91870(v35, (uint64_t (*)(void))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v93 = *v28;
      sub_241CD89A0();
      swift_retain();
      uint64_t v38 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v38, v39, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A919AC);
      *(_WORD *)(v33 + 22) = 2081;
      uint64_t v93 = *((void *)v29 + 1);
      sub_241A91264(0);
      swift_retain();
      uint64_t v40 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v40, v41, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A919AC);
      *(_WORD *)(v33 + 32) = 2080;
      uint64_t v42 = v84;
      uint64_t v93 = *(void *)(v84 + 16);
      uint64_t v81 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
      sub_241A35680(0, &qword_26B038888, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, MEMORY[0x263F8D8F0]);
      swift_retain();
      uint64_t v43 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v43, v44, v92);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v42, (uint64_t (*)(void))sub_241A919AC);
      *(_WORD *)(v33 + 42) = 2080;
      uint64_t v8 = v75;
      uint64_t v45 = v85;
      sub_241A94368(v85 + *(int *)(v75 + 52), v77, type metadata accessor for SnidgetFeedItemMetadata);
      uint64_t v46 = sub_241CDB120();
      uint64_t v93 = sub_241A33FE4(v46, v47, v92);
      uint64_t v25 = v76;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A91870(v45, (uint64_t (*)(void))sub_241A919AC);
      os_log_t v48 = v71;
      _os_log_impl(&dword_241A23000, v71, (os_log_type_t)v73, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v33, 0x34u);
      sub_241A35680(0, (unint64_t *)&qword_26B038850, (uint64_t (*)(uint64_t))sub_241A918D0, v81);
      unint64_t v49 = v72;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      uint64_t v50 = v74;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v50, -1, -1);
      MEMORY[0x245637F20](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
    }
    else
    {
      sub_241A91870(v26, (uint64_t (*)(void))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
      sub_241A91870((uint64_t)v28, (uint64_t (*)(void))sub_241A919AC);
      sub_241A91870((uint64_t)v29, (uint64_t (*)(void))sub_241A919AC);
      sub_241A91870(v84, (uint64_t (*)(void))sub_241A919AC);
      sub_241A91870(v85, (uint64_t (*)(void))sub_241A919AC);

      (*(void (**)(char *, uint64_t))(v82 + 8))(v86, v83);
      uint64_t v8 = v75;
    }
  }
  uint64_t v51 = *(void **)(v25 + 16);
  uint64_t v52 = (uint64_t)v91 + *(int *)(v8 + 52);
  uint64_t v53 = v88;
  sub_241A4145C(v52 + *(int *)(v90 + 28), v88);
  sub_241A91C3C();
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v54 + qword_26B0413C0;
  uint64_t v56 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
  id v57 = v51;
  id v58 = objc_msgSend(v57, sel_identifier);
  uint64_t v59 = sub_241CDB0D0();
  uint64_t v61 = v60;

  *(void *)(v54 + 16) = v59;
  *(void *)(v54 + 24) = v61;
  swift_beginAccess();
  sub_241A6862C(v53, v55);
  swift_endAccess();
  v92[0] = v54;
  sub_241A942D8(&qword_26B032DA0, (void (*)(uint64_t))sub_241A91C3C);
  uint64_t v62 = v89;
  uint64_t v63 = sub_241CD87E0();
  if (v62)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v66 = v63;
    uint64_t v67 = v64;
    swift_release();
    sub_241A35680(0, &qword_26B0334C8, (uint64_t (*)(uint64_t))sub_241A91A70, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    uint64_t v69 = v78;
    uint64_t result = sub_241A94368(v52, (uint64_t)v78 + *(int *)(v68 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    uint64_t *v69 = v87;
    v69[1] = v66;
    v69[2] = v67;
  }
  return result;
}

uint64_t sub_241A907B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8E8AC(a1, (uint64_t (*)(void))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider, (uint64_t (*)(void))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider, (uint64_t (*)(void))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider, a2);
}

uint64_t sub_241A9080C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v57 = a6;
  uint64_t v62 = a5;
  uint64_t v60 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v10;
  uint64_t v11 = sub_241CDBBD0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v58 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v15 = (char *)&v49 - v14;
  uint64_t v59 = *(void *)(v11 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v49 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v49 - v22;
  if ((sub_241CDB050() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v54 = v18;
  uint64_t v50 = v9;
  uint64_t v24 = type metadata accessor for SnidgetHarnessViewFeedItemGeneratorInputModel();
  uint64_t v25 = *(int *)(v24 + 36);
  uint64_t v52 = a1;
  uint64_t v26 = a1 + v25;
  uint64_t v27 = v59;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  v28(v23, v26, v11);
  uint64_t v51 = v24;
  uint64_t v29 = *(int *)(v24 + 36);
  uint64_t v53 = a2;
  v28(v21, a2 + v29, v11);
  uint64_t v55 = TupleTypeMetadata2;
  uint64_t v56 = v23;
  uint64_t v30 = &v15[*(int *)(TupleTypeMetadata2 + 48)];
  v28(v15, (uint64_t)v23, v11);
  uint64_t v62 = v30;
  v28(v30, (uint64_t)v21, v11);
  uint64_t v31 = v27;
  int v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
  uint64_t v33 = v61;
  if (((unsigned int (*)(char *, uint64_t))v32)(v15, 1) == 1)
  {
    uint64_t v34 = *(void (**)(char *, uint64_t))(v31 + 8);
    v34(v21, v11);
    v34(v56, v11);
    if (v32(v62, 1, v33) == 1)
    {
      v34(v15, v11);
LABEL_11:
      char v41 = sub_241A91014(*(void *)(v52 + *(int *)(v51 + 40)), *(void *)(v53 + *(int *)(v51 + 40)));
      return v41 & 1;
    }
    goto LABEL_7;
  }
  unint64_t v49 = v21;
  uint64_t v35 = v56;
  int v36 = v54;
  v28(v54, (uint64_t)v15, v11);
  unsigned int v37 = v32(v62, 1, v33);
  uint64_t v38 = (void (**)(char *, uint64_t))(v60 + 8);
  if (v37 == 1)
  {
    unint64_t v39 = v36;
    uint64_t v40 = *(void (**)(char *, uint64_t))(v59 + 8);
    v40(v49, v11);
    v40(v35, v11);
    (*v38)(v39, v33);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v55);
    goto LABEL_8;
  }
  uint64_t v43 = v60 + 32;
  unint64_t v44 = v50;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v50, v62, v33);
  uint64_t v45 = v36;
  char v46 = sub_241CDB050();
  unint64_t v47 = *(void (**)(char *, uint64_t))(v43 - 24);
  v47(v44, v33);
  os_log_t v48 = *(void (**)(char *, uint64_t))(v59 + 8);
  v48(v49, v11);
  v48(v35, v11);
  v47(v45, v33);
  v48(v15, v11);
  if (v46) {
    goto LABEL_11;
  }
LABEL_8:
  char v41 = 0;
  return v41 & 1;
}

uint64_t sub_241A90CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241A9080C(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(char **)(a4 - 8), *(void *)(a4 - 16));
}

uint64_t sub_241A90D0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A86F2C(a1, a2);
}

uint64_t sub_241A90D28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A87934(a1, a2);
}

uint64_t sub_241A90D44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A88320(a1, a2);
}

uint64_t sub_241A90D60@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8E8AC(a1, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider, (uint64_t (*)(void))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider, a2);
}

uint64_t sub_241A90DB8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8E8AC(a1, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider, (uint64_t (*)(void))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider, a2);
}

uint64_t sub_241A90E10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8CA88(a1, a2);
}

void *sub_241A90E28@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t result = sub_241A7E21C(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  a5[2] = v8;
  return result;
}

uint64_t sub_241A90E58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A88D7C(a1, a2);
}

uint64_t sub_241A90E74@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_241A8A1BC(a1, a2);
}

uint64_t sub_241A90E90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8E8AC(a1, (uint64_t (*)(void))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider, (uint64_t (*)(void))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider, (uint64_t (*)(void))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider, a2);
}

uint64_t sub_241A90EE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8FD58(a1, a2);
}

uint64_t sub_241A90F04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8F2FC(a1, a2);
}

uint64_t sub_241A90F1C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8ABEC(a1, a2);
}

uint64_t sub_241A90F38@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8E8AC(a1, (uint64_t (*)(void))type metadata accessor for BloodPressureSnidgetFeedItemModelProvider, (uint64_t (*)(void))type metadata accessor for BloodPressureSnidgetFeedItemModelProvider, (uint64_t (*)(void))type metadata accessor for BloodPressureSnidgetFeedItemModelProvider, a2);
}

uint64_t sub_241A90F90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A89760(a1, a2);
}

uint64_t sub_241A90FA8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8C02C(a1, a2);
}

uint64_t sub_241A90FC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8DEC8(a1, a2);
}

uint64_t sub_241A90FE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8D46C(a1, a2);
}

uint64_t sub_241A90FFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241A8B648(a1, a2);
}

uint64_t sub_241A91014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD7520();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      uint64_t v31 = v7;
      int v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      uint64_t v30 = (void (**)(char *, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        uint64_t v19 = v9;
        uint64_t v20 = v9;
        uint64_t v21 = v32;
        v32(v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_241A942D8(&qword_26B032020, MEMORY[0x263F45618]);
        char v23 = sub_241CDB050();
        uint64_t v24 = *v30;
        (*v30)(v17, v4);
        v24(v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_241A91234()
{
  return swift_getGenericMetadata();
}

void sub_241A91264(uint64_t a1)
{
}

uint64_t sub_241A912AC()
{
  return sub_241A942D8(&qword_26B032190, MEMORY[0x263F44680]);
}

void sub_241A912E0()
{
  if (!qword_26B032D28)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241CD86F0();
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A942D8(&qword_26B0320B8, MEMORY[0x263F44058]);
    sub_241A91514();
    sub_241A915E8();
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F44308];
    sub_241A942D8(&qword_26B0385C8, MEMORY[0x263F44308]);
    sub_241A942D8(&qword_26B032140, v1);
    unint64_t v2 = type metadata accessor for SnidgetHarnessPluginView.ViewModel();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_26B032D28);
    }
  }
}

void sub_241A91494(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

unint64_t sub_241A91514()
{
  unint64_t result = qword_26B0320F0;
  if (!qword_26B0320F0)
  {
    sub_241A91264(255);
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241A942D8((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241A942D8(&qword_26B032178, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0320F0);
  }
  return result;
}

unint64_t sub_241A915E8()
{
  unint64_t result = qword_26B0320E0;
  if (!qword_26B0320E0)
  {
    sub_241A91264(255);
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241A942D8((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241A942D8(&qword_26B032178, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0320E0);
  }
  return result;
}

void sub_241A916BC()
{
  if (!qword_26B032DB8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241CD86F0();
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A942D8(&qword_26B0320B8, MEMORY[0x263F44058]);
    sub_241A91514();
    sub_241A915E8();
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F44308];
    sub_241A942D8(&qword_26B0385C8, MEMORY[0x263F44308]);
    sub_241A942D8(&qword_26B032140, v1);
    unint64_t v2 = type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_26B032DB8);
    }
  }
}

uint64_t sub_241A91870(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_241A918D0()
{
  unint64_t result = qword_26B038448[0];
  if (!qword_26B038448[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_26B038448);
  }
  return result;
}

void sub_241A91910(void *a1, void *a2)
{
  if ((unint64_t)a1 >= 2)
  {

    swift_bridgeObjectRelease();
  }
}

void *sub_241A91968(void *result)
{
  if ((unint64_t)result >= 2)
  {
    id v2 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

void sub_241A919AC(uint64_t a1)
{
}

void sub_241A919E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_241CD89A0();
    a3(255);
    a4(255);
    unint64_t v7 = type metadata accessor for SnidgetHarnessGeneratorFeedItemModel();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241A91A70()
{
  if (!qword_26B032D20)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A91BE8();
    sub_241A91514();
    sub_241A915E8();
    sub_241A942D8(&qword_26B0385F8, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
    sub_241A942D8(&qword_26B032B60, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ViewModel();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032D20);
    }
  }
}

unint64_t sub_241A91BE8()
{
  unint64_t result = qword_26B032B68;
  if (!qword_26B032B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032B68);
  }
  return result;
}

void sub_241A91C3C()
{
  if (!qword_26B032DA8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A91BE8();
    sub_241A91514();
    sub_241A915E8();
    sub_241A942D8(&qword_26B0385F8, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
    sub_241A942D8(&qword_26B032B60, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032DA8);
    }
  }
}

void sub_241A91DB4(uint64_t a1)
{
}

void sub_241A91DC8()
{
  if (!qword_26B035C08)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    type metadata accessor for SnidgetMultiValueLevelChartView(255);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A942D8(&qword_26B035F38, (void (*)(uint64_t))type metadata accessor for SnidgetMultiValueLevelChartView);
    sub_241A91514();
    sub_241A915E8();
    sub_241A91F20();
    sub_241A91F74();
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ViewModel();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B035C08);
    }
  }
}

unint64_t sub_241A91F20()
{
  unint64_t result = qword_26B035EC0;
  if (!qword_26B035EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035EC0);
  }
  return result;
}

unint64_t sub_241A91F74()
{
  unint64_t result = qword_26B035EB8;
  if (!qword_26B035EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035EB8);
  }
  return result;
}

uint64_t sub_241A91FC8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_241A92014(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_241A92060()
{
  if (!qword_26B035C18)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    type metadata accessor for SnidgetMultiValueLevelChartView(255);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A942D8(&qword_26B035F38, (void (*)(uint64_t))type metadata accessor for SnidgetMultiValueLevelChartView);
    sub_241A91514();
    sub_241A915E8();
    sub_241A91F20();
    sub_241A91F74();
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B035C18);
    }
  }
}

void sub_241A921B8(uint64_t a1)
{
}

void sub_241A921CC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_241CD89A0();
    sub_241A91264(255);
    unint64_t v3 = type metadata accessor for SnidgetHarnessGeneratorFeedItemModel();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_241A9223C()
{
  if (!qword_26B032CF8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A92360();
    sub_241A91514();
    sub_241A915E8();
    sub_241A923B4();
    sub_241A92408();
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ViewModel();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032CF8);
    }
  }
}

unint64_t sub_241A92360()
{
  unint64_t result = qword_26B033F68;
  if (!qword_26B033F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033F68);
  }
  return result;
}

unint64_t sub_241A923B4()
{
  unint64_t result = qword_26B033F60;
  if (!qword_26B033F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033F60);
  }
  return result;
}

unint64_t sub_241A92408()
{
  unint64_t result = qword_26B033F58;
  if (!qword_26B033F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033F58);
  }
  return result;
}

uint64_t sub_241A9245C(uint64_t result)
{
  if (result != 1)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_241A924A4(uint64_t result)
{
  if (result != 1)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_241A924E8()
{
  if (!qword_26B032D58)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A92360();
    sub_241A91514();
    sub_241A915E8();
    sub_241A923B4();
    sub_241A92408();
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032D58);
    }
  }
}

void sub_241A9260C(uint64_t a1)
{
}

void sub_241A92620()
{
  if (!qword_26B032CF0)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A92744();
    sub_241A91514();
    sub_241A915E8();
    sub_241A92798();
    sub_241A927EC();
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ViewModel();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032CF0);
    }
  }
}

unint64_t sub_241A92744()
{
  unint64_t result = qword_26B033D50;
  if (!qword_26B033D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033D50);
  }
  return result;
}

unint64_t sub_241A92798()
{
  unint64_t result = qword_26B033D40;
  if (!qword_26B033D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033D40);
  }
  return result;
}

unint64_t sub_241A927EC()
{
  unint64_t result = qword_26B033D38;
  if (!qword_26B033D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033D38);
  }
  return result;
}

void sub_241A92840()
{
  if (!qword_26B032D48)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A92744();
    sub_241A91514();
    sub_241A915E8();
    sub_241A92798();
    sub_241A927EC();
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032D48);
    }
  }
}

void sub_241A92964(uint64_t a1)
{
}

void sub_241A92998()
{
  if (!qword_26B032D18)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A92B10();
    sub_241A91514();
    sub_241A915E8();
    sub_241A942D8(&qword_26B032E78, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
    sub_241A942D8(&qword_26B032E70, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ViewModel();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032D18);
    }
  }
}

unint64_t sub_241A92B10()
{
  unint64_t result = qword_26B032F48;
  if (!qword_26B032F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032F48);
  }
  return result;
}

void sub_241A92B64()
{
  if (!qword_26B032D98)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A92B10();
    sub_241A91514();
    sub_241A915E8();
    sub_241A942D8(&qword_26B032E78, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
    sub_241A942D8(&qword_26B032E70, (void (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032D98);
    }
  }
}

void sub_241A92CDC(uint64_t a1)
{
}

void sub_241A92CF0()
{
  if (!qword_26B032D10)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A92E14();
    sub_241A91514();
    sub_241A915E8();
    sub_241A92E68();
    sub_241A92EBC();
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ViewModel();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032D10);
    }
  }
}

unint64_t sub_241A92E14()
{
  unint64_t result = qword_26B0335B0;
  if (!qword_26B0335B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0335B0);
  }
  return result;
}

unint64_t sub_241A92E68()
{
  unint64_t result = qword_26B0335A0;
  if (!qword_26B0335A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0335A0);
  }
  return result;
}

unint64_t sub_241A92EBC()
{
  unint64_t result = qword_26B033598;
  if (!qword_26B033598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033598);
  }
  return result;
}

void sub_241A92F10()
{
  if (!qword_26B032D88)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A92E14();
    sub_241A91514();
    sub_241A915E8();
    sub_241A92E68();
    sub_241A92EBC();
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032D88);
    }
  }
}

void sub_241A93034(uint64_t a1)
{
}

void sub_241A93068(uint64_t a1)
{
}

uint64_t sub_241A930B0()
{
  return sub_241A942D8(&qword_26B032170, MEMORY[0x263F44490]);
}

void sub_241A930E4()
{
  if (!qword_26B032CE8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44490];
    sub_241A91494(255, &qword_26B032108, MEMORY[0x263F44490], sub_241A930B0, MEMORY[0x263F44150]);
    sub_241CD86F0();
    sub_241A93BC0((unint64_t *)&qword_26B032100, &qword_26B032108, v0, sub_241A930B0);
    sub_241A942D8(&qword_26B0320B8, MEMORY[0x263F44058]);
    sub_241A93298();
    sub_241A9336C();
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F44308];
    sub_241A942D8(&qword_26B0385C8, MEMORY[0x263F44308]);
    sub_241A942D8(&qword_26B032140, v1);
    unint64_t v2 = type metadata accessor for SnidgetHarnessPluginView.ViewModel();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_26B032CE8);
    }
  }
}

unint64_t sub_241A93298()
{
  unint64_t result = qword_26B0320C8;
  if (!qword_26B0320C8)
  {
    sub_241A93068(255);
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F44470];
    sub_241A942D8(&qword_26B032168, MEMORY[0x263F44470]);
    sub_241A942D8(&qword_26B032160, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0320C8);
  }
  return result;
}

unint64_t sub_241A9336C()
{
  unint64_t result = qword_26B0320C0;
  if (!qword_26B0320C0)
  {
    sub_241A93068(255);
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F44470];
    sub_241A942D8(&qword_26B032168, MEMORY[0x263F44470]);
    sub_241A942D8(&qword_26B032160, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0320C0);
  }
  return result;
}

uint64_t sub_241A93440(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

void sub_241A93450()
{
  if (!qword_26B032D38)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44490];
    sub_241A91494(255, &qword_26B032108, MEMORY[0x263F44490], sub_241A930B0, MEMORY[0x263F44150]);
    sub_241CD86F0();
    sub_241A93BC0((unint64_t *)&qword_26B032100, &qword_26B032108, v0, sub_241A930B0);
    sub_241A942D8(&qword_26B0320B8, MEMORY[0x263F44058]);
    sub_241A93298();
    sub_241A9336C();
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F44308];
    sub_241A942D8(&qword_26B0385C8, MEMORY[0x263F44308]);
    sub_241A942D8(&qword_26B032140, v1);
    unint64_t v2 = type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_26B032D38);
    }
  }
}

void sub_241A93604(uint64_t a1)
{
}

void sub_241A93618()
{
  if (!qword_26B032D00)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A9373C();
    sub_241A91514();
    sub_241A915E8();
    sub_241A93790();
    sub_241A937E4();
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ViewModel();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032D00);
    }
  }
}

unint64_t sub_241A9373C()
{
  unint64_t result = qword_26B0333F8;
  if (!qword_26B0333F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0333F8);
  }
  return result;
}

unint64_t sub_241A93790()
{
  unint64_t result = qword_26B0333E8;
  if (!qword_26B0333E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0333E8);
  }
  return result;
}

unint64_t sub_241A937E4()
{
  unint64_t result = qword_26B0333E0;
  if (!qword_26B0333E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0333E0);
  }
  return result;
}

void sub_241A93838()
{
  if (!qword_26B032D68)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A9373C();
    sub_241A91514();
    sub_241A915E8();
    sub_241A93790();
    sub_241A937E4();
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032D68);
    }
  }
}

void sub_241A9395C(uint64_t a1)
{
}

void sub_241A93990(uint64_t a1)
{
}

uint64_t sub_241A939D8()
{
  return sub_241A942D8(&qword_26B037D98, MEMORY[0x263F446B8]);
}

void sub_241A93A0C()
{
  if (!qword_26B037DF8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F446B8];
    sub_241A91494(255, &qword_26B037D80, MEMORY[0x263F446B8], sub_241A939D8, MEMORY[0x263F44150]);
    sub_241CD86F0();
    sub_241A93BC0(&qword_26B037D78, &qword_26B037D80, v0, sub_241A939D8);
    sub_241A942D8(&qword_26B0320B8, MEMORY[0x263F44058]);
    sub_241A93C24();
    sub_241A93CF8();
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F44308];
    sub_241A942D8(&qword_26B0385C8, MEMORY[0x263F44308]);
    sub_241A942D8(&qword_26B032140, v1);
    unint64_t v2 = type metadata accessor for SnidgetHarnessPluginView.ViewModel();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_26B037DF8);
    }
  }
}

uint64_t sub_241A93BC0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A91494(255, a2, a3, a4, MEMORY[0x263F44150]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241A93C24()
{
  unint64_t result = qword_26B037D68;
  if (!qword_26B037D68)
  {
    sub_241A93990(255);
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F44698];
    sub_241A942D8(&qword_26B037D90, MEMORY[0x263F44698]);
    sub_241A942D8(&qword_26B037D88, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B037D68);
  }
  return result;
}

unint64_t sub_241A93CF8()
{
  unint64_t result = qword_26B037D60;
  if (!qword_26B037D60)
  {
    sub_241A93990(255);
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F44698];
    sub_241A942D8(&qword_26B037D90, MEMORY[0x263F44698]);
    sub_241A942D8(&qword_26B037D88, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B037D60);
  }
  return result;
}

void sub_241A93DCC()
{
  if (!qword_26B037E08)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F446B8];
    sub_241A91494(255, &qword_26B037D80, MEMORY[0x263F446B8], sub_241A939D8, MEMORY[0x263F44150]);
    sub_241CD86F0();
    sub_241A93BC0(&qword_26B037D78, &qword_26B037D80, v0, sub_241A939D8);
    sub_241A942D8(&qword_26B0320B8, MEMORY[0x263F44058]);
    sub_241A93C24();
    sub_241A93CF8();
    unint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F44308];
    sub_241A942D8(&qword_26B0385C8, MEMORY[0x263F44308]);
    sub_241A942D8(&qword_26B032140, v1);
    unint64_t v2 = type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_26B037E08);
    }
  }
}

void sub_241A93F80(uint64_t a1)
{
}

void sub_241A93F94()
{
  if (!qword_26B032D08)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A940B8();
    sub_241A91514();
    sub_241A915E8();
    sub_241A9410C();
    sub_241A94160();
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ViewModel();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032D08);
    }
  }
}

unint64_t sub_241A940B8()
{
  unint64_t result = qword_26B0334F0;
  if (!qword_26B0334F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0334F0);
  }
  return result;
}

unint64_t sub_241A9410C()
{
  unint64_t result = qword_26B0334E0;
  if (!qword_26B0334E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0334E0);
  }
  return result;
}

unint64_t sub_241A94160()
{
  unint64_t result = qword_26B0334D8;
  if (!qword_26B0334D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0334D8);
  }
  return result;
}

void sub_241A941B4()
{
  if (!qword_26B032D78)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44680];
    sub_241A91494(255, &qword_26B032118, MEMORY[0x263F44680], sub_241A912AC, MEMORY[0x263F44150]);
    sub_241A93BC0((unint64_t *)&qword_26B032110, &qword_26B032118, v0, sub_241A912AC);
    sub_241A940B8();
    sub_241A91514();
    sub_241A915E8();
    sub_241A9410C();
    sub_241A94160();
    unint64_t v1 = type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032D78);
    }
  }
}

uint64_t sub_241A942D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241A94320(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_241CDBBD0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_241A94368(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_241A943D4(void *a1, void *a2, void (*a3)(id, void))
{
  uint64_t v4 = v3;
  sub_241A5D1DC();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  unint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v28 - v12;
  sub_241A313AC(0, &qword_268D421F0);
  uint64_t v14 = (void *)sub_241A4F420(a1);
  uint64_t v15 = v4 + qword_26B0411F8;
  uint64_t v16 = sub_241CD9ED0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v15, v16);
  uint64_t v17 = *MEMORY[0x263F46C78];
  uint64_t v18 = sub_241CD9970();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v13, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
  id v20 = a2;
  id v21 = objc_msgSend(v14, sel_data);
  if (v21)
  {
    uint64_t v22 = v21;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v23 = sub_241CD6AE0();
    unint64_t v25 = v24;

    sub_241A5D234((uint64_t)v13, (uint64_t)v11);
    uint64_t v29 = 0;
    memset(v28, 0, sizeof(v28));
    id v26 = sub_241A54648(v23, v25, 9, (uint64_t)v11, (uint64_t)v20, 0, (uint64_t)v28);

    sub_241A37374(v23, v25);
    sub_241A32954((uint64_t)v13, (uint64_t (*)(void))sub_241A5D1DC);
    id v27 = v26;
    a3(v26, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_241A9467C()
{
  sub_241A32954(v0 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GAD7AssessmentMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B037FA0;
  if (!qword_26B037FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A94794()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241A947D0()
{
  uint64_t v0 = sub_241CD6DE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F07740], v0);
  sub_241CD6DF0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_241A948C0(id a1, char a2, void (*a3)(id, id, uint64_t))
{
  if (a2)
  {
    id v5 = a1;
    id v6 = a1;
    id v7 = 0;
    uint64_t v8 = 1;
  }
  else
  {
    id v9 = a1;
    id v6 = a1;
    id v7 = a1;
    uint64_t v8 = 0;
  }
  a3(v6, v7, v8);

  sub_241A960B8(a1);
}

uint64_t sub_241A94940(uint64_t a1, uint64_t a2)
{
  uint64_t v70 = a1;
  uint64_t v3 = *v2;
  uint64_t v72 = a2;
  uint64_t v73 = v3;
  sub_241A55554();
  uint64_t v64 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v65 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v60 = (char *)&v53 - v7;
  sub_241A95E5C();
  uint64_t v62 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v63 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v68 = (uint64_t)&v53 - v11;
  uint64_t v12 = sub_241CD6D00();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v13 = sub_241CDAF60();
  uint64_t v61 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_241CD6EE0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v53 - v21;
  uint64_t v23 = *(void (**)(uint64_t))((char *)v2
                                       + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_gregorianCalendarInCurrentTimeZoneProvider);
  uint64_t v24 = swift_retain();
  v23(v24);
  swift_release();
  uint64_t v67 = v2;
  unint64_t v25 = *(void (**)(uint64_t))((char *)v2
                                       + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_currentDateProvider);
  uint64_t v26 = swift_retain();
  v25(v26);
  swift_release();
  uint64_t v69 = v17;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  uint64_t v28 = v17 + 16;
  id v27 = v29;
  uint64_t v66 = v22;
  uint64_t v71 = v16;
  v29(v20, v22, v16);
  uint64_t v59 = v20;
  sub_241CDAF30();
  sub_241A960C4(&qword_26B0356B8, MEMORY[0x263F090E8]);
  uint64_t result = sub_241CDB030();
  if (result)
  {
    uint64_t v55 = v27;
    uint64_t v56 = v28;
    uint64_t v31 = v64;
    int v32 = v60;
    uint64_t v33 = &v60[*(int *)(v64 + 48)];
    uint64_t v34 = v61;
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    uint64_t v58 = v15;
    v35(v60, v15, v13);
    uint64_t v54 = v33;
    v35(v33, v15, v13);
    int v36 = v65;
    unsigned int v37 = &v65[*(int *)(v31 + 48)];
    v35(v65, v32, v13);
    v35(v37, v33, v13);
    uint64_t v38 = v34;
    unint64_t v39 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    uint64_t v40 = (uint64_t)v63;
    v39(v63, v36, v13);
    char v41 = *(void (**)(char *, uint64_t))(v38 + 8);
    v41(v37, v13);
    uint64_t v42 = &v36[*(int *)(v31 + 48)];
    uint64_t v57 = v13;
    v39(v36, v32, v13);
    v39(v42, v54, v13);
    v39((char *)(v40 + *(int *)(v62 + 36)), v42, v13);
    v41(v36, v13);
    sub_241A95EF0(v40, v68);
    uint64_t v43 = v66;
    uint64_t v44 = v71;
    v55(v59, v66, v71);
    uint64_t v45 = (void *)swift_allocObject();
    char v46 = v67;
    uint64_t v47 = v70;
    v45[2] = v67;
    v45[3] = v47;
    uint64_t v48 = v73;
    v45[4] = v72;
    v45[5] = v48;
    sub_241A95FA4();
    id v50 = objc_allocWithZone(v49);
    swift_retain();
    swift_retain();
    id v51 = (id)sub_241CD7100();
    uint64_t v52 = (void *)sub_241CDB090();
    objc_msgSend(v51, sel_setDebugIdentifier_, v52);

    objc_msgSend(*(id *)((char *)v46 + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_request + 16), sel_executeQuery_, v51);
    v41(v58, v57);
    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v43, v44);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241A94F70(uint64_t a1, void *a2, char a3, uint64_t a4, void (*a5)(id, uint64_t), void *a6)
{
  uint64_t v11 = sub_241CDA1A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v42 - v16;
  if (a3)
  {
    uint64_t v45 = v11;
    uint64_t v29 = a2;
    sub_241CDA0D0();
    uint64_t v30 = a2;
    uint64_t v31 = a2;
    int v32 = sub_241CDA190();
    os_log_type_t v33 = sub_241CDB650();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v47 = v43;
      *(_DWORD *)uint64_t v34 = 136446466;
      uint64_t v44 = a5;
      uint64_t v35 = sub_241CDC270();
      uint64_t v46 = sub_241A33FE4(v35, v36, &v47);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2114;
      unsigned int v37 = a2;
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v46 = v38;
      sub_241CDBBF0();
      unint64_t v39 = v42;
      *uint64_t v42 = v38;
      a5 = v44;
      sub_241A96038(a2, 1);
      sub_241A96038(a2, 1);
      _os_log_impl(&dword_241A23000, v32, v33, "[%{public}s] query failed with error: %{public}@", (uint8_t *)v34, 0x16u);
      sub_241A96044();
      swift_arrayDestroy();
      MEMORY[0x245637F20](v39, -1, -1);
      uint64_t v40 = v43;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v40, -1, -1);
      MEMORY[0x245637F20](v34, -1, -1);
    }
    else
    {
      sub_241A96038(a2, 1);
      sub_241A96038(a2, 1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v45);
    char v41 = a2;
    a5(a2, 1);
    sub_241A96038(a2, 1);
    sub_241A96038(a2, 1);
  }
  else
  {
    uint64_t v43 = a4;
    sub_241CDA0D0();
    sub_241A960AC(a2, 0);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_241CDA190();
    os_log_type_t v19 = sub_241CDB670();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v44 = a5;
      uint64_t v21 = v20;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v42 = a6;
      uint64_t v23 = v22;
      uint64_t v47 = v22;
      *(_DWORD *)uint64_t v21 = 136446466;
      uint64_t v24 = sub_241CDC270();
      uint64_t v46 = sub_241A33FE4(v24, v25, &v47);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v46 = a2[2];
      uint64_t v45 = v11;
      uint64_t v26 = sub_241CDC0D0();
      uint64_t v46 = sub_241A33FE4(v26, v27, &v47);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241A96038(a2, 0);
      sub_241A96038(a2, 0);
      _os_log_impl(&dword_241A23000, v18, v19, "[%{public}s] query found %s summarie(s).", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v23, -1, -1);
      uint64_t v28 = v21;
      a5 = v44;
      MEMORY[0x245637F20](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v45);
    }
    else
    {
      sub_241A96038(a2, 0);
      sub_241A96038(a2, 0);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
    sub_241A95484((uint64_t)a2, a5);
  }
}

void sub_241A95484(uint64_t a1, void (*a2)(id, uint64_t))
{
  if (a1 && *(void *)(a1 + 16))
  {
    uint64_t v4 = *(void *)(sub_241CD70F0() - 8);
    id v5 = sub_241A9559C(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    id v8 = v5;
    a2(v5, 0);

    uint64_t v6 = v8;
  }
  else
  {
    sub_241A9610C();
    uint64_t v7 = swift_allocError();
    a2((id)v7, 1);
    uint64_t v6 = (void *)v7;
  }
}

id sub_241A9559C(uint64_t a1)
{
  uint64_t v54 = *v1;
  sub_241A5D1DC();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v63 = (char *)v49 - v8;
  uint64_t v9 = sub_241CDAF60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  uint64_t v56 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CD70F0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v61 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v49 - v17;
  uint64_t v60 = sub_241CDA1A0();
  uint64_t v58 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v20 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0D0();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v62 = v13;
  uint64_t v59 = v21;
  v21(v18, a1, v13);
  uint64_t v22 = sub_241CDA190();
  os_log_type_t v23 = sub_241CDB670();
  int v53 = v23;
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v57 = v7;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v52 = v2;
    uint64_t v26 = v25;
    uint64_t v51 = swift_slowAlloc();
    *(void *)&v64[0] = v51;
    *(_DWORD *)uint64_t v26 = 136315394;
    os_log_t v50 = v22;
    uint64_t v27 = sub_241CDC270();
    uint64_t v54 = a1;
    uint64_t v66 = sub_241A33FE4(v27, v28, (uint64_t *)v64);
    v49[1] = &v67;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    v49[0] = v26 + 14;
    uint64_t v29 = v12;
    sub_241CD7090();
    sub_241A960C4(qword_26B0350A0, MEMORY[0x263F090E8]);
    uint64_t v30 = v55;
    uint64_t v31 = sub_241CDC0D0();
    unint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v30);
    uint64_t v66 = sub_241A33FE4(v31, v33, (uint64_t *)v64);
    sub_241CDBBF0();
    a1 = v54;
    swift_bridgeObjectRelease();
    uint64_t v34 = v62;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v62);
    uint64_t v22 = v50;
    _os_log_impl(&dword_241A23000, v50, (os_log_type_t)v53, "[%s] encoding summary with morning index: %s", (uint8_t *)v26, 0x16u);
    uint64_t v35 = v51;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v35, -1, -1);
    MEMORY[0x245637F20](v26, -1, -1);
  }
  else
  {
    uint64_t v34 = v62;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v62);
  }

  (*(void (**)(char *, uint64_t))(v58 + 8))(v20, v60);
  sub_241A313AC(0, &qword_26B036908);
  unint64_t v36 = v61;
  v59(v61, a1, v34);
  unsigned int v37 = (void *)sub_241A49124(v36);
  uint64_t v38 = (uint64_t)v63;
  sub_241CD9A90();
  uint64_t v39 = *MEMORY[0x263F46C50];
  uint64_t v40 = sub_241CD9970();
  uint64_t v41 = *(void *)(v40 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 104))(v38, v39, v40);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  id result = objc_msgSend(v37, sel_data);
  if (result)
  {
    uint64_t v43 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v44 = sub_241CD6AE0();
    unint64_t v46 = v45;

    uint64_t v47 = (uint64_t)v57;
    sub_241A5D234(v38, (uint64_t)v57);
    uint64_t v65 = 0;
    memset(v64, 0, sizeof(v64));
    id v48 = sub_241A54648(v44, v46, 4, v47, 0, 0, (uint64_t)v64);
    sub_241A37374(v44, v46);

    sub_241A32954(v38, (uint64_t (*)(void))sub_241A5D1DC);
    return v48;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241A95C00()
{
  sub_241A32954(v0 + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_request, type metadata accessor for SummariesFullProfileExecutor.Request);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241A95CA0()
{
  return type metadata accessor for BalanceCurrentValueSharableModelStep();
}

uint64_t type metadata accessor for BalanceCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B036418;
  if (!qword_26B036418) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A95CF4()
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241A95D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_retain();
  sub_241A94940((uint64_t)sub_241A95E50, v5);

  return swift_release();
}

uint64_t sub_241A95E18()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241A95E50(void *a1, char a2)
{
  sub_241A948C0(a1, a2 & 1, *(void (**)(id, id, uint64_t))(v2 + 16));
}

void sub_241A95E5C()
{
  if (!qword_26B0367B8)
  {
    sub_241CDAF60();
    sub_241A960C4(&qword_26B0356B8, MEMORY[0x263F090E8]);
    unint64_t v0 = sub_241CDB040();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0367B8);
    }
  }
}

uint64_t sub_241A95EF0(uint64_t a1, uint64_t a2)
{
  sub_241A95E5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241A95F54()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_241A95F94(uint64_t a1, void *a2, char a3)
{
  sub_241A94F70(a1, a2, a3 & 1, *(void *)(v3 + 16), *(void (**)(id, uint64_t))(v3 + 24), *(void **)(v3 + 32));
}

void sub_241A95FA4()
{
  if (!qword_26B035068)
  {
    sub_241CD70F0();
    sub_241A960C4(&qword_26B035060, MEMORY[0x263F42D70]);
    unint64_t v0 = sub_241CD7110();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035068);
    }
  }
}

void sub_241A96038(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_241A96044()
{
  if (!qword_26B038850)
  {
    sub_241A313AC(255, qword_26B038448);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B038850);
    }
  }
}

id sub_241A960AC(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_241A960B8(id a1)
{
}

uint64_t sub_241A960C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241A9610C()
{
  unint64_t result = qword_268D42488;
  if (!qword_268D42488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42488);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BalanceCurrentValueSharableModelStep.BalanceProcessingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x241A961FCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BalanceCurrentValueSharableModelStep.BalanceProcessingError()
{
  return &type metadata for BalanceCurrentValueSharableModelStep.BalanceProcessingError;
}

unint64_t sub_241A96238()
{
  unint64_t result = qword_268D42490;
  if (!qword_268D42490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42490);
  }
  return result;
}

uint64_t sub_241A9628C(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a1;
  uint64_t v43 = sub_241CD7740();
  uint64_t v4 = *(void *)(v43 - 8);
  uint64_t v42 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v43);
  uint64_t v40 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A97C48();
  uint64_t v35 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A97E14();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  uint64_t v38 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A9800C();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v45 = v14;
  uint64_t v46 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v44 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = a2;
  *(void *)(swift_allocObject() + 16) = v2;
  sub_241A97D54();
  uint64_t v17 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x263EFDE08];
  sub_241A980E8(0, &qword_26B032848, MEMORY[0x263EFDE08]);
  uint64_t v39 = MEMORY[0x263EFDCF8];
  sub_241A97B40((unint64_t *)&qword_26B02EA70, (void (*)(uint64_t))sub_241A97D54);
  sub_241A97DD0(&qword_26B02EAA8, &qword_26B032848, v17);
  sub_241CDA750();
  swift_release();
  sub_241A97B40(&qword_26B02E9A8, (void (*)(uint64_t))sub_241A97C48);
  uint64_t v18 = v35;
  sub_241CDA7D0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  sub_241A97B40(&qword_26B02E930, (void (*)(uint64_t))sub_241A97E14);
  uint64_t v19 = v41;
  uint64_t v20 = v37;
  uint64_t v21 = sub_241CDA660();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v20);
  uint64_t v47 = v21;
  uint64_t v22 = v40;
  uint64_t v23 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v40, v19, v43);
  unint64_t v24 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v25 = (v42 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v26 + v24, v22, v23);
  *(void *)(v26 + v25) = v36;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_241A98204;
  *(void *)(v27 + 24) = v26;
  unint64_t v28 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_241A980E8(0, &qword_26B0327C8, MEMORY[0x263EFDCF0]);
  sub_241A35FBC(0, &qword_26B032058);
  sub_241A97DD0(&qword_26B02EA78, &qword_26B0327C8, v28);
  uint64_t v29 = v44;
  sub_241CDA710();
  swift_release();
  swift_release();
  sub_241A97B40(&qword_26B02E980, (void (*)(uint64_t))sub_241A9800C);
  uint64_t v30 = v45;
  uint64_t v31 = v29;
  uint64_t v32 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v30);
  return v32;
}

uint64_t sub_241A96860(void **a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_241CDA0F0();
  id v9 = v8;
  id v10 = v8;
  uint64_t v11 = sub_241CDA190();
  os_log_type_t v12 = sub_241CDB650();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v4;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = v15;
    uint64_t v25 = a2;
    *(_DWORD *)uint64_t v14 = 136446466;
    swift_getMetatypeMetadata();
    uint64_t v16 = sub_241CDB120();
    uint64_t v25 = sub_241A33FE4(v16, v17, &v24);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    uint64_t v25 = (uint64_t)v8;
    id v18 = v8;
    sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
    uint64_t v19 = sub_241CDB120();
    uint64_t v25 = sub_241A33FE4(v19, v20, &v24);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241A23000, v11, v12, "[%{public}s] Darwin notification publisher failed due to error: %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v15, -1, -1);
    MEMORY[0x245637F20](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_241CDA5E0();
}

uint64_t sub_241A96B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_241CDA1A0();
  uint64_t v10 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  os_log_type_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA0F0();
  uint64_t v13 = sub_241CDA190();
  os_log_type_t v14 = sub_241CDB670();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v29 = a1;
    uint64_t v15 = swift_slowAlloc();
    unint64_t v28 = v9;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v30 = a3;
    uint64_t v18 = v17;
    uint64_t v32 = v17;
    uint64_t v33 = a2;
    uint64_t v27 = v6;
    *(_DWORD *)uint64_t v16 = 136446210;
    swift_getMetatypeMetadata();
    uint64_t v19 = sub_241CDB120();
    uint64_t v33 = sub_241A33FE4(v19, v20, &v32);
    a1 = v29;
    uint64_t v6 = v27;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v13, v14, "[%{public}s] Submitting a sharable model generator for wheelchair setting", v16, 0xCu);
    swift_arrayDestroy();
    uint64_t v21 = v18;
    a3 = v30;
    MEMORY[0x245637F20](v21, -1, -1);
    uint64_t v22 = v16;
    id v9 = v28;
    MEMORY[0x245637F20](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v23 = type metadata accessor for WheelchairSettingModelGenerator();
  swift_allocObject();
  uint64_t v24 = sub_241B76AB4((uint64_t)v9);
  a3[3] = v23;
  uint64_t result = sub_241A97B40(&qword_26B02F290, (void (*)(uint64_t))type metadata accessor for WheelchairSettingModelGenerator);
  a3[4] = result;
  *a3 = v24;
  return result;
}

uint64_t sub_241A96E24()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries39WheelchairSettingModelGeneratorPipeline_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries39WheelchairSettingModelGeneratorPipeline_context;
  uint64_t v4 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_241A96F18()
{
  return type metadata accessor for WheelchairSettingModelGeneratorPipeline();
}

uint64_t type metadata accessor for WheelchairSettingModelGeneratorPipeline()
{
  uint64_t result = qword_26B02F728;
  if (!qword_26B02F728) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A96F6C()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD7740();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_241A97044()
{
  return swift_retain();
}

uint64_t sub_241A97058@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries39WheelchairSettingModelGeneratorPipeline_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void *sub_241A970D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a2;
  uint64_t v34 = *v3;
  uint64_t v35 = a3;
  uint64_t v32 = sub_241CD7650();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v31 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD7740();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A97A1C();
  MEMORY[0x270FA5388](v10 - 8);
  os_log_type_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_241CD7690();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v3;
  uint64_t v17 = (char *)v3 + OBJC_IVAR____TtC9Summaries39WheelchairSettingModelGeneratorPipeline_context;
  uint64_t v18 = v9;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v19(v17, a1, v6);
  sub_241A97B88(v37, (uint64_t)v12);
  uint64_t v36 = a1;
  v19(v9, a1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t v20 = (void *)sub_241CD76E0();
    uint64_t v21 = qword_26B033770;
    id v29 = v20;
    if (v21 != -1) {
      swift_once();
    }
    (*(void (**)(char *, void, uint64_t))(v30 + 104))(v31, *MEMORY[0x263F45688], v32);
    swift_bridgeObjectRetain();
    sub_241CD7680();

    uint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
    v22(v18, v6);
    sub_241A97BEC((uint64_t)v12);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
    v22(v18, v6);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v23(v16, v12, v13);
  }
  uint64_t v24 = v33;
  v23((char *)v33 + OBJC_IVAR____TtC9Summaries39WheelchairSettingModelGeneratorPipeline_domain, v16, v13);
  uint64_t v25 = v36;
  uint64_t v26 = sub_241A9628C(v36, v35);
  sub_241A97BEC(v37);
  v22((char *)v25, v6);
  *(void *)((char *)v24 + OBJC_IVAR____TtC9Summaries39WheelchairSettingModelGeneratorPipeline_publisher) = v26;
  return v24;
}

void *sub_241A974E0(uint64_t a1)
{
  sub_241A97A1C();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v36 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241CD7740();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v35 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A97A74();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD7650();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_241CD7690();
  uint64_t v13 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)sub_241CD76E0();
  uint64_t v17 = qword_26B033770;
  id v18 = v16;
  if (v17 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F45688], v9);
  swift_bridgeObjectRetain();
  sub_241CD7680();

  uint64_t v19 = (void *)sub_241CD7710();
  uint64_t result = (void *)*MEMORY[0x263F0ADE8];
  if (*MEMORY[0x263F0ADE8])
  {
    uint64_t v21 = a1;
    sub_241CDB190();
    sub_241CD9330();
    swift_allocObject();
    id v31 = v19;
    uint64_t v39 = sub_241CD9320();
    sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
    sub_241A97B40(&qword_26B032198, MEMORY[0x263F44A18]);
    sub_241CDA810();
    swift_release();
    sub_241A97B40(&qword_26B0322E8, (void (*)(uint64_t))sub_241A97A74);
    uint64_t v22 = v33;
    uint64_t v23 = sub_241CDA6D0();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v22);
    uint64_t v25 = v37;
    uint64_t v24 = v38;
    uint64_t v26 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v35, v21, v38);
    uint64_t v27 = (uint64_t)v36;
    uint64_t v28 = v34;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v36, v15, v34);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v27, 0, 1, v28);
    type metadata accessor for WheelchairSettingModelGeneratorPipeline();
    swift_allocObject();
    id v29 = sub_241A970D0(v26, v27, v23);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v24);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v28);
    return v29;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241A97A1C()
{
  if (!qword_26B032030)
  {
    sub_241CD7690();
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032030);
    }
  }
}

void sub_241A97A74()
{
  if (!qword_26B0322F0)
  {
    sub_241CD9330();
    sub_241A35FBC(255, (unint64_t *)&qword_26B038870);
    sub_241A97B40(&qword_26B032198, MEMORY[0x263F44A18]);
    unint64_t v0 = sub_241CDA3B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0322F0);
    }
  }
}

uint64_t sub_241A97B40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241A97B88(uint64_t a1, uint64_t a2)
{
  sub_241A97A1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241A97BEC(uint64_t a1)
{
  sub_241A97A1C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241A97C48()
{
  if (!qword_26B0324E0)
  {
    sub_241A97D54();
    unint64_t v0 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x263EFDE08];
    sub_241A980E8(255, &qword_26B032848, MEMORY[0x263EFDE08]);
    sub_241A97B40((unint64_t *)&qword_26B02EA70, (void (*)(uint64_t))sub_241A97D54);
    sub_241A97DD0(&qword_26B02EAA8, &qword_26B032848, v0);
    unint64_t v1 = sub_241CDA430();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B0324E0);
    }
  }
}

void sub_241A97D54()
{
  if (!qword_26B0327C0)
  {
    sub_241A35FBC(255, (unint64_t *)&qword_26B038870);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0327C0);
    }
  }
}

uint64_t sub_241A97DD0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241A980E8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241A97E14()
{
  if (!qword_26B0322D0)
  {
    sub_241A97F00();
    sub_241A97C48();
    sub_241A97B40(&qword_26B0325D0, (void (*)(uint64_t))sub_241A97F00);
    sub_241A97B40(&qword_26B02E9A8, (void (*)(uint64_t))sub_241A97C48);
    unint64_t v0 = sub_241CDA390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0322D0);
    }
  }
}

void sub_241A97F00()
{
  if (!qword_26B0325D8)
  {
    sub_241A97FB0();
    sub_241A97B40(&qword_26B034CD0, (void (*)(uint64_t))sub_241A97FB0);
    unint64_t v0 = sub_241CDA4A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0325D8);
    }
  }
}

void sub_241A97FB0()
{
  if (!qword_26B034CC8)
  {
    unint64_t v0 = sub_241CDB320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034CC8);
    }
  }
}

void sub_241A9800C()
{
  if (!qword_26B032418)
  {
    unint64_t v0 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_241A980E8(255, &qword_26B0327C8, MEMORY[0x263EFDCF0]);
    sub_241A35FBC(255, &qword_26B032058);
    sub_241A97DD0(&qword_26B02EA78, &qword_26B0327C8, v0);
    unint64_t v1 = sub_241CDA3E0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B032418);
    }
  }
}

void sub_241A980E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241A98150()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241A98160(void **a1)
{
  return sub_241A96860(a1, *(void *)(v1 + 16));
}

uint64_t sub_241A98168()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241A98204@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_241CD7740() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241A96B20(v1 + v4, v5, a1);
}

uint64_t sub_241A982A0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241A982D8()
{
  sub_241A3F384(v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request);
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_configuration;
  uint64_t v2 = sub_241CD9A30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_241A31190(v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_trendAnalysisEngine);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_statisticsQueryConfiguration;
  uint64_t v4 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_anchorDate;
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_endingDate, v6);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_queryDateInterval;
  uint64_t v9 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_241A984DC()
{
  return type metadata accessor for SleepTrendSharableModelStep();
}

uint64_t type metadata accessor for SleepTrendSharableModelStep()
{
  uint64_t result = qword_26B037E28;
  if (!qword_26B037E28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A98530()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_241A98568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v34 = a3;
  uint64_t v32 = a1;
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A9940C();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a2;
  uint64_t v15 = (void *)sub_241CD76D0();
  uint64_t v16 = sub_241B0E5AC((uint64_t)v15);
  if (v17)
  {
    sub_241CDA0F0();
    uint64_t v21 = sub_241CDA190();
    os_log_type_t v22 = sub_241CDB650();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      id v31 = v15;
      uint64_t v24 = (uint8_t *)v23;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v35 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v36 = v4;
      swift_getMetatypeMetadata();
      uint64_t v26 = sub_241CDB120();
      uint64_t v36 = sub_241A33FE4(v26, v27, &v35);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v21, v22, "[%s]: Failed to fetch ECG active algorithm version", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v25, -1, -1);
      uint64_t v28 = v24;
      uint64_t v15 = v31;
      MEMORY[0x245637F20](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v20 = sub_241C9ADD4(v32, v33, v34);
  }
  else
  {
    id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v16);
    uint64_t v36 = sub_241C9ADD4(v32, v33, v34);
    *(void *)(swift_allocObject() + 16) = v18;
    sub_241A994B8();
    sub_241A99528();
    sub_241A995D0(&qword_26B0326D0, (void (*)(uint64_t))sub_241A994B8);
    id v19 = v18;
    sub_241CDA710();
    swift_release();
    swift_release();
    sub_241A995D0(&qword_268D42498, (void (*)(uint64_t))sub_241A9940C);
    uint64_t v20 = sub_241CDA6D0();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v20;
}

void sub_241A9897C(void **a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  if (*a1)
  {
    id v6 = v4;
    id v7 = objc_msgSend(v6, sel_metadata);
    if (v7)
    {
      uint64_t v8 = v7;
      sub_241CDAF90();
    }
    else
    {
      sub_241B5920C(MEMORY[0x263F8EE78]);
    }
    uint64_t v9 = sub_241CDB0D0();
    uint64_t v11 = v10;
    uint64_t v17 = sub_241A313AC(0, (unint64_t *)&qword_26B0304E8);
    *(void *)&long long v16 = a2;
    sub_241A54AA0(&v16, v15);
    id v12 = a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_241B596B8(v15, v9, v11, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = (void *)sub_241CDAF70();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel__setMetadata_, v14);
  }
  *a3 = v4;
}

id sub_241A98AEC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v68 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v65 - v8;
  sub_241A356E4(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v65 - v11;
  sub_241A356E4(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  long long v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v65 - v17;
  self;
  uint64_t v19 = swift_dynamicCastObjCClass();
  if (!v19)
  {
    sub_241CDA140();
    id v38 = a1;
    uint64_t v39 = sub_241CDA190();
    os_log_type_t v40 = sub_241CDB650();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      *(void *)&v69[0] = v67;
      *(_DWORD *)uint64_t v41 = 136315394;
      uint64_t v42 = sub_241CDC270();
      uint64_t v71 = sub_241A33FE4(v42, v43, (uint64_t *)v69);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      id v44 = v38;
      id v45 = objc_msgSend(v44, sel_description);
      uint64_t v46 = sub_241CDB0D0();
      uint64_t v66 = v4;
      uint64_t v47 = v46;
      unint64_t v49 = v48;

      uint64_t v71 = sub_241A33FE4(v47, v49, (uint64_t *)v69);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v39, v40, "[%s]: Unsupported sample type: %s", (uint8_t *)v41, 0x16u);
      uint64_t v50 = v67;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v50, -1, -1);
      MEMORY[0x245637F20](v41, -1, -1);

      (*(void (**)(char *, uint64_t))(v68 + 8))(v7, v66);
      return 0;
    }

    uint64_t v63 = *(void (**)(char *, uint64_t))(v68 + 8);
    uint64_t v64 = v7;
LABEL_12:
    v63(v64, v4);
    return 0;
  }
  uint64_t v20 = (void *)v19;
  id v21 = a1;
  id v22 = sub_241A992D0(v20);
  if (!v22)
  {
    sub_241CDA140();
    id v51 = v21;
    uint64_t v52 = sub_241CDA190();
    os_log_type_t v53 = sub_241CDB650();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      *(void *)&v69[0] = v67;
      *(_DWORD *)uint64_t v54 = 136315394;
      uint64_t v55 = sub_241CDC270();
      uint64_t v71 = sub_241A33FE4(v55, v56, (uint64_t *)v69);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2080;
      uint64_t v66 = v54 + 14;
      id v57 = v51;
      id v58 = objc_msgSend(v57, sel_description);
      uint64_t v59 = sub_241CDB0D0();
      unint64_t v61 = v60;

      uint64_t v71 = sub_241A33FE4(v59, v61, (uint64_t *)v69);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v52, v53, "[%s]: Unable to create ECG data for sample: %s", (uint8_t *)v54, 0x16u);
      uint64_t v62 = v67;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v62, -1, -1);
      MEMORY[0x245637F20](v54, -1, -1);
    }
    else
    {
    }
    uint64_t v63 = *(void (**)(char *, uint64_t))(v68 + 8);
    uint64_t v64 = v9;
    goto LABEL_12;
  }
  uint64_t v23 = v22;
  uint64_t v24 = a2
      + *(int *)(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0) + 32);
  uint64_t v25 = sub_241CD9ED0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v18, v24, v25);
  uint64_t v26 = *MEMORY[0x263F46C78];
  uint64_t v27 = sub_241CD9970();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v18, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v18, 0, 1, v27);
  sub_241A313AC(0, &qword_26B034E48);
  id v29 = v21;
  sub_241CDBB10();

  uint64_t v30 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v12, 0, 1, v30);
  id v31 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v12, 1, 0);
  id result = objc_msgSend(v23, sel_data);
  if (result)
  {
    uint64_t v33 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v34 = sub_241CD6AE0();
    unint64_t v36 = v35;

    sub_241A5D234((uint64_t)v18, (uint64_t)v16);
    uint64_t v70 = 0;
    memset(v69, 0, sizeof(v69));
    id v37 = sub_241A54648(v34, v36, 8, (uint64_t)v16, (uint64_t)v31, 0, (uint64_t)v69);

    sub_241A37374(v34, v36);
    sub_241A5D298((uint64_t)v18);

    return v37;
  }
  __break(1u);
  return result;
}

uint64_t sub_241A9927C()
{
  return type metadata accessor for ElectrocardiogramCurrentValueSummarySharableModelGenerator();
}

uint64_t type metadata accessor for ElectrocardiogramCurrentValueSummarySharableModelGenerator()
{
  uint64_t result = qword_26B030100;
  if (!qword_26B030100) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_241A992D0(void *a1)
{
  uint64_t v2 = sub_241CD6D00();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(a1, sel__algorithmVersion);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_integerValue);
  }
  else
  {
    id v7 = 0;
  }
  sub_241A313AC(0, &qword_26B02E828);
  id v8 = objc_msgSend(a1, sel_privateClassification);
  id v9 = objc_msgSend(a1, sel_endDate);
  sub_241CD6CB0();

  return HKCodableSummaryElectrocardiogramValue.init(algorithmVersion:classification:timestamp:averageHeartRate:)((uint64_t)v7, (uint64_t)v8, (uint64_t)v4, objc_msgSend(a1, sel_averageHeartRate));
}

void sub_241A9940C()
{
  if (!qword_26B032398)
  {
    sub_241A994B8();
    sub_241A99528();
    sub_241A995D0(&qword_26B0326D0, (void (*)(uint64_t))sub_241A994B8);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032398);
    }
  }
}

void sub_241A994B8()
{
  if (!qword_26B0326D8)
  {
    sub_241A99528();
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0326D8);
    }
  }
}

void sub_241A99528()
{
  if (!qword_26B032CE0)
  {
    sub_241A313AC(255, &qword_26B0304D8);
    unint64_t Output = type metadata accessor for SummaryModelQueryOutput();
    if (!v1) {
      atomic_store(Output, (unint64_t *)&qword_26B032CE0);
    }
  }
}

uint64_t sub_241A99590()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_241A995C8(void **a1@<X0>, void *a2@<X8>)
{
  sub_241A9897C(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_241A995D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessAdditionalInputSignalProvider()
{
  return &type metadata for CardioFitnessAdditionalInputSignalProvider;
}

uint64_t sub_241A9962C()
{
  sub_241A99818(0, (unint64_t *)&qword_26B036980, (void (*)(uint64_t))sub_241A78970);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_241CEC2D0;
  sub_241A99818(0, &qword_26B0369C8, type metadata accessor for HKFeatureIdentifier);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB730;
  uint64_t v2 = (void *)*MEMORY[0x263F09730];
  *(void *)(inited + 32) = *MEMORY[0x263F09730];
  id v3 = v2;
  sub_241C698A4(inited);
  swift_setDeallocating();
  type metadata accessor for HKFeatureIdentifier(0);
  swift_arrayDestroy();
  *(void *)(v0 + 56) = sub_241CD7B70();
  *(void *)(v0 + 64) = sub_241A99A74(&qword_26B035548, MEMORY[0x263F45870]);
  sub_241A25BC8((uint64_t *)(v0 + 32));
  sub_241CD7B60();
  sub_241A9986C();
  uint64_t v4 = sub_241CD9680();
  *(void *)(v0 + 96) = v4;
  uint64_t v5 = sub_241A99A74((unint64_t *)&qword_26B035600, MEMORY[0x263F453F0]);
  *(void *)(v0 + 104) = v5;
  sub_241A25BC8((uint64_t *)(v0 + 72));
  sub_241CD7D40();
  sub_241A99970();
  *(void *)(v0 + 136) = v4;
  *(void *)(v0 + 144) = v5;
  sub_241A25BC8((uint64_t *)(v0 + 112));
  sub_241CD7D20();
  return v0;
}

void sub_241A99818(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDC0E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241A9986C()
{
  if (!qword_26B035070)
  {
    type metadata accessor for HKBiologicalSex(255);
    sub_241A99A74(&qword_26B036848, type metadata accessor for HKBiologicalSex);
    sub_241A99A74(&qword_26B036838, type metadata accessor for HKBiologicalSex);
    sub_241A99A74(&qword_26B036840, type metadata accessor for HKBiologicalSex);
    unint64_t v0 = sub_241CD7D70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B035070);
    }
  }
}

void sub_241A99970()
{
  if (!qword_26B035560)
  {
    sub_241CD68F0();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F063B0];
    sub_241A99A74(&qword_26B035478, MEMORY[0x263F063B0]);
    sub_241A99A74(&qword_26B035468, v0);
    sub_241A99A74(&qword_26B035470, v0);
    unint64_t v1 = sub_241CD7D70();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B035560);
    }
  }
}

uint64_t sub_241A99A74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241A99ABC(void *a1)
{
  sub_241A9A408();
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = MEMORY[0x263F8EE78];
  *(void *)(v1 + 24) = v3;
  *(void *)(v1 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3D168]), sel_initWithHealthStore_, a1);
  id v4 = objc_msgSend(self, sel_sharedBehavior);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_features);

  if (!v6)
  {
LABEL_7:
    __break(1u);
    return;
  }
  unsigned int v7 = objc_msgSend(v6, sel_pauseRings);

  if (v7)
  {
    id v8 = objc_msgSend(self, sel_defaultCenter);
    id v9 = objc_msgSend(self, sel_initialPauseStateLoadedNotification);
    id v10 = objc_msgSend(self, sel_mainQueue);
    uint64_t v11 = swift_allocObject();
    swift_weakInit();
    v14[4] = sub_241A9A4A0;
    v14[5] = v11;
    v14[0] = MEMORY[0x263EF8330];
    v14[1] = 1107296256;
    _OWORD v14[2] = sub_241A99F60;
    v14[3] = &unk_26F5C1528;
    id v12 = _Block_copy(v14);
    swift_release();
    id v13 = objc_msgSend(v8, sel_addObserverForName_object_queue_usingBlock_, v9, 0, v10, v12);

    _Block_release(v12);
    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_241A99D04()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(os_unfair_lock_s **)(result + 24);
    swift_retain();
    os_unfair_lock_lock(v1 + 8);
    sub_241A9A4C0((uint64_t)&v1[4]);
    os_unfair_lock_unlock(v1 + 8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_241A99D98(uint64_t a1, uint64_t a2)
{
  sub_241A72DB8(0);
  MEMORY[0x270FA5388](v5 - 8);
  unsigned int v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)a1 = 1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v19 = a1;
    uint64_t v20 = v2;
    id v10 = *(void **)(a2 + 16);
    swift_bridgeObjectRetain_n();
    uint64_t v11 = v8 + 40;
    do
    {
      id v13 = *(void (**)(char *))(v11 - 8);
      swift_retain();
      id v14 = objc_msgSend(v10, sel_resumeDate);
      if (v14)
      {
        uint64_t v15 = v14;
        sub_241CD6CB0();

        uint64_t v16 = sub_241CD6D00();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 0, 1, v16);
      }
      else
      {
        uint64_t v12 = sub_241CD6D00();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
      }
      v13(v7);
      sub_241A9A4DC((uint64_t)v7);
      swift_release();
      v11 += 16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease_n();
    a1 = v19;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = MEMORY[0x263F8EE78];
  return result;
}

uint64_t sub_241A99F60(uint64_t a1)
{
  uint64_t v2 = sub_241CD6830();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_241CD6820();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_241A9A054(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  sub_241A72DB8(0);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)a1 == 1)
  {
    id v11 = objc_msgSend(*(id *)(a4 + 16), sel_resumeDate);
    if (v11)
    {
      uint64_t v12 = v11;
      sub_241CD6CB0();

      uint64_t v13 = sub_241CD6D00();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 0, 1, v13);
    }
    else
    {
      uint64_t v20 = sub_241CD6D00();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
    }
    a2(v10);
    return sub_241A9A4DC((uint64_t)v10);
  }
  else
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a2;
    *(void *)(v14 + 24) = a3;
    uint64_t v15 = *(void **)(a1 + 8);
    swift_retain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_241AF770C(0, v15[2] + 1, 1, v15);
      uint64_t v15 = (void *)result;
    }
    unint64_t v18 = v15[2];
    unint64_t v17 = v15[3];
    if (v18 >= v17 >> 1)
    {
      uint64_t result = (uint64_t)sub_241AF770C((void *)(v17 > 1), v18 + 1, 1, v15);
      uint64_t v15 = (void *)result;
    }
    _OWORD v15[2] = v18 + 1;
    uint64_t v19 = &v15[2 * v18];
    v19[4] = sub_241A9A570;
    v19[5] = v14;
    *(void *)(a1 + 8) = v15;
  }
  return result;
}

uint64_t sub_241A9A244()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HealthStoreActivityRingsResumeDateProvider()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for HealthStoreActivityRingsResumeDateProvider.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for HealthStoreActivityRingsResumeDateProvider.State()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for HealthStoreActivityRingsResumeDateProvider.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for HealthStoreActivityRingsResumeDateProvider.State(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for HealthStoreActivityRingsResumeDateProvider.State(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthStoreActivityRingsResumeDateProvider.State(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthStoreActivityRingsResumeDateProvider.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthStoreActivityRingsResumeDateProvider.State()
{
  return &type metadata for HealthStoreActivityRingsResumeDateProvider.State;
}

void sub_241A9A408()
{
  if (!qword_26B036940)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_241CDBE40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B036940);
    }
  }
}

uint64_t sub_241A9A468()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241A9A4A0()
{
  return sub_241A99D04();
}

uint64_t sub_241A9A4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241A9A4B8()
{
  return swift_release();
}

uint64_t sub_241A9A4C0(uint64_t a1)
{
  return sub_241A99D98(a1, v1);
}

uint64_t sub_241A9A4DC(uint64_t a1)
{
  sub_241A72DB8(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241A9A538()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241A9A570()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_241A9A59C()
{
  uint64_t v1 = OBJC_IVAR____TtC9Summaries17AlertLocalization____lazy_storage___displayTypeController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Summaries17AlertLocalization____lazy_storage___displayTypeController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Summaries17AlertLocalization____lazy_storage___displayTypeController);
LABEL_5:
    id v6 = v2;
    return v3;
  }
  id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *(void *)(v0 + OBJC_IVAR____TtC9Summaries17AlertLocalization_healthStore));
  if (result)
  {
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = result;
    id v3 = result;

    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_241A9A62C(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v79 = a4;
  id v80 = a1;
  uint64_t v10 = sub_241CD78F0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A9DBDC(a2, a5, (uint64_t)v13);
  if (!v6)
  {
    uint64_t v75 = 0;
    uint64_t v76 = v11;
    uint64_t v77 = v10;
    os_log_t v78 = v13;
    id v14 = v80;
    id v15 = objc_msgSend(v80, sel_identifier);
    uint64_t v16 = sub_241CDB0D0();
    uint64_t v18 = v17;

    if (sub_241CDB0D0() == v16 && v19 == v18)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = sub_241CDC100();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        if (sub_241CDB0D0() == v16 && v21 == v18)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v10 = sub_241CDC100();
          swift_bridgeObjectRelease();
          if ((v10 & 1) == 0)
          {
            if (sub_241CDB0D0() == v16 && v23 == v18)
            {
              swift_bridgeObjectRelease();
              goto LABEL_36;
            }
            uint64_t v10 = sub_241CDC100();
            swift_bridgeObjectRelease();
            if (v10)
            {
LABEL_36:
              swift_bridgeObjectRelease();
              if (*(unsigned char *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) != 1)
              {
                uint64_t v40 = 0xD000000000000015;
                uint64_t v41 = "HIGH_HEART_RATE_EVENT";
LABEL_33:
                uint64_t v30 = (uint64_t)v78;
                uint64_t v42 = v75;
                uint64_t v43 = sub_241A9B9B4(v79, v40, (unint64_t)(v41 - 32) | 0x8000000000000000, (uint64_t)v78);
                if (v42)
                {
LABEL_34:
                  uint64_t v31 = v76;
                  goto LABEL_25;
                }
LABEL_43:
                uint64_t v10 = v43;
                uint64_t v31 = v76;
                goto LABEL_25;
              }
LABEL_29:
              sub_241A31064(0, (unint64_t *)&qword_26B038860);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_241CEB730;
              uint64_t v30 = (uint64_t)v78;
              *(void *)(inited + 32) = sub_241CD78D0();
              *(void *)(inited + 40) = v34;
              unint64_t v35 = self;
              unint64_t v36 = (void *)sub_241CDB090();
              sub_241A48DB0(inited);
              id v37 = (void *)sub_241CDB2A0();
              swift_bridgeObjectRelease();
              id v38 = objc_msgSend(v35, sel_localizedUserNotificationStringForKey_arguments_, v36, v37);
LABEL_30:
              id v39 = v38;

              uint64_t v10 = sub_241CDB0D0();
              swift_setDeallocating();
LABEL_31:
              swift_arrayDestroy();
              goto LABEL_24;
            }
            if (sub_241CDB0D0() == v16 && v44 == v18)
            {
              swift_bridgeObjectRelease();
              goto LABEL_42;
            }
            uint64_t v10 = sub_241CDC100();
            swift_bridgeObjectRelease();
            if (v10)
            {
LABEL_42:
              swift_bridgeObjectRelease();
              uint64_t v30 = (uint64_t)v78;
              uint64_t v45 = v75;
              uint64_t v43 = sub_241A9B6E4(v79);
              if (v45) {
                goto LABEL_34;
              }
              goto LABEL_43;
            }
            if (sub_241CDB0D0() == v16 && v46 == v18)
            {
              swift_bridgeObjectRelease();
LABEL_48:
              swift_bridgeObjectRelease();
              char v48 = *(unsigned char *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
              if (v48) {
                uint64_t v49 = 0xD000000000000038;
              }
              else {
                uint64_t v49 = 0xD00000000000003BLL;
              }
              if (*(unsigned char *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification)) {
                uint64_t v50 = 0x8000000241CDE950;
              }
              else {
                uint64_t v50 = 0x8000000241CDE910;
              }
LABEL_54:
              sub_241A31064(0, (unint64_t *)&qword_26B038860);
              uint64_t v51 = swift_initStackObject();
              *(_OWORD *)(v51 + 16) = xmmword_241CEB730;
              uint64_t v30 = (uint64_t)v78;
              *(void *)(v51 + 32) = sub_241CD78D0();
              *(void *)(v51 + 40) = v52;
              uint64_t v10 = sub_241AE4D7C(v49, v50, v48, 0, 0xE000000000000000, v51);
              swift_setDeallocating();
              swift_arrayDestroy();
LABEL_23:
              swift_bridgeObjectRelease();
LABEL_24:
              uint64_t v31 = v76;
LABEL_25:
              (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v77);
              return v10;
            }
            char v47 = sub_241CDC100();
            swift_bridgeObjectRelease();
            if (v47) {
              goto LABEL_48;
            }
            if (sub_241CDB0D0() == v16 && v53 == v18)
            {
              swift_bridgeObjectRelease();
LABEL_59:
              swift_bridgeObjectRelease();
              uint64_t v10 = (uint64_t)v79;
              if (v79)
              {
                uint64_t v55 = v79;
                if (!objc_msgSend(v55, sel_hasCategoryValue))
                {
                  sub_241A9FC24();
                  swift_allocError();
                  *(void *)uint64_t v62 = v10;
                  *(unsigned char *)(v62 + 8) = 0;
                  swift_willThrow();
                  uint64_t v30 = (uint64_t)v78;
                  goto LABEL_34;
                }
                uint64_t v56 = (uint64_t)objc_msgSend(v55, sel_categoryValue);
              }
              else
              {
                uint64_t v56 = 1;
              }
              uint64_t v30 = (uint64_t)v78;
              if (*(unsigned char *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) != 1)
              {
                uint64_t v60 = v75;
                uint64_t v43 = sub_241A9D80C(v56);
                if (v60) {
                  goto LABEL_34;
                }
                goto LABEL_43;
              }
              sub_241A31064(0, (unint64_t *)&qword_26B038860);
              uint64_t v57 = swift_initStackObject();
              *(_OWORD *)(v57 + 16) = xmmword_241CEB730;
              *(void *)(v57 + 32) = sub_241CD78D0();
              *(void *)(v57 + 40) = v58;
              uint64_t v59 = self;
              unint64_t v36 = (void *)sub_241CDB090();
              sub_241A48DB0(v57);
              id v37 = (void *)sub_241CDB2A0();
              swift_bridgeObjectRelease();
              id v38 = objc_msgSend(v59, sel_localizedUserNotificationStringForKey_arguments_, v36, v37);
              goto LABEL_30;
            }
            char v54 = sub_241CDC100();
            swift_bridgeObjectRelease();
            if (v54) {
              goto LABEL_59;
            }
            if (sub_241CDB0D0() == v16 && v61 == v18)
            {
              swift_bridgeObjectRelease();
LABEL_72:
              swift_bridgeObjectRelease();
              char v48 = *(unsigned char *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
              if (v48) {
                uint64_t v49 = 0xD000000000000037;
              }
              else {
                uint64_t v49 = 0xD000000000000034;
              }
              if (*(unsigned char *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification)) {
                uint64_t v50 = 0x8000000241CDE890;
              }
              else {
                uint64_t v50 = 0x8000000241CDE850;
              }
              goto LABEL_54;
            }
            uint64_t v10 = sub_241CDC100();
            swift_bridgeObjectRelease();
            if (v10) {
              goto LABEL_72;
            }
            if (sub_241CDB0D0() == v16 && v63 == v18) {
              goto LABEL_80;
            }
            uint64_t v10 = sub_241CDC100();
            swift_bridgeObjectRelease();
            if ((v10 & 1) == 0)
            {
              if (sub_241CDB0D0() == v16 && v66 == v18) {
                goto LABEL_80;
              }
              uint64_t v10 = sub_241CDC100();
              swift_bridgeObjectRelease();
              if (v10) {
                goto LABEL_82;
              }
              if (sub_241CDB0D0() == v16 && v67 == v18) {
                goto LABEL_80;
              }
              uint64_t v10 = sub_241CDC100();
              swift_bridgeObjectRelease();
              if (v10) {
                goto LABEL_82;
              }
              if (sub_241CDB0D0() == v16 && v68 == v18)
              {
LABEL_80:
                swift_bridgeObjectRelease();
                goto LABEL_82;
              }
              uint64_t v10 = sub_241CDC100();
              swift_bridgeObjectRelease();
              if ((v10 & 1) == 0)
              {
                if (sub_241CDB0D0() == v16 && v69 == v18)
                {
                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  uint64_t v10 = sub_241CDC100();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v10 & 1) == 0)
                  {
                    sub_241A9FC24();
                    swift_allocError();
                    *(void *)uint64_t v73 = v14;
                    *(unsigned char *)(v73 + 8) = 1;
                    id v74 = v14;
                    swift_willThrow();
LABEL_83:
                    uint64_t v31 = v76;
                    uint64_t v30 = (uint64_t)v78;
                    goto LABEL_25;
                  }
                }
                char v70 = *(unsigned char *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
                sub_241A31064(0, (unint64_t *)&qword_26B038860);
                uint64_t v71 = swift_initStackObject();
                *(_OWORD *)(v71 + 16) = xmmword_241CEB730;
                uint64_t v30 = (uint64_t)v78;
                *(void *)(v71 + 32) = sub_241CD78D0();
                *(void *)(v71 + 40) = v72;
                uint64_t v10 = sub_241AE5AA0(0xD00000000000002DLL, 0x8000000241CDE820, v70, v71);
                swift_setDeallocating();
                goto LABEL_31;
              }
            }
LABEL_82:
            swift_bridgeObjectRelease();
            uint64_t v64 = v75;
            uint64_t v65 = sub_241A9E008(v14, (uint64_t)v78);
            if (!v64)
            {
              uint64_t v10 = v65;
              uint64_t v31 = v76;
              uint64_t v30 = (uint64_t)v78;
              goto LABEL_25;
            }
            goto LABEL_83;
          }
        }
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) != 1)
        {
          uint64_t v40 = 0xD000000000000014;
          uint64_t v41 = "LOW_HEART_RATE_EVENT";
          goto LABEL_33;
        }
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRelease();
    int v24 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
    if (*(unsigned char *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification)) {
      uint64_t v25 = 0xD000000000000033;
    }
    else {
      uint64_t v25 = 0xD000000000000038;
    }
    if (*(unsigned char *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification)) {
      uint64_t v26 = 0x8000000241CDE9B0;
    }
    else {
      uint64_t v26 = 0x8000000241CDEA10;
    }
    sub_241A31064(0, (unint64_t *)&qword_26B038860);
    uint64_t v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = xmmword_241CEB730;
    uint64_t v28 = (uint64_t)v78;
    *(void *)(v27 + 32) = sub_241CD78D0();
    *(void *)(v27 + 40) = v29;
    uint64_t v10 = sub_241AE55A4(v25, v26, v24, a3, v27);
    uint64_t v30 = v28;
    swift_setDeallocating();
    swift_arrayDestroy();
    goto LABEL_23;
  }
  return v10;
}

uint64_t sub_241A9B2A0(void *a1, void *a2, uint64_t a3)
{
  id v38 = a1;
  uint64_t v6 = sub_241CD6DD0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CDB070();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD78F0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A9DBDC(a2, a3, (uint64_t)v15);
  if (!v3)
  {
    v35[1] = v11;
    v35[2] = v8;
    uint64_t v36 = v13;
    uint64_t v37 = v12;
    id v16 = v38;
    id v17 = objc_msgSend(v38, sel_identifier);
    uint64_t v18 = sub_241CDB0D0();
    uint64_t v20 = v19;

    if (sub_241CDB0D0() != v18 || v21 != v20)
    {
      char v23 = sub_241CDC100();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_10;
      }
      if (sub_241CDB0D0() != v18 || v24 != v20)
      {
        char v27 = sub_241CDC100();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_10;
        }
        if (sub_241CDB0D0() != v18 || v28 != v20)
        {
          char v29 = sub_241CDC100();
          swift_bridgeObjectRelease();
          if (v29) {
            goto LABEL_10;
          }
          if (sub_241CDB0D0() != v18 || v30 != v20)
          {
            char v31 = sub_241CDC100();
            swift_bridgeObjectRelease();
            if ((v31 & 1) == 0)
            {
              if (sub_241CDB0D0() == v18 && v32 == v20)
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
                char v33 = sub_241CDC100();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v33 & 1) == 0)
                {
                  uint64_t v13 = 0;
                  goto LABEL_11;
                }
              }
              sub_241CDB060();
              if (qword_26B038428 != -1) {
                swift_once();
              }
              id v34 = (id)qword_26B0413A0;
              sub_241CD6DC0();
              uint64_t v25 = sub_241CDB110();
LABEL_27:
              uint64_t v13 = v25;
LABEL_11:
              (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v37);
              return v13;
            }
LABEL_10:
            swift_bridgeObjectRelease();
            uint64_t v25 = sub_241A9F4F0(v16);
            goto LABEL_27;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  return v13;
}

uint64_t sub_241A9B6E4(void *a1)
{
  if (!a1)
  {
    char v15 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
    sub_241A31064(0, (unint64_t *)&qword_26B038860);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241CEB730;
    *(void *)(inited + 32) = sub_241CD78D0();
    *(void *)(inited + 40) = v17;
    uint64_t v1 = sub_241AE4D7C(0xD00000000000003ELL, 0x8000000241CDE740, v15, 0, 0xE000000000000000, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    return v1;
  }
  uint64_t v3 = sub_241CDB0D0();
  uint64_t v5 = v4;
  id v6 = a1;
  uint64_t v7 = sub_241A9EF9C(v6, v3, v5);
  swift_bridgeObjectRelease();
  if (!v7)
  {
LABEL_9:
    sub_241A9FC24();
    swift_allocError();
    *(void *)uint64_t v18 = a1;
    *(unsigned char *)(v18 + 8) = 0;
    swift_willThrow();
    return v1;
  }
  self;
  uint64_t v8 = (void *)swift_dynamicCastObjCClass();
  if (!v8)
  {

    goto LABEL_9;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) == 1)
  {
    sub_241A31064(0, (unint64_t *)&qword_26B038860);
    uint64_t v9 = swift_initStackObject();
    *(_OWORD *)(v9 + 16) = xmmword_241CEB730;
    *(void *)(v9 + 32) = sub_241CD78D0();
    *(void *)(v9 + 40) = v10;
    uint64_t v11 = self;
    uint64_t v12 = (void *)sub_241CDB090();
    sub_241A48DB0(v9);
    uint64_t v13 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v11, sel_localizedUserNotificationStringForKey_arguments_, v12, v13);

    uint64_t v1 = sub_241CDB0D0();
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    uint64_t v1 = (uint64_t)sub_241A9D3B4(v8);
  }

  return v1;
}

uint64_t sub_241A9B9B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v58 = sub_241CD6D00();
  uint64_t v9 = *(void *)(v58 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v58);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  char v15 = (char *)&v48 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v48 - v16;
  if (a1)
  {
    uint64_t v53 = v9;
    uint64_t v18 = a4;
    id v19 = a1;
    sub_241A9D178(v19);
    uint64_t v21 = v20;
    uint64_t v23 = v22;

    if (v5) {
      return v23;
    }
    uint64_t v52 = v21;
    uint64_t v56 = v23;
    id v50 = sub_241A9CF58(10);
    uint64_t v51 = v24;
    id v25 = v19;
    if (objc_msgSend(v25, sel_hasStartDate))
    {
      objc_msgSend(v25, sel_startDate);
      id v26 = (id)HKDecodeDateForValue();
      sub_241CD6CB0();

      a4 = v18;
      uint64_t v9 = v53;
      uint64_t v27 = v58;
      goto LABEL_9;
    }

    a4 = v18;
    uint64_t v9 = v53;
  }
  else
  {
    uint64_t v28 = sub_241AE4D7C(0xD00000000000002ALL, 0x8000000241CDE6D0, *(unsigned char *)(v6 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification), 0, 0xE000000000000000, MEMORY[0x263F8EE78]);
    uint64_t v56 = v29;
    uint64_t v23 = v6;
    id v30 = sub_241A9CF58(10);
    if (v5)
    {
      swift_bridgeObjectRelease();
      return v23;
    }
    id v50 = v30;
    uint64_t v51 = v31;
    uint64_t v52 = v28;
  }
  sub_241CD6CF0();
  sub_241CD6C50();
  uint64_t v27 = v58;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v58);
LABEL_9:
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v15, v27);
  uint64_t v32 = sub_241A9BF40((uint64_t)v17);
  uint64_t v34 = v33;
  uint64_t v36 = sub_241A9C630((uint64_t)v17);
  uint64_t v53 = a4;
  if (qword_26B038428 != -1) {
    swift_once();
  }
  uint64_t v49 = sub_241CD69E0();
  sub_241A9FDEC(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_241CEB720;
  uint64_t v38 = MEMORY[0x263F8D750];
  *(void *)(v37 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v37 + 64) = v38;
  *(void *)(v37 + 32) = v36;
  *(void *)(v37 + 96) = MEMORY[0x263F8D310];
  *(void *)(v37 + 104) = sub_241A55A74();
  *(void *)(v37 + 72) = v32;
  *(void *)(v37 + 80) = v34;
  uint64_t v39 = sub_241CDB0A0();
  uint64_t v49 = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v57[0] = 0;
  v57[1] = 0xE000000000000000;
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  strcpy((char *)v57, "SHARED_ALERT_");
  HIWORD(v57[1]) = -4864;
  sub_241CDB180();
  sub_241CDB180();
  uint64_t v41 = v57[1];
  uint64_t v55 = v57[0];
  char v42 = *(unsigned char *)(v6 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
  sub_241A31064(0, (unint64_t *)&qword_26B038860);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEC3A0;
  *(void *)(inited + 32) = sub_241CD78D0();
  uint64_t v44 = v52;
  *(void *)(inited + 40) = v45;
  *(void *)(inited + 48) = v44;
  uint64_t v46 = v55;
  id v47 = v50;
  *(void *)(inited + 56) = v56;
  *(void *)(inited + 64) = v47;
  *(void *)(inited + 72) = v51;
  *(void *)(inited + 80) = v39;
  *(void *)(inited + 88) = v49;
  uint64_t v23 = sub_241AE4D7C(v46, v41, v42, 0, 0xE000000000000000, inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v58);
  return v23;
}

uint64_t sub_241A9BF40(uint64_t a1)
{
  uint64_t v56 = a1;
  uint64_t v2 = sub_241CD6BB0();
  uint64_t v54 = *(void *)(v2 - 8);
  uint64_t v55 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v53 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241CD6B80();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v48 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD6B90();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  MEMORY[0x270FA5388](v6);
  id v47 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD6A80();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v46 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD6F50();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v45 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_241CD6EE0();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v43 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_241CD6DD0();
  uint64_t v13 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  char v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A9FDEC(0, &qword_26B031FC0, MEMORY[0x263F06FF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  id v19 = (char *)&v40 - v18;
  sub_241A9FDEC(0, &qword_26B031FC8, MEMORY[0x263F07008], v16);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v40 - v21;
  uint64_t v23 = sub_241CD6BD0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v40 = (char *)&v40 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v40 - v30;
  uint64_t v32 = sub_241CD6B20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v22, 1, 1, v32);
  uint64_t v33 = sub_241CD6B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v19, 1, 1, v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_locale, v41);
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v43, v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_calendar, v44);
  sub_241CD6F20();
  sub_241CD6A70();
  sub_241CD6B30();
  uint64_t v34 = v48;
  sub_241CD6B60();
  unint64_t v35 = v47;
  sub_241CD6B50();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v52);
  sub_241CD6B40();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v50);
  uint64_t v36 = v53;
  sub_241CD6BA0();
  uint64_t v37 = v40;
  sub_241CD6BC0();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v55);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v24 + 8);
  v38(v27, v23);
  sub_241A9FD4C(&qword_26B031FD0, MEMORY[0x263F07258]);
  sub_241CD6CE0();
  v38(v37, v23);
  v38(v31, v23);
  return v57;
}

uint64_t sub_241A9C630(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v71 = a1;
  uint64_t v3 = sub_241CD6B80();
  uint64_t v69 = *(void *)(v3 - 8);
  uint64_t v70 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v66 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD6B90();
  uint64_t v67 = *(void *)(v5 - 8);
  uint64_t v68 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v65 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD6A80();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v64 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD6F50();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v63 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_241CD6EE0();
  uint64_t v11 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v61 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_241CD6DD0();
  uint64_t v13 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  char v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A9FDEC(0, &qword_26B031FC0, MEMORY[0x263F06FF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  id v19 = (char *)&v58 - v18;
  sub_241A9FDEC(0, &qword_26B031FC8, MEMORY[0x263F07008], v16);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v58 - v21;
  uint64_t v23 = sub_241CD6BD0();
  uint64_t v59 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v58 - v27;
  uint64_t v29 = sub_241CD6B20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v22, 1, 1, v29);
  uint64_t v30 = sub_241CD6B10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v19, 1, 1, v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v2 + OBJC_IVAR____TtC9Summaries17AlertLocalization_locale, v60);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v61, v2 + OBJC_IVAR____TtC9Summaries17AlertLocalization_calendar, v62);
  sub_241CD6F20();
  uint64_t v31 = (uint64_t)v64;
  sub_241CD6A70();
  sub_241CD6B30();
  uint64_t v32 = v66;
  sub_241CD6B70();
  uint64_t v33 = v65;
  sub_241CD6B50();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v32, v70);
  sub_241CD6B40();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v33, v68);
  sub_241A9FD4C(&qword_26B031FD0, MEMORY[0x263F07258]);
  sub_241CD6CE0();
  uint64_t result = v72;
  unint64_t v35 = HIBYTE(v73) & 0xF;
  uint64_t v36 = v72 & 0xFFFFFFFFFFFFLL;
  if ((v73 & 0x2000000000000000) != 0) {
    unint64_t v37 = HIBYTE(v73) & 0xF;
  }
  else {
    unint64_t v37 = v72 & 0xFFFFFFFFFFFFLL;
  }
  if (!v37)
  {
    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  if ((v73 & 0x1000000000000000) != 0)
  {
    uint64_t v31 = (uint64_t)sub_241A9E5B8(v72, v73, 10);
    char v55 = v54;
    swift_bridgeObjectRelease();
    if ((v55 & 1) == 0) {
      goto LABEL_45;
    }
    goto LABEL_54;
  }
  if ((v73 & 0x2000000000000000) == 0)
  {
    if ((v72 & 0x1000000000000000) != 0) {
      uint64_t v38 = (unsigned __int8 *)((v73 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v38 = (unsigned __int8 *)sub_241CDBE50();
    }
    uint64_t v31 = (uint64_t)sub_241A9E6A0(v38, v36, 10);
    char v40 = v39 & 1;
LABEL_44:
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
    {
LABEL_45:
      uint64_t v50 = *(void (**)(char *, uint64_t))(v59 + 8);
      v50(v26, v23);
      v50(v28, v23);
      return v31;
    }
LABEL_54:
    sub_241A9FC24();
    swift_allocError();
    *(void *)uint64_t v56 = 2;
    *(unsigned char *)(v56 + 8) = 5;
    swift_willThrow();
    uint64_t v57 = *(void (**)(char *, uint64_t))(v59 + 8);
    v57(v26, v23);
    v57(v28, v23);
    return v31;
  }
  v73 &= 0xFFFFFFFFFFFFFFuLL;
  if (v72 == 43)
  {
    if (!v35) {
      goto LABEL_58;
    }
    if (v35 == 1 || (BYTE1(v72) - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v31 = (BYTE1(v72) - 48);
    if (v35 != 2)
    {
      if ((BYTE2(v72) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v31 = 10 * (BYTE1(v72) - 48) + (BYTE2(v72) - 48);
      unint64_t v41 = v35 - 3;
      if (v41)
      {
        uint64_t v42 = (unsigned __int8 *)&v72 + 3;
        while (1)
        {
          unsigned int v43 = *v42 - 48;
          if (v43 > 9) {
            goto LABEL_31;
          }
          uint64_t v44 = 10 * v31;
          if ((unsigned __int128)(v31 * (__int128)10) >> 64 != (10 * v31) >> 63) {
            goto LABEL_31;
          }
          uint64_t v31 = v44 + v43;
          if (__OFADD__(v44, v43)) {
            goto LABEL_31;
          }
          char v40 = 0;
          ++v42;
          if (!--v41) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_43:
    char v40 = 0;
    goto LABEL_44;
  }
  if (v72 != 45)
  {
    if (!v35 || (v72 - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v31 = (v72 - 48);
    if (v35 != 1)
    {
      if ((BYTE1(v72) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v31 = 10 * (v72 - 48) + (BYTE1(v72) - 48);
      unint64_t v45 = v35 - 2;
      if (v45)
      {
        uint64_t v46 = (unsigned __int8 *)&v72 + 2;
        while (1)
        {
          unsigned int v47 = *v46 - 48;
          if (v47 > 9) {
            goto LABEL_31;
          }
          uint64_t v48 = 10 * v31;
          if ((unsigned __int128)(v31 * (__int128)10) >> 64 != (10 * v31) >> 63) {
            goto LABEL_31;
          }
          uint64_t v31 = v48 + v47;
          if (__OFADD__(v48, v47)) {
            goto LABEL_31;
          }
          char v40 = 0;
          ++v46;
          if (!--v45) {
            goto LABEL_44;
          }
        }
      }
    }
    goto LABEL_43;
  }
  if (v35)
  {
    if (v35 != 1 && (BYTE1(v72) - 48) <= 9u)
    {
      if (v35 == 2)
      {
        char v40 = 0;
        uint64_t v31 = -(uint64_t)(BYTE1(v72) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(v72) - 48) <= 9u)
      {
        uint64_t v31 = -10 * (BYTE1(v72) - 48) - (BYTE2(v72) - 48);
        unint64_t v49 = v35 - 3;
        if (!v49) {
          goto LABEL_43;
        }
        uint64_t v51 = (unsigned __int8 *)&v72 + 3;
        while (1)
        {
          unsigned int v52 = *v51 - 48;
          if (v52 > 9) {
            break;
          }
          uint64_t v53 = 10 * v31;
          if ((unsigned __int128)(v31 * (__int128)10) >> 64 != (10 * v31) >> 63) {
            break;
          }
          uint64_t v31 = v53 - v52;
          if (__OFSUB__(v53, v52)) {
            break;
          }
          char v40 = 0;
          ++v51;
          if (!--v49) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_31:
    uint64_t v31 = 0;
    char v40 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

id sub_241A9CF58(uint64_t a1)
{
  uint64_t v3 = sub_241CD6DD0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_locale, v3);
  uint64_t v8 = (void *)sub_241CD6DA0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v7, sel_setLocale_, v8);

  objc_msgSend(v7, sel_setNumberStyle_, 1);
  objc_msgSend(v7, sel_setUsesGroupingSeparator_, 1);
  objc_msgSend(v7, sel_setMaximumFractionDigits_, 0);
  id v9 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
  id v10 = objc_msgSend(v7, sel_stringFromNumber_, v9);

  if (v10)
  {
    id v9 = (id)sub_241CDB0D0();
  }
  else
  {
    sub_241A9FC24();
    swift_allocError();
    *(void *)uint64_t v11 = 2;
    *(unsigned char *)(v11 + 8) = 5;
    swift_willThrow();
  }
  return v9;
}

void sub_241A9D178(void *a1)
{
  uint64_t v3 = sub_241CDB0D0();
  uint64_t v5 = sub_241A9EF9C(a1, v3, v4);
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_7;
  }
  self;
  uint64_t v6 = swift_dynamicCastObjCClass();
  if (!v6)
  {

LABEL_7:
    sub_241A9FC24();
    swift_allocError();
    *(void *)uint64_t v16 = a1;
    *(unsigned char *)(v16 + 8) = 0;
    id v17 = a1;
    swift_willThrow();
    return;
  }
  uint64_t v7 = v6;
  id v8 = objc_allocWithZone(NSNumber);
  id v9 = v5;
  id v10 = objc_msgSend(v8, sel_initWithInteger_, 5);
  id v11 = sub_241A9A59C();
  id v12 = objc_msgSend(v11, sel_displayTypeWithIdentifier_, v10);

  if (v12)
  {

    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46768]), sel_initWithQuantity_, v7);
    id v14 = objc_msgSend(v13, sel_stringWithDisplayType_unitController_, v12, *(void *)(v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_unitPreferenceController));
    if (v14)
    {
      char v15 = v14;
      sub_241CDB0D0();
    }
    else
    {
      sub_241A9FC24();
      swift_allocError();
      *(void *)uint64_t v19 = 1;
      *(unsigned char *)(v19 + 8) = 5;
      swift_willThrow();
    }
  }
  else
  {
    sub_241A9FC24();
    swift_allocError();
    *(void *)uint64_t v18 = 5;
    *(unsigned char *)(v18 + 8) = 2;
    swift_willThrow();
  }
}

NSObject *sub_241A9D3B4(void *a1)
{
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_decibelAWeightedSoundPressureLevelUnit);
  objc_msgSend(a1, sel_doubleValueForUnit_, v7);
  double v9 = v8;

  if (v9 >= 80.0 && v9 < 85.0)
  {
    uint64_t v24 = "SHARED_ALERT_ENVIRONMENTAL_AUDIO_LEVELS_DESCRIPTION_80_%@";
LABEL_24:
    unint64_t v25 = (unint64_t)(v24 - 32) | 0x8000000000000000;
    uint64_t v26 = 0xD000000000000039;
LABEL_25:
    char v27 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
    sub_241A31064(0, (unint64_t *)&qword_26B038860);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241CEB730;
    *(void *)(inited + 32) = sub_241CD78D0();
    *(void *)(inited + 40) = v29;
    char v15 = sub_241AE4D7C(v26, v25, v27, 0, 0xE000000000000000, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    return v15;
  }
  if (v9 >= 85.0 && v9 < 90.0)
  {
    uint64_t v24 = "SHARED_ALERT_ENVIRONMENTAL_AUDIO_LEVELS_DESCRIPTION_85_%@";
    goto LABEL_24;
  }
  if (v9 >= 90.0 && v9 < 95.0)
  {
    uint64_t v24 = "SHARED_ALERT_ENVIRONMENTAL_AUDIO_LEVELS_DESCRIPTION_90_%@";
    goto LABEL_24;
  }
  if (v9 >= 95.0 && v9 < 100.0)
  {
    uint64_t v24 = "SHARED_ALERT_ENVIRONMENTAL_AUDIO_LEVELS_DESCRIPTION_95_%@";
    goto LABEL_24;
  }
  if (v9 >= 100.0)
  {
    uint64_t v26 = 0xD00000000000003ALL;
    unint64_t v25 = 0x8000000241CDE590;
    goto LABEL_25;
  }
  id v14 = v6;
  sub_241CDA0F0();
  char v15 = sub_241CDA190();
  os_log_type_t v16 = sub_241CDB650();
  int v17 = v16;
  uint64_t v18 = v3;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v19 = swift_slowAlloc();
    int v34 = v17;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v37 = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    v33[1] = v20 + 4;
    uint64_t v22 = sub_241CDC270();
    unint64_t v35 = v14;
    uint64_t v36 = sub_241A33FE4(v22, v23, &v37);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2048;
    uint64_t v36 = *(void *)&v9;
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v15, (os_log_type_t)v34, "%s [Audio Exposure] Unsupported audio exposure level %f", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v21, -1, -1);
    MEMORY[0x245637F20](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v35, v18);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v14, v3);
  }
  sub_241A9FC24();
  swift_allocError();
  *(void *)uint64_t v31 = a1;
  *(unsigned char *)(v31 + 8) = 3;
  id v32 = a1;
  swift_willThrow();
  return v15;
}

uint64_t sub_241A9D80C(uint64_t a1)
{
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1 - 1;
  uint64_t v8 = 0xD00000000000003BLL;
  unint64_t v9 = 0x8000000241CDE550;
  switch(v7)
  {
    case 0:
      unint64_t v9 = 0x8000000241CDE4C0;
      uint64_t v8 = 0xD00000000000003ALL;
      goto LABEL_6;
    case 1:
      uint64_t v8 = 0xD00000000000003FLL;
      id v10 = "SHARED_ALERT_WALKING_STEADINESS_DESCRIPTION_INITIAL_VERY_LOW_%@";
      goto LABEL_5;
    case 2:
      goto LABEL_6;
    case 3:
      uint64_t v8 = 0xD000000000000040;
      id v10 = "SHARED_ALERT_WALKING_STEADINESS_DESCRIPTION_REPEATED_VERY_LOW_%@";
LABEL_5:
      unint64_t v9 = (unint64_t)(v10 - 32) | 0x8000000000000000;
LABEL_6:
      char v11 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
      sub_241A31064(0, (unint64_t *)&qword_26B038860);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB730;
      *(void *)(inited + 32) = sub_241CD78D0();
      *(void *)(inited + 40) = v13;
      uint64_t v14 = sub_241AE4D7C(v8, v9, v11, 0, 0xE000000000000000, inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      break;
    default:
      sub_241CDA0F0();
      uint64_t v14 = (uint64_t)v6;
      os_log_type_t v16 = sub_241CDA190();
      os_log_type_t v17 = sub_241CDB650();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v26 = v24;
        *(_DWORD *)uint64_t v18 = 136315394;
        uint64_t v19 = sub_241CDC270();
        uint64_t v25 = sub_241A33FE4(v19, v20, &v26);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2080;
        uint64_t v25 = 0x8000000241CDE550;
        type metadata accessor for HKCategoryValueAppleWalkingSteadinessEvent(0);
        uint64_t v21 = sub_241CDB120();
        uint64_t v25 = sub_241A33FE4(v21, v22, &v26);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v16, v17, "%s [Walking Steadiness] Unsupported steadiness event %s", (uint8_t *)v18, 0x16u);
        uint64_t v14 = v24;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v14, -1, -1);
        MEMORY[0x245637F20](v18, -1, -1);
      }

      (*(void (**)(char *, unint64_t))(v4 + 8))(v6, 0xD00000000000003BLL);
      sub_241A9FC24();
      swift_allocError();
      *(void *)uint64_t v23 = 0x8000000241CDE550;
      *(unsigned char *)(v23 + 8) = 4;
      swift_willThrow();
      break;
  }
  return v14;
}

uint64_t sub_241A9DBDC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A9FDEC(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v32 - v13;
  sub_241A9FC78(a2, (uint64_t)v32 - v13);
  uint64_t v15 = sub_241CD78F0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a3, v14, v15);
  }
  v32[1] = v7;
  uint64_t v33 = v8;
  uint64_t v34 = v9;
  sub_241A9FE50((uint64_t)v14, &qword_26B032040, MEMORY[0x263F45718]);
  os_log_type_t v17 = (void *)sub_241CD73C0();
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = objc_msgSend(v17, sel_type);

    if (v19 == (id)1) {
      return sub_241CD78C0();
    }
  }
  uint64_t v21 = v11;
  sub_241CDA0F0();
  id v22 = a1;
  uint64_t v23 = sub_241CDA190();
  os_log_type_t v24 = sub_241CDB650();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v37 = v35;
    *(_DWORD *)uint64_t v25 = 136315395;
    uint64_t v26 = sub_241CDC270();
    uint64_t v36 = sub_241A33FE4(v26, v27, &v37);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2081;
    uint64_t v28 = sub_241CD73E0();
    uint64_t v36 = sub_241A33FE4(v28, v29, &v37);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v23, v24, "%s Unexpected empty profile display name with non-primary profile %{private}s", (uint8_t *)v25, 0x16u);
    uint64_t v30 = v35;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v30, -1, -1);
    MEMORY[0x245637F20](v25, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v33);
  sub_241A9FC24();
  swift_allocError();
  *(void *)uint64_t v31 = 0;
  *(unsigned char *)(v31 + 8) = 5;
  return swift_willThrow();
}

uint64_t sub_241A9E008(void *a1, uint64_t a2)
{
  uint64_t v6 = sub_241CD6DD0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_241CDB070();
  MEMORY[0x270FA5388](v7 - 8);
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) == 1)
  {
    sub_241A31064(0, (unint64_t *)&qword_26B038860);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241CEB730;
    *(void *)(inited + 32) = sub_241CD78D0();
    *(void *)(inited + 40) = v9;
    uint64_t v10 = self;
    char v11 = (void *)sub_241CDB090();
    sub_241A48DB0(inited);
    uint64_t v12 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v10, sel_localizedUserNotificationStringForKey_arguments_, v11, v12);

    a2 = sub_241CDB0D0();
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    sub_241A9F2B4(a1);
    if (!v3)
    {
      swift_bridgeObjectRetain();
      sub_241CDB060();
      if (qword_26B038428 != -1) {
        swift_once();
      }
      id v14 = (id)qword_26B0413A0;
      sub_241CD6DC0();
      sub_241CDB110();
      swift_bridgeObjectRelease();
      sub_241A3DE4C();
      a2 = sub_241CDBC10();
      swift_bridgeObjectRelease();
    }
  }
  return a2;
}

uint64_t sub_241A9E2E4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries17AlertLocalization_calendar;
  uint64_t v2 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries17AlertLocalization_locale;
  uint64_t v4 = sub_241CD6DD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_241A9E3F8()
{
  return type metadata accessor for AlertLocalization();
}

uint64_t type metadata accessor for AlertLocalization()
{
  uint64_t result = qword_26B02ED80;
  if (!qword_26B02ED80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241A9E44C()
{
  uint64_t result = sub_241CD6EE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD6DD0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_241A9E53C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_241CDB1F0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x245636500](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_241A9E5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_241CDB210();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_241A9E91C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_241CDBE50();
  }
LABEL_7:
  uint64_t v11 = sub_241A9E6A0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_241A9E6A0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_241A9E91C()
{
  unint64_t v0 = sub_241CDB220();
  uint64_t v4 = sub_241A9E99C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_241A9E99C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_241A9EAF4(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_241A344E0(v9, 0);
      unint64_t v12 = sub_241A9EBF4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_241CDBE50();
LABEL_4:
        JUMPOUT(0x2456364A0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x2456364A0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2456364A0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_241A9EAF4(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_241A9E53C(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_241A9E53C(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_241A9EBF4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_241A9E53C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_241CDB1E0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_241CDBE50();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_241A9E53C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_241CDB1B0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void *sub_241A9EE08(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_241CDBF50())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x245637160](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v10 = objc_msgSend(v7, sel_key);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = sub_241CDB0D0();
        uint64_t v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v8;
        }
        char v16 = sub_241CDC100();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_18;
        }
      }

      ++v6;
      if (v9 == v5) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_241A9EF9C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241CD6A60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_metadataDictionary);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = v10;
  if (!objc_msgSend(a1, sel_hasMetadataDictionary)
    || (id v12 = objc_msgSend(v11, sel_keyValuePairs)) == 0)
  {

    return 0;
  }
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  unint64_t v30 = MEMORY[0x263F8EE78];
  id v13 = v12;
  sub_241CDBAE0();
  id v22 = v13;

  sub_241A9FD4C(&qword_26B02E8C0, MEMORY[0x263F06DC0]);
  sub_241CDBBE0();
  while (v29)
  {
    sub_241A54AA0(&v28, v27);
    sub_241A340B8((uint64_t)v27, (uint64_t)v26);
    sub_241A9FD0C();
    if (swift_dynamicCast())
    {
      id v14 = v25;
      if (objc_msgSend(v25, sel_hasKey))
      {
        uint64_t v15 = sub_241A31190((uint64_t)v27);
        MEMORY[0x2456365D0](v15);
        if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241CDB2F0();
        }
        sub_241CDB310();
        sub_241CDB2E0();
        goto LABEL_8;
      }
    }
    sub_241A31190((uint64_t)v27);
LABEL_8:
    sub_241CDBBE0();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v18 = v30;
  uint64_t v19 = v24;
  swift_bridgeObjectRetain();
  char v16 = sub_241A9EE08(v18, v23, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16)
  {
    id v20 = v16;
    sub_241CDBA50();
    char v16 = v21;

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  return v16;
}

unint64_t sub_241A9F2B4(void *a1)
{
  unint64_t v2 = 0xD000000000000037;
  id v3 = objc_msgSend(a1, sel_identifier);
  uint64_t v4 = sub_241CDB0D0();
  uint64_t v6 = v5;

  unint64_t v8 = 0xD000000000000048;
  if (sub_241CDB0D0() == v4 && v7 == v6)
  {
LABEL_14:
    unint64_t v2 = v8;
    goto LABEL_15;
  }
  char v10 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_6:
    unint64_t v2 = v8;
LABEL_16:
    swift_bridgeObjectRelease();
    return v2;
  }
  if (sub_241CDB0D0() == v4 && v11 == v6) {
    goto LABEL_15;
  }
  char v13 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_16;
  }
  unint64_t v8 = 0xD000000000000040;
  if (sub_241CDB0D0() == v4 && v14 == v6) {
    goto LABEL_14;
  }
  char v16 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v16) {
    goto LABEL_6;
  }
  unint64_t v2 = 0xD000000000000041;
  if (sub_241CDB0D0() == v4 && v17 == v6)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  char v18 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    sub_241A9FC24();
    swift_allocError();
    *(void *)uint64_t v19 = a1;
    *(unsigned char *)(v19 + 8) = 1;
    id v20 = a1;
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_241A9F4F0(void *a1)
{
  sub_241A9FDEC(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v17 - v4;
  uint64_t v6 = sub_241CD6DD0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = sub_241CDB070();
  MEMORY[0x270FA5388](v8 - 8);
  sub_241A9F2B4(a1);
  if (!v1)
  {
    uint64_t v18 = v7;
    uint64_t v19 = v6;
    swift_bridgeObjectRetain();
    sub_241CDB060();
    if (qword_26B038428 != -1) {
      swift_once();
    }
    id v9 = (id)qword_26B0413A0;
    sub_241CD6DC0();
    v17[1] = 0x8000000241CDE2E0;
    uint64_t v10 = sub_241CDB110();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_241A31064(0, (unint64_t *)&qword_26B038860);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241CEB720;
    *(void *)(inited + 32) = sub_241CD78D0();
    *(void *)(inited + 40) = v14;
    *(void *)(inited + 48) = v10;
    *(void *)(inited + 56) = v12;
    sub_241CDB060();
    id v15 = (id)qword_26B0413A0;
    sub_241CD6DC0();
    sub_241CDB110();
    sub_241CD6DB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v5, 0, 1, v19);
    sub_241A48ED8(inited);
    uint64_t v6 = sub_241CDB0E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_241A9FE50((uint64_t)v5, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690]);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  return v6;
}

uint64_t sub_241A9F88C(void *a1)
{
  uint64_t v2 = sub_241CD6DD0();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_241CDB070();
  MEMORY[0x270FA5388](v3 - 8);
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = sub_241CDB0D0();
  uint64_t v7 = v6;

  if (sub_241CDB0D0() == v5 && v8 == v7) {
    goto LABEL_13;
  }
  char v10 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v10) {
    goto LABEL_14;
  }
  if (sub_241CDB0D0() == v5 && v11 == v7) {
    goto LABEL_13;
  }
  char v13 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_14;
  }
  if (sub_241CDB0D0() == v5 && v14 == v7) {
    goto LABEL_13;
  }
  char v17 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_14;
  }
  if (sub_241CDB0D0() == v5 && v18 == v7)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v19 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    sub_241CDB060();
    if (qword_26B038428 == -1)
    {
LABEL_15:
      id v15 = (id)qword_26B0413A0;
      sub_241CD6DC0();
      return sub_241CDB110();
    }
LABEL_27:
    swift_once();
    goto LABEL_15;
  }
  if (sub_241CDB0D0() == v5 && v20 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_24;
  }
  char v21 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_24:
    sub_241CDB060();
    if (qword_26B038428 == -1) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
  return 0;
}

unint64_t sub_241A9FC24()
{
  unint64_t result = qword_268D424A0;
  if (!qword_268D424A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D424A0);
  }
  return result;
}

uint64_t sub_241A9FC78(uint64_t a1, uint64_t a2)
{
  sub_241A9FDEC(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_241A9FD0C()
{
  unint64_t result = qword_26B030458;
  if (!qword_26B030458)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B030458);
  }
  return result;
}

uint64_t sub_241A9FD4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241A9FD94()
{
  unint64_t result = qword_26B035008;
  if (!qword_26B035008)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B035008);
  }
  return result;
}

void sub_241A9FDEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241A9FE50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A9FDEC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for AlertLocalization.AlertLocalizationError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_241A9FF08(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_241A9FF08(id result, unsigned __int8 a2)
{
  if (a2 <= 3u && a2 != 2) {
    return result;
  }
  return result;
}

void destroy for AlertLocalization.AlertLocalizationError(uint64_t a1)
{
}

void sub_241A9FF30(id a1, unsigned __int8 a2)
{
  if (a2 <= 3u && a2 != 2) {
}
  }

uint64_t assignWithCopy for AlertLocalization.AlertLocalizationError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_241A9FF08(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_241A9FF30(v5, v6);
  return a1;
}

uint64_t initializeWithTake for AlertLocalization.AlertLocalizationError(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for AlertLocalization.AlertLocalizationError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_241A9FF30(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AlertLocalization.AlertLocalizationError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AlertLocalization.AlertLocalizationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_241AA007C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 4u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_241AA0094(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(void *)unint64_t result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AlertLocalization.AlertLocalizationError()
{
  return &type metadata for AlertLocalization.AlertLocalizationError;
}

uint64_t sub_241AA00C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241CD6EE0();
  uint64_t v84 = *(void (***)(uint64_t, void))(v2 - 8);
  uint64_t v85 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v83 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v82 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A727F4(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v81 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v86 = (void (*)(uint64_t, id))((char *)&v78 - v9);
  char v10 = (void *)sub_241CD98D0();
  uint64_t v11 = *(v10 - 1);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v79 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  char v16 = (char *)&v78 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v78 - v17;
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46A40]), sel_initWithHealthStore_, v19);
  type metadata accessor for SummaryTrendFeedItemStringBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v19;
  *(void *)(inited + 24) = v20;
  uint64_t v89 = inited;
  id v22 = (int *)type metadata accessor for SummariesInternalSettingsView();
  sub_241AA64F0(0, &qword_268D424B0, MEMORY[0x263F46BE0], MEMORY[0x263F1B5D0]);
  id v87 = v19;
  id v88 = v20;
  sub_241CDACA0();
  (*(void (**)(char *, char *, void *))(v11 + 16))(v16, v18, v10);
  sub_241CDACB0();
  id v25 = *(char **)(v11 + 8);
  uint64_t v24 = v11 + 8;
  uint64_t v23 = v25;
  id v80 = v10;
  ((void (*)(char *, void *))v25)(v18, v10);
  uint64_t v26 = (char *)(v1 + v22[10]);
  char v27 = *v26;
  uint64_t v28 = *((void *)v26 + 1);
  LOBYTE(v92) = v27;
  *((void *)&v92 + 1) = v28;
  sub_241AAAC78(0, &qword_268D42800, MEMORY[0x263F8D4F8], MEMORY[0x263F1B5D0]);
  sub_241CDACA0();
  if (v90 == 1)
  {
    id v29 = objc_msgSend(self, sel_countUnit);
    uint64_t v81 = (char *)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v29, 20.0);

    uint64_t v30 = *(void *)(v1 + 8);
    LOBYTE(v92) = *(unsigned char *)v1;
    *((void *)&v92 + 1) = v30;
    uint64_t v31 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
    sub_241AAAC78(0, &qword_268D427E0, (uint64_t)&type metadata for SupportedTrendTypes, MEMORY[0x263F1B5D0]);
    sub_241CDACA0();
    id v80 = sub_241AA0CEC((char)v90);
    long long v92 = *(_OWORD *)(v1 + 16);
    sub_241AAAC78(0, &qword_268D427E8, MEMORY[0x263F455D0], v31);
    sub_241CDACA0();
    id v32 = v90;
    uint64_t v33 = (void *)sub_241CD73C0();

    if (v33)
    {
      uint64_t v79 = (char *)objc_msgSend(v33, sel_type);
    }
    else
    {
      uint64_t v79 = 0;
    }
    char v39 = v33 == 0;
    char v40 = (uint64_t (*)(uint64_t))MEMORY[0x263F06358];
    sub_241AA64F0(0, &qword_268D42838, MEMORY[0x263F06358], MEMORY[0x263F8E0F8]);
    sub_241CD6870();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
    sub_241AA64F0(0, &qword_268D424A8, v40, MEMORY[0x263F1B5D0]);
    sub_241CDACA0();
    uint64_t v41 = (uint64_t)v86;
    sub_241CD78C0();
    uint64_t v42 = sub_241CD78F0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 0, 1, v42);
    uint64_t v43 = v1 + v22[12];
    uint64_t v44 = sub_241CD6810();
    uint64_t v45 = *(void *)(v44 - 8);
    uint64_t v46 = (uint64_t)v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v82, v43, v44);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v46, 0, 1, v44);
    unsigned int v47 = (char *)(v1 + v22[8]);
    char v48 = *v47;
    uint64_t v49 = *((void *)v47 + 1);
    LOBYTE(v92) = v48;
    *((void *)&v92 + 1) = v49;
    uint64_t v50 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
    sub_241AAAC78(0, &qword_268D427F0, MEMORY[0x263F47200], MEMORY[0x263F1B5D0]);
    sub_241CDACA0();
    LODWORD(v45) = v90;
    long long v92 = *(_OWORD *)(v1 + v22[9]);
    sub_241AAAC78(0, &qword_268D427F8, MEMORY[0x263F8D6C8], v50);
    sub_241CDACA0();
    uint64_t v51 = (uint64_t)v90;
    uint64_t v52 = (uint64_t)v83;
    sub_241CD6EA0();
    uint64_t v53 = v81;
    uint64_t v54 = v1;
    char v55 = v22;
    uint64_t v56 = v80;
    sub_241CBB0D0(v81, v80, (uint64_t)v79, v39, v41, v46, v45, v51, 0, v52);
    uint64_t v58 = v57;
    uint64_t v60 = v59;

    id v22 = v55;
    uint64_t v1 = v54;
    uint64_t v61 = v58;
    v84[1](v52, v85);
    sub_241AAACC4(v46, (uint64_t (*)(void))sub_241A68508);
    uint64_t v62 = (uint64_t)v86;
  }
  else
  {
    uint64_t v85 = v24;
    uint64_t v86 = (void (*)(uint64_t, id))v23;
    uint64_t v34 = *(void *)(v1 + 8);
    LOBYTE(v92) = *(unsigned char *)v1;
    *((void *)&v92 + 1) = v34;
    uint64_t v35 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
    sub_241AAAC78(0, &qword_268D427E0, (uint64_t)&type metadata for SupportedTrendTypes, MEMORY[0x263F1B5D0]);
    sub_241CDACA0();
    id v36 = sub_241AA0CEC((char)v90);
    long long v92 = *(_OWORD *)(v1 + 16);
    sub_241AAAC78(0, &qword_268D427E8, MEMORY[0x263F455D0], v35);
    sub_241CDACA0();
    uint64_t v37 = v90;
    uint64_t v38 = (void *)sub_241CD73C0();

    if (v38)
    {
      uint64_t v84 = (void (**)(uint64_t, void))objc_msgSend(v38, sel_type);
    }
    else
    {
      uint64_t v84 = 0;
    }
    LODWORD(v83) = v38 == 0;
    uint64_t v63 = (uint64_t (*)(uint64_t))MEMORY[0x263F06358];
    sub_241AA64F0(0, &qword_268D42838, MEMORY[0x263F06358], MEMORY[0x263F8E0F8]);
    sub_241CD6870();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
    sub_241AA64F0(0, &qword_268D424A8, v63, MEMORY[0x263F1B5D0]);
    sub_241CDACA0();
    uint64_t v64 = v81;
    sub_241CD78C0();
    uint64_t v65 = sub_241CD78F0();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v64, 0, 1, v65);
    uint64_t v66 = (uint64_t)v79;
    sub_241CDACA0();
    uint64_t v67 = v1 + v22[12];
    uint64_t v68 = (char *)(v1 + v22[8]);
    char v69 = *v68;
    uint64_t v70 = *((void *)v68 + 1);
    LOBYTE(v92) = v69;
    *((void *)&v92 + 1) = v70;
    uint64_t v71 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
    sub_241AAAC78(0, &qword_268D427F0, MEMORY[0x263F47200], MEMORY[0x263F1B5D0]);
    sub_241CDACA0();
    LODWORD(v63) = v90;
    long long v92 = *(_OWORD *)(v1 + v22[9]);
    sub_241AAAC78(0, &qword_268D427F8, MEMORY[0x263F8D6C8], v71);
    sub_241CDACA0();
    sub_241CBA44C(v36, (uint64_t)v84, (char)v83, (uint64_t)v64, v66, v67, (int)v63, (uint64_t)v90, 0);
    uint64_t v61 = v72;
    uint64_t v60 = v73;

    v86(v66, v80);
    uint64_t v62 = (uint64_t)v64;
  }
  sub_241AAACC4(v62, (uint64_t (*)(void))sub_241A727F4);
  swift_bridgeObjectRelease();
  id v74 = (void *)(v1 + v22[11]);
  uint64_t v75 = v74[1];
  uint64_t v76 = v74[2];
  *(void *)&long long v92 = *v74;
  *((void *)&v92 + 1) = v75;
  uint64_t v93 = v76;
  uint64_t v90 = (void *)v61;
  uint64_t v91 = v60;
  sub_241AAAC78(0, &qword_268D42830, MEMORY[0x263F8D310], MEMORY[0x263F1B5D0]);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_241CDACB0();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

id sub_241AA0CEC(char a1)
{
  switch(a1)
  {
    case 1:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09C38];
      return (id)MEMORY[0x245636A00](*v1);
    case 2:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09E10];
      return (id)MEMORY[0x245636A00](*v1);
    case 3:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09C48];
      return (id)MEMORY[0x245636A00](*v1);
    case 4:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09BC8];
      return (id)MEMORY[0x245636A00](*v1);
    case 5:
      sub_241A313AC(0, (unint64_t *)&qword_26B030390);
      uint64_t v2 = (id *)MEMORY[0x263F09240];
      return (id)MEMORY[0x2456369F0](*v2);
    case 6:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09C18];
      return (id)MEMORY[0x245636A00](*v1);
    case 7:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09DE0];
      return (id)MEMORY[0x245636A00](*v1);
    case 8:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09E60];
      return (id)MEMORY[0x245636A00](*v1);
    case 9:
      sub_241A313AC(0, (unint64_t *)&qword_26B030390);
      uint64_t v2 = (id *)MEMORY[0x263F09388];
      return (id)MEMORY[0x2456369F0](*v2);
    case 10:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09E88];
      return (id)MEMORY[0x245636A00](*v1);
    case 11:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09EA8];
      return (id)MEMORY[0x245636A00](*v1);
    case 12:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09EB0];
      return (id)MEMORY[0x245636A00](*v1);
    case 13:
      sub_241A313AC(0, (unint64_t *)&qword_26B030390);
      uint64_t v2 = (id *)MEMORY[0x263F09410];
      return (id)MEMORY[0x2456369F0](*v2);
    case 14:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09EF8];
      return (id)MEMORY[0x245636A00](*v1);
    case 15:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09EA0];
      return (id)MEMORY[0x245636A00](*v1);
    case 16:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09F20];
      return (id)MEMORY[0x245636A00](*v1);
    case 17:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09E40];
      return (id)MEMORY[0x245636A00](*v1);
    case 18:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09F40];
      return (id)MEMORY[0x245636A00](*v1);
    case 19:
      sub_241A313AC(0, &qword_268D42840);
      id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_workoutType);
      return v4;
    default:
      sub_241A313AC(0, (unint64_t *)&qword_26B030398);
      uint64_t v1 = (id *)MEMORY[0x263F09BC0];
      return (id)MEMORY[0x245636A00](*v1);
  }
}

uint64_t sub_241AA10D0@<X0>(void *a1@<X8>)
{
  uint64_t v144 = a1;
  uint64_t v136 = sub_241CD98D0();
  uint64_t v138 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v132 = (char *)&v121 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_241CD6870();
  uint64_t v131 = *(void *)(v149 - 8);
  MEMORY[0x270FA5388](v149);
  uint64_t v126 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SummariesInternalSettingsView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v163 = v4 - 8;
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AA7CD4();
  uint64_t OpaqueTypeConformance2 = v8;
  uint64_t v162 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v122 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AA9B18();
  uint64_t v146 = v10;
  uint64_t v125 = *(void (***)(char *, uint64_t))(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v123 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AA9BE8();
  uint64_t v127 = v12;
  uint64_t v128 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v147 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AA9D44();
  uint64_t v129 = v14;
  uint64_t v130 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v148 = (char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AA9EBC();
  uint64_t v133 = v16;
  uint64_t v134 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v150 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AAA0A4();
  uint64_t v137 = v18;
  uint64_t v139 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v151 = (char *)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AAA31C();
  uint64_t v142 = v20;
  uint64_t v143 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v135 = (char *)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AAA574();
  uint64_t v157 = v22;
  uint64_t v156 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v152 = (char *)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  long long v153 = (char *)&v121 - v25;
  sub_241CDAA80();
  uint64_t v155 = sub_241CDAB50();
  uint64_t v141 = v26;
  int v140 = v27;
  uint64_t v154 = v28;
  uint64_t v167 = v1;
  sub_241AA7D84(0);
  sub_241AA849C(&qword_268D42780, sub_241AA7D84);
  sub_241CDAB30();
  uint64_t v29 = v1;
  uint64_t v30 = *(void *)(v1 + 8);
  LOBYTE(v172) = *(unsigned char *)v1;
  *((void *)&v172 + 1) = v30;
  uint64_t v31 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
  uint64_t v145 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
  sub_241AAAC78(0, &qword_268D427E0, (uint64_t)&type metadata for SupportedTrendTypes, MEMORY[0x263F1B5D0]);
  sub_241CDACA0();
  uint64_t v165 = type metadata accessor for SummariesInternalSettingsView;
  sub_241AAB044(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SummariesInternalSettingsView);
  uint64_t v32 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v33 = (v32 + 16) & ~v32;
  uint64_t v166 = v33;
  uint64_t v159 = v32 | 7;
  uint64_t v161 = v33 + v6;
  uint64_t v34 = swift_allocObject();
  uint64_t v160 = type metadata accessor for SummariesInternalSettingsView;
  sub_241AAAFDC((uint64_t)v7, v34 + v33, (uint64_t (*)(void))type metadata accessor for SummariesInternalSettingsView);
  uint64_t v35 = sub_241AA849C(&qword_268D42790, (void (*)(uint64_t))sub_241AA7CD4);
  unint64_t v36 = sub_241AA7C64();
  uint64_t v37 = OpaqueTypeConformance2;
  uint64_t v38 = v122;
  sub_241CDAC30();
  swift_release();
  uint64_t v39 = v37;
  (*(void (**)(char *, uint64_t))(v162 + 8))(v38, v37);
  long long v172 = *(_OWORD *)(v29 + 16);
  sub_241AAAC78(0, &qword_268D427E8, MEMORY[0x263F455D0], v31);
  sub_241CDACA0();
  uint64_t v40 = v29;
  uint64_t v41 = v29;
  uint64_t v158 = v7;
  uint64_t v42 = v165;
  sub_241AAB044(v40, (uint64_t)v7, (uint64_t (*)(void))v165);
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v166;
  sub_241AAAFDC((uint64_t)v7, v43 + v166, (uint64_t (*)(void))type metadata accessor for SummariesInternalSettingsView);
  *(void *)&long long v172 = v39;
  *((void *)&v172 + 1) = &type metadata for SupportedTrendTypes;
  uint64_t v173 = v35;
  unint64_t v174 = v36;
  uint64_t v162 = MEMORY[0x263F1B270];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v45 = sub_241AA9CF0();
  uint64_t v46 = v146;
  unsigned int v47 = v123;
  sub_241CDAC30();
  swift_release();

  v125[1](v47, v46);
  uint64_t v48 = v41;
  uint64_t v164 = v41;
  uint64_t v125 = (void (**)(char *, uint64_t))MEMORY[0x263F1B5D0];
  sub_241AA64F0(0, &qword_268D424A8, MEMORY[0x263F06358], MEMORY[0x263F1B5D0]);
  uint64_t v49 = v126;
  sub_241CDACA0();
  uint64_t v50 = v48;
  uint64_t v51 = (uint64_t)v158;
  sub_241AAB044(v50, (uint64_t)v158, (uint64_t (*)(void))v42);
  uint64_t v52 = swift_allocObject() + v44;
  uint64_t v53 = v160;
  sub_241AAAFDC(v51, v52, (uint64_t (*)(void))v160);
  *(void *)&long long v172 = v146;
  *((void *)&v172 + 1) = MEMORY[0x263F455D0];
  uint64_t v173 = OpaqueTypeConformance2;
  unint64_t v174 = v45;
  uint64_t v146 = swift_getOpaqueTypeConformance2();
  uint64_t v54 = sub_241AA849C(&qword_268D427B0, MEMORY[0x263F06358]);
  uint64_t v55 = v127;
  uint64_t v56 = v149;
  uint64_t v57 = v147;
  sub_241CDAC30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v49, v56);
  uint64_t v58 = v55;
  (*(void (**)(char *, uint64_t))(v128 + 8))(v57, v55);
  uint64_t v59 = v164;
  sub_241AA64F0(0, &qword_268D424B0, MEMORY[0x263F46BE0], (uint64_t (*)(uint64_t, uint64_t))v125);
  uint64_t v60 = v132;
  sub_241CDACA0();
  uint64_t v61 = v59;
  uint64_t v62 = (uint64_t)v158;
  sub_241AAB044(v61, (uint64_t)v158, (uint64_t (*)(void))v165);
  uint64_t v63 = swift_allocObject();
  sub_241AAAFDC(v62, v63 + v166, (uint64_t (*)(void))v53);
  *(void *)&long long v172 = v58;
  *((void *)&v172 + 1) = v149;
  uint64_t v173 = v146;
  unint64_t v174 = v54;
  uint64_t v149 = swift_getOpaqueTypeConformance2();
  uint64_t v64 = sub_241AA849C((unint64_t *)&qword_268D42180, MEMORY[0x263F46BE0]);
  uint64_t v65 = v60;
  uint64_t v66 = v129;
  uint64_t v67 = v136;
  uint64_t v68 = v148;
  sub_241CDAC30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v65, v67);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v68, v66);
  uint64_t v69 = v164;
  uint64_t v70 = v164 + *(int *)(v163 + 40);
  char v71 = *(unsigned char *)v70;
  uint64_t v72 = *(void *)(v70 + 8);
  LOBYTE(v172) = v71;
  *((void *)&v172 + 1) = v72;
  uint64_t v73 = v145;
  sub_241AAAC78(0, &qword_268D427F0, MEMORY[0x263F47200], v145);
  sub_241CDACA0();
  id v74 = v165;
  sub_241AAB044(v69, v62, (uint64_t (*)(void))v165);
  uint64_t v75 = swift_allocObject();
  uint64_t v76 = v160;
  sub_241AAAFDC(v62, v75 + v166, (uint64_t (*)(void))v160);
  *(void *)&long long v172 = v66;
  *((void *)&v172 + 1) = v67;
  uint64_t v173 = v149;
  unint64_t v174 = v64;
  uint64_t v77 = swift_getOpaqueTypeConformance2();
  unint64_t v78 = sub_241AAA2C8();
  uint64_t v79 = v133;
  id v80 = v150;
  sub_241CDAC30();
  swift_release();
  uint64_t v81 = v79;
  (*(void (**)(char *, uint64_t))(v134 + 8))(v80, v79);
  uint64_t v82 = v163;
  uint64_t v83 = v164;
  long long v172 = *(_OWORD *)(v164 + *(int *)(v163 + 44));
  sub_241AAAC78(0, &qword_268D427F8, MEMORY[0x263F8D6C8], v73);
  sub_241CDACA0();
  uint64_t v84 = (uint64_t)v158;
  sub_241AAB044(v83, (uint64_t)v158, (uint64_t (*)(void))v74);
  uint64_t v85 = swift_allocObject();
  uint64_t v86 = v84;
  sub_241AAAFDC(v84, v85 + v166, (uint64_t (*)(void))v76);
  *(void *)&long long v172 = v81;
  *((void *)&v172 + 1) = MEMORY[0x263F47200];
  uint64_t v173 = v77;
  unint64_t v174 = v78;
  uint64_t v87 = swift_getOpaqueTypeConformance2();
  id v88 = v135;
  uint64_t v89 = v137;
  uint64_t v90 = v151;
  sub_241CDAC30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v139 + 8))(v90, v89);
  uint64_t v91 = v164;
  uint64_t v92 = v164 + *(int *)(v82 + 48);
  char v93 = *(unsigned char *)v92;
  uint64_t v94 = *(void *)(v92 + 8);
  LOBYTE(v172) = v93;
  *((void *)&v172 + 1) = v94;
  sub_241AAAC78(0, &qword_268D42800, MEMORY[0x263F8D4F8], v145);
  sub_241CDACA0();
  sub_241AAB044(v91, v86, (uint64_t (*)(void))v165);
  uint64_t v95 = swift_allocObject();
  sub_241AAAFDC(v86, v95 + v166, (uint64_t (*)(void))v160);
  *(void *)&long long v172 = v89;
  *((void *)&v172 + 1) = MEMORY[0x263F8D6C8];
  uint64_t v173 = v87;
  unint64_t v174 = MEMORY[0x263F8D6E8];
  swift_getOpaqueTypeConformance2();
  uint64_t v96 = v152;
  uint64_t v97 = v142;
  sub_241CDAC30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v88, v97);
  uint64_t v98 = v156;
  uint64_t v99 = v153;
  uint64_t v100 = v96;
  uint64_t v101 = v96;
  uint64_t v102 = v157;
  (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v153, v100, v157);
  uint64_t v166 = sub_241CDAA70();
  sub_241AA59FC((uint64_t)&v172);
  uint64_t v165 = (uint64_t (*)())v172;
  LOBYTE(v77) = BYTE8(v172);
  uint64_t v163 = v173;
  uint64_t v162 = v174;
  LOBYTE(v88) = v175;
  uint64_t v161 = v176;
  uint64_t v164 = v177;
  LOBYTE(v82) = v178;
  LOBYTE(v172) = v140 & 1;
  uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
  v103(v101, v99, v102);
  LOBYTE(v179) = 1;
  char v171 = v77;
  char v170 = (char)v88;
  char v169 = v82;
  char v168 = 1;
  LOBYTE(v77) = v172;
  uint64_t v104 = v144;
  uint64_t v105 = v155;
  uint64_t v106 = v141;
  *uint64_t v144 = v155;
  v104[1] = v106;
  *((unsigned char *)v104 + 16) = v77;
  v104[3] = v154;
  sub_241AAAA94();
  uint64_t v108 = v107;
  v103((char *)v104 + *(int *)(v107 + 48), v101, v102);
  uint64_t v109 = (char *)v104 + *(int *)(v108 + 64);
  char v110 = (char)v179;
  char v111 = v171;
  LOBYTE(v82) = v170;
  char v112 = v169;
  *(void *)uint64_t v109 = v166;
  *((void *)v109 + 1) = 0;
  v109[16] = v110;
  *((void *)v109 + 3) = v165;
  v109[32] = v111;
  uint64_t v113 = v163;
  uint64_t v114 = v162;
  *((void *)v109 + 5) = v163;
  *((void *)v109 + 6) = v114;
  v109[56] = v82;
  uint64_t v115 = v164;
  *((void *)v109 + 8) = v161;
  *((void *)v109 + 9) = v115;
  v109[80] = v112;
  uint64_t v116 = (char *)v104 + *(int *)(v108 + 80);
  LOBYTE(v115) = v168;
  *(void *)uint64_t v116 = 0;
  v116[8] = v115;
  sub_241AAAC58(v105, v106, v77);
  swift_bridgeObjectRetain();
  uint64_t v117 = v113;
  sub_241AAAC58(v113, v114, v82);
  uint64_t v118 = *(void (**)(char *, uint64_t))(v156 + 8);
  swift_bridgeObjectRetain();
  uint64_t v119 = v157;
  v118(v153, v157);
  sub_241AAAC68(v117, v114, v170);
  swift_bridgeObjectRelease();
  v118(v152, v119);
  sub_241AAAC68(v155, v106, v172);
  return swift_bridgeObjectRelease();
}

uint64_t sub_241AA2488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v106 = a2;
  uint64_t v3 = type metadata accessor for SummariesInternalSettingsView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v96 = (int *)(v3 - 8);
  uint64_t v105 = v4;
  uint64_t v104 = *(void (**)(char *, char *, uint64_t))(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v103 = (void *)((char *)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = MEMORY[0x263F1A830];
  uint64_t v7 = MEMORY[0x263F1A820];
  sub_241AA9AC8(0, &qword_268D42778, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
  uint64_t v128 = v8;
  uint64_t v138 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v125 = (char *)v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v121 = (char *)v90 - v11;
  sub_241AA965C();
  uint64_t v127 = v12;
  uint64_t v137 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v130 = (char *)v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v114 = (char *)v90 - v15;
  sub_241AA9154();
  uint64_t v126 = v16;
  uint64_t v136 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v129 = (char *)v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  char v112 = (char *)v90 - v19;
  uint64_t v101 = (void *)sub_241CDAA50();
  uint64_t v102 = *(v101 - 1);
  MEMORY[0x270FA5388](v101);
  uint64_t v98 = (char *)v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AA9AC8(0, &qword_268D42688, v6, v7, MEMORY[0x263F1B6B8]);
  uint64_t v99 = v21;
  uint64_t v100 = *((void *)v21 - 1);
  MEMORY[0x270FA5388](v21);
  uint64_t v97 = (char *)v90 - v22;
  sub_241AA8FD0();
  uint64_t v135 = v23;
  uint64_t v139 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v131 = (char *)v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v123 = (char *)v90 - v26;
  uint64_t v95 = (uint64_t (*)(uint64_t))MEMORY[0x263F46BE0];
  int v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B750];
  sub_241AA64F0(0, &qword_268D42848, MEMORY[0x263F46BE0], MEMORY[0x263F1B750]);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v94 = (char *)v90 - v29;
  sub_241AA8AC4();
  uint64_t v122 = v30;
  uint64_t v134 = *(void *)(v30 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v124 = (char *)v90 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v119 = (char *)v90 - v33;
  char v93 = (uint64_t (*)(uint64_t))MEMORY[0x263F06358];
  sub_241AA64F0(0, &qword_268D42850, MEMORY[0x263F06358], v27);
  MEMORY[0x270FA5388](v34 - 8);
  uint64_t v92 = (char *)v90 - v35;
  sub_241AA84E4();
  uint64_t v117 = v36;
  uint64_t v133 = *(void *)(v36 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v36);
  unint64_t v120 = (char *)v90 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v115 = (char *)v90 - v39;
  sub_241AA80E4();
  uint64_t v116 = v40;
  uint64_t v132 = *(void *)(v40 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v40);
  uint64_t v118 = (char *)v90 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  char v111 = (char *)v90 - v43;
  sub_241AA7EA8();
  uint64_t v113 = v44;
  uint64_t v110 = *(void *)(v44 - 8);
  uint64_t v45 = MEMORY[0x270FA5388](v44);
  uint64_t v108 = (char *)v90 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  uint64_t v109 = (char *)v90 - v47;
  sub_241CDAA80();
  uint64_t v48 = *(void *)(a1 + 8);
  LOBYTE(v141) = *(unsigned char *)a1;
  *((void *)&v141 + 1) = v48;
  uint64_t v49 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
  uint64_t v91 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F1B5D0];
  sub_241AAAC78(0, &qword_268D427E0, (uint64_t)&type metadata for SupportedTrendTypes, MEMORY[0x263F1B5D0]);
  sub_241CDACC0();
  sub_241AA7F44();
  sub_241AA76CC();
  sub_241AA807C();
  sub_241CDAD10();
  sub_241CDAA80();
  long long v141 = *(_OWORD *)(a1 + 16);
  sub_241AAAC78(0, &qword_268D427E8, MEMORY[0x263F455D0], v49);
  sub_241CDACC0();
  uint64_t v140 = a1;
  sub_241AA81B0(0);
  sub_241AA82F8();
  uint64_t v107 = (void (*)(char *, char *, uint64_t))MEMORY[0x263F1BAD0];
  sub_241AA849C(&qword_268D42590, sub_241AA81B0);
  sub_241CDAD10();
  v90[2] = sub_241CDAA80();
  v90[1] = v50;
  uint64_t v51 = v96;
  uint64_t v52 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_241AA64F0(0, &qword_268D424A8, v93, MEMORY[0x263F1B5D0]);
  sub_241CDACC0();
  sub_241CD6870();
  sub_241AA85E4(0);
  sub_241AA849C(&qword_268D425D0, MEMORY[0x263F06358]);
  sub_241AA849C(&qword_268D42608, sub_241AA85E4);
  sub_241CDAD10();
  sub_241CDAA80();
  sub_241AA64F0(0, &qword_268D424B0, v95, v52);
  sub_241CDACC0();
  sub_241CD98D0();
  sub_241AA8BC4(0);
  sub_241AA849C(&qword_268D42648, MEMORY[0x263F46BE0]);
  sub_241AA849C(&qword_268D42678, sub_241AA8BC4);
  sub_241CDAD10();
  uint64_t v53 = a1 + v51[12];
  char v54 = *(unsigned char *)v53;
  uint64_t v55 = *(void *)(v53 + 8);
  LOBYTE(v141) = v54;
  *((void *)&v141 + 1) = v55;
  uint64_t v56 = v91;
  sub_241AAAC78(0, &qword_268D42800, MEMORY[0x263F8D4F8], v91);
  sub_241CDACC0();
  uint64_t v57 = v97;
  sub_241CDAD30();
  uint64_t v58 = v98;
  sub_241CDAA40();
  sub_241AA90D0();
  sub_241AA849C(&qword_268D42698, MEMORY[0x263F19708]);
  uint64_t v59 = v131;
  uint64_t v60 = v99;
  uint64_t v61 = v101;
  sub_241CDABC0();
  (*(void (**)(char *, void *))(v102 + 8))(v58, v61);
  (*(void (**)(char *, void (*)(void, void, void)))(v100 + 8))(v57, v60);
  (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v123, v59, v135);
  sub_241CDAA80();
  uint64_t v62 = a1 + v51[10];
  char v63 = *(unsigned char *)v62;
  uint64_t v64 = *(void *)(v62 + 8);
  LOBYTE(v141) = v63;
  *((void *)&v141 + 1) = v64;
  sub_241AAAC78(0, &qword_268D427F0, MEMORY[0x263F47200], v56);
  sub_241CDACC0();
  sub_241AA9220(0);
  sub_241A6882C();
  sub_241AA849C(&qword_268D42708, sub_241AA9220);
  sub_241CDAD10();
  sub_241CDAA80();
  long long v141 = *(_OWORD *)(a1 + v51[11]);
  sub_241AAAC78(0, &qword_268D427F8, MEMORY[0x263F8D6C8], v56);
  sub_241CDACC0();
  sub_241AA9720(0);
  sub_241AA849C(&qword_268D42770, sub_241AA9720);
  sub_241CDAD10();
  sub_241CDAA80();
  uint64_t v65 = (void (*)(void, void, void))v103;
  sub_241AAB044(a1, (uint64_t)v103, (uint64_t (*)(void))type metadata accessor for SummariesInternalSettingsView);
  unint64_t v66 = (*(unsigned __int8 *)(v105 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
  uint64_t v67 = swift_allocObject();
  sub_241AAAFDC((uint64_t)v65, v67 + v66, (uint64_t (*)(void))type metadata accessor for SummariesInternalSettingsView);
  sub_241CDACD0();
  uint64_t v99 = *(void (**)(void, void, void))(v110 + 16);
  uint64_t v68 = v108;
  v99(v108, v109, v113);
  uint64_t v107 = *(void (**)(char *, char *, uint64_t))(v132 + 16);
  v107(v118, v111, v116);
  uint64_t v105 = *(void *)(v133 + 16);
  ((void (*)(char *, char *, uint64_t))v105)(v120, v115, v117);
  uint64_t v104 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
  v104(v124, v119, v122);
  uint64_t v103 = *(void **)(v139 + 16);
  ((void (*)(char *, char *, uint64_t))v103)(v131, v123, v135);
  uint64_t v102 = *(void *)(v136 + 16);
  ((void (*)(char *, char *, uint64_t))v102)(v129, v112, v126);
  uint64_t v101 = *(void **)(v137 + 16);
  ((void (*)(char *, char *, uint64_t))v101)(v130, v114, v127);
  uint64_t v100 = *(void *)(v138 + 16);
  ((void (*)(char *, char *, uint64_t))v100)(v125, v121, v128);
  uint64_t v69 = v106;
  v99(v106, v68, v113);
  sub_241AA7DB8();
  char v71 = v70;
  v107((char *)(v69 + v70[12]), v118, v116);
  ((void (*)(uint64_t, char *, uint64_t))v105)(v69 + v71[16], v120, v117);
  v104((char *)(v69 + v71[20]), v124, v122);
  ((void (*)(uint64_t, char *, uint64_t))v103)(v69 + v71[24], v131, v135);
  uint64_t v72 = v126;
  ((void (*)(uint64_t, char *, uint64_t))v102)(v69 + v71[28], v129, v126);
  uint64_t v73 = v127;
  ((void (*)(uint64_t, char *, uint64_t))v101)(v69 + v71[32], v130, v127);
  uint64_t v74 = v69 + v71[36];
  uint64_t v75 = v128;
  ((void (*)(uint64_t, char *, uint64_t))v100)(v74, v125, v128);
  uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v138 + 8);
  v138 += 8;
  uint64_t v107 = v76;
  ((void (*)(char *, uint64_t))v76)(v121, v75);
  uint64_t v77 = *(char **)(v137 + 8);
  v137 += 8;
  uint64_t v121 = v77;
  ((void (*)(char *, uint64_t))v77)(v114, v73);
  unint64_t v78 = *(char **)(v136 + 8);
  v136 += 8;
  uint64_t v114 = v78;
  ((void (*)(char *, uint64_t))v78)(v112, v72);
  uint64_t v79 = *(char **)(v139 + 8);
  v139 += 8;
  char v112 = v79;
  uint64_t v80 = v135;
  ((void (*)(char *, uint64_t))v79)(v123, v135);
  uint64_t v81 = *(void (**)(char *, uint64_t))(v134 + 8);
  v134 += 8;
  uint64_t v82 = v122;
  v81(v119, v122);
  uint64_t v83 = *(void (**)(char *, uint64_t))(v133 + 8);
  v133 += 8;
  uint64_t v84 = v117;
  v83(v115, v117);
  uint64_t v85 = *(void (**)(char *, uint64_t))(v132 + 8);
  v132 += 8;
  uint64_t v86 = v116;
  v85(v111, v116);
  uint64_t v87 = *(void (**)(char *, uint64_t))(v110 + 8);
  uint64_t v88 = v113;
  v87(v109, v113);
  ((void (*)(char *, uint64_t))v107)(v125, v128);
  ((void (*)(char *, uint64_t))v121)(v130, v127);
  ((void (*)(char *, uint64_t))v114)(v129, v126);
  ((void (*)(char *, uint64_t))v112)(v131, v80);
  v81(v124, v82);
  v83(v120, v84);
  v85(v118, v86);
  return ((uint64_t (*)(char *, uint64_t))v87)(v108, v88);
}

uint64_t sub_241AA3B2C()
{
  return sub_241CDAD90();
}

uint64_t sub_241AA3C08@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  sub_241AA3C64(*a1);
  sub_241A3DE4C();
  uint64_t result = sub_241CDAB60();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_241AA3C64(char a1)
{
  uint64_t result = 0x4520657669746341;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x73614D2079646F42;
      break;
    case 2:
      uint64_t result = 0x2073746867696C46;
      break;
    case 3:
    case 4:
    case 8:
    case 11:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
      uint64_t result = 0x6F4820646E617453;
      break;
    case 6:
      uint64_t result = 0x6C4720646F6F6C42;
      break;
    case 7:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 9:
      uint64_t result = 0x206C7566646E694DLL;
      break;
    case 10:
      uint64_t result = 0xD000000000000011;
      break;
    case 12:
      uint64_t result = 0xD000000000000012;
      break;
    case 13:
      uint64_t result = 0x6E41207065656C53;
      break;
    case 14:
      unsigned int v3 = 1885697107;
      goto LABEL_14;
    case 15:
      unsigned int v3 = 1752397136;
LABEL_14:
      uint64_t result = v3 | 0x756F432000000000;
      break;
    case 16:
      uint64_t result = 0x46206F6964726143;
      break;
    case 17:
      uint64_t result = 0x52206F6964726143;
      break;
    case 18:
      uint64_t result = 0xD000000000000012;
      break;
    case 19:
      uint64_t result = 0x7374756F6B726F57;
      break;
    default:
      return result;
  }
  return result;
}

void sub_241AA3EF8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_241CDAA80();
  uint64_t v4 = sub_241CDAB50();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  uint64_t v22 = (void *)sub_241CD7400();
  id v11 = v22;
  sub_241CDAA80();
  uint64_t v12 = sub_241CDAB50();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  char v21 = v17 & 1;
  uint64_t v19 = *(void **)(a1 + *(int *)(type metadata accessor for SummariesInternalSettingsView() + 56));
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v22;
  *(void *)(a2 + 40) = v22;
  *(void *)(a2 + 48) = v12;
  *(void *)(a2 + 56) = v14;
  *(unsigned char *)(a2 + 64) = v18;
  *(void *)(a2 + 72) = v16;
  *(void *)(a2 + 80) = v19;
  *(void *)(a2 + 88) = v19;
  id v20 = v19;
  sub_241AAAC58(v4, v6, v10);
  swift_bridgeObjectRetain();
  sub_241AAB0BC(v22);
  sub_241AAB0AC(v22);
  sub_241AAAC58(v12, v14, v21);
  swift_bridgeObjectRetain();
  sub_241AAB0BC(v19);
  sub_241AAB0AC(v19);
  sub_241AAAC68(v12, v14, v21);
  swift_bridgeObjectRelease();
  sub_241AAB0DC(v19);
  sub_241AAB0CC(v19);
  sub_241AAAC68(v4, v6, v10);
  swift_bridgeObjectRelease();
  sub_241AAB0DC(v22);

  sub_241AAB0CC(v22);
}

uint64_t sub_241AA40E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v110 = a1;
  sub_241AAAEB4();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v134 = (char *)&v104 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AA87A4();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v135 = (uint64_t)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AAAF48();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AA8728(0);
  uint64_t v138 = v8 - 8;
  MEMORY[0x270FA5388](v8 - 8);
  char v10 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD6870();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AA8680(0);
  uint64_t v136 = v15 - 8;
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v109 = (uint64_t)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v108 = (uint64_t)&v104 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v107 = (char *)&v104 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v126 = (uint64_t)&v104 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v137 = (uint64_t)&v104 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v131 = (uint64_t)&v104 - v26;
  sub_241CDAA80();
  int v27 = (void (*)(uint64_t))sub_241CDAB50();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  int v33 = v32 & 1;
  uint64_t v132 = v14;
  sub_241CD6840();
  uint64_t v139 = v12;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v133 = v12 + 16;
  uint64_t v111 = v11;
  v34(v7, v14, v11);
  uint64_t v35 = v34;
  uint64_t v115 = v34;
  uint64_t v37 = v12 + 56;
  uint64_t v36 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
  v36(v7, 0, 1, v11);
  uint64_t v38 = v36;
  uint64_t v114 = (void (*)(uint64_t, void, uint64_t, uint64_t))v36;
  uint64_t v130 = sub_241AAAF48;
  uint64_t v39 = (uint64_t)v7;
  uint64_t v40 = (uint64_t)v7;
  uint64_t v116 = v7;
  uint64_t v41 = v135;
  sub_241AAB044(v39, v135, (uint64_t (*)(void))sub_241AAAF48);
  uint64_t v42 = (uint64_t)&v10[*(int *)(v138 + 44)];
  uint64_t v129 = sub_241AA87A4;
  sub_241AAB044(v41, v42, (uint64_t (*)(void))sub_241AA87A4);
  uint64_t v117 = v27;
  *(void *)char v10 = v27;
  *((void *)v10 + 1) = v29;
  LODWORD(v112) = v33;
  v10[16] = v33;
  *((void *)v10 + 3) = v31;
  uint64_t v43 = (uint64_t)v27;
  uint64_t v44 = v29;
  sub_241AAAC58(v43, v29, v33);
  swift_bridgeObjectRetain();
  uint64_t v128 = sub_241AA87A4;
  sub_241AAACC4(v41, (uint64_t (*)(void))sub_241AA87A4);
  uint64_t v127 = sub_241AAAF48;
  sub_241AAACC4(v40, (uint64_t (*)(void))sub_241AAAF48);
  uint64_t v45 = v134;
  uint64_t v46 = v132;
  uint64_t v47 = v111;
  v35(v134, v132, v111);
  uint64_t v48 = (uint64_t)v45;
  v38(v45, 0, 1, v47);
  uint64_t v49 = v37;
  sub_241AA64F0(0, &qword_268D425F0, MEMORY[0x263F06358], MEMORY[0x263F8D8F0]);
  uint64_t v124 = v50;
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v123 = *(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56);
  uint64_t v125 = v51 + 56;
  v123(v45, 0, 1, v50);
  uint64_t v52 = v137;
  uint64_t v53 = v137 + *(int *)(v136 + 44);
  uint64_t v122 = sub_241AAAEB4;
  sub_241AAB044(v48, v53, (uint64_t (*)(void))sub_241AAAEB4);
  uint64_t v121 = sub_241AA8728;
  sub_241AAB044((uint64_t)v10, v52, (uint64_t (*)(void))sub_241AA8728);
  unint64_t v120 = sub_241AAAEB4;
  sub_241AAACC4(v48, (uint64_t (*)(void))sub_241AAAEB4);
  uint64_t v119 = sub_241AA8728;
  sub_241AAACC4((uint64_t)v10, (uint64_t (*)(void))sub_241AA8728);
  char v54 = *(void (**)(char *, uint64_t))(v139 + 8);
  v139 += 8;
  uint64_t v118 = v54;
  v54(v46, v47);
  sub_241AAAC68((uint64_t)v117, v44, v112);
  swift_bridgeObjectRelease();
  uint64_t v117 = sub_241AA8680;
  sub_241AAAFDC(v52, v131, (uint64_t (*)(void))sub_241AA8680);
  sub_241CDAA80();
  uint64_t v55 = sub_241CDAB50();
  uint64_t v104 = v56;
  uint64_t v112 = v57;
  LODWORD(v31) = v58 & 1;
  sub_241CD6850();
  uint64_t v59 = (uint64_t)v116;
  uint64_t v60 = v47;
  uint64_t v61 = v47;
  uint64_t v62 = v115;
  v115(v116, v46, v61);
  char v63 = v114;
  uint64_t v64 = v49;
  v114(v59, 0, 1, v60);
  uint64_t v65 = v59;
  uint64_t v66 = v59;
  uint64_t v67 = v135;
  sub_241AAB044(v65, v135, (uint64_t (*)(void))v130);
  sub_241AAB044(v67, (uint64_t)&v10[*(int *)(v138 + 44)], (uint64_t (*)(void))v129);
  uint64_t v106 = v55;
  uint64_t v68 = v104;
  *(void *)char v10 = v55;
  *((void *)v10 + 1) = v68;
  int v105 = v31;
  v10[16] = v31;
  *((void *)v10 + 3) = v112;
  uint64_t v69 = v55;
  uint64_t v70 = v68;
  sub_241AAAC58(v69, v68, v31);
  swift_bridgeObjectRetain();
  sub_241AAACC4(v67, (uint64_t (*)(void))v128);
  sub_241AAACC4(v66, (uint64_t (*)(void))v127);
  uint64_t v71 = (uint64_t)v134;
  uint64_t v72 = v132;
  v62(v134, v132, v60);
  uint64_t v113 = v64;
  v63(v71, 0, 1, v60);
  v123((char *)v71, 0, 1, v124);
  uint64_t v73 = v126;
  sub_241AAB044(v71, v126 + *(int *)(v136 + 44), (uint64_t (*)(void))v122);
  sub_241AAB044((uint64_t)v10, v73, (uint64_t (*)(void))v121);
  sub_241AAACC4(v71, (uint64_t (*)(void))v120);
  sub_241AAACC4((uint64_t)v10, (uint64_t (*)(void))v119);
  uint64_t v74 = v72;
  uint64_t v75 = v60;
  v118(v72, v60);
  sub_241AAAC68(v106, v70, v105);
  swift_bridgeObjectRelease();
  sub_241AAAFDC(v73, v137, (uint64_t (*)(void))v117);
  sub_241CDAA80();
  uint64_t v76 = sub_241CDAB50();
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  LOBYTE(v60) = v81 & 1;
  sub_241CD6860();
  uint64_t v82 = (uint64_t)v116;
  uint64_t v83 = v74;
  uint64_t v84 = v115;
  v115(v116, v83, v75);
  uint64_t v85 = v75;
  uint64_t v86 = v114;
  v114(v82, 0, 1, v85);
  uint64_t v87 = v135;
  sub_241AAB044(v82, v135, (uint64_t (*)(void))v130);
  sub_241AAB044(v87, (uint64_t)&v10[*(int *)(v138 + 44)], (uint64_t (*)(void))v129);
  uint64_t v112 = v76;
  *(void *)char v10 = v76;
  *((void *)v10 + 1) = v78;
  v10[16] = v60;
  *((void *)v10 + 3) = v80;
  uint64_t v88 = v76;
  uint64_t v89 = v78;
  sub_241AAAC58(v88, v78, v60);
  swift_bridgeObjectRetain();
  sub_241AAACC4(v87, (uint64_t (*)(void))v128);
  sub_241AAACC4(v82, (uint64_t (*)(void))v127);
  uint64_t v90 = (uint64_t)v134;
  uint64_t v91 = v132;
  uint64_t v92 = v111;
  v84(v134, v132, v111);
  uint64_t v93 = v92;
  v86(v90, 0, 1, v92);
  v123((char *)v90, 0, 1, v124);
  uint64_t v94 = (uint64_t)v107;
  sub_241AAB044(v90, (uint64_t)&v107[*(int *)(v136 + 44)], (uint64_t (*)(void))v122);
  sub_241AAB044((uint64_t)v10, v94, (uint64_t (*)(void))v121);
  sub_241AAACC4(v90, (uint64_t (*)(void))v120);
  sub_241AAACC4((uint64_t)v10, (uint64_t (*)(void))v119);
  v118(v91, v93);
  sub_241AAAC68(v112, v89, v60);
  swift_bridgeObjectRelease();
  uint64_t v95 = v126;
  sub_241AAAFDC(v94, v126, (uint64_t (*)(void))v117);
  uint64_t v96 = v131;
  sub_241AAB044(v131, v94, (uint64_t (*)(void))sub_241AA8680);
  uint64_t v97 = v137;
  uint64_t v98 = v108;
  sub_241AAB044(v137, v108, (uint64_t (*)(void))sub_241AA8680);
  uint64_t v99 = v109;
  sub_241AAB044(v95, v109, (uint64_t (*)(void))sub_241AA8680);
  uint64_t v100 = v110;
  sub_241AAB044(v94, v110, (uint64_t (*)(void))sub_241AA8680);
  sub_241AA8618();
  uint64_t v102 = v101;
  sub_241AAB044(v98, v100 + *(int *)(v101 + 48), (uint64_t (*)(void))sub_241AA8680);
  sub_241AAB044(v99, v100 + *(int *)(v102 + 64), (uint64_t (*)(void))sub_241AA8680);
  sub_241AAACC4(v95, (uint64_t (*)(void))sub_241AA8680);
  sub_241AAACC4(v97, (uint64_t (*)(void))sub_241AA8680);
  sub_241AAACC4(v96, (uint64_t (*)(void))sub_241AA8680);
  sub_241AAACC4(v99, (uint64_t (*)(void))sub_241AA8680);
  sub_241AAACC4(v98, (uint64_t (*)(void))sub_241AA8680);
  return sub_241AAACC4(v94, (uint64_t (*)(void))sub_241AA8680);
}

uint64_t sub_241AA4CE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v88 = a1;
  sub_241AAAD8C();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v93 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AA8CB0();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v94 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AAAE20();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AA8C90(0);
  uint64_t v95 = v8 - 8;
  MEMORY[0x270FA5388](v8 - 8);
  char v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD98D0();
  uint64_t v12 = *(void **)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AA8C5C(0);
  uint64_t v96 = v15 - 8;
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v87 = (uint64_t)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v86 = (char *)&v65 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v92 = (uint64_t)&v65 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v97 = (uint64_t)&v65 - v22;
  sub_241CDAA80();
  uint64_t v23 = sub_241CDAB50();
  uint64_t v90 = v24;
  uint64_t v91 = v23;
  uint64_t v26 = v25;
  int v28 = v27 & 1;
  uint64_t v29 = *MEMORY[0x263F46BD8];
  uint64_t v98 = v12;
  uint64_t v30 = (void (*)(char *, void, uint64_t))v12[13];
  uint64_t v84 = v12 + 13;
  uint64_t v85 = v30;
  uint64_t v89 = v14;
  v30(v14, v29, v11);
  uint64_t v31 = (void (*)(char *, char *, uint64_t))v12[2];
  v31(v7, v14, v11);
  uint64_t v69 = v31;
  uint64_t v70 = v12 + 2;
  char v32 = (void (*)(char *, void, uint64_t, uint64_t))v12[7];
  v32(v7, 0, 1, v11);
  uint64_t v68 = v12 + 7;
  uint64_t v83 = sub_241AAAE20;
  uint64_t v71 = v7;
  uint64_t v33 = v94;
  sub_241AAB044((uint64_t)v7, v94, (uint64_t (*)(void))sub_241AAAE20);
  uint64_t v34 = (uint64_t)&v10[*(int *)(v95 + 44)];
  uint64_t v82 = sub_241AA8CB0;
  sub_241AAB044(v33, v34, (uint64_t (*)(void))sub_241AA8CB0);
  uint64_t v36 = v90;
  uint64_t v35 = v91;
  *(void *)char v10 = v91;
  *((void *)v10 + 1) = v36;
  LODWORD(v66) = v28;
  v10[16] = v28;
  uint64_t v67 = v26;
  *((void *)v10 + 3) = v26;
  sub_241AAAC58(v35, (uint64_t)v36, v28);
  swift_bridgeObjectRetain();
  char v81 = sub_241AA8CB0;
  sub_241AAACC4(v33, (uint64_t (*)(void))sub_241AA8CB0);
  uint64_t v80 = sub_241AAAE20;
  sub_241AAACC4((uint64_t)v7, (uint64_t (*)(void))sub_241AAAE20);
  uint64_t v37 = (uint64_t)v93;
  uint64_t v38 = v89;
  v31(v93, v89, v11);
  v32((char *)v37, 0, 1, v11);
  sub_241AA64F0(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
  uint64_t v78 = v39;
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v77 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56);
  uint64_t v79 = v40 + 56;
  v77(v37, 0, 1, v39);
  uint64_t v41 = v92;
  uint64_t v42 = v92 + *(int *)(v96 + 44);
  uint64_t v76 = sub_241AAAD8C;
  sub_241AAB044(v37, v42, (uint64_t (*)(void))sub_241AAAD8C);
  uint64_t v75 = sub_241AA8C90;
  sub_241AAB044((uint64_t)v10, v41, (uint64_t (*)(void))sub_241AA8C90);
  uint64_t v74 = sub_241AAAD8C;
  sub_241AAACC4(v37, (uint64_t (*)(void))sub_241AAAD8C);
  uint64_t v73 = sub_241AA8C90;
  sub_241AAACC4((uint64_t)v10, (uint64_t (*)(void))sub_241AA8C90);
  uint64_t v43 = (void (*)(char *, uint64_t))v98[1];
  ++v98;
  uint64_t v72 = v43;
  uint64_t v44 = v38;
  v43(v38, v11);
  sub_241AAAC68(v91, (uint64_t)v90, v66);
  swift_bridgeObjectRelease();
  uint64_t v90 = sub_241AA8C5C;
  sub_241AAAFDC(v41, v97, (uint64_t (*)(void))sub_241AA8C5C);
  sub_241CDAA80();
  uint64_t v91 = sub_241CDAB50();
  uint64_t v66 = v45;
  uint64_t v47 = v46;
  LODWORD(v12) = v48 & 1;
  v85(v44, *MEMORY[0x263F46BD0], v11);
  uint64_t v49 = (uint64_t)v71;
  uint64_t v50 = v69;
  v69(v71, v44, v11);
  v32((char *)v49, 0, 1, v11);
  uint64_t v51 = v94;
  sub_241AAB044(v49, v94, (uint64_t (*)(void))v83);
  sub_241AAB044(v51, (uint64_t)&v10[*(int *)(v95 + 44)], (uint64_t (*)(void))v82);
  uint64_t v52 = v91;
  uint64_t v53 = v66;
  *(void *)char v10 = v91;
  *((void *)v10 + 1) = v53;
  char v54 = (char)v12;
  LODWORD(v67) = v12;
  v10[16] = (char)v12;
  *((void *)v10 + 3) = v47;
  uint64_t v55 = v53;
  sub_241AAAC58(v52, v53, v54);
  swift_bridgeObjectRetain();
  sub_241AAACC4(v51, (uint64_t (*)(void))v81);
  sub_241AAACC4(v49, (uint64_t (*)(void))v80);
  uint64_t v56 = (uint64_t)v93;
  uint64_t v57 = v89;
  v50(v93, v89, v11);
  v32((char *)v56, 0, 1, v11);
  v77(v56, 0, 1, v78);
  uint64_t v58 = (uint64_t)v86;
  sub_241AAB044(v56, (uint64_t)&v86[*(int *)(v96 + 44)], (uint64_t (*)(void))v76);
  sub_241AAB044((uint64_t)v10, v58, (uint64_t (*)(void))v75);
  sub_241AAACC4(v56, (uint64_t (*)(void))v74);
  sub_241AAACC4((uint64_t)v10, (uint64_t (*)(void))v73);
  v72(v57, v11);
  sub_241AAAC68(v91, v55, v67);
  swift_bridgeObjectRelease();
  uint64_t v59 = v92;
  sub_241AAAFDC(v58, v92, (uint64_t (*)(void))v90);
  uint64_t v60 = v97;
  sub_241AAB044(v97, v58, (uint64_t (*)(void))sub_241AA8C5C);
  uint64_t v61 = v87;
  sub_241AAB044(v59, v87, (uint64_t (*)(void))sub_241AA8C5C);
  uint64_t v62 = v88;
  sub_241AAB044(v58, v88, (uint64_t (*)(void))sub_241AA8C5C);
  sub_241AA8BF8();
  sub_241AAB044(v61, v62 + *(int *)(v63 + 48), (uint64_t (*)(void))sub_241AA8C5C);
  sub_241AAACC4(v59, (uint64_t (*)(void))sub_241AA8C5C);
  sub_241AAACC4(v60, (uint64_t (*)(void))sub_241AA8C5C);
  sub_241AAACC4(v61, (uint64_t (*)(void))sub_241AA8C5C);
  return sub_241AAACC4(v58, (uint64_t (*)(void))sub_241AA8C5C);
}

uint64_t sub_241AA560C@<X0>(uint64_t a1@<X8>)
{
  sub_241CDAA80();
  uint64_t result = sub_241CDAB50();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_241AA5684@<X0>(uint64_t a1@<X8>)
{
  sub_241CDAA80();
  uint64_t v2 = sub_241CDAB50();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  sub_241CDAA80();
  uint64_t v9 = sub_241CDAB50();
  uint64_t v11 = v10;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  char v13 = v12 & 1;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = 1028;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v12 & 1;
  *(void *)(a1 + 64) = v14;
  *(_WORD *)(a1 + 72) = 1285;
  sub_241AAAC58(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_241AAAC58(v9, v11, v13);
  swift_bridgeObjectRetain();
  sub_241AAAC68(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_241AAAC68(v2, v4, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241AA57E8@<X0>(uint64_t a1@<X8>)
{
  sub_241CDAA80();
  uint64_t v2 = sub_241CDAB50();
  uint64_t v23 = v3;
  uint64_t v24 = v2;
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  sub_241CDAA80();
  uint64_t v8 = sub_241CDAB50();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_241CDAA80();
  uint64_t v15 = sub_241CDAB50();
  uint64_t v17 = v16;
  char v18 = v7;
  char v25 = v7;
  char v20 = v19 & 1;
  *(void *)a1 = v24;
  *(void *)(a1 + 8) = v23;
  *(unsigned char *)(a1 + 16) = v18;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = 1;
  *(unsigned char *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 1;
  *(_WORD *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = 2;
  *(unsigned char *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 2;
  *(_WORD *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = v15;
  *(void *)(a1 + 136) = v16;
  *(unsigned char *)(a1 + 144) = v19 & 1;
  *(void *)(a1 + 152) = v21;
  *(void *)(a1 + 160) = 3;
  *(unsigned char *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 3;
  *(_WORD *)(a1 + 184) = 0;
  sub_241AAAC58(v24, v23, v18);
  swift_bridgeObjectRetain();
  sub_241AAAC58(v8, v10, v14);
  swift_bridgeObjectRetain();
  sub_241AAAC58(v15, v17, v20);
  swift_bridgeObjectRetain();
  sub_241AAAC68(v15, v17, v20);
  swift_bridgeObjectRelease();
  sub_241AAAC68(v8, v10, v14);
  swift_bridgeObjectRelease();
  sub_241AAAC68(v24, v23, v25);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241AA59FC@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SummariesInternalSettingsView();
  sub_241AAAC78(0, &qword_268D42830, MEMORY[0x263F8D310], MEMORY[0x263F1B5D0]);
  sub_241CDACA0();
  sub_241A3DE4C();
  uint64_t v2 = sub_241CDAB60();
  uint64_t v4 = v3;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  char v6 = v5 & 1;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v5 & 1;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  sub_241AAAC58(v2, v3, v5 & 1);
  swift_bridgeObjectRetain();
  sub_241AAAC68(v2, v4, v6);
  return swift_bridgeObjectRelease();
}

void sub_241AA5B04(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_241CD6D70();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v39 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241CD6D00();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD98D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = sub_241CD6870();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  char v18 = (char *)&v36 - v17;
  LOBYTE(v42) = 0;
  sub_241CDAC90();
  uint64_t v19 = *((void *)&v44 + 1);
  *(unsigned char *)a1 = v44;
  *(void *)(a1 + 8) = v19;
  uint64_t v42 = sub_241CD7400();
  sub_241CDAC90();
  *(_OWORD *)(a1 + 16) = v44;
  char v20 = (int *)type metadata accessor for SummariesInternalSettingsView();
  sub_241CD6840();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  sub_241CDAC90();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v11, *MEMORY[0x263F46BD8], v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v37, v11, v6);
  sub_241CDAC90();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  uint64_t v21 = a1 + v20[8];
  LOBYTE(v42) = 4;
  sub_241CDAC90();
  uint64_t v22 = *((void *)&v44 + 1);
  *(unsigned char *)uint64_t v21 = v44;
  *(void *)(v21 + 8) = v22;
  uint64_t v23 = v20[9];
  uint64_t v42 = 1;
  sub_241CDAC90();
  *(_OWORD *)(a1 + v23) = v44;
  uint64_t v24 = a1 + v20[10];
  LOBYTE(v42) = 0;
  sub_241CDAC90();
  uint64_t v25 = *((void *)&v44 + 1);
  *(unsigned char *)uint64_t v24 = v44;
  *(void *)(v24 + 8) = v25;
  uint64_t v26 = a1 + v20[11];
  uint64_t v42 = 0;
  unint64_t v43 = 0xE000000000000000;
  sub_241CDAC90();
  uint64_t v27 = v45;
  *(_OWORD *)uint64_t v26 = v44;
  *(void *)(v26 + 16) = v27;
  sub_241CD6CC0();
  sub_241CD67D0();
  uint64_t v28 = v20[13];
  id v29 = objc_msgSend(self, sel_countUnit);
  id v30 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v29, 15.0);

  *(void *)(a1 + v28) = v30;
  uint64_t v31 = v20[14];
  char v32 = self;
  uint64_t v33 = v39;
  sub_241CD6D60();
  uint64_t v34 = (void *)sub_241CD6D30();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v41);
  id v35 = objc_msgSend(v32, sel__profileWithUUID_type_, v34, 2);

  *(void *)(a1 + v31) = v35;
}

uint64_t type metadata accessor for SummariesInternalSettingsView()
{
  uint64_t result = qword_268D424B8;
  if (!qword_268D424B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SupportedTrendTypes(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SupportedTrendTypes(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *uint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241AA61C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SupportedTrendTypes()
{
  return &type metadata for SupportedTrendTypes;
}

uint64_t *sub_241AA6200(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v43 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v43 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    BOOL v7 = (void *)a2[2];
    a1[1] = a2[1];
    a1[2] = (uint64_t)v7;
    a1[3] = a2[3];
    uint64_t v8 = a3[6];
    uint64_t v47 = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_241CD6870();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    id v12 = v7;
    swift_retain();
    v11(v47, v9, v10);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
    sub_241AA64F0(0, &qword_268D424A8, MEMORY[0x263F06358], MEMORY[0x263F1B5D0]);
    *(void *)&v47[*(int *)(v14 + 28)] = *(void *)&v9[*(int *)(v14 + 28)];
    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_241CD98D0();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_retain();
    v19(v16, v17, v18);
    sub_241AA64F0(0, &qword_268D424B0, MEMORY[0x263F46BE0], v13);
    *(void *)&v16[*(int *)(v20 + 28)] = *(void *)&v17[*(int *)(v20 + 28)];
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = (char *)v4 + v21;
    uint64_t v24 = (char *)a2 + v21;
    *uint64_t v23 = *v24;
    *((void *)v23 + 1) = *((void *)v24 + 1);
    uint64_t v25 = (uint64_t *)((char *)v4 + v22);
    uint64_t v26 = (uint64_t *)((char *)a2 + v22);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = a3[10];
    uint64_t v29 = a3[11];
    id v30 = (char *)v4 + v28;
    uint64_t v31 = (char *)a2 + v28;
    *id v30 = *v31;
    *((void *)v30 + 1) = *((void *)v31 + 1);
    char v32 = (uint64_t *)((char *)v4 + v29);
    uint64_t v33 = (uint64_t *)((char *)a2 + v29);
    uint64_t v34 = v33[1];
    void *v32 = *v33;
    v32[1] = v34;
    void v32[2] = v33[2];
    uint64_t v35 = a3[12];
    uint64_t v46 = (char *)a2 + v35;
    char v48 = (char *)v4 + v35;
    uint64_t v36 = sub_241CD6810();
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v45(v48, v46, v36);
    uint64_t v37 = a3[13];
    uint64_t v38 = a3[14];
    uint64_t v39 = *(void **)((char *)a2 + v37);
    *(uint64_t *)((char *)v4 + v37) = (uint64_t)v39;
    uint64_t v40 = *(void **)((char *)a2 + v38);
    *(uint64_t *)((char *)v4 + v38) = (uint64_t)v40;
    id v41 = v39;
    id v42 = v40;
  }
  return v4;
}

void sub_241AA64F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241AA6554(uint64_t a1, int *a2)
{
  swift_release();

  swift_release();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_241CD6870();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_241AA64F0(0, &qword_268D424A8, MEMORY[0x263F06358], MEMORY[0x263F1B5D0]);
  swift_release();
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_241CD98D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  sub_241AA64F0(0, &qword_268D424B0, MEMORY[0x263F46BE0], v6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = a1 + a2[12];
  uint64_t v10 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  uint64_t v11 = *(void **)(a1 + a2[14]);
}

uint64_t sub_241AA6740(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unsigned int v6 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v45 = a1 + v7;
  uint64_t v8 = a2 + v7;
  uint64_t v9 = sub_241CD6870();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  id v11 = v6;
  swift_retain();
  v10(v45, v8, v9);
  id v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_241AA64F0(0, &qword_268D424A8, MEMORY[0x263F06358], MEMORY[0x263F1B5D0]);
  *(void *)(v45 + *(int *)(v13 + 28)) = *(void *)(v8 + *(int *)(v13 + 28));
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_241CD98D0();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_retain();
  v18(v15, v16, v17);
  sub_241AA64F0(0, &qword_268D424B0, MEMORY[0x263F46BE0], v12);
  *(void *)(v15 + *(int *)(v19 + 28)) = *(void *)(v16 + *(int *)(v19 + 28));
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  uint64_t v24 = (void *)(a1 + v21);
  uint64_t v25 = (void *)(a2 + v21);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  uint64_t v31 = (void *)(a1 + v28);
  char v32 = (void *)(a2 + v28);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  void v31[2] = v32[2];
  uint64_t v34 = a3[12];
  uint64_t v44 = a2 + v34;
  uint64_t v46 = a1 + v34;
  uint64_t v35 = sub_241CD6810();
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v43(v46, v44, v35);
  uint64_t v36 = a3[13];
  uint64_t v37 = a3[14];
  uint64_t v38 = *(void **)(a2 + v36);
  *(void *)(a1 + v36) = v38;
  uint64_t v39 = *(void **)(a2 + v37);
  *(void *)(a1 + v37) = v39;
  id v40 = v38;
  id v41 = v39;
  return a1;
}

uint64_t sub_241AA69E0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  unsigned int v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v7;
  id v8 = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_241CD6870();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_241AA64F0(0, &qword_268D424A8, MEMORY[0x263F06358], MEMORY[0x263F1B5D0]);
  *(void *)(v10 + *(int *)(v14 + 28)) = *(void *)(v11 + *(int *)(v14 + 28));
  swift_retain();
  swift_release();
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_241CD98D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  sub_241AA64F0(0, &qword_268D424B0, MEMORY[0x263F46BE0], v13);
  *(void *)(v16 + *(int *)(v19 + 28)) = *(void *)(v17 + *(int *)(v19 + 28));
  swift_retain();
  swift_release();
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  swift_retain();
  swift_release();
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_retain();
  swift_release();
  uint64_t v26 = a3[10];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(unsigned char *)uint64_t v27 = *(unsigned char *)v28;
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  swift_retain();
  swift_release();
  uint64_t v29 = a3[11];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = a2 + v29;
  *uint64_t v30 = *(void *)(a2 + v29);
  v30[1] = *(void *)(a2 + v29 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v30[2] = *(void *)(v31 + 16);
  swift_retain();
  swift_release();
  uint64_t v32 = a3[12];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  uint64_t v36 = a3[13];
  uint64_t v37 = *(void **)(a2 + v36);
  uint64_t v38 = *(void **)(a1 + v36);
  *(void *)(a1 + v36) = v37;
  id v39 = v37;

  uint64_t v40 = a3[14];
  id v41 = *(void **)(a2 + v40);
  id v42 = *(void **)(a1 + v40);
  *(void *)(a1 + v40) = v41;
  id v43 = v41;

  return a1;
}

_OWORD *sub_241AA6CDC(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241CD6870();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_241AA64F0(0, &qword_268D424A8, MEMORY[0x263F06358], MEMORY[0x263F1B5D0]);
  *(void *)&v8[*(int *)(v12 + 28)] = *(void *)&v9[*(int *)(v12 + 28)];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_241CD98D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  sub_241AA64F0(0, &qword_268D424B0, MEMORY[0x263F46BE0], v11);
  *(void *)&v14[*(int *)(v17 + 28)] = *(void *)&v15[*(int *)(v17 + 28)];
  uint64_t v18 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  uint64_t v19 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((void *)v20 + 2) = *((void *)v21 + 2);
  uint64_t v22 = a3[12];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_241CD6810();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  uint64_t v26 = a3[14];
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  return a1;
}

uint64_t sub_241AA6EC0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  long long v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD6870();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_241AA64F0(0, &qword_268D424A8, MEMORY[0x263F06358], MEMORY[0x263F1B5D0]);
  *(void *)(v8 + *(int *)(v12 + 28)) = *(void *)(v9 + *(int *)(v12 + 28));
  swift_release();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_241CD98D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  sub_241AA64F0(0, &qword_268D424B0, MEMORY[0x263F46BE0], v11);
  *(void *)(v14 + *(int *)(v17 + 28)) = *(void *)(v15 + *(int *)(v17 + 28));
  swift_release();
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  swift_release();
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_release();
  uint64_t v26 = a3[10];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(unsigned char *)uint64_t v27 = *(unsigned char *)v28;
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  swift_release();
  uint64_t v29 = a3[11];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)(a2 + v29 + 8);
  *uint64_t v30 = *(void *)(a2 + v29);
  v30[1] = v32;
  swift_bridgeObjectRelease();
  void v30[2] = *(void *)(v31 + 16);
  swift_release();
  uint64_t v33 = a3[12];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
  uint64_t v37 = a3[13];
  uint64_t v38 = *(void **)(a1 + v37);
  *(void *)(a1 + v37) = *(void *)(a2 + v37);

  uint64_t v39 = a3[14];
  uint64_t v40 = *(void **)(a1 + v39);
  *(void *)(a1 + v39) = *(void *)(a2 + v39);

  return a1;
}

uint64_t sub_241AA7150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241AA7164);
}

uint64_t sub_241AA7164(uint64_t a1, uint64_t a2, int *a3)
{
  sub_241AA64F0(0, &qword_268D424A8, MEMORY[0x263F06358], MEMORY[0x263F1B5D0]);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  sub_241AA64F0(0, &qword_268D424B0, MEMORY[0x263F46BE0], MEMORY[0x263F1B5D0]);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v13 = *(void *)(a1 + a3[11] + 8);
    if (v13 >= 0xFFFFFFFF) {
      LODWORD(v13) = -1;
    }
    return (v13 + 1);
  }
  else
  {
    uint64_t v14 = sub_241CD6810();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[12];
    return v15(v17, a2, v16);
  }
}

uint64_t sub_241AA7344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241AA7358);
}

void sub_241AA7358(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_241AA64F0(0, &qword_268D424A8, MEMORY[0x263F06358], MEMORY[0x263F1B5D0]);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_5:
    unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v13(a1 + v11, a2, a2, v9);
    return;
  }
  sub_241AA64F0(0, &qword_268D424B0, MEMORY[0x263F46BE0], MEMORY[0x263F1B5D0]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[11] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v14 = sub_241CD6810();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a4[12];
    v15(v17, a2, a2, v16);
  }
}

void sub_241AA7538()
{
  sub_241AA64F0(319, &qword_268D424A8, MEMORY[0x263F06358], MEMORY[0x263F1B5D0]);
  if (v0 <= 0x3F)
  {
    sub_241AA64F0(319, &qword_268D424B0, MEMORY[0x263F46BE0], MEMORY[0x263F1B5D0]);
    if (v1 <= 0x3F)
    {
      sub_241CD6810();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

unint64_t sub_241AA76CC()
{
  unint64_t result = qword_268D424C8;
  if (!qword_268D424C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D424C8);
  }
  return result;
}

uint64_t sub_241AA7724()
{
  return sub_241CDABD0();
}

unint64_t sub_241AA7744(char a1)
{
  unint64_t result = 0x6E45657669746341;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7373614D79646F42;
      break;
    case 2:
      unint64_t result = 0x4373746867696C46;
      break;
    case 3:
      unint64_t result = 0x706D655479646F42;
      break;
    case 4:
      unint64_t result = 0x6573696372657845;
      break;
    case 5:
      unint64_t result = 0x756F48646E617453;
      break;
    case 6:
      unint64_t result = 0x756C47646F6F6C42;
      break;
    case 7:
      unint64_t result = 0x446E75526B6C6157;
      break;
    case 8:
      unint64_t result = 0x446E696C75736E49;
      break;
    case 9:
      unint64_t result = 0x536C7566646E694DLL;
      break;
    case 10:
    case 12:
    case 18:
      unint64_t result = 0xD000000000000010;
      break;
    case 11:
      unint64_t result = 0x7461726970736552;
      break;
    case 13:
      unint64_t result = 0x616E417065656C53;
      break;
    case 14:
      unint64_t result = 0x6E756F4370657453;
      break;
    case 15:
      unint64_t result = 0x736568737550;
      break;
    case 16:
      unint64_t result = 0x69466F6964726143;
      break;
    case 17:
      unint64_t result = 0x65526F6964726143;
      break;
    case 19:
      unint64_t result = 0x7374756F6B726F57;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_241AA7A10(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_241AA7744(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_241AA7744(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_241CDC100();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_241AA7A9C()
{
  char v1 = *v0;
  sub_241CDC1D0();
  sub_241AA7744(v1);
  sub_241CDB170();
  swift_bridgeObjectRelease();
  return sub_241CDC200();
}

uint64_t sub_241AA7B00()
{
  sub_241AA7744(*v0);
  sub_241CDB170();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241AA7B54()
{
  char v1 = *v0;
  sub_241CDC1D0();
  sub_241AA7744(v1);
  sub_241CDB170();
  swift_bridgeObjectRelease();
  return sub_241CDC200();
}

uint64_t sub_241AA7BB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_241AAB140();
  *a1 = result;
  return result;
}

unint64_t sub_241AA7BE4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_241AA7744(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_241AA7C10(void *a1@<X8>)
{
  *a1 = &unk_26F5C00C0;
}

void sub_241AA7C20(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_241AA7C2C()
{
  return sub_241AA8014(&qword_268D424D0);
}

unint64_t sub_241AA7C64()
{
  unint64_t result = qword_268D424E0;
  if (!qword_268D424E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D424E0);
  }
  return result;
}

uint64_t sub_241AA7CB8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241AA7CD4()
{
  if (!qword_268D424E8)
  {
    sub_241AA7D84(255);
    sub_241AA849C(&qword_268D42780, sub_241AA7D84);
    unint64_t v0 = sub_241CDAB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D424E8);
    }
  }
}

void sub_241AA7D84(uint64_t a1)
{
}

void sub_241AA7DB8()
{
  if (!qword_268D424F8)
  {
    sub_241AA7EA8();
    sub_241AA80E4();
    sub_241AA84E4();
    sub_241AA8AC4();
    sub_241AA8FD0();
    sub_241AA9154();
    sub_241AA965C();
    sub_241AA9AC8(255, &qword_268D42778, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B5E8]);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_268D424F8);
    }
  }
}

void sub_241AA7EA8()
{
  if (!qword_268D42500)
  {
    sub_241AA7F44();
    sub_241AA76CC();
    sub_241AA807C();
    unint64_t v0 = sub_241CDAD20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42500);
    }
  }
}

void sub_241AA7F44()
{
  if (!qword_268D42508)
  {
    sub_241AAAC78(255, &qword_268D424D8, (uint64_t)&type metadata for SupportedTrendTypes, MEMORY[0x263F8D488]);
    sub_241AA8014(&qword_268D42510);
    sub_241AA76CC();
    unint64_t v0 = sub_241CDADA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42508);
    }
  }
}

uint64_t sub_241AA8014(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241AAAC78(255, &qword_268D424D8, (uint64_t)&type metadata for SupportedTrendTypes, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241AA807C()
{
  unint64_t result = qword_268D42518;
  if (!qword_268D42518)
  {
    sub_241AA7F44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42518);
  }
  return result;
}

void sub_241AA80E4()
{
  if (!qword_268D42520)
  {
    sub_241AA81B0(255);
    sub_241AA82F8();
    sub_241AA849C(&qword_268D42590, sub_241AA81B0);
    unint64_t v0 = sub_241CDAD20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42520);
    }
  }
}

void sub_241AA81B0(uint64_t a1)
{
}

void sub_241AA81E4(uint64_t a1)
{
}

void sub_241AA8220(uint64_t a1)
{
}

void sub_241AA8240()
{
  if (!qword_268D42548)
  {
    sub_241AA93D0(255, &qword_268D42550, (void (*)(void))sub_241AA82F8);
    sub_241AA9430(&qword_268D42560, &qword_268D42550, (void (*)(void))sub_241AA82F8);
    unint64_t v0 = sub_241CDAB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42548);
    }
  }
}

unint64_t sub_241AA82F8()
{
  unint64_t result = qword_268D42558;
  if (!qword_268D42558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42558);
  }
  return result;
}

void sub_241AA834C()
{
  if (!qword_268D42568)
  {
    sub_241AA83E0();
    sub_241AA849C(&qword_268D42588, (void (*)(uint64_t))sub_241AA83E0);
    unint64_t v0 = sub_241CDAB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42568);
    }
  }
}

void sub_241AA83E0()
{
  if (!qword_268D42570)
  {
    uint64_t v0 = MEMORY[0x263F455D0];
    sub_241AAAC78(255, &qword_268D42578, MEMORY[0x263F455D0], MEMORY[0x263F8D8F0]);
    sub_241AA95D0(&qword_268D42580, &qword_268D42578, v0, (void (*)(void))sub_241AA82F8);
    unint64_t v1 = sub_241CDA940();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D42570);
    }
  }
}

uint64_t sub_241AA849C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241AA84E4()
{
  if (!qword_268D42598)
  {
    sub_241CD6870();
    sub_241AA85E4(255);
    sub_241AA849C(&qword_268D425D0, MEMORY[0x263F06358]);
    sub_241AA849C(&qword_268D42608, sub_241AA85E4);
    unint64_t v0 = sub_241CDAD20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42598);
    }
  }
}

void sub_241AA85E4(uint64_t a1)
{
}

void sub_241AA8618()
{
  if (!qword_268D425A8)
  {
    sub_241AA8680(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D425A8);
    }
  }
}

void sub_241AA8680(uint64_t a1)
{
}

void sub_241AA86B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_241CDA910();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_241AA8728(uint64_t a1)
{
}

void sub_241AA8748(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDA910();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241AA87A4()
{
  if (!qword_268D425C0)
  {
    sub_241AA8838();
    sub_241AA849C(&qword_268D425D8, (void (*)(uint64_t))sub_241AA8838);
    unint64_t v0 = sub_241CDAB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D425C0);
    }
  }
}

void sub_241AA8838()
{
  if (!qword_268D425C8)
  {
    sub_241CD6870();
    sub_241AA849C(&qword_268D425D0, MEMORY[0x263F06358]);
    unint64_t v0 = sub_241CDA940();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D425C8);
    }
  }
}

void sub_241AA88CC()
{
  if (!qword_268D425E0)
  {
    sub_241AA8960();
    sub_241AA849C(&qword_268D42600, (void (*)(uint64_t))sub_241AA8960);
    unint64_t v0 = sub_241CDAB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D425E0);
    }
  }
}

void sub_241AA8960()
{
  if (!qword_268D425E8)
  {
    sub_241AA64F0(255, &qword_268D425F0, MEMORY[0x263F06358], MEMORY[0x263F8D8F0]);
    sub_241AA89F4();
    unint64_t v0 = sub_241CDA940();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D425E8);
    }
  }
}

unint64_t sub_241AA89F4()
{
  unint64_t result = qword_268D425F8;
  if (!qword_268D425F8)
  {
    sub_241AA64F0(255, &qword_268D425F0, MEMORY[0x263F06358], MEMORY[0x263F8D8F0]);
    sub_241AA849C(&qword_268D425D0, MEMORY[0x263F06358]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D425F8);
  }
  return result;
}

void sub_241AA8AC4()
{
  if (!qword_268D42610)
  {
    sub_241CD98D0();
    sub_241AA8BC4(255);
    sub_241AA849C(&qword_268D42648, MEMORY[0x263F46BE0]);
    sub_241AA849C(&qword_268D42678, sub_241AA8BC4);
    unint64_t v0 = sub_241CDAD20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42610);
    }
  }
}

void sub_241AA8BC4(uint64_t a1)
{
}

void sub_241AA8BF8()
{
  if (!qword_268D42620)
  {
    sub_241AA8C5C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D42620);
    }
  }
}

void sub_241AA8C5C(uint64_t a1)
{
}

void sub_241AA8C90(uint64_t a1)
{
}

void sub_241AA8CB0()
{
  if (!qword_268D42638)
  {
    sub_241AA8D44();
    sub_241AA849C(&qword_268D42650, (void (*)(uint64_t))sub_241AA8D44);
    unint64_t v0 = sub_241CDAB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42638);
    }
  }
}

void sub_241AA8D44()
{
  if (!qword_268D42640)
  {
    sub_241CD98D0();
    sub_241AA849C(&qword_268D42648, MEMORY[0x263F46BE0]);
    unint64_t v0 = sub_241CDA940();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42640);
    }
  }
}

void sub_241AA8DD8()
{
  if (!qword_268D42658)
  {
    sub_241AA8E6C();
    sub_241AA849C(&qword_268D42670, (void (*)(uint64_t))sub_241AA8E6C);
    unint64_t v0 = sub_241CDAB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42658);
    }
  }
}

void sub_241AA8E6C()
{
  if (!qword_268D42660)
  {
    sub_241AA64F0(255, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
    sub_241AA8F00();
    unint64_t v0 = sub_241CDA940();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42660);
    }
  }
}

unint64_t sub_241AA8F00()
{
  unint64_t result = qword_268D42668;
  if (!qword_268D42668)
  {
    sub_241AA64F0(255, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
    sub_241AA849C(&qword_268D42648, MEMORY[0x263F46BE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42668);
  }
  return result;
}

void sub_241AA8FD0()
{
  if (!qword_268D42680)
  {
    sub_241AA9AC8(255, &qword_268D42688, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B6B8]);
    sub_241CDAA50();
    sub_241AA90D0();
    sub_241AA849C(&qword_268D42698, MEMORY[0x263F19708]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D42680);
    }
  }
}

unint64_t sub_241AA90D0()
{
  unint64_t result = qword_268D42690;
  if (!qword_268D42690)
  {
    sub_241AA9AC8(255, &qword_268D42688, MEMORY[0x263F1A830], MEMORY[0x263F1A820], MEMORY[0x263F1B6B8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42690);
  }
  return result;
}

void sub_241AA9154()
{
  if (!qword_268D426A0)
  {
    sub_241AA9220(255);
    sub_241A6882C();
    sub_241AA849C(&qword_268D42708, sub_241AA9220);
    unint64_t v0 = sub_241CDAD20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D426A0);
    }
  }
}

void sub_241AA9220(uint64_t a1)
{
}

void sub_241AA9254(uint64_t a1)
{
}

void sub_241AA9290(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  if (!*a2)
  {
    sub_241AA86B4(255, a3, a4, a5);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_241AA92F8(uint64_t a1)
{
}

void sub_241AA9318()
{
  if (!qword_268D426C8)
  {
    sub_241AA93D0(255, &qword_268D426D0, (void (*)(void))sub_241A6882C);
    sub_241AA9430(&qword_268D426D8, &qword_268D426D0, (void (*)(void))sub_241A6882C);
    unint64_t v0 = sub_241CDAB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D426C8);
    }
  }
}

void sub_241AA93D0(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_241CDA940();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241AA9430(unint64_t *a1, unint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241AA93D0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241AA9480()
{
  if (!qword_268D426E0)
  {
    sub_241AA9514();
    sub_241AA849C(&qword_268D42700, (void (*)(uint64_t))sub_241AA9514);
    unint64_t v0 = sub_241CDAB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D426E0);
    }
  }
}

void sub_241AA9514()
{
  if (!qword_268D426E8)
  {
    uint64_t v0 = MEMORY[0x263F47200];
    sub_241AAAC78(255, &qword_268D426F0, MEMORY[0x263F47200], MEMORY[0x263F8D8F0]);
    sub_241AA95D0(&qword_268D426F8, &qword_268D426F0, v0, (void (*)(void))sub_241A6882C);
    unint64_t v1 = sub_241CDA940();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268D426E8);
    }
  }
}

uint64_t sub_241AA95D0(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241AAAC78(255, a2, a3, MEMORY[0x263F8D8F0]);
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241AA965C()
{
  if (!qword_268D42710)
  {
    sub_241AA9720(255);
    sub_241AA849C(&qword_268D42770, sub_241AA9720);
    unint64_t v0 = sub_241CDAD20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42710);
    }
  }
}

void sub_241AA9720(uint64_t a1)
{
}

void sub_241AA9754()
{
  if (!qword_268D42720)
  {
    sub_241AA86B4(255, &qword_268D42728, sub_241AA97EC, (void (*)(uint64_t))sub_241AA9920);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D42720);
    }
  }
}

void sub_241AA97EC(uint64_t a1)
{
}

void sub_241AA980C()
{
  if (!qword_268D42738)
  {
    sub_241AA9AC8(255, &qword_268D42740, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6D8], MEMORY[0x263F19090]);
    sub_241AA989C();
    unint64_t v0 = sub_241CDAB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42738);
    }
  }
}

unint64_t sub_241AA989C()
{
  unint64_t result = qword_268D42748;
  if (!qword_268D42748)
  {
    sub_241AA9AC8(255, &qword_268D42740, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6D8], MEMORY[0x263F19090]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42748);
  }
  return result;
}

void sub_241AA9920()
{
  if (!qword_268D42750)
  {
    sub_241AA99B4();
    sub_241AA849C(&qword_268D42768, (void (*)(uint64_t))sub_241AA99B4);
    unint64_t v0 = sub_241CDAB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42750);
    }
  }
}

void sub_241AA99B4()
{
  if (!qword_268D42758)
  {
    sub_241AAAC78(255, &qword_26B034D00, MEMORY[0x263F8D6C8], MEMORY[0x263F8D8F0]);
    sub_241AA9A3C();
    unint64_t v0 = sub_241CDA940();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42758);
    }
  }
}

unint64_t sub_241AA9A3C()
{
  unint64_t result = qword_268D42760;
  if (!qword_268D42760)
  {
    sub_241AAAC78(255, &qword_26B034D00, MEMORY[0x263F8D6C8], MEMORY[0x263F8D8F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42760);
  }
  return result;
}

void sub_241AA9AC8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_241AA9B18()
{
  if (!qword_268D42788)
  {
    sub_241AA7CD4();
    sub_241AA849C(&qword_268D42790, (void (*)(uint64_t))sub_241AA7CD4);
    sub_241AA7C64();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D42788);
    }
  }
}

void sub_241AA9BE8()
{
  if (!qword_268D42798)
  {
    sub_241AA9B18();
    sub_241AA7CD4();
    sub_241AA849C(&qword_268D42790, (void (*)(uint64_t))sub_241AA7CD4);
    sub_241AA7C64();
    swift_getOpaqueTypeConformance2();
    sub_241AA9CF0();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D42798);
    }
  }
}

unint64_t sub_241AA9CF0()
{
  unint64_t result = qword_268D427A0;
  if (!qword_268D427A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D427A0);
  }
  return result;
}

void sub_241AA9D44()
{
  if (!qword_268D427A8)
  {
    sub_241AA9BE8();
    sub_241CD6870();
    sub_241AA9B18();
    sub_241AA7CD4();
    sub_241AA849C(&qword_268D42790, (void (*)(uint64_t))sub_241AA7CD4);
    sub_241AA7C64();
    swift_getOpaqueTypeConformance2();
    sub_241AA9CF0();
    swift_getOpaqueTypeConformance2();
    sub_241AA849C(&qword_268D427B0, MEMORY[0x263F06358]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D427A8);
    }
  }
}

void sub_241AA9EBC()
{
  if (!qword_268D427B8)
  {
    sub_241AA9D44();
    sub_241CD98D0();
    sub_241AA9BE8();
    sub_241CD6870();
    sub_241AA9B18();
    sub_241AA7CD4();
    sub_241AA849C(&qword_268D42790, (void (*)(uint64_t))sub_241AA7CD4);
    sub_241AA7C64();
    swift_getOpaqueTypeConformance2();
    sub_241AA9CF0();
    swift_getOpaqueTypeConformance2();
    sub_241AA849C(&qword_268D427B0, MEMORY[0x263F06358]);
    swift_getOpaqueTypeConformance2();
    sub_241AA849C((unint64_t *)&qword_268D42180, MEMORY[0x263F46BE0]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D427B8);
    }
  }
}

void sub_241AAA0A4()
{
  if (!qword_268D427C0)
  {
    sub_241AA9EBC();
    sub_241AA9D44();
    sub_241CD98D0();
    sub_241AA9BE8();
    sub_241CD6870();
    sub_241AA9B18();
    sub_241AA7CD4();
    sub_241AA849C(&qword_268D42790, (void (*)(uint64_t))sub_241AA7CD4);
    sub_241AA7C64();
    swift_getOpaqueTypeConformance2();
    sub_241AA9CF0();
    swift_getOpaqueTypeConformance2();
    sub_241AA849C(&qword_268D427B0, MEMORY[0x263F06358]);
    swift_getOpaqueTypeConformance2();
    sub_241AA849C((unint64_t *)&qword_268D42180, MEMORY[0x263F46BE0]);
    swift_getOpaqueTypeConformance2();
    sub_241AAA2C8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D427C0);
    }
  }
}

unint64_t sub_241AAA2C8()
{
  unint64_t result = qword_268D427C8;
  if (!qword_268D427C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D427C8);
  }
  return result;
}

void sub_241AAA31C()
{
  if (!qword_268D427D0)
  {
    sub_241AAA0A4();
    sub_241AA9EBC();
    sub_241AA9D44();
    sub_241CD98D0();
    sub_241AA9BE8();
    sub_241CD6870();
    sub_241AA9B18();
    sub_241AA7CD4();
    sub_241AA849C(&qword_268D42790, (void (*)(uint64_t))sub_241AA7CD4);
    sub_241AA7C64();
    swift_getOpaqueTypeConformance2();
    sub_241AA9CF0();
    swift_getOpaqueTypeConformance2();
    sub_241AA849C(&qword_268D427B0, MEMORY[0x263F06358]);
    swift_getOpaqueTypeConformance2();
    sub_241AA849C((unint64_t *)&qword_268D42180, MEMORY[0x263F46BE0]);
    swift_getOpaqueTypeConformance2();
    sub_241AAA2C8();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D427D0);
    }
  }
}

void sub_241AAA574()
{
  if (!qword_268D427D8)
  {
    sub_241AAA31C();
    sub_241AAA0A4();
    sub_241AA9EBC();
    sub_241AA9D44();
    sub_241CD98D0();
    sub_241AA9BE8();
    sub_241CD6870();
    sub_241AA9B18();
    sub_241AA7CD4();
    sub_241AA849C(&qword_268D42790, (void (*)(uint64_t))sub_241AA7CD4);
    sub_241AA7C64();
    swift_getOpaqueTypeConformance2();
    sub_241AA9CF0();
    swift_getOpaqueTypeConformance2();
    sub_241AA849C(&qword_268D427B0, MEMORY[0x263F06358]);
    swift_getOpaqueTypeConformance2();
    sub_241AA849C((unint64_t *)&qword_268D42180, MEMORY[0x263F46BE0]);
    swift_getOpaqueTypeConformance2();
    sub_241AAA2C8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D427D8);
    }
  }
}

uint64_t sub_241AAA804@<X0>(uint64_t a1@<X8>)
{
  return sub_241AA2488(*(void *)(v1 + 16), a1);
}

uint64_t sub_241AAA818()
{
  uint64_t v1 = (int *)(type metadata accessor for SummariesInternalSettingsView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();

  swift_release();
  uint64_t v7 = v6 + v1[8];
  uint64_t v8 = sub_241CD6870();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F1B5D0];
  sub_241AA64F0(0, &qword_268D424A8, MEMORY[0x263F06358], MEMORY[0x263F1B5D0]);
  swift_release();
  uint64_t v10 = v6 + v1[9];
  uint64_t v11 = sub_241CD98D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  sub_241AA64F0(0, &qword_268D424B0, MEMORY[0x263F46BE0], v9);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v12 = v6 + v1[14];
  uint64_t v13 = sub_241CD6810();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

void sub_241AAAA94()
{
  if (!qword_268D42808)
  {
    sub_241AAA574();
    sub_241AAAB24();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_268D42808);
    }
  }
}

void sub_241AAAB24()
{
  if (!qword_268D42810)
  {
    sub_241AAABB8(255);
    sub_241AA849C(&qword_268D42828, sub_241AAABB8);
    unint64_t v0 = sub_241CDACF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42810);
    }
  }
}

void sub_241AAABB8(uint64_t a1)
{
}

void sub_241AAABEC()
{
  if (!qword_268D42820)
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D42820);
    }
  }
}

uint64_t sub_241AAAC58(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_241AAAC68(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

void sub_241AAAC78(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241AAACC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_241AAAD24(uint64_t a1@<X8>)
{
  sub_241AA3EF8(*(void *)(v1 + 16), a1);
}

uint64_t sub_241AAAD30()
{
  return sub_241AA00C0();
}

void sub_241AAAD8C()
{
  if (!qword_268D42858)
  {
    sub_241AA64F0(255, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
    sub_241AA8F00();
    unint64_t v0 = sub_241CDA930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42858);
    }
  }
}

void sub_241AAAE20()
{
  if (!qword_268D42860)
  {
    sub_241CD98D0();
    sub_241AA849C(&qword_268D42648, MEMORY[0x263F46BE0]);
    unint64_t v0 = sub_241CDA930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42860);
    }
  }
}

void sub_241AAAEB4()
{
  if (!qword_268D42868)
  {
    sub_241AA64F0(255, &qword_268D425F0, MEMORY[0x263F06358], MEMORY[0x263F8D8F0]);
    sub_241AA89F4();
    unint64_t v0 = sub_241CDA930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42868);
    }
  }
}

void sub_241AAAF48()
{
  if (!qword_268D42870)
  {
    sub_241CD6870();
    sub_241AA849C(&qword_268D425D0, MEMORY[0x263F06358]);
    unint64_t v0 = sub_241CDA930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42870);
    }
  }
}

uint64_t sub_241AAAFDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241AAB044(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_241AAB0AC(id result)
{
  if (result != (id)2) {
    return sub_241AAB0BC(result);
  }
  return result;
}

id sub_241AAB0BC(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void sub_241AAB0CC(id a1)
{
  if (a1 != (id)2) {
    sub_241AAB0DC(a1);
  }
}

void sub_241AAB0DC(id a1)
{
  if (a1 != (id)1) {
}
  }

unint64_t sub_241AAB0EC()
{
  unint64_t result = qword_268D42878;
  if (!qword_268D42878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42878);
  }
  return result;
}

uint64_t sub_241AAB140()
{
  unint64_t v0 = sub_241CDC130();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

uint64_t sub_241AAB194()
{
  return sub_241AA849C(&qword_268D42880, sub_241AAB1DC);
}

void sub_241AAB1DC(uint64_t a1)
{
}

uint64_t sub_241AAB210()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries34SummariesSettingsGeneratorPipeline_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries34SummariesSettingsGeneratorPipeline_context;
  uint64_t v4 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241AAB304()
{
  return type metadata accessor for SummariesSettingsGeneratorPipeline();
}

uint64_t sub_241AAB30C()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD7740();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_241AAB3E4()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241AAB480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241AAB48C(a1, a2, a3, a4, (uint64_t)&off_26F5C12A0);
}

uint64_t sub_241AAB48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  sub_241AAB7CC(a1, (uint64_t)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  sub_241AAB9B4((uint64_t)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  uint64_t v15 = (void *)(v14 + ((v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v15 = a2;
  v15[1] = a3;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t (*)(void *, void *, char), uint64_t, uint64_t, uint64_t))(a5 + 16);
  swift_retain();
  v16(a1, sub_241AABA18, v14, a4, a5);
  return swift_release();
}

uint64_t sub_241AAB5E8(void *a1, void *a2, char a3, uint64_t a4, void (*a5)(void *))
{
  sub_241AABAD0();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v16 = (void **)((char *)&v25 - v15);
  if (a3)
  {
    *uint64_t v12 = a1;
    swift_storeEnumTagMultiPayload();
    id v23 = a1;
    a5(v12);
    uint64_t v21 = (uint64_t (*)(void))sub_241AABAD0;
    uint64_t v22 = (uint64_t)v12;
  }
  else
  {
    sub_241AAB7CC(a4, (uint64_t)&v25 - v15);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    sub_241AABB40(a1, a2, 0);
    id v19 = a2;
    id v20 = a1;
    sub_241AABB8C(v17, v18);
    char *v16 = a1;
    v16[1] = a2;
    sub_241AAB7CC((uint64_t)v16, (uint64_t)v12);
    swift_storeEnumTagMultiPayload();
    a5(v12);
    sub_241AABBD0(a1, a2, 0);
    sub_241AABC1C((uint64_t)v12, (uint64_t (*)(void))sub_241AABAD0);
    uint64_t v21 = type metadata accessor for SummariesFullProfileExecutor.StepResult;
    uint64_t v22 = (uint64_t)v16;
  }
  return sub_241AABC1C(v22, v21);
}

uint64_t sub_241AAB7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_241AAB48C(a1, a2, a3, a4, (uint64_t)&off_26F5C5350);
}

uint64_t sub_241AAB7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241AAB830()
{
  uint64_t v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  unint64_t v6 = *(void **)(v0 + v3);
  if (v6 != (void *)1)
  {
  }
  uint64_t v7 = *(void **)(v5 + 16);
  if (v7 != (void *)1)
  {
  }
  uint64_t v8 = v5 + *(int *)(v1 + 28);
  uint64_t v9 = sub_241CD6EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_241AAB9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241AABA18(void *a1, void *a2, char a3)
{
  char v6 = a3 & 1;
  uint64_t v7 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void (**)(void *))(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241AAB5E8(a1, a2, v6, v3 + v8, v9);
}

void sub_241AABAD0()
{
  if (!qword_26B0369E0)
  {
    type metadata accessor for SummariesFullProfileExecutor.StepResult(255);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDC210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0369E0);
    }
  }
}

id sub_241AABB40(void *a1, void *a2, char a3)
{
  if (a3)
  {
  }
  else
  {
    id v6 = a1;
    id v5 = a2;
    a1 = v6;
  }
  return a1;
}

void sub_241AABB8C(void *a1, void *a2)
{
  if (a1 != (void *)1)
  {
  }
}

void sub_241AABBD0(void *a1, void *a2, char a3)
{
  if (a3)
  {
  }
  else
  {

    a1 = a2;
  }
}

uint64_t sub_241AABC1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241AABC7C(uint64_t a1, uint64_t a2, char a3)
{
  char v5 = a3 & 1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_characteristicChangePublisher) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_featureStatusChangePublisher) = 0;
  sub_241A31C5C(a2, v6 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  *(void *)(v6 + 16) = a1;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v5;
  return v6;
}

uint64_t sub_241AABD08(uint64_t a1)
{
  uint64_t v136 = a1;
  uint64_t v133 = *v1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241AAD758(0, (unint64_t *)&qword_26B034DA8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v118 = &v92[-v4];
  sub_241AAD16C();
  uint64_t v106 = v5;
  uint64_t v105 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v104 = &v92[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241AAD4A4();
  uint64_t v115 = v7;
  uint64_t v113 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v110 = &v92[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241AAD5D8();
  uint64_t v117 = v9;
  uint64_t v116 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v114 = &v92[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241AAD250(0, &qword_26B031B68, &qword_26B031C40, MEMORY[0x263F44998], &qword_26B031C38);
  uint64_t v112 = v11;
  uint64_t v111 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v109 = &v92[-v12];
  sub_241AAD250(0, (unint64_t *)&qword_26B032360, (unint64_t *)&qword_26B032668, MEMORY[0x263F456B0], &qword_26B032660);
  uint64_t v108 = v13;
  uint64_t v107 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v134 = &v92[-v14];
  sub_241AAD758(0, (unint64_t *)&unk_26B0320A0, MEMORY[0x263F438C0], v2);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v139 = &v92[-v16];
  uint64_t v99 = sub_241CD7B00();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v97 = &v92[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241A5B410();
  id v135 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v119 = &v92[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v96 = sub_241CD7B30();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v94 = &v92[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v137 = sub_241CD7650();
  uint64_t v21 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137);
  id v23 = &v92[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v138 = sub_241CD7690();
  uint64_t v141 = *(void *)(v138 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v138);
  uint64_t v130 = &v92[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = &v92[-v26];
  id v131 = (id)sub_241CD76E0();
  sub_241AAD70C(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  sub_241A313AC(0, (unint64_t *)&qword_26B030398);
  *(void *)(inited + 32) = MEMORY[0x245636A00]((id)*MEMORY[0x263F09F20]);
  uint64_t v143 = inited;
  sub_241CDB2E0();
  sub_241AAD758(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v30 = v29;
  uint64_t v31 = sub_241CD73B0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(void *)(v32 + 72);
  uint64_t v34 = *(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = (v34 + 32) & ~v34;
  uint64_t v121 = v30;
  uint64_t v102 = v35 + 2 * v33;
  uint64_t v120 = v34 | 7;
  uint64_t v36 = swift_allocObject();
  long long v100 = xmmword_241CEB720;
  *(_OWORD *)(v36 + 16) = xmmword_241CEB720;
  uint64_t v123 = v35;
  uint64_t v37 = v36 + v35;
  uint64_t v38 = *(void (**)(uint64_t))(v32 + 104);
  unsigned int v101 = *MEMORY[0x263F45520];
  v38(v37);
  uint64_t v122 = v33;
  unsigned int v93 = *MEMORY[0x263F45538];
  uint64_t v128 = v32 + 104;
  uint64_t v124 = v38;
  v38(v37 + v33);
  id v39 = v131;
  sub_241C5D74C(v36);
  swift_setDeallocating();
  uint64_t v129 = v31;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v40 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v40);
  swift_bridgeObjectRelease();
  id v41 = *(void (**)(void))(v21 + 104);
  unsigned int v127 = *MEMORY[0x263F45690];
  uint64_t v132 = v21 + 104;
  uint64_t v126 = (void (*)(id, void, uint64_t))v41;
  v41(v23);
  id v131 = v23;
  id v42 = v119;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  uint64_t v103 = sub_241CD7710();
  uint64_t v125 = *(void (**)(unsigned char *, uint64_t))(v141 + 8);
  v141 += 8;
  v125(v27, v138);
  sub_241CD7720();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v43 = v98;
    uint64_t v44 = v97;
    uint64_t v45 = v42;
    uint64_t v46 = v99;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v98 + 32))(v97, v45, v99);
    sub_241AAD590(&qword_26B031AA8, MEMORY[0x263F457B0]);
    swift_willThrowTypedImpl();
    (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v44, v46);
    uint64_t v47 = 0;
  }
  else
  {
    uint64_t v48 = v95;
    uint64_t v49 = v94;
    uint64_t v50 = v42;
    uint64_t v51 = v96;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v95 + 32))(v94, v50, v96);
    sub_241CD7B20();
    uint64_t v47 = v52;
    (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v49, v51);
  }
  id v53 = (id)*MEMORY[0x263F09730];
  char v54 = (void *)sub_241CD76D0();
  uint64_t v55 = v140;
  if (v47)
  {
    uint64_t v56 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v56 = 0;
  }
  id v135 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v53, v54, v56);

  uint64_t v57 = sub_241CD8190();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v139, 1, 1, v57);
  sub_241CD76B0();
  sub_241A311E0(v142, v142[3]);
  uint64_t v58 = sub_241CD75B0();
  uint64_t v144 = sub_241A313AC(0, &qword_26B034D70);
  uint64_t v145 = MEMORY[0x263F43980];
  uint64_t v143 = v58;
  sub_241CDC270();
  uint64_t v59 = (void *)sub_241CD76E0();
  if (*(void *)(v55 + 16) >> 62)
  {
    sub_241A313AC(0, (unint64_t *)&qword_26B038440);
    swift_bridgeObjectRetain();
    sub_241CDBF30();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_241CDC110();
    sub_241A313AC(0, (unint64_t *)&qword_26B038440);
  }
  uint64_t v60 = (unsigned char *)(v55 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  swift_beginAccess();
  if (*v60)
  {
    uint64_t v61 = v123;
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_241CEB730;
    ((void (*)(uint64_t, void, uint64_t))v124)(v62 + v61, *MEMORY[0x263F454D0], v129);
  }
  else
  {
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = v100;
    uint64_t v64 = v62 + v123;
    uint64_t v65 = v129;
    uint64_t v66 = v124;
    ((void (*)(uint64_t, void, uint64_t))v124)(v62 + v123, v101, v129);
    ((void (*)(uint64_t, void, uint64_t))v66)(v64 + v122, v93, v65);
  }
  id v63 = v59;
  sub_241C5D74C(v62);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v67 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v67);
  swift_bridgeObjectRelease();
  v126(v131, v127, v137);
  uint64_t v68 = v130;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241CD7710();
  v125(v68, v138);
  sub_241CD81B0();
  sub_241CD8170();
  swift_allocObject();
  uint64_t v69 = sub_241CD8180();
  sub_241A31190((uint64_t)v142);
  uint64_t v70 = OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_characteristicChangePublisher;
  uint64_t v71 = v140;
  *(void *)(v140 + OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_characteristicChangePublisher) = v69;
  swift_release();
  sub_241A313AC(0, &qword_26B031F18);
  uint64_t v143 = sub_241CD9300();
  uint64_t v72 = (void (*)(uint64_t))MEMORY[0x263F44998];
  sub_241AAD2E8(0, &qword_26B031C40, MEMORY[0x263F44998]);
  sub_241AAD34C(&qword_26B031C38, &qword_26B031C40, v72);
  uint64_t v73 = sub_241CDA6D0();
  swift_release();
  uint64_t v143 = v73;
  uint64_t v74 = sub_241CDA6D0();
  swift_release();
  uint64_t v75 = OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_featureStatusChangePublisher;
  *(void *)(v71 + OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_featureStatusChangePublisher) = v74;
  uint64_t result = swift_release();
  if (*(void *)(v71 + v70))
  {
    swift_retain();
    uint64_t v77 = sub_241CD81A0();
    swift_release();
    uint64_t v143 = v77;
    uint64_t v78 = (void (*)(uint64_t))MEMORY[0x263F456B0];
    sub_241AAD2E8(0, (unint64_t *)&qword_26B032668, MEMORY[0x263F456B0]);
    sub_241AAD34C(&qword_26B032660, (unint64_t *)&qword_26B032668, v78);
    sub_241CDA710();
    uint64_t result = swift_release();
    if (*(void *)(v71 + v75))
    {
      uint64_t v143 = *(void *)(v71 + v75);
      swift_retain();
      uint64_t v79 = v109;
      sub_241CDA710();
      swift_release();
      sub_241AAD39C();
      sub_241AAD420();
      uint64_t v80 = v104;
      uint64_t v81 = v108;
      uint64_t v82 = v112;
      sub_241CDA770();
      sub_241AAD590(&qword_26B031BD8, (void (*)(uint64_t))sub_241AAD16C);
      uint64_t v83 = v110;
      uint64_t v84 = v106;
      sub_241CDA7D0();
      (*(void (**)(unsigned char *, uint64_t))(v105 + 8))(v80, v84);
      uint64_t v85 = (void *)v103;
      uint64_t v143 = v103;
      uint64_t v86 = sub_241CDB8A0();
      uint64_t v87 = (uint64_t)v118;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v118, 1, 1, v86);
      sub_241A313AC(0, &qword_26B0303B8);
      sub_241AAD590(&qword_26B031B40, (void (*)(uint64_t))sub_241AAD4A4);
      sub_241AAD6A4();
      uint64_t v88 = v114;
      uint64_t v89 = v115;
      sub_241CDA7E0();
      sub_241AAD7BC(v87);
      (*(void (**)(unsigned char *, uint64_t))(v113 + 8))(v83, v89);
      sub_241AAD590(&qword_26B031C08, (void (*)(uint64_t))sub_241AAD5D8);
      uint64_t v90 = v117;
      uint64_t v91 = sub_241CDA6D0();

      (*(void (**)(unsigned char *, uint64_t))(v116 + 8))(v88, v90);
      (*(void (**)(unsigned char *, uint64_t))(v111 + 8))(v79, v82);
      (*(void (**)(unsigned char *, uint64_t))(v107 + 8))(v134, v81);
      return v91;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_241AAD0E0()
{
  swift_release();

  return swift_release();
}

uint64_t sub_241AAD120()
{
  return type metadata accessor for CardioFitnessSummaryModelConfiguration();
}

uint64_t sub_241AAD128()
{
  return swift_updateClassMetadata2();
}

void sub_241AAD16C()
{
  if (!qword_26B031BE0)
  {
    sub_241AAD250(255, (unint64_t *)&qword_26B032360, (unint64_t *)&qword_26B032668, MEMORY[0x263F456B0], &qword_26B032660);
    sub_241AAD250(255, &qword_26B031B68, &qword_26B031C40, MEMORY[0x263F44998], &qword_26B031C38);
    sub_241AAD39C();
    sub_241AAD420();
    unint64_t v0 = sub_241CDA450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031BE0);
    }
  }
}

void sub_241AAD250(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_241AAD2E8(255, a3, a4);
    sub_241AAD34C(a5, a3, a4);
    unint64_t v9 = sub_241CDA3E0();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241AAD2E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDA510();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241AAD34C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241AAD2E8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241AAD39C()
{
  unint64_t result = qword_26B032358;
  if (!qword_26B032358)
  {
    sub_241AAD250(255, (unint64_t *)&qword_26B032360, (unint64_t *)&qword_26B032668, MEMORY[0x263F456B0], &qword_26B032660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032358);
  }
  return result;
}

unint64_t sub_241AAD420()
{
  unint64_t result = qword_26B031B60;
  if (!qword_26B031B60)
  {
    sub_241AAD250(255, &qword_26B031B68, &qword_26B031C40, MEMORY[0x263F44998], &qword_26B031C38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B031B60);
  }
  return result;
}

void sub_241AAD4A4()
{
  if (!qword_26B031B48)
  {
    sub_241A97F00();
    sub_241AAD16C();
    sub_241AAD590(&qword_26B0325D0, (void (*)(uint64_t))sub_241A97F00);
    sub_241AAD590(&qword_26B031BD8, (void (*)(uint64_t))sub_241AAD16C);
    unint64_t v0 = sub_241CDA390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031B48);
    }
  }
}

uint64_t sub_241AAD590(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241AAD5D8()
{
  if (!qword_26B031C10)
  {
    sub_241AAD4A4();
    sub_241A313AC(255, &qword_26B0303B8);
    sub_241AAD590(&qword_26B031B40, (void (*)(uint64_t))sub_241AAD4A4);
    sub_241AAD6A4();
    unint64_t v0 = sub_241CDA4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031C10);
    }
  }
}

unint64_t sub_241AAD6A4()
{
  unint64_t result = qword_26B0303B0;
  if (!qword_26B0303B0)
  {
    sub_241A313AC(255, &qword_26B0303B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0303B0);
  }
  return result;
}

void sub_241AAD70C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241AAD758(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241AAD7BC(uint64_t a1)
{
  sub_241AAD758(0, (unint64_t *)&qword_26B034DA8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241AAD848(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v58 = a5;
  uint64_t v9 = type metadata accessor for SharingChartFeedItemFactory(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (id *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (id *)((char *)&v55 - v17);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v55 - v19;
  uint64_t v21 = sub_241CDA1A0();
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v28 = (char *)&v55 - v27;
  if (!a1)
  {
    uint64_t v56 = v26;
    uint64_t v57 = v25;
    sub_241CDA0F0();
    sub_241AAE070(v5, (uint64_t)v15);
    sub_241AAE070(v5, (uint64_t)v12);
    id v39 = sub_241CDA190();
    os_log_type_t v40 = sub_241CDB670();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v60 = v55;
      *(_DWORD *)uint64_t v41 = 136315394;
      unint64_t v42 = sub_241AAEB30();
      uint64_t v59 = sub_241A33FE4(v42, v43, &v60);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AAE0D4((uint64_t)v15);
      *(_WORD *)(v41 + 12) = 2080;
      id v44 = objc_msgSend(v12[1], sel_sensitiveLoggingIdentifier);
      uint64_t v45 = sub_241CDB0D0();
      unint64_t v47 = v46;

      uint64_t v59 = sub_241A33FE4(v45, v47, &v60);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AAE0D4((uint64_t)v12);
      _os_log_impl(&dword_241A23000, v39, v40, "%s: version mismatch found for %s", (uint8_t *)v41, 0x16u);
      uint64_t v48 = v55;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v48, -1, -1);
      MEMORY[0x245637F20](v41, -1, -1);
    }
    else
    {
      sub_241AAE0D4((uint64_t)v15);
      sub_241AAE0D4((uint64_t)v12);
    }

    v56[1](v24, v57);
    goto LABEL_13;
  }
  if (a1 == (void *)1)
  {
    uint64_t v56 = v26;
    uint64_t v57 = v25;
    sub_241CDA0F0();
    sub_241AAE070(v5, (uint64_t)v20);
    sub_241AAE070(v5, (uint64_t)v18);
    uint64_t v29 = sub_241CDA190();
    os_log_type_t v30 = sub_241CDB670();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v60 = v55;
      *(_DWORD *)uint64_t v31 = 136315394;
      unint64_t v32 = sub_241AAEB30();
      uint64_t v59 = sub_241A33FE4(v32, v33, &v60);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AAE0D4((uint64_t)v20);
      *(_WORD *)(v31 + 12) = 2080;
      id v34 = objc_msgSend(v18[1], sel_sensitiveLoggingIdentifier);
      uint64_t v35 = sub_241CDB0D0();
      unint64_t v37 = v36;

      uint64_t v59 = sub_241A33FE4(v35, v37, &v60);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AAE0D4((uint64_t)v18);
      _os_log_impl(&dword_241A23000, v29, v30, "%s: chart model not found for %s", (uint8_t *)v31, 0x16u);
      uint64_t v38 = v55;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v38, -1, -1);
      MEMORY[0x245637F20](v31, -1, -1);
    }
    else
    {
      sub_241AAE0D4((uint64_t)v20);
      sub_241AAE0D4((uint64_t)v18);
    }

    v56[1](v28, v57);
LABEL_13:
    uint64_t v49 = sub_241CD75A0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v58, 1, 1, v49);
    return;
  }
  if ((unint64_t)a3 >= 2)
  {
    id v50 = a3;
    swift_bridgeObjectRetain();
  }
  else
  {
    a3 = 0;
    a4 = 0;
  }
  uint64_t v56 = a1;
  uint64_t v51 = v57;
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_241AAE130(a3, a4);
  sub_241AAE6D0((uint64_t)v56, v51, (uint64_t)v52, v53, v58);
  sub_241AAFA6C((uint64_t)v52);
  sub_241AAFAAC(a3);
  swift_bridgeObjectRelease();
  id v54 = v56;
}

uint64_t sub_241AADE50()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries29SummaryChartFeedItemGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241AADF00()
{
  return type metadata accessor for SummaryChartFeedItemGenerator(0);
}

uint64_t type metadata accessor for SummaryChartFeedItemGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B0335D0);
}

uint64_t sub_241AADF28()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241AADFC4()
{
  return swift_retain();
}

uint64_t sub_241AADFD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries29SummaryChartFeedItemGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SharingChartFeedItemFactory(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B031CD8);
}

uint64_t sub_241AAE070(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharingChartFeedItemFactory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241AAE0D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharingChartFeedItemFactory(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_241AAE130(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_241CD6F50();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v53 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AAFB54(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690]);
  uint64_t v52 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = type metadata accessor for SharingChartFeedItemFactory(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v43 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v43 - v16;
  uint64_t v18 = sub_241CDA1A0();
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v50 = v19;
    id v51 = a1;
    swift_bridgeObjectRetain();
    sub_241CDA0F0();
    sub_241AAE070(v3, (uint64_t)v17);
    sub_241AAE070(v3, (uint64_t)v15);
    sub_241AAE070(v3, (uint64_t)v12);
    uint64_t v22 = sub_241CDA190();
    os_log_type_t v23 = sub_241CDB630();
    int v49 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v48 = a2;
      uint64_t v25 = v24;
      uint64_t v45 = swift_slowAlloc();
      v57[0] = v45;
      *(_DWORD *)uint64_t v25 = 136315650;
      uint64_t v46 = v18;
      os_log_t v44 = v22;
      unint64_t v26 = sub_241AAEB30();
      uint64_t v56 = sub_241A33FE4(v26, v27, v57);
      uint64_t v47 = v3;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AAE0D4((uint64_t)v17);
      *(_WORD *)(v25 + 12) = 2080;
      sub_241CD6E80();
      uint64_t v28 = sub_241CDB120();
      uint64_t v56 = sub_241A33FE4(v28, v29, v57);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AAE0D4((uint64_t)v15);
      *(_WORD *)(v25 + 22) = 2080;
      os_log_type_t v30 = v53;
      sub_241CD6EB0();
      sub_241AAFBE8();
      uint64_t v31 = v55;
      uint64_t v32 = sub_241CDC0D0();
      unint64_t v34 = v33;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v30, v31);
      uint64_t v56 = sub_241A33FE4(v32, v34, v57);
      uint64_t v3 = v47;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AAE0D4((uint64_t)v12);
      os_log_t v35 = v44;
      _os_log_impl(&dword_241A23000, v44, (os_log_type_t)v49, "%s: Using calendar with locale: %s, timeZone: %s", (uint8_t *)v25, 0x20u);
      uint64_t v36 = v45;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      MEMORY[0x245637F20](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v46);
    }
    else
    {
      sub_241AAE0D4((uint64_t)v17);
      sub_241AAE0D4((uint64_t)v15);
      sub_241AAE0D4((uint64_t)v12);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v18);
    }
    id v37 = v51;
    id v38 = objc_msgSend(v51, sel_trendValues);
    if (!v38
      || (id v39 = v38,
          v57[0] = 0,
          sub_241A313AC(0, &qword_26B0303F8),
          sub_241CDB2B0(),
          v39,
          (unint64_t v41 = v57[0]) == 0))
    {
      uint64_t v40 = swift_bridgeObjectRelease();
      unint64_t v41 = MEMORY[0x263F8EE78];
    }
    MEMORY[0x270FA5388](v40);
    *(&v43 - 2) = v3;
    a1 = (void *)sub_241AFEC80((void (*)(uint64_t *__return_ptr, id *))sub_241AAFBA8, (uint64_t)(&v43 - 4), v41);

    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_241AAE6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v42 = a5;
  uint64_t v11 = type metadata accessor for SharingChartFeedItemFactory(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v41 = (uint64_t)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v38 - v14;
  uint64_t v16 = sub_241CDA1A0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46470]), sel_init);
  if (v20)
  {
    uint64_t v21 = v20;
    objc_msgSend(v20, sel_setChartModel_, a1);
    if (a3)
    {
      swift_bridgeObjectRetain();
      sub_241CDB9F0();
      swift_bridgeObjectRetain();
    }
    else
    {
      a4 = MEMORY[0x263F8EE78];
    }
    uint64_t v33 = v42;
    uint64_t v44 = a2;
    swift_bridgeObjectRetain();
    sub_241AFF3B0(a4);
    sub_241AAED10(v21, v44);
    swift_bridgeObjectRelease();

    uint64_t v34 = sub_241CD75A0();
    os_log_t v35 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
    return v35(v33, 0, 1, v34);
  }
  else
  {
    uint64_t v40 = v17;
    sub_241CDA0F0();
    sub_241AAE070(v6, (uint64_t)v15);
    uint64_t v22 = v41;
    sub_241AAE070(v6, v41);
    os_log_type_t v23 = sub_241CDA190();
    os_log_type_t v24 = sub_241CDB650();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v39 = v16;
      uint64_t v26 = v44;
      *(_DWORD *)uint64_t v25 = 136315394;
      unint64_t v27 = sub_241AAEB30();
      uint64_t v43 = sub_241A33FE4(v27, v28, &v44);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AAE0D4((uint64_t)v15);
      *(_WORD *)(v25 + 12) = 2080;
      v38[1] = v25 + 14;
      id v29 = objc_msgSend(*(id *)(v22 + 8), sel_sensitiveLoggingIdentifier);
      uint64_t v30 = sub_241CDB0D0();
      unint64_t v32 = v31;

      uint64_t v43 = sub_241A33FE4(v30, v32, &v44);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AAE0D4(v22);
      _os_log_impl(&dword_241A23000, v23, v24, "%s: failed to make chart feed item for %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v26, -1, -1);
      MEMORY[0x245637F20](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v39);
    }
    else
    {
      sub_241AAE0D4((uint64_t)v15);
      sub_241AAE0D4(v22);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v16);
    }
    uint64_t v37 = sub_241CD75A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v42, 1, 1, v37);
  }
}

unint64_t sub_241AAEB30()
{
  uint64_t v1 = sub_241CD6D70();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xD00000000000001ELL;
  unint64_t v9 = 0x8000000241CDED60;
  id v5 = objc_msgSend(*v0, sel_profileIdentifier);
  id v6 = objc_msgSend(v5, sel_identifier);

  sub_241CD6D50();
  sub_241CD6D20();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  type metadata accessor for SharingChartFeedItemFactory(0);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_241AAED10(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = a2;
  uint64_t v5 = type metadata accessor for SharingChartFeedItemFactory(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v45 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = (char *)&v42 - v8;
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v48 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD73B0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  id v43 = a1;
  id v15 = objc_msgSend(a1, sel_data, v42);
  if (v15)
  {
    uint64_t v16 = v15;
    sub_241CD6AE0();
  }
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F45500], v11);
  objc_msgSend(*(id *)v3, sel_profileIdentifier);
  sub_241CD74A0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v18 = *(void **)(v3 + 8);
  *(void *)(inited + 32) = v18;
  unint64_t v50 = inited;
  sub_241CDB2E0();
  unint64_t v19 = v50;
  uint64_t v20 = (uint64_t)v44;
  if (!(v50 >> 62))
  {
    uint64_t v21 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v22 = v18;
    uint64_t v23 = (uint64_t)v45;
    if (!v21) {
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  id v24 = v18;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_241CDBF50();
  swift_bridgeObjectRelease();
  uint64_t v23 = (uint64_t)v45;
  if (v25) {
LABEL_5:
  }
    sub_241C69200(v19);
LABEL_7:
  swift_bridgeObjectRelease();
  sub_241CD74C0();
  sub_241CD7480();
  uint64_t v26 = swift_bridgeObjectRetain();
  sub_241C69EE0(v26);
  swift_bridgeObjectRelease();
  sub_241CD7540();
  unint64_t v27 = v48;
  sub_241CDA0F0();
  sub_241AAE070(v3, v20);
  sub_241AAE070(v3, v23);
  id v28 = v43;
  id v29 = sub_241CDA190();
  os_log_type_t v30 = sub_241CDB670();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v45 = (char *)swift_slowAlloc();
    unint64_t v50 = (unint64_t)v45;
    *(_DWORD *)uint64_t v31 = 136315651;
    unint64_t v32 = sub_241AAEB30();
    id v49 = (id)sub_241A33FE4(v32, v33, (uint64_t *)&v50);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241AAE0D4(v20);
    *(_WORD *)(v31 + 12) = 2080;
    id v34 = objc_msgSend(*(id *)(v23 + 8), sel_sensitiveLoggingIdentifier);
    uint64_t v35 = sub_241CDB0D0();
    unint64_t v37 = v36;

    id v49 = (id)sub_241A33FE4(v35, v37, (uint64_t *)&v50);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241AAE0D4(v23);
    *(_WORD *)(v31 + 22) = 2081;
    id v49 = objc_msgSend(v28, sel_chartModel);
    sub_241AAFAEC();
    uint64_t v38 = sub_241CDB120();
    id v49 = (id)sub_241A33FE4(v38, v39, (uint64_t *)&v50);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v29, v30, "%s: Created chart feed item for %s with %{private}s", (uint8_t *)v31, 0x20u);
    uint64_t v40 = v45;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v40, -1, -1);
    MEMORY[0x245637F20](v31, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v48, v47);
  }
  else
  {
    sub_241AAE0D4(v20);
    sub_241AAE0D4(v23);

    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v27, v47);
  }
}

id sub_241AAF2C4(void *a1)
{
  uint64_t v52 = type metadata accessor for SharingChartFeedItemFactory(0);
  uint64_t v2 = MEMORY[0x270FA5388](v52);
  uint64_t v54 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v51 - v4;
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v58 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AAFB54(0, &qword_26B032040, MEMORY[0x263F45718]);
  MEMORY[0x270FA5388](v8 - 8);
  id v51 = (char *)&v51 - v9;
  sub_241AAFB54(0, &qword_26B0321D0, MEMORY[0x263F46C00]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v13 = sub_241CD9940();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v53 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AAFB54(0, &qword_26B032228, MEMORY[0x263F47050]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v51 - v17;
  uint64_t v19 = sub_241CD9B80();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  HKCodableSummaryTrendValue.engineOutput.getter((uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_241AAFC40((uint64_t)v18, &qword_26B032228, MEMORY[0x263F47050]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    sub_241CD9B10();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      sub_241AAFC40((uint64_t)v12, &qword_26B0321D0, MEMORY[0x263F46C00]);
    }
    else
    {
      uint64_t v23 = (uint64_t)v53;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v53, v12, v13);
      if (objc_msgSend(a1, sel_hasCoveredDateRangeRawValue))
      {
        id v24 = objc_msgSend(a1, sel_coveredDateRangeRawValue);
        if (v24)
        {
          uint64_t v25 = v24;
          uint64_t v26 = sub_241CDB0D0();
          uint64_t v28 = v27;

          uint64_t v29 = v28;
          uint64_t v23 = (uint64_t)v53;
          int v30 = MEMORY[0x2456352D0](v26, v29);
          if (v30 != 6)
          {
            int v46 = v30;
            uint64_t v58 = (char *)type metadata accessor for TrendComponentBuilder();
            uint64_t v47 = (void *)v57[1];
            uint64_t v56 = *v57;
            uint64_t v48 = (char *)v57 + *(int *)(v52 + 24);
            uint64_t v49 = sub_241CD78F0();
            uint64_t v50 = (uint64_t)v51;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v51, 1, 1, v49);
            id v44 = sub_241CA7564(v56, v47, v48, v23, v46, v50);
            sub_241AAFC40(v50, &qword_26B032040, MEMORY[0x263F45718]);
            (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v23, v13);
            (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
            return v44;
          }
        }
      }
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v23, v13);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    }
  }
  uint64_t v31 = v58;
  sub_241CDA0F0();
  unint64_t v32 = v57;
  sub_241AAE070((uint64_t)v57, (uint64_t)v5);
  uint64_t v33 = v54;
  sub_241AAE070((uint64_t)v32, v54);
  id v34 = sub_241CDA190();
  os_log_type_t v35 = sub_241CDB670();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v60 = v37;
    *(_DWORD *)uint64_t v36 = 136315394;
    unint64_t v38 = sub_241AAEB30();
    uint64_t v59 = sub_241A33FE4(v38, v39, &v60);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241AAE0D4((uint64_t)v5);
    *(_WORD *)(v36 + 12) = 2080;
    id v40 = objc_msgSend(*(id *)(v33 + 8), sel_sensitiveLoggingIdentifier);
    uint64_t v41 = sub_241CDB0D0();
    unint64_t v43 = v42;

    uint64_t v59 = sub_241A33FE4(v41, v43, &v60);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241AAE0D4(v33);
    _os_log_impl(&dword_241A23000, v34, v35, "%s: %s SummaryTrendValue did not have appropriate info to make mean shift model for chart.", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v37, -1, -1);
    MEMORY[0x245637F20](v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v56);
  }
  else
  {
    sub_241AAE0D4((uint64_t)v5);
    sub_241AAE0D4(v33);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v56);
  }
  return 0;
}

uint64_t sub_241AAFA6C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_241AAFAAC(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_241AAFAEC()
{
  if (!qword_26B034DF0)
  {
    sub_241A313AC(255, &qword_26B030428);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034DF0);
    }
  }
}

void sub_241AAFB54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id sub_241AAFBA8@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  id result = sub_241AAF2C4(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_241AAFBE8()
{
  unint64_t result = qword_26B032008;
  if (!qword_26B032008)
  {
    sub_241CD6F50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B032008);
  }
  return result;
}

uint64_t sub_241AAFC40(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241AAFB54(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

char *sub_241AAFC9C(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[1];
    *((void *)a1 + 1) = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_241CD6EE0();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    uint64_t v14 = v4;
    uint64_t v15 = v8;
    v13(v10, v11, v12);
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = &v7[v16];
    uint64_t v19 = (char **)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *(void *)uint64_t v18 = *v19;
    *((void *)v18 + 1) = v20;
    v7[v17] = *((unsigned char *)a2 + v17);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_241AAFDB8(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_241CD6EE0();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_241AAFE50(void *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_241CD6EE0();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v6;
  id v14 = v7;
  v12(v9, v10, v11);
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *((unsigned char *)a1 + v16) = *(unsigned char *)(a2 + v16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241AAFF18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_241CD6EE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

_OWORD *sub_241AAFFFC(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD6EE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  return a1;
}

uint64_t sub_241AB009C(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_241CD6EE0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_241AB0168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241AB017C);
}

uint64_t sub_241AB017C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_241CD6EE0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241AB022C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241AB0240);
}

void *sub_241AB0240(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_241CD6EE0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_241AB02E8()
{
  uint64_t result = sub_241CD6EE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241AB039C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

BOOL sub_241AB03D4(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_241AB03E4()
{
  return sub_241CDC1E0();
}

uint64_t sub_241AB040C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6956726564616568 && a2 == 0xEF6C65646F4D7765;
  if (v2 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000241CDEDA0 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000241CDEDC0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_241AB057C()
{
  return sub_241CDC200();
}

BOOL sub_241AB05C4(char *a1, char *a2)
{
  return sub_241AB03D4(*a1, *a2);
}

uint64_t sub_241AB0608()
{
  return sub_241AB057C();
}

uint64_t sub_241AB0640()
{
  return sub_241AB03E4();
}

uint64_t sub_241AB0678()
{
  return sub_241CDC200();
}

uint64_t sub_241AB06D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_241AB1308(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_241AB040C, a4);
}

uint64_t sub_241AB06E8()
{
  return 0;
}

uint64_t sub_241AB06F4@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_241AB1370(a1, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_241AB36D4, a2);
}

uint64_t sub_241AB070C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_241AB0760(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_241AB07B4()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 152);
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_241CDBBD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 160);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_241CDBBD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_241AB0918()
{
  sub_241AB07B4();

  return swift_deallocClassInstance();
}

uint64_t sub_241AB0970(void *a1)
{
  uint64_t v2 = v1;
  *(void *)&long long v36 = *v2;
  uint64_t v4 = v36;
  uint64_t v5 = *(void *)(v36 + 104);
  uint64_t v6 = *(void *)(v36 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v27 = sub_241CDBBD0();
  uint64_t v31 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  int v30 = (char *)&v26 - v7;
  uint64_t v8 = *(void *)(v36 + 96);
  uint64_t v9 = *(void *)(v36 + 80);
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_241CDBBD0();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v33 = (char *)&v26 - v11;
  uint64_t v12 = *(void *)(v4 + 112);
  uint64_t v13 = *(void *)(v4 + 136);
  uint64_t v39 = v9;
  uint64_t v40 = v6;
  uint64_t v41 = v8;
  uint64_t v42 = v5;
  uint64_t v43 = v12;
  long long v36 = *(_OWORD *)(v36 + 120);
  long long v44 = v36;
  uint64_t v28 = v13;
  uint64_t v45 = v13;
  type metadata accessor for SnidgetHarnessPluginView.ViewModel.CodingKeys();
  swift_getWitnessTable();
  uint64_t v14 = sub_241CDC0B0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v26 - v16;
  sub_241A311E0(a1, a1[3]);
  sub_241CDC230();
  uint64_t v39 = v2[2];
  char v38 = 0;
  sub_241CD89A0();
  sub_241A2845C(&qword_26B032120, MEMORY[0x263F44208]);
  uint64_t v18 = v37;
  sub_241CDC0A0();
  if (v18) {
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  uint64_t v20 = v15;
  uint64_t v21 = v30;
  uint64_t v22 = v31;
  uint64_t v23 = (char *)v2 + *(void *)(*v2 + 152);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v33, v23, v35);
  char v38 = 1;
  sub_241CDC060();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
  id v24 = (char *)v2 + *(void *)(*v2 + 160);
  swift_beginAccess();
  uint64_t v25 = v27;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v21, v24, v27);
  char v46 = 2;
  sub_241CDC060();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v17, v14);
}

void sub_241AB0EB8()
{
  sub_241A35738(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_241AB0F84()
{
  return sub_241CD87E0();
}

uint64_t sub_241AB0FD4(void *a1)
{
  return sub_241AB0970(a1);
}

BOOL sub_241AB0FF8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_241AB1008()
{
  return sub_241CDC1E0();
}

uint64_t sub_241AB1030(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x8000000241CDEDE0 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000241CDEE00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_241AB111C()
{
  return sub_241CDC200();
}

unint64_t sub_241AB1164(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000014;
  }
}

BOOL sub_241AB11A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_241AB0FF8(*a1, *a2);
}

uint64_t sub_241AB11E4()
{
  return sub_241AB111C();
}

uint64_t sub_241AB1220()
{
  return sub_241AB1008();
}

uint64_t sub_241AB125C()
{
  return sub_241CDC200();
}

unint64_t sub_241AB12B4()
{
  return sub_241AB1164(*v0);
}

uint64_t sub_241AB12F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_241AB1308(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_241AB1030, a4);
}

uint64_t sub_241AB1308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void, void, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9]);
  *a5 = result;
  return result;
}

uint64_t sub_241AB1358@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_241AB1370(a1, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_241AB3C90, a2);
}

uint64_t sub_241AB1370@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void, void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  *a3 = result;
  return result;
}

uint64_t sub_241AB13B4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_241AB1408(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_241AB145C()
{
  swift_bridgeObjectRelease();
  sub_241AB37FC(v0 + qword_26B0413C0, &qword_26B038F10, MEMORY[0x263F062D0]);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData()
{
  return swift_getGenericMetadata();
}

uint64_t sub_241AB14FC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (_OWORD *)*v2;
  sub_241A35738(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  v17[0] = (uint64_t)v17 - v6;
  long long v7 = v4[6];
  long long v18 = v4[5];
  long long v19 = v7;
  long long v8 = v4[8];
  long long v20 = v4[7];
  long long v21 = v8;
  type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData.CodingKeys();
  swift_getWitnessTable();
  uint64_t v9 = sub_241CDC0B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v17 - v11;
  sub_241A311E0(a1, a1[3]);
  sub_241CDC230();
  LOBYTE(v18) = 0;
  swift_bridgeObjectRetain();
  uint64_t v13 = v17[1];
  sub_241CDC070();
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = (uint64_t)v2 + qword_26B0413C0;
    swift_beginAccess();
    uint64_t v16 = v17[0];
    sub_241AB36DC(v15, v17[0], &qword_26B038F10, MEMORY[0x263F062D0]);
    char v22 = 1;
    sub_241CD6810();
    sub_241A2845C(&qword_26B031F68, MEMORY[0x263F062D0]);
    sub_241CDC060();
    sub_241AB37FC(v16, &qword_26B038F10, MEMORY[0x263F062D0]);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_241AB182C(uint64_t a1)
{
  return sub_241A28594(a1, (void (*)(uint64_t))sub_241AB189C);
}

uint64_t sub_241AB1858()
{
  return swift_initClassMetadata2();
}

void *sub_241AB189C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)*v1;
  sub_241A35738(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  long long v7 = (char *)&v36 - v6;
  uint64_t v8 = v4[10];
  uint64_t v9 = v4[12];
  uint64_t v10 = v4[13];
  uint64_t v11 = v4[14];
  uint64_t v12 = v4[15];
  uint64_t v13 = v4[16];
  uint64_t v14 = v4[17];
  uint64_t v43 = v4[11];
  uint64_t v44 = v8;
  uint64_t v49 = v8;
  uint64_t v50 = v43;
  uint64_t v41 = v10;
  uint64_t v42 = v9;
  uint64_t v51 = v9;
  uint64_t v52 = v10;
  uint64_t v39 = v12;
  uint64_t v40 = v11;
  uint64_t v53 = v11;
  uint64_t v54 = v12;
  uint64_t v45 = v14;
  uint64_t v46 = v13;
  uint64_t v55 = v13;
  uint64_t v56 = v14;
  type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData.CodingKeys();
  swift_getWitnessTable();
  uint64_t v15 = sub_241CDC040();
  uint64_t v37 = *(void *)(v15 - 8);
  uint64_t v38 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = (uint64_t)v2 + qword_26B0413C0;
  uint64_t v19 = sub_241CD6810();
  long long v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v47 = v18;
  v20(v18, 1, 1, v19);
  uint64_t v21 = a1[3];
  uint64_t v48 = a1;
  sub_241A311E0(a1, v21);
  uint64_t v22 = v57;
  sub_241CDC220();
  if (v22)
  {
    uint64_t v25 = (uint64_t)v48;
    uint64_t v27 = v43;
    uint64_t v26 = v44;
    uint64_t v29 = v41;
    uint64_t v28 = v42;
    uint64_t v31 = v39;
    uint64_t v30 = v40;
    sub_241AB37FC(v47, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v49 = v26;
    uint64_t v50 = v27;
    uint64_t v51 = v28;
    uint64_t v52 = v29;
    uint64_t v53 = v30;
    uint64_t v54 = v31;
    uint64_t v55 = v46;
    uint64_t v56 = v45;
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    swift_deallocPartialClassInstance();
    uint64_t v35 = v25;
  }
  else
  {
    uint64_t v24 = v37;
    uint64_t v23 = v38;
    LOBYTE(v49) = 0;
    v2[2] = sub_241CDC000();
    v2[3] = v33;
    LOBYTE(v49) = 1;
    sub_241A2845C(&qword_26B030948, MEMORY[0x263F062D0]);
    sub_241CDBFF0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v23);
    uint64_t v34 = v47;
    swift_beginAccess();
    sub_241A35548((uint64_t)v7, v34, &qword_26B038F10, MEMORY[0x263F062D0]);
    swift_endAccess();
    uint64_t v35 = (uint64_t)v48;
  }
  sub_241A31190(v35);
  return v2;
}

uint64_t sub_241AB1D34()
{
  return sub_241CD87F0();
}

uint64_t sub_241AB1DAC()
{
  return sub_241CD87E0();
}

uint64_t sub_241AB1DFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_241AB182C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_241AB1E28(void *a1)
{
  return sub_241AB14FC(a1);
}

void sub_241AB1E4C()
{
  uint64_t v1 = v0;
  uint64_t v95 = *v0;
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v98 = *(void *)(v2 - 8);
  uint64_t v99 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v85 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v97 = (char *)&v73 - v5;
  uint64_t v94 = sub_241CD8C50();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v90 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_241CD89F0();
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v89 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_241CD8350();
  MEMORY[0x270FA5388](v88);
  uint64_t v87 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35738(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v86 = (uint64_t)&v73 - v11;
  sub_241A35738(0, &qword_26B030648, MEMORY[0x263F43C08], v9);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v73 - v13;
  uint64_t v15 = sub_241CD8F70();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v73 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v73 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v73 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v73 - v29;
  sub_241CD8CF0();
  uint64_t v31 = v15;
  uint64_t v96 = sub_241CD8F40();
  unint64_t v33 = v32;
  uint64_t v35 = *(void (**)(void, void))(v16 + 8);
  uint64_t v34 = v16 + 8;
  uint64_t v36 = v30;
  uint64_t v37 = (void (*)(char *, uint64_t))v35;
  v35(v36, v31);
  if (v33 >> 60 != 15)
  {
    uint64_t v78 = v14;
    uint64_t v79 = v28;
    uint64_t v80 = v25;
    uint64_t v81 = v22;
    uint64_t v84 = v37;
    uint64_t v77 = v19;
    uint64_t v82 = v34;
    uint64_t v83 = v31;
    uint64_t v38 = v1;
    sub_241CD6710();
    swift_allocObject();
    sub_241CD6700();
    long long v39 = *(_OWORD *)(v95 + qword_26B0413A8 + 16);
    long long v40 = *(_OWORD *)(v95 + qword_26B0413A8 + 32);
    long long v41 = *(_OWORD *)(v95 + qword_26B0413A8 + 48);
    long long v101 = *(_OWORD *)(v95 + qword_26B0413A8);
    long long v102 = v39;
    long long v103 = v40;
    long long v104 = v41;
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
    swift_getWitnessTable();
    uint64_t v42 = v96;
    sub_241CD66F0();
    swift_release();
    uint64_t v47 = v100;
    uint64_t v48 = self;
    swift_bridgeObjectRetain();
    uint64_t v49 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
    uint64_t v50 = (char *)objc_msgSend(v48, sel__typeWithIdentifier_, v49);

    if (v50)
    {
      unint64_t v74 = v33;
      uint64_t v51 = v79;
      uint64_t v97 = v50;
      uint64_t v75 = v38;
      sub_241CD8CF0();
      sub_241CD8F30();
      uint64_t v52 = v83;
      uint64_t v53 = v84;
      v84(v51, v83);
      uint64_t v54 = (void *)sub_241CD8580();
      swift_release();
      id v55 = objc_msgSend(v54, sel_profileIdentifier);

      uint64_t v56 = v80;
      sub_241CD8CF0();
      sub_241CD8F30();
      v53(v56, v52);
      uint64_t v57 = (uint64_t)v78;
      sub_241CD8590();
      swift_release();
      uint64_t v58 = sub_241CD83C0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 0, 1, v58);
      int v76 = sub_241CD84B0();

      sub_241AB37FC(v57, &qword_26B030648, MEMORY[0x263F43C08]);
      sub_241CD8390();
      uint64_t v78 = v47;
      uint64_t v59 = (uint64_t)&v47[qword_26B0413C0];
      swift_beginAccess();
      sub_241AB36DC(v59, v86, &qword_26B038F10, MEMORY[0x263F062D0]);
      *(void *)&long long v101 = MEMORY[0x263F8EE78];
      sub_241A2845C(&qword_26B030968, MEMORY[0x263F43B50]);
      sub_241A35738(0, &qword_26B030B30, MEMORY[0x263F43B50], MEMORY[0x263F8D488]);
      sub_241AB375C();
      sub_241CDBC70();
      uint64_t v60 = (void *)sub_241CD8360();
      uint64_t v61 = v89;
      sub_241CD89E0();
      sub_241CD8CF0();
      sub_241CD8F30();
      uint64_t v62 = v51;
      uint64_t v63 = v83;
      uint64_t v64 = v84;
      v84(v62, v83);
      sub_241CD8570();
      swift_release();
      sub_241CD8CF0();
      sub_241CD8F30();
      v64(v56, v63);
      sub_241CD8580();
      swift_release();
      uint64_t v65 = v81;
      sub_241CD8CF0();
      sub_241CD8F30();
      v64(v65, v63);
      sub_241CD85A0();
      swift_release();
      id v66 = v60;
      unint64_t v67 = v90;
      uint64_t v68 = v97;
      sub_241CD8C20();
      uint64_t v69 = (void *)sub_241CD89D0();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v67, v94);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v61, v92);
      uint64_t v70 = v77;
      sub_241CD8CF0();
      uint64_t v71 = (void *)sub_241CD8F50();
      v84(v70, v63);
      id v72 = objc_msgSend(v71, sel_navigationController);

      if (v72)
      {
        objc_msgSend(v72, sel_pushViewController_animated_, v69, 1);
        sub_241A54FC8(v96, v74);
      }
      else
      {
        sub_241A54FC8(v96, v74);
      }
      swift_release();

      return;
    }
    swift_release();
    sub_241A54FC8(v42, v33);
  }
  uint64_t v43 = v97;
  sub_241CDA120();
  uint64_t v44 = sub_241CDA190();
  os_log_type_t v45 = sub_241CDB650();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v46 = 0;
    _os_log_impl(&dword_241A23000, v44, v45, "SnidgetActionHandler: unable to read object type", v46, 2u);
    MEMORY[0x245637F20](v46, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v98 + 8))(v43, v99);
}

uint64_t sub_241AB2CC8(uint64_t a1)
{
  return sub_241AB2D04(a1);
}

uint64_t sub_241AB2D04(uint64_t a1)
{
  uint64_t v2 = sub_241CD8F70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  uint64_t v5 = sub_241CD8D00();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v5;
}

uint64_t sub_241AB2DF8()
{
  _s9Summaries29SummaryTrendViewActionHandlerCfd_0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SnidgetHarnessPluginView.ActionHandler()
{
  return swift_getGenericMetadata();
}

char *sub_241AB2E40(char *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_241CD8F70();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_241A35738(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    uint64_t v11 = a3[21];
    uint64_t v12 = a3[22];
    uint64_t v13 = &v4[v11];
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *(void *)uint64_t v13 = *v14;
    *((void *)v13 + 1) = v15;
    uint64_t v16 = &v4[v12];
    uint64_t v17 = (uint64_t *)((char *)a2 + v12);
    uint64_t v18 = v17[1];
    *(void *)uint64_t v16 = *v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = a3[24];
    *(void *)&v4[a3[23]] = *(uint64_t *)((char *)a2 + a3[23]);
    uint64_t v20 = &v4[v19];
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    *(void *)uint64_t v20 = v23;
    *((void *)v20 + 1) = v22;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

char *sub_241AB3030(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD8F70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A35738(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[21];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[22];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_retain();
  swift_release();
  *(void *)&a1[a3[23]] = *(void *)&a2[a3[23]];
  swift_retain();
  swift_release();
  uint64_t v18 = a3[24];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  swift_retain();
  swift_release();
  *((void *)v19 + 1) = *((void *)v20 + 1);
  return a1;
}

char *sub_241AB327C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD8F70();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A35738(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[22];
  *(_OWORD *)&a1[a3[21]] = *(_OWORD *)&a2[a3[21]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  uint64_t v10 = a3[24];
  *(void *)&a1[a3[23]] = *(void *)&a2[a3[23]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  return a1;
}

uint64_t sub_241AB33EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241AB3400);
}

uint64_t sub_241AB3400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241A35738(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 84) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_241AB34F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241AB3508);
}

void sub_241AB3508(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_241A35738(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 84) + 8) = (a2 - 1);
  }
}

uint64_t sub_241AB3608@<X0>(uint64_t a1@<X8>)
{
  return sub_241AB36DC(v1, a1, &qword_26B0385D0, MEMORY[0x263F445F8]);
}

uint64_t (*sub_241AB3644())()
{
  return nullsub_1;
}

uint64_t sub_241AB3664()
{
  return swift_getWitnessTable();
}

uint64_t sub_241AB3680()
{
  return swift_getWitnessTable();
}

uint64_t sub_241AB369C()
{
  return swift_getWitnessTable();
}

uint64_t sub_241AB36B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_241AB36D4()
{
  return 3;
}

uint64_t sub_241AB36DC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A35738(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_241AB375C()
{
  unint64_t result = qword_26B030B38;
  if (!qword_26B030B38)
  {
    sub_241A35738(255, &qword_26B030B30, MEMORY[0x263F43B50], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030B38);
  }
  return result;
}

uint64_t type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_241AB37FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A35738(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SummaryModelConfiguration.Audience(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_241AB3924(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241AB39F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_241AB3A18(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

uint64_t sub_241AB3A24()
{
  return swift_getWitnessTable();
}

uint64_t sub_241AB3C20()
{
  return swift_getWitnessTable();
}

uint64_t sub_241AB3C3C()
{
  return swift_getWitnessTable();
}

uint64_t sub_241AB3C58()
{
  return swift_getWitnessTable();
}

uint64_t sub_241AB3C74()
{
  return swift_getWitnessTable();
}

uint64_t sub_241AB3C90()
{
  return 2;
}

uint64_t sub_241AB3C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241AB3CAC);
}

uint64_t sub_241AB3CAC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241AB3D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241AB3D70);
}

void *sub_241AB3D70(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031D80;
  if (!qword_26B031D80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241AB3E68()
{
  return sub_241AB3FB4((unint64_t *)&qword_26B0320F0);
}

void sub_241AB3E9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241AB3F38(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241AB3F38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241AB3F80()
{
  return sub_241AB3FB4((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241AB3FB4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241AB3E9C(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    int v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241AB3F38((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241AB3F38(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241AB40A0(uint64_t a1)
{
  uint64_t result = sub_241AB3F38(&qword_26B036528, (void (*)(uint64_t))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241AB40F8()
{
  return sub_241AB4198(&qword_26B038390, &qword_26B038398, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241AB4148()
{
  return sub_241AB4198(&qword_26B032DE0, &qword_26B032DE8, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241AB4198(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241AB41DC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241AB41DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241AB3E9C(255, &qword_26B032118, MEMORY[0x263F44150]);
    v9[0] = v6;
    v9[1] = &type metadata for CardioFitnessSnidgetVisualizationView;
    _OWORD v9[2] = sub_241A3F5B0();
    v9[3] = sub_241A92360();
    v9[4] = sub_241AB3FB4((unint64_t *)&qword_26B0320F0);
    v9[5] = sub_241AB3FB4((unint64_t *)&qword_26B0320E0);
    v9[6] = sub_241A923B4();
    v9[7] = sub_241A92408();
    unint64_t v7 = a3(a1, v9);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241AB42F8(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v74 = a3;
  uint64_t v75 = a1;
  id v72 = a4;
  uint64_t v67 = type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v67);
  uint64_t v68 = (uint64_t *)((char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_241CDA1A0();
  uint64_t v69 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v70 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AB732C(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v65 - v10;
  sub_241AB732C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v65 - v13;
  sub_241AB732C(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = self;
  uint64_t v71 = v4;
  id v22 = objc_msgSend(v21, sel_sharedInstanceForHealthStore_, *v4);
  if (!v22)
  {
    __break(1u);
    return;
  }
  uint64_t v23 = v22;
  sub_241A313AC(0, (unint64_t *)&qword_26B030398);
  uint64_t v24 = (void *)MEMORY[0x245636A00]((id)*MEMORY[0x263F09F20]);
  id v25 = objc_msgSend(v23, sel_displayTypeForObjectType_, v24);

  if (!v25)
  {
    sub_241A3A824();
    swift_allocError();
    swift_willThrow();
    return;
  }
  uint64_t v26 = v75;
  if (!objc_msgSend(v75, sel_hasKindRawValue)) {
    goto LABEL_10;
  }
  id v27 = objc_msgSend(v26, sel_kindRawValue);
  id v66 = a2;
  if (!v27)
  {
LABEL_11:
    uint64_t v65 = v7;
    uint64_t v38 = v70;
    sub_241CDA0F0();
    long long v39 = v68;
    sub_241AB74C4((uint64_t)v71, (uint64_t)v68, (uint64_t (*)(void))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
    long long v40 = a2;
    swift_bridgeObjectRetain_n();
    id v41 = v26;
    uint64_t v42 = v40;
    id v43 = v41;
    uint64_t v44 = v42;
    id v45 = v43;
    uint64_t v46 = v44;
    id v47 = v45;
    uint64_t v48 = sub_241CDA190();
    os_log_type_t v49 = sub_241CDB650();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v75 = v25;
      uint64_t v50 = swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t v79 = v73;
      *(_DWORD *)uint64_t v50 = 136315650;
      uint64_t v51 = sub_241AE02D0(*v39, *((unsigned __int8 *)v39 + *(int *)(v67 + 24) + 8));
      uint64_t v76 = sub_241A33FE4(v51, v52, &v79);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AB7380((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
      *(_WORD *)(v50 + 12) = 2080;
      id v53 = objc_msgSend(v47, sel_kindRawValue);
      if (v53)
      {
        uint64_t v54 = v53;
        sub_241CDB0D0();

        char v55 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
      }
      else
      {
        char v55 = 22;
      }
      LOBYTE(v76) = v55;
      sub_241A94320(0, &qword_26B034E20);
      uint64_t v56 = sub_241CDB120();
      uint64_t v76 = sub_241A33FE4(v56, v57, &v79);
      sub_241CDBBF0();
      uint64_t v58 = v74;
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 22) = 2080;
      uint64_t v76 = (uint64_t)v47;
      uint64_t v77 = v66;
      uint64_t v78 = v58;
      sub_241AB73E0();
      id v59 = v47;
      uint64_t v60 = v46;
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_241CDB120();
      uint64_t v76 = sub_241A33FE4(v61, v62, &v79);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v48, v49, "[%s]: unsupported model kind=%s on model=%s", (uint8_t *)v50, 0x20u);
      uint64_t v63 = v73;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v63, -1, -1);
      MEMORY[0x245637F20](v50, -1, -1);

      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v65);
      id v25 = v75;
    }
    else
    {
      sub_241AB7380((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v65);
    }
    sub_241A41340();
    swift_allocError();
    *uint64_t v64 = 0;
    swift_willThrow();
    goto LABEL_19;
  }
  uint64_t v28 = v27;
  sub_241CDB0D0();

  int v29 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
  if (v29 == 7)
  {
    sub_241AB5DE0(v25, v75, v74, v72);

    return;
  }
  a2 = v66;
  uint64_t v26 = v75;
  if (v29 == 11)
  {
LABEL_10:
    uint64_t v30 = sub_241CD7A10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v17, 1, 1, v30);
    uint64_t v31 = sub_241CD6810();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v14, 1, 1, v31);
    uint64_t v32 = v74;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, (uint64_t)v17, v32, (uint64_t)v14, v20);
    sub_241CD89A0();
    uint64_t v33 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v11, 1, 1, v33);
    id v34 = v25;
    uint64_t v35 = sub_241CD8990();
    sub_241A921B8(0);
    uint64_t v37 = v72;
    sub_241AB74C4((uint64_t)v20, (uint64_t)v72 + *(int *)(v36 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    *uint64_t v37 = v35;
    *(_OWORD *)(v37 + 1) = xmmword_241CEBF20;
    v37[3] = 0;
    sub_241AB7380((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  if (v29 != 14) {
    goto LABEL_11;
  }
  sub_241AB4C2C(v25, v75, v66, v74, v72);
LABEL_19:
}

void sub_241AB4C2C(void *a1@<X0>, void *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v162 = a2;
  uint64_t v156 = a4;
  uint64_t v157 = a5;
  uint64_t v150 = a3;
  id v159 = a1;
  uint64_t v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v158 = (char *)v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AB732C(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v155 = (char *)v129 - v8;
  sub_241AB732C(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v142 = (char *)v129 - v10;
  sub_241AB732C(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v160 = (char *)v129 - v12;
  uint64_t v13 = sub_241CD6810();
  uint64_t v153 = *(void *)(v13 - 8);
  uint64_t v154 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v141 = (char *)v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AB732C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v161 = (uint64_t)v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v151 = (uint64_t)v129 - v18;
  uint64_t v146 = sub_241CD6EE0();
  uint64_t v145 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  uint64_t v149 = (char *)v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AB732C(0, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v148 = (char *)v129 - v21;
  sub_241AB732C(0, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v147 = (char *)v129 - v23;
  uint64_t v144 = sub_241CD6D00();
  uint64_t v143 = *(void *)(v144 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v144);
  uint64_t v140 = (char *)v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)v129 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)v129 - v29;
  sub_241AB732C(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v32 = MEMORY[0x270FA5388](v31 - 8);
  id v34 = (char *)v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v37 = (char *)v129 - v36;
  MEMORY[0x270FA5388](v35);
  long long v39 = (char *)v129 - v38;
  uint64_t v40 = sub_241CD69B0();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v44 = (char *)v129 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v46 = (char *)v129 - v45;
  uint64_t v47 = v163;
  sub_241ADF598(v162);
  if (!v47)
  {
    uint64_t v162 = v39;
    uint64_t v163 = 0;
    id v135 = v30;
    uint64_t v132 = v44;
    uint64_t v133 = v37;
    uint64_t v134 = v34;
    uint64_t v136 = v28;
    uint64_t v137 = v46;
    uint64_t v139 = v41;
    uint64_t v138 = v40;
    uint64_t v50 = v160;
    uint64_t v49 = v161;
    uint64_t v51 = v158;
    if (v48)
    {
      unint64_t v52 = v48;
      if (objc_msgSend(v48, sel_hasValue))
      {
        id v53 = (char *)objc_msgSend(v52, sel_value);
        if (v53)
        {
          uint64_t v158 = v53;
          id v131 = v52;
          uint64_t v54 = v152;
          char v55 = (void *)*v152;
          uint64_t v56 = (uint64_t)v54 + *(int *)(type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider() + 24);
          unint64_t v57 = *(void **)(v56 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
          type metadata accessor for MostRecentSampleSnidgetStringBuilder();
          uint64_t inited = swift_initStackObject();
          *(void *)(inited + 16) = v55;
          id v59 = self;
          id v60 = v57;
          id v61 = v55;
          id v62 = objc_msgSend(v59, sel_sharedInstanceForHealthStore_, v61);
          *(void *)(inited + 32) = v62;
          uint64_t v130 = v56;
          if (v57)
          {
            uint64_t v63 = (id *)inited;
          }
          else
          {
            uint64_t v63 = (id *)inited;
            id v72 = v62;
            id v60 = objc_msgSend(v72, sel_createHKUnitPreferenceController);
          }
          uint64_t v73 = v138;
          uint64_t v74 = v139;
          id v76 = v158;
          id v75 = v159;

          v63[3] = v60;
          uint64_t v77 = (void *)sub_241CDB860();
          uint64_t v78 = v162;
          MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleQuantityPrimaryAttributedString(displayType:quantity:)(v75, v77, (uint64_t)v162);

          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v74 + 48))(v78, 1, v73) == 1)
          {
            sub_241AB7468((uint64_t)v78, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
            sub_241A41340();
            swift_allocError();
            *uint64_t v79 = 0;
            swift_willThrow();
            swift_setDeallocating();

            return;
          }
          v129[1] = v63;
          (*(void (**)(char *, void *, uint64_t))(v74 + 32))(v137, v78, v73);
          uint64_t v80 = v150;
          if (v150)
          {
            uint64_t v81 = (void *)v152[1];
            id v82 = v131;
            objc_msgSend(v131, sel_dateData);
            id v83 = (id)HKDecodeDateForValue();
            uint64_t v84 = v135;
            sub_241CD6CB0();

            sub_241A3A71C();
            uint64_t v86 = (uint64_t)v147;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v147, 1, 1, v85);
            uint64_t v87 = sub_241CD8A60();
            uint64_t v88 = (uint64_t)v148;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v148, 1, 1, v87);
            uint64_t v89 = (uint64_t)v149;
            sub_241CD6EA0();
            uint64_t v90 = v163;
            id v91 = sub_241BACC30((char *)v61, v81, v130, v80, v84, v86, v88, 0, v89);
            uint64_t v163 = v90;
            if (v90)
            {

              swift_release();
              (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v89, v146);
              sub_241AB7468(v88, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
              sub_241AB7468(v86, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
              (*(void (**)(void *, uint64_t))(v143 + 8))(v84, v144);
              (*(void (**)(char *, uint64_t))(v139 + 8))(v137, v138);
              uint64_t v92 = 1;
LABEL_21:
              sub_241A924A4(v92);
              return;
            }
            unint64_t v93 = (unint64_t)v91;
            (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v89, v146);
            sub_241AB7468(v88, (unint64_t *)&unk_26B032130, MEMORY[0x263F442F0]);
            sub_241AB7468(v86, (unint64_t *)&qword_26B031FE8, (void (*)(uint64_t))sub_241A3A71C);
            (*(void (**)(void *, uint64_t))(v143 + 8))(v84, v144);
            sub_241A924A4(1);
          }
          else
          {
            unint64_t v93 = 1;
          }
          uint64_t v94 = v153;
          uint64_t v95 = v154;
          uint64_t v96 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56);
          uint64_t v97 = v151;
          v96(v151, 1, 1, v154);
          uint64_t v98 = v141;
          if (v93 >= 2)
          {
            swift_retain();
            sub_241CD8A40();
            sub_241CD67E0();
            (*(void (**)(char *, uint64_t))(v94 + 8))(v98, v95);
            objc_msgSend(v131, sel_dateData);
            id v99 = (id)HKDecodeDateForValue();
            sub_241CD6CB0();

            uint64_t v100 = v161;
            sub_241CD67C0();
            swift_release();
            sub_241AB7468(v97, &qword_26B038F10, MEMORY[0x263F062D0]);
            v96(v100, 0, 1, v95);
            sub_241A3AAA0(v100, v97);
          }
          uint64_t v152 = (void *)v93;
          sub_241CD89A0();
          sub_241A3A9CC();
          uint64_t v102 = *(int *)(v101 + 48);
          id v103 = v159;
          objc_msgSend(v131, sel_dateData);
          id v104 = (id)HKDecodeDateForValue();
          uint64_t v105 = v160;
          sub_241CD6CB0();

          v105[v102] = 0;
          uint64_t v106 = *MEMORY[0x263F43F18];
          uint64_t v107 = sub_241CD8610();
          uint64_t v108 = *(void *)(v107 - 8);
          (*(void (**)(char *, uint64_t, uint64_t))(v108 + 104))(v105, v106, v107);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
          uint64_t v162 = (void *)sub_241CD8990();
          uint64_t v109 = v139;
          uint64_t v110 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v139 + 56);
          uint64_t v111 = v138;
          v110(v133, 1, 1, v138);
          (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v132, v137, v111);
          v110(v134, 1, 1, v111);
          uint64_t v164 = 0x5F74656764696E53;
          unint64_t v165 = 0xE800000000000000;
          id v112 = *(id *)(v130 + 16);
          id v113 = objc_msgSend(v112, sel_description);
          sub_241CDB0D0();

          sub_241CDB180();
          swift_bridgeObjectRelease();
          uint64_t v114 = (void *)sub_241CDB860();
          objc_msgSend(v114, sel__value);

          uint64_t v115 = v142;
          sub_241CD8E60();
          swift_bridgeObjectRelease();
          uint64_t v116 = sub_241CD8E70();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v115, 0, 1, v116);
          sub_241CD8FF0();
          swift_allocObject();
          uint64_t v160 = (char *)sub_241CD8FE0();
          uint64_t v117 = v152;
          sub_241A9245C((uint64_t)v152);
          id v118 = v131;
          objc_msgSend(v131, sel_dateData);
          id v119 = (id)HKDecodeDateForValue();
          sub_241CD6CB0();

          uint64_t v120 = (uint64_t)v155;
          sub_241CD79D0();
          uint64_t v121 = sub_241CD7A10();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v120, 0, 1, v121);
          uint64_t v122 = v151;
          uint64_t v123 = v161;
          sub_241A4145C(v151, v161);
          sub_241A921B8(0);
          uint64_t v126 = v156;
          uint64_t v125 = v157;
          unsigned int v127 = (char *)v157 + *(int *)(v124 + 52);
          swift_bridgeObjectRetain();
          sub_241B4A1A8(1, v120, v126, v123, v127);

          swift_release();
          uint64_t v128 = v160;
          *uint64_t v125 = v162;
          v125[1] = v128;
          v125[2] = v117;
          v125[3] = 0;
          sub_241AB7468(v122, &qword_26B038F10, MEMORY[0x263F062D0]);
          (*(void (**)(char *, uint64_t))(v109 + 8))(v137, v111);
          uint64_t v92 = (uint64_t)v117;
          goto LABEL_21;
        }
      }
    }
    uint64_t v64 = sub_241CD7A10();
    uint64_t v65 = (uint64_t)v155;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v155, 1, 1, v64);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56))(v49, 1, 1, v154);
    uint64_t v66 = v156;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v65, v66, v49, v51);
    sub_241CD89A0();
    uint64_t v67 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v50, 1, 1, v67);
    id v68 = v159;
    uint64_t v69 = sub_241CD8990();
    sub_241A921B8(0);
    uint64_t v71 = v157;
    sub_241AB74C4((uint64_t)v51, (uint64_t)v157 + *(int *)(v70 + 52), type metadata accessor for SnidgetFeedItemMetadata);
    *uint64_t v71 = v69;
    *(_OWORD *)(v71 + 1) = xmmword_241CEBF20;
    v71[3] = 0;
    sub_241AB7380((uint64_t)v51, type metadata accessor for SnidgetFeedItemMetadata);
  }
}

void sub_241AB5DE0(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v149 = a3;
  uint64_t v144 = a1;
  uint64_t v146 = a4;
  uint64_t v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v145 = (char *)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AB732C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v148 = (char *)&v122 - v8;
  uint64_t v9 = sub_241CD6D00();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v139 = (char *)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AB732C(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v147 = (char *)&v122 - v12;
  sub_241AB732C(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v138 = (char *)&v122 - v14;
  sub_241AB732C(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v137 = (char *)&v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v136 = (char *)&v122 - v18;
  sub_241AB732C(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v143 = (char *)&v122 - v20;
  uint64_t v135 = sub_241CDA090();
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v140 = (uint64_t)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_241CD7F90();
  uint64_t v132 = *(void *)(v133 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v133);
  uint64_t v24 = (char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v122 - v25;
  uint64_t v27 = sub_241CD80F0();
  uint64_t v131 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v122 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_241CD69B0();
  uint64_t v141 = *(void *)(v30 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v122 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  uint64_t v36 = (char *)&v122 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v122 - v37;
  uint64_t v39 = v152;
  sub_241ADF5D8(a2);
  if (v39) {
    return;
  }
  uint64_t v128 = v29;
  uint64_t v124 = v27;
  uint64_t v125 = v26;
  uint64_t v126 = v24;
  unsigned int v127 = v33;
  uint64_t v129 = v36;
  uint64_t v130 = v38;
  uint64_t v152 = 0;
  uint64_t v42 = v146;
  uint64_t v41 = (uint64_t)v147;
  uint64_t v44 = (uint64_t)v148;
  uint64_t v43 = v149;
  uint64_t v45 = v145;
  if (!v40)
  {
LABEL_10:
    uint64_t v60 = sub_241CD7A10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v41, 1, 1, v60);
    uint64_t v61 = sub_241CD6810();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v44, 1, 1, v61);
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v41, v43, v44, v45);
    sub_241CD89A0();
    uint64_t v62 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v143, 1, 1, v62);
    id v63 = v144;
    uint64_t v64 = sub_241CD8990();
    sub_241A921B8(0);
    sub_241AB74C4((uint64_t)v45, (uint64_t)v42 + *(int *)(v65 + 52), type metadata accessor for SnidgetFeedItemMetadata);
    *uint64_t v42 = v64;
    *(_OWORD *)(v42 + 1) = xmmword_241CEBF20;
    void v42[3] = 0;
    sub_241AB7380((uint64_t)v45, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  uint64_t v46 = v40;
  if (!objc_msgSend(v40, sel_hasClassificationRawValue)
    || (id v47 = objc_msgSend(v46, sel_classificationRawValue),
        !objc_msgSend(v46, sel_hasLevelViewDataConfiguration))
    || !objc_msgSend(v46, sel_hasDateData)
    || !objc_msgSend(v46, sel_hasValue))
  {

    goto LABEL_10;
  }
  uint64_t v145 = v46;
  uint64_t v48 = v142;
  uint64_t v49 = *v142;
  uint64_t v50 = (void **)((char *)v48 + *(int *)(type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider() + 24));
  uint64_t v51 = *(id *)((char *)v50 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
  type metadata accessor for MostRecentSampleSnidgetStringBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v49;
  id v53 = self;
  id v54 = v51;
  id v55 = v49;
  id v56 = objc_msgSend(v53, sel_sharedInstanceForHealthStore_, v55);
  unint64_t v57 = v56;
  uint64_t v123 = inited;
  *(void *)(inited + 32) = v56;
  uint64_t v122 = v50;
  if (v51)
  {
    uint64_t v58 = v130;
    id v59 = v54;
  }
  else
  {
    id v66 = v55;
    id v67 = v56;
    id v59 = objc_msgSend(v67, sel_createHKUnitPreferenceController, v122);

    id v55 = v66;
    uint64_t v58 = v130;
  }

  id v68 = (id *)v123;
  *(void *)(v123 + 24) = v59;
  id v69 = objc_msgSend(self, sel_localizedStringForCardioFitnessLevel_, v47);
  if (v69)
  {
    uint64_t v70 = v69;
    sub_241CDB0D0();

    SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    id v71 = objc_msgSend(v145, sel_value);
    if (v71)
    {
      id v72 = v71;
      uint64_t v73 = (void *)sub_241CDB860();

      uint64_t v74 = v144;
      uint64_t v75 = v152;
      sub_241AB6D24(v144, v73, (uint64_t)v68, (uint64_t)v129);
      id v76 = v128;
      if (v75)
      {
        (*(void (**)(char *, uint64_t))(v141 + 8))(v58, v30);

        swift_setDeallocating();
      }
      else
      {
        uint64_t v152 = 0;

        id v78 = objc_msgSend(v145, sel_levelViewDataConfiguration);
        if (v78)
        {
          uint64_t v79 = v78;
          id v80 = objc_msgSend(v74, sel_objectType);
          sub_241CD8100();
          uint64_t v81 = v76;
          uint64_t v82 = v131;
          id v83 = v125;
          uint64_t v84 = v124;
          (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v125, v81, v124);
          uint64_t v85 = v132;
          uint64_t v86 = v133;
          (*(void (**)(char *, void, uint64_t))(v132 + 104))(v83, *MEMORY[0x263F43630], v133);
          LevelView.DataConfiguration.init(codable:)(v79, v140);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v84);
          uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v85 + 32);
          uint64_t v88 = v126;
          v87(v126, v83, v86);
          type metadata accessor for SnidgetLevelChartView.ViewModel();
          uint64_t v89 = swift_allocObject();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 32))(v89 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration, v140, v135);
          uint64_t v142 = (void **)v89;
          v87((char *)(v89 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor), v88, v86);
          uint64_t v140 = 0;
        }
        else
        {
          uint64_t v142 = 0;
          uint64_t v140 = 1;
        }
        uint64_t v90 = v136;
        id v91 = v143;
        sub_241CD89A0();
        sub_241A3A9CC();
        uint64_t v93 = *(int *)(v92 + 48);
        id v94 = v74;
        objc_msgSend(v145, sel_dateData);
        id v95 = (id)HKDecodeDateForValue();
        sub_241CD6CB0();

        v91[v93] = 0;
        uint64_t v96 = *MEMORY[0x263F43F18];
        uint64_t v97 = sub_241CD8610();
        uint64_t v98 = *(void *)(v97 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v98 + 104))(v91, v96, v97);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v91, 0, 1, v97);
        uint64_t v144 = (void *)sub_241CD8990();
        uint64_t v99 = v141;
        uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v141 + 56);
        uint64_t v101 = v30;
        v100(v90, 1, 1, v30);
        uint64_t v102 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
        v102(v127, v130, v30);
        id v103 = v137;
        v102(v137, v129, v30);
        v100(v103, 0, 1, v30);
        uint64_t v150 = 0x5F74656764696E53;
        unint64_t v151 = 0xE800000000000000;
        id v104 = v122[2];
        id v105 = objc_msgSend(v104, sel_description);
        sub_241CDB0D0();

        sub_241CDB180();
        swift_bridgeObjectRelease();
        uint64_t v106 = v138;
        sub_241CD8E50();
        swift_bridgeObjectRelease();
        uint64_t v107 = sub_241CD8E70();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v106, 0, 1, v107);
        sub_241CD8FF0();
        swift_allocObject();
        uint64_t v143 = (char *)sub_241CD8FE0();
        uint64_t v108 = v140;
        uint64_t v109 = v142;
        sub_241A9245C(v140);
        id v110 = v145;
        objc_msgSend(v145, sel_dateData);
        id v111 = (id)HKDecodeDateForValue();
        sub_241CD6CB0();

        uint64_t v112 = (uint64_t)v147;
        sub_241CD79D0();
        uint64_t v113 = sub_241CD7A10();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v112, 0, 1, v113);
        uint64_t v114 = sub_241CD6810();
        uint64_t v115 = (uint64_t)v148;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v148, 1, 1, v114);
        sub_241A921B8(0);
        uint64_t v117 = v146;
        id v118 = (char *)v146 + *(int *)(v116 + 52);
        uint64_t v119 = v149;
        swift_bridgeObjectRetain();
        sub_241B4A1A8(1, v112, v119, v115, v118);

        sub_241A924A4(v108);
        swift_release();
        uint64_t v120 = v143;
        *uint64_t v117 = (uint64_t)v144;
        v117[1] = (uint64_t)v120;
        v117[2] = v108;
        v117[3] = (uint64_t)v109;
        uint64_t v121 = *(void (**)(char *, uint64_t))(v99 + 8);
        v121(v129, v101);
        v121(v130, v101);
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_241A41340();
    swift_allocError();
    *uint64_t v77 = 0;
    swift_willThrow();
  }
}

void sub_241AB6D24(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v49 = a4;
  uint64_t v5 = v4;
  uint64_t v9 = type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_241CDA1A0();
  uint64_t v51 = *(void *)(v12 - 8);
  uint64_t v52 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(a3 + 24);
  id v16 = objc_msgSend(v15, sel_unitForChartingDisplayType_, a1);
  if (!v16) {
    id v16 = objc_msgSend(a2, sel__unit);
  }
  uint64_t v17 = SnidgetStringBuilder.makeSafeDouble(displayType:quantity:preferredUnit:)(a1, a2, v16);
  if (v18)
  {
    sub_241CDA0F0();
    sub_241AB74C4(v5, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
    id v29 = a2;
    id v30 = v16;
    id v31 = v29;
    id v32 = v30;
    uint64_t v33 = sub_241CDA190();
    os_log_type_t v34 = sub_241CDB650();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v50 = v14;
      uint64_t v36 = v35;
      uint64_t v37 = swift_slowAlloc();
      os_log_t v48 = v33;
      uint64_t v38 = (void *)v37;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v54 = v49;
      *(_DWORD *)uint64_t v36 = 136315650;
      uint64_t v39 = sub_241AE02D0(*v11, *((unsigned __int8 *)v11 + *(int *)(v9 + 24) + 8));
      uint64_t v53 = sub_241A33FE4(v39, v40, &v54);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AB7380((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
      *(_WORD *)(v36 + 12) = 2112;
      uint64_t v53 = (uint64_t)v31;
      id v41 = v31;
      sub_241CDBBF0();
      void *v38 = v31;

      *(_WORD *)(v36 + 22) = 2112;
      uint64_t v53 = (uint64_t)v32;
      id v42 = v32;
      sub_241CDBBF0();
      v38[1] = v32;

      os_log_t v43 = v48;
      _os_log_impl(&dword_241A23000, v48, v34, "[%s]: Failed to create vo2 max string for cardio fitness sup text with quantity=%@ and preferredUnit=%@", (uint8_t *)v36, 0x20u);
      sub_241A96044();
      swift_arrayDestroy();
      MEMORY[0x245637F20](v38, -1, -1);
      uint64_t v44 = v49;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v44, -1, -1);
      MEMORY[0x245637F20](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
    }
    else
    {
      sub_241AB7380((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v52);
    }
    sub_241A41340();
    swift_allocError();
    *uint64_t v45 = 0;
    swift_willThrow();
  }
  else
  {
    double v19 = *(double *)&v17;
    id v20 = objc_msgSend(a1, sel_presentation);
    id v21 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v19);
    id v22 = objc_msgSend(v20, sel_adjustedValueForDaemonValue_, v21);

    id v23 = objc_msgSend(a1, sel_hk_valueFormatterForUnit_, v16);
    id v24 = v22;
    uint64_t v25 = (void *)sub_241CD8EF0();
    uint64_t v26 = (void *)sub_241CD8F10();
    id v27 = objc_msgSend(v23, sel_attributedStringFromValue_displayType_unitController_valueFont_unitFont_, v24, a1, v15, v25, v26);

    if (v27)
    {
      id v28 = objc_msgSend(v27, sel_string);
      sub_241CDB0D0();

      SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_241A41340();
      swift_allocError();
      *uint64_t v46 = 0;
      swift_willThrow();
    }
  }
}

uint64_t sub_241AB72D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241AB74C4(v2 + *(int *)(a1 + 24), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241AB7308(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_241AB732C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241AB7380(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_241AB73E0()
{
  if (!qword_268D42890)
  {
    sub_241A313AC(255, &qword_26B030440);
    sub_241A313AC(255, &qword_26B030428);
    unint64_t v0 = type metadata accessor for SnidgetHarnessViewFeedItemGeneratorInputModel();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42890);
    }
  }
}

uint64_t sub_241AB7468(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241AB732C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241AB74C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241AB752C@<X0>(void **a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD79A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = *a1;
  uint64_t v37 = (uint64_t)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AB793C(v13, v37);
  sub_241CDA0F0();
  uint64_t v14 = sub_241CDA190();
  os_log_type_t v15 = sub_241CDB670();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v34 = v6;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v35 = v10;
    uint64_t v19 = v18;
    uint64_t v38 = v18;
    uint64_t v39 = a2;
    *(void *)&long long v36 = a3;
    *(_DWORD *)uint64_t v17 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v20 = sub_241CDB120();
    uint64_t v39 = sub_241A33FE4(v20, v21, &v38);
    a3 = (uint64_t *)v36;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v14, v15, "[%s]: Emitting sharing chart model for Activity", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v19;
    uint64_t v10 = v35;
    MEMORY[0x245637F20](v22, -1, -1);
    MEMORY[0x245637F20](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  id v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241AB8110(0, &qword_26B034F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v24 = sub_241CD7C30();
  uint64_t v25 = *(void *)(v24 - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v27 = swift_allocObject();
  long long v36 = xmmword_241CEB730;
  *(_OWORD *)(v27 + 16) = xmmword_241CEB730;
  id v28 = (uint64_t *)(v27 + v26);
  sub_241AB8110(0, &qword_26B034F38, MEMORY[0x263F45738], v23);
  unint64_t v29 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = v36;
  unint64_t v31 = v30 + v29;
  uint64_t v32 = v37;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16))(v31, v37, v10);
  *id v28 = v30;
  (*(void (**)(uint64_t *, void, uint64_t))(v25 + 104))(v28, *MEMORY[0x263F45880], v24);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v32, v10);
  *a3 = v27;
  return result;
}

void sub_241AB793C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241AB8110(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v34 = (char *)&v33 - v6;
  sub_241AB8110(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v4);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = sub_241CD7AB0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  os_log_type_t v15 = (char *)&v33 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v33 - v16;
  id v18 = a1;
  sub_241CD7A80();
  uint64_t v35 = a2;
  if (a1 && (id v19 = objc_msgSend(v18, sel_data)) != 0)
  {
    uint64_t v20 = v19;
    uint64_t v21 = sub_241CD6AE0();
    unint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v23 = 0xF000000000000000;
  }
  sub_241AB80D0();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v17, v10);
  uint64_t v24 = sub_241A54BF8(v21, v23, 0, 0, 1, (uint64_t)v15);
  sub_241A54FC8(v21, v23);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
  sub_241CD7A80();
  sub_241AB8110(0, (unint64_t *)&qword_26B034F68, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  sub_241CD9350();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_241CEB730;
  uint64_t v25 = self;
  id v26 = objc_msgSend(v25, sel_activitySummaryType);
  sub_241CDB470();

  sub_241A33460();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_241CEB710;
  *(void *)(v27 + 32) = objc_msgSend(v25, sel_activitySummaryType);
  uint64_t v36 = v27;
  sub_241CDB2E0();
  id v28 = objc_msgSend(v24, sel_data);
  if (v28)
  {
    unint64_t v29 = v28;
    sub_241CD6AE0();

    sub_241CD6F40();
    uint64_t v30 = sub_241CD6F50();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v9, 0, 1, v30);
    unint64_t v31 = v34;
    sub_241CD6DC0();
    uint64_t v32 = sub_241CD6DD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
    sub_241CD7920();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_241AB7E3C()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries35ActivityChartSharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries35ActivityChartSharableModelGenerator_generatorContext;
  uint64_t v4 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_241AB7F28()
{
  return type metadata accessor for ActivityChartSharableModelGenerator();
}

uint64_t type metadata accessor for ActivityChartSharableModelGenerator()
{
  uint64_t result = qword_26B033C60;
  if (!qword_26B033C60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241AB7F7C()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD7740();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_241AB8058@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries35ActivityChartSharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_241AB80D0()
{
  unint64_t result = qword_26B0303E0;
  if (!qword_26B0303E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0303E0);
  }
  return result;
}

void sub_241AB8110(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241AB8174(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v21 = a1;
  uint64_t v22 = sub_241CD9ED0();
  uint64_t v6 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD9D00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v21 - v17;
  sub_241A7A618(a1, (uint64_t)&v21 - v17);
  sub_241CD9DC0();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v3 + qword_26B0411F0, v12, v9);
  sub_241A7A618((uint64_t)v18, (uint64_t)v16);
  sub_241CD9EC0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_241A3F384((uint64_t)v18);
  sub_241A7A6EC((uint64_t)v16, v3 + qword_26B041200);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v3 + qword_26B0411F8, v8, v22);
  uint64_t v19 = sub_241CD9DE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a2, v19);
  sub_241A3F384(v21);
  return v3;
}

id sub_241AB842C(void *a1, uint64_t a2)
{
  sub_241A29578(0, &qword_26B032050, MEMORY[0x263F45780]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v81 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v82 = (char *)&v75 - v7;
  unint64_t v8 = (void *)sub_241CDA1A0();
  uint64_t v86 = (void (**)(char *, id))*(v8 - 1);
  id v87 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v75 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v75 - v15;
  uint64_t v17 = sub_241CD9D00();
  uint64_t v79 = *(void *)(v17 - 8);
  uint64_t v80 = v17;
  MEMORY[0x270FA5388](v17);
  id v78 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29578(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v85 = (uint64_t)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v84 = (char *)&v75 - v22;
  sub_241A29578(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v75 - v24;
  uint64_t v26 = sub_241CD6D00();
  uint64_t v76 = *(void *)(v26 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  MEMORY[0x270FA5388](v27);
  unint64_t v29 = (char *)&v75 - v28;
  uint64_t v77 = a2;
  uint64_t v30 = sub_241CD6C60();
  id v31 = objc_msgSend(a1, sel_statisticsForDate_, v30);

  if (!v31)
  {
    sub_241AB90B4();
    swift_allocError();
    unsigned char *v57 = 1;
    swift_willThrow();
    return (id)v30;
  }
  id v32 = objc_msgSend(v31, sel_averageQuantity);
  if (!v32)
  {
    sub_241CDA0F0();
    uint64_t v58 = sub_241CDA190();
    os_log_type_t v59 = sub_241CDB660();
    uint64_t v30 = v59;
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl(&dword_241A23000, v58, (os_log_type_t)v30, "No average quantity computed by statistics collection", v60, 2u);
      MEMORY[0x245637F20](v60, -1, -1);
    }

    v86[1](v11, v87);
    sub_241AB90B4();
    swift_allocError();
    *uint64_t v61 = 3;
    swift_willThrow();

    return (id)v30;
  }
  id v75 = v32;
  id v33 = objc_msgSend(v31, sel_duration);
  if (!v33)
  {
    sub_241CDA0F0();
    uint64_t v62 = sub_241CDA190();
    os_log_type_t v63 = sub_241CDB660();
    uint64_t v30 = v63;
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v64 = 0;
      _os_log_impl(&dword_241A23000, v62, (os_log_type_t)v30, "No duration quantity computed by statistics collection", v64, 2u);
      MEMORY[0x245637F20](v64, -1, -1);
    }

    v86[1](v14, v87);
    sub_241AB90B4();
    swift_allocError();
    *uint64_t v65 = 3;
    swift_willThrow();

    return (id)v30;
  }
  uint64_t v34 = v33;
  id v35 = objc_msgSend(self, sel_secondUnit);
  objc_msgSend(v34, sel_doubleValueForUnit_, v35);
  double v37 = v36;

  if (v37 <= 2.22507386e-308)
  {
    sub_241CDA0F0();
    id v66 = sub_241CDA190();
    os_log_type_t v67 = sub_241CDB650();
    if (os_log_type_enabled(v66, v67))
    {
      id v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v68 = 0;
      _os_log_impl(&dword_241A23000, v66, v67, "Computed statistic with nil duration, which is unsupported", v68, 2u);
      MEMORY[0x245637F20](v68, -1, -1);
    }

    v86[1](v16, v87);
    uint64_t v69 = (uint64_t)v82;
    sub_241CD7A80();
    uint64_t v70 = sub_241CD7AB0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v69, 0, 1, v70);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v71 = sub_241CD9970();
    uint64_t v72 = v85;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v85, 1, 1, v71);
    uint64_t v73 = (void (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v74 = v81;
    sub_241A32F70(v69, v81, &qword_26B032050, MEMORY[0x263F45780]);
    uint64_t v30 = (uint64_t)sub_241A53EB0(0, 0xF000000000000000, 11, v72, v74, 0, 0);
    sub_241A329B4(v69, &qword_26B032050, v73);

    return (id)v30;
  }
  id v87 = v34;
  sub_241A313AC(0, &qword_26B030480);
  uint64_t v38 = *MEMORY[0x263F094F0];
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v29, v77, v26);
  uint64_t v86 = (void (**)(char *, id))v75;
  uint64_t v39 = (char *)HKCodableSummaryAudioExposureValue.init(leqQuantity:secondsListened:daysAggregated:lastUpdatedDate:)(v86, v38, (uint64_t)v29, v37);
  sub_241A313AC(0, &qword_26B034E48);
  id v40 = objc_msgSend(v31, sel_startDate);
  sub_241CD6CB0();

  id v41 = objc_msgSend(v31, sel_endDate);
  sub_241CD6CB0();

  sub_241CD67C0();
  uint64_t v42 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v25, 0, 1, v42);
  id v43 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v25, (uint64_t)objc_msgSend(v31, sel_dataCount), 0);
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v78, &v83[qword_26B0411F0], v80);
  uint64_t v44 = (uint64_t)v84;
  sub_241CD9DD0();
  uint64_t v45 = *MEMORY[0x263F46C40];
  uint64_t v46 = sub_241CD9970();
  uint64_t v47 = *(void *)(v46 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 104))(v44, v45, v46);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  id v48 = v43;
  id v83 = v39;
  id result = objc_msgSend(v39, sel_data);
  if (result)
  {
    uint64_t v50 = result;
    uint64_t v51 = v31;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v52 = sub_241CD6AE0();
    unint64_t v54 = v53;

    id v55 = (void (*)(uint64_t))MEMORY[0x263F46CA8];
    uint64_t v56 = v85;
    sub_241A32F70(v44, v85, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    uint64_t v89 = 0;
    memset(v88, 0, sizeof(v88));
    uint64_t v30 = (uint64_t)sub_241A54648(v52, v54, 2, v56, (uint64_t)v48, 0, (uint64_t)v88);

    sub_241A37374(v52, v54);
    sub_241A329B4(v44, (unint64_t *)&qword_26B0321F0, v55);

    return (id)v30;
  }
  __break(1u);
  return result;
}

uint64_t sub_241AB8F30()
{
  sub_241A3F384(v0 + qword_26B041200);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_26B0411F0;
  uint64_t v4 = sub_241CD9D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioExposureCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B037EB8;
  if (!qword_26B037EB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241AB907C()
{
  return swift_initClassMetadata2();
}

unint64_t sub_241AB90B4()
{
  unint64_t result = qword_268D42898;
  if (!qword_268D42898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42898);
  }
  return result;
}

uint64_t sub_241AB9108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v52 = a2;
  uint64_t v2 = sub_241CD6ED0();
  uint64_t v49 = *(void *)(v2 - 8);
  uint64_t v50 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v47 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_241CD6EE0();
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3579C(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v54 = (uint64_t)&v40 - v6;
  uint64_t v7 = sub_241CD6810();
  uint64_t v51 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v53 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD6D00();
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v40 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v40 - v19;
  uint64_t v21 = sub_241CD9D00();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD9DC0();
  int v25 = sub_241CD9CF0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  if (v25 != 3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v52, v55, v7);
  }
  id v40 = v18;
  id v41 = v12;
  uint64_t v43 = v7;
  sub_241CD67B0();
  sub_241CD6770();
  uint64_t v26 = v45;
  sub_241CD6EA0();
  uint64_t v28 = v49;
  uint64_t v27 = v50;
  unint64_t v29 = v47;
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v47, *MEMORY[0x263F07870], v50);
  sub_241CD67E0();
  uint64_t v30 = v54;
  sub_241CD6E70();
  uint64_t v31 = v44;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v44 + 8);
  v42(v15, v9);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v27);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v48);
  int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v30, 1, v9);
  uint64_t v33 = v51;
  uint64_t v34 = v52;
  if (v32 == 1)
  {
    uint64_t v35 = v43;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v43);
    v42(v20, v9);
    sub_241ABCBBC(v54, &qword_26B0385B8, MEMORY[0x263F07490]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v34, v55, v35);
  }
  else
  {
    double v37 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v40, v54, v9);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v38(v15, v37, v9);
    v38(v41, v20, v9);
    sub_241CD67C0();
    uint64_t v39 = (uint64_t (*)(char *, uint64_t))v42;
    v42(v37, v9);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v53, v43);
    return v39(v20, v9);
  }
}

uint64_t sub_241AB9718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241ABCB4C(v2 + *(int *)(a1 + 28), a2, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
}

uint64_t sub_241AB976C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_241AB97A4(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t *sub_241AB97B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = *v3;
  uint64_t v30 = sub_241CD7650();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_241CD7690();
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  id v26 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v10 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v34 = inited;
  sub_241CDB2E0();
  char v11 = *(unsigned char *)(a2 + *(int *)(v10 + 36));
  sub_241A3579C(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v12 = sub_241CD73B0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  if (v11)
  {
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v16 + v15, *MEMORY[0x263F454D0], v12);
  }
  else
  {
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_241CEB720;
    unint64_t v18 = v16 + v15;
    uint64_t v19 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
    v19(v18, *MEMORY[0x263F45520], v12);
    v19(v18 + v14, *MEMORY[0x263F45538], v12);
  }
  id v17 = v26;
  sub_241C5D74C(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v20 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v20);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, *MEMORY[0x263F45690], v30);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries54AudioExposureCurrentValueSummarySharableModelGenerator_domain, v8, v31);
  sub_241ABD7F0(a2, (uint64_t)v3 + OBJC_IVAR____TtC9Summaries54AudioExposureCurrentValueSummarySharableModelGenerator_request);
  uint64_t v21 = sub_241ABCAA0(&qword_26B02FBD8, (void (*)(uint64_t))type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator);
  uint64_t v22 = v33;
  uint64_t v23 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v33, a2, v32, v21);
  sub_241ABD854(a2);
  uint64_t v24 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v22, v24);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC9Summaries54AudioExposureCurrentValueSummarySharableModelGenerator_publisher) = v23;
  return v3;
}

uint64_t sub_241AB9C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)sub_241CDB5A0();
  id v5 = objc_msgSend(v4, sel_statistics);

  sub_241A313AC(0, (unint64_t *)&qword_26B038E68);
  unint64_t v6 = sub_241CDB2C0();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_241CDB5B0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (v7)
  {
    uint64_t v13 = *(void *)(v8 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a2, a1, v8);
    uint64_t v9 = v13;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 1;
  }
  char v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);

  return v11(a2, v10, 1, v8);
}

uint64_t sub_241AB9DD4(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v196 = a3;
  char v205 = a2;
  uint64_t v202 = a1;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A3579C(0, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v199 = (uint64_t)&v165 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v200 = (char *)&v165 - v7;
  uint64_t v192 = sub_241CDA1A0();
  uint64_t v191 = *(void *)(v192 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v192);
  uint64_t v193 = (char *)&v165 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v182 = (char *)&v165 - v10;
  sub_241A3579C(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v3);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v201 = (uint64_t)&v165 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v188 = (uint64_t)&v165 - v14;
  uint64_t v189 = sub_241CD9D00();
  uint64_t v185 = *(void *)(v189 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v189);
  unint64_t v184 = (char *)&v165 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v183 = (char *)&v165 - v17;
  sub_241A3579C(0, &qword_26B038F10, MEMORY[0x263F062D0], v3);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  char v178 = (char *)&v165 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  id v179 = (char *)&v165 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v180 = (uint64_t)&v165 - v24;
  MEMORY[0x270FA5388](v23);
  id v26 = (char *)&v165 - v25;
  sub_241A3579C(0, &qword_26B0385B8, MEMORY[0x263F07490], v3);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v181 = (char *)&v165 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  id v195 = (char *)&v165 - v30;
  uint64_t v31 = sub_241CD6D00();
  uint64_t v197 = *(void *)(v31 - 8);
  uint64_t v198 = v31;
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v177 = (char *)&v165 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v186 = (char *)&v165 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  id v187 = (char *)&v165 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v194 = (char *)&v165 - v38;
  uint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x263F44B28];
  sub_241A3579C(0, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  MEMORY[0x270FA5388](v40 - 8);
  uint64_t v42 = (char *)&v165 - v41;
  sub_241A3579C(0, &qword_26B034D58, v39, v3);
  MEMORY[0x270FA5388](v43 - 8);
  uint64_t v45 = (char *)&v165 - v44;
  uint64_t v46 = sub_241CDB5B0();
  uint64_t v47 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v206 = (char *)&v165 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_241CD9970();
  uint64_t v50 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v52 = (char *)&v165 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_241CD9DE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v52, v205, v53);
  uint64_t v54 = *MEMORY[0x263F46C40];
  uint64_t v203 = v50;
  uint64_t v204 = v49;
  uint64_t v55 = v49;
  uint64_t v56 = v46;
  uint64_t v57 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v52, v54, v55);
  sub_241ABCB4C(v202, (uint64_t)v42, &qword_26B032CD8, v39, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  uint64_t v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  uint64_t v59 = 1;
  if (v58(v42, 1, v56) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v45, v42, v56);
    uint64_t v59 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v45, v59, 1, v56);
  if (v58(v45, 1, v56) == 1)
  {
    uint64_t v60 = &qword_26B034D58;
    uint64_t v61 = (uint64_t (*)(uint64_t))MEMORY[0x263F44B28];
    uint64_t v62 = (uint64_t)v45;
LABEL_9:
    sub_241ABCBBC(v62, v60, v61);
    uint64_t v71 = v201;
    uint64_t v73 = v203;
    uint64_t v72 = v204;
LABEL_10:
    uint64_t v74 = (uint64_t)v200;
    sub_241CD7A80();
    uint64_t v75 = sub_241CD7AB0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v74, 0, 1, v75);
    sub_241A313AC(0, &qword_26B030440);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v71, 1, 1, v72);
    uint64_t v76 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v77 = v199;
    sub_241ABCB4C(v74, v199, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    id v78 = sub_241A53EB0(0, 0xF000000000000000, 11, v71, v77, 0, 0);
    sub_241ABCBBC(v74, &qword_26B032050, v76);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v73 + 8))(v52, v72);
    return (uint64_t)v78;
  }
  os_log_type_t v63 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  uint64_t v202 = v56;
  v63(v206, v45, v56);
  sub_241ABCB4C(v196, (uint64_t)v26, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v64 = sub_241CD6810();
  uint64_t v65 = *(void *)(v64 - 8);
  id v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
  if (v66(v26, 1, v64) == 1)
  {
    sub_241ABCBBC((uint64_t)v26, &qword_26B038F10, MEMORY[0x263F062D0]);
    os_log_type_t v67 = v195;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v197 + 56))(v195, 1, 1, v198);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v57 + 8))(v206, v202);
    uint64_t v60 = &qword_26B0385B8;
    uint64_t v61 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    uint64_t v62 = (uint64_t)v67;
    goto LABEL_9;
  }
  char v175 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v66;
  os_log_type_t v67 = v195;
  sub_241CD67B0();
  uint64_t v173 = *(void (**)(char *, uint64_t))(v65 + 8);
  v173(v26, v64);
  uint64_t v69 = v197;
  uint64_t v68 = v198;
  uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v197 + 56);
  uint64_t v196 = v197 + 56;
  uint64_t v176 = v70;
  v70(v67, 0, 1, v198);
  long long v172 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  if (v172(v67, 1, v68) == 1) {
    goto LABEL_8;
  }
  uint64_t v169 = v65;
  uint64_t v170 = v64;
  unint64_t v174 = v52;
  uint64_t v171 = v57;
  uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 32);
  uint64_t v81 = v194;
  uint64_t v168 = v69 + 32;
  uint64_t v167 = v80;
  v80(v194, (uint64_t)v67, v68);
  uint64_t v82 = v206;
  uint64_t v83 = v69;
  uint64_t v84 = v68;
  uint64_t v85 = (void *)sub_241CDB5A0();
  uint64_t v86 = (void *)sub_241CD6C60();
  id v87 = (char *)objc_msgSend(v85, sel_statisticsForDate_, v86);

  if (!v87)
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v81, v84);
    (*(void (**)(char *, uint64_t))(v171 + 8))(v82, v202);
    uint64_t v71 = v201;
    uint64_t v73 = v203;
    uint64_t v72 = v204;
    uint64_t v52 = v174;
    goto LABEL_10;
  }
  uint64_t v88 = v87;
  uint64_t v89 = (char *)objc_msgSend(v87, sel_averageQuantity);
  uint64_t v90 = v193;
  id v195 = v87;
  if (!v89) {
    goto LABEL_20;
  }
  id v91 = v89;
  id v92 = objc_msgSend(v87, sel_duration);
  if (!v92)
  {

LABEL_20:
    sub_241CDA0F0();
    id v103 = sub_241CDA190();
    os_log_type_t v104 = sub_241CDB650();
    if (os_log_type_enabled(v103, v104))
    {
      id v105 = (uint8_t *)swift_slowAlloc();
      uint64_t v106 = swift_slowAlloc();
      uint64_t v209 = v106;
      *(_DWORD *)id v105 = 136315138;
      *(void *)&v207[0] = v190;
      swift_getMetatypeMetadata();
      uint64_t v107 = sub_241CDB120();
      *(void *)&v207[0] = sub_241A33FE4(v107, v108, &v209);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v103, v104, "[%s]: cannot classify audio exposure without both LEQ and duration", v105, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v106, -1, -1);
      MEMORY[0x245637F20](v105, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v191 + 8))(v90, v192);
    uint64_t v110 = (uint64_t)v200;
    uint64_t v109 = v201;
    uint64_t v73 = v203;
    uint64_t v72 = v204;
    uint64_t v111 = v171;
    uint64_t v112 = v194;
    sub_241CD7A80();
    uint64_t v113 = sub_241CD7AB0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v110, 0, 1, v113);
    sub_241A313AC(0, &qword_26B030440);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v109, 1, 1, v72);
    uint64_t v114 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v115 = v199;
    sub_241ABCB4C(v110, v199, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    id v78 = sub_241A53EB0(0, 0xF000000000000000, 11, v109, v115, 0, 0);
    sub_241ABCBBC(v110, &qword_26B032050, v114);
    goto LABEL_26;
  }
  uint64_t v93 = v92;
  uint64_t v193 = v91;
  id v94 = objc_msgSend(self, sel_secondUnit);
  objc_msgSend(v93, sel_doubleValueForUnit_, v94);
  double v96 = v95;

  id v166 = v93;
  if (v96 <= 2.22507386e-308)
  {
    uint64_t v116 = v182;
    sub_241CDA0F0();
    uint64_t v117 = sub_241CDA190();
    os_log_type_t v118 = sub_241CDB650();
    if (os_log_type_enabled(v117, v118))
    {
      uint64_t v119 = (uint8_t *)swift_slowAlloc();
      uint64_t v120 = swift_slowAlloc();
      *(void *)&v207[0] = v120;
      *(_DWORD *)uint64_t v119 = 136315138;
      uint64_t v121 = sub_241ABB668();
      uint64_t v209 = sub_241A33FE4(v121, v122, (uint64_t *)v207);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v117, v118, "[%s]: Found sample with nil-duration, which is unsupported", v119, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v120, -1, -1);
      MEMORY[0x245637F20](v119, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v191 + 8))(v116, v192);
    uint64_t v124 = (uint64_t)v200;
    uint64_t v123 = v201;
    uint64_t v73 = v203;
    uint64_t v72 = v204;
    uint64_t v111 = v171;
    uint64_t v112 = v194;
    sub_241CD7A80();
    uint64_t v125 = sub_241CD7AB0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v124, 0, 1, v125);
    sub_241A313AC(0, &qword_26B030440);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v123, 1, 1, v72);
    uint64_t v126 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v127 = v199;
    sub_241ABCB4C(v124, v199, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    id v78 = sub_241A53EB0(0, 0xF000000000000000, 11, v123, v127, 0, 0);
    sub_241ABCBBC(v124, &qword_26B032050, v126);

LABEL_26:
    (*(void (**)(char *, uint64_t))(v197 + 8))(v112, v198);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v206, v202);
LABEL_27:
    uint64_t v52 = v174;
    goto LABEL_11;
  }
  id v97 = objc_msgSend(v87, sel_mostRecentQuantityDateInterval);
  if (v97)
  {
    uint64_t v98 = v97;
    uint64_t v99 = (uint64_t)v179;
    sub_241CD67A0();

    uint64_t v100 = *(char **)(v169 + 56);
    uint64_t v101 = (char *)v99;
    uint64_t v102 = 0;
  }
  else
  {
    uint64_t v100 = *(char **)(v169 + 56);
    uint64_t v99 = (uint64_t)v179;
    uint64_t v101 = v179;
    uint64_t v102 = 1;
  }
  uint64_t v128 = v170;
  uint64_t v200 = v100;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v100)(v101, v102, 1, v170);
  uint64_t v129 = v198;
  uint64_t v130 = v180;
  sub_241A3AAA0(v99, v180);
  if (v175(v130, 1, v128) == 1)
  {
    sub_241ABCBBC(v130, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v131 = (uint64_t)v181;
    v176(v181, 1, 1, v129);
    uint64_t v132 = v187;
LABEL_32:
    id v134 = objc_msgSend(v88, sel_endDate);
    sub_241CD6CB0();

    sub_241ABCBBC(v131, &qword_26B0385B8, MEMORY[0x263F07490]);
    goto LABEL_34;
  }
  uint64_t v131 = (uint64_t)v181;
  sub_241CD67B0();
  uint64_t v88 = v195;
  v173((char *)v130, v128);
  v176((char *)v131, 0, 1, v129);
  unsigned int v133 = v172((char *)v131, 1, v129);
  uint64_t v132 = v187;
  if (v133 == 1) {
    goto LABEL_32;
  }
  v167(v187, v131, v129);
LABEL_34:
  uint64_t v135 = v193;
  uint64_t v136 = v183;
  sub_241CD9DC0();
  unsigned __int8 v137 = sub_241CD9CF0();
  uint64_t v138 = *(void (**)(char *, uint64_t))(v185 + 8);
  v138(v136, v189);
  int v139 = v137;
  uint64_t v140 = 1;
  if (v139 != 2)
  {
    if (v139 != 3) {
      goto LABEL_45;
    }
    uint64_t v140 = *MEMORY[0x263F094F0];
  }
  sub_241A313AC(0, &qword_26B030480);
  uint64_t v141 = *(void (**)(char *, char *, uint64_t))(v197 + 16);
  uint64_t v142 = (uint64_t)v186;
  v141(v186, v132, v198);
  char v205 = v135;
  id v143 = HKCodableSummaryAudioExposureValue.init(leqQuantity:secondsListened:daysAggregated:lastUpdatedDate:)(v135, v140, v142, v96);
  uint64_t v145 = v203;
  uint64_t v144 = v204;
  uint64_t v146 = v188;
  (*(void (**)(uint64_t, char *, uint64_t))(v203 + 16))(v188, v174, v204);
  uint64_t v147 = 1;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v145 + 56))(v146, 0, 1, v144);
  uint64_t v148 = v184;
  sub_241CD9DC0();
  char v149 = sub_241CD9CF0();
  v138(v148, v189);
  if (v149 != 2)
  {
    if (v149 != 3) {
      goto LABEL_45;
    }
    uint64_t v147 = *MEMORY[0x263F094F0];
  }
  uint64_t v150 = v143;
  sub_241A313AC(0, &qword_26B034E48);
  if (__OFSUB__(0, v147))
  {
    __break(1u);
  }
  else
  {
    unint64_t v151 = v187;
    sub_241CD6C10();
    uint64_t v152 = v198;
    v141(v186, v151, v198);
    uint64_t v153 = (uint64_t)v178;
    sub_241CD67C0();
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v200)(v153, 0, 1, v170);
    id v154 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)(v153, (uint64_t)objc_msgSend(v195, sel_dataCount), 0);
    uint64_t v155 = v150;
    id v156 = objc_msgSend(v150, sel_data);
    if (v156)
    {
      uint64_t v157 = v156;
      sub_241A313AC(0, &qword_26B030440);
      uint64_t v158 = sub_241CD6AE0();
      unint64_t v160 = v159;

      uint64_t v161 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
      uint64_t v162 = v188;
      uint64_t v163 = v201;
      sub_241ABCB4C(v188, v201, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
      uint64_t v208 = 0;
      memset(v207, 0, sizeof(v207));
      id v78 = sub_241A54648(v158, v160, 2, v163, (uint64_t)v154, 0, (uint64_t)v207);

      sub_241A37374(v158, v160);
      sub_241ABCBBC(v162, (unint64_t *)&qword_26B0321F0, v161);

      uint64_t v164 = *(void (**)(char *, uint64_t))(v197 + 8);
      v164(v151, v152);
      v164(v194, v152);
      (*(void (**)(char *, uint64_t))(v171 + 8))(v206, v202);
      uint64_t v73 = v203;
      uint64_t v72 = v204;
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_45:
  uint64_t result = sub_241CDBF10();
  __break(1u);
  return result;
}

uint64_t sub_241ABB668()
{
  return sub_241CDB120();
}

uint64_t sub_241ABB698()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries54AudioExposureCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_241ABD854(v0 + OBJC_IVAR____TtC9Summaries54AudioExposureCurrentValueSummarySharableModelGenerator_request);

  return swift_deallocClassInstance();
}

uint64_t sub_241ABB758()
{
  return type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B02E7C0);
}

uint64_t sub_241ABB780()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B02FB30);
}

void *sub_241ABB878(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD9DE0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_241CD6810();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_241A3579C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (void *)((char *)a1 + v19);
    uint64_t v22 = (void *)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241ABBABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD9DE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_241CD6810();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_241ABBC00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_241A3579C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241ABBDF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_241A3579C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  void *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_241ABC068(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_241A3579C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  return a1;
}

uint64_t sub_241ABC250(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9DE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_241A3579C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_241ABC4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241ABC4C4);
}

uint64_t sub_241ABC4C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9DE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD77C0();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_241A3579C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[8] + 8);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_241ABC658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241ABC66C);
}

void sub_241ABC66C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_241CD9DE0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_241CD77C0();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      sub_241A3579C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[8] + 8) = (a2 - 1);
        return;
      }
      uint64_t v10 = v16;
      uint64_t v14 = *(void *)(v16 - 8);
      uint64_t v15 = a4[7];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

void sub_241ABC7FC()
{
  sub_241CD9DE0();
  if (v0 <= 0x3F)
  {
    sub_241CD77C0();
    if (v1 <= 0x3F)
    {
      sub_241A3579C(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

_UNKNOWN **sub_241ABC944()
{
  return &off_26F5C1B98;
}

uint64_t sub_241ABC950(uint64_t a1)
{
  uint64_t result = sub_241ABCAA0(&qword_26B02FBD0, (void (*)(uint64_t))type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241ABC9A8()
{
  return &off_26F5C1BE0;
}

uint64_t sub_241ABC9B4()
{
  return swift_retain();
}

uint64_t sub_241ABC9C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries54AudioExposureCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_241ABCA48(uint64_t a1)
{
  uint64_t result = sub_241ABCAA0(&qword_26B02FBE0, (void (*)(uint64_t))type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241ABCAA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_241ABCAE8()
{
  return &off_26F5C1BF8;
}

uint64_t sub_241ABCAF4(uint64_t a1)
{
  uint64_t result = sub_241ABCAA0(&qword_26B034508, (void (*)(uint64_t))type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241ABCB4C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_241A3579C(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_241ABCBBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A3579C(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241ABCC2C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  v50[1] = a2;
  uint64_t v58 = a1;
  uint64_t v3 = sub_241CD7650();
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  MEMORY[0x270FA5388](v3);
  os_log_type_t v67 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7690();
  uint64_t v71 = *(void *)(v5 - 8);
  uint64_t v72 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v70 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A3579C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v52 = (char *)v50 - v9;
  uint64_t v56 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241A3579C(0, &qword_26B0385B8, MEMORY[0x263F07490], v7);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v50 - v11;
  uint64_t v54 = sub_241CD9D00();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_241CDB5C0();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v16 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241ABD6A4();
  uint64_t v65 = *(void *)(v17 - 8);
  uint64_t v66 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v64 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_241CD6D00();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD67E0();
  sub_241CD76B0();
  sub_241A311E0(v74, v74[3]);
  uint64_t v23 = (void *)sub_241CD75B0();
  uint64_t v51 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v24 = v55;
  v50[0] = v55 + *(int *)(v51 + 20);
  uint64_t v25 = (void *)sub_241CD7770();
  sub_241CD9DC0();
  id v26 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  uint64_t v61 = v22;
  v26(v12, v22, v19);
  uint64_t v62 = v20;
  uint64_t v27 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
  uint64_t v63 = v19;
  v27(v12, 0, 1, v19);
  uint64_t v28 = sub_241CD6810();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = (uint64_t)v52;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v52, v58, v28);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
  uint64_t v58 = v16;
  sub_241CDB5F0();

  sub_241ABCBBC(v30, &qword_26B038F10, v57);
  sub_241ABCBBC((uint64_t)v12, &qword_26B0385B8, v56);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v54);
  sub_241A31190((uint64_t)v74);
  sub_241CD7730();
  uint64_t v31 = (void *)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v73 = inited;
  sub_241CDB2E0();
  LOBYTE(v29) = *(unsigned char *)(v24 + *(int *)(v51 + 36));
  sub_241A3579C(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v33 = sub_241CD73B0();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(void *)(v34 + 72);
  unint64_t v36 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v37 = swift_allocObject();
  if (v29)
  {
    *(_OWORD *)(v37 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v34 + 104))(v37 + v36, *MEMORY[0x263F454D0], v33);
  }
  else
  {
    *(_OWORD *)(v37 + 16) = xmmword_241CEB720;
    unint64_t v39 = v37 + v36;
    uint64_t v40 = *(void (**)(unint64_t, void, uint64_t))(v34 + 104);
    v40(v39, *MEMORY[0x263F45520], v33);
    v40(v39 + v35, *MEMORY[0x263F45538], v33);
  }
  id v38 = v31;
  sub_241C5D74C(v37);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v41 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v41);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v67, *MEMORY[0x263F45690], v69);
  uint64_t v42 = v70;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241ABCAA0(&qword_26B034D68, MEMORY[0x263F44B38]);
  uint64_t v43 = v60;
  uint64_t v44 = v58;
  uint64_t v45 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v42, v72);
  sub_241A31190((uint64_t)v74);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v43);
  v74[0] = v45;
  sub_241ABD780();
  sub_241A3579C(0, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_241ABCAA0(&qword_26B032768, (void (*)(uint64_t))sub_241ABD780);
  uint64_t v46 = v64;
  sub_241CDA710();
  swift_release();
  sub_241ABCAA0(&qword_26B0323D0, (void (*)(uint64_t))sub_241ABD6A4);
  uint64_t v47 = v66;
  uint64_t v48 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v47);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v63);
  return v48;
}

void sub_241ABD6A4()
{
  if (!qword_26B0323D8)
  {
    sub_241ABD780();
    sub_241A3579C(255, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241ABCAA0(&qword_26B032768, (void (*)(uint64_t))sub_241ABD780);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0323D8);
    }
  }
}

void sub_241ABD780()
{
  if (!qword_26B032770)
  {
    sub_241CDB5B0();
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032770);
    }
  }
}

uint64_t sub_241ABD7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241ABD854(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_241ABD8B0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  id v32 = a1;
  uint64_t v33 = a2;
  uint64_t v8 = sub_241CD6DE0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((unint64_t)objc_msgSend(v5, sel_code))
  {
    case 0x3FuLL:
      uint64_t v21 = type metadata accessor for SleepSnidgetFeedItemModelProvider();
      a4[3] = v21;
      uint64_t v22 = &qword_26B037E50;
      uint64_t v23 = (void (*)(uint64_t))type metadata accessor for SleepSnidgetFeedItemModelProvider;
      goto LABEL_26;
    case 0x46uLL:
    case 0x4FuLL:
    case 0x63uLL:
    case 0xBDuLL:
      uint64_t v12 = type metadata accessor for TimePeriodSnidgetFeedItemModelProvider();
      a4[3] = v12;
      uint64_t v13 = &qword_26B037E70;
      uint64_t v14 = type metadata accessor for TimePeriodSnidgetFeedItemModelProvider;
      goto LABEL_3;
    case 0x50uLL:
      uint64_t v12 = type metadata accessor for BloodPressureSnidgetFeedItemModelProvider();
      a4[3] = v12;
      uint64_t v13 = &qword_26B037E98;
      uint64_t v14 = type metadata accessor for BloodPressureSnidgetFeedItemModelProvider;
      goto LABEL_3;
    case 0x5BuLL:
    case 0x5CuLL:
    case 0x5FuLL:
    case 0x60uLL:
    case 0x61uLL:
    case 0x9DuLL:
    case 0x9EuLL:
    case 0x9FuLL:
    case 0xA0uLL:
    case 0xA1uLL:
    case 0xA2uLL:
    case 0xA3uLL:
    case 0xA4uLL:
    case 0xA5uLL:
    case 0xA6uLL:
    case 0xA7uLL:
    case 0xA8uLL:
    case 0xA9uLL:
    case 0xAAuLL:
    case 0xABuLL:
    case 0xC9uLL:
    case 0xCAuLL:
    case 0xCBuLL:
    case 0xCCuLL:
    case 0xCDuLL:
    case 0xCEuLL:
    case 0xCFuLL:
    case 0xDCuLL:
    case 0xDDuLL:
    case 0xDEuLL:
    case 0xDFuLL:
    case 0xE0uLL:
    case 0xE1uLL:
    case 0xE2uLL:
    case 0xE5uLL:
    case 0xE6uLL:
    case 0xE7uLL:
    case 0xE8uLL:
    case 0xE9uLL:
    case 0xEAuLL:
    case 0xEBuLL:
    case 0xF0uLL:
    case 0xF1uLL:
    case 0xF2uLL:
    case 0xF3uLL:
    case 0xF4uLL:
    case 0x106uLL:
    case 0x107uLL:
    case 0x108uLL:
    case 0x109uLL:
    case 0x139uLL:
    case 0x13AuLL:
      uint64_t v12 = type metadata accessor for CategoryValueSnidgetFeedItemModelProvider();
      a4[3] = v12;
      uint64_t v13 = &qword_26B037EA0;
      uint64_t v14 = type metadata accessor for CategoryValueSnidgetFeedItemModelProvider;
      goto LABEL_3;
    case 0x64uLL:
      uint64_t v21 = type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider(0);
      a4[3] = v21;
      uint64_t v22 = (unint64_t *)&unk_26B0365E8;
      uint64_t v23 = (void (*)(uint64_t))type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider;
      goto LABEL_26;
    case 0x7CuLL:
      uint64_t v12 = type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider();
      a4[3] = v12;
      uint64_t v13 = &qword_26B036528;
      uint64_t v14 = type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider;
      goto LABEL_3;
    case 0x90uLL:
      uint64_t v21 = type metadata accessor for ECGSnidgetFeedItemModelProvider();
      a4[3] = v21;
      uint64_t v22 = &qword_26B037E48;
      uint64_t v23 = (void (*)(uint64_t))type metadata accessor for ECGSnidgetFeedItemModelProvider;
      goto LABEL_26;
    case 0x91uLL:
      uint64_t v21 = type metadata accessor for AudiogramSnidgetFeedItemModelProvider();
      a4[3] = v21;
      uint64_t v22 = &qword_26B037E60;
      uint64_t v23 = (void (*)(uint64_t))type metadata accessor for AudiogramSnidgetFeedItemModelProvider;
      goto LABEL_26;
    case 0xACuLL:
    case 0xADuLL:
      uint64_t v12 = type metadata accessor for AudioExposureSnidgetFeedItemModelProvider();
      a4[3] = v12;
      uint64_t v13 = &qword_26B037E90;
      uint64_t v14 = type metadata accessor for AudioExposureSnidgetFeedItemModelProvider;
      goto LABEL_3;
    case 0xBFuLL:
    case 0xC0uLL:
    case 0xC1uLL:
      uint64_t v21 = type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider();
      a4[3] = v21;
      uint64_t v22 = (unint64_t *)&unk_26B037ED0;
      uint64_t v23 = (void (*)(uint64_t))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider;
      goto LABEL_26;
    case 0xF8uLL:
      uint64_t v24 = type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider();
      a4[3] = v24;
      a4[4] = sub_241ABE4B0(&qword_26B037E68, (void (*)(uint64_t))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
      uint64_t v25 = sub_241A25BC8(a4);
      sub_241ABE44C(a3, (uint64_t)v25 + *(int *)(v24 + 20));
      id v26 = objc_allocWithZone(MEMORY[0x263F0A130]);
      id v27 = v32;
      id result = objc_msgSend(v26, sel_init);
      *uint64_t v25 = (uint64_t)v27;
      *(uint64_t *)((char *)v25 + *(int *)(v24 + 24)) = (uint64_t)result;
      return result;
    case 0xF9uLL:
      uint64_t v21 = type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider();
      a4[3] = v21;
      uint64_t v22 = &qword_26B037F30;
      uint64_t v23 = (void (*)(uint64_t))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider;
      goto LABEL_26;
    case 0x101uLL:
      uint64_t v21 = type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider();
      a4[3] = v21;
      uint64_t v22 = &qword_26B037F38;
      uint64_t v23 = (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider;
      goto LABEL_26;
    case 0x10DuLL:
      uint64_t v12 = type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider();
      a4[3] = v12;
      uint64_t v13 = &qword_26B037F00;
      uint64_t v14 = type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider;
      goto LABEL_3;
    case 0x113uLL:
      uint64_t v21 = type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider();
      a4[3] = v21;
      uint64_t v22 = &qword_26B037F50;
      uint64_t v23 = (void (*)(uint64_t))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider;
      goto LABEL_26;
    case 0x115uLL:
      uint64_t v12 = type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider();
      a4[3] = v12;
      uint64_t v13 = &qword_26B037EF8;
      uint64_t v14 = type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider;
      goto LABEL_3;
    case 0x11CuLL:
      uint64_t v21 = type metadata accessor for StateOfMindSnidgetFeedItemModelProvider();
      a4[3] = v21;
      uint64_t v22 = &qword_26B037E88;
      uint64_t v23 = (void (*)(uint64_t))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider;
      goto LABEL_26;
    case 0x11FuLL:
      uint64_t v21 = type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider();
      a4[3] = v21;
      uint64_t v22 = &qword_26B037EC8;
      uint64_t v23 = (void (*)(uint64_t))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider;
      goto LABEL_26;
    case 0x120uLL:
      uint64_t v21 = type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider();
      a4[3] = v21;
      uint64_t v22 = &qword_26B037ED8;
      uint64_t v23 = (void (*)(uint64_t))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider;
LABEL_26:
      a4[4] = sub_241ABE4B0(v22, v23);
      uint64_t v28 = sub_241A25BC8(a4);
      sub_241ABE44C(a3, (uint64_t)v28 + *(int *)(v21 + 20));
      id v19 = v32;
      *uint64_t v28 = (uint64_t)v32;
      goto LABEL_4;
    case 0x131uLL:
      uint64_t v29 = type metadata accessor for BalanceSnidgetFeedItemModelProvider();
      a4[3] = v29;
      a4[4] = sub_241ABE4B0(&qword_26B036378, (void (*)(uint64_t))type metadata accessor for BalanceSnidgetFeedItemModelProvider);
      uint64_t v30 = sub_241A25BC8(a4);
      sub_241ABE44C(a3, (uint64_t)v30 + *(int *)(v29 + 20));
      *uint64_t v30 = (uint64_t)v32;
      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F07740], v8);
      id v31 = v32;
      sub_241CD6DF0();
      return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    default:
      uint64_t v12 = type metadata accessor for QuantityValueSnidgetFeedItemModelProvider();
      a4[3] = v12;
      uint64_t v13 = &qword_26B036530;
      uint64_t v14 = type metadata accessor for QuantityValueSnidgetFeedItemModelProvider;
LABEL_3:
      a4[4] = sub_241ABE4B0(v13, (void (*)(uint64_t))v14);
      uint64_t v15 = sub_241A25BC8(a4);
      sub_241ABE44C(a3, (uint64_t)v15 + *(int *)(v12 + 24));
      id v16 = v32;
      uint64_t v17 = (uint64_t)v33;
      *uint64_t v15 = (uint64_t)v32;
      v15[1] = v17;
      id v18 = v16;
      id v19 = v33;
LABEL_4:
      return v19;
  }
}

uint64_t sub_241ABE44C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241ABE4B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDataTypeDetailConfigurationProvider()
{
  return &type metadata for ActivityDataTypeDetailConfigurationProvider;
}

uint64_t sub_241ABE508(void *a1)
{
  uint64_t v2 = sub_241CD8B70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD8BD0();
  sub_241CD8C00();
  uint64_t v14 = &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent;
  unint64_t v15 = sub_241ABE778();
  id v11 = 0;
  LOBYTE(v12) = 1;
  sub_241CD8C60();
  sub_241CD90D0();
  swift_bridgeObjectRelease();
  sub_241ABE7CC((uint64_t)&v11);
  sub_241CD8BE0();
  id v6 = objc_msgSend(self, sel_activitySummaryType);
  uint64_t v14 = &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent;
  unint64_t v15 = sub_241ABE8D8();
  id v11 = v6;
  uint64_t v12 = 0;
  char v13 = 1;
  sub_241CD90D0();
  swift_bridgeObjectRelease();
  sub_241ABE7CC((uint64_t)&v11);
  id v7 = a1;
  sub_241CD8B60();
  sub_241CD8BF0();
  uint64_t v14 = (ValueMetadata *)v2;
  unint64_t v15 = MEMORY[0x263F44358];
  uint64_t v8 = sub_241A25BC8((uint64_t *)&v11);
  (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  sub_241CD90D0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_241ABE7CC((uint64_t)&v11);
}

uint64_t sub_241ABE750(void *a1)
{
  return sub_241ABE508(a1);
}

unint64_t sub_241ABE778()
{
  unint64_t result = qword_26B030B10;
  if (!qword_26B030B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030B10);
  }
  return result;
}

uint64_t sub_241ABE7CC(uint64_t a1)
{
  sub_241ABE828();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241ABE828()
{
  if (!qword_26B030988)
  {
    sub_241ABE880();
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B030988);
    }
  }
}

unint64_t sub_241ABE880()
{
  unint64_t result = qword_26B030980;
  if (!qword_26B030980)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B030980);
  }
  return result;
}

unint64_t sub_241ABE8D8()
{
  unint64_t result = qword_26B030B18;
  if (!qword_26B030B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030B18);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  return a1;
}

void destroy for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent(id *a1)
{
}

uint64_t assignWithCopy for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  return a1;
}

uint64_t assignWithTake for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent()
{
  return &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent;
}

uint64_t getEnumTagSinglePayload for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent()
{
  return &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent;
}

uint64_t sub_241ABEB00(uint64_t a1)
{
  uint64_t v3 = sub_241CD8C50();
  MEMORY[0x270FA5388](v3);
  id v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)v1;
  char v7 = *(unsigned char *)(v1 + 8);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v5, a1);
  type metadata accessor for ActivityDataTypeDetailChartDataSource();
  swift_allocObject();
  return sub_241AF91F8((uint64_t)v5, v6, v7);
}

void sub_241ABEBFC(uint64_t a1)
{
  uint64_t v3 = sub_241CD8C50();
  MEMORY[0x270FA5388](v3);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + 8);
  int v7 = *(unsigned __int8 *)(v1 + 16);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v5, a1);
  type metadata accessor for ActivityDataTypeDetailDescriptionDataSource();
  swift_allocObject();
  sub_241B55A9C((uint64_t)v5, v6, v7);
}

uint64_t sub_241ABECF8(char a1)
{
  uint64_t v2 = sub_241CD6EE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD6EA0();
  uint64_t v6 = sub_241ABEF60(a1, (uint64_t)v5);
  char v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v9 = 0;
  if ((v8 & 1) == 0)
  {
    if (a1 == 4 || a1 == 5)
    {
      if (qword_26B038428 != -1) {
        swift_once();
      }
      sub_241CD69E0();
      sub_241AC3F00(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
      uint64_t v10 = swift_allocObject();
      uint64_t v11 = MEMORY[0x263F8D6C8];
      *(_OWORD *)(v10 + 16) = xmmword_241CEB730;
      uint64_t v12 = MEMORY[0x263F8D750];
      *(void *)(v10 + 56) = v11;
      *(void *)(v10 + 64) = v12;
      *(void *)(v10 + 32) = v6;
      uint64_t v9 = sub_241CDB0A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v9;
}

uint64_t sub_241ABEF60(char a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_241CD6D00();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  unint64_t v39 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v35 - v7;
  uint64_t v9 = sub_241CD68F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v42 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD6ED0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v40 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v35 - v16;
  if (a1 == 4)
  {
    uint64_t v37 = v4;
    uint64_t v38 = v3;
    uint64_t v35 = v10;
    uint64_t v36 = v9;
    id v18 = (unsigned int *)MEMORY[0x263F07870];
  }
  else
  {
    if (a1 != 5) {
      return 0;
    }
    uint64_t v37 = v4;
    uint64_t v38 = v3;
    uint64_t v35 = v10;
    uint64_t v36 = v9;
    id v18 = (unsigned int *)MEMORY[0x263F07830];
  }
  (*(void (**)(char *, void, uint64_t))(v13 + 104))((char *)&v35 - v16, *v18, v12);
  sub_241AC3F00(0, &qword_26B034F18, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
  unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_241CEB730;
  uint64_t v21 = *(void (**)(unint64_t, char *, uint64_t))(v13 + 16);
  v21(v20 + v19, v17, v12);
  sub_241C69E8C(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_241CD67E0();
  uint64_t v22 = v39;
  sub_241CD67B0();
  uint64_t v23 = v42;
  sub_241CD6E20();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v25 = v22;
  uint64_t v26 = v38;
  v24(v25, v38);
  v24(v8, v26);
  id v27 = v40;
  v21((unint64_t)v40, v17, v12);
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v27, v12);
  if (v28 != *MEMORY[0x263F078A8])
  {
    uint64_t v31 = v35;
    uint64_t v30 = v36;
    if (v28 == *MEMORY[0x263F07870])
    {
      uint64_t v32 = sub_241CD68A0();
LABEL_11:
      uint64_t v29 = v32;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v30);
      goto LABEL_12;
    }
    if (v28 == *MEMORY[0x263F07830])
    {
      uint64_t v32 = sub_241CD6880();
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v36);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v13 + 8);
    v33(v17, v12);
    v33(v27, v12);
    return 0;
  }
  uint64_t v29 = sub_241CD68C0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v36);
LABEL_12:
  (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  return v29;
}

id sub_241ABF428()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    id v2 = *(id *)(v0 + 24);
LABEL_5:
    id v5 = v1;
    return v2;
  }
  id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *(void *)(v0 + 16));
  if (result)
  {
    uint64_t v4 = *(void **)(v0 + 24);
    *(void *)(v0 + 24) = result;
    id v2 = result;

    uint64_t v1 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_241ABF4A8(void *a1)
{
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_identifier);
  uint64_t v8 = sub_241CDB0D0();
  uint64_t v10 = v9;

  if (sub_241CDB0D0() == v8 && v11 == v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v75 = v4;
  char v13 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD000000000000027;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_ACTIVE_ENERGY";
LABEL_16:
    unint64_t v21 = (unint64_t)(v20 - 32) | 0x8000000000000000;
    uint64_t v22 = MEMORY[0x263F8EE78];
    return sub_241AE4D7C(v19, v21, v18, 0, 0xE000000000000000, v22);
  }
  if (sub_241CDB0D0() == v8 && v14 == v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  char v16 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v16)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD000000000000020;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_WEIGHT";
    goto LABEL_16;
  }
  if (sub_241CDB0D0() == v8 && v17 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD000000000000029;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_FLIGHTS_CLIMBED";
    goto LABEL_16;
  }
  char v24 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v24) {
    goto LABEL_22;
  }
  if (sub_241CDB0D0() == v8 && v25 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    id v27 = "TRENDS_NOTIFICATION_TITLE_BODY_TEMPERATURE";
LABEL_28:
    unint64_t v21 = (unint64_t)(v27 - 32) | 0x8000000000000000;
    uint64_t v22 = MEMORY[0x263F8EE78];
    uint64_t v19 = 0xD00000000000002ALL;
    return sub_241AE4D7C(v19, v21, v18, 0, 0xE000000000000000, v22);
  }
  char v26 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_27;
  }
  if (sub_241CDB0D0() == v8 && v28 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_33:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    id v27 = "TRENDS_NOTIFICATION_TITLE_EXERCISE_MINUTES";
    goto LABEL_28;
  }
  char v29 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v29) {
    goto LABEL_33;
  }
  if (sub_241CDB0D0() == v8 && v30 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD000000000000027;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_STAND_MINUTES";
    goto LABEL_16;
  }
  char v31 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_38;
  }
  if (sub_241CDB0D0() == v8 && v32 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_43:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD000000000000027;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_BLOOD_GLUCOSE";
    goto LABEL_16;
  }
  char v33 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v33) {
    goto LABEL_43;
  }
  if (sub_241CDB0D0() == v8 && v34 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_48:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD000000000000032;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_WALKING_RUNNING_DISTANCE";
    goto LABEL_16;
  }
  char v35 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_48;
  }
  if (sub_241CDB0D0() == v8 && v36 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_53:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    id v27 = "TRENDS_NOTIFICATION_TITLE_INSULIN_DELIVERY";
    goto LABEL_28;
  }
  char v37 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v37) {
    goto LABEL_53;
  }
  if (sub_241CDB0D0() == v8 && v38 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_58:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD000000000000029;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_MINDFUL_MINUTES";
    goto LABEL_16;
  }
  char v39 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v39) {
    goto LABEL_58;
  }
  if (sub_241CDB0D0() == v8 && v40 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_63:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD00000000000002BLL;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_OXYGEN_SATURATION";
    goto LABEL_16;
  }
  char v41 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v41) {
    goto LABEL_63;
  }
  if (sub_241CDB0D0() == v8 && v42 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_68:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    id v27 = "TRENDS_NOTIFICATION_TITLE_RESPIRATORY_RATE";
    goto LABEL_28;
  }
  char v43 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v43) {
    goto LABEL_68;
  }
  if (sub_241CDB0D0() == v8 && v44 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_73:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD00000000000002CLL;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_RESTING_HEART_RATE";
    goto LABEL_16;
  }
  char v45 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v45) {
    goto LABEL_73;
  }
  if (sub_241CDB0D0() == v8 && v46 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_78:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD000000000000028;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_SLEEP_ANALYSIS";
    goto LABEL_16;
  }
  char v47 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v47) {
    goto LABEL_78;
  }
  if (sub_241CDB0D0() == v8 && v48 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_83:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD00000000000001FLL;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_STEPS";
    goto LABEL_16;
  }
  char v49 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v49) {
    goto LABEL_83;
  }
  if (sub_241CDB0D0() == v8 && v50 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_88:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD000000000000020;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_PUSHES";
    goto LABEL_16;
  }
  char v51 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v51) {
    goto LABEL_88;
  }
  if (sub_241CDB0D0() == v8 && v52 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_93:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD000000000000028;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_CARDIO_FITNESS";
    goto LABEL_16;
  }
  char v53 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_93;
  }
  if (sub_241CDB0D0() == v8 && v54 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_98:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD000000000000029;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_CARDIO_RECOVERY";
    goto LABEL_16;
  }
  char v55 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v55) {
    goto LABEL_98;
  }
  if (sub_241CDB0D0() == v8 && v56 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_103:
    swift_bridgeObjectRelease();
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD00000000000002CLL;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_WALKING_HEART_RATE";
    goto LABEL_16;
  }
  char v57 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v57) {
    goto LABEL_103;
  }
  if (sub_241CDB0D0() == v8 && v58 == v10)
  {
    swift_bridgeObjectRelease_n();
LABEL_108:
    char v18 = *(unsigned char *)(v1 + 32);
    uint64_t v19 = 0xD000000000000022;
    uint64_t v20 = "TRENDS_NOTIFICATION_TITLE_WORKOUTS";
    goto LABEL_16;
  }
  char v59 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v59) {
    goto LABEL_108;
  }
  sub_241CDA0F0();
  id v60 = a1;
  uint64_t v61 = sub_241CDA190();
  os_log_type_t v62 = sub_241CDB650();
  uint64_t v74 = v61;
  int v73 = v62;
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    uint64_t v77 = v72;
    *(_DWORD *)uint64_t v63 = 136315395;
    uint64_t v64 = sub_241CDC270();
    uint64_t v76 = sub_241A33FE4(v64, v65, &v77);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 12) = 2081;
    id v66 = objc_msgSend(v60, sel_identifier);
    uint64_t v67 = sub_241CDB0D0();
    unint64_t v69 = v68;

    uint64_t v76 = sub_241A33FE4(v67, v69, &v77);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    uint64_t v70 = v74;
    _os_log_impl(&dword_241A23000, v74, (os_log_type_t)v73, "%s Unexpected object type %{private}s for trend notification title", (uint8_t *)v63, 0x16u);
    uint64_t v71 = v72;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v71, -1, -1);
    MEMORY[0x245637F20](v63, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v75 + 8))(v6, v3);
  return 0;
}

uint64_t sub_241AC00CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v122 = a3;
  uint64_t v125 = a2;
  uint64_t v116 = *v3;
  sub_241AC3F00(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  uint64_t v118 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v117 = (uint64_t)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v120 = (char *)&v112 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v112 - v11;
  uint64_t v13 = sub_241CD78F0();
  uint64_t v123 = *(char **)(v13 - 8);
  uint64_t v124 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v115 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241CDA1A0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v21 = (char *)&v112 - v20;
  id v119 = a1;
  id v22 = objc_msgSend(a1, sel_identifier);
  uint64_t v23 = sub_241CDB0D0();
  uint64_t v25 = v24;

  if (sub_241CDB0D0() == v23 && v26 == v25)
  {
    unint64_t v27 = 0x455F455649544341;
LABEL_4:
    unint64_t v121 = v27;
LABEL_5:
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v113 = v21;
  unint64_t v121 = 0x455F455649544341;
  char v28 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_7;
  }
  if (sub_241CDB0D0() == v23 && v53 == v25)
  {
    unint64_t v121 = 0x544847494557;
    goto LABEL_5;
  }
  char v61 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v61)
  {
    unint64_t v121 = 0x544847494557;
    goto LABEL_7;
  }
  if (sub_241CDB0D0() == v23 && v62 == v25)
  {
    unint64_t v27 = 0x5F53544847494C46;
    goto LABEL_4;
  }
  unint64_t v121 = 0x5F53544847494C46;
  char v63 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v63) {
    goto LABEL_7;
  }
  if (sub_241CDB0D0() == v23 && v64 == v25)
  {
LABEL_30:
    unint64_t v27 = 0xD000000000000010;
    goto LABEL_4;
  }
  char v65 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v65) {
    goto LABEL_32;
  }
  if (sub_241CDB0D0() == v23 && v66 == v25) {
    goto LABEL_30;
  }
  char v67 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v67)
  {
LABEL_32:
    unint64_t v121 = 0xD000000000000010;
    goto LABEL_7;
  }
  if (sub_241CDB0D0() == v23 && v68 == v25)
  {
    unint64_t v27 = 0x494D5F444E415453;
    goto LABEL_4;
  }
  unint64_t v121 = 0xD000000000000010;
  char v69 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v69)
  {
    unint64_t v121 = 0x494D5F444E415453;
    goto LABEL_7;
  }
  if (sub_241CDB0D0() == v23 && v70 == v25)
  {
    unint64_t v27 = 0x4C475F444F4F4C42;
    goto LABEL_4;
  }
  char v71 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v71)
  {
    unint64_t v121 = 0x4C475F444F4F4C42;
    goto LABEL_7;
  }
  uint64_t v72 = v16;
  uint64_t v114 = v15;
  unint64_t v74 = 0xD000000000000018;
  if (sub_241CDB0D0() == v23 && v73 == v25) {
    goto LABEL_48;
  }
  char v75 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v75)
  {
LABEL_51:
    unint64_t v121 = v74;
    goto LABEL_52;
  }
  if (sub_241CDB0D0() == v23 && v76 == v25) {
    goto LABEL_49;
  }
  char v77 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v77) {
    goto LABEL_52;
  }
  if (sub_241CDB0D0() == v23 && v78 == v25)
  {
    unint64_t v121 = 0x5F4C5546444E494DLL;
    goto LABEL_49;
  }
  char v79 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v79)
  {
    unint64_t v121 = 0x5F4C5546444E494DLL;
    goto LABEL_52;
  }
  unint64_t v74 = 0xD000000000000011;
  if (sub_241CDB0D0() == v23 && v80 == v25)
  {
LABEL_48:
    unint64_t v121 = v74;
LABEL_49:
    uint64_t v15 = v114;
    uint64_t v16 = v72;
    goto LABEL_5;
  }
  char v81 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v81) {
    goto LABEL_51;
  }
  if (sub_241CDB0D0() == v23 && v82 == v25) {
    goto LABEL_49;
  }
  char v83 = sub_241CDC100();
  swift_bridgeObjectRelease();
  uint64_t v15 = v114;
  uint64_t v16 = v72;
  if (v83) {
    goto LABEL_7;
  }
  unint64_t v74 = 0xD000000000000012;
  if (sub_241CDB0D0() == v23 && v84 == v25) {
    goto LABEL_48;
  }
  char v85 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v85) {
    goto LABEL_51;
  }
  if (sub_241CDB0D0() == v23 && v86 == v25)
  {
    unint64_t v121 = 0x4E415F5045454C53;
    goto LABEL_49;
  }
  char v87 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v87)
  {
    unint64_t v121 = 0x4E415F5045454C53;
    goto LABEL_52;
  }
  if (sub_241CDB0D0() == v23 && v88 == v25)
  {
    unint64_t v121 = 0x5350455453;
    goto LABEL_49;
  }
  char v89 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v89)
  {
    unint64_t v121 = 0x5350455453;
    goto LABEL_52;
  }
  if (sub_241CDB0D0() == v23 && v90 == v25)
  {
    unint64_t v121 = 0x534548535550;
    goto LABEL_49;
  }
  char v91 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v91)
  {
    unint64_t v121 = 0x534548535550;
    goto LABEL_52;
  }
  if (sub_241CDB0D0() == v23 && v92 == v25)
  {
    unint64_t v121 = 0x465F4F4944524143;
    goto LABEL_49;
  }
  char v93 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v93)
  {
    unint64_t v121 = 0x465F4F4944524143;
    goto LABEL_52;
  }
  if (sub_241CDB0D0() == v23 && v94 == v25)
  {
    unint64_t v121 = 0x525F4F4944524143;
    goto LABEL_49;
  }
  char v95 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v95)
  {
    unint64_t v121 = 0x525F4F4944524143;
    goto LABEL_52;
  }
  uint64_t v96 = sub_241CDB0D0();
  unint64_t v121 = 0xD000000000000012;
  if (v96 == v23 && v97 == v25) {
    goto LABEL_49;
  }
  char v98 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v98)
  {
LABEL_52:
    uint64_t v15 = v114;
    uint64_t v16 = v72;
    goto LABEL_7;
  }
  unint64_t v121 = 0x5354554F4B524F57;
  if (sub_241CDB0D0() == v23 && v99 == v25) {
    goto LABEL_49;
  }
  char v100 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v100 & 1) == 0)
  {
    sub_241CDA0F0();
    id v101 = v119;
    uint64_t v102 = sub_241CDA190();
    os_log_type_t v103 = sub_241CDB650();
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v104 = swift_slowAlloc();
      uint64_t v125 = swift_slowAlloc();
      uint64_t v126 = v125;
      *(_DWORD *)uint64_t v104 = 136315395;
      uint64_t v105 = sub_241CDC270();
      uint64_t v128 = sub_241A33FE4(v105, v106, &v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v104 + 12) = 2081;
      id v107 = objc_msgSend(v101, sel_identifier);
      uint64_t v108 = sub_241CDB0D0();
      unint64_t v110 = v109;

      uint64_t v128 = sub_241A33FE4(v108, v110, &v126);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v102, v103, "%s Unexpected object type %{private}s for trend notification body", (uint8_t *)v104, 0x16u);
      uint64_t v111 = v125;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v111, -1, -1);
      MEMORY[0x245637F20](v104, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v72 + 8))(v113, v114);
    return 0;
  }
  uint64_t v15 = v114;
  uint64_t v16 = v72;
LABEL_8:
  uint64_t v30 = v124;
  uint64_t v29 = v125;
  char v31 = v123;
  if (v125 != 1)
  {
    uint64_t v32 = v19;
    uint64_t v33 = (uint64_t)v120;
    if (v125 == 2)
    {
      sub_241A9FC78(v122, (uint64_t)v12);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v31 + 6))(v12, 1, v30) != 1)
      {
        uint64_t v54 = v115;
        (*((void (**)(char *, char *, uint64_t))v31 + 4))(v115, v12, v30);
        uint64_t v126 = 0;
        uint64_t v127 = 0xE000000000000000;
        sub_241CDBE00();
        swift_bridgeObjectRelease();
        uint64_t v126 = 0xD000000000000019;
        uint64_t v127 = 0x8000000241CDF3E0;
        sub_241CDB180();
        swift_bridgeObjectRelease();
        sub_241CDB180();
        uint64_t v55 = v126;
        uint64_t v56 = v127;
        char v57 = *((unsigned char *)v4 + 32);
        sub_241A3600C();
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_241CEB730;
        *(void *)(inited + 32) = sub_241CD78D0();
        *(void *)(inited + 40) = v59;
        uint64_t v52 = sub_241AE4D7C(v55, v56, v57, 0, 0xE000000000000000, inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_bridgeObjectRelease();
        (*((void (**)(char *, uint64_t))v31 + 1))(v54, v30);
        return v52;
      }
      sub_241AC3F64((uint64_t)v12);
    }
    uint64_t v124 = v16;
    swift_bridgeObjectRelease();
    sub_241CDA0F0();
    sub_241A9FC78(v122, v33);
    id v34 = v119;
    char v35 = sub_241CDA190();
    os_log_type_t v36 = sub_241CDB660();
    int v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v123 = v32;
      uint64_t v39 = v38;
      uint64_t v122 = swift_slowAlloc();
      uint64_t v126 = v122;
      *(_DWORD *)uint64_t v39 = 136315907;
      uint64_t v40 = sub_241CDC270();
      uint64_t v128 = sub_241A33FE4(v40, v41, &v126);
      uint64_t v114 = v15;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2081;
      id v42 = objc_msgSend(v34, sel_identifier);
      uint64_t v43 = v33;
      uint64_t v44 = sub_241CDB0D0();
      LODWORD(v121) = v37;
      unint64_t v46 = v45;

      uint64_t v128 = sub_241A33FE4(v44, v46, &v126);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 22) = 2081;
      uint64_t v128 = v29;
      type metadata accessor for HKProfileType(0);
      uint64_t v47 = sub_241CDB120();
      uint64_t v128 = sub_241A33FE4(v47, v48, &v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 32) = 2081;
      sub_241A9FC78(v43, v117);
      uint64_t v49 = sub_241CDB120();
      uint64_t v128 = sub_241A33FE4(v49, v50, &v126);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AC3F64(v43);
      _os_log_impl(&dword_241A23000, v35, (os_log_type_t)v121, "%s Unexpected trend notification body configuration. Identifier: %{private}s. Profile: %{private}s ProfileDisplayName: %{private}s", (uint8_t *)v39, 0x2Au);
      uint64_t v51 = v122;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v51, -1, -1);
      MEMORY[0x245637F20](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v124 + 8))(v123, v114);
    }
    else
    {

      sub_241AC3F64(v33);
      (*(void (**)(char *, uint64_t))(v124 + 8))(v32, v15);
    }
    return 0;
  }
  uint64_t v126 = 0;
  uint64_t v127 = 0xE000000000000000;
  sub_241CDBE00();
  swift_bridgeObjectRelease();
  uint64_t v126 = 0xD000000000000019;
  uint64_t v127 = 0x8000000241CDF3E0;
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  uint64_t v52 = sub_241AE4D7C(v126, v127, *((unsigned char *)v4 + 32), 0, 0xE000000000000000, MEMORY[0x263F8EE78]);
  swift_bridgeObjectRelease();
  return v52;
}

uint64_t sub_241AC1358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_241C5D7A0(v6);
  swift_bridgeObjectRelease();
  unint64_t v8 = sub_241A5A31C(v7);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v9 = sub_241AC3D3C(v8, v3);
  swift_release();
  swift_release();
  uint64_t v16 = v9;
  swift_bridgeObjectRetain();
  sub_241AC3278((uint64_t *)&v16);
  swift_bridgeObjectRelease();
  uint64_t v10 = v16[2];
  if (v10 == 1)
  {
    uint64_t v12 = v16[4];
    unint64_t v13 = v16[5];
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v14 = sub_241AC16B4(v12, v13, a2, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v10 == 2)
    {
      uint64_t v11 = sub_241AC1D44(v16, a2, a3);
    }
    else if (v10 == 3)
    {
      uint64_t v11 = sub_241AC246C(v16, a2, a3);
    }
    else
    {
      uint64_t v11 = sub_241AC2BD4((uint64_t)v16, a2, a3);
    }
    uint64_t v14 = v11;
    swift_release();
  }
  return v14;
}

void sub_241AC14AC(id *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v5 = *a1;
  id v6 = objc_msgSend(*a1, sel_identifier);
  uint64_t v7 = sub_241CDB0D0();
  uint64_t v9 = v8;

  if (sub_241CDB0D0() == v7 && v10 == v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v12 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v12)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    char v23 = *(unsigned char *)(a2 + 32);
    uint64_t v24 = 0xD00000000000003FLL;
    uint64_t v25 = 0x8000000241CDF3A0;
    uint64_t v26 = MEMORY[0x263F8EE78];
LABEL_15:
    *a3 = sub_241AE4D7C(v24, v25, v23, 0, 0xE000000000000000, v26);
    a3[1] = v27;
    return;
  }
  if (sub_241CDB0D0() == v7 && v13 == v9)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  char v15 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_17:
    char v23 = *(unsigned char *)(a2 + 32);
    uint64_t v25 = 0x8000000241CDF360;
    uint64_t v26 = MEMORY[0x263F8EE78];
    uint64_t v24 = 0xD00000000000003CLL;
    goto LABEL_15;
  }
  id v16 = sub_241ABF428();
  id v17 = objc_msgSend(v16, sel_displayTypeForObjectType_, v5);

  if (v17)
  {
    id v18 = objc_msgSend(v17, sel_localization);

    id v19 = objc_msgSend(v18, sel_embeddedDisplayName);
    uint64_t v20 = sub_241CDB0D0();
    uint64_t v22 = v21;

    *a3 = v20;
    a3[1] = v22;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
}

uint64_t sub_241AC16B4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a1;
  uint64_t v45 = *v4;
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241AC3F00(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  uint64_t v47 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  unint64_t v46 = &v42[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v16 = &v42[-v15];
  MEMORY[0x270FA5388](v14);
  id v18 = &v42[-v17];
  uint64_t v19 = sub_241CD78F0();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = &v42[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a3 == 1)
  {
    char v34 = *((unsigned char *)v4 + 32);
    sub_241A3600C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_241CEB730;
    *(void *)(inited + 32) = v50;
    *(void *)(inited + 40) = a2;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_241AE4D7C(0xD000000000000030, 0x8000000241CDF2A0, v34, 0, 0xE000000000000000, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    if (a3 == 2)
    {
      sub_241A9FC78(a4, (uint64_t)v18);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) != 1)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 32))(v22, v18, v19);
        char v37 = *((unsigned char *)v4 + 32);
        sub_241A3600C();
        uint64_t v38 = swift_initStackObject();
        *(_OWORD *)(v38 + 16) = xmmword_241CEB720;
        *(void *)(v38 + 32) = sub_241CD78D0();
        uint64_t v39 = v50;
        *(void *)(v38 + 40) = v40;
        *(void *)(v38 + 48) = v39;
        *(void *)(v38 + 56) = a2;
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_241AE4D7C(0xD000000000000032, 0x8000000241CDF2E0, v37, 0, 0xE000000000000000, v38);
        swift_setDeallocating();
        swift_arrayDestroy();
        (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v22, v19);
        return v36;
      }
      sub_241AC3F64((uint64_t)v18);
    }
    sub_241CDA0F0();
    sub_241A9FC78(a4, (uint64_t)v16);
    swift_bridgeObjectRetain_n();
    char v23 = sub_241CDA190();
    os_log_type_t v24 = sub_241CDB660();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      v52[0] = v44;
      *(_DWORD *)uint64_t v26 = 136316163;
      int v43 = v25;
      uint64_t v27 = sub_241CDC270();
      uint64_t v51 = sub_241A33FE4(v27, v28, v52);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v51 = sub_241A33FE4(0xD000000000000054, 0x8000000241CDF240, v52);
      sub_241CDBBF0();
      *(_WORD *)(v26 + 22) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_241A33FE4(v50, a2, v52);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 32) = 2081;
      uint64_t v51 = a3;
      type metadata accessor for HKProfileType(0);
      uint64_t v29 = sub_241CDB120();
      uint64_t v51 = sub_241A33FE4(v29, v30, v52);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 42) = 2081;
      sub_241A9FC78((uint64_t)v16, (uint64_t)v46);
      uint64_t v31 = sub_241CDB120();
      uint64_t v51 = sub_241A33FE4(v31, v32, v52);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AC3F64((uint64_t)v16);
      _os_log_impl(&dword_241A23000, v23, (os_log_type_t)v43, "%s %s Error | Object Types: %{private}s. Profile: %{private}s. ProfileDisplayName: %{private}s", (uint8_t *)v26, 0x34u);
      uint64_t v33 = v44;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v33, -1, -1);
      MEMORY[0x245637F20](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_241AC3F64((uint64_t)v16);
    }

    (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v10, v49);
    return 0;
  }
  return v36;
}

uint64_t sub_241AC1D44(void *a1, uint64_t a2, uint64_t a3)
{
  os_log_t v53 = *(os_log_t *)v3;
  uint64_t v57 = sub_241CDA1A0();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v8 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241AC3F00(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  uint64_t v55 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v54 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v50[-v13];
  MEMORY[0x270FA5388](v12);
  id v16 = &v50[-v15];
  uint64_t v17 = sub_241CD78F0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = &v50[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2 == 1)
  {
    char v37 = *(unsigned char *)(v3 + 32);
    sub_241A3600C();
    uint64_t result = swift_initStackObject();
    *(_OWORD *)(result + 16) = xmmword_241CEB720;
    uint64_t v39 = a1[2];
    if (v39)
    {
      uint64_t v40 = (void *)result;
      uint64_t result = a1[5];
      void v40[4] = a1[4];
      v40[5] = result;
      if (v39 != 1)
      {
        uint64_t v41 = a1[6];
        uint64_t v42 = a1[7];
        v40[6] = v41;
        v40[7] = v42;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_241AE4D7C(0xD00000000000002ALL, 0x8000000241CDF1E0, v37, 0, 0xE000000000000000, (uint64_t)v40);
        swift_setDeallocating();
        swift_arrayDestroy();
        return v43;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  if (a2 != 2)
  {
LABEL_5:
    sub_241CDA0F0();
    sub_241A9FC78(a3, (uint64_t)v14);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_241CDA190();
    os_log_type_t v22 = sub_241CDB660();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      v59[0] = v52;
      *(_DWORD *)uint64_t v24 = 136316163;
      int v51 = v23;
      uint64_t v25 = sub_241CDC270();
      uint64_t v58 = sub_241A33FE4(v25, v26, v59);
      os_log_t v53 = v21;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v58 = sub_241A33FE4(0xD000000000000044, 0x8000000241CDF190, v59);
      sub_241CDBBF0();
      *(_WORD *)(v24 + 22) = 2081;
      uint64_t v27 = swift_bridgeObjectRetain();
      uint64_t v28 = MEMORY[0x245636610](v27, MEMORY[0x263F8D310]);
      unint64_t v30 = v29;
      swift_bridgeObjectRelease();
      uint64_t v58 = sub_241A33FE4(v28, v30, v59);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 32) = 2081;
      uint64_t v58 = a2;
      type metadata accessor for HKProfileType(0);
      uint64_t v31 = sub_241CDB120();
      uint64_t v58 = sub_241A33FE4(v31, v32, v59);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 42) = 2081;
      sub_241A9FC78((uint64_t)v14, (uint64_t)v54);
      uint64_t v33 = sub_241CDB120();
      uint64_t v58 = sub_241A33FE4(v33, v34, v59);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AC3F64((uint64_t)v14);
      os_log_t v35 = v53;
      _os_log_impl(&dword_241A23000, v53, (os_log_type_t)v51, "%s %s Error | Object Types: %{private}s. Profile: %{private}s. ProfileDisplayName: %{private}s", (uint8_t *)v24, 0x34u);
      uint64_t v36 = v52;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      MEMORY[0x245637F20](v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_241AC3F64((uint64_t)v14);
    }
    (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v8, v57);
    return 0;
  }
  sub_241A9FC78(a3, (uint64_t)v16);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_241AC3F64((uint64_t)v16);
    goto LABEL_5;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v20, v16, v17);
  char v44 = *(unsigned char *)(v3 + 32);
  sub_241A3600C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEC2D0;
  uint64_t result = sub_241CD78D0();
  *(void *)(inited + 32) = result;
  *(void *)(inited + 40) = v46;
  uint64_t v47 = a1[2];
  if (!v47)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t result = a1[5];
  *(void *)(inited + 48) = a1[4];
  *(void *)(inited + 56) = result;
  if (v47 != 1)
  {
    uint64_t v48 = a1[6];
    uint64_t v49 = a1[7];
    *(void *)(inited + 64) = v48;
    *(void *)(inited + 72) = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_241AE4D7C(0xD00000000000002CLL, 0x8000000241CDF210, v44, 0, 0xE000000000000000, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v17);
    return v43;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_241AC246C(void *a1, uint64_t a2, uint64_t a3)
{
  os_log_t v55 = *(os_log_t *)v3;
  uint64_t v59 = sub_241CDA1A0();
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v8 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241AC3F00(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  uint64_t v57 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v56 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v52[-v13];
  MEMORY[0x270FA5388](v12);
  id v16 = &v52[-v15];
  uint64_t v17 = sub_241CD78F0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = &v52[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2 == 1)
  {
    char v37 = *(unsigned char *)(v3 + 32);
    sub_241A3600C();
    uint64_t result = swift_initStackObject();
    *(_OWORD *)(result + 16) = xmmword_241CEC2D0;
    unint64_t v39 = a1[2];
    if (v39)
    {
      uint64_t v40 = (void *)result;
      uint64_t result = a1[5];
      void v40[4] = a1[4];
      v40[5] = result;
      if (v39 != 1)
      {
        uint64_t v41 = a1[7];
        v40[6] = a1[6];
        v40[7] = v41;
        if (v39 >= 3)
        {
          uint64_t v42 = a1[8];
          uint64_t v43 = a1[9];
          v40[8] = v42;
          v40[9] = v43;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v44 = sub_241AE4D7C(0xD00000000000002FLL, 0x8000000241CDF120, v37, 0, 0xE000000000000000, (uint64_t)v40);
          swift_setDeallocating();
          swift_arrayDestroy();
          return v44;
        }
        goto LABEL_20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (a2 != 2)
  {
LABEL_5:
    sub_241CDA0F0();
    sub_241A9FC78(a3, (uint64_t)v14);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_241CDA190();
    os_log_type_t v22 = sub_241CDB660();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v61[0] = v54;
      *(_DWORD *)uint64_t v24 = 136316163;
      int v53 = v23;
      uint64_t v25 = sub_241CDC270();
      uint64_t v60 = sub_241A33FE4(v25, v26, v61);
      os_log_t v55 = v21;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v60 = sub_241A33FE4(0xD000000000000046, 0x8000000241CDF0D0, v61);
      sub_241CDBBF0();
      *(_WORD *)(v24 + 22) = 2081;
      uint64_t v27 = swift_bridgeObjectRetain();
      uint64_t v28 = MEMORY[0x245636610](v27, MEMORY[0x263F8D310]);
      unint64_t v30 = v29;
      swift_bridgeObjectRelease();
      uint64_t v60 = sub_241A33FE4(v28, v30, v61);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 32) = 2081;
      uint64_t v60 = a2;
      type metadata accessor for HKProfileType(0);
      uint64_t v31 = sub_241CDB120();
      uint64_t v60 = sub_241A33FE4(v31, v32, v61);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 42) = 2081;
      sub_241A9FC78((uint64_t)v14, (uint64_t)v56);
      uint64_t v33 = sub_241CDB120();
      uint64_t v60 = sub_241A33FE4(v33, v34, v61);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      sub_241AC3F64((uint64_t)v14);
      os_log_t v35 = v55;
      _os_log_impl(&dword_241A23000, v55, (os_log_type_t)v53, "%s %s Error | Object Types: %{private}s. Profile: %{private}s. ProfileDisplayName: %{private}s", (uint8_t *)v24, 0x34u);
      uint64_t v36 = v54;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v36, -1, -1);
      MEMORY[0x245637F20](v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_241AC3F64((uint64_t)v14);
    }
    (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v8, v59);
    return 0;
  }
  sub_241A9FC78(a3, (uint64_t)v16);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_241AC3F64((uint64_t)v16);
    goto LABEL_5;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v20, v16, v17);
  char v45 = *(unsigned char *)(v3 + 32);
  sub_241A3600C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEC3A0;
  uint64_t result = sub_241CD78D0();
  *(void *)(inited + 32) = result;
  *(void *)(inited + 40) = v47;
  unint64_t v48 = a1[2];
  if (!v48) {
    goto LABEL_21;
  }
  uint64_t result = a1[5];
  *(void *)(inited + 48) = a1[4];
  *(void *)(inited + 56) = result;
  if (v48 == 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v49 = a1[7];
  *(void *)(inited + 64) = a1[6];
  *(void *)(inited + 72) = v49;
  if (v48 >= 3)
  {
    uint64_t v50 = a1[8];
    uint64_t v51 = a1[9];
    *(void *)(inited + 80) = v50;
    *(void *)(inited + 88) = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_241AE4D7C(0xD000000000000031, 0x8000000241CDF150, v45, 0, 0xE000000000000000, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v17);
    return v44;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_241AC2BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_t v45 = *(os_log_t *)v3;
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241AC3F00(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  uint64_t v47 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v46 = &v42[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v42[-v13];
  MEMORY[0x270FA5388](v12);
  id v16 = &v42[-v15];
  uint64_t v17 = sub_241CD78F0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = &v42[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2 == 1) {
    return sub_241AE4D7C(0xD000000000000028, 0x8000000241CDF070, *(unsigned char *)(v3 + 32), 0, 0xE000000000000000, MEMORY[0x263F8EE78]);
  }
  if (a2 == 2)
  {
    sub_241A9FC78(a3, (uint64_t)v16);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v20, v16, v17);
      char v38 = *(unsigned char *)(v3 + 32);
      sub_241A3600C();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB730;
      *(void *)(inited + 32) = sub_241CD78D0();
      *(void *)(inited + 40) = v40;
      uint64_t v37 = sub_241AE4D7C(0xD00000000000002ALL, 0x8000000241CDF0A0, v38, 0, 0xE000000000000000, inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v17);
      return v37;
    }
    sub_241AC3F64((uint64_t)v16);
  }
  sub_241CDA0F0();
  sub_241A9FC78(a3, (uint64_t)v14);
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB660();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v51 = v44;
    *(_DWORD *)uint64_t v24 = 136316163;
    int v43 = v23;
    uint64_t v25 = sub_241CDC270();
    uint64_t v50 = sub_241A33FE4(v25, v26, &v51);
    os_log_t v45 = v21;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v50 = sub_241A33FE4(0xD000000000000048, 0x8000000241CDF020, &v51);
    sub_241CDBBF0();
    *(_WORD *)(v24 + 22) = 2081;
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = MEMORY[0x245636610](v27, MEMORY[0x263F8D310]);
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_241A33FE4(v28, v30, &v51);
    sub_241CDBBF0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 32) = 2081;
    uint64_t v50 = a2;
    type metadata accessor for HKProfileType(0);
    uint64_t v31 = sub_241CDB120();
    uint64_t v50 = sub_241A33FE4(v31, v32, &v51);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 42) = 2081;
    sub_241A9FC78((uint64_t)v14, (uint64_t)v46);
    uint64_t v33 = sub_241CDB120();
    uint64_t v50 = sub_241A33FE4(v33, v34, &v51);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241AC3F64((uint64_t)v14);
    os_log_t v35 = v45;
    _os_log_impl(&dword_241A23000, v45, (os_log_type_t)v43, "%s %s Error | Object Types: %{private}s. Profile: %{private}s. ProfileDisplayName: %{private}s", (uint8_t *)v24, 0x34u);
    uint64_t v36 = v44;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v36, -1, -1);
    MEMORY[0x245637F20](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_241AC3F64((uint64_t)v14);
  }
  (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v8, v49);
  return 0;
}

uint64_t sub_241AC3214()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TrendLocalization()
{
  return self;
}

uint64_t sub_241AC3278(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_241B95550(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_241AC32E4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_241AC32E4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_241CDC0C0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_241AC39D0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_241AC3AA0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_241B95528((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          char v100 = &v97[16 * v96 + 32];
          *(void *)char v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_241CDB300();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_241CDC100();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      int v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_241CDC100()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_241B951E8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_241B951E8((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    int v43 = &v11[16 * v41 + 32];
    *(void *)int v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            char v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        char v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        char v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_241AC3AA0((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        unint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        char v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_241CDC100() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)char v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_241CDBF00();
  __break(1u);
  return result;
}

uint64_t sub_241AC39D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_241CDC100(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_241AC3AA0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_241CDC100() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_241CDC100() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_241B95310((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

void *sub_241AC3D3C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_241CDBF50())
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    uint64_t v6 = 4;
    uint64_t v16 = v4;
    while (1)
    {
      id v8 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x245637160](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      int64_t v9 = v8;
      uint64_t v10 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v20 = v8;
      sub_241AC14AC(&v20, a2, &v18);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v5;
      }

      uint64_t v11 = v19;
      if (v19)
      {
        uint64_t v12 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_241AF7104(0, v5[2] + 1, 1, v5);
        }
        unint64_t v14 = v5[2];
        unint64_t v13 = v5[3];
        if (v14 >= v13 >> 1) {
          uint64_t v5 = sub_241AF7104((void *)(v13 > 1), v14 + 1, 1, v5);
        }
        uint64_t v5[2] = v14 + 1;
        uint64_t v7 = &v5[2 * v14];
        v7[4] = v12;
        v7[5] = v11;
        uint64_t v4 = v16;
      }
      ++v6;
      if (v10 == v4)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x263F8EE78];
}

void sub_241AC3F00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241AC3F64(uint64_t a1)
{
  sub_241AC3F00(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241AC3FF4(void *a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v37 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = sub_241CD8C50();
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD8C60();
  uint64_t v35 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(a1, sel_identifier);
  uint64_t v15 = sub_241CDB0D0();
  uint64_t v17 = v16;

  if (v15 == 0xD00000000000001FLL && v17 == 0x8000000241CDF8C0 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    *((void *)&v44 + 1) = &type metadata for ActivityDataTypeDetailConfigurationProvider;
    unint64_t v18 = sub_241AC4818();
LABEL_5:
    unint64_t v45 = v18;
    goto LABEL_6;
  }
  if (v15 == 0xD000000000000017 && v17 == 0x8000000241CDF8E0)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    *((void *)&v44 + 1) = &type metadata for WorkoutsDataTypeDetailConfigurationProvider;
    unint64_t v18 = sub_241AC47C4();
    goto LABEL_5;
  }
  char v32 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v32) {
    goto LABEL_17;
  }
  unint64_t v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
LABEL_6:
  sub_241AC469C((uint64_t)&v43, (uint64_t)&v40);
  if (v41)
  {
    sub_241A5598C(&v40, (uint64_t)v42);
    sub_241A311E0(v42, v42[3]);
    sub_241CD8FD0();
    uint64_t v25 = v36;
    sub_241CD8B50();
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v10, v25, v8);
    id v26 = objc_allocWithZone((Class)sub_241CD8CE0());
    id v27 = a1;
    uint64_t v28 = sub_241CD8CC0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
    sub_241AC4768((uint64_t)&v43);
    sub_241A31190((uint64_t)v42);
  }
  else
  {
    sub_241AC4768((uint64_t)&v40);
    sub_241CDA140();
    id v19 = a1;
    id v20 = sub_241CDA190();
    os_log_type_t v21 = sub_241CDB650();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      BOOL v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      v42[0] = v19;
      id v24 = v19;
      sub_241CDBBF0();
      *BOOL v23 = v19;

      _os_log_impl(&dword_241A23000, v20, v21, "[SummariesAppDelegate] No custom detail view controller or configuration provided for %@", v22, 0xCu);
      sub_241A96044();
      swift_arrayDestroy();
      MEMORY[0x245637F20](v23, -1, -1);
      MEMORY[0x245637F20](v22, -1, -1);
    }
    else
    {
    }
    uint64_t v30 = v38;
    uint64_t v29 = v39;

    (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v29);
    sub_241AC4768((uint64_t)&v43);
    return 0;
  }
  return v28;
}

uint64_t sub_241AC469C(uint64_t a1, uint64_t a2)
{
  sub_241AC4700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_241AC4700()
{
  if (!qword_26B0309A0)
  {
    sub_241A35FBC(255, &qword_26B030998);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0309A0);
    }
  }
}

uint64_t sub_241AC4768(uint64_t a1)
{
  sub_241AC4700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_241AC47C4()
{
  unint64_t result = qword_268D428A0;
  if (!qword_268D428A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D428A0);
  }
  return result;
}

unint64_t sub_241AC4818()
{
  unint64_t result = qword_26B030658;
  if (!qword_26B030658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030658);
  }
  return result;
}

uint64_t sub_241AC486C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241CDA640();
  swift_release();
  swift_release();
  return v1;
}

id sub_241AC4910()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessFeatureStatus();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241AC4A08()
{
  return type metadata accessor for CardioFitnessFeatureStatus();
}

uint64_t type metadata accessor for CardioFitnessFeatureStatus()
{
  uint64_t result = qword_26B036A70;
  if (!qword_26B036A70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241AC4A5C()
{
  sub_241AC4B68(319, &qword_26B02EAD0, (uint64_t (*)(uint64_t))sub_241AC4B34, MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_241AC4B34(uint64_t a1)
{
}

void sub_241AC4B68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_241AC4BCC()
{
  unint64_t result = qword_26B0381B0;
  if (!qword_26B0381B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0381B0);
  }
  return result;
}

uint64_t sub_241AC4C80@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241CDA640();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_241AC4D04(void **a1, void **a2)
{
  objc_super v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return sub_241CDA650();
}

void sub_241AC4D7C(void *a1, uint64_t a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  id v42 = a1;
  sub_241AC6758();
  id v40 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (void *)((char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = sub_241CD6D00();
  uint64_t v11 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  unint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = (void *)swift_allocObject();
  uint64_t v41 = a3;
  _OWORD v18[2] = a3;
  void v18[3] = a4;
  unint64_t v45 = v18;
  v18[4] = v5;
  uint64_t v19 = v5 + qword_26B041200;
  uint64_t v20 = *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28);
  uint64_t v44 = v19;
  os_log_type_t v21 = *(void **)(v19 + v20);
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = *(uint64_t (**)(void))(*(void *)v5 + 184);
    v39[1] = a4;
    swift_retain_n();
    swift_retain_n();
    uint64_t v41 = v21;
    id v40 = (id)v24();
    id v25 = objc_msgSend(v42, sel_endDate);
    sub_241CD6CB0();

    sub_241CD6770();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v43);
    id v26 = (void *)sub_241CD9E10();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v23, v26);
    sub_241A33460();
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_241CEB710;
    *(void *)(v28 + 32) = v27;
    aBlock[0] = v28;
    sub_241CDB2E0();
    id v29 = v27;
    sub_241CD9E20();
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v45;
    *(void *)(v30 + 16) = sub_241AC6824;
    *(void *)(v30 + 24) = v31;
    id v32 = objc_allocWithZone(MEMORY[0x263F0A6E0]);
    sub_241A313AC(0, &qword_26B036890);
    swift_retain();
    uint64_t v33 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    sub_241A313AC(0, (unint64_t *)&qword_26B038848);
    uint64_t v34 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_241AC68B0;
    aBlock[5] = v30;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241C856FC;
    aBlock[3] = &unk_26F5C1D80;
    uint64_t v35 = _Block_copy(aBlock);
    id v36 = objc_msgSend(v32, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v33, 0, v34, v35);

    _Block_release(v35);
    swift_release();
    objc_msgSend(*(id *)(v44 + 16), sel_executeQuery_, v36);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_241A3F000();
    sub_241AC6830((unint64_t *)&qword_268D42190, (void (*)(uint64_t))sub_241A3F000);
    uint64_t v37 = swift_allocError();
    unsigned char *v38 = 0;
    *uint64_t v10 = v37;
    swift_storeEnumTagMultiPayload();
    swift_retain_n();
    swift_retain_n();
    sub_241AC5308((uint64_t)v10, v41);
    sub_241AC6B44((uint64_t)v10, (uint64_t (*)(void))sub_241AC6758);
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_241AC5308(uint64_t a1, void (*a2)(id, uint64_t))
{
  sub_241AC6A28(0, (unint64_t *)&unk_26B034CE0, (void (*)(uint64_t))sub_241A6AA08);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - v5;
  sub_241AC6758();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (id *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241AC6940(a1, (uint64_t)v9, (uint64_t (*)(void))sub_241AC6758);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v10 = *v9;
    id v11 = *v9;
    a2(v10, 1);
  }
  else
  {
    sub_241AC69A8((uint64_t)v9, (uint64_t)v6);
    id v12 = sub_241AC58B0((uint64_t)v6);
    a2(v12, 0);

    sub_241AC6AE8((uint64_t)v6, (unint64_t *)&unk_26B034CE0, (void (*)(uint64_t))sub_241A6AA08);
  }
}

unint64_t sub_241AC54B0(uint64_t a1, unint64_t a2, void *a3, void (*a4)(void *), uint64_t a5)
{
  sub_241AC68D0();
  uint64_t v10 = v9;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (uint64_t *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (uint64_t *)((char *)&v39 - v14);
  sub_241AC6758();
  unint64_t result = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (uint64_t *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_241CDBF50();
      if (v20)
      {
LABEL_4:
        unint64_t result = v20 - 1;
        if (__OFSUB__(v20, 1))
        {
          __break(1u);
        }
        else
        {
          id v42 = a4;
          if ((a2 & 0xC000000000000001) == 0)
          {
            if ((result & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (result < *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v21 = *(id *)(a2 + 8 * result + 32);
LABEL_9:
              uint64_t v22 = v21;
              swift_bridgeObjectRelease();
              sub_241CD9E00();
              uint64_t v24 = v23;
              id v25 = (char *)v15 + *(int *)(v10 + 48);
              *uint64_t v15 = v23;
              sub_241CD9E30();
              id v40 = v22;
              uint64_t v41 = a5;
              if (a2 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v26 = sub_241CDBF50();
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v26 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
              }
              *(void *)((char *)v15 + *(int *)(v10 + 64)) = v26;
              uint64_t v28 = (char *)v13 + *(int *)(v10 + 48);
              uint64_t v29 = *(int *)(v10 + 64);
              *uint64_t v13 = v24;
              uint64_t v30 = sub_241CD6D00();
              uint64_t v31 = *(void *)(v30 - 8);
              (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v25, v30);
              *(void *)((char *)v13 + v29) = v26;
              sub_241A6AA08();
              uint64_t v33 = v32;
              uint64_t v34 = (char *)v19 + *(int *)(v32 + 48);
              uint64_t v35 = *(int *)(v33 + 64);
              void *v19 = v24;
              (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v34, v28, v30);
              *(void *)((char *)v19 + v35) = v26;
              (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v19, 0, 1, v33);
              swift_storeEnumTagMultiPayload();
              v42(v19);

              sub_241AC6B44((uint64_t)v19, (uint64_t (*)(void))sub_241AC6758);
              id v36 = sub_241AC68D0;
              uint64_t v37 = (uint64_t)v15;
              return sub_241AC6B44(v37, (uint64_t (*)(void))v36);
            }
            __break(1u);
            return result;
          }
        }
        id v21 = (id)MEMORY[0x245637160](result, a2);
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v20) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    sub_241A6AA08();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v19, 1, 1, v38);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    if (!a3) {
      return result;
    }
    void *v19 = a3;
    swift_storeEnumTagMultiPayload();
    id v27 = a3;
  }
  a4(v19);
  id v36 = sub_241AC6758;
  uint64_t v37 = (uint64_t)v19;
  return sub_241AC6B44(v37, (uint64_t (*)(void))v36);
}

uint64_t sub_241AC58A8()
{
  return 0;
}

id sub_241AC58B0(uint64_t a1)
{
  uint64_t v74 = a1;
  uint64_t v2 = *v1;
  uint64_t v70 = v1;
  uint64_t v71 = v2;
  sub_241AC6A28(0, &qword_26B032050, MEMORY[0x263F45780]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v65 - v7;
  sub_241AC6A28(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v9 - 8);
  BOOL v72 = (char *)&v65 - v10;
  sub_241AC6A28(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v73 = (uint64_t)&v65 - v15;
  sub_241AC6A28(0, (unint64_t *)&unk_26B034CE0, (void (*)(uint64_t))sub_241A6AA08);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (double *)((char *)&v65 - v17);
  sub_241A6AA08();
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v69 = (void (**)(char *, uint64_t))((char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (double *)((char *)&v65 - v25);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (void (**)(char *, uint64_t))((char *)&v65 - v27);
  sub_241AC6A7C(v74, (uint64_t)v18, (unint64_t *)&unk_26B034CE0, (void (*)(uint64_t))sub_241A6AA08);
  if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) == 1)
  {
    sub_241AC6AE8((uint64_t)v18, (unint64_t *)&unk_26B034CE0, (void (*)(uint64_t))sub_241A6AA08);
    sub_241CD7A80();
    uint64_t v29 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v8, 0, 1, v29);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v30 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v14, 1, 1, v30);
    uint64_t v31 = (void (*)(uint64_t))MEMORY[0x263F45780];
    sub_241AC6A7C((uint64_t)v8, (uint64_t)v6, &qword_26B032050, MEMORY[0x263F45780]);
    id v32 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v14, (uint64_t)v6, 0, 0);
    sub_241AC6AE8((uint64_t)v8, &qword_26B032050, v31);
    return v32;
  }
  uint64_t v66 = v14;
  uint64_t v33 = *(int *)(v20 + 48);
  uint64_t v34 = (char *)v28 + v33;
  uint64_t v35 = *(int *)(v20 + 64);
  id v36 = (char *)v18 + v33;
  double v37 = *v18;
  *uint64_t v28 = *(void *)v18;
  uint64_t v38 = sub_241CD6D00();
  uint64_t v39 = *(void *)(v38 - 8);
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v34, v36, v38);
  uint64_t v40 = *(void *)((char *)v18 + v35);
  uint64_t v74 = v35;
  *(void *)((char *)v28 + v35) = v40;
  uint64_t v41 = (char *)v26 + *(int *)(v20 + 48);
  uint64_t v42 = *(int *)(v20 + 64);
  *uint64_t v26 = v37;
  char v67 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  uint64_t v68 = v39 + 16;
  v67(v41, v34, v38);
  *(void *)((char *)v26 + v42) = v40;
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46638]), sel_init);
  if (result)
  {
    id v44 = result;
    objc_msgSend(v44, sel_setTimeInterval_, v37);
    unint64_t v45 = (void *)sub_241CD6C60();
    double v46 = MEMORY[0x245637600]();

    objc_msgSend(v44, sel_setDateData_, v46);
    BOOL v65 = *(void (**)(char *, uint64_t))(v39 + 8);
    v65(v41, v38);
    uint64_t v47 = v73;
    (*(void (**)(uint64_t))(v71 + 208))((uint64_t)v70 + qword_268D4B198);
    uint64_t v48 = sub_241CD9970();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
    sub_241A313AC(0, &qword_26B034E48);
    uint64_t v49 = (uint64_t)v72;
    sub_241CD6770();
    uint64_t v50 = sub_241CD6810();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
    uint64_t v51 = v34;
    uint64_t v52 = v69;
    uint64_t v53 = (char *)v69 + *(int *)(v20 + 48);
    uint64_t v54 = *(int *)(v20 + 64);
    void *v69 = *v28;
    v67(v53, v51, v38);
    uint64_t v55 = *(void *)((char *)v28 + v74);
    *(void *)((char *)v52 + v54) = v55;
    unint64_t v56 = v44;
    id v57 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)(v49, v55, 0);
    v65(v53, v38);
    id result = objc_msgSend(v44, sel_data);
    if (result)
    {
      uint64_t v58 = result;
      sub_241A313AC(0, &qword_26B030440);
      uint64_t v59 = sub_241CD6AE0();
      unint64_t v61 = v60;

      uint64_t v62 = (void (*)(uint64_t))MEMORY[0x263F46CA8];
      uint64_t v63 = v73;
      uint64_t v64 = (uint64_t)v66;
      sub_241AC6A7C(v73, (uint64_t)v66, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
      uint64_t v76 = 0;
      memset(v75, 0, sizeof(v75));
      id v32 = sub_241A54648(v59, v61, 17, v64, (uint64_t)v57, 0, (uint64_t)v75);

      sub_241A37374(v59, v61);
      sub_241AC6AE8(v63, (unint64_t *)&qword_26B0321F0, v62);
      sub_241AC6B44((uint64_t)v28, (uint64_t (*)(void))sub_241A6AA08);
      return v32;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_241AC60A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241AC62E4(a1, MEMORY[0x263F46C90], a2);
}

uint64_t sub_241AC60AC()
{
  uint64_t v1 = v0 + qword_268D4B198;
  uint64_t v2 = sub_241CD9F10();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_241AC6118()
{
  sub_241AC6B44(v0 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_268D4B198;
  uint64_t v4 = sub_241CD9F10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSharableModelStep(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B037FB0);
}

uint64_t sub_241AC6248()
{
  uint64_t result = sub_241CD9F10();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241AC62D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241AC62E4(a1, MEMORY[0x263F46C28], a2);
}

uint64_t sub_241AC62E4@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_241CD9F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1, v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_241CD9970();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(a3, v7, v8);
}

uint64_t sub_241AC639C()
{
  type metadata accessor for HKCategoryValueAppleStandHour(0);
  sub_241C5D60C((uint64_t)&unk_26F5BFE40);
  sub_241AC6830(&qword_26B038068, type metadata accessor for HKCategoryValueAppleStandHour);
  uint64_t v0 = sub_241CDAF00();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_241AC6428(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v22 = a1;
  uint64_t v6 = sub_241CD9ED0();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v23 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD9F10();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v22 - v16;
  sub_241AC6940(a1, (uint64_t)&v22 - v16, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v11, (uint64_t)a2, v8);
  v18((char *)(v3 + qword_268D4B198), (uint64_t)v11, v8);
  sub_241AC6940((uint64_t)v17, (uint64_t)v15, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v19 = v23;
  sub_241CD9EC0();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v11, v8);
  sub_241AC6B44((uint64_t)v17, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_241A7A6EC((uint64_t)v15, v3 + qword_26B041200);
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v3 + qword_26B0411F8, v19, v25);
  v20(a2, v8);
  sub_241AC6B44(v22, type metadata accessor for SummariesFullProfileExecutor.Request);
  return v3;
}

uint64_t type metadata accessor for StandHoursCurrentValueSharableModelStep(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B037E78);
}

uint64_t sub_241AC6720()
{
  return swift_initClassMetadata2();
}

void sub_241AC6758()
{
  if (!qword_26B0380E8)
  {
    sub_241AC6A28(255, (unint64_t *)&unk_26B034CE0, (void (*)(uint64_t))sub_241A6AA08);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDC210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0380E8);
    }
  }
}

uint64_t sub_241AC67E4()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241AC6824(uint64_t a1)
{
  sub_241AC5308(a1, *(void (**)(id, uint64_t))(v1 + 16));
}

uint64_t sub_241AC6830(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241AC6878()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_241AC68B0(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_241AC54B0(a1, a2, a3, *(void (**)(void *))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_241AC68B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241AC68C8()
{
  return swift_release();
}

void sub_241AC68D0()
{
  if (!qword_26B038040)
  {
    sub_241CD6D00();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26B038040);
    }
  }
}

uint64_t sub_241AC6940(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241AC69A8(uint64_t a1, uint64_t a2)
{
  sub_241AC6A28(0, (unint64_t *)&unk_26B034CE0, (void (*)(uint64_t))sub_241A6AA08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241AC6A28(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241AC6A7C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241AC6A28(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241AC6AE8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241AC6A28(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241AC6B44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_241AC6BA4@<D0>(uint64_t a1@<X0>, double a2@<X1>, uint64_t a3@<X8>)
{
  v18[0] = a2;
  uint64_t v17 = sub_241CDB8B0();
  uint64_t v5 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CDB890();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_241CDAE10();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = (int *)type metadata accessor for TrendFeedItemStep();
  uint64_t v16 = v10[8];
  v15[1] = sub_241A313AC(0, &qword_26B0303B8);
  sub_241CDAE00();
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_241ACB88C(&qword_26B036898, MEMORY[0x263F8F0F8]);
  sub_241AC74D0(0, &qword_26B0367F0, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  sub_241AC6F3C();
  sub_241CDBC70();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F130], v17);
  *(void *)(a3 + v16) = sub_241CDB8C0();
  sub_241ACB310(a1, a3, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v11 = a3 + v10[7];
  uint64_t v12 = sub_241CD9A30();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 32))(v11, *(void *)&v18[0], v12);
  uint64_t v13 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  sub_241A37260(a1 + *(int *)(v13 + 32), a3 + v10[5]);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)(a1 + *(int *)(v13 + 36));
  swift_unknownObjectRetain();
  sub_241ACC2A8(a1, type metadata accessor for SummariesFullProfileExecutor.Request);
  double result = v18[0];
  *(_OWORD *)(a3 + v10[6]) = *(_OWORD *)v18;
  return result;
}

uint64_t type metadata accessor for TrendFeedItemStep()
{
  uint64_t result = qword_26B035850;
  if (!qword_26B035850) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_241AC6F3C()
{
  unint64_t result = qword_26B0367F8;
  if (!qword_26B0367F8)
  {
    sub_241AC74D0(255, &qword_26B0367F0, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0367F8);
  }
  return result;
}

void *sub_241AC6FC4(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    uint64_t v3 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    uint64_t v8 = (void *)a2[2];
    *a1 = v5;
    a1[1] = v7;
    a1[2] = v8;
    char v67 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
    uint64_t v9 = v67[6];
    uint64_t v10 = (char *)v3 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *((unsigned char *)v3 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v12 = _s8WorkPlanVMa();
    uint64_t v13 = *(int *)(v12 + 20);
    BOOL v65 = &v11[v13];
    uint64_t v66 = &v10[v13];
    uint64_t v14 = sub_241CD95E0();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_unknownObjectRetain();
    id v16 = v8;
    v15(v66, v65, v14);
    uint64_t v17 = v12;
    uint64_t v18 = *(int *)(v12 + 24);
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = sub_241CD78F0();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_241AC74D0(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = *(int *)(v17 + 28);
    uint64_t v25 = &v10[v24];
    uint64_t v26 = &v11[v24];
    sub_241AC7534();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = *(int *)(v17 + 32);
    uint64_t v29 = &v10[v28];
    uint64_t v30 = &v11[v28];
    sub_241AC75E4();
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
    {
      sub_241AC74D0(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
      memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
    }
    uint64_t v35 = v67[7];
    id v36 = *(void **)((char *)a2 + v35);
    *(void *)((char *)v3 + v35) = v36;
    uint64_t v37 = v67[8];
    uint64_t v38 = (char *)v3 + v37;
    uint64_t v39 = (char *)a2 + v37;
    long long v40 = *(_OWORD *)((char *)a2 + v37 + 24);
    *(_OWORD *)((char *)v3 + v37 + 24) = v40;
    uint64_t v41 = v40;
    uint64_t v42 = **(void (***)(char *, char *, uint64_t))(v40 - 8);
    id v43 = v36;
    v42(v38, v39, v41);
    *(_OWORD *)((char *)v3 + v67[9]) = *(_OWORD *)((char *)a2 + v67[9]);
    uint64_t v44 = v67[10];
    unint64_t v45 = *(void **)((char *)a2 + v44);
    *(void *)((char *)v3 + v44) = v45;
    uint64_t v46 = v67[11];
    uint64_t v47 = *(void **)((char *)a2 + v46);
    *(void *)((char *)v3 + v46) = v47;
    uint64_t v48 = a3[5];
    uint64_t v49 = (char *)v3 + v48;
    uint64_t v50 = (char *)a2 + v48;
    long long v51 = *(_OWORD *)((char *)a2 + v48 + 24);
    *(_OWORD *)((char *)v3 + v48 + 24) = v51;
    uint64_t v52 = v51;
    uint64_t v53 = **(void (***)(char *, char *, uint64_t))(v51 - 8);
    swift_unknownObjectRetain();
    id v54 = v45;
    id v55 = v47;
    v53(v49, v50, v52);
    uint64_t v56 = a3[7];
    *(_OWORD *)((char *)v3 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
    id v57 = (char *)v3 + v56;
    uint64_t v58 = (char *)a2 + v56;
    uint64_t v59 = sub_241CD9A30();
    unint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
    swift_unknownObjectRetain();
    v60(v57, v58, v59);
    uint64_t v61 = a3[8];
    uint64_t v62 = *(void **)((char *)a2 + v61);
    *(void *)((char *)v3 + v61) = v62;
    id v63 = v62;
  }
  return v3;
}

void sub_241AC74D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241AC7534()
{
  if (!qword_26B031AB0)
  {
    type metadata accessor for HKMCPregnancyState(255);
    sub_241ACB88C((unint64_t *)&unk_26B031F00, type metadata accessor for HKMCPregnancyState);
    unint64_t v0 = sub_241CD80A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031AB0);
    }
  }
}

void sub_241AC75E4()
{
  if (!qword_26B031C80)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B031F28);
    unint64_t v0 = sub_241CDAEC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B031C80);
    }
  }
}

void sub_241AC764C(uint64_t a1, int *a2)
{
  swift_unknownObjectRelease();

  int v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = a1 + v4[6];
  uint64_t v6 = (int *)_s8WorkPlanVMa();
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v5 + v6[6];
  uint64_t v10 = sub_241CD78F0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v5 + v6[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v5 + v6[8];
  sub_241AC75E4();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }

  sub_241A31190(a1 + v4[8]);
  swift_unknownObjectRelease();

  sub_241A31190(a1 + a2[5]);
  swift_unknownObjectRelease();
  uint64_t v18 = a1 + a2[7];
  uint64_t v19 = sub_241CD9A30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = *(void **)(a1 + a2[8]);
}

uint64_t sub_241AC78DC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  int v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  id v63 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = v63[6];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(a2 + v5);
  uint64_t v8 = (int *)_s8WorkPlanVMa();
  uint64_t v9 = v8[5];
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v7 + v9;
  uint64_t v12 = sub_241CD95E0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_unknownObjectRetain();
  id v14 = v4;
  v13(v10, v11, v12);
  uint64_t v15 = v8[6];
  uint64_t v16 = (void *)(v6 + v15);
  uint64_t v17 = (const void *)(v7 + v15);
  uint64_t v18 = sub_241CD78F0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_241AC74D0(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = v8[7];
  uint64_t v22 = v6 + v21;
  uint64_t v23 = v7 + v21;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = v8[8];
  uint64_t v26 = (void *)(v6 + v25);
  uint64_t v27 = (const void *)(v7 + v25);
  sub_241AC75E4();
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v28))
  {
    sub_241AC74D0(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v26, v27, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
  }
  uint64_t v32 = v63[7];
  uint64_t v33 = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = v33;
  uint64_t v34 = v63[8];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  long long v37 = *(_OWORD *)(a2 + v34 + 24);
  *(_OWORD *)(a1 + v34 + 24) = v37;
  uint64_t v38 = v37;
  uint64_t v39 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
  id v40 = v33;
  v39(v35, v36, v38);
  *(_OWORD *)(a1 + v63[9]) = *(_OWORD *)(a2 + v63[9]);
  uint64_t v41 = v63[10];
  uint64_t v42 = *(void **)(a2 + v41);
  *(void *)(a1 + v41) = v42;
  uint64_t v43 = v63[11];
  uint64_t v44 = *(void **)(a2 + v43);
  *(void *)(a1 + v43) = v44;
  uint64_t v45 = a3[5];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  long long v48 = *(_OWORD *)(a2 + v45 + 24);
  *(_OWORD *)(a1 + v45 + 24) = v48;
  uint64_t v49 = v48;
  uint64_t v50 = **(void (***)(uint64_t, uint64_t, uint64_t))(v48 - 8);
  swift_unknownObjectRetain();
  id v51 = v42;
  id v52 = v44;
  v50(v46, v47, v49);
  uint64_t v53 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = sub_241CD9A30();
  id v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16);
  swift_unknownObjectRetain();
  v57(v54, v55, v56);
  uint64_t v58 = a3[8];
  uint64_t v59 = *(void **)(a2 + v58);
  *(void *)(a1 + v58) = v59;
  id v60 = v59;
  return a1;
}

void *sub_241AC7D9C(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v5;
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  BOOL v72 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v9 = v72[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  uint64_t v12 = (int *)_s8WorkPlanVMa();
  uint64_t v13 = v12[5];
  id v14 = &v10[v13];
  uint64_t v15 = &v11[v13];
  uint64_t v16 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = v12[6];
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  uint64_t v20 = sub_241CD78F0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v71 = v18;
  LODWORD(v18) = v22(v18, 1, v20);
  int v23 = v22(v19, 1, v20);
  if (v18)
  {
    if (v23)
    {
      sub_241AC74D0(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      size_t v25 = *(void *)(*(void *)(v24 - 8) + 64);
      uint64_t v26 = v71;
LABEL_6:
      memcpy(v26, v19, v25);
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v71, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v71, 0, 1, v20);
  }
  else
  {
    if (v23)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v71, v20);
      sub_241AC74D0(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      size_t v25 = *(void *)(*(void *)(v27 - 8) + 64);
      uint64_t v26 = v71;
      goto LABEL_6;
    }
    (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v71, v19, v20);
  }
LABEL_9:
  uint64_t v28 = v12[7];
  uint64_t v29 = &v10[v28];
  uint64_t v30 = &v11[v28];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  uint64_t v32 = v12[8];
  uint64_t v33 = &v10[v32];
  uint64_t v34 = &v11[v32];
  sub_241AC75E4();
  uint64_t v36 = v35;
  uint64_t v37 = *(void *)(v35 - 8);
  uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v39 = v38(v33, 1, v35);
  int v40 = v38(v34, 1, v36);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v33, v34, v36);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v33, v36);
    goto LABEL_14;
  }
  if (v40)
  {
LABEL_14:
    sub_241AC74D0(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
    memcpy(v33, v34, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v33, v34, v36);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
LABEL_15:
  uint64_t v42 = v72[7];
  uint64_t v43 = *(void **)((char *)a2 + v42);
  uint64_t v44 = *(void **)((char *)a1 + v42);
  *(void *)((char *)a1 + v42) = v43;
  id v45 = v43;

  sub_241AC8320((void *)((char *)a1 + v72[8]), (void *)((char *)a2 + v72[8]));
  uint64_t v46 = v72[9];
  uint64_t v47 = (void *)((char *)a1 + v46);
  long long v48 = (void *)((char *)a2 + v46);
  uint64_t v49 = v48[1];
  *uint64_t v47 = *v48;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v47[1] = v49;
  uint64_t v50 = v72[10];
  id v51 = *(void **)((char *)a2 + v50);
  id v52 = *(void **)((char *)a1 + v50);
  *(void *)((char *)a1 + v50) = v51;
  id v53 = v51;

  uint64_t v54 = v72[11];
  uint64_t v55 = *(void **)((char *)a2 + v54);
  uint64_t v56 = *(void **)((char *)a1 + v54);
  *(void *)((char *)a1 + v54) = v55;
  id v57 = v55;

  sub_241AC8320((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]));
  uint64_t v58 = a3[6];
  uint64_t v59 = (void *)((char *)a1 + v58);
  id v60 = (void *)((char *)a2 + v58);
  uint64_t v61 = v60[1];
  *uint64_t v59 = *v60;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v59[1] = v61;
  uint64_t v62 = a3[7];
  id v63 = (char *)a1 + v62;
  uint64_t v64 = (char *)a2 + v62;
  uint64_t v65 = sub_241CD9A30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 24))(v63, v64, v65);
  uint64_t v66 = a3[8];
  char v67 = *(void **)((char *)a2 + v66);
  uint64_t v68 = *(void **)((char *)a1 + v66);
  *(void *)((char *)a1 + v66) = v67;
  id v69 = v67;

  return a1;
}

uint64_t *sub_241AC8320(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_241AC8550(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  int v9 = (int *)_s8WorkPlanVMa();
  uint64_t v10 = v9[5];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = (void *)(v7 + v14);
  uint64_t v16 = (const void *)(v8 + v14);
  uint64_t v17 = sub_241CD78F0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_241AC74D0(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = v9[7];
  uint64_t v21 = v7 + v20;
  uint64_t v22 = v8 + v20;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = v9[8];
  size_t v25 = (void *)(v7 + v24);
  uint64_t v26 = (const void *)(v8 + v24);
  sub_241AC75E4();
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_241AC74D0(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
  uint64_t v31 = v5[8];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  long long v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  *(void *)(a1 + v5[10]) = *(void *)(a2 + v5[10]);
  *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
  uint64_t v35 = a3[5];
  uint64_t v36 = a3[6];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  long long v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  long long v40 = *(_OWORD *)(a2 + v36);
  *(void *)(v37 + 32) = *(void *)(v38 + 32);
  *(_OWORD *)(a1 + v36) = v40;
  uint64_t v41 = a3[7];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = sub_241CD9A30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

void *sub_241AC8940(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v6 = a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[1] = v5;
  a1[2] = v6;

  uint64_t v71 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v8 = v71[6];
  int v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  uint64_t v11 = (int *)_s8WorkPlanVMa();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v9[v12];
  uint64_t v14 = &v10[v12];
  uint64_t v15 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  uint64_t v19 = sub_241CD78F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  uint64_t v70 = v17;
  LODWORD(v17) = v21(v17, 1, v19);
  int v22 = v21(v18, 1, v19);
  if (v17)
  {
    if (v22)
    {
      sub_241AC74D0(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      size_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
      size_t v25 = v70;
LABEL_6:
      memcpy(v25, v18, v24);
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v70, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v70, 0, 1, v19);
  }
  else
  {
    if (v22)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v70, v19);
      sub_241AC74D0(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      size_t v24 = *(void *)(*(void *)(v26 - 8) + 64);
      size_t v25 = v70;
      goto LABEL_6;
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v70, v18, v19);
  }
LABEL_9:
  uint64_t v27 = v11[7];
  uint64_t v28 = &v9[v27];
  uint64_t v29 = &v10[v27];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = v11[8];
  uint64_t v32 = &v9[v31];
  uint64_t v33 = &v10[v31];
  sub_241AC75E4();
  uint64_t v35 = v34;
  uint64_t v36 = *(void *)(v34 - 8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v32, 1, v34);
  int v39 = v37(v33, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v32, v33, v35);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v35);
    goto LABEL_14;
  }
  if (v39)
  {
LABEL_14:
    sub_241AC74D0(0, &qword_26B031C88, (uint64_t (*)(uint64_t))sub_241AC75E4, MEMORY[0x263F8D8F0]);
    memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v32, v33, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
LABEL_15:
  uint64_t v41 = v71[7];
  uint64_t v42 = *(void **)((char *)a1 + v41);
  *(void *)((char *)a1 + v41) = *(void *)((char *)a2 + v41);

  uint64_t v43 = v71[8];
  uint64_t v44 = (char *)a1 + v43;
  id v45 = (char *)a2 + v43;
  sub_241A31190((uint64_t)a1 + v43);
  long long v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  *((void *)v44 + 4) = *((void *)v45 + 4);
  uint64_t v47 = v71[9];
  long long v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  uint64_t v50 = v49[1];
  *long long v48 = *v49;
  swift_unknownObjectRelease();
  v48[1] = v50;
  uint64_t v51 = v71[10];
  id v52 = *(void **)((char *)a1 + v51);
  *(void *)((char *)a1 + v51) = *(void *)((char *)a2 + v51);

  uint64_t v53 = v71[11];
  uint64_t v54 = *(void **)((char *)a1 + v53);
  *(void *)((char *)a1 + v53) = *(void *)((char *)a2 + v53);

  uint64_t v55 = a3[5];
  uint64_t v56 = (char *)a1 + v55;
  id v57 = (char *)a2 + v55;
  sub_241A31190((uint64_t)a1 + v55);
  long long v58 = *((_OWORD *)v57 + 1);
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  *((_OWORD *)v56 + 1) = v58;
  *((void *)v56 + 4) = *((void *)v57 + 4);
  uint64_t v59 = a3[6];
  id v60 = (void *)((char *)a1 + v59);
  uint64_t v61 = (void *)((char *)a2 + v59);
  uint64_t v62 = v61[1];
  *id v60 = *v61;
  swift_unknownObjectRelease();
  v60[1] = v62;
  uint64_t v63 = a3[7];
  uint64_t v64 = (char *)a1 + v63;
  uint64_t v65 = (char *)a2 + v63;
  uint64_t v66 = sub_241CD9A30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
  uint64_t v67 = a3[8];
  uint64_t v68 = *(void **)((char *)a1 + v67);
  *(void *)((char *)a1 + v67) = *(void *)((char *)a2 + v67);

  return a1;
}

uint64_t sub_241AC8EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241AC8ED0);
}

uint64_t sub_241AC8ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_241CD9A30();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_241AC9000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241AC9014);
}

uint64_t sub_241AC9014(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_241CD9A30();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_241AC9144()
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD9A30();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_241AC922C(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  sub_241AABAD0();
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v10 = (uint64_t *)((char *)&v13 - v9);
  if (a1)
  {
    *unint64_t v10 = a1;
    swift_storeEnumTagMultiPayload();
    id v11 = a1;
  }
  else
  {
    sub_241ACB310(a4, (uint64_t)&v13 - v9, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
  }
  a2(v10);
  return sub_241ACC2A8((uint64_t)v10, (uint64_t (*)(void))sub_241AABAD0);
}

uint64_t sub_241AC9334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v78 = a2;
  uint64_t v79 = a3;
  uint64_t v70 = type metadata accessor for TrendFeedItemStep();
  uint64_t v73 = *(void *)(v70 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v70);
  uint64_t v77 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v66 = (uint64_t (*)(uint64_t))MEMORY[0x263F07920];
  uint64_t v67 = (char *)&v64 - v8;
  sub_241AC74D0(0, &qword_26B032000, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v64 - v10;
  uint64_t v12 = sub_241CD6EE0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v81 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v82 = (uint64_t)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (uint64_t *)((char *)&v64 - v18);
  uint64_t v20 = (void *)sub_241AC9A3C(a1);
  uint64_t v75 = v21;
  uint64_t v76 = v20;
  int v22 = (void (**)(void, void *))sub_241AC9CDC(a1);
  uint64_t v71 = v23;
  BOOL v72 = v22;
  swift_getObjectType();
  uint64_t v24 = sub_241CD7230();
  id v25 = objc_allocWithZone(MEMORY[0x263F0A7F8]);
  id v69 = (void *)v24;
  id v68 = objc_msgSend(v25, sel_initWithHealthStore_, v24);
  *(void *)&long long v80 = *(void *)(v4 + 16);
  uint64_t v26 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v27 = *(void **)(v4 + v26[11]);
  uint64_t v28 = *(void **)(v4 + v26[7]);
  uint64_t v29 = a1 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) + 28);
  uint64_t v30 = (uint64_t)v67;
  sub_241ACB290(v29, (uint64_t)v11, &qword_26B032000, v66);
  sub_241ACB310(v4, v30, (uint64_t (*)(void))type metadata accessor for TrendFeedItemStep);
  int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  uint64_t v65 = v12;
  if (v31 == 1)
  {
    uint64_t v32 = v30;
    uint64_t v33 = *(void **)(v30 + v26[10]);
    id v34 = (id)v80;
    id v35 = v27;
    id v36 = v28;
    id v37 = objc_msgSend(v33, sel_currentCalendar);
    sub_241CD6E50();

    uint64_t v30 = v32;
    sub_241ACB204((uint64_t)v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v81, v11, v12);
    id v38 = (id)v80;
    id v39 = v27;
    id v40 = v28;
  }
  sub_241ACC2A8(v30, (uint64_t (*)(void))type metadata accessor for TrendFeedItemStep);
  uint64_t v41 = v4 + v26[6];
  uint64_t v42 = _s8WorkPlanVMa();
  sub_241ACB290(v41 + *(int *)(v42 + 24), (uint64_t)v19 + v15[10], &qword_26B032040, MEMORY[0x263F45718]);
  uint64_t v43 = v69;
  uint64_t v44 = *(void **)(v4 + *(int *)(v70 + 32));
  uint64_t v45 = *(int *)(v70 + 24);
  void *v19 = v80;
  v19[1] = v43;
  uint64_t v46 = v4;
  uint64_t v64 = v4;
  uint64_t v47 = v68;
  _OWORD v19[2] = v68;
  v19[3] = v27;
  v19[4] = v28;
  long long v48 = (char *)v19 + v15[9];
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  long long v80 = *(_OWORD *)(v46 + v45);
  v49(v48, v81, v65);
  *(_OWORD *)((char *)v19 + v15[11]) = v80;
  *(void *)((char *)v19 + v15[12]) = v44;
  *((unsigned char *)v19 + v15[13]) = 0;
  uint64_t v50 = (char *)v19 + v15[14];
  uint64_t v51 = (uint64_t (**)())((char *)v19 + v15[15]);
  *uint64_t v51 = sub_241A7ABA0;
  v51[1] = 0;
  *((unsigned char *)v19 + v15[16]) = 1;
  sub_241AC7534();
  swift_unknownObjectRetain();
  id v52 = v44;
  uint64_t v81 = v47;
  *(void *)&long long v80 = v43;
  sub_241CD8060();
  char v53 = v85;
  *(void *)uint64_t v50 = v84;
  v50[8] = v53;
  sub_241ACB310((uint64_t)v19, v82, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  uint64_t v54 = v77;
  sub_241ACB310(v64, v77, (uint64_t (*)(void))type metadata accessor for TrendFeedItemStep);
  unint64_t v55 = (*(unsigned __int8 *)(v73 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  unint64_t v56 = (v74 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v57 = swift_allocObject();
  sub_241ACB6AC(v54, v57 + v55, (uint64_t (*)(void))type metadata accessor for TrendFeedItemStep);
  long long v58 = (void *)(v57 + v56);
  uint64_t v59 = v79;
  *long long v58 = v78;
  v58[1] = v59;
  swift_retain();
  id v60 = v76;
  uint64_t v61 = v72;
  sub_241B12768(v76, v75, v72, v71, &v84);
  uint64_t v83 = v84;
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = sub_241ACB714;
  *(void *)(v62 + 24) = v57;
  sub_241ACB7F4();
  sub_241ACB88C((unint64_t *)&qword_26B032700, (void (*)(uint64_t))sub_241ACB7F4);
  swift_retain();
  sub_241CDA6A0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_241ACB8D4(v61);
  sub_241ACB8D4(v60);

  sub_241ACC2A8(v82, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  return sub_241ACC2A8((uint64_t)v19, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
}

uint64_t sub_241AC9A3C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241CD7520();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *(void **)(a1 + 32);
  if (!v11) {
    return 1;
  }
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v13 = *(void **)(v2 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  *(void *)(inited + 32) = v13;
  unint64_t v22 = inited;
  sub_241CDB2E0();
  unint64_t v14 = v22;
  uint64_t v15 = v2 + *(int *)(type metadata accessor for TrendFeedItemStep() + 28);
  uint64_t v16 = sub_241CD9A30();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v10, v15, v16);
  swift_storeEnumTagMultiPayload();
  id v17 = v11;
  id v18 = v13;
  sub_241B7417C(v14, (uint64_t)v10, 1);
  swift_bridgeObjectRelease();
  sub_241ACC2A8((uint64_t)v10, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  sub_241CD7510();
  sub_241AC74D0(0, &qword_26B034F20, MEMORY[0x263F45618], MEMORY[0x263F8E0F8]);
  unint64_t v19 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20 + v19, v7, v4);
  return (uint64_t)v11;
}

uint64_t sub_241AC9CDC(uint64_t a1)
{
  uint64_t v3 = sub_241CD7520();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *(void **)(a1 + 16);
  uint64_t v10 = *(void **)(a1 + 24);
  if (v11 == (void *)1 || v10 == 0) {
    return 1;
  }
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  unint64_t v14 = *(void **)(v1 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  *(void *)(inited + 32) = v14;
  unint64_t v21 = inited;
  sub_241CDB2E0();
  unint64_t v15 = v21;
  swift_storeEnumTagMultiPayload();
  sub_241ACC264(v11, v10);
  id v16 = v10;
  id v17 = v14;
  sub_241B7417C(v15, (uint64_t)v9, 1);
  swift_bridgeObjectRelease();
  sub_241ACC2A8((uint64_t)v9, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  sub_241CD7510();
  sub_241AC74D0(0, &qword_26B034F20, MEMORY[0x263F45618], MEMORY[0x263F8E0F8]);
  unint64_t v18 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v19 + v18, v6, v3);

  return (uint64_t)v10;
}

uint64_t sub_241AC9F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v6 = type metadata accessor for TrendFeedItemStep();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  uint64_t v41 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = v8;
  uint64_t v43 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_241CD75A0();
  uint64_t v9 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  id v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v46 = a1;
  if (v12)
  {
    uint64_t v39 = a2;
    v50[0] = MEMORY[0x263F8EE78];
    sub_241A521D8(0, v12, 0);
    unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v14 = v9 + 16;
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
    uint64_t v47 = *(void *)(v14 + 56);
    long long v48 = v15;
    id v17 = (void (**)(char *, uint64_t))(v14 - 8);
    do
    {
      uint64_t v18 = v49;
      uint64_t v19 = v14;
      v48(v11, v16, v49);
      uint64_t v20 = sub_241CD74B0();
      uint64_t v22 = v21;
      (*v17)(v11, v18);
      uint64_t v13 = v50[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_241A521D8(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v50[0];
      }
      unint64_t v24 = *(void *)(v13 + 16);
      unint64_t v23 = *(void *)(v13 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_241A521D8(v23 > 1, v24 + 1, 1);
        uint64_t v13 = v50[0];
      }
      *(void *)(v13 + 16) = v24 + 1;
      uint64_t v25 = v13 + 16 * v24;
      *(void *)(v25 + 32) = v20;
      *(void *)(v25 + 40) = v22;
      v16 += v47;
      --v12;
      uint64_t v14 = v19;
    }
    while (v12);
    a2 = v39;
  }
  uint64_t v26 = sub_241C6A09C(v13);
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void **)(a2 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  uint64_t v28 = (void *)sub_241CDB4D0();
  uint64_t v29 = sub_241CD9950();
  uint64_t v30 = sub_241B2E7D8(v27, (uint64_t)v28, v29);
  swift_bridgeObjectRelease();

  if (*(void *)(v26 + 16) <= *(void *)(v30 + 16) >> 3)
  {
    v50[0] = v30;
    sub_241ACB918(v26);
    uint64_t v31 = v50[0];
  }
  else
  {
    uint64_t v31 = sub_241B6DC80(v26, v30);
  }
  sub_241A37260(a2 + *(int *)(v40 + 20), (uint64_t)v50);
  uint64_t v49 = v50[4];
  sub_241A311E0(v50, v50[3]);
  uint64_t v32 = swift_bridgeObjectRetain();
  sub_241A5A43C(v32);
  swift_bridgeObjectRelease();
  uint64_t v33 = v43;
  sub_241ACB310(a2, v43, (uint64_t (*)(void))type metadata accessor for TrendFeedItemStep);
  unint64_t v34 = (*(unsigned __int8 *)(v41 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  unint64_t v35 = (v42 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v36 = (void *)swift_allocObject();
  uint64_t v37 = v44;
  void v36[2] = v31;
  v36[3] = v37;
  void v36[4] = v45;
  sub_241ACB6AC(v33, (uint64_t)v36 + v34, (uint64_t (*)(void))type metadata accessor for TrendFeedItemStep);
  *(void *)((char *)v36 + v35) = v46;
  *(void *)((char *)v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v26;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_241CD7640();
  swift_release();
  swift_release();
  return sub_241A31190((uint64_t)v50);
}

void sub_241ACA36C(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v55 = a6;
  uint64_t v12 = sub_241CDA1A0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v50 - v17;
  if (a1)
  {
    id v19 = a1;
    sub_241CDA0F0();
    swift_bridgeObjectRetain();
    id v20 = a1;
    swift_bridgeObjectRetain();
    id v21 = a1;
    uint64_t v22 = sub_241CDA190();
    os_log_type_t v23 = sub_241CDB650();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v55 = a4;
      uint64_t v25 = v24;
      uint64_t v52 = swift_slowAlloc();
      v58[0] = v52;
      *(_DWORD *)uint64_t v25 = 136446722;
      uint64_t v54 = a3;
      uint64_t v26 = sub_241A33FE4(0xD000000000000011, 0x8000000241CED300, v58);
      uint64_t v56 = v13;
      uint64_t v57 = v26;
      sub_241CDBBF0();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_241CDB380();
      uint64_t v53 = v12;
      uint64_t v28 = v27;
      unint64_t v30 = v29;
      swift_bridgeObjectRelease();
      uint64_t v57 = sub_241A33FE4(v28, v30, v58);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 22) = 2082;
      uint64_t v57 = (uint64_t)a1;
      id v31 = a1;
      sub_241A3DA64();
      uint64_t v32 = sub_241CDB120();
      uint64_t v57 = sub_241A33FE4(v32, v33, v58);
      a3 = v54;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241A23000, v22, v23, "[%{public}s] Failed to delete %s: %{public}s", (uint8_t *)v25, 0x20u);
      uint64_t v34 = v52;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v34, -1, -1);
      MEMORY[0x245637F20](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v53);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    }
    id v45 = a1;
    a3(a1);
  }
  else
  {
    uint64_t v52 = a5;
    uint64_t v56 = v13;
    uint64_t v54 = a3;
    sub_241CDA0F0();
    swift_bridgeObjectRetain_n();
    unint64_t v35 = sub_241CDA190();
    os_log_type_t v36 = sub_241CDB670();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      v58[0] = v51;
      *(_DWORD *)uint64_t v37 = 136446466;
      uint64_t v53 = v12;
      uint64_t v57 = sub_241A33FE4(0xD000000000000011, 0x8000000241CED300, v58);
      sub_241CDBBF0();
      *(_WORD *)(v37 + 12) = 2080;
      v50[1] = v37 + 14;
      swift_bridgeObjectRetain();
      uint64_t v38 = a7;
      uint64_t v39 = sub_241CDB380();
      uint64_t v40 = a4;
      unint64_t v42 = v41;
      swift_bridgeObjectRelease();
      uint64_t v43 = v39;
      a7 = v38;
      uint64_t v57 = sub_241A33FE4(v43, v42, v58);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      a4 = v40;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v35, v36, "[%{public}s] Deleted %s", (uint8_t *)v37, 0x16u);
      uint64_t v44 = v51;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v44, -1, -1);
      MEMORY[0x245637F20](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v53);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v12);
    }
    uint64_t v46 = v52;
    uint64_t v47 = type metadata accessor for TrendFeedItemStep();
    sub_241A37260(v46 + *(int *)(v47 + 20), (uint64_t)v58);
    sub_241A311E0(v58, v58[3]);
    long long v48 = (void *)swift_allocObject();
    uint64_t v49 = v54;
    v48[2] = a7;
    v48[3] = v49;
    v48[4] = a4;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_241CD7620();
    swift_release();
    sub_241A31190((uint64_t)v58);
  }
}

uint64_t sub_241ACA98C(void *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7 = sub_241CDA1A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v39 - v12;
  if (a1)
  {
    id v14 = a1;
    sub_241CDA0F0();
    swift_bridgeObjectRetain();
    id v15 = a1;
    swift_bridgeObjectRetain();
    id v16 = a1;
    uint64_t v17 = sub_241CDA190();
    os_log_type_t v18 = sub_241CDB650();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v42 = v8;
      uint64_t v20 = v19;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v46 = v40;
      *(_DWORD *)uint64_t v20 = 136446722;
      uint64_t v44 = a3;
      uint64_t v45 = sub_241A33FE4(0xD000000000000011, 0x8000000241CED300, &v46);
      uint64_t v43 = a4;
      sub_241CDBBF0();
      *(_WORD *)(v20 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_241CDB380();
      uint64_t v41 = v7;
      uint64_t v22 = v21;
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      uint64_t v45 = sub_241A33FE4(v22, v24, &v46);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2082;
      uint64_t v45 = (uint64_t)a1;
      id v25 = a1;
      sub_241A3DA64();
      uint64_t v26 = sub_241CDB120();
      uint64_t v45 = sub_241A33FE4(v26, v27, &v46);
      a3 = v44;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241A23000, v17, v18, "[%{public}s] Failed to update %s: %{public}s", (uint8_t *)v20, 0x20u);
      uint64_t v28 = v40;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v28, -1, -1);
      MEMORY[0x245637F20](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v41);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
  }
  else
  {
    sub_241CDA0F0();
    swift_bridgeObjectRetain_n();
    unint64_t v29 = sub_241CDA190();
    os_log_type_t v30 = sub_241CDB670();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v42 = v8;
      uint64_t v32 = v31;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v46 = v40;
      *(_DWORD *)uint64_t v32 = 136446466;
      uint64_t v44 = a3;
      uint64_t v45 = sub_241A33FE4(0xD000000000000011, 0x8000000241CED300, &v46);
      uint64_t v43 = a4;
      sub_241CDBBF0();
      *(_WORD *)(v32 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_241CDB380();
      uint64_t v41 = v7;
      uint64_t v34 = v33;
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v45 = sub_241A33FE4(v34, v36, &v46);
      a3 = v44;
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v29, v30, "[%{public}s] Updated %s", (uint8_t *)v32, 0x16u);
      uint64_t v37 = v40;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v37, -1, -1);
      MEMORY[0x245637F20](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v41);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
  return a3(a1);
}

uint64_t sub_241ACAED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  sub_241ACB310(a1, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  sub_241ACB6AC((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  swift_retain();
  sub_241AC9334(a1, (uint64_t)sub_241ACB190, v10);
  return swift_release();
}

uint64_t sub_241ACB024()
{
  uint64_t v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void **)(v0 + v3);
  if (v6 != (void *)1)
  {
  }
  uint64_t v7 = *(void **)(v5 + 16);
  if (v7 != (void *)1)
  {
  }
  uint64_t v8 = v5 + *(int *)(v1 + 28);
  uint64_t v9 = sub_241CD6EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241ACB190(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  uint64_t v4 = *(void (**)(void *))(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_241AC922C(a1, v4, v5, v6);
}

uint64_t sub_241ACB204(uint64_t a1)
{
  sub_241AC74D0(0, &qword_26B032000, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241ACB290(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241AC74D0(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241ACB310(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241ACB378()
{
  uint64_t v1 = (int *)type metadata accessor for TrendFeedItemStep();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v22 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v23 = v0;
  uint64_t v4 = v0 + v3;
  swift_unknownObjectRelease();

  uint64_t v5 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v6 = v0 + v3 + v5[6];
  uint64_t v7 = (int *)_s8WorkPlanVMa();
  uint64_t v8 = v6 + v7[5];
  uint64_t v9 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v6 + v7[6];
  uint64_t v11 = sub_241CD78F0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v13 = v6 + v7[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v6 + v7[8];
  sub_241AC75E4();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }

  sub_241A31190(v4 + v5[8]);
  swift_unknownObjectRelease();

  sub_241A31190(v4 + v1[5]);
  swift_unknownObjectRelease();
  uint64_t v19 = v4 + v1[7];
  uint64_t v20 = sub_241CD9A30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);

  swift_release();

  return MEMORY[0x270FA0238](v23, ((v22 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_241ACB6AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241ACB714(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TrendFeedItemStep() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];

  return sub_241AC9F4C(a1, v5, v7, v8);
}

uint64_t sub_241ACB7B4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241ACB7EC(void *a1)
{
  return sub_241B1492C(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_241ACB7F4()
{
  if (!qword_26B032708)
  {
    sub_241AC74D0(255, &qword_26B034C18, MEMORY[0x263F45630], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032708);
    }
  }
}

uint64_t sub_241ACB88C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_241ACB8D4(void *result)
{
  if ((unint64_t)result >= 2)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_241ACB918(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_241ACBAC0(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_241ACBAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_241CDC1D0();
  swift_bridgeObjectRetain();
  sub_241CDB170();
  uint64_t v6 = sub_241CDC200();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  unint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_241CDC100() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_241CDC100() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_241C5C42C();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_241ACBC50(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_241ACBC50(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_241CDBC80();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_241CDC1D0();
        swift_bridgeObjectRetain();
        sub_241CDB170();
        uint64_t v10 = sub_241CDC200();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_241ACBE18()
{
  uint64_t v1 = (int *)type metadata accessor for TrendFeedItemStep();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v21 = *(void *)(*((void *)v1 - 1) + 64);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = v0 + ((v2 + 40) & ~v2);
  swift_unknownObjectRelease();

  uint64_t v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = v3 + v4[6];
  unint64_t v6 = (int *)_s8WorkPlanVMa();
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v5 + v6[6];
  uint64_t v10 = sub_241CD78F0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v5 + v6[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v5 + v6[8];
  sub_241AC75E4();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }

  sub_241A31190(v3 + v4[8]);
  swift_unknownObjectRelease();

  sub_241A31190(v3 + v1[5]);
  swift_unknownObjectRelease();
  uint64_t v18 = v3 + v1[7];
  uint64_t v19 = sub_241CD9A30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, ((((v21 + ((v2 + 40) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_241ACC168(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TrendFeedItemStep() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v1[2];
  uint64_t v7 = (void (*)(void))v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = *(void *)((char *)v1 + v5);
  uint64_t v10 = *(void *)((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_241ACA36C(a1, v6, v7, v8, (uint64_t)v1 + v4, v9, v10);
}

uint64_t sub_241ACC218()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241ACC258(void *a1)
{
  return sub_241ACA98C(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

id sub_241ACC264(id result, void *a2)
{
  if (result != (id)1)
  {
    id v4 = result;
    id v3 = a2;
    return v4;
  }
  return result;
}

uint64_t sub_241ACC2A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241ACC308(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241ACD8F0(0, &qword_26B034EF8, MEMORY[0x263F8E0C0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v13 - v10;
  sub_241A311E0(a1, a1[3]);
  sub_241ACD89C();
  sub_241CDC230();
  uint64_t v15 = a2;
  char v14 = 0;
  sub_241CD8AB0();
  sub_241ACD954(&qword_26B032140, MEMORY[0x263F44308]);
  sub_241CDC060();
  if (!v3)
  {
    uint64_t v15 = a3;
    char v14 = 1;
    type metadata accessor for SnidgetLevelChartView.ViewModel();
    sub_241ACD954(&qword_26B032B60, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
    sub_241CDC060();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

BOOL sub_241ACC520(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_241ACC538()
{
  return sub_241CDC200();
}

uint64_t sub_241ACC580()
{
  return sub_241CDC1E0();
}

uint64_t sub_241ACC5AC()
{
  return sub_241CDC200();
}

unint64_t sub_241ACC5F0()
{
  if (*v0) {
    return 0xD000000000000021;
  }
  else {
    return 0xD00000000000001CLL;
  }
}

uint64_t sub_241ACC630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_241ACD500(a1, a2);
  *a3 = result;
  return result;
}

void sub_241ACC658(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_241ACC664(uint64_t a1)
{
  unint64_t v2 = sub_241ACD89C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241ACC6A0(uint64_t a1)
{
  unint64_t v2 = sub_241ACD89C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241ACC6DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_241ACD5EC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_241ACC708(void *a1)
{
  return sub_241ACC308(a1, *v1, v1[1]);
}

unint64_t sub_241ACC728()
{
  unint64_t result = qword_26B038830;
  if (!qword_26B038830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B038830);
  }
  return result;
}

uint64_t sub_241ACC77C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F43CB8];
  sub_241ACD09C(0, &qword_26B0352D0, MEMORY[0x263F44308], MEMORY[0x263F43CB8]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v34 = sub_241CD86F0();
  uint64_t v32 = *(void *)(v34 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v34);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v30 - v7;
  sub_241ACE0A8(0, &qword_26B030A48, MEMORY[0x263F19B20]);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v30 - v10;
  sub_241ACCFB4(0, &qword_26B030A40, MEMORY[0x263F19B20]);
  uint64_t v33 = v12;
  MEMORY[0x270FA5388](v12);
  char v14 = (_OWORD *)((char *)&v30 - v13);
  sub_241ACCFB4(0, &qword_26B030A58, MEMORY[0x263F19B28]);
  uint64_t v35 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v30 - v16;
  sub_241ACD09C(0, &qword_26B030888, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, v2);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v30 - v19;
  long long v42 = *(_OWORD *)(v1 + 16);
  sub_241ACD01C((uint64_t)&v42 + 8, (uint64_t)v44, &qword_26B038888, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
  sub_241ACD01C((uint64_t)v44, (uint64_t)&v45, &qword_26B038888, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
  if (v45)
  {
    *(void *)&v40[0] = v45;
    sub_241ACD218(v1 + 32, (uint64_t)v41);
    sub_241ACD218((uint64_t)v41, (uint64_t)&v46);
    if (v46 == 1) {
      uint64_t v21 = 0;
    }
    else {
      uint64_t v21 = swift_retain();
    }
    uint64_t v43 = v21;
    sub_241ACD298((uint64_t)v44);
    sub_241ACD298((uint64_t)v44);
    type metadata accessor for SnidgetLevelChartView.ViewModel();
    swift_bridgeObjectRetain();
    sub_241CD8430();
    sub_241B9EC20((uint64_t)v20, (uint64_t)v40);
    long long v25 = v40[1];
    *char v14 = v40[0];
    v14[1] = v25;
    long long v26 = v40[3];
    _OWORD v14[2] = v40[2];
    void v14[3] = v26;
    swift_storeEnumTagMultiPayload();
    sub_241ACD3E8((uint64_t)v40);
    sub_241ACD1C4();
    sub_241ACD954(&qword_26B030978, MEMORY[0x263F44058]);
    sub_241CDAAE0();
    sub_241ACD2C4((uint64_t)v17, (uint64_t)v11);
    swift_storeEnumTagMultiPayload();
    sub_241ACD100();
    sub_241CDAAE0();
    sub_241ACD344((uint64_t)v44);
    sub_241ACD370((uint64_t)v17);
    return sub_241ACD44C((uint64_t)v40);
  }
  else
  {
    uint64_t v31 = v8;
    uint64_t v22 = v32;
    uint64_t v23 = (uint64_t (*)(uint64_t))MEMORY[0x263F44308];
    sub_241ACD01C((uint64_t)&v42, (uint64_t)&v43, &qword_26B032148, MEMORY[0x263F44308]);
    sub_241ACD01C((uint64_t)&v43, (uint64_t)v41, &qword_26B032148, v23);
    if (v41[0])
    {
      uint64_t v39 = v41[0];
      sub_241ACD218(v1 + 32, (uint64_t)&v46);
      sub_241ACD218((uint64_t)&v46, (uint64_t)v40);
      if (*(void *)&v40[0] == 1) {
        uint64_t v24 = 0;
      }
      else {
        uint64_t v24 = swift_retain();
      }
      uint64_t v38 = v24;
      sub_241ACD298((uint64_t)&v43);
      sub_241ACD298((uint64_t)&v43);
      sub_241CD8AB0();
      swift_bridgeObjectRetain();
      sub_241CD8430();
      sub_241CD8700();
      uint64_t v28 = v31;
      uint64_t v29 = v34;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v31, v6, v34);
      (*(void (**)(_OWORD *, char *, uint64_t))(v22 + 16))(v14, v28, v29);
      swift_storeEnumTagMultiPayload();
      sub_241ACD1C4();
      sub_241ACD954(&qword_26B030978, MEMORY[0x263F44058]);
      sub_241CDAAE0();
      sub_241ACD2C4((uint64_t)v17, (uint64_t)v11);
      swift_storeEnumTagMultiPayload();
      sub_241ACD100();
      sub_241CDAAE0();
      sub_241ACD344((uint64_t)&v43);
      sub_241ACD370((uint64_t)v17);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v28, v29);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_241ACD100();
      return sub_241CDAAE0();
    }
  }
}

uint64_t sub_241ACCE88@<X0>(uint64_t a1@<X8>)
{
  return sub_241ACC77C(a1);
}

__n128 sub_241ACCEC4@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  sub_241ACD4B0(0, &qword_26B030640, MEMORY[0x263F43CB8]);
  uint64_t v5 = v4;
  uint64_t v6 = sub_241CD8440();
  unint64_t v8 = v7;
  sub_241CD8410();
  sub_241CD8420();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  __n128 result = v10;
  a2->n128_u64[0] = v6;
  a2->n128_u64[1] = v8;
  a2[1] = v10;
  a2[2] = v10;
  return result;
}

uint64_t sub_241ACCF98()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_241ACCFB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD86F0();
    unint64_t v7 = a3(a1, &type metadata for SnidgetLevelChartView, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241ACD01C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241ACD09C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_241ACD09C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_241ACD100()
{
  unint64_t result = qword_26B030A50;
  if (!qword_26B030A50)
  {
    sub_241ACCFB4(255, &qword_26B030A58, MEMORY[0x263F19B28]);
    sub_241ACD1C4();
    sub_241ACD954(&qword_26B030978, MEMORY[0x263F44058]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030A50);
  }
  return result;
}

unint64_t sub_241ACD1C4()
{
  unint64_t result = qword_26B038610[0];
  if (!qword_26B038610[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B038610);
  }
  return result;
}

uint64_t sub_241ACD218(uint64_t a1, uint64_t a2)
{
  sub_241ACD4B0(0, qword_26B038890, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241ACD298(uint64_t a1)
{
  return a1;
}

uint64_t sub_241ACD2C4(uint64_t a1, uint64_t a2)
{
  sub_241ACCFB4(0, &qword_26B030A58, MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241ACD344(uint64_t a1)
{
  return a1;
}

uint64_t sub_241ACD370(uint64_t a1)
{
  sub_241ACCFB4(0, &qword_26B030A58, MEMORY[0x263F19B28]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241ACD3E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_241ACD440(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_241ACD44C(uint64_t a1)
{
  return a1;
}

uint64_t sub_241ACD4A4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

void sub_241ACD4B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241ACD500(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000241CDFAB0 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000241CDFAD0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_241ACD5EC(void *a1)
{
  sub_241ACD8F0(0, qword_26B030660, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  sub_241A311E0(a1, a1[3]);
  sub_241ACD89C();
  sub_241CDC220();
  if (v1)
  {
    uint64_t v8 = 0;
    sub_241A31190((uint64_t)a1);
  }
  else
  {
    sub_241CD8AB0();
    HIBYTE(v10) = 0;
    sub_241ACD954(&qword_26B0385C8, MEMORY[0x263F44308]);
    sub_241CDBFF0();
    uint64_t v8 = v11;
    type metadata accessor for SnidgetLevelChartView.ViewModel();
    HIBYTE(v10) = 1;
    sub_241ACD954(&qword_26B0385F8, (void (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
    swift_retain();
    sub_241CDBFF0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_retain();
    sub_241A31190((uint64_t)a1);
    swift_release();
  }
  swift_release();
  return v8;
}

unint64_t sub_241ACD89C()
{
  unint64_t result = qword_26B038818;
  if (!qword_26B038818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B038818);
  }
  return result;
}

void sub_241ACD8F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_241ACD89C();
    unint64_t v7 = a3(a1, &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241ACD954(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CardioFitnessSnidgetVisualizationView.ViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241ACDA68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessSnidgetVisualizationView.ViewModel.CodingKeys()
{
  return &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel.CodingKeys;
}

uint64_t destroy for CardioFitnessSnidgetVisualizationView.ViewModel()
{
  swift_release();

  return swift_release();
}

void *_s9Summaries37CardioFitnessSnidgetVisualizationViewV9ViewModelVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CardioFitnessSnidgetVisualizationView.ViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CardioFitnessSnidgetVisualizationView.ViewModel(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CardioFitnessSnidgetVisualizationView.ViewModel(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessSnidgetVisualizationView.ViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessSnidgetVisualizationView.ViewModel()
{
  return &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel;
}

uint64_t destroy for CardioFitnessSnidgetVisualizationView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t result = *(void *)(a1 + 32);
  if (result != 1)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for CardioFitnessSnidgetVisualizationView(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v5;
  unint64_t v7 = a2 + 4;
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v6 == 1)
  {
    *(_OWORD *)(a1 + 32) = *v7;
  }
  else
  {
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v8;
    swift_retain();
    swift_retain();
  }
  return a1;
}

void *assignWithCopy for CardioFitnessSnidgetVisualizationView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[4];
  if (a1[4] != 1)
  {
    if (v4 != 1)
    {
      a1[4] = v4;
      swift_retain();
      swift_release();
      a1[5] = a2[5];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_241ACDE78((uint64_t)(a1 + 4));
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  a1[4] = v4;
  a1[5] = a2[5];
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_241ACDE78(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for CardioFitnessSnidgetVisualizationView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for CardioFitnessSnidgetVisualizationView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  uint64_t v5 = a2[4];
  if (a1[4] != 1)
  {
    if (v5 != 1)
    {
      a1[4] = v5;
      swift_release();
      a1[5] = a2[5];
      swift_release();
      return a1;
    }
    sub_241ACDE78((uint64_t)(a1 + 4));
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardioFitnessSnidgetVisualizationView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessSnidgetVisualizationView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessSnidgetVisualizationView()
{
  return &type metadata for CardioFitnessSnidgetVisualizationView;
}

unint64_t sub_241ACE014()
{
  unint64_t result = qword_26B030A60;
  if (!qword_26B030A60)
  {
    sub_241ACE0A8(255, &qword_26B030A68, MEMORY[0x263F19B28]);
    sub_241ACD100();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030A60);
  }
  return result;
}

void sub_241ACE0A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_241ACCFB4(255, &qword_26B030A58, MEMORY[0x263F19B28]);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F1BA08]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_241ACE130()
{
  unint64_t result = qword_268D42910;
  if (!qword_268D42910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42910);
  }
  return result;
}

unint64_t sub_241ACE188()
{
  unint64_t result = qword_26B038828;
  if (!qword_26B038828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B038828);
  }
  return result;
}

unint64_t sub_241ACE1E0()
{
  unint64_t result = qword_26B038820;
  if (!qword_26B038820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B038820);
  }
  return result;
}

void **sub_241ACE234(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    unint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(void **)((char *)a2 + v6);
    *(void *)unint64_t v7 = v9;
    v7[8] = *((unsigned char *)a2 + v6 + 8);
    uint64_t v10 = *(void **)((char *)a2 + v6 + 16);
    *((void *)v7 + 2) = v10;
    uint64_t v11 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v12 = *(int *)(v11 + 28);
    uint64_t v22 = &v8[v12];
    uint64_t v23 = &v7[v12];
    uint64_t v13 = sub_241CD7DE0();
    char v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v15 = v4;
    id v16 = v9;
    id v17 = v10;
    v14(v23, v22, v13);
    uint64_t v18 = *(int *)(v11 + 32);
    uint64_t v19 = *(void **)&v8[v18];
    *(void *)&v7[v18] = v19;
    id v20 = v19;
  }
  return v5;
}

void sub_241ACE36C(id *a1, uint64_t a2)
{
  uint64_t v4 = (id *)((char *)a1 + *(int *)(a2 + 20));
  uint64_t v5 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v6 = (char *)v4 + *(int *)(v5 + 28);
  uint64_t v7 = sub_241CD7DE0();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = *(id *)((char *)v4 + *(int *)(v5 + 32));
}

void **sub_241ACE41C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = *(void **)((char *)a2 + v5);
  *(void *)uint64_t v6 = v8;
  v6[8] = *((unsigned char *)a2 + v5 + 8);
  uint64_t v9 = *(void **)((char *)a2 + v5 + 16);
  *((void *)v6 + 2) = v9;
  uint64_t v10 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v11 = *(int *)(v10 + 28);
  uint64_t v21 = &v7[v11];
  uint64_t v22 = &v6[v11];
  uint64_t v12 = sub_241CD7DE0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  id v14 = v4;
  id v15 = v8;
  id v16 = v9;
  v13(v22, v21, v12);
  uint64_t v17 = *(int *)(v10 + 32);
  uint64_t v18 = *(void **)&v7[v17];
  *(void *)&v6[v17] = v18;
  id v19 = v18;
  return a1;
}

void **sub_241ACE508(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = *(void **)((char *)a1 + v9);
  uint64_t v13 = *(void **)((char *)a2 + v9);
  *(void *)uint64_t v10 = v13;
  id v14 = v13;

  v10[8] = v11[8];
  id v15 = (void *)*((void *)v11 + 2);
  id v16 = (void *)*((void *)v10 + 2);
  *((void *)v10 + 2) = v15;
  id v17 = v15;

  uint64_t v18 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v19 = *(int *)(v18 + 28);
  id v20 = &v10[v19];
  uint64_t v21 = &v11[v19];
  uint64_t v22 = sub_241CD7DE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = *(int *)(v18 + 32);
  uint64_t v24 = *(void **)&v10[v23];
  long long v25 = *(void **)&v11[v23];
  *(void *)&v10[v23] = v25;
  id v26 = v25;

  return a1;
}

void *sub_241ACE600(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(void *)uint64_t v5 = *(void *)((char *)a2 + v4);
  v5[8] = *((unsigned char *)a2 + v4 + 8);
  *((void *)v5 + 2) = *(void *)((char *)a2 + v4 + 16);
  uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v8 = *(int *)(v7 + 28);
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v6[v8];
  uint64_t v11 = sub_241CD7DE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(void *)&v5[*(int *)(v7 + 32)] = *(void *)&v6[*(int *)(v7 + 32)];
  return a1;
}

void **sub_241ACE6C0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void **)((char *)a1 + v7);
  *(void *)uint64_t v8 = *(void *)v9;

  v8[8] = v9[8];
  uint64_t v11 = (void *)*((void *)v8 + 2);
  *((void *)v8 + 2) = *((void *)v9 + 2);

  uint64_t v12 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v13 = *(int *)(v12 + 28);
  id v14 = &v8[v13];
  id v15 = &v9[v13];
  uint64_t v16 = sub_241CD7DE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = *(int *)(v12 + 32);
  uint64_t v18 = *(void **)&v8[v17];
  *(void *)&v8[v17] = *(void *)&v9[v17];

  return a1;
}

uint64_t sub_241ACE7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241ACE7BC);
}

uint64_t sub_241ACE7BC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241ACE86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241ACE880);
}

void *sub_241ACE880(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StateOfMindSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031D40;
  if (!qword_26B031D40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241ACE974()
{
  uint64_t result = type metadata accessor for SnidgetFeedItemGeneratorRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241ACEA10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241ACEA5C()
{
  return sub_241ACEB60((unint64_t *)&qword_26B0320F0);
}

void sub_241ACEA90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241ACEA10(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241ACEB2C()
{
  return sub_241ACEB60((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241ACEB60(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241ACEA90(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    int v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241ACEA10((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241ACEA10(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241ACEC4C(uint64_t a1)
{
  uint64_t result = sub_241ACEA10(&qword_26B037E88, (void (*)(uint64_t))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_241ACECA4(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v116 = a2;
  uint64_t v8 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35800(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v115 = (char *)&v100 - v13;
  uint64_t v14 = sub_241CD6D00();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v111 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35800(0, &qword_26B038880, MEMORY[0x263F45770], v11);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v114 = (char *)&v100 - v17;
  sub_241A35800(0, &qword_26B031AD8, MEMORY[0x263F44508], v11);
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v110 = (char *)&v100 - v19;
  sub_241A35800(0, &qword_26B0320B0, MEMORY[0x263F43F20], v11);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v100 - v21;
  sub_241A35800(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828], v11);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v109 = (uint64_t)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v112 = (char *)&v100 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v118 = (uint64_t)&v100 - v28;
  uint64_t v119 = sub_241CD69B0();
  uint64_t v113 = *(void *)(v119 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v119);
  uint64_t v31 = (char *)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v117 = (char *)&v100 - v32;
  id v33 = objc_msgSend(self, sel_sharedBehavior);
  if (!v33)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v34 = v33;
  id v35 = objc_msgSend(v33, sel_features);

  if (!v35)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unsigned int v36 = objc_msgSend(v35, sel_chamomile);

  if (!v36)
  {
    sub_241A41340();
    swift_allocError();
    unsigned char *v44 = 0;
LABEL_10:
    swift_willThrow();
    return;
  }
  uint64_t v107 = v31;
  uint64_t v108 = a3;
  uint64_t v37 = self;
  uint64_t v38 = (void *)*v5;
  id v39 = objc_msgSend(v37, sel_sharedInstanceForHealthStore_, *v5);
  if (!v39)
  {
LABEL_22:
    __break(1u);
    return;
  }
  uint64_t v40 = v39;
  id v41 = objc_msgSend(self, sel_stateOfMindType);
  id v42 = objc_msgSend(v40, sel_displayTypeForObjectType_, v41);

  if (!v42)
  {
    sub_241A3A824();
    swift_allocError();
    goto LABEL_10;
  }
  sub_241ADF618(a1);
  if (v4)
  {

    return;
  }
  uint64_t v45 = v43;
  id v106 = v42;
  uint64_t v46 = v108;
  if (!v43) {
    goto LABEL_19;
  }
  sub_241AD062C();
  id v47 = v45;
  id v105 = (id)sub_241ACF928(v47);
  if (!v105)
  {

LABEL_19:
    uint64_t v91 = sub_241CD7A10();
    uint64_t v92 = (uint64_t)v114;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v114, 1, 1, v91);
    uint64_t v93 = sub_241CD6810();
    uint64_t v94 = (uint64_t)v115;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v115, 1, 1, v93);
    uint64_t v95 = v116;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v92, v95, v94, v10);
    sub_241CD89A0();
    uint64_t v96 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v22, 1, 1, v96);
    id v97 = v106;
    uint64_t v98 = sub_241CD8990();
    sub_241A9260C(0);
    sub_241AD19C8((uint64_t)v10, v46 + *(int *)(v99 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    *(void *)(v46 + 8) = 0;
    *(void *)(v46 + 16) = 0;
    *(void *)uint64_t v46 = v98;
    *(unsigned char *)(v46 + 24) = 1;
    sub_241AD1BF4((uint64_t)v10, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  id v104 = v47;
  long long v48 = (id *)((char *)v5 + *(int *)(type metadata accessor for StateOfMindSnidgetFeedItemModelProvider() + 20));
  uint64_t v49 = *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32);
  unint64_t v101 = v48;
  uint64_t v50 = *(id *)((char *)v48 + v49);
  type metadata accessor for MostRecentSampleSnidgetStringBuilder();
  uint64_t inited = (void *)swift_initStackObject();
  inited[2] = v38;
  uint64_t v52 = self;
  id v53 = v50;
  id v54 = v38;
  id v55 = objc_msgSend(v52, sel_sharedInstanceForHealthStore_, v54);
  inited[4] = v55;
  if (!v50)
  {
    id v56 = v55;
    id v53 = objc_msgSend(v56, sel_createHKUnitPreferenceController);
  }
  uint64_t v57 = v118;

  inited[3] = v53;
  id v58 = (id)HKUILocalizedStringForStateOfMind();
  sub_241CDB0D0();

  SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
  swift_bridgeObjectRelease();
  uint64_t v103 = inited;
  uint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56);
  v102(v57, 1, 1, v119);
  unint64_t v59 = sub_241CDB620();
  uint64_t v60 = sub_241CDB610();
  sub_241AD0794(v59, v60);
  uint64_t v62 = v61;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v63 = (uint64_t)v112;
  if (v62)
  {
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    uint64_t v64 = v118;
    sub_241AD16D0(v118);
    v102(v63, 0, 1, v119);
    sub_241AD175C(v63, v64);
  }
  sub_241CD89A0();
  sub_241A3A9CC();
  uint64_t v66 = *(int *)(v65 + 48);
  id v100 = v106;
  objc_msgSend(v104, sel_dateData);
  id v67 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  v22[v66] = 0;
  uint64_t v68 = *MEMORY[0x263F43F18];
  uint64_t v69 = sub_241CD8610();
  uint64_t v70 = *(void *)(v69 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 104))(v22, v68, v69);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v22, 0, 1, v69);
  id v106 = (id)sub_241CD8990();
  uint64_t v71 = v119;
  v102(v63, 1, 1, v119);
  uint64_t v72 = v113;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v107, v117, v71);
  sub_241AD163C(v118, v109);
  uint64_t v120 = 0x5F74656764696E53;
  unint64_t v121 = 0xE800000000000000;
  id v73 = v101[2];
  id v74 = objc_msgSend(v73, sel_description);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  uint64_t v75 = v110;
  sub_241CD8E50();
  swift_bridgeObjectRelease();
  uint64_t v76 = sub_241CD8E70();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v75, 0, 1, v76);
  sub_241CD8FF0();
  swift_allocObject();
  uint64_t v77 = sub_241CD8FE0();
  id v78 = v104;
  objc_msgSend(v104, sel_valence);
  uint64_t v80 = v79;
  uint64_t v81 = v78;
  objc_msgSend(v78, sel_dateData);
  id v82 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v83 = (uint64_t)v114;
  sub_241CD79D0();
  uint64_t v84 = sub_241CD7A10();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v83, 0, 1, v84);
  uint64_t v85 = sub_241CD6810();
  uint64_t v86 = (uint64_t)v115;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v115, 1, 1, v85);
  sub_241A9260C(0);
  uint64_t v88 = v108;
  unint64_t v89 = (unsigned char *)(v108 + *(int *)(v87 + 52));
  uint64_t v90 = v116;
  swift_bridgeObjectRetain();
  sub_241B4A1A8(1, v83, v90, v86, v89);
  swift_release();

  *(void *)uint64_t v88 = v106;
  *(void *)(v88 + 8) = v77;
  *(void *)(v88 + 16) = v80;
  *(unsigned char *)(v88 + 24) = 0;
  sub_241AD16D0(v118);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v117, v119);
}

unint64_t sub_241ACF928(void *a1)
{
  uint64_t v2 = sub_241CD6D00();
  MEMORY[0x270FA5388](v2 - 8);
  if (!objc_msgSend(a1, sel_hasDateData)
    || !objc_msgSend(a1, sel_hasReflectiveInterval)
    || (objc_msgSend(a1, sel_reflectiveInterval), !objc_msgSend(a1, sel_hasValence)))
  {

    return 0;
  }
  unint64_t result = (unint64_t)objc_msgSend(a1, sel_labelsCount);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result;
    id v5 = a1;
    sub_241AD066C(0, v4, v5, (SEL *)&selRef_labelsAtIndex_, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_241AF7AB0);

    unint64_t result = (unint64_t)objc_msgSend(v5, sel_domainsCount);
    if ((result & 0x8000000000000000) == 0)
    {
      uint64_t v6 = result;
      id v7 = v5;
      sub_241AD066C(0, v6, v7, (SEL *)&selRef_domainsAtIndex_, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_241AF7A90);

      objc_msgSend(v7, sel_dateData);
      id v8 = (id)HKDecodeDateForValue();
      sub_241CD6CB0();

      objc_msgSend(v7, sel_valence);
      sub_241B5920C(MEMORY[0x263F8EE78]);
      uint64_t v9 = sub_241CDB600();

      return v9;
    }
  }
  __break(1u);
  return result;
}

int64_t sub_241ACFB40(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_241ACFB84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241AD19C8(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241ACFBBC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_241ACFBE0()
{
  return 0x65636E656C6176;
}

uint64_t sub_241ACFBF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65636E656C6176 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_241CDC100();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_241ACFC90(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_241ACFC9C(uint64_t a1)
{
  unint64_t v2 = sub_241AD1CA0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241ACFCD8(uint64_t a1)
{
  unint64_t v2 = sub_241AD1CA0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241ACFD14@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_241AD1CF4(0, &qword_268D42940, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_241A311E0(a1, a1[3]);
  sub_241AD1CA0();
  sub_241CDC220();
  if (v2) {
    return sub_241A31190((uint64_t)a1);
  }
  sub_241CDC020();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = sub_241A31190((uint64_t)a1);
  *a2 = v11;
  return result;
}

uint64_t sub_241ACFEA4(void *a1)
{
  sub_241AD1CF4(0, &qword_26B034EF0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_241A311E0(a1, a1[3]);
  sub_241AD1CA0();
  sub_241CDC230();
  sub_241CDC090();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_241ACFFF0()
{
  unint64_t result = qword_26B033D58;
  if (!qword_26B033D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033D58);
  }
  return result;
}

uint64_t sub_241AD0044@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_241CD7EF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD7EE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AD1B30();
  uint64_t v11 = v10 - 8;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v21 - v15;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F55200], v2);
  sub_241CD7ED0();
  sub_241CDADB0();
  sub_241CDA890();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v14, v9, v6);
  uint64_t v17 = &v14[*(int *)(v11 + 44)];
  long long v18 = v21[1];
  *(_OWORD *)uint64_t v17 = v21[0];
  *((_OWORD *)v17 + 1) = v18;
  *((_OWORD *)v17 + 2) = v21[2];
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_241AD1B90((uint64_t)v14, (uint64_t)v16);
  sub_241AD19C8((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))sub_241AD1B30);
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  sub_241AD1AC8();
  sub_241AD19C8((uint64_t)v14, a1 + *(int *)(v19 + 48), (uint64_t (*)(void))sub_241AD1B30);
  sub_241AD1BF4((uint64_t)v16, (uint64_t (*)(void))sub_241AD1B30);
  return sub_241AD1BF4((uint64_t)v14, (uint64_t (*)(void))sub_241AD1B30);
}

uint64_t sub_241AD031C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_241CDAA70();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_241AD1A30();
  return sub_241AD0044(a1 + *(int *)(v2 + 44));
}

double sub_241AD036C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  sub_241AD1C54(0, &qword_268D42938, (uint64_t)&type metadata for StateOfMindSnidgetVisualizationView.ViewModel, MEMORY[0x263F43CB8]);
  uint64_t v5 = v4;
  sub_241CD8410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  double result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_241AD0410()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241AD042C()
{
  return sub_241AD047C(&qword_26B038380, &qword_26B038388, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241AD047C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241AD0510(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241AD04C0()
{
  return sub_241AD047C(&qword_26B032DD0, &qword_26B032DD8, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

void sub_241AD0510(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241ACEA90(255, &qword_26B032118, MEMORY[0x263F44150]);
    v9[0] = v6;
    v9[1] = &type metadata for StateOfMindSnidgetVisualizationView;
    _OWORD v9[2] = sub_241A3F5B0();
    v9[3] = sub_241A92744();
    v9[4] = sub_241ACEB60((unint64_t *)&qword_26B0320F0);
    v9[5] = sub_241ACEB60((unint64_t *)&qword_26B0320E0);
    v9[6] = sub_241A92798();
    v9[7] = sub_241A927EC();
    unint64_t v7 = a3(a1, v9);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_241AD062C()
{
  unint64_t result = qword_26B034D80;
  if (!qword_26B034D80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B034D80);
  }
  return result;
}

uint64_t sub_241AD066C(uint64_t result, uint64_t a2, id a3, SEL *a4, uint64_t (*a5)(BOOL, uint64_t, uint64_t, uint64_t))
{
  if (result == a2)
  {
    return MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = result;
    if (a2 >= result)
    {
      uint64_t v5 = MEMORY[0x263F8EE78];
      while (v7 < a2)
      {
        id v10 = objc_msgSend(a3, *a4, v7);
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          unint64_t result = a5(0, *(void *)(v5 + 16) + 1, 1, v5);
          uint64_t v5 = result;
        }
        unint64_t v12 = *(void *)(v5 + 16);
        unint64_t v11 = *(void *)(v5 + 24);
        if (v12 >= v11 >> 1)
        {
          unint64_t result = a5(v11 > 1, v12 + 1, 1, v5);
          uint64_t v5 = result;
        }
        ++v7;
        *(void *)(v5 + 16) = v12 + 1;
        *(void *)(v5 + 8 * v12 + 32) = v10;
        if (a2 == v7) {
          return v5;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_241AD0794(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD6DD0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CDB070();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241AD186C(0, &qword_26B031FA0, MEMORY[0x263F066C0]);
  uint64_t v132 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v128 = (char *)&v106 - v12;
  sub_241AD186C(0, &qword_26B031F98, MEMORY[0x263F06698]);
  uint64_t v135 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v131 = (char *)&v106 - v15;
  sub_241AD186C(0, &qword_26B031FB0, MEMORY[0x263F066C8]);
  uint64_t v129 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v127 = (char *)&v106 - v18;
  int64_t v19 = *(void *)(a1 + 16);
  unint64_t v20 = *(void *)(a2 + 16);
  uint64_t v21 = MEMORY[0x263F8EE78];
  int64_t v116 = v19;
  uint64_t v115 = v9;
  if (v19)
  {
    if (!v20)
    {
      uint64_t v133 = v14;
      uint64_t v134 = v11;
      uint64_t v125 = v17;
      uint64_t v113 = v6;
      uint64_t v22 = MEMORY[0x263F8EE78];
      goto LABEL_11;
    }
  }
  else if (!v20)
  {
    return 0;
  }
  unint64_t v130 = a1;
  uint64_t v133 = v14;
  uint64_t v134 = v11;
  uint64_t v125 = v17;
  uint64_t v113 = v6;
  uint64_t v137 = MEMORY[0x263F8EE78];
  sub_241A521D8(0, v20, 0);
  uint64_t v23 = 0;
  uint64_t v22 = v137;
  do
  {
    id v24 = (id)HKUILocalizedStringForStateOfMindLabel();
    uint64_t v25 = sub_241CDB0D0();
    uint64_t v27 = v26;

    uint64_t v137 = v22;
    unint64_t v29 = *(void *)(v22 + 16);
    unint64_t v28 = *(void *)(v22 + 24);
    if (v29 >= v28 >> 1)
    {
      sub_241A521D8(v28 > 1, v29 + 1, 1);
      uint64_t v22 = v137;
    }
    ++v23;
    *(void *)(v22 + 16) = v29 + 1;
    uint64_t v30 = v22 + 16 * v29;
    *(void *)(v30 + 32) = v25;
    *(void *)(v30 + 40) = v27;
  }
  while (v20 != v23);
  if (!v19)
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
    goto LABEL_17;
  }
  a1 = v130;
  uint64_t v21 = MEMORY[0x263F8EE78];
LABEL_11:
  uint64_t v137 = v21;
  sub_241A521D8(0, v19, 0);
  uint64_t v31 = v137;
  unint64_t v32 = a1 + 32;
  do
  {
    v32 += 8;
    id v33 = (id)HKUILocalizedStringForStateOfMindDomain();
    uint64_t v34 = sub_241CDB0D0();
    uint64_t v36 = v35;

    uint64_t v137 = v31;
    unint64_t v38 = *(void *)(v31 + 16);
    unint64_t v37 = *(void *)(v31 + 24);
    if (v38 >= v37 >> 1)
    {
      sub_241A521D8(v37 > 1, v38 + 1, 1);
      uint64_t v31 = v137;
    }
    *(void *)(v31 + 16) = v38 + 1;
    uint64_t v39 = v31 + 16 * v38;
    *(void *)(v39 + 32) = v34;
    *(void *)(v39 + 40) = v36;
    --v19;
  }
  while (v19);
LABEL_17:
  uint64_t v136 = v22;
  unsigned int v119 = *MEMORY[0x263F06690];
  uint64_t v40 = v133;
  unint64_t v121 = *(void (**)(char *))(v133 + 104);
  uint64_t v122 = v133 + 104;
  id v41 = v131;
  v121(v131);
  unsigned int v120 = *MEMORY[0x263F066A8];
  uint64_t v42 = v134;
  uint64_t v123 = *(void (**)(char *))(v134 + 104);
  uint64_t v124 = v134 + 104;
  uint64_t v43 = v128;
  uint64_t v44 = v132;
  v123(v128);
  sub_241AD1C54(0, (unint64_t *)&qword_26B034C78, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  unint64_t v130 = v45;
  unint64_t v46 = sub_241AD17F0();
  id v47 = v127;
  unint64_t v48 = v46;
  sub_241CD66E0();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v42 + 8);
  uint64_t v134 = v42 + 8;
  uint64_t v117 = v49;
  v49(v43, v44);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v133 = v40 + 8;
  uint64_t v118 = v50;
  uint64_t v51 = v41;
  uint64_t v52 = v135;
  v50(v41, v135);
  unint64_t v126 = sub_241AD1954();
  uint64_t v53 = v129;
  sub_241CDB230();
  uint64_t v125 = *(void *)(v125 + 8);
  ((void (*)(char *, uint64_t))v125)(v47, v53);
  uint64_t v112 = v137;
  unint64_t v114 = v138;
  uint64_t v136 = v31;
  ((void (*)(char *, void, uint64_t))v121)(v51, v119, v52);
  uint64_t v54 = v132;
  ((void (*)(char *, void, uint64_t))v123)(v43, v120, v132);
  unint64_t v55 = v130;
  sub_241CD66E0();
  v117(v43, v54);
  v118(v131, v135);
  unint64_t v111 = v48;
  sub_241CDB230();
  ((void (*)(char *, uint64_t))v125)(v47, v53);
  uint64_t v56 = v20 + v116;
  if (__OFADD__(v20, v116))
  {
    __break(1u);
LABEL_55:
    swift_once();
LABEL_20:
    id v58 = (id)qword_26B0413A0;
    sub_241CD6DC0();
    uint64_t v109 = sub_241CDB110();
    uint64_t v110 = v59;
    unint64_t v108 = v55;
    if (v20 >= 6)
    {
      int64_t v116 = v53;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v22 + 16) >= 6uLL) {
        uint64_t v69 = 6;
      }
      else {
        uint64_t v69 = *(void *)(v22 + 16);
      }
      sub_241CDC120();
      swift_unknownObjectRetain_n();
      uint64_t v70 = swift_dynamicCastClass();
      if (!v70)
      {
        swift_bridgeObjectRelease();
        uint64_t v70 = MEMORY[0x263F8EE78];
      }
      uint64_t v71 = *(void *)(v70 + 16);
      swift_release();
      if (v71 == v69)
      {
        uint64_t v72 = swift_dynamicCastClass();
        if (!v72)
        {
          swift_bridgeObjectRelease();
          uint64_t v72 = MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v72 = sub_241A5A544(v22, v22 + 32, 0, (2 * v69) | 1);
      }
      swift_bridgeObjectRelease();
      uint64_t v136 = v72;
      id v73 = v131;
      uint64_t v74 = v135;
      ((void (*)(char *, void, uint64_t))v121)(v131, v119, v135);
      uint64_t v75 = v128;
      uint64_t v76 = v132;
      ((void (*)(char *, void, uint64_t))v123)(v128, v120, v132);
      uint64_t v77 = v127;
      sub_241CD66E0();
      v117(v75, v76);
      v118(v73, v74);
      uint64_t v78 = v129;
      sub_241CDB230();
      ((void (*)(char *, uint64_t))v125)(v77, v78);
      swift_release();
      uint64_t v79 = v137;
      unint64_t v80 = v138;
      sub_241A35800(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
      uint64_t v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = xmmword_241CEB720;
      uint64_t v82 = MEMORY[0x263F8D750];
      *(void *)(v81 + 56) = MEMORY[0x263F8D6C8];
      *(void *)(v81 + 64) = v82;
      *(void *)(v81 + 32) = v116;
      *(void *)(v81 + 96) = MEMORY[0x263F8D310];
      *(void *)(v81 + 104) = sub_241A55A74();
      *(void *)(v81 + 72) = v79;
      *(void *)(v81 + 80) = v80;
      uint64_t v83 = sub_241CDB0F0();
      unint64_t v85 = v84;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v68 = 0;
      unint64_t v57 = 0xE000000000000000;
      goto LABEL_42;
    }
    swift_bridgeObjectRelease();
    unint64_t v60 = 6 - v20;
    int64_t v62 = sub_241ACFB40(6 - v20, v31);
    uint64_t v64 = v63;
    unint64_t v66 = v65;
    if (v65)
    {
      uint64_t v107 = v61;
      sub_241CDC120();
      swift_unknownObjectRetain_n();
      uint64_t v86 = swift_dynamicCastClass();
      if (!v86)
      {
        swift_unknownObjectRelease();
        uint64_t v86 = MEMORY[0x263F8EE78];
      }
      uint64_t v87 = *(void *)(v86 + 16);
      swift_release();
      if (__OFSUB__(v66 >> 1, v64))
      {
        __break(1u);
      }
      else if (v87 == (v66 >> 1) - v64)
      {
        uint64_t v67 = swift_dynamicCastClass();
        if (!v67)
        {
          swift_unknownObjectRelease();
          uint64_t v67 = MEMORY[0x263F8EE78];
        }
        goto LABEL_40;
      }
      swift_unknownObjectRelease();
      uint64_t v61 = v107;
    }
    uint64_t v67 = sub_241A5A544(v62, v61, v64, v66);
LABEL_40:
    v116 -= v60;
    swift_unknownObjectRelease();
    uint64_t v136 = v67;
    uint64_t v88 = v131;
    uint64_t v89 = v135;
    ((void (*)(char *, void, uint64_t))v121)(v131, v119, v135);
    uint64_t v90 = v128;
    uint64_t v91 = v132;
    ((void (*)(char *, void, uint64_t))v123)(v128, v120, v132);
    uint64_t v92 = v127;
    sub_241CD66E0();
    v117(v90, v91);
    v118(v88, v89);
    uint64_t v93 = v129;
    sub_241CDB230();
    ((void (*)(char *, uint64_t))v125)(v92, v93);
    swift_release();
    uint64_t v94 = v137;
    unint64_t v95 = v138;
    sub_241A35800(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
    uint64_t v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = xmmword_241CEB720;
    uint64_t v97 = MEMORY[0x263F8D750];
    *(void *)(v96 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v96 + 64) = v97;
    *(void *)(v96 + 32) = v116;
    *(void *)(v96 + 96) = MEMORY[0x263F8D310];
    *(void *)(v96 + 104) = sub_241A55A74();
    *(void *)(v96 + 72) = v94;
    *(void *)(v96 + 80) = v95;
    uint64_t v68 = sub_241CDB0F0();
    unint64_t v57 = v98;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  unint64_t v57 = v138;
  uint64_t v53 = v56 - 6;
  if (v56 > 6)
  {
    unint64_t v55 = v138;
    sub_241CDB060();
    if (qword_26B038428 == -1) {
      goto LABEL_20;
    }
    goto LABEL_55;
  }
  uint64_t v68 = v137;
  swift_bridgeObjectRelease();
LABEL_41:
  swift_bridgeObjectRelease();
  unint64_t v85 = v114;
  uint64_t v83 = v112;
LABEL_42:
  uint64_t v99 = HIBYTE(v85) & 0xF;
  if ((v85 & 0x2000000000000000) == 0) {
    uint64_t v99 = v83 & 0xFFFFFFFFFFFFLL;
  }
  if (v99)
  {
    uint64_t v100 = HIBYTE(v57) & 0xF;
    if ((v57 & 0x2000000000000000) == 0) {
      uint64_t v100 = v68 & 0xFFFFFFFFFFFFLL;
    }
    if (v100)
    {
      sub_241CDB060();
      if (qword_26B038428 != -1) {
        swift_once();
      }
      id v101 = (id)qword_26B0413A0;
      sub_241CD6DC0();
      sub_241CDB110();
      sub_241A35800(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
      uint64_t v102 = swift_allocObject();
      *(_OWORD *)(v102 + 16) = xmmword_241CEB720;
      uint64_t v103 = MEMORY[0x263F8D310];
      *(void *)(v102 + 56) = MEMORY[0x263F8D310];
      unint64_t v104 = sub_241A55A74();
      *(void *)(v102 + 32) = v83;
      *(void *)(v102 + 40) = v85;
      *(void *)(v102 + 96) = v103;
      *(void *)(v102 + 104) = v104;
      *(void *)(v102 + 64) = v104;
      *(void *)(v102 + 72) = v68;
      *(void *)(v102 + 80) = v57;
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_241CDB100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return v83;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v68;
}

uint64_t sub_241AD163C(uint64_t a1, uint64_t a2)
{
  sub_241A35800(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241AD16D0(uint64_t a1)
{
  sub_241A35800(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241AD175C(uint64_t a1, uint64_t a2)
{
  sub_241A35800(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_241AD17F0()
{
  unint64_t result = qword_26B034C80;
  if (!qword_26B034C80)
  {
    sub_241AD1C54(255, (unint64_t *)&qword_26B034C78, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B034C80);
  }
  return result;
}

void sub_241AD186C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD6750();
    sub_241AD1C54(255, (unint64_t *)&qword_26B034C78, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    v10[0] = v6;
    v10[1] = v7;
    v10[2] = sub_241ACEA10(&qword_26B031F58, MEMORY[0x263F06250]);
    v10[3] = sub_241AD17F0();
    unint64_t v8 = a3(a1, v10);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_241AD1954()
{
  unint64_t result = qword_26B031FA8;
  if (!qword_26B031FA8)
  {
    sub_241AD186C(255, &qword_26B031FB0, MEMORY[0x263F066C8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B031FA8);
  }
  return result;
}

uint64_t sub_241AD19C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_241AD1A30()
{
  if (!qword_268D42918)
  {
    sub_241A35800(255, &qword_268D42920, (uint64_t (*)(uint64_t))sub_241AD1AC8, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241CDA8C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42918);
    }
  }
}

void sub_241AD1AC8()
{
  if (!qword_268D42928)
  {
    sub_241AD1B30();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D42928);
    }
  }
}

void sub_241AD1B30()
{
  if (!qword_268D42930)
  {
    sub_241CD7EE0();
    unint64_t v0 = sub_241CDA910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42930);
    }
  }
}

uint64_t sub_241AD1B90(uint64_t a1, uint64_t a2)
{
  sub_241AD1B30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241AD1BF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_241AD1C54(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_241AD1CA0()
{
  unint64_t result = qword_26B033D20;
  if (!qword_26B033D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033D20);
  }
  return result;
}

void sub_241AD1CF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_241AD1CA0();
    unint64_t v7 = a3(a1, &type metadata for StateOfMindSnidgetVisualizationView.ViewModel.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StateOfMindSnidgetVisualizationView.ViewModel.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x241AD1DF4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindSnidgetVisualizationView.ViewModel.CodingKeys()
{
  return &type metadata for StateOfMindSnidgetVisualizationView.ViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for StateOfMindSnidgetVisualizationView.ViewModel()
{
  return &type metadata for StateOfMindSnidgetVisualizationView.ViewModel;
}

ValueMetadata *type metadata accessor for StateOfMindSnidgetVisualizationView()
{
  return &type metadata for StateOfMindSnidgetVisualizationView;
}

uint64_t sub_241AD1E4C()
{
  return sub_241ACEA10(&qword_268D42948, (void (*)(uint64_t))sub_241AD1E94);
}

void sub_241AD1E94()
{
  if (!qword_268D42950)
  {
    sub_241A35800(255, &qword_268D42920, (uint64_t (*)(uint64_t))sub_241AD1AC8, MEMORY[0x263F1BAC8]);
    sub_241AD1F28();
    unint64_t v0 = sub_241CDACF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D42950);
    }
  }
}

unint64_t sub_241AD1F28()
{
  unint64_t result = qword_268D42958;
  if (!qword_268D42958)
  {
    sub_241A35800(255, &qword_268D42920, (uint64_t (*)(uint64_t))sub_241AD1AC8, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42958);
  }
  return result;
}

unint64_t sub_241AD1FB4()
{
  unint64_t result = qword_268D42960;
  if (!qword_268D42960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42960);
  }
  return result;
}

unint64_t sub_241AD200C()
{
  unint64_t result = qword_26B033D30;
  if (!qword_26B033D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033D30);
  }
  return result;
}

unint64_t sub_241AD2064()
{
  unint64_t result = qword_26B033D28;
  if (!qword_26B033D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B033D28);
  }
  return result;
}

void *sub_241AD20B8(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    *a1 = v6;
    a1 = (void *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    uint64_t v8 = (void *)a2[2];
    *a1 = v6;
    a1[1] = v7;
    a1[2] = v8;
    uint64_t v53 = a2;
    uint64_t v54 = (int *)v4;
    uint64_t v9 = *(int *)(v4 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *((unsigned char *)a1 + v9) = *v11;
    uint64_t v12 = _s8WorkPlanVMa();
    uint64_t v13 = *(int *)(v12 + 20);
    uint64_t v52 = &v10[v13];
    uint64_t v14 = &v11[v13];
    uint64_t v15 = sub_241CD95E0();
    uint64_t v16 = *(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_unknownObjectRetain();
    id v17 = v8;
    uint64_t v18 = v12;
    v16(v52, v14, v15);
    uint64_t v19 = *(int *)(v12 + 24);
    unint64_t v20 = &v10[v19];
    uint64_t v21 = &v11[v19];
    uint64_t v22 = sub_241CD78F0();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      sub_241AD24C8(0, &qword_26B032040, MEMORY[0x263F45718]);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, unsigned char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v25 = *(int *)(v18 + 28);
    uint64_t v26 = &v10[v25];
    uint64_t v27 = &v11[v25];
    sub_241AC7534();
    (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = *(int *)(v18 + 32);
    uint64_t v30 = &v10[v29];
    uint64_t v31 = &v11[v29];
    sub_241AC75E4();
    uint64_t v33 = v32;
    uint64_t v34 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(v31, 1, v32))
    {
      sub_241AD24C8(0, &qword_26B031C88, (void (*)(uint64_t))sub_241AC75E4);
      memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, unsigned char *, uint64_t))(v34 + 16))(v30, v31, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
    }
    uint64_t v36 = v54[7];
    unint64_t v37 = *(void **)((char *)v53 + v36);
    *(void *)((char *)a1 + v36) = v37;
    uint64_t v38 = v54[8];
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)v53 + v38;
    long long v41 = *(_OWORD *)((char *)v53 + v38 + 24);
    *(_OWORD *)((char *)a1 + v38 + 24) = v41;
    uint64_t v42 = v41;
    uint64_t v43 = **(void (***)(char *, char *, uint64_t))(v41 - 8);
    id v44 = v37;
    v43(v39, v40, v42);
    *(_OWORD *)((char *)a1 + v54[9]) = *(_OWORD *)((char *)v53 + v54[9]);
    uint64_t v45 = v54[10];
    unint64_t v46 = *(void **)((char *)v53 + v45);
    *(void *)((char *)a1 + v45) = v46;
    uint64_t v47 = v54[11];
    unint64_t v48 = *(void **)((char *)v53 + v47);
    *(void *)((char *)a1 + v47) = v48;
    swift_unknownObjectRetain();
    id v49 = v46;
    id v50 = v48;
  }
  return a1;
}

void sub_241AD24C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241AD251C(uint64_t a1)
{
  swift_unknownObjectRelease();

  uint64_t v2 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v3 = a1 + v2[6];
  unint64_t v4 = (int *)_s8WorkPlanVMa();
  uint64_t v5 = v3 + v4[5];
  uint64_t v6 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v3 + v4[6];
  uint64_t v8 = sub_241CD78F0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = v3 + v4[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v3 + v4[8];
  sub_241AC75E4();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  }

  sub_241A31190(a1 + v2[8]);
  swift_unknownObjectRelease();

  uint64_t v16 = *(void **)(a1 + v2[11]);
}

uint64_t sub_241AD2744(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  unint64_t v48 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v49 = a2;
  uint64_t v5 = v48[6];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(a2 + v5);
  uint64_t v8 = (int *)_s8WorkPlanVMa();
  uint64_t v9 = v8[5];
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v7 + v9;
  uint64_t v12 = sub_241CD95E0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_unknownObjectRetain();
  id v14 = v4;
  v13(v10, v11, v12);
  uint64_t v15 = v8[6];
  uint64_t v16 = (void *)(v6 + v15);
  id v17 = (const void *)(v7 + v15);
  uint64_t v18 = sub_241CD78F0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_241AD24C8(0, &qword_26B032040, MEMORY[0x263F45718]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = v8[7];
  uint64_t v22 = v6 + v21;
  uint64_t v23 = v7 + v21;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = v8[8];
  uint64_t v26 = (void *)(v6 + v25);
  uint64_t v27 = (const void *)(v7 + v25);
  sub_241AC75E4();
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v28))
  {
    sub_241AD24C8(0, &qword_26B031C88, (void (*)(uint64_t))sub_241AC75E4);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v26, v27, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
  }
  uint64_t v32 = v48[7];
  uint64_t v33 = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = v33;
  uint64_t v34 = v48[8];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  long long v37 = *(_OWORD *)(a2 + v34 + 24);
  *(_OWORD *)(a1 + v34 + 24) = v37;
  uint64_t v38 = v37;
  uint64_t v39 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
  id v40 = v33;
  v39(v35, v36, v38);
  *(_OWORD *)(a1 + v48[9]) = *(_OWORD *)(a2 + v48[9]);
  uint64_t v41 = v48[10];
  uint64_t v42 = *(void **)(a2 + v41);
  *(void *)(a1 + v41) = v42;
  uint64_t v43 = v48[11];
  id v44 = *(void **)(v49 + v43);
  *(void *)(a1 + v43) = v44;
  swift_unknownObjectRetain();
  id v45 = v42;
  id v46 = v44;
  return a1;
}

void *sub_241AD2B00(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  uint64_t v5 = (void *)a2[2];
  uint64_t v6 = (void *)a1[2];
  a1[2] = v5;
  id v7 = v5;

  unint64_t v57 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  id v58 = a2;
  uint64_t v8 = v57[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  uint64_t v11 = _s8WorkPlanVMa();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v9[v12];
  id v14 = &v10[v12];
  uint64_t v15 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v56 = v11;
  uint64_t v16 = *(int *)(v11 + 24);
  id v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  uint64_t v19 = sub_241CD78F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    sub_241AD24C8(0, &qword_26B032040, MEMORY[0x263F45718]);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_7:
  uint64_t v25 = *(int *)(v56 + 28);
  uint64_t v26 = &v9[v25];
  uint64_t v27 = &v10[v25];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  uint64_t v29 = *(int *)(v56 + 32);
  uint64_t v30 = &v9[v29];
  uint64_t v31 = &v10[v29];
  sub_241AC75E4();
  uint64_t v33 = v32;
  uint64_t v34 = *(void *)(v32 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v30, 1, v32);
  int v37 = v35(v31, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v30, v31, v33);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v33);
    goto LABEL_12;
  }
  if (v37)
  {
LABEL_12:
    sub_241AD24C8(0, &qword_26B031C88, (void (*)(uint64_t))sub_241AC75E4);
    memcpy(v30, v31, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v30, v31, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
LABEL_13:
  uint64_t v39 = v57[7];
  id v40 = *(void **)((char *)v58 + v39);
  uint64_t v41 = *(void **)((char *)a1 + v39);
  *(void *)((char *)a1 + v39) = v40;
  id v42 = v40;

  sub_241AC8320((void *)((char *)a1 + v57[8]), (void *)((char *)v58 + v57[8]));
  uint64_t v43 = v57[9];
  id v44 = (void *)((char *)a1 + v43);
  id v45 = (void *)((char *)v58 + v43);
  uint64_t v46 = v45[1];
  void *v44 = *v45;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v44[1] = v46;
  uint64_t v47 = v57[10];
  unint64_t v48 = *(void **)((char *)v58 + v47);
  uint64_t v49 = *(void **)((char *)a1 + v47);
  *(void *)((char *)a1 + v47) = v48;
  id v50 = v48;

  uint64_t v51 = v57[11];
  uint64_t v52 = *(void **)((char *)v58 + v51);
  uint64_t v53 = *(void **)((char *)a1 + v51);
  *(void *)((char *)a1 + v51) = v52;
  id v54 = v52;

  return a1;
}

uint64_t sub_241AD2F64(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(a2 + v5);
  uint64_t v8 = (int *)_s8WorkPlanVMa();
  uint64_t v9 = v8[5];
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v7 + v9;
  uint64_t v12 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = v8[6];
  id v14 = (void *)(v6 + v13);
  uint64_t v15 = (const void *)(v7 + v13);
  uint64_t v16 = sub_241CD78F0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_241AD24C8(0, &qword_26B032040, MEMORY[0x263F45718]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = v8[7];
  uint64_t v20 = v6 + v19;
  uint64_t v21 = v7 + v19;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = v8[8];
  uint64_t v24 = (void *)(v6 + v23);
  uint64_t v25 = (const void *)(v7 + v23);
  sub_241AC75E4();
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v25, 1, v26))
  {
    sub_241AD24C8(0, &qword_26B031C88, (void (*)(uint64_t))sub_241AC75E4);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v24, v25, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
  }
  *(void *)(a1 + v4[7]) = *(void *)(a2 + v4[7]);
  uint64_t v30 = v4[8];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  long long v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  *(void *)(v31 + 32) = *(void *)(v32 + 32);
  *(_OWORD *)(a1 + v4[9]) = *(_OWORD *)(a2 + v4[9]);
  *(void *)(a1 + v4[10]) = *(void *)(a2 + v4[10]);
  *(void *)(a1 + v4[11]) = *(void *)(a2 + v4[11]);
  return a1;
}

void *sub_241AD32A4(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)a1[2];
  a1[1] = v4;
  a1[2] = v5;

  id v54 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  unint64_t v55 = a2;
  uint64_t v7 = v54[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *((unsigned char *)a1 + v7) = *((unsigned char *)a2 + v7);
  uint64_t v10 = _s8WorkPlanVMa();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v53 = v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = &v8[v15];
  uint64_t v17 = &v9[v15];
  uint64_t v18 = sub_241CD78F0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    sub_241AD24C8(0, &qword_26B032040, MEMORY[0x263F45718]);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_7:
  uint64_t v24 = *(int *)(v53 + 28);
  uint64_t v25 = &v8[v24];
  uint64_t v26 = &v9[v24];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  uint64_t v28 = *(int *)(v53 + 32);
  uint64_t v29 = &v8[v28];
  uint64_t v30 = &v9[v28];
  sub_241AC75E4();
  uint64_t v32 = v31;
  uint64_t v33 = *(void *)(v31 - 8);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  int v35 = v34(v29, 1, v31);
  int v36 = v34(v30, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v29, v30, v32);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v32);
    goto LABEL_12;
  }
  if (v36)
  {
LABEL_12:
    sub_241AD24C8(0, &qword_26B031C88, (void (*)(uint64_t))sub_241AC75E4);
    memcpy(v29, v30, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v29, v30, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
LABEL_13:
  uint64_t v38 = v54[7];
  uint64_t v39 = *(void **)((char *)a1 + v38);
  *(void *)((char *)a1 + v38) = *(void *)((char *)v55 + v38);

  uint64_t v40 = v54[8];
  uint64_t v41 = (char *)a1 + v40;
  id v42 = (char *)v55 + v40;
  sub_241A31190((uint64_t)a1 + v40);
  long long v43 = *((_OWORD *)v42 + 1);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v43;
  *((void *)v41 + 4) = *((void *)v42 + 4);
  uint64_t v44 = v54[9];
  id v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (void *)((char *)v55 + v44);
  uint64_t v47 = v46[1];
  *id v45 = *v46;
  swift_unknownObjectRelease();
  v45[1] = v47;
  uint64_t v48 = v54[10];
  uint64_t v49 = *(void **)((char *)a1 + v48);
  *(void *)((char *)a1 + v48) = *(void *)((char *)v55 + v48);

  uint64_t v50 = v54[11];
  uint64_t v51 = *(void **)((char *)a1 + v50);
  *(void *)((char *)a1 + v50) = *(void *)((char *)v55 + v50);

  return a1;
}

uint64_t sub_241AD36F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241AD370C);
}

uint64_t sub_241AD370C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_241AD3778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241AD378C);
}

uint64_t sub_241AD378C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CommitModelsStep()
{
  uint64_t result = qword_26B0357E8;
  if (!qword_26B0357E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241AD3848()
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241AD38D4(void *a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  sub_241AABAD0();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 64);
  MEMORY[0x270FA5388](v14 - 8);
  if (a2)
  {
    *uint64_t v13 = a1;
    swift_storeEnumTagMultiPayload();
    id v17 = a1;
    a5(v13);
    return sub_241AD5DA4((uint64_t)v13, (uint64_t (*)(void))sub_241AABAD0);
  }
  else
  {
    uint64_t v22 = v16;
    uint64_t v23 = a6;
    swift_retain();
    sub_241AD3B50(a4);
    sub_241AD53D4(a4, (uint64_t)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
    unint64_t v18 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a5;
    *(void *)(v19 + 24) = v23;
    sub_241AD5824((uint64_t)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_retain();
    sub_241CD7E20();
    swift_bridgeObjectRelease();
    sub_241AD59A0(a1, 0);
    return swift_release();
  }
}

uint64_t sub_241AD3B50(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v128 = *MEMORY[0x263EF8340];
  sub_241AD24C8(0, &qword_26B035098, MEMORY[0x263F46CD8]);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v104 = (char *)&v101 - v6;
  uint64_t v7 = sub_241CD9A30();
  uint64_t v106 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v103 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_241CD7AB0();
  uint64_t v107 = *(void *)(v121 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v121);
  uint64_t v102 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  int64_t v116 = (char *)&v101 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unsigned int v120 = (char *)&v101 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v117 = (char *)&v101 - v15;
  uint64_t v118 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v118);
  unsigned int v119 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = MEMORY[0x263F8EE78];
  sub_241A31064(0, &qword_26B034FA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB730;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t v125 = v1;
  id v18 = objc_msgSend(*(id *)(v1 + 16), sel_profileIdentifier);
  id v19 = objc_msgSend(v18, sel_type);

  uint64_t v105 = v7;
  if (v19 == (id)1)
  {
    uint64_t inited = (uint64_t)sub_241A3042C((char *)1, 2, 1, (char *)inited);
    uint64_t v123 = 2;
    *(void *)(inited + 16) = 2;
    *(unsigned char *)(inited + 33) = 1;
LABEL_4:
    uint64_t v20 = 0;
    unint64_t v114 = (void (**)(char *, uint64_t))(v107 + 8);
    uint64_t v109 = (void (**)(char *, char *, uint64_t))(v107 + 16);
    uint64_t v21 = *(void **)a1;
    uint64_t v108 = MEMORY[0x263F8EE50] + 8;
    long long v113 = xmmword_241CEB710;
    uint64_t v112 = a1;
    uint64_t v115 = inited;
    uint64_t v122 = v21;
    while (1)
    {
      int v22 = *(unsigned __int8 *)(inited + v20 + 32);
      if (v21 != (void *)1)
      {
        uint64_t v23 = *(void **)(a1 + 8);
        uint64_t v24 = *(unsigned char *)(inited + v20 + 32) ? *(void **)(a1 + 8) : v21;
        sub_241ACC264(v21, *(void **)(a1 + 8));
        id v25 = v24;

        if (v24)
        {
          uint64_t v124 = v3;
          sub_241A31064(0, (unint64_t *)&qword_26B038868);
          uint64_t v26 = swift_initStackObject();
          *(_OWORD *)(v26 + 16) = v113;
          uint64_t v27 = *(void **)(v125 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
          *(void *)(v26 + 32) = v27;
          unint64_t v126 = v26;
          sub_241CDB2E0();
          unint64_t v28 = v126;
          uint64_t v29 = (uint64_t)v119;
          swift_storeEnumTagMultiPayload();
          id v30 = v27;
          uint64_t v31 = sub_241B7417C(v28, v29, v22);
          uint64_t v33 = v32;
          swift_bridgeObjectRelease();
          sub_241AD5DA4(v29, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
          id v34 = v25;
          sub_241CD7A80();
          id v35 = objc_msgSend(v34, sel_data);
          if (v35)
          {
            int v36 = v35;
            uint64_t v37 = sub_241CD6AE0();
            unint64_t v39 = v38;
          }
          else
          {
            uint64_t v37 = 0;
            unint64_t v39 = 0xF000000000000000;
          }
          sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
          uint64_t v40 = (uint64_t)v120;
          sub_241CD7A80();
          uint64_t v41 = sub_241A54BF8(v37, v39, 1, 0, v22, v40);
          sub_241A54FC8(v37, v39);

          (*v114)(v117, v121);
          uint64_t v42 = v124;
          long long v43 = sub_241AD4A30(v41, v31, v33, v22);
          uint64_t v3 = v42;
          if (v42)
          {
LABEL_40:
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          uint64_t v44 = v43;
          swift_bridgeObjectRelease();
          id v45 = v44;
          MEMORY[0x2456365D0]();
          if (*(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_241CDB2F0();
          }
          sub_241CDB310();
          sub_241CDB2E0();

          a1 = v112;
          uint64_t inited = v115;
          uint64_t v21 = v122;
        }
      }
      uint64_t v46 = *(void **)(a1 + 16);
      if (v46 != (void *)1)
      {
        uint64_t v47 = *(void **)(a1 + 24);
        if (v22) {
          uint64_t v48 = *(void **)(a1 + 24);
        }
        else {
          uint64_t v48 = *(void **)(a1 + 16);
        }
        sub_241ACC264(*(id *)(a1 + 16), *(void **)(a1 + 24));
        id v49 = v48;

        if (v48)
        {
          uint64_t v124 = v3;
          sub_241A31064(0, (unint64_t *)&qword_26B038868);
          uint64_t v50 = swift_initStackObject();
          *(_OWORD *)(v50 + 16) = v113;
          uint64_t v51 = *(void **)(v125 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
          *(void *)(v50 + 32) = v51;
          unint64_t v126 = v50;
          sub_241CDB2E0();
          unint64_t v52 = v126;
          uint64_t v53 = (uint64_t)v119;
          swift_storeEnumTagMultiPayload();
          id v54 = v51;
          uint64_t v110 = sub_241B7417C(v52, v53, v22);
          uint64_t v56 = v55;
          swift_bridgeObjectRelease();
          sub_241AD5DA4(v53, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
          id v34 = v49;
          sub_241CD7A80();
          id v57 = objc_msgSend(v34, sel_data);
          uint64_t v111 = v56;
          if (v57)
          {
            id v58 = v57;
            uint64_t v59 = sub_241CD6AE0();
            unint64_t v61 = v60;
          }
          else
          {
            uint64_t v59 = 0;
            unint64_t v61 = 0xF000000000000000;
          }
          sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
          uint64_t v62 = (uint64_t)v120;
          uint64_t v63 = v116;
          uint64_t v64 = v121;
          (*v109)(v120, v116, v121);
          uint64_t v41 = sub_241A54BF8(v59, v61, 0, 0, 1, v62);
          sub_241A54FC8(v59, v61);

          (*v114)(v63, v64);
          uint64_t v65 = v124;
          unint64_t v66 = sub_241AD4A30(v41, v110, v111, v22);
          uint64_t v3 = v65;
          if (v65) {
            goto LABEL_40;
          }
          uint64_t v67 = v66;
          swift_bridgeObjectRelease();
          uint64_t v68 = v67;
          MEMORY[0x2456365D0]();
          if (*(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_241CDB2F0();
          }
          sub_241CDB310();
          sub_241CDB2E0();

          a1 = v112;
          uint64_t inited = v115;
        }
        uint64_t v21 = v122;
      }
      if (v123 == ++v20)
      {
        uint64_t v7 = v105;
        goto LABEL_32;
      }
    }
  }
  uint64_t v123 = *(void *)(inited + 16);
  if (v123) {
    goto LABEL_4;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  uint64_t v69 = *(void **)(v125 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  uint64_t v70 = sub_241CD99D0();
  if (*(void *)(v70 + 16))
  {
    uint64_t v71 = v106;
    uint64_t v72 = (uint64_t)v104;
    (*(void (**)(char *, unint64_t, uint64_t))(v106 + 16))(v104, v70 + ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80)), v7);
    uint64_t v73 = 0;
  }
  else
  {
    uint64_t v73 = 1;
    uint64_t v71 = v106;
    uint64_t v72 = (uint64_t)v104;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v72, v73, 1, v7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v72, 1, v7) == 1)
  {
    sub_241AD5D2C(v72);
    return v127;
  }
  uint64_t v74 = v71;
  uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 32);
  uint64_t v76 = v103;
  v75(v103, v72, v7);
  uint64_t v77 = *(void **)(a1 + 32);
  if (!v77)
  {
    (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v7);
    return v127;
  }
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t v78 = swift_initStackObject();
  *(_OWORD *)(v78 + 16) = xmmword_241CEB710;
  *(void *)(v78 + 32) = v69;
  unint64_t v126 = v78;
  sub_241CDB2E0();
  uint64_t v79 = v74;
  unint64_t v80 = v126;
  uint64_t v81 = (uint64_t)v119;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v119, v76, v7);
  swift_storeEnumTagMultiPayload();
  id v82 = v69;
  id v83 = v77;
  uint64_t v123 = sub_241B7417C(v80, v81, 1);
  uint64_t v85 = v84;
  swift_bridgeObjectRelease();
  sub_241AD5DA4(v81, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  id v86 = v83;
  sub_241CD7A80();
  id v87 = objc_msgSend(v86, sel_data);
  uint64_t v124 = v85;
  if (v87)
  {
    uint64_t v88 = v87;
    uint64_t v89 = sub_241CD6AE0();
    unint64_t v91 = v90;
  }
  else
  {
    uint64_t v89 = 0;
    unint64_t v91 = 0xF000000000000000;
  }
  sub_241A313AC(0, (unint64_t *)&qword_26B0303E0);
  uint64_t v92 = v107;
  uint64_t v93 = (uint64_t)v120;
  uint64_t v94 = v102;
  uint64_t v95 = v121;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v120, v102, v121);
  uint64_t v96 = sub_241A54BF8(v89, v91, 2, 0, 1, v93);
  sub_241A54FC8(v89, v91);

  (*(void (**)(char *, uint64_t))(v92 + 8))(v94, v95);
  uint64_t v97 = sub_241AD4A30(v96, v123, v124, 1);
  if (!v3)
  {
    uint64_t v99 = v97;
    swift_bridgeObjectRelease();
    uint64_t v100 = v99;
    MEMORY[0x2456365D0]();
    if (*(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_241CDB2F0();
    }
    sub_241CDB310();
    sub_241CDB2E0();

    (*(void (**)(char *, uint64_t))(v106 + 8))(v103, v105);
    return v127;
  }

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v103, v105);
  return swift_bridgeObjectRelease();
}

uint64_t sub_241AD4928(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  sub_241AABAD0();
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = (uint64_t *)((char *)&v13 - v9);
  if (a1)
  {
    *uint64_t v10 = a1;
    swift_storeEnumTagMultiPayload();
    id v11 = a1;
  }
  else
  {
    sub_241AD53D4(a4, (uint64_t)&v13 - v9, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
  }
  a2(v10);
  return sub_241AD5DA4((uint64_t)v10, (uint64_t (*)(void))sub_241AABAD0);
}

char *sub_241AD4A30(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v6 = sub_241CD7AB0();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v60 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD6DD0();
  uint64_t v58 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD6F50();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SummariesHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v16 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v17 = objc_msgSend(v16, sel_bundleIdentifier);

  if (!v17) {
    goto LABEL_9;
  }
  uint64_t v53 = sub_241CDB0D0();
  uint64_t v19 = v18;

  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46528]), sel_init);
  if (!v20)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    sub_241AD5E04();
    swift_allocError();
    swift_willThrow();
    return v14;
  }
  uint64_t v21 = v20;
  uint64_t v51 = v19;
  int v52 = a4 & 1;
  id v22 = objc_msgSend(a1, sel_data);
  if (v22)
  {
    uint64_t v23 = sub_241CD6AE0();
    unint64_t v25 = v24;

    id v22 = (id)sub_241CD6AD0();
    sub_241A37374(v23, v25);
  }
  objc_msgSend(v21, sel_setUserData_, v22);

  sub_241CD6F40();
  sub_241CD6F00();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v26 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setSourceTimeZoneIdentifier_, v26);

  sub_241CD6DC0();
  sub_241CD6D90();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v8);
  uint64_t v27 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setSourceLocaleIdentifier_, v27);

  sub_241CD7960();
  sub_241A313AC(0, (unint64_t *)&qword_26B036858);
  sub_241CD7A90();
  uint64_t v58 = sub_241CDB730();
  uint64_t v50 = v28;
  sub_241CD7AA0();
  uint64_t v29 = sub_241CDB730();
  uint64_t v31 = v30;
  uint64_t v32 = v59;
  uint64_t v33 = sub_241AD4FB8(v52);
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  id v35 = *(void **)(v32 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  *(void *)(inited + 32) = v35;
  unint64_t v61 = inited;
  sub_241CDB2E0();
  unint64_t v36 = v61;
  if (v61 >> 62)
  {
    id v41 = v35;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v42) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v37 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v38 = v35;
    if (v37)
    {
LABEL_7:
      sub_241C69200(v36);
      uint64_t v40 = v39;
      goto LABEL_12;
    }
  }
  uint64_t v40 = MEMORY[0x263F8EE88];
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t result = (char *)objc_msgSend(v21, sel_data);
  if (result)
  {
    uint64_t v44 = result;
    uint64_t v45 = sub_241CD6AE0();
    unint64_t v47 = v46;

    objc_allocWithZone(MEMORY[0x263F0A710]);
    uint64_t v48 = v55;
    swift_bridgeObjectRetain();
    uint64_t v14 = (char *)sub_241AD5B8C(v53, v51, v54, v48, v58, v50, v29, v31, v33, v40, v45, v47);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v60, v57);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_241AD4FB8(char a1)
{
  uint64_t v2 = sub_241CD9350();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      return MEMORY[0x263F8EE88];
    }
  }
  sub_241A31064(0, (unint64_t *)&qword_26B038860);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB730;
  type metadata accessor for SummariesFullProfileExecutor.Request(0);
  sub_241CDB470();
  uint64_t v9 = (void *)sub_241CD9340();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  id v10 = objc_msgSend(v9, sel_authorizationIdentifier);

  uint64_t v11 = sub_241CDB0D0();
  uint64_t v13 = v12;

  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v13;
  if (*(void *)(inited + 16)) {
    uint64_t v7 = sub_241A25D4C(inited);
  }
  else {
    uint64_t v7 = MEMORY[0x263F8EE88];
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  return v7;
}

uint64_t sub_241AD51AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v8 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v12 = *(void *)(a4 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(void *)(v6 + 8);
  v21[0] = swift_getObjectType();
  sub_241AD53D4(v6, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CommitModelsStep);
  sub_241AD53D4(a1, (uint64_t)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + *(unsigned __int8 *)(v9 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  sub_241AD5824((uint64_t)v14, v17 + v15, (uint64_t (*)(void))type metadata accessor for CommitModelsStep);
  sub_241AD5824((uint64_t)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  uint64_t v18 = (void *)(v17 + ((v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v19 = v23;
  *uint64_t v18 = v22;
  v18[1] = v19;
  swift_retain();
  sub_241CD7340();
  return swift_release();
}

uint64_t sub_241AD53D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241AD543C()
{
  uint64_t v1 = *(void *)(type metadata accessor for CommitModelsStep() - 8);
  uint64_t v31 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v2 = (v31 + 16) & ~v31;
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v29 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v29 - 8) + 80);
  uint64_t v5 = v2 + v3 + v4;
  uint64_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
  uint64_t v6 = v0 + v2;
  swift_unknownObjectRelease();

  uint64_t v7 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v8 = v6 + v7[6];
  uint64_t v9 = (int *)_s8WorkPlanVMa();
  uint64_t v10 = v8 + v9[5];
  uint64_t v11 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v8 + v9[6];
  uint64_t v13 = sub_241CD78F0();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v15 = v5 & ~v4;
  uint64_t v16 = v8 + v9[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = v8 + v9[8];
  sub_241AC75E4();
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v20);
  }

  sub_241A31190(v6 + v7[8]);
  swift_unknownObjectRelease();

  uint64_t v22 = v0 + v15;
  uint64_t v23 = *(void **)(v0 + v15);
  if (v23 != (void *)1)
  {
  }
  unint64_t v24 = *(void **)(v22 + 16);
  if (v24 != (void *)1)
  {
  }
  uint64_t v25 = v22 + *(int *)(v29 + 28);
  uint64_t v26 = sub_241CD6EE0();
  uint64_t v27 = *(void *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, ((v30 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v31 | v4 | 7);
}

uint64_t sub_241AD5824(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241AD588C(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for CommitModelsStep() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v2 + v9;
  uint64_t v11 = v2 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = *(void (**)(void *))v11;
  uint64_t v13 = *(void *)(v11 + 8);

  return sub_241AD38D4(a1, v4, v2 + v6, v10, v12, v13);
}

void sub_241AD59A0(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

uint64_t sub_241AD59AC()
{
  uint64_t v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  unint64_t v6 = *(void **)(v0 + v3);
  if (v6 != (void *)1)
  {
  }
  uint64_t v7 = *(void **)(v5 + 16);
  if (v7 != (void *)1)
  {
  }
  uint64_t v8 = v5 + *(int *)(v1 + 28);
  uint64_t v9 = sub_241CD6EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241AD5B18(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  uint64_t v4 = *(void (**)(void *))(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_241AD4928(a1, v4, v5, v6);
}

id sub_241AD5B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  uint64_t v12 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_241CDB090();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_241CDB360();
  swift_bridgeObjectRelease();
  sub_241A313AC(0, (unint64_t *)&qword_26B038440);
  sub_241AD5E58();
  uint64_t v17 = (void *)sub_241CDB360();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_241CD6AD0();
  id v19 = objc_msgSend(v21, sel_initWithPackage_name_version_compatibilityVersion_authorizationIdentifiers_objectTypes_summaryData_, v12, v13, v14, v15, v16, v17, v18);
  sub_241A37374(a11, a12);

  return v19;
}

uint64_t sub_241AD5D2C(uint64_t a1)
{
  sub_241AD24C8(0, &qword_26B035098, MEMORY[0x263F46CD8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241AD5DA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_241AD5E04()
{
  unint64_t result = qword_268D42968;
  if (!qword_268D42968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42968);
  }
  return result;
}

unint64_t sub_241AD5E58()
{
  unint64_t result = qword_26B030378;
  if (!qword_26B030378)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B038440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030378);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CommitModelsStep.CommitModelsStepError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x241AD5F5CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CommitModelsStep.CommitModelsStepError()
{
  return &type metadata for CommitModelsStep.CommitModelsStepError;
}

unint64_t sub_241AD5F98()
{
  unint64_t result = qword_268D42970;
  if (!qword_268D42970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D42970);
  }
  return result;
}

uint64_t sub_241AD5FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241AD6000);
}

uint64_t sub_241AD6000(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241AD60B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241AD60C4);
}

void *sub_241AD60C4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031EB8;
  if (!qword_26B031EB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241AD61B8()
{
  return sub_241AD6200(&qword_26B0320B8, MEMORY[0x263F44058]);
}

uint64_t sub_241AD6200(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241AD6248()
{
  return sub_241AD634C((unint64_t *)&qword_26B0320F0);
}

void sub_241AD627C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241AD6200(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241AD6318()
{
  return sub_241AD634C((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241AD634C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241AD627C(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    int v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241AD6200((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241AD6200(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241AD6430()
{
  return sub_241AD6200(&qword_26B0385C8, MEMORY[0x263F44308]);
}

uint64_t sub_241AD6478()
{
  return sub_241AD6200(&qword_26B032140, MEMORY[0x263F44308]);
}

uint64_t sub_241AD64C0(uint64_t a1)
{
  uint64_t result = sub_241AD6200(&qword_26B037F38, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241AD6518()
{
  return sub_241AD65B8(&qword_26B0383F8, &qword_26B038400, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241AD6568()
{
  return sub_241AD65B8(&qword_26B032E48, &qword_26B032E50, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241AD65B8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241AD65FC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241AD65FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241AD627C(255, &qword_26B032118, MEMORY[0x263F44150]);
    uint64_t v15 = v6;
    uint64_t v7 = sub_241CD86F0();
    unint64_t v8 = sub_241A3F5B0();
    uint64_t v9 = sub_241AD6200(&qword_26B0320B8, MEMORY[0x263F44058]);
    uint64_t v10 = sub_241AD634C((unint64_t *)&qword_26B0320F0);
    uint64_t v11 = sub_241AD634C((unint64_t *)&qword_26B0320E0);
    uint64_t v12 = (void (*)(uint64_t))MEMORY[0x263F44308];
    v16[0] = v15;
    v16[1] = v7;
    void v16[2] = v8;
    v16[3] = v9;
    v16[4] = v10;
    v16[5] = v11;
    v16[6] = sub_241AD6200(&qword_26B0385C8, MEMORY[0x263F44308]);
    v16[7] = sub_241AD6200(&qword_26B032140, v12);
    unint64_t v13 = a3(a1, v16);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

void sub_241AD67A4(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  unint64_t v114 = a1;
  uint64_t v108 = a2;
  uint64_t v109 = a3;
  uint64_t v4 = type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v110 = (uint64_t)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (uint64_t *)((char *)&v98 - v7);
  uint64_t v9 = sub_241CDA1A0();
  id v112 = *(id *)(v9 - 8);
  long long v113 = (void *)v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v111 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v104 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35864(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v107 = (char *)&v98 - v14;
  uint64_t v15 = sub_241CD6D00();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v101 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35864(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v106 = (char *)&v98 - v18;
  sub_241A35864(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v105 = (char *)&v98 - v20;
  sub_241A35864(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v100 = (char *)&v98 - v22;
  uint64_t v23 = sub_241CD69B0();
  uint64_t v98 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v103 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35864(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v102 = (char *)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v99 = (char *)&v98 - v28;
  uint64_t v29 = self;
  uint64_t v30 = (void *)*v3;
  id v31 = objc_msgSend(v29, sel_sharedInstanceForHealthStore_, *v3);
  if (!v31)
  {
    __break(1u);
    return;
  }
  uint64_t v32 = v31;
  uint64_t v33 = (char *)v3 + *(int *)(v4 + 20);
  id v34 = (void *)*((void *)v33 + 2);
  id v35 = objc_msgSend(v31, sel_displayTypeForObjectType_, v34);

  if (v35)
  {
    id v36 = v115;
    sub_241ADF658(v114);
    if (v36)
    {

      return;
    }
    int v52 = v37;
    if (v37)
    {
      if (objc_msgSend(v37, sel_hasPrescriptionType)
        && objc_msgSend(v52, sel_hasTimestampData))
      {
        id v115 = v35;
        uint64_t v53 = *(void **)&v33[*(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32)];
        long long v113 = v53;
        type metadata accessor for SnidgetStringBuilder();
        uint64_t inited = swift_initStackObject();
        *(void *)(inited + 16) = v30;
        uint64_t v55 = self;
        id v112 = v53;
        id v56 = v30;
        id v57 = objc_msgSend(v55, sel_sharedInstanceForHealthStore_, v56);
        uint64_t v58 = (void *)inited;
        *(void *)(inited + 32) = v57;
        if (v113)
        {
          id v59 = v112;
        }
        else
        {
          id v72 = v57;
          id v59 = objc_msgSend(v72, sel_createHKUnitPreferenceController);
        }
        uint64_t v73 = v58;
        v58[3] = v59;
        uint64_t v74 = v99;
        unint64_t v114 = v73;
        sub_241AD74B4(v52);
        uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56);
        v75(v74, 0, 1, v23);
        sub_241AD7620(v52);
        v75(v102, 1, 1, v23);
        v116[0] = 0x5F74656764696E53;
        v116[1] = 0xE800000000000000;
        id v76 = v34;
        id v77 = objc_msgSend(v76, sel_description);
        sub_241CDB0D0();

        sub_241CDB180();
        swift_bridgeObjectRelease();
        uint64_t v78 = v100;
        sub_241CD8E50();
        swift_bridgeObjectRelease();
        uint64_t v79 = sub_241CD8E70();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v78, 0, 1, v79);
        sub_241CD8FF0();
        swift_allocObject();
        uint64_t v80 = sub_241CD8FE0();
        sub_241CD89A0();
        sub_241A3A9CC();
        uint64_t v82 = *(int *)(v81 + 48);
        id v115 = v115;
        objc_msgSend(v52, sel_timestampData);
        id v83 = (id)HKDecodeDateForValue();
        uint64_t v84 = v105;
        sub_241CD6CB0();

        v84[v82] = 0;
        uint64_t v85 = *MEMORY[0x263F43F18];
        uint64_t v86 = sub_241CD8610();
        uint64_t v87 = *(void *)(v86 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v87 + 104))(v84, v85, v86);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
        uint64_t v88 = sub_241CD8990();
        swift_retain();
        objc_msgSend(v52, sel_timestampData);
        id v89 = (id)HKDecodeDateForValue();
        sub_241CD6CB0();

        uint64_t v90 = (uint64_t)v106;
        sub_241CD79D0();
        uint64_t v91 = sub_241CD7A10();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v90, 0, 1, v91);
        uint64_t v92 = sub_241CD6810();
        uint64_t v93 = (uint64_t)v107;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v107, 1, 1, v92);
        sub_241A3A878();
        uint64_t v96 = v108;
        uint64_t v95 = v109;
        uint64_t v97 = (char *)v109 + *(int *)(v94 + 52);
        swift_bridgeObjectRetain();
        sub_241B4A1A8(1, v90, v96, v93, v97);

        swift_release();
        swift_release();

        *uint64_t v95 = v88;
        v95[1] = v80;
        v95[2] = 0;
        return;
      }
    }
    uint64_t v61 = sub_241CD7A10();
    uint64_t v62 = (uint64_t)v106;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v106, 1, 1, v61);
    uint64_t v63 = sub_241CD6810();
    uint64_t v64 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v107, 1, 1, v63);
    uint64_t v65 = v108;
    swift_bridgeObjectRetain();
    unint64_t v66 = v104;
    sub_241B4A1A8(0, v62, v65, v64, v104);
    sub_241CD89A0();
    uint64_t v67 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v105, 1, 1, v67);
    id v68 = v35;
    uint64_t v69 = sub_241CD8990();
    sub_241A3A878();
    uint64_t v71 = v109;
    sub_241AD79C8((uint64_t)v66, (uint64_t)v109 + *(int *)(v70 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v71[1] = 0;
    v71[2] = 0;
    *uint64_t v71 = v69;
    sub_241AD7928((uint64_t)v66, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  id v38 = v111;
  sub_241CDA0F0();
  sub_241AD79C8((uint64_t)v3, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
  uint64_t v39 = v110;
  sub_241AD79C8((uint64_t)v3, v110, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
  uint64_t v40 = sub_241CDA190();
  os_log_type_t v41 = sub_241CDB650();
  int v42 = v41;
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v43 = swift_slowAlloc();
    LODWORD(v114) = v42;
    uint64_t v44 = v43;
    id v115 = (id)swift_slowAlloc();
    v116[0] = (uint64_t)v115;
    *(_DWORD *)uint64_t v44 = 136315394;
    uint64_t v45 = sub_241AE02EC(*v8, *((unsigned __int8 *)v8 + *(int *)(v4 + 20) + 8));
    uint64_t v117 = sub_241A33FE4(v45, v46, v116);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241AD7928((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
    *(_WORD *)(v44 + 12) = 2080;
    uint64_t v109 = (uint64_t *)(v44 + 14);
    id v47 = objc_msgSend(*(id *)(v39 + *(int *)(v4 + 20) + 16), sel_sensitiveLoggingIdentifier);
    uint64_t v48 = sub_241CDB0D0();
    unint64_t v50 = v49;

    uint64_t v117 = sub_241A33FE4(v48, v50, v116);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    sub_241AD7928(v39, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
    _os_log_impl(&dword_241A23000, v40, (os_log_type_t)v114, "[%s]: unable to find display type: %s", (uint8_t *)v44, 0x16u);
    id v51 = v115;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v51, -1, -1);
    MEMORY[0x245637F20](v44, -1, -1);
  }
  else
  {
    sub_241AD7928((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
    sub_241AD7928(v39, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
  }

  (*((void (**)(char *, void *))v112 + 1))(v38, v113);
  sub_241A41340();
  swift_allocError();
  *unint64_t v60 = 0;
  swift_willThrow();
}

void sub_241AD74B4(void *a1)
{
  if (!objc_msgSend(a1, sel_hasPrescriptionType)) {
    goto LABEL_4;
  }
  id v2 = objc_msgSend(a1, sel_prescriptionType);
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  int v3 = v2;
  unsigned int v4 = objc_msgSend(v2, sel_contacts);

  if (!v4)
  {
    id v6 = objc_msgSend(a1, sel_prescriptionType);
    if (v6)
    {
      uint64_t v7 = v6;
      unsigned int v8 = objc_msgSend(v6, sel_hasGlassesDescription);

      if (!v8) {
        goto LABEL_6;
      }
      id v9 = objc_msgSend(a1, sel_prescriptionType);
      if (v9)
      {
        uint64_t v10 = v9;
        id v5 = objc_msgSend(v9, sel_glassesDescription);

        if (v5) {
          goto LABEL_5;
        }
LABEL_18:
        __break(1u);
        return;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_4:
  id v5 = (id)HKVisionPrescriptionTypeLongLocalizedString();
LABEL_5:
  sub_241CDB0D0();

LABEL_6:
  SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();

  swift_bridgeObjectRelease();
}

id sub_241AD7620(void *a1)
{
  unsigned int v2 = objc_msgSend(a1, sel_hasLeftEyeSphere);
  if (v2)
  {
    id result = objc_msgSend(a1, sel_leftEyeSphere);
    if (!result)
    {
      __break(1u);
      goto LABEL_22;
    }
    unsigned int v4 = result;
    id v5 = (void *)sub_241CDB860();

    id v6 = objc_msgSend(self, sel_diopterUnit);
    objc_msgSend(v5, sel_doubleValueForUnit_, v6);
    double v8 = v7;

    if ((objc_msgSend(a1, sel_hasRightEyeSphere) & 1) == 0)
    {
      int v9 = 0;
      double v10 = 0.0;
      goto LABEL_9;
    }
  }
  else
  {
    double v8 = 0.0;
    if (!objc_msgSend(a1, sel_hasRightEyeSphere))
    {
      if (objc_msgSend(a1, sel_hasImage))
      {
        id v17 = (id)HKVisionPrescriptionImageOnlyLocalizedString();
      }
      else
      {
        sub_241AD7988();
        uint64_t v18 = (void *)sub_241CDBB40();
        uint64_t v19 = (void *)sub_241CDBB40();
        id v17 = (id)HKVisionLeftRightLongLocalizedString();
      }
      sub_241CDB0D0();
      goto LABEL_18;
    }
  }
  id result = objc_msgSend(a1, sel_rightEyeSphere);
  if (!result)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  uint64_t v11 = result;
  uint64_t v12 = (void *)sub_241CDB860();

  id v13 = objc_msgSend(self, sel_diopterUnit);
  objc_msgSend(v12, sel_doubleValueForUnit_, v13);
  double v10 = v14;

  if (!v2)
  {
    id v15 = 0;
    goto LABEL_14;
  }
  int v9 = 1;
LABEL_9:
  id v15 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v8);
  if (v9)
  {
LABEL_14:
    id v16 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v10);
    goto LABEL_15;
  }
  id v16 = 0;
LABEL_15:
  id v17 = (id)HKVisionLeftRightLongLocalizedString();
  sub_241CDB0D0();

LABEL_18:
  SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();

  return (id)swift_bridgeObjectRelease();
}

uint64_t sub_241AD78CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241AD79C8(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241AD7904(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_241AD7928(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_241AD7988()
{
  unint64_t result = qword_26B0304E8;
  if (!qword_26B0304E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0304E8);
  }
  return result;
}

uint64_t sub_241AD79C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_241AD7A30(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A5D1DC();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  id v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)v44 - v14;
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (!v16)
  {
    sub_241CDA140();
    id v32 = a1;
    uint64_t v33 = sub_241CDA190();
    os_log_type_t v34 = sub_241CDB650();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(void *)&v47[0] = v45;
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v36 = sub_241CDC270();
      uint64_t v46 = v7;
      uint64_t v49 = sub_241A33FE4(v36, v37, (uint64_t *)v47);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      v44[1] = v35 + 14;
      id v38 = v32;
      id v39 = objc_msgSend(v38, sel_description);
      uint64_t v40 = sub_241CDB0D0();
      unint64_t v42 = v41;

      uint64_t v49 = sub_241A33FE4(v40, v42, (uint64_t *)v47);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v33, v34, "[%s]: Unsupported sample type: %s", (uint8_t *)v35, 0x16u);
      uint64_t v43 = v45;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v43, -1, -1);
      MEMORY[0x245637F20](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v6);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return 0;
  }
  id v17 = (void *)v16;
  sub_241A313AC(0, &qword_26B034E40);
  id v18 = a1;
  id v19 = sub_241A4F20C(v17);
  uint64_t v20 = a2
      + *(int *)(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0) + 32);
  uint64_t v21 = sub_241CD9ED0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v20, v21);
  uint64_t v22 = *MEMORY[0x263F46C78];
  uint64_t v23 = sub_241CD9970();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v15, v22, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v15, 0, 1, v23);
  id v25 = a3;
  id result = objc_msgSend(v19, sel_data);
  if (result)
  {
    uint64_t v27 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v28 = sub_241CD6AE0();
    unint64_t v30 = v29;

    sub_241A5D234((uint64_t)v15, (uint64_t)v13);
    uint64_t v48 = 0;
    memset(v47, 0, sizeof(v47));
    id v31 = sub_241A54648(v28, v30, 16, (uint64_t)v13, (uint64_t)v25, 0, (uint64_t)v47);

    sub_241A37374(v28, v30);
    sub_241A5D298((uint64_t)v15);

    return v31;
  }
  __break(1u);
  return result;
}

uint64_t sub_241AD7F1C()
{
  return type metadata accessor for StateOfMindCurrentValueSummarySharableModelGenerator();
}

uint64_t type metadata accessor for StateOfMindCurrentValueSummarySharableModelGenerator()
{
  uint64_t result = qword_26B034438;
  if (!qword_26B034438) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double sub_241AD7F70@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t)objc_msgSend(v1, sel_code);
  if (v3 <= 190)
  {
    if (v3 == 100)
    {
      uint64_t v5 = &type metadata for ActivitySummaryAdditionalInputSignalsProvider;
      uint64_t v6 = &off_26F5C4300;
      goto LABEL_12;
    }
    if (v3 == 124)
    {
      uint64_t v5 = &type metadata for CardioFitnessAdditionalInputSignalProvider;
      uint64_t v6 = &off_26F5C1458;
      goto LABEL_12;
    }
  }
  else
  {
    switch(v3)
    {
      case 191:
        uint64_t v5 = &type metadata for PregnancyAdditionalInputSignalsProvider;
        uint64_t v6 = &off_26F5C3760;
        goto LABEL_12;
      case 248:
        uint64_t v5 = &type metadata for AFibBurdenAdditionalInputSignalsProvider;
        uint64_t v6 = &off_26F5C1070;
        goto LABEL_12;
      case 305:
        uint64_t v5 = &type metadata for BalanceAdditionalInputSignalProvider;
        uint64_t v6 = &off_26F5C55E8;
LABEL_12:
        *(void *)(a1 + 24) = v5;
        *(void *)(a1 + 32) = v6;
        return result;
    }
  }
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_241AD8044(void *a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v115 = a7;
  long long v113 = a6;
  uint64_t v114 = a4;
  uint64_t v118 = a2;
  unsigned int v119 = a3;
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v116 = v9;
  uint64_t v117 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v111 - v15;
  MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v111 - v17;
  sub_241ADE724(0, &qword_26B034D18, (void (*)(uint64_t))sub_241A550E8);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (id *)((char *)&v111 - v20);
  sub_241A550E8();
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (id *)((char *)&v111 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v25);
  unint64_t v29 = (id *)((char *)&v111 - v28);
  if (!a5) {
    goto LABEL_4;
  }
  id v30 = a5;
  HKCodableChartSharableModel.values(for:)((uint64_t)v119, v21);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23) == 1)
  {

    sub_241ADE9A4((uint64_t)v21, &qword_26B034D18, (void (*)(uint64_t))sub_241A550E8);
LABEL_4:
    sub_241CDA0F0();
    id v31 = a1;
    id v32 = v118;
    id v33 = v31;
    id v34 = v32;
    uint64_t v35 = sub_241CDA190();
    os_log_type_t v36 = sub_241CDB650();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v121 = v38;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v39 = sub_241AD8D78((uint64_t)v33, v34);
      uint64_t v120 = sub_241A33FE4(v39, v40, &v121);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      id v41 = (id)HKStringForHKTimeScope();
      if (!v41)
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        JUMPOUT(0x241AD8D44);
      }
      unint64_t v42 = v41;
      uint64_t v43 = sub_241CDB0D0();
      unint64_t v45 = v44;

      uint64_t v120 = sub_241A33FE4(v43, v45, &v121);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v35, v36, "%s: No readable chart model for %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v38, -1, -1);
      MEMORY[0x245637F20](v37, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v117 + 8))(v13, v116);
    return 0;
  }
  id v111 = v30;
  id v112 = v29;
  uint64_t v46 = *(int *)(v23 + 48);
  id v47 = (char *)v29 + v46;
  uint64_t v48 = (char *)v21 + v46;
  uint64_t v49 = *v21;
  *unint64_t v29 = *v21;
  uint64_t v50 = sub_241CD6810();
  uint64_t v51 = *(void *)(v50 - 8);
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v47, v48, v50);
  int v52 = (char *)v27 + *(int *)(v23 + 48);
  void *v27 = v49;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v52, v47, v50);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v51 + 8);
  id v54 = v49;
  v53(v52, v50);
  if (!objc_msgSend(v54, sel_hasType))
  {
    sub_241CDA0F0();
    id v62 = a1;
    uint64_t v63 = v118;
    id v64 = v62;
    id v65 = v63;
    unint64_t v66 = sub_241CDA190();
    os_log_type_t v67 = sub_241CDB650();
    if (os_log_type_enabled(v66, v67))
    {
      id v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v121 = v69;
      unsigned int v119 = v54;
      *(_DWORD *)id v68 = 136315138;
      uint64_t v70 = sub_241AD8D78((uint64_t)v64, v65);
      uint64_t v120 = sub_241A33FE4(v70, v71, &v121);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v66, v67, "%s: Chart model type missing, can't decode without it.", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v69, -1, -1);
      MEMORY[0x245637F20](v68, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v117 + 8))(v16, v116);
LABEL_19:
    sub_241ADE8C8((uint64_t)v112, (uint64_t (*)(void))sub_241A550E8);
    return 0;
  }
  switch(objc_msgSend(v54, sel_type))
  {
    case 0u:
      id v55 = objc_msgSend(v54, sel_queryDataObject);
      uint64_t v56 = (uint64_t)v112;
      if (v55)
      {
        uint64_t v57 = sub_241CD6AE0();
        unint64_t v59 = v58;

        id v55 = (id)sub_241CD6AD0();
        sub_241A37374(v57, v59);
      }
      id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46488]), sel_initWithData_, v55);

      if (!v60) {
        goto LABEL_49;
      }
      uint64_t v61 = (uint64_t)sub_241AD8E84(v60, a1, (char *)v118, v114, v119, v113);
      goto LABEL_40;
    case 1u:
      id v78 = objc_msgSend(v54, sel_queryDataObject);
      uint64_t v56 = (uint64_t)v112;
      if (v78)
      {
        uint64_t v79 = sub_241CD6AE0();
        unint64_t v81 = v80;

        id v78 = (id)sub_241CD6AD0();
        sub_241A37374(v79, v81);
      }
      id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46490]), sel_initWithData_, v78);

      if (!v60) {
        goto LABEL_51;
      }
      sub_241ADB840(v60, a1, v118, v114, v113);
      goto LABEL_40;
    case 4u:
      id v74 = objc_msgSend(v54, sel_queryDataObject);
      uint64_t v56 = (uint64_t)v112;
      if (v74)
      {
        uint64_t v75 = sub_241CD6AE0();
        unint64_t v77 = v76;

        id v74 = (id)sub_241CD6AD0();
        sub_241A37374(v75, v77);
      }
      id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46478]), sel_initWithData_, v74);

      if (!v60) {
        goto LABEL_50;
      }
      uint64_t v61 = (uint64_t)sub_241ADCCE4(v60, a1, v118, v114, v113);
      goto LABEL_40;
    case 7u:
      id v95 = objc_msgSend(v54, sel_queryDataObject);
      uint64_t v56 = (uint64_t)v112;
      if (v95)
      {
        uint64_t v96 = sub_241CD6AE0();
        unint64_t v98 = v97;

        id v95 = (id)sub_241CD6AD0();
        sub_241A37374(v96, v98);
      }
      id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F464A0]), sel_initWithData_, v95);

      if (!v60) {
        goto LABEL_52;
      }
      uint64_t v61 = (uint64_t)sub_241ADE0D8(v60, a1, v118, v114, v115);
      goto LABEL_40;
    case 9u:
      id v99 = objc_msgSend(v54, sel_queryDataObject);
      uint64_t v56 = (uint64_t)v112;
      if (v99)
      {
        uint64_t v100 = sub_241CD6AE0();
        unint64_t v102 = v101;

        id v99 = (id)sub_241CD6AD0();
        sub_241A37374(v100, v102);
      }
      id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46558]), sel_initWithData_, v99);

      if (!v60) {
        goto LABEL_53;
      }
      uint64_t v61 = sub_241ADA2C4(v60, a1, v118, v114, (uint64_t)v119, v115);
LABEL_40:
      uint64_t v72 = v61;

      sub_241ADE8C8(v56, (uint64_t (*)(void))sub_241A550E8);
      return v72;
    case 0xCu:
      id v103 = objc_msgSend(v54, sel_queryDataObject);
      uint64_t v104 = (uint64_t)v112;
      if (v103)
      {
        uint64_t v105 = sub_241CD6AE0();
        unint64_t v107 = v106;

        id v103 = (id)sub_241CD6AD0();
        sub_241A37374(v105, v107);
      }
      id v108 = v111;
      id v109 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46460]), sel_initWithData_, v103);

      if (!v109) {
        goto LABEL_54;
      }
      id v110 = objc_msgSend(v109, sel_quantityData);

      if (!v110) {
        goto LABEL_55;
      }
      uint64_t v72 = (uint64_t)sub_241AD8E84(v110, a1, (char *)v118, v114, v119, v113);

      sub_241ADE8C8(v104, (uint64_t (*)(void))sub_241A550E8);
      break;
    default:
      sub_241CDA0F0();
      id v82 = v54;
      id v83 = a1;
      uint64_t v84 = v118;
      id v85 = v82;
      id v86 = v83;
      id v87 = v84;
      uint64_t v88 = sub_241CDA190();
      os_log_type_t v89 = sub_241CDB650();
      if (os_log_type_enabled(v88, v89))
      {
        uint64_t v90 = swift_slowAlloc();
        unsigned int v119 = (void *)swift_slowAlloc();
        uint64_t v121 = (uint64_t)v119;
        *(_DWORD *)uint64_t v90 = 136315394;
        uint64_t v91 = sub_241AD8D78((uint64_t)v86, v87);
        uint64_t v120 = sub_241A33FE4(v91, v92, &v121);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v90 + 12) = 1024;
        unsigned int v93 = objc_msgSend(v85, sel_type);

        LODWORD(v120) = v93;
        sub_241CDBBF0();

        _os_log_impl(&dword_241A23000, v88, v89, "%s: model parsing for this chart type isn't supported yet %d", (uint8_t *)v90, 0x12u);
        uint64_t v94 = v119;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v94, -1, -1);
        MEMORY[0x245637F20](v90, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v117 + 8))(v18, v116);
      goto LABEL_19;
  }
  return v72;
}

uint64_t sub_241AD8D78(uint64_t a1, void *a2)
{
  sub_241CDC270();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  uint64_t v3 = (void *)sub_241CDB4D0();
  sub_241CD73D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  id v4 = objc_msgSend(a2, sel_sensitiveLoggingIdentifier);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  return 91;
}

id sub_241AD8E84(void *a1, id a2, char *a3, uint64_t a4, void *a5, void *a6)
{
  id v156 = a6;
  id v153 = a5;
  uint64_t v163 = (uint8_t *)a4;
  uint64_t v9 = sub_241CDA1A0();
  unint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v157 = (char *)&v135 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint64_t)&v135 - v16;
  uint64_t v18 = sub_241CD84A0();
  uint64_t v19 = *(char **)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  unint64_t v159 = (char *)&v135 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v135 - v22;
  sub_241ADE724(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v160 = (uint64_t)&v135 - v25;
  uint64_t v26 = sub_241CD6D00();
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v162 = (char *)&v135 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v161 = (char *)&v135 - v29;
  uint64_t v158 = sub_241CD6810();
  uint64_t v147 = *(void (***)(char *, char *, uint64_t))(v158 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v158);
  uint64_t v155 = (char *)&v135 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v152 = (char *)&v135 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v164 = (char *)&v135 - v34;
  if (!objc_msgSend(a1, sel_hasStatisticsCollection)) {
    goto LABEL_19;
  }
  uint64_t v35 = (char *)objc_msgSend(a1, sel_statisticsCollection);
  if (!v35) {
    goto LABEL_19;
  }
  os_log_type_t v36 = v35;
  uint64_t v142 = v23;
  if ((uint64_t)objc_msgSend(v35, sel_statisticsCount) < 1
    || (unint64_t v37 = (unint64_t)HKCodableStatisticsCollection.codableStatisticsArray()()) == 0)
  {

LABEL_19:
    sub_241CDA0F0();
    id v46 = a2;
    id v47 = a3;
    id v48 = v46;
    uint64_t v49 = v47;
    uint64_t v50 = sub_241CDA190();
    os_log_type_t v51 = sub_241CDB670();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v164 = v13;
      uint64_t v53 = (uint8_t *)v52;
      uint64_t v54 = swift_slowAlloc();
      uint64_t v166 = v54;
      uint64_t v148 = v9;
      *(_DWORD *)uint64_t v53 = 136315138;
      uint64_t v55 = sub_241AD8D78((uint64_t)v48, v49);
      uint64_t v165 = sub_241A33FE4(v55, v56, &v166);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v50, v51, "%s: unable to extract query data", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v54, -1, -1);
      MEMORY[0x245637F20](v53, -1, -1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v164, v148);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
    return 0;
  }
  unint64_t v38 = v37;
  uint64_t v148 = v9;
  uint64_t v166 = MEMORY[0x263F8EE78];
  uint64_t v145 = v18;
  if (v37 >> 62)
  {
LABEL_92:
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_241CDBF50();
  }
  else
  {
    uint64_t v39 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v146 = (void (**)(unint64_t, char *, uint64_t))v19;
  unint64_t v136 = v10;
  uint64_t v140 = v36;
  uint64_t v135 = v17;
  unint64_t v138 = a3;
  id v137 = a2;
  if (v39)
  {
    uint64_t v40 = self;
    if (v39 < 1)
    {
      __break(1u);
      goto LABEL_94;
    }
    id v41 = (void *)v40;
    for (uint64_t i = 0; i != v39; ++i)
    {
      if ((v38 & 0xC000000000000001) != 0) {
        id v43 = (id)MEMORY[0x245637160](i, v38);
      }
      else {
        id v43 = *(id *)(v38 + 8 * i + 32);
      }
      unint64_t v44 = v43;
      id v45 = objc_msgSend(v41, sel_statisticsWithCodableStatistics_, v43, v135);

      if (v45)
      {
        MEMORY[0x2456365D0]();
        if (*(void *)((v166 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v166 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_241CDB2F0();
        }
        sub_241CDB310();
        sub_241CDB2E0();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v39 = v166;
    unint64_t v10 = v136;
    os_log_type_t v36 = v140;
    a3 = v138;
    a2 = v137;
    uint64_t v19 = (char *)v146;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v39 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, a2);
  if (!result)
  {
    __break(1u);
    return result;
  }
  unint64_t v58 = result;
  id v59 = objc_msgSend(result, sel_displayTypeForObjectType_, a3);

  if (!v59)
  {
    swift_bridgeObjectRelease();
    sub_241CDA0F0();
    id v113 = a2;
    uint64_t v114 = a3;
    id v115 = v113;
    uint64_t v116 = v114;
    uint64_t v117 = sub_241CDA190();
    os_log_type_t v118 = sub_241CDB650();
    if (os_log_type_enabled(v117, v118))
    {
      unsigned int v119 = (uint8_t *)swift_slowAlloc();
      unint64_t v120 = v10;
      uint64_t v121 = swift_slowAlloc();
      uint64_t v166 = v121;
      *(_DWORD *)unsigned int v119 = 136315138;
      uint64_t v122 = sub_241AD8D78((uint64_t)v115, v116);
      uint64_t v165 = sub_241A33FE4(v122, v123, &v166);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v117, v118, "%s: Unable to instantiate display type", v119, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v121, -1, -1);
      MEMORY[0x245637F20](v119, -1, -1);

      (*(void (**)(char *, uint64_t))(v120 + 8))(v157, v148);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v10 + 8))(v157, v148);
    }
    return 0;
  }
  id v154 = v59;
  id v60 = objc_msgSend(v59, sel_chartingRules);
  id v153 = objc_msgSend(v60, sel_chartStyleForTimeScope_, v153);

  if ((unint64_t)v39 >> 62)
  {
LABEL_94:
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v61) {
      goto LABEL_30;
    }
LABEL_95:

    swift_bridgeObjectRelease();
    unint64_t v10 = MEMORY[0x263F8EE78];
LABEL_96:

    return (id)v10;
  }
  uint64_t v61 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v61) {
    goto LABEL_95;
  }
LABEL_30:
  unint64_t v151 = v39 & 0xC000000000000001;
  uint64_t v150 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v147 + 6);
  id v143 = (void (**)(char *, uint64_t, uint64_t))(v147 + 4);
  uint64_t v157 = (char *)(v147 + 1);
  v147 += 2;
  uint64_t v144 = v19 + 32;
  unint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v17 = 4;
  uint64_t v62 = v158;
  os_log_type_t v36 = v164;
  id v149 = (id)v61;
  while (1)
  {
    if (v151) {
      id v64 = (id)MEMORY[0x245637160](v17 - 4, v39);
    }
    else {
      id v64 = *(id *)(v39 + 8 * v17);
    }
    unint64_t v38 = (unint64_t)v64;
    a2 = (id)(v17 - 3);
    if (__OFADD__(v17 - 4, 1))
    {
      __break(1u);
      goto LABEL_92;
    }
    uint64_t v19 = (char *)v39;
    id v65 = objc_msgSend(v64, sel_startDate);
    sub_241CD6CB0();

    id v66 = objc_msgSend((id)v38, sel_endDate);
    sub_241CD6CB0();

    sub_241CD67C0();
    uint64_t v67 = v160;
    sub_241A4145C((uint64_t)v163, v160);
    if ((*v150)(v67, 1, v62) == 1) {
      break;
    }
    uint64_t v68 = (uint64_t)v36;
    uint64_t v69 = (uint64_t)v152;
    (*v143)(v152, v67, v62);
    id v70 = objc_msgSend(v154, sel_behavior);
    id v71 = objc_msgSend(v70, sel_preferredCalendarDayAlignment);

    LOBYTE(v70) = sub_241ADA5E0(v68, v69, v72, (uint64_t)v71);
    uint64_t v73 = *(void (**)(void, void))v157;
    (*(void (**)(uint64_t, uint64_t))v157)(v69, v62);
    if (v70) {
      goto LABEL_40;
    }
    uint64_t v63 = v164;
    v73(v164, v62);
    os_log_type_t v36 = v63;
    a3 = (char *)v38;
    uint64_t v39 = (uint64_t)v19;
LABEL_32:

    ++v17;
    if (a2 == v149)
    {

      swift_bridgeObjectRelease();
      goto LABEL_96;
    }
  }
  sub_241ADE9A4(v67, &qword_26B038F10, MEMORY[0x263F062D0]);
LABEL_40:
  uint64_t v39 = (uint64_t)v19;
  if (v153 == (id)1 || v153 == (id)4)
  {
    id v82 = objc_msgSend((id)v38, sel_averageQuantity, v135);
    id v83 = v154;
    if (v82
      || (id v82 = objc_msgSend((id)v38, sel_sumQuantity)) != 0
      || (id v82 = objc_msgSend((id)v38, sel_maximumQuantity)) != 0
      || (id v82 = objc_msgSend((id)v38, sel_minimumQuantity)) != 0
      || (id v82 = objc_msgSend((id)v38, sel_mostRecentQuantity)) != 0)
    {
      id v84 = objc_msgSend(v156, sel_unitForChartingDisplayType_, v83);
      if (v84)
      {
        id v85 = v84;
        if ((objc_msgSend(v82, sel_isCompatibleWithUnit_, v84) & 1) != 0
          && (objc_msgSend(v85, sel_isNull) & 1) == 0)
        {
          objc_msgSend(v82, sel_doubleValueForUnit_, v85);
          double v88 = v87;
          id v89 = objc_msgSend(v83, sel_presentation);
          objc_msgSend(v89, sel_adjustedDoubleForDaemonDouble_, v88);
          double v91 = v90;

          uint64_t v62 = v158;
          id v86 = (char *)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v85, v91);
        }
        else
        {
          id v86 = (char *)v82;
        }
        a3 = v86;
      }
      else
      {
        a3 = (char *)v82;
      }
      (*v147)(v155, v164, v62);
      objc_msgSend(a3, sel__value);
      sub_241CD8470();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v10 = sub_241AF7234(0, *(void *)(v10 + 16) + 1, 1, v10);
      }
      unint64_t v93 = *(void *)(v10 + 16);
      unint64_t v92 = *(void *)(v10 + 24);
      if (v93 >= v92 >> 1) {
        unint64_t v10 = sub_241AF7234(v92 > 1, v93 + 1, 1, v10);
      }
      *(void *)(v10 + 16) = v93 + 1;
      v146[4](v10+ ((*((unsigned __int8 *)v146 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v146 + 80))+ (void)v146[9] * v93, v159, v145);

      uint64_t v62 = v158;
      os_log_type_t v36 = v164;
      (*(void (**)(char *, uint64_t))v157)(v164, v158);
      goto LABEL_32;
    }
LABEL_59:
    os_log_type_t v36 = v164;
    (*(void (**)(char *, uint64_t))v157)(v164, v62);
    a3 = (char *)v38;
    goto LABEL_32;
  }
  id v74 = v154;
  if (v153 == (id)3)
  {
    id v75 = objc_msgSend((id)v38, sel_minimumQuantity);
    if (v75)
    {
      unint64_t v76 = v75;
      unint64_t v77 = (char *)objc_msgSend((id)v38, sel_maximumQuantity);
      if (v77)
      {
        id v78 = v77;
        id v79 = objc_msgSend(v156, sel_unitForChartingDisplayType_, v74);
        if (v79)
        {
          unint64_t v80 = v79;
          if ((objc_msgSend(v76, sel_isCompatibleWithUnit_, v79) & 1) != 0
            && (objc_msgSend(v80, sel_isNull) & 1) == 0)
          {
            objc_msgSend(v76, sel_doubleValueForUnit_, v80);
            double v97 = v96;
            id v98 = objc_msgSend(v74, sel_presentation);
            objc_msgSend(v98, sel_adjustedDoubleForDaemonDouble_, v97);
            double v100 = v99;

            id v81 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v80, v100);
          }
          else
          {
            id v81 = v76;
          }
          id v95 = v81;
        }
        else
        {
          id v95 = v76;
        }
        id v141 = v95;
        id v101 = objc_msgSend(v156, sel_unitForChartingDisplayType_, v74);
        int v139 = v78;
        if (v101)
        {
          unint64_t v102 = v101;
          if ((objc_msgSend(v78, sel_isCompatibleWithUnit_, v101) & 1) != 0
            && (objc_msgSend(v102, sel_isNull) & 1) == 0)
          {
            objc_msgSend(v78, sel_doubleValueForUnit_, v102);
            double v106 = v105;
            id v107 = objc_msgSend(v74, sel_presentation);
            objc_msgSend(v107, sel_adjustedDoubleForDaemonDouble_, v106);
            double v109 = v108;

            id v103 = (char *)objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v102, v109);
          }
          else
          {
            id v103 = v78;
          }
          uint64_t v104 = v103;
        }
        else
        {
          uint64_t v104 = v78;
        }
        (*v147)(v155, v164, v158);
        a3 = v104;
        id v110 = v141;
        objc_msgSend(v141, sel__value);

        objc_msgSend(a3, sel__value);
        sub_241CD8470();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v10 = sub_241AF7234(0, *(void *)(v10 + 16) + 1, 1, v10);
        }
        unint64_t v112 = *(void *)(v10 + 16);
        unint64_t v111 = *(void *)(v10 + 24);
        uint64_t v19 = v139;
        if (v112 >= v111 >> 1) {
          unint64_t v10 = sub_241AF7234(v111 > 1, v112 + 1, 1, v10);
        }
        *(void *)(v10 + 16) = v112 + 1;
        v146[4](v10+ ((*((unsigned __int8 *)v146 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v146 + 80))+ (void)v146[9] * v112, v142, v145);

        uint64_t v62 = v158;
        os_log_type_t v36 = v164;
        (*(void (**)(char *, uint64_t))v157)(v164, v158);
      }
      else
      {
        uint64_t v94 = v164;
        (*(void (**)(char *, uint64_t))v157)(v164, v62);

        os_log_type_t v36 = v94;
        a3 = (char *)v38;
      }
      goto LABEL_32;
    }
    goto LABEL_59;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v124 = v135;
  sub_241CDA0F0();
  id v125 = v137;
  unint64_t v126 = v138;
  id v127 = v125;
  uint64_t v128 = v126;
  uint64_t v129 = sub_241CDA190();
  os_log_type_t v130 = sub_241CDB650();
  if (os_log_type_enabled(v129, v130))
  {
    uint64_t v131 = (uint8_t *)swift_slowAlloc();
    uint64_t v132 = swift_slowAlloc();
    uint64_t v166 = v132;
    *(_DWORD *)uint64_t v131 = 136315138;
    uint64_t v163 = v131 + 4;
    uint64_t v133 = sub_241AD8D78((uint64_t)v127, v128);
    uint64_t v165 = sub_241A33FE4(v133, v134, &v166);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v129, v130, "%s: cannot generate trend, received unsupported chart kind for quantity data source", v131, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v132, -1, -1);
    MEMORY[0x245637F20](v131, -1, -1);
  }
  else
  {
  }
  (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v124, v148);
  (*(void (**)(char *, uint64_t))v157)(v164, v158);
  return 0;
}

uint64_t sub_241ADA2C4(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_241CDA1A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)objc_msgSend(a1, sel_sleepSummaryEntrysCount) < 1)
  {
    sub_241CDA0F0();
    id v21 = a2;
    id v22 = a3;
    id v23 = v21;
    id v24 = v22;
    uint64_t v25 = sub_241CDA190();
    os_log_type_t v26 = sub_241CDB670();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v35 = v33;
      *(_DWORD *)uint64_t v27 = 136315138;
      v32[1] = v27 + 4;
      uint64_t v28 = sub_241AD8D78((uint64_t)v23, v24);
      uint64_t v34 = sub_241A33FE4(v28, v29, &v35);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v25, v26, "%s: Sleep chart had no sleep summary entries", v27, 0xCu);
      uint64_t v30 = v33;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v30, -1, -1);
      MEMORY[0x245637F20](v27, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  else
  {
    id v16 = objc_msgSend(a1, sel_daySummariesWithSourceTimeZone_, 0);
    sub_241A313AC(0, (unint64_t *)&qword_26B02E800);
    unint64_t v17 = sub_241CDB2C0();

    MEMORY[0x270FA5388](v18);
    v32[-4] = a4;
    v32[-3] = a6;
    v32[-2] = a5;
    sub_241AFE1F8((void (*)(id *))sub_241ADE840, (uint64_t)&v32[-6], v17);
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
  }
  return v20;
}

uint64_t sub_241ADA5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = a2;
  uint64_t v58 = a1;
  uint64_t v5 = sub_241CDA1A0();
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD6810();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  unint64_t v56 = (void (*)(char *, uint64_t))((char *)&v49 - v14);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v49 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v49 - v18;
  uint64_t v20 = sub_241CD6D00();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  id v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a4;
  uint64_t v59 = v22;
  if (!a4)
  {
    uint64_t v40 = v58;
    sub_241CD67E0();
    uint64_t v41 = v57;
    char v42 = sub_241CD67F0();
    unint64_t v56 = *(void (**)(char *, uint64_t))(v21 + 8);
    v56(v24, v20);
    id v43 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v43(v19, v41, v8);
    v43(v17, v40, v8);
    if (v42)
    {
      sub_241CD67B0();
      char v38 = sub_241CD67F0();
      v56(v24, v59);
      unint64_t v44 = *(void (**)(char *, uint64_t))(v9 + 8);
      v44(v17, v8);
      v44(v19, v8);
      return v38 & 1;
    }
    id v45 = *(void (**)(char *, uint64_t))(v9 + 8);
    v45(v17, v8);
    id v46 = v19;
    uint64_t v47 = v8;
LABEL_10:
    v45(v46, v47);
    char v38 = 0;
    return v38 & 1;
  }
  uint64_t v50 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v51 = v12;
  uint64_t v52 = v21;
  sub_241CDA0F0();
  uint64_t v25 = sub_241CDA190();
  os_log_type_t v26 = sub_241CDB670();
  uint64_t v27 = v8;
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v61 = v29;
    *(_DWORD *)uint64_t v28 = 136446466;
    uint64_t v30 = sub_241CDC270();
    uint64_t v60 = sub_241A33FE4(v30, v31, &v61);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2048;
    uint64_t v60 = v53;
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v25, v26, "[%{public}s] unknown HKChartQueryCalendarDayAlignment with value %ld", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v29, -1, -1);
    MEMORY[0x245637F20](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v54 + 8))(v7, v55);
  uint64_t v32 = v50;
  uint64_t v33 = v58;
  sub_241CD67E0();
  uint64_t v34 = v57;
  LODWORD(v55) = sub_241CD67F0();
  uint64_t v54 = *(void *)(v52 + 8);
  ((void (*)(char *, uint64_t))v54)(v32, v59);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  os_log_type_t v36 = (char *)v56;
  v35((char *)v56, v34, v27);
  unint64_t v37 = v51;
  v35(v51, v33, v27);
  if ((v55 & 1) == 0)
  {
    id v45 = *(void (**)(char *, uint64_t))(v9 + 8);
    v45(v37, v27);
    id v46 = v36;
    uint64_t v47 = v27;
    goto LABEL_10;
  }
  sub_241CD67B0();
  char v38 = sub_241CD67F0();
  ((void (*)(char *, uint64_t))v54)(v32, v59);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v9 + 8);
  v39(v37, v27);
  v39(v36, v27);
  return v38 & 1;
}

uint64_t sub_241ADAB70@<X0>(void **a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v35 = a4;
  sub_241ADE724(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v34 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v29[-v9];
  uint64_t v11 = sub_241CD6810();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v31 = &v29[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v32 = &v29[-v16];
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = &v29[-v17];
  uint64_t v19 = *a1;
  sub_241A4145C(a2, (uint64_t)v10);
  uint64_t v20 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48);
  if (v20(v10, 1, v11) == 1)
  {
    sub_241ADE9A4((uint64_t)v10, &qword_26B038F10, MEMORY[0x263F062D0]);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v18, v10, v11);
    uint64_t v21 = (void *)sub_241CD6790();
    uint64_t v22 = (void *)sub_241CD6E40();
    unsigned int v30 = objc_msgSend(v19, sel_hk_overlapsMidnightBasedDateInterval_gregorianCalendar_, v21, v22);

    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v18, v11);
    if ((v30 & 1) == 0)
    {
LABEL_6:
      uint64_t v24 = sub_241CD84A0();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v35, 1, 1, v24);
    }
  }
  uint64_t v23 = v34;
  sub_241B6FA98(v19, v33, (uint64_t)v34);
  if (v20(v23, 1, v11) == 1)
  {
    sub_241ADE9A4((uint64_t)v23, &qword_26B038F10, MEMORY[0x263F062D0]);
    goto LABEL_6;
  }
  os_log_type_t v26 = v32;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v32, v23, v11);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v31, v26, v11);
  objc_msgSend(v19, sel_sleepDuration);
  uint64_t v27 = v35;
  sub_241CD8470();
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v26, v11);
  uint64_t v28 = sub_241CD84A0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
}

uint64_t sub_241ADAF4C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X5>, uint64_t a6@<X8>)
{
  id v40 = a5;
  uint64_t v41 = a4;
  id v42 = a2;
  uint64_t v43 = a3;
  sub_241ADE724(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v11 = sub_241CD6D00();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_241CD6810();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v38 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v38 - v21;
  sub_241ADE86C(a1, (uint64_t)v45);
  sub_241ADEA00();
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v26 = sub_241CD84A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a6, 1, 1, v26);
  }
  char v38 = v17;
  uint64_t v39 = a6;
  id v23 = v44;
  id v24 = objc_msgSend(v44, sel_startDate);
  sub_241CD6CB0();

  id v25 = objc_msgSend(v23, sel_endDate);
  sub_241CD6CB0();

  sub_241CD67C0();
  sub_241A4145C(v43, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
  {
    sub_241ADE9A4((uint64_t)v10, &qword_26B038F10, MEMORY[0x263F062D0]);
LABEL_6:
    id v32 = objc_msgSend(self, sel_secondUnit);
    objc_msgSend(v42, sel_doubleValue);
    id v34 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v32, v33);

    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v38, v22, v13);
    objc_msgSend(v34, sel__value);
    uint64_t v35 = v39;
    sub_241CD8470();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    uint64_t v36 = sub_241CD84A0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v10, v13);
  id v28 = objc_msgSend(v40, sel_behavior);
  id v29 = objc_msgSend(v28, sel_preferredCalendarDayAlignment);

  LOBYTE(v28) = sub_241ADA5E0((uint64_t)v22, (uint64_t)v20, v30, (uint64_t)v29);
  unint64_t v31 = *(void (**)(char *, uint64_t))(v14 + 8);
  v31(v20, v13);
  if (v28) {
    goto LABEL_6;
  }
  v31(v22, v13);
  swift_unknownObjectRelease();
  uint64_t v37 = sub_241CD84A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v39, 1, 1, v37);
}

uint64_t sub_241ADB43C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ChartModelParsing()
{
  return self;
}

uint64_t sub_241ADB470(unint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  unint64_t v5 = v4;
  id v42 = a3;
  uint64_t v43 = a4;
  uint64_t v41 = a2;
  uint64_t v7 = sub_241CD6D00();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  id v40 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v39 = (char *)&v31 - v10;
  sub_241A55C0C();
  uint64_t v37 = *(void *)(v11 - 8);
  uint64_t v38 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    if (!v14) {
      return v15;
    }
    uint64_t v44 = MEMORY[0x263F8EE78];
    uint64_t result = sub_241A52078(0, v14 & ~(v14 >> 63), 0);
    if (v14 < 0) {
      break;
    }
    unint64_t v31 = v5;
    uint64_t v15 = v44;
    unint64_t v34 = a1 & 0xC000000000000001;
    id v33 = self;
    id v32 = self;
    uint64_t v17 = 0;
    uint64_t v35 = v14;
    unint64_t v36 = a1;
    while (v14 != v17)
    {
      if (v34) {
        id v18 = (id)MEMORY[0x245637160](v17, a1);
      }
      else {
        id v18 = *(id *)(a1 + 8 * v17 + 32);
      }
      uint64_t v19 = v18;
      uint64_t v20 = v41;
      id v21 = objc_msgSend(v33, sel_quantityDistributionDataWithCodableQuantityDistributionData_sourceTimeZone_preferredUnit_, v18, 0, v41);
      objc_msgSend(v42, sel_doubleValue);
      double v23 = v22;
      id v24 = objc_allocWithZone(MEMORY[0x263F46910]);
      id v25 = objc_msgSend(v24, sel_initWithHistogramData_bucketIncrement_unit_displayType_, v21, v20, v43, v23);

      id v26 = objc_msgSend(v21, sel_startDate);
      sub_241CD6CB0();

      id v27 = objc_msgSend(v21, sel_endDate);
      sub_241CD6CB0();

      sub_241CD67C0();
      id v28 = objc_msgSend(v32, sel_segmentsFromChartPoint_zeroCountForGap_, v25, 6);
      sub_241A313AC(0, (unint64_t *)&qword_26B0304E8);
      uint64_t v29 = sub_241CDB2C0();

      *(void *)&v13[*(int *)(v38 + 48)] = v29;
      uint64_t v44 = v15;
      unint64_t v5 = *(void *)(v15 + 16);
      unint64_t v30 = *(void *)(v15 + 24);
      if (v5 >= v30 >> 1)
      {
        sub_241A52078(v30 > 1, v5 + 1, 1);
        uint64_t v15 = v44;
      }
      ++v17;
      *(void *)(v15 + 16) = v5 + 1;
      sub_241ADE7DC((uint64_t)v13, v15+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v5);
      uint64_t v14 = v35;
      a1 = v36;
      if (v35 == v17) {
        return v15;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_241ADB840(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v202 = a5;
  uint64_t v191 = a4;
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v205 = v8;
  uint64_t v206 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v204 = (char *)&v165 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v165 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v165 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v201 = (char *)&v165 - v18;
  uint64_t v184 = sub_241CD84A0();
  uint64_t v186 = *(void *)(v184 - 8);
  MEMORY[0x270FA5388](v184);
  uint64_t v198 = (char *)&v165 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_241CD6D00();
  uint64_t v192 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v197 = (char *)&v165 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241ADE724(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v22 - 8);
  id v24 = (char *)&v165 - v23;
  uint64_t v25 = sub_241CD6810();
  uint64_t v190 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v25 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  id v179 = (char *)&v165 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v185 = (char *)&v165 - v29;
  MEMORY[0x270FA5388](v28);
  unint64_t v31 = (char *)&v165 - v30;
  sub_241A55C0C();
  uint64_t v194 = v32;
  uint64_t v173 = *(void *)(v32 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  uint64_t v183 = (char *)&v165 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v199 = (char *)&v165 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v200 = (char *)&v165 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  char v175 = (char *)&v165 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v207 = (uint64_t)&v165 - v42;
  MEMORY[0x270FA5388](v41);
  uint64_t v172 = (uint64_t)&v165 - v43;
  unint64_t v44 = (unint64_t)HKCodableChartQuantityDistributionDataSourceQueryData.quantityDistributionArray()();
  if (!v44)
  {
    sub_241CDA0F0();
    id v119 = a3;
    id v120 = a2;
    id v121 = a1;
    id v122 = v119;
    id v123 = v120;
    id v124 = v121;
    id v125 = sub_241CDA190();
    os_log_type_t v126 = sub_241CDB650();
    if (os_log_type_enabled(v125, v126))
    {
      uint64_t v127 = swift_slowAlloc();
      uint64_t v128 = swift_slowAlloc();
      uint64_t v209 = v128;
      *(_DWORD *)uint64_t v127 = 136315394;
      uint64_t v129 = sub_241AD8D78((uint64_t)v123, v122);
      uint64_t v208 = sub_241A33FE4(v129, v130, &v209);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v127 + 12) = 2080;
      id v131 = v124;
      id v132 = objc_msgSend(v131, sel_description);
      uint64_t v133 = sub_241CDB0D0();
      unint64_t v135 = v134;

      uint64_t v208 = sub_241A33FE4(v133, v135, &v209);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v125, v126, "%s: Malformed protobuf query data: %s", (uint8_t *)v127, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v128, -1, -1);
      MEMORY[0x245637F20](v127, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v206 + 8))(v204, v205);
    return;
  }
  unint64_t v45 = v44;
  self;
  uint64_t v46 = swift_dynamicCastObjCClass();
  if (!v46)
  {
    swift_bridgeObjectRelease();
    sub_241CDA0F0();
    id v136 = a3;
    id v137 = a2;
    id v138 = v136;
    id v52 = v137;
    int v139 = sub_241CDA190();
    os_log_type_t v140 = sub_241CDB650();
    if (os_log_type_enabled(v139, v140))
    {
      id v141 = (uint8_t *)swift_slowAlloc();
      uint64_t v142 = swift_slowAlloc();
      uint64_t v209 = v142;
      *(_DWORD *)id v141 = 136315138;
      uint64_t v143 = sub_241AD8D78((uint64_t)v52, v138);
      uint64_t v208 = sub_241A33FE4(v143, v144, &v209);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v139, v140, "%s: Only quantity types are supported for quantity distribution charts.", v141, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v142, -1, -1);
      MEMORY[0x245637F20](v141, -1, -1);

LABEL_60:
      (*(void (**)(char *, uint64_t))(v206 + 8))(v14, v205);
      return;
    }

LABEL_59:
    goto LABEL_60;
  }
  uint64_t v47 = v46;
  uint64_t v193 = v24;
  id v48 = self;
  id v49 = a3;
  id v50 = objc_msgSend(v48, sel_sharedInstanceForHealthStore_, a2);
  if (!v50)
  {
LABEL_65:
    __break(1u);
    return;
  }
  os_log_type_t v51 = v50;
  id v52 = objc_msgSend(v50, sel_displayTypeForObjectType_, v49);

  if (!v52)
  {
    swift_bridgeObjectRelease();
    sub_241CDA0F0();
    id v145 = v49;
    id v146 = a2;
    id v147 = v145;
    id v148 = v146;
    id v149 = sub_241CDA190();
    os_log_type_t v150 = sub_241CDB650();
    if (os_log_type_enabled(v149, v150))
    {
      unint64_t v151 = (uint8_t *)swift_slowAlloc();
      uint64_t v152 = swift_slowAlloc();
      uint64_t v209 = v152;
      *(_DWORD *)unint64_t v151 = 136315138;
      uint64_t v153 = sub_241AD8D78((uint64_t)v148, v147);
      uint64_t v208 = sub_241A33FE4(v153, v154, &v209);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v149, v150, "%s: Unable to instantiate display type", v151, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v152, -1, -1);
      MEMORY[0x245637F20](v151, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v206 + 8))(v17, v205);
    return;
  }
  id v167 = v49;
  uint64_t v178 = v20;
  id v53 = objc_msgSend(v202, sel_unitForChartingDisplayType_, v52);
  if (!v53)
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = v201;
    sub_241CDA0F0();
    id v155 = v167;
    id v156 = a2;
    id v157 = v155;
    id v158 = v156;
    unint64_t v159 = sub_241CDA190();
    os_log_type_t v160 = sub_241CDB650();
    if (os_log_type_enabled(v159, v160))
    {
      uint64_t v161 = (uint8_t *)swift_slowAlloc();
      uint64_t v162 = swift_slowAlloc();
      uint64_t v209 = v162;
      *(_DWORD *)uint64_t v161 = 136315138;
      uint64_t v163 = sub_241AD8D78((uint64_t)v158, v157);
      uint64_t v208 = sub_241A33FE4(v163, v164, &v209);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v159, v160, "%s: Unable to instantiate preferred unit", v161, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v162, -1, -1);
      MEMORY[0x245637F20](v161, -1, -1);

      (*(void (**)(char *, uint64_t))(v206 + 8))(v201, v205);
      return;
    }

    goto LABEL_59;
  }
  uint64_t v54 = v53;
  uint64_t v177 = v31;
  id v55 = objc_msgSend(self, sel_bucketSizeForQuantityType_preferredUnit_, v47, v53);
  id v56 = v54;
  id v57 = v55;
  id v58 = v52;
  uint64_t v59 = sub_241ADB470(v45, (uint64_t)v56, v57, (uint64_t)v58);
  swift_bridgeObjectRelease();

  uint64_t v171 = *(void *)(v59 + 16);
  if (v171)
  {
    id v165 = v58;
    id v166 = v57;
    unint64_t v60 = 0;
    uint64_t v61 = v194;
    uint64_t v170 = *(int *)(v194 + 48);
    unint64_t v169 = v59 + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80));
    uint64_t v181 = (void (**)(uint64_t, uint64_t, uint64_t))(v190 + 4);
    uint64_t v196 = (uint64_t *)(v190 + 2);
    uint64_t v203 = (id *)(v190 + 1);
    v190 += 6;
    uint64_t v182 = v186 + 32;
    unint64_t v62 = MEMORY[0x263F8EE78];
    uint64_t v63 = v185;
    id v195 = v56;
    uint64_t v168 = v59;
    uint64_t v176 = (void (**)(char *, uint64_t))(v192 + 8);
    while (1)
    {
      if (v60 >= *(void *)(v59 + 16)) {
        goto LABEL_63;
      }
      unint64_t v64 = v62;
      uint64_t v65 = *(void *)(v173 + 72);
      unint64_t v174 = v60;
      uint64_t v66 = v172;
      sub_241ADE778(v169 + v65 * v60, v172);
      uint64_t v67 = (char *)*(int *)(v61 + 48);
      unint64_t v68 = *(void *)(v66 + v170);
      uint64_t v69 = v207;
      uint64_t v180 = *v181;
      v180(v207, v66, v25);
      uint64_t v201 = v67;
      *(void *)&v67[v69] = v68;
      uint64_t v70 = *(int *)(v61 + 48);
      id v71 = v175;
      uint64_t v206 = *v196;
      ((void (*)(char *, uint64_t, uint64_t))v206)(v175, v69, v25);
      *(void *)&v71[v70] = v68;
      if (v68 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v72 = sub_241CDBF50();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v72 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      BOOL v73 = __OFSUB__(v72, 1);
      uint64_t v74 = v72 - 1;
      id v56 = v195;
      if (v73) {
        break;
      }
      unint64_t v62 = v64;
      id v202 = *v203;
      ((void (*)(char *, uint64_t))v202)(v175, v25);
      if (v74 >= 1)
      {
        unint64_t v75 = 0;
        uint64_t v76 = (uint64_t)v193;
        uint64_t v192 = v74;
        unint64_t v77 = v197;
        do
        {
          uint64_t v205 = v75 + 2;
          BOOL v83 = __OFADD__(v75, 2);
          LODWORD(v204) = v83;
          sub_241A4145C(v191, v76);
          if ((*v190)(v76, 1, v25) == 1)
          {
            sub_241ADE9A4(v76, &qword_26B038F10, MEMORY[0x263F062D0]);
          }
          else
          {
            unint64_t v188 = v75;
            unint64_t v189 = v62;
            id v84 = v177;
            v180((uint64_t)v177, v76, v25);
            uint64_t v85 = v207;
            sub_241CD67E0();
            char v86 = sub_241CD67F0();
            uint64_t v87 = v178;
            id v187 = *v176;
            v187(v77, v178);
            double v88 = (void (*)(char *, uint64_t, uint64_t))v206;
            ((void (*)(char *, char *, uint64_t))v206)(v63, v84, v25);
            id v89 = v63;
            double v90 = v179;
            v88(v179, v85, v25);
            if ((v86 & 1) == 0)
            {
              id v78 = (void (*)(char *, uint64_t))v202;
              ((void (*)(char *, uint64_t))v202)(v90, v25);
              v78(v89, v25);
              v78(v84, v25);
              uint64_t v63 = v89;
              uint64_t v61 = v194;
              id v56 = v195;
              unint64_t v62 = v189;
              uint64_t v79 = v192;
              uint64_t v80 = v205;
              char v81 = (char)v204;
              unint64_t v77 = v197;
              unint64_t v75 = v188;
              goto LABEL_16;
            }
            unint64_t v77 = v197;
            sub_241CD67B0();
            char v91 = sub_241CD67F0();
            v187(v77, v87);
            unint64_t v92 = (void (*)(char *, uint64_t))v202;
            ((void (*)(char *, uint64_t))v202)(v90, v25);
            v92(v89, v25);
            v92(v84, v25);
            uint64_t v61 = v194;
            id v56 = v195;
            unint64_t v62 = v189;
            unint64_t v75 = v188;
            if ((v91 & 1) == 0)
            {
              uint64_t v63 = v89;
              uint64_t v79 = v192;
              uint64_t v80 = v205;
              char v81 = (char)v204;
              goto LABEL_16;
            }
          }
          uint64_t v93 = *(int *)(v61 + 48);
          uint64_t v94 = v200;
          uint64_t v95 = v207;
          ((void (*)(char *, uint64_t, uint64_t))v206)(v200, v207, v25);
          uint64_t v96 = *(void *)&v201[v95];
          *(void *)&v94[v93] = v96;
          if ((v96 & 0xC000000000000001) != 0)
          {
            unint64_t v97 = v62;
            id v117 = v56;
            swift_bridgeObjectRetain();
            id v100 = (id)MEMORY[0x245637160](v75, v96);
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v75 >= *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
            unint64_t v97 = v62;
            id v98 = *(void **)(v96 + 8 * v75 + 32);
            id v99 = v56;
            id v100 = v98;
          }
          objc_msgSend(v100, sel_doubleValue, v165);
          double v102 = v101;

          id v103 = self;
          id v104 = objc_msgSend(v103, sel_quantityWithUnit_doubleValue_, v56, v102);

          ((void (*)(char *, uint64_t))v202)(v200, v25);
          uint64_t v105 = *(int *)(v61 + 48);
          double v106 = v199;
          uint64_t v107 = v207;
          ((void (*)(char *, uint64_t, uint64_t))v206)(v199, v207, v25);
          uint64_t v108 = *(void *)&v201[v107];
          *(void *)&v106[v105] = v108;
          if ((v108 & 0xC000000000000001) != 0)
          {
            id v56 = v195;
            id v118 = v195;
            swift_bridgeObjectRetain();
            id v111 = (id)MEMORY[0x245637160](v75 + 1, v108);
            swift_bridgeObjectRelease();
            unint64_t v62 = v97;
          }
          else
          {
            if (v75 + 1 >= *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_62;
            }
            unint64_t v62 = v97;
            double v109 = *(void **)(v108 + 8 * v75 + 40);
            id v56 = v195;
            id v110 = v195;
            id v111 = v109;
          }
          objc_msgSend(v111, sel_doubleValue);
          double v113 = v112;

          id v114 = objc_msgSend(v103, sel_quantityWithUnit_doubleValue_, v56, v113);
          ((void (*)(char *, uint64_t))v202)(v199, v25);
          ((void (*)(char *, uint64_t, uint64_t))v206)(v183, v207, v25);
          objc_msgSend(v104, sel__value);
          objc_msgSend(v114, sel__value);
          sub_241CD8470();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v62 = sub_241AF7234(0, *(void *)(v62 + 16) + 1, 1, v62);
          }
          uint64_t v80 = v205;
          char v81 = (char)v204;
          unint64_t v116 = *(void *)(v62 + 16);
          unint64_t v115 = *(void *)(v62 + 24);
          if (v116 >= v115 >> 1) {
            unint64_t v62 = sub_241AF7234(v115 > 1, v116 + 1, 1, v62);
          }
          *(void *)(v62 + 16) = v116 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v186 + 32))(v62+ ((*(unsigned __int8 *)(v186 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v186 + 80))+ *(void *)(v186 + 72) * v116, v198, v184);

          unint64_t v77 = v197;
          uint64_t v63 = v185;
          uint64_t v61 = v194;
          uint64_t v79 = v192;
LABEL_16:
          if (v80 >= v79) {
            char v82 = 1;
          }
          else {
            char v82 = v81;
          }
          v75 += 2;
          uint64_t v76 = (uint64_t)v193;
        }
        while ((v82 & 1) == 0);
      }
      unint64_t v60 = v174 + 1;
      sub_241ADE8C8(v207, (uint64_t (*)(void))sub_241A55C0C);
      uint64_t v59 = v168;
      if (v60 == v171)
      {

        swift_bridgeObjectRelease();
        id v57 = v166;
        goto LABEL_57;
      }
    }
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }

  swift_bridgeObjectRelease();
LABEL_57:
}

id sub_241ADCCE4(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v114 = a5;
  uint64_t v130 = a4;
  uint64_t v8 = sub_241CDA1A0();
  unint64_t v135 = *(void (***)(char *, uint64_t))(v8 - 8);
  uint64_t v136 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  unint64_t v134 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v109 - v11;
  uint64_t v13 = sub_241CD84A0();
  uint64_t v117 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v116 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241ADE724(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v109 - v16;
  uint64_t v139 = sub_241CD6810();
  id v125 = *(char **)(v139 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v139);
  double v113 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v128 = (char *)&v109 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v127 = (char *)&v109 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  id v132 = (char *)&v109 - v25;
  MEMORY[0x270FA5388](v24);
  os_log_type_t v140 = (char *)&v109 - v26;
  uint64_t v27 = sub_241CD6D00();
  uint64_t v124 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v129 = (char *)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  id v131 = (char *)&v109 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  id v138 = (char *)&v109 - v33;
  MEMORY[0x270FA5388](v32);
  id v137 = (char *)&v109 - v34;
  uint64_t v119 = sub_241CD6A60();
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  uint64_t v133 = (char *)&v109 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, a2);
  if (!result)
  {
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    return result;
  }
  uint64_t v37 = result;
  id v38 = objc_msgSend(result, sel_displayTypeForObjectType_, a3);

  if (!v38)
  {
    uint64_t v12 = v134;
    sub_241CDA0F0();
    id v88 = a2;
    id v89 = a3;
    id v90 = v88;
    id v91 = v89;
    unint64_t v92 = sub_241CDA190();
    os_log_type_t v93 = sub_241CDB650();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = (uint8_t *)swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      *(void *)&long long v143 = v95;
      *(_DWORD *)uint64_t v94 = 136315138;
      uint64_t v96 = sub_241AD8D78((uint64_t)v90, v91);
      *(void *)&long long v142 = sub_241A33FE4(v96, v97, (uint64_t *)&v143);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v92, v93, "%s: Unable to instantiate display type", v94, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v95, -1, -1);
      MEMORY[0x245637F20](v94, -1, -1);
    }
    else
    {
    }
    goto LABEL_40;
  }
  if ((uint64_t)objc_msgSend(a1, sel_totalInsulinValuesCount) < 1)
  {
    sub_241CDA0F0();
    id v98 = a2;
    id v99 = a3;
    id v100 = v98;
    id v101 = v99;
    double v102 = sub_241CDA190();
    os_log_type_t v103 = sub_241CDB670();
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v104 = swift_slowAlloc();
      id v115 = v38;
      uint64_t v105 = (uint8_t *)v104;
      uint64_t v106 = swift_slowAlloc();
      *(void *)&long long v143 = v106;
      *(_DWORD *)uint64_t v105 = 136315138;
      uint64_t v107 = sub_241AD8D78((uint64_t)v100, v101);
      *(void *)&long long v142 = sub_241A33FE4(v107, v108, (uint64_t *)&v143);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v102, v103, "%s: Insulin chart had no points", v105, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v106, -1, -1);
      MEMORY[0x245637F20](v105, -1, -1);
    }
    else
    {
    }
LABEL_40:
    v135[1](v12, v136);
    return 0;
  }
  id result = objc_msgSend(a1, sel_totalInsulinValues);
  if (!result) {
    goto LABEL_42;
  }
  uint64_t v39 = result;
  id v115 = v38;
  uint64_t v40 = v133;
  sub_241CDBAE0();

  sub_241CD6A50();
  if (v144)
  {
    uint64_t v111 = v13;
    id v123 = (void (**)(char *, char *, uint64_t))(v124 + 16);
    id v122 = (unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48);
    id v120 = (void (**)(char *, char *, uint64_t))(v125 + 32);
    unint64_t v135 = (void (**)(char *, uint64_t))(v124 + 8);
    id v121 = (void (**)(char *, char *, uint64_t))(v125 + 16);
    os_log_type_t v126 = (void (**)(char *, uint64_t))(v125 + 8);
    uint64_t v112 = MEMORY[0x263F8EE78];
    uint64_t v110 = v117 + 32;
    uint64_t v136 = MEMORY[0x263F8EE58] + 8;
    id v125 = v17;
    uint64_t v41 = v132;
    uint64_t v124 = v27;
    uint64_t v42 = v131;
    while (1)
    {
      sub_241A54AA0(&v143, &v142);
      sub_241A313AC(0, &qword_268D42978);
      if (!swift_dynamicCast()) {
        goto LABEL_10;
      }
      uint64_t v47 = v141;
      objc_msgSend(v141, sel_startDate);
      id v48 = v137;
      sub_241CD6AF0();
      unint64_t v134 = v47;
      objc_msgSend(v47, sel_endDate);
      id v49 = v138;
      sub_241CD6AF0();
      id v50 = *v123;
      (*v123)(v42, v48, v27);
      v50(v129, v49, v27);
      sub_241CD67C0();
      sub_241A4145C(v130, (uint64_t)v17);
      if ((*v122)(v17, 1, v139) == 1)
      {
        sub_241ADE9A4((uint64_t)v17, &qword_26B038F10, MEMORY[0x263F062D0]);
        uint64_t v46 = v134;
        id v55 = v135;
      }
      else
      {
        uint64_t v51 = v27;
        uint64_t v52 = v139;
        (*v120)(v41, v17, v139);
        id v53 = v140;
        sub_241CD67E0();
        char v54 = sub_241CD67F0();
        id v55 = v135;
        id v56 = v41;
        id v57 = *v135;
        (*v135)(v42, v51);
        id v58 = *v121;
        uint64_t v59 = v127;
        (*v121)(v127, v56, v52);
        unint64_t v60 = v128;
        v58(v128, v53, v52);
        uint64_t v61 = v126;
        if ((v54 & 1) == 0)
        {
          uint64_t v43 = v57;
          unint64_t v44 = v60;
          unint64_t v45 = *v126;
          (*v126)(v44, v52);
          v45(v59, v52);
          uint64_t v41 = v132;
          v45(v132, v52);
          uint64_t v42 = v131;
          uint64_t v40 = v133;
          uint64_t v46 = v134;
LABEL_8:

          v45(v140, v139);
          uint64_t v27 = v124;
          v43(v138, v124);
          v43(v137, v27);
LABEL_9:
          uint64_t v17 = v125;
          goto LABEL_10;
        }
        uint64_t v62 = v51;
        uint64_t v63 = v131;
        sub_241CD67B0();
        char v64 = sub_241CD67F0();
        uint64_t v65 = v62;
        uint64_t v43 = v57;
        v57(v63, v65);
        uint64_t v66 = v60;
        unint64_t v45 = *v61;
        (*v61)(v66, v52);
        v45(v59, v52);
        uint64_t v41 = v132;
        v45(v132, v52);
        uint64_t v42 = v63;
        uint64_t v46 = v134;
        if ((v64 & 1) == 0)
        {
          uint64_t v40 = v133;
          goto LABEL_8;
        }
      }
      unsigned int v67 = objc_msgSend(v46, sel_hasInsulinQuantity, v109, v110);
      uint64_t v40 = v133;
      if (!v67)
      {

        (*v126)(v140, v139);
        uint64_t v74 = *v55;
        uint64_t v27 = v124;
        (*v55)(v138, v124);
        v74(v137, v27);
        goto LABEL_9;
      }
      id result = objc_msgSend(v46, sel_insulinQuantity);
      uint64_t v27 = v124;
      if (!result) {
        goto LABEL_43;
      }
      unint64_t v68 = result;
      uint64_t v69 = self;
      uint64_t v70 = (char *)objc_msgSend(v69, sel_createWithCodableQuantity_, v68);

      id v71 = objc_msgSend(v114, sel_unitForChartingDisplayType_, v115);
      uint64_t v17 = v125;
      unint64_t v134 = v70;
      if (v71)
      {
        uint64_t v72 = v71;
        if ((objc_msgSend(v70, sel_isCompatibleWithUnit_, v71) & 1) != 0
          && (objc_msgSend(v72, sel_isNull) & 1) == 0)
        {
          objc_msgSend(v70, sel_doubleValueForUnit_, v72);
          double v77 = v76;
          id v78 = objc_msgSend(v115, sel_presentation);
          objc_msgSend(v78, sel_adjustedDoubleForDaemonDouble_, v77);
          double v80 = v79;

          BOOL v73 = (char *)objc_msgSend(v69, sel_quantityWithUnit_doubleValue_, v72, v80);
        }
        else
        {
          BOOL v73 = v70;
        }
        char v81 = v73;

        unint64_t v75 = v81;
      }
      else
      {
        unint64_t v75 = v70;
      }
      (*v121)(v113, v140, v139);
      objc_msgSend(v75, sel__value);
      sub_241CD8470();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v109 = v75;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v112 = sub_241AF7234(0, *(void *)(v112 + 16) + 1, 1, v112);
      }
      uint64_t v83 = v112;
      unint64_t v85 = *(void *)(v112 + 16);
      unint64_t v84 = *(void *)(v112 + 24);
      if (v85 >= v84 >> 1) {
        uint64_t v83 = sub_241AF7234(v84 > 1, v85 + 1, 1, v112);
      }
      *(void *)(v83 + 16) = v85 + 1;
      unint64_t v86 = (*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
      uint64_t v112 = v83;
      (*(void (**)(unint64_t, char *, uint64_t))(v117 + 32))(v83 + v86 + *(void *)(v117 + 72) * v85, v116, v111);

      (*v126)(v140, v139);
      uint64_t v87 = *v135;
      (*v135)(v138, v27);
      v87(v137, v27);

LABEL_10:
      sub_241CD6A50();
      if (!v144) {
        goto LABEL_38;
      }
    }
  }
  uint64_t v112 = MEMORY[0x263F8EE78];
LABEL_38:
  (*(void (**)(char *, uint64_t))(v118 + 8))(v40, v119);

  return (id)v112;
}