void sub_241C7818C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  BOOL v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  id v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  char v51;
  uint64_t v52;
  char v53;
  void v54[2];
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;

  v61 = a1;
  v5 = sub_241CD6EE0();
  v55 = *(void *)(v5 - 8);
  v56 = v5;
  MEMORY[0x270FA5388](v5);
  v59 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_241CD6D00();
  v62 = *(void *)(v60 - 8);
  v7 = MEMORY[0x270FA5388](v60);
  v54[1] = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x270FA5388](v7);
  v57 = (char *)v54 - v10;
  MEMORY[0x270FA5388](v9);
  v58 = (char *)v54 - v11;
  sub_241A68508(0);
  MEMORY[0x270FA5388](v12 - 8);
  v14 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_241CD6810();
  v16 = *(void *)(v15 - 8);
  v17 = MEMORY[0x270FA5388](v15);
  v19 = (char *)v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  v21 = (char *)v54 - v20;
  sub_241A72DB8(0);
  v23 = MEMORY[0x270FA5388](v22 - 8);
  v25 = (char *)v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x270FA5388](v23);
  v28 = (char *)v54 - v27;
  MEMORY[0x270FA5388](v26);
  v30 = (char *)v54 - v29;
  sub_241C79DC4(a2, (uint64_t)v54 - v29, (uint64_t (*)(void))sub_241A72DB8);
  sub_241C79DC4(a3, (uint64_t)v14, (uint64_t (*)(void))sub_241A68508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_241C7A148((uint64_t)v14, (uint64_t (*)(void))sub_241A68508);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    sub_241C79DC4((uint64_t)v30, (uint64_t)v28, (uint64_t (*)(void))sub_241A72DB8);
    v31 = v60;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v28, 1, v60) == 1)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
      sub_241C7A148((uint64_t)v28, (uint64_t (*)(void))sub_241A72DB8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v58, v28, v31);
      v32 = objc_msgSend(*(id *)(a3+ *(int *)(type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0)+ 36)), sel_currentCalendar);
      sub_241CD6E50();

      v33 = (void *)sub_241CD6C60();
      v34 = (void *)sub_241CD6E40();
      v35 = HKHRAFibBurdenPreviousWeekDayIndexRange();
      v54[0] = v36;

      v37 = self;
      v38 = (void *)sub_241CD6E40();
      v39 = objc_msgSend(v37, sel_hk_dateOnDayIndex_atHour_calendar_, v35, 0, v38);

      sub_241CD6CB0();
      v40 = __OFADD__(v35, v54[0]);
      v41 = v35 + v54[0];
      if (v40)
      {
        __break(1u);
        return;
      }
      v42 = v59;
      v43 = sub_241CD6E40();
      v44 = objc_msgSend(v37, sel_hk_dateOnDayIndex_atHour_calendar_, v41, 0, v43);

      sub_241CD6CB0();
      sub_241CD67C0();
      LOBYTE(v43) = sub_241CD6760();
      v45 = *(void (**)(char *, uint64_t))(v16 + 8);
      v45(v19, v15);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v56);
      v46 = v60;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v58, v60);
      v45(v21, v15);
      if ((v43 & 1) == 0)
      {
        sub_241C7A148((uint64_t)v30, (uint64_t (*)(void))sub_241A72DB8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v30, 1, 1, v46);
      }
    }
  }
  v47 = v61;
  if (v61)
  {
    self;
    v48 = (void *)swift_dynamicCastObjCClass();
    if (v48) {
      v49 = v47;
    }
  }
  else
  {
    v48 = 0;
  }
  sub_241A313AC(0, &qword_26B034E38);
  sub_241C79DC4((uint64_t)v30, (uint64_t)v25, (uint64_t (*)(void))sub_241A72DB8);
  v50 = (void *)HKCodableSummaryAFibBurdenValue.init(sample:lastAnalysisDate:calendarCache:)(v48, (uint64_t)v25, objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A130]), sel_init));
  HKCodableSummaryAFibBurdenValue.snippetKind()();
  if (HKCodableSummaryCurrentValue.Kind.rawValue.getter(v51) == 0x617461446F6ELL && v52 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    sub_241C7A148((uint64_t)v30, (uint64_t (*)(void))sub_241A72DB8);
  }
  else
  {
    v53 = sub_241CDC100();
    swift_bridgeObjectRelease();
    sub_241C7A148((uint64_t)v30, (uint64_t (*)(void))sub_241A72DB8);
    if ((v53 & 1) == 0) {
      return;
    }
  }
}

uint64_t sub_241C788F8@<X0>(char *a1@<X0>, uint64_t (*a2)(uint64_t, char *)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)a1;
  sub_241C7A0AC();
  uint64_t result = a2(v6, &a1[*(int *)(v7 + 48)]);
  *a3 = result;
  return result;
}

uint64_t sub_241C78958()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries51AFibBurdenCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241C78A00()
{
  return type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B034370);
}

id sub_241C78A2C(void **a1)
{
  return sub_241C799A0(*a1);
}

uint64_t sub_241C78A38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries51AFibBurdenCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

_UNKNOWN **sub_241C78AB0()
{
  return &off_26F5C7500;
}

uint64_t sub_241C78ABC(uint64_t a1)
{
  uint64_t result = sub_241C78B78(&qword_26B034350, (void (*)(uint64_t))type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241C78B14()
{
  return &off_26F5C7548;
}

uint64_t sub_241C78B20(uint64_t a1)
{
  uint64_t result = sub_241C78B78(&qword_26B034368, (void (*)(uint64_t))type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241C78B78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_241C78BC0()
{
  return &off_26F5C7560;
}

uint64_t sub_241C78BCC(uint64_t a1)
{
  uint64_t result = sub_241C78B78(&qword_26B034358, (void (*)(uint64_t))type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B0342B0);
}

uint64_t sub_241C78C44(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = a1;
  sub_241A29D4C(0, &qword_26B0327D0, (uint64_t (*)(uint64_t))sub_241A68508, MEMORY[0x263EFDDF8]);
  uint64_t v64 = *((void *)v3 - 1);
  v65 = v3;
  MEMORY[0x270FA5388](v3);
  v66 = (char *)v54 - v4;
  uint64_t v5 = sub_241CD7650();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  MEMORY[0x270FA5388](v5);
  v56 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD7690();
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  MEMORY[0x270FA5388](v7);
  v59 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A68508(0);
  uint64_t v10 = v9;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  v16 = (char *)v54 - v15;
  MEMORY[0x270FA5388](v14);
  v18 = (char *)v54 - v17;
  uint64_t v19 = sub_241CD6810();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v62 = (char *)v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  v24 = (char *)v54 - v23;
  uint64_t v25 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v26 = *(int *)(v25 + 24);
  uint64_t v67 = a2;
  v54[1] = a2 + v26;
  uint64_t v55 = v25;
  sub_241CD77A0();
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v27(v18, 1, v19) == 1)
  {
    sub_241C7A148((uint64_t)v18, (uint64_t (*)(void))sub_241A68508);
    sub_241C79DC4(v67, (uint64_t)v13, (uint64_t (*)(void))sub_241A68508);
    v28 = v66;
    sub_241CDA5D0();
    sub_241AED0C0();
    v29 = v65;
    uint64_t v30 = sub_241CDA6D0();
    (*(void (**)(char *, char *))(v64 + 8))(v28, v29);
  }
  else
  {
    v54[0] = v10;
    v31 = v66;
    v32 = v18;
    v33 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v33(v24, v32, v19);
    sub_241C79DC4(v67, (uint64_t)v16, (uint64_t (*)(void))sub_241A68508);
    if (v27(v16, 1, v19) == 1)
    {
      sub_241C7A148((uint64_t)v16, (uint64_t (*)(void))sub_241A68508);
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v13, v24, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v13, 0, 1, v19);
      sub_241CDA5D0();
      sub_241AED0C0();
      v34 = v65;
      uint64_t v30 = sub_241CDA6D0();
      (*(void (**)(char *, char *))(v64 + 8))(v31, v34);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
    }
    else
    {
      v65 = v24;
      v66 = (char *)v19;
      v33(v62, v16, v19);
      v35 = (void *)sub_241CD7770();
      v36 = (void *)sub_241CD76E0();
      sub_241A33460();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      *(void *)(inited + 32) = sub_241CD7770();
      uint64_t v68 = inited;
      sub_241CDB2E0();
      char v38 = *(unsigned char *)(v67 + *(int *)(v55 + 20));
      sub_241A29D4C(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
      uint64_t v39 = sub_241CD73B0();
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = *(void *)(v40 + 72);
      unint64_t v42 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
      if (v38)
      {
        uint64_t v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = xmmword_241CEB730;
        (*(void (**)(unint64_t, void, uint64_t))(v40 + 104))(v43 + v42, *MEMORY[0x263F454D0], v39);
      }
      else
      {
        uint64_t v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = xmmword_241CEB720;
        unint64_t v45 = v43 + v42;
        v46 = *(void (**)(unint64_t, void, uint64_t))(v40 + 104);
        v46(v45, *MEMORY[0x263F45520], v39);
        v46(v45 + v41, *MEMORY[0x263F45538], v39);
      }
      id v44 = v36;
      sub_241C5D74C(v43);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      unint64_t v47 = swift_bridgeObjectRetain();
      sub_241C5D7A0(v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v57 + 104))(v56, *MEMORY[0x263F45690], v58);
      uint64_t v48 = (uint64_t)v59;
      sub_241CD7680();

      swift_bridgeObjectRelease();
      v49 = v62;
      v50 = v65;
      uint64_t v30 = sub_241C359BC(v35, v48, v62, v65, v63);

      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v48, v61);
      v51 = *(void (**)(char *, char *))(v20 + 8);
      v52 = v66;
      v51(v49, v66);
      v51(v50, v52);
    }
  }
  return v30;
}

uint64_t sub_241C79454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a3;
  uint64_t v3 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v33 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v32 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6F5FC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C6F6E8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  uint64_t v37 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD76B0();
  sub_241A311E0(v39, v39[3]);
  v13 = (void *)sub_241CD75B0();
  sub_241A31190((uint64_t)v39);
  uint64_t v14 = self;
  uint64_t v15 = (void *)sub_241CD6790();
  id v16 = objc_msgSend(v14, sel_predicateForSamplesWithinDateInterval_options_, v15, 0);

  uint64_t v17 = (void *)sub_241CD7770();
  id v18 = v16;
  id v31 = v13;
  uint64_t v19 = sub_241CDB5D0();

  sub_241CDB0D0();
  id v20 = objc_msgSend(self, sel_hkhr_aFibBurdenSyncedDefaultsDomainWithHealthStore_, v13);
  uint64_t v21 = sub_241CDB750();
  swift_bridgeObjectRelease();

  uint64_t v38 = v21;
  v39[0] = v19;
  sub_241A5B1CC();
  sub_241B99ED4();
  sub_241C78B78(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
  sub_241C78B78((unint64_t *)&qword_26B032850, (void (*)(uint64_t))sub_241B99ED4);
  swift_retain();
  swift_retain();
  sub_241CDA400();
  uint64_t v22 = v32;
  sub_241C79DC4(v30, v32, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
  unint64_t v23 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v24 = swift_allocObject();
  sub_241C79FB4(v22, v24 + v23);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_241C6FC60;
  *(void *)(v25 + 24) = v24;
  sub_241C79D5C(0, &qword_26B032CD0, &qword_26B034E38, 0x263F46588, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_241C78B78(&qword_26B0324B8, (void (*)(uint64_t))sub_241C6F5FC);
  uint64_t v26 = v34;
  sub_241CDA710();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v26);
  sub_241C78B78(&qword_26B032448, (void (*)(uint64_t))sub_241C6F6E8);
  uint64_t v27 = v36;
  uint64_t v28 = sub_241CDA6D0();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v27);
  return v28;
}

id sub_241C799A0(void *a1)
{
  uint64_t v2 = sub_241CD9970();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29D4C(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v23 - v7;
  sub_241A72428(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v23 - v13;
  if (!a1)
  {
    sub_241CD7A80();
    uint64_t v22 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v14, 0, 1, v22);
    sub_241A313AC(0, &qword_26B030440);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    sub_241C79DC4((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(void))sub_241A72428);
    id v21 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v8, (uint64_t)v12, 0, 0);
    sub_241C7A148((uint64_t)v14, (uint64_t (*)(void))sub_241A72428);
    return v21;
  }
  id v15 = a1;
  sub_241CD9A90();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F46C20], v2);
  id result = objc_msgSend(v15, sel_data);
  if (result)
  {
    uint64_t v17 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v18 = sub_241CD6AE0();
    unint64_t v20 = v19;

    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
    uint64_t v24 = 0;
    memset(v23, 0, sizeof(v23));
    id v21 = sub_241A54648(v18, v20, 1, (uint64_t)v8, 0, 0, (uint64_t)v23);
    sub_241A37374(v18, v20);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v21;
  }
  __break(1u);
  return result;
}

void sub_241C79D5C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241A313AC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241C79DC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241C79E2C()
{
  uint64_t v1 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  uint64_t v8 = v2 | 7;
  uint64_t v9 = v3 + v4;
  uint64_t v10 = v5 + *(int *)(v1 + 24);
  uint64_t v11 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v9, v8);
}

uint64_t sub_241C79FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241C7A018()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241C7A050@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, char *))(v2 + 16);
  uint64_t v6 = *(void *)a1;
  sub_241C7A0AC();
  uint64_t result = v5(v6, &a1[*(int *)(v7 + 48)]);
  *a2 = result;
  return result;
}

void sub_241C7A0AC()
{
  if (!qword_26B034E98)
  {
    sub_241C79D5C(255, (unint64_t *)&qword_26B034E90, &qword_26B0304D8, 0x263F0A6B8, MEMORY[0x263F8D8F0]);
    sub_241A72DB8(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B034E98);
    }
  }
}

uint64_t sub_241C7A148(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_241C7A1A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD6810();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_241A68508(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    id v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[9];
    unint64_t v20 = *(void **)((char *)a2 + v19);
    *(uint64_t *)((char *)a1 + v19) = (uint64_t)v20;
    swift_bridgeObjectRetain();
    id v21 = v20;
  }
  return a1;
}

void sub_241C7A390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(a1 + *(int *)(a2 + 36));
}

char *sub_241C7A4AC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A68508(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[9];
  uint64_t v18 = *(void **)&a2[v17];
  *(void *)&a1[v17] = v18;
  swift_bridgeObjectRetain();
  id v19 = v18;
  return a1;
}

char *sub_241C7A644(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A68508(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  a1[a3[7]] = a2[a3[7]];
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  unint64_t v20 = *(void **)&a2[v19];
  id v21 = *(void **)&a1[v19];
  *(void *)&a1[v19] = v20;
  id v22 = v20;

  return a1;
}

char *sub_241C7A864(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A68508(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  return a1;
}

char *sub_241C7A9EC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A68508(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  id v22 = *(void **)&a1[v21];
  *(void *)&a1[v21] = *(void *)&a2[v21];

  return a1;
}

uint64_t sub_241C7ABF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C7AC04);
}

uint64_t sub_241C7AC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241A68508(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD77C0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_241C7AD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C7AD30);
}

uint64_t sub_241C7AD30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_241A68508(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_241CD77C0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_241C7AE44()
{
  sub_241A68508(319);
  if (v0 <= 0x3F)
  {
    sub_241CD77C0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_241C7AF2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)sub_241CDB430();
  id v3 = objc_msgSend(v2, sel_identifier);

  uint64_t v4 = sub_241CDB0D0();
  uint64_t v6 = v5;

  if (sub_241CDB0D0() == v4 && v7 == v6)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    if (qword_26B038428 == -1) {
      goto LABEL_22;
    }
    goto LABEL_41;
  }
  char v9 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_15;
  }
  if (sub_241CDB0D0() == v4 && v10 == v6)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRelease();
    if (qword_26B038428 == -1) {
      goto LABEL_22;
    }
    goto LABEL_41;
  }
  char v12 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_18;
  }
  if (sub_241CDB0D0() == v4 && v13 == v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  char v14 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    if (qword_26B038428 == -1)
    {
LABEL_22:
      id v15 = (id)qword_26B0413A0;
LABEL_23:
      sub_241CD7FC0();
      uint64_t v16 = sub_241CD7FD0();
      uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
      uint64_t v18 = v16;
      uint64_t v19 = a1;
      uint64_t v20 = 0;
      goto LABEL_24;
    }
LABEL_41:
    swift_once();
    goto LABEL_22;
  }
  if (sub_241CDB0D0() == v4 && v22 == v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  char v23 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    if (qword_26B038428 == -1) {
      goto LABEL_22;
    }
    goto LABEL_41;
  }
  if (sub_241CDB0D0() == v4 && v24 == v6)
  {
    swift_bridgeObjectRelease_n();
LABEL_37:
    if (qword_26B0380A0 != -1) {
      swift_once();
    }
    id v26 = (id)qword_26B038090;
    goto LABEL_23;
  }
  char v25 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_37;
  }
  uint64_t v27 = sub_241CD7FD0();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  uint64_t v18 = v27;
  uint64_t v19 = a1;
  uint64_t v20 = 1;
LABEL_24:

  return v17(v19, v20, 1, v18);
}

uint64_t sub_241C7B38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  v31[1] = a3;
  uint64_t v7 = sub_241CD6D00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v31 - v12;
  uint64_t v14 = sub_241CD6810();
  MEMORY[0x270FA5388](v14 - 8);
  id v15 = objc_msgSend(v4, sel_identifier);
  uint64_t v16 = sub_241CDB0D0();
  uint64_t v18 = v17;

  if (sub_241CDB0D0() == v16 && v19 == v18) {
    goto LABEL_13;
  }
  v31[0] = a1;
  char v21 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (sub_241CDB0D0() == v16 && v22 == v18)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v24 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v24) {
    goto LABEL_14;
  }
  if (sub_241CDB0D0() == v16 && v25 == v18) {
    goto LABEL_13;
  }
  char v27 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_14;
  }
  if (sub_241CDB0D0() == v16 && v28 == v18) {
    goto LABEL_13;
  }
  char v29 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v29 & 1) == 0)
  {
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v30(v13, v31[0], v7);
    v30(v11, a2, v7);
    goto LABEL_16;
  }
LABEL_15:
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, a2, v7);
  sub_241CD6C50();
LABEL_16:
  sub_241CD67C0();
  return sub_241CD79F0();
}

id sub_241C7B6A0()
{
  sub_241C7B6F8();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_26B038090 = (uint64_t)result;
  return result;
}

unint64_t sub_241C7B6F8()
{
  unint64_t result = qword_26B038E78;
  if (!qword_26B038E78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B038E78);
  }
  return result;
}

uint64_t type metadata accessor for SummaryAlertTileView()
{
  uint64_t result = qword_268D43888;
  if (!qword_268D43888) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241C7B784()
{
  return swift_initClassMetadata2();
}

void sub_241C7B7D0()
{
}

uint64_t sub_241C7B82C(uint64_t *a1)
{
  uint64_t v2 = sub_241CD82E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void *)sub_241CD82B0();
  objc_msgSend(v6, sel_setTintColor_, a1[3]);

  uint64_t v7 = (void *)a1[2];
  uint64_t v8 = *a1;
  v12[0] = a1[4];
  v12[1] = v8;
  uint64_t v9 = qword_26B038428;
  id v10 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  objc_msgSend(self, sel_clearColor);
  sub_241CD82D0();
  sub_241CD82F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_241C7BA48()
{
}

void sub_241C7BA78()
{
}

uint64_t sub_241C7BAA8()
{
  unint64_t v1 = *(void **)(v0 + qword_268D43880 + 16);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_241C7BB08()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummaryAlertTileView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241C7BB40(uint64_t a1)
{
  unint64_t v1 = *(void **)(a1 + qword_268D43880 + 16);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241C7BBA0()
{
  return type metadata accessor for SummaryAlertTileView();
}

uint64_t destroy for SummaryAlertTileView.AlertViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SummaryAlertTileView.AlertViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRetain();
  id v7 = v4;
  id v8 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SummaryAlertTileView.AlertViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  id v7 = (void *)a2[3];
  id v8 = (void *)a1[3];
  a1[3] = v7;
  id v9 = v7;

  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SummaryAlertTileView.AlertViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SummaryAlertTileView.AlertViewModel()
{
  return &type metadata for SummaryAlertTileView.AlertViewModel;
}

uint64_t sub_241C7BD5C()
{
  uint64_t result = sub_241CD8DD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241C7BDF4()
{
  uint64_t v1 = sub_241CDB0D0();
  swift_bridgeObjectRetain();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_241C7BE64()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_241C7BE6C(uint64_t *a1))()
{
  uint64_t v4 = sub_241CDB0D0();
  uint64_t v5 = v2;
  swift_bridgeObjectRetain();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v5;
  return destroy for HealthStoreActivityRingsResumeDateProvider.State;
}

void *sub_241C7BF08()
{
  sub_241C7C6CC();
  id v1 = v0;
  return v0;
}

void (*sub_241C7BF3C(void *a1))(id *a1)
{
  unint64_t v3 = sub_241C7C6CC();
  *a1 = v1;
  a1[1] = v3;
  id v4 = v1;
  return destroy for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent;
}

uint64_t sub_241C7BF90()
{
  uint64_t result = sub_241CD8E80();
  uint64_t v1 = v15;
  if (v15)
  {
    uint64_t v2 = sub_241A311E0(v14, v15);
    uint64_t v3 = *(void *)(v1 - 8);
    MEMORY[0x270FA5388](v2);
    uint64_t v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v3 + 16))(v5);
    uint64_t v6 = (void *)sub_241CD8D60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
    sub_241A31190((uint64_t)v14);
    id v7 = self;
    id v8 = v6;
    id v9 = objc_msgSend(v7, sel_defaultCenter);
    sub_241A78694();
    sub_241CDB6D0();
    id v10 = objc_allocWithZone((Class)sub_241CD9190());
    uint64_t v11 = (void *)sub_241CD9150();
    char v12 = sub_241CD9160();

    return v12 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241C7C140()
{
  uint64_t v0 = sub_241CD8DD0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v17[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_241CD8E80();
  uint64_t v5 = v18;
  if (v18)
  {
    uint64_t v6 = sub_241A311E0(v17, v18);
    uint64_t v7 = *(void *)(v5 - 8);
    MEMORY[0x270FA5388](v6);
    id v9 = (char *)&v17[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    id v10 = (void *)sub_241CD8D60();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    uint64_t v11 = self;
    id v12 = v10;
    id v13 = objc_msgSend(v11, sel_defaultCenter);
    sub_241A78694();
    sub_241CDB6D0();
    id v14 = objc_allocWithZone((Class)sub_241CD9190());
    uint64_t v15 = (void *)sub_241CD9150();
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F444B0], v0);
    sub_241CD9170();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return sub_241A31190((uint64_t)v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_241C7C3B0(char *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    sub_241CDB0D0();
    uint64_t v6 = &a1[qword_26B02FF60];
    uint64_t v7 = *MEMORY[0x263F444B0];
    uint64_t v8 = sub_241CD8DD0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
    id v9 = a4;
    id v10 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = &a1[qword_26B02FF60];
    uint64_t v12 = *MEMORY[0x263F444B0];
    uint64_t v13 = sub_241CD8DD0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
    id v14 = a4;
    id v10 = 0;
  }
  v17.receiver = a1;
  v17.super_class = (Class)type metadata accessor for SignificantChangesNotificationSwitchCellViewController();
  id v15 = objc_msgSendSuper2(&v17, sel_initWithNibName_bundle_, v10, a4);

  return v15;
}

id sub_241C7C504(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = &a1[qword_26B02FF60];
  uint64_t v6 = *MEMORY[0x263F444B0];
  uint64_t v7 = sub_241CD8DD0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for SignificantChangesNotificationSwitchCellViewController();
  return objc_msgSendSuper2(&v9, sel_initWithCoder_, a3);
}

uint64_t sub_241C7C5AC()
{
  uint64_t v1 = v0 + qword_26B02FF60;
  uint64_t v2 = sub_241CD8DD0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id sub_241C7C618()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignificantChangesNotificationSwitchCellViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241C7C650(uint64_t a1)
{
  uint64_t v1 = a1 + qword_26B02FF60;
  uint64_t v2 = sub_241CD8DD0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_241C7C6BC()
{
  return type metadata accessor for SignificantChangesNotificationSwitchCellViewController();
}

unint64_t sub_241C7C6CC()
{
  unint64_t result = qword_268D43898;
  if (!qword_268D43898)
  {
    type metadata accessor for SignificantChangesNotificationSwitchCellViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43898);
  }
  return result;
}

void sub_241C7C724(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a4;
  uint64_t v37 = a3;
  uint64_t v5 = sub_241CD6D00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD6810();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD6DE0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_241CD6EE0();
  uint64_t v38 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F07740], v12);
  sub_241CD6DF0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  id v19 = objc_msgSend(a1, sel_endDate);
  sub_241CD6CB0();

  sub_241CD6770();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v8, v5);
  sub_241CD67E0();
  char v21 = (void *)sub_241CD6C60();
  v20(v8, v5);
  uint64_t v22 = (void *)sub_241CD6E40();
  char v23 = objc_msgSend(v21, sel_hk_morningIndexWithCalendar_, v22);

  sub_241CD67B0();
  char v24 = (void *)sub_241CD6C60();
  v20(v8, v5);
  uint64_t v25 = (void *)sub_241CD6E40();
  id v26 = objc_msgSend(v24, sel_hk_morningIndexWithCalendar_, v25);

  int64_t v27 = v26 - v23;
  if (__OFSUB__(v26, v23))
  {
    __break(1u);
  }
  else
  {
    int64_t v28 = v27 + 1;
    if (!__OFADD__(v27, 1))
    {
      uint64_t v29 = v43;
      uint64_t v30 = sub_241CD9BB0();
      id v31 = (void *)swift_allocObject();
      uint64_t v32 = v37;
      void v31[2] = v29;
      v31[3] = v32;
      v31[4] = v40;
      id v33 = objc_allocWithZone(MEMORY[0x263F0A778]);
      aBlock[4] = sub_241C7D9E8;
      aBlock[5] = v31;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_241C7D9F4;
      aBlock[3] = &unk_26F5C7678;
      uint64_t v34 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      id v35 = objc_msgSend(v33, sel_initWithMorningIndexRange_ascending_limit_options_resultsHandler_, v23, v28, 1, 1, v30, v34);
      _Block_release(v34);
      swift_release();
      objc_msgSend(*(id *)(v29 + qword_26B041200 + 16), sel_executeQuery_, v35);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v42);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v39);
      return;
    }
  }
  __break(1u);
}

void sub_241C7CC04(int a1, unint64_t a2, id a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  if (a3)
  {
    id v7 = a3;
    a5(a3, 1);
    id v8 = a3;
    goto LABEL_15;
  }
  if (!a2)
  {
LABEL_14:
    sub_241C7DAC4();
    uint64_t v14 = swift_allocError();
    *id v15 = 0;
    a5((id)v14, 1);
    id v8 = (id)v14;
LABEL_15:
LABEL_11:

    return;
  }
  if (!(a2 >> 62))
  {
    uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  if (!sub_241CDBF50())
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_6:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v11 = (id)MEMORY[0x245637160](0, a2);
LABEL_9:
    id v16 = v11;
    swift_bridgeObjectRelease();
    id v12 = sub_241C7CDD0(v16);
    id v13 = v12;
    a5(v12, 0);

    id v8 = v16;
    goto LABEL_11;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v11 = *(id *)(a2 + 32);
    goto LABEL_9;
  }
  __break(1u);
}

id sub_241C7CDD0(void *a1)
{
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v75 = *(void *)(v2 - 8);
  uint64_t v76 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v68 - v6;
  sub_241C7DB18(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v70 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  v74 = (char *)&v68 - v11;
  sub_241C7DB18(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v12 - 8);
  v72 = (char *)&v68 - v13;
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CD6D00();
  uint64_t v77 = *(void *)(v18 - 8);
  uint64_t v78 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  char v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  v81 = (char *)&v68 - v22;
  id v23 = objc_msgSend(a1, sel_periods);
  uint64_t v71 = sub_241A313AC(0, &qword_26B030388);
  unint64_t v24 = sub_241CDB2C0();

  if (!(v24 >> 62))
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v25) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    sub_241CDA0F0();
    uint64_t v64 = sub_241CDA190();
    os_log_type_t v65 = sub_241CDB660();
    uint64_t v58 = v65;
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v66 = 0;
      _os_log_impl(&dword_241A23000, v64, (os_log_type_t)v58, "Unexpected no periods in sleep day summary", v66, 2u);
      MEMORY[0x245637F20](v66, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v75 + 8))(v5, v76);
    sub_241C7DAC4();
    swift_allocError();
    *uint64_t v67 = 1;
    swift_willThrow();
    return (id)v58;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_241CDBF50();
  swift_bridgeObjectRelease();
  if (!v25) {
    goto LABEL_18;
  }
LABEL_3:
  unint64_t v26 = v25 - 1;
  if (__OFSUB__(v25, 1))
  {
    __break(1u);
  }
  else if ((v24 & 0xC000000000000001) == 0)
  {
    id v27 = v81;
    if ((v26 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v26 < *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v28 = *(id *)(v24 + 8 * v26 + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_26;
  }
  id v28 = (id)MEMORY[0x245637160](v26, v24);
  id v27 = v81;
LABEL_8:
  swift_bridgeObjectRelease();
  id v69 = v28;
  id v29 = objc_msgSend(v28, sel_dateInterval);
  sub_241CD67A0();

  sub_241CD67B0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  id v30 = objc_msgSend(a1, sel_summaryFilteredToLastPeriod);
  if (!v30)
  {
    sub_241CDA0F0();
    uint64_t v58 = sub_241CDA190();
    os_log_type_t v59 = sub_241CDB660();
    BOOL v60 = os_log_type_enabled((os_log_t)v58, v59);
    uint64_t v61 = v77;
    if (v60)
    {
      v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v62 = 0;
      _os_log_impl(&dword_241A23000, (os_log_t)v58, v59, "Unexpected no periods in sleep day summary", v62, 2u);
      MEMORY[0x245637F20](v62, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v75 + 8))(v7, v76);
    sub_241C7DAC4();
    swift_allocError();
    *uint64_t v63 = 1;
    swift_willThrow();

    (*(void (**)(id, uint64_t))(v61 + 8))(v27, v78);
    return (id)v58;
  }
  id v31 = v27;
  id v27 = v30;
  objc_msgSend(v27, sel_inBedDuration);
  double v33 = v32;
  objc_msgSend(v27, sel_sleepDuration);
  double v35 = v34;
  uint64_t v37 = v77;
  uint64_t v36 = v78;
  (*(void (**)(char *, id, uint64_t))(v77 + 16))(v21, v31, v78);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46620]), sel_init);
  if (!result)
  {
    __break(1u);
    goto LABEL_28;
  }
  id v7 = (char *)result;
  objc_msgSend(v7, sel_setInBedDuration_, v33);
  objc_msgSend(v7, sel_setAsleepDuration_, v35);
  uint64_t v39 = (void *)sub_241CD6C60();
  double v40 = MEMORY[0x245637600]();

  objc_msgSend(v7, sel_setEndOfSleepTimeIntervalSinceReferenceDate_, v40);
  uint64_t v77 = *(void *)(v37 + 8);
  ((void (*)(char *, uint64_t))v77)(v21, v36);
  id v41 = objc_msgSend(v27, sel_dateInterval);
  char v21 = v72;
  sub_241CD67A0();

  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
  id v42 = objc_msgSend(v27, sel_periods);
  unint64_t v43 = sub_241CDB2C0();

  if (!(v43 >> 62))
  {
    uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_12;
  }
LABEL_26:
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_241CDBF50();
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v45 = (uint64_t)v74;
  swift_bridgeObjectRelease();
  sub_241A313AC(0, &qword_26B034E48);
  id v46 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v21, v44, 0);
  uint64_t v47 = v73 + qword_26B041380;
  uint64_t v48 = sub_241CD9BD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v45, v47, v48);
  uint64_t v49 = *MEMORY[0x263F46C98];
  uint64_t v50 = sub_241CD9970();
  uint64_t v51 = *(void *)(v50 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 104))(v45, v49, v50);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v45, 0, 1, v50);
  id v52 = v46;
  id result = objc_msgSend(v7, sel_data);
  if (result)
  {
    v53 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v54 = sub_241CD6AE0();
    unint64_t v56 = v55;

    uint64_t v57 = v70;
    sub_241A5D234(v45, v70);
    uint64_t v80 = 0;
    memset(v79, 0, sizeof(v79));
    uint64_t v58 = (uint64_t)sub_241A54648(v54, v56, 15, v57, (uint64_t)v52, 0, (uint64_t)v79);

    sub_241A37374(v54, v56);
    sub_241A5D298(v45);

    ((void (*)(char *, uint64_t))v77)(v81, v78);
    return (id)v58;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_241C7D764()
{
  uint64_t v1 = v0 + qword_26B041380;
  uint64_t v2 = sub_241CD9BD0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_241C7D7D0()
{
  sub_241A3F384(v0 + qword_26B041200);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_26B041380;
  uint64_t v4 = sub_241CD9BD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SleepDurationCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B037EE0;
  if (!qword_26B037EE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241C7D918()
{
  uint64_t result = sub_241CD9BD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241C7D9A8()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_241C7D9E8(int a1, unint64_t a2, void *a3)
{
  sub_241C7CC04(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(id, uint64_t))(v3 + 24));
}

uint64_t sub_241C7D9F4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  id v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_241A313AC(0, (unint64_t *)&qword_26B02E800);
    uint64_t v5 = sub_241CDB2C0();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241C7DAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241C7DABC()
{
  return swift_release();
}

unint64_t sub_241C7DAC4()
{
  unint64_t result = qword_268D438A0;
  if (!qword_268D438A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D438A0);
  }
  return result;
}

void sub_241C7DB18(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SleepDurationCurrentValueSharableModelStep.SleepDurationProcessingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241C7DC38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepDurationCurrentValueSharableModelStep.SleepDurationProcessingError()
{
  return &type metadata for SleepDurationCurrentValueSharableModelStep.SleepDurationProcessingError;
}

unint64_t sub_241C7DC74()
{
  unint64_t result = qword_268D438A8;
  if (!qword_268D438A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D438A8);
  }
  return result;
}

void *sub_241C7DCC8(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    *a1 = v6;
    a1 = (void *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    id v8 = (void *)a2[2];
    *a1 = v6;
    a1[1] = v7;
    a1[2] = v8;
    v53 = a2;
    uint64_t v54 = (int *)v4;
    uint64_t v9 = *(int *)(v4 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *((unsigned char *)a1 + v9) = *v11;
    uint64_t v12 = _s8WorkPlanVMa();
    uint64_t v13 = *(int *)(v12 + 20);
    id v52 = &v10[v13];
    uint64_t v14 = &v11[v13];
    uint64_t v15 = sub_241CD95E0();
    uint64_t v16 = *(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_unknownObjectRetain();
    id v17 = v8;
    uint64_t v18 = v12;
    v16(v52, v14, v15);
    uint64_t v19 = *(int *)(v12 + 24);
    uint64_t v20 = &v10[v19];
    char v21 = &v11[v19];
    uint64_t v22 = sub_241CD78F0();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      sub_241C832E0(0, &qword_26B032040, MEMORY[0x263F45718]);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, unsigned char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v25 = *(int *)(v18 + 28);
    unint64_t v26 = &v10[v25];
    id v27 = &v11[v25];
    sub_241AC7534();
    (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = *(int *)(v18 + 32);
    id v30 = &v10[v29];
    id v31 = &v11[v29];
    sub_241C7E0E8(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
    uint64_t v33 = v32;
    uint64_t v34 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(v31, 1, v32))
    {
      sub_241B67D9C(0);
      memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, unsigned char *, uint64_t))(v34 + 16))(v30, v31, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
    }
    uint64_t v36 = v54[7];
    uint64_t v37 = *(void **)((char *)v53 + v36);
    *(void *)((char *)a1 + v36) = v37;
    uint64_t v38 = v54[8];
    uint64_t v39 = (char *)a1 + v38;
    double v40 = (char *)v53 + v38;
    long long v41 = *(_OWORD *)((char *)v53 + v38 + 24);
    *(_OWORD *)((char *)a1 + v38 + 24) = v41;
    uint64_t v42 = v41;
    unint64_t v43 = **(void (***)(char *, char *, uint64_t))(v41 - 8);
    id v44 = v37;
    v43(v39, v40, v42);
    *(_OWORD *)((char *)a1 + v54[9]) = *(_OWORD *)((char *)v53 + v54[9]);
    uint64_t v45 = v54[10];
    id v46 = *(void **)((char *)v53 + v45);
    *(void *)((char *)a1 + v45) = v46;
    uint64_t v47 = v54[11];
    uint64_t v48 = *(void **)((char *)v53 + v47);
    *(void *)((char *)a1 + v47) = v48;
    swift_unknownObjectRetain();
    id v49 = v46;
    id v50 = v48;
  }
  return a1;
}

void sub_241C7E0E8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241A313AC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241C7E150(uint64_t a1)
{
  swift_unknownObjectRelease();

  uint64_t v2 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v3 = a1 + v2[6];
  uint64_t v4 = (int *)_s8WorkPlanVMa();
  uint64_t v5 = v3 + v4[5];
  uint64_t v6 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v3 + v4[6];
  uint64_t v8 = sub_241CD78F0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = v3 + v4[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v3 + v4[8];
  sub_241C7E0E8(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  }

  sub_241A31190(a1 + v2[8]);
  swift_unknownObjectRelease();

  uint64_t v16 = *(void **)(a1 + v2[11]);
}

uint64_t sub_241C7E3A4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  uint64_t v48 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v49 = a2;
  uint64_t v5 = v48[6];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(a2 + v5);
  uint64_t v8 = (int *)_s8WorkPlanVMa();
  uint64_t v9 = v8[5];
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v7 + v9;
  uint64_t v12 = sub_241CD95E0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_unknownObjectRetain();
  id v14 = v4;
  v13(v10, v11, v12);
  uint64_t v15 = v8[6];
  uint64_t v16 = (void *)(v6 + v15);
  id v17 = (const void *)(v7 + v15);
  uint64_t v18 = sub_241CD78F0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_241C832E0(0, &qword_26B032040, MEMORY[0x263F45718]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = v8[7];
  uint64_t v22 = v6 + v21;
  uint64_t v23 = v7 + v21;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = v8[8];
  unint64_t v26 = (void *)(v6 + v25);
  id v27 = (const void *)(v7 + v25);
  sub_241C7E0E8(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v28))
  {
    sub_241B67D9C(0);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v26, v27, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
  }
  uint64_t v32 = v48[7];
  uint64_t v33 = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = v33;
  uint64_t v34 = v48[8];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  long long v37 = *(_OWORD *)(a2 + v34 + 24);
  *(_OWORD *)(a1 + v34 + 24) = v37;
  uint64_t v38 = v37;
  uint64_t v39 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
  id v40 = v33;
  v39(v35, v36, v38);
  *(_OWORD *)(a1 + v48[9]) = *(_OWORD *)(a2 + v48[9]);
  uint64_t v41 = v48[10];
  uint64_t v42 = *(void **)(a2 + v41);
  *(void *)(a1 + v41) = v42;
  uint64_t v43 = v48[11];
  id v44 = *(void **)(v49 + v43);
  *(void *)(a1 + v43) = v44;
  swift_unknownObjectRetain();
  id v45 = v42;
  id v46 = v44;
  return a1;
}

void *sub_241C7E770(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  uint64_t v5 = (void *)a2[2];
  uint64_t v6 = (void *)a1[2];
  a1[2] = v5;
  id v7 = v5;

  uint64_t v57 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v58 = a2;
  uint64_t v8 = v57[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  uint64_t v11 = _s8WorkPlanVMa();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v9[v12];
  id v14 = &v10[v12];
  uint64_t v15 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v56 = v11;
  uint64_t v16 = *(int *)(v11 + 24);
  id v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  uint64_t v19 = sub_241CD78F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    sub_241C832E0(0, &qword_26B032040, MEMORY[0x263F45718]);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_7:
  uint64_t v25 = *(int *)(v56 + 28);
  unint64_t v26 = &v9[v25];
  id v27 = &v10[v25];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  uint64_t v29 = *(int *)(v56 + 32);
  uint64_t v30 = &v9[v29];
  uint64_t v31 = &v10[v29];
  sub_241C7E0E8(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v33 = v32;
  uint64_t v34 = *(void *)(v32 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v30, 1, v32);
  int v37 = v35(v31, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v30, v31, v33);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v33);
    goto LABEL_12;
  }
  if (v37)
  {
LABEL_12:
    sub_241B67D9C(0);
    memcpy(v30, v31, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v30, v31, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
LABEL_13:
  uint64_t v39 = v57[7];
  id v40 = *(void **)((char *)v58 + v39);
  uint64_t v41 = *(void **)((char *)a1 + v39);
  *(void *)((char *)a1 + v39) = v40;
  id v42 = v40;

  sub_241AC8320((void *)((char *)a1 + v57[8]), (void *)((char *)v58 + v57[8]));
  uint64_t v43 = v57[9];
  id v44 = (void *)((char *)a1 + v43);
  id v45 = (void *)((char *)v58 + v43);
  uint64_t v46 = v45[1];
  *id v44 = *v45;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v44[1] = v46;
  uint64_t v47 = v57[10];
  uint64_t v48 = *(void **)((char *)v58 + v47);
  uint64_t v49 = *(void **)((char *)a1 + v47);
  *(void *)((char *)a1 + v47) = v48;
  id v50 = v48;

  uint64_t v51 = v57[11];
  id v52 = *(void **)((char *)v58 + v51);
  v53 = *(void **)((char *)a1 + v51);
  *(void *)((char *)a1 + v51) = v52;
  id v54 = v52;

  return a1;
}

uint64_t sub_241C7EBE4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(a2 + v5);
  uint64_t v8 = (int *)_s8WorkPlanVMa();
  uint64_t v9 = v8[5];
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v7 + v9;
  uint64_t v12 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = v8[6];
  id v14 = (void *)(v6 + v13);
  uint64_t v15 = (const void *)(v7 + v13);
  uint64_t v16 = sub_241CD78F0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_241C832E0(0, &qword_26B032040, MEMORY[0x263F45718]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = v8[7];
  uint64_t v20 = v6 + v19;
  uint64_t v21 = v7 + v19;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = v8[8];
  uint64_t v24 = (void *)(v6 + v23);
  uint64_t v25 = (const void *)(v7 + v23);
  sub_241C7E0E8(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v25, 1, v26))
  {
    sub_241B67D9C(0);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v24, v25, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
  }
  *(void *)(a1 + v4[7]) = *(void *)(a2 + v4[7]);
  uint64_t v30 = v4[8];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  long long v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  *(void *)(v31 + 32) = *(void *)(v32 + 32);
  *(_OWORD *)(a1 + v4[9]) = *(_OWORD *)(a2 + v4[9]);
  *(void *)(a1 + v4[10]) = *(void *)(a2 + v4[10]);
  *(void *)(a1 + v4[11]) = *(void *)(a2 + v4[11]);
  return a1;
}

void *sub_241C7EF34(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v5 = a2[2];
  uint64_t v6 = (void *)a1[2];
  a1[1] = v4;
  a1[2] = v5;

  id v54 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  unint64_t v55 = a2;
  uint64_t v7 = v54[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *((unsigned char *)a1 + v7) = *((unsigned char *)a2 + v7);
  uint64_t v10 = _s8WorkPlanVMa();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v53 = v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = &v8[v15];
  uint64_t v17 = &v9[v15];
  uint64_t v18 = sub_241CD78F0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    sub_241C832E0(0, &qword_26B032040, MEMORY[0x263F45718]);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_7:
  uint64_t v24 = *(int *)(v53 + 28);
  uint64_t v25 = &v8[v24];
  uint64_t v26 = &v9[v24];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  uint64_t v28 = *(int *)(v53 + 32);
  uint64_t v29 = &v8[v28];
  uint64_t v30 = &v9[v28];
  sub_241C7E0E8(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v32 = v31;
  uint64_t v33 = *(void *)(v31 - 8);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  int v35 = v34(v29, 1, v31);
  int v36 = v34(v30, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v29, v30, v32);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v32);
    goto LABEL_12;
  }
  if (v36)
  {
LABEL_12:
    sub_241B67D9C(0);
    memcpy(v29, v30, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v29, v30, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
LABEL_13:
  uint64_t v38 = v54[7];
  uint64_t v39 = *(void **)((char *)a1 + v38);
  *(void *)((char *)a1 + v38) = *(void *)((char *)v55 + v38);

  uint64_t v40 = v54[8];
  uint64_t v41 = (char *)a1 + v40;
  id v42 = (char *)v55 + v40;
  sub_241A31190((uint64_t)a1 + v40);
  long long v43 = *((_OWORD *)v42 + 1);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v43;
  *((void *)v41 + 4) = *((void *)v42 + 4);
  uint64_t v44 = v54[9];
  id v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (void *)((char *)v55 + v44);
  uint64_t v47 = v46[1];
  *id v45 = *v46;
  swift_unknownObjectRelease();
  v45[1] = v47;
  uint64_t v48 = v54[10];
  uint64_t v49 = *(void **)((char *)a1 + v48);
  *(void *)((char *)a1 + v48) = *(void *)((char *)v55 + v48);

  uint64_t v50 = v54[11];
  uint64_t v51 = *(void **)((char *)a1 + v50);
  *(void *)((char *)a1 + v50) = *(void *)((char *)v55 + v50);

  return a1;
}

uint64_t sub_241C7F398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C7F3AC);
}

uint64_t sub_241C7F3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_241C7F418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C7F42C);
}

uint64_t sub_241C7F42C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FetchExistingModelsStep()
{
  uint64_t result = qword_268D438B0;
  if (!qword_268D438B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241C7F4E8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      goto LABEL_57;
    }
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    goto LABEL_18;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v8 = a1;
LABEL_18:
    sub_241C83010(v7, v8);
    return;
  }
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v28 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = sub_241A313AC(0, (unint64_t *)&qword_26B038440);
  int64_t v12 = 0;
  int64_t v29 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_46;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v16 >= v29) {
      return;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v29) {
        return;
      }
      unint64_t v17 = *(void *)(v28 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v29) {
          return;
        }
        unint64_t v17 = *(void *)(v28 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v29) {
            return;
          }
          unint64_t v17 = *(void *)(v28 + 8 * v12);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_45:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_46:
    id v19 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    uint64_t v20 = sub_241CDBB50();
    uint64_t v21 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v22 = v20 & ~v21;
    if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      goto LABEL_53;
    }
    int64_t v30 = v12;
    id v23 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
    char v24 = sub_241CDBB60();

    if ((v24 & 1) == 0)
    {
      uint64_t v25 = ~v21;
      while (1)
      {
        unint64_t v22 = (v22 + 1) & v25;
        if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          break;
        }
        id v26 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
        char v27 = sub_241CDBB60();

        if (v27) {
          goto LABEL_27;
        }
      }
LABEL_53:

      return;
    }
LABEL_27:

    int64_t v12 = v30;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v29) {
    return;
  }
  unint64_t v17 = *(void *)(v28 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_45;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v29) {
      return;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_45;
    }
  }
LABEL_56:
  __break(1u);
LABEL_57:
  MEMORY[0x270F9E868](v6, v5);
}

uint64_t sub_241C7F820(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v84 = a3;
  v85 = a2;
  sub_241AABAD0();
  uint64_t v78 = v6;
  MEMORY[0x270FA5388](v6);
  v79 = (void *)((char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241B67D9C(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v80 = (uint64_t)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ExistingModelsStep = type metadata accessor for FetchExistingModelsStep();
  uint64_t v81 = *(void *)(ExistingModelsStep - 8);
  uint64_t v11 = *(void *)(v81 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](ExistingModelsStep - 8);
  uint64_t v77 = (uint64_t)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)v71 - v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)v71 - v16;
  uint64_t v18 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v21 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v76 = (uint64_t)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  char v24 = (char *)v71 - v23;
  MEMORY[0x270FA5388](v22);
  id v26 = (char *)v71 - v25;
  sub_241C8299C(a1, (uint64_t)v71 - v25, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  sub_241C8299C(v4, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
  v82 = v24;
  sub_241C8299C((uint64_t)v26, (uint64_t)v24, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  v83 = v15;
  sub_241C8299C((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
  uint64_t v27 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v28 = (v27 + 32) & ~v27;
  uint64_t v29 = *(unsigned __int8 *)(v81 + 80);
  uint64_t v74 = v20 + v29;
  uint64_t v75 = v11;
  uint64_t v81 = v27;
  uint64_t v30 = v27 | v29 | 7;
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v84;
  *(void *)(v31 + 16) = v85;
  *(void *)(v31 + 24) = v32;
  sub_241C82E04((uint64_t)v26, v31 + v28, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  sub_241C82E04((uint64_t)v17, v31 + ((v20 + v29 + v28) & ~v29), (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
  uint64_t v33 = *(void **)(v4 + 16);
  swift_retain_n();
  id v34 = objc_msgSend(v33, sel_profileIdentifier);
  id v35 = objc_msgSend(v34, sel_type);

  if (v35 != (id)2)
  {
    swift_getObjectType();
    sub_241CD7340();
    goto LABEL_5;
  }
  uint64_t v36 = v4 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 24);
  uint64_t v37 = _s8WorkPlanVMa();
  uint64_t v38 = v80;
  sub_241C8299C(v36 + *(int *)(v37 + 32), v80, (uint64_t (*)(void))sub_241B67D9C);
  sub_241C7E0E8(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v40 = v39;
  uint64_t v41 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v38, 1, v39) == 1)
  {
    sub_241C82F54(v38, (uint64_t (*)(void))sub_241B67D9C);
    sub_241C82FB4();
    id v42 = (void *)swift_allocError();
    *long long v43 = 0;
    uint64_t v44 = (uint64_t)v79;
    void *v79 = v42;
    swift_storeEnumTagMultiPayload();
    id v45 = v42;
    v85(v44);
    sub_241C82F54(v44, (uint64_t (*)(void))sub_241AABAD0);

LABEL_5:
    swift_release();
    swift_release();
    goto LABEL_6;
  }
  uint64_t v73 = v30;
  uint64_t v47 = (void *)sub_241CDAEB0();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v38, v40);
  uint64_t v48 = v47;
  swift_getObjectType();
  uint64_t v49 = sub_241CD7350();
  if (v49)
  {
    uint64_t v50 = v49;
    uint64_t v51 = v81;
    uint64_t v52 = ~v29;
    type metadata accessor for SummariesHealthPluginDelegate();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v54 = self;
    swift_retain();
    id v55 = objc_msgSend(v54, sel_bundleForClass_, ObjCClassFromMetadata);
    id v56 = objc_msgSend(v55, sel_bundleIdentifier);

    v71[1] = v31;
    id v72 = v48;
    if (v56)
    {
      uint64_t v57 = sub_241CDB0D0();
      uint64_t v59 = v58;
    }
    else
    {
      uint64_t v57 = 0;
      uint64_t v59 = 0;
    }
    uint64_t v64 = v74;
    uint64_t v65 = v76;
    sub_241C8299C((uint64_t)v82, v76, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    uint64_t v66 = v77;
    sub_241C8299C((uint64_t)v83, v77, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
    uint64_t v67 = (v51 + 56) & ~v51;
    uint64_t v68 = (v64 + v67) & v52;
    id v69 = (void *)swift_allocObject();
    v69[2] = v50;
    v69[3] = v57;
    uint64_t v70 = v85;
    v69[4] = v59;
    v69[5] = v70;
    v69[6] = v84;
    sub_241C82E04(v65, (uint64_t)v69 + v67, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    sub_241C82E04(v66, (uint64_t)v69 + v68, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_241CD7E30();
    swift_release();
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
    sub_241C82FB4();
    BOOL v60 = (void *)swift_allocError();
    *uint64_t v61 = 1;
    uint64_t v62 = (uint64_t)v79;
    void *v79 = v60;
    swift_storeEnumTagMultiPayload();
    id v63 = v60;
    v85(v62);
    sub_241C82F54(v62, (uint64_t (*)(void))sub_241AABAD0);

    swift_release();
    swift_release();
  }
LABEL_6:
  sub_241C82F54((uint64_t)v82, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  return sub_241C82F54((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
}

uint64_t sub_241C80054(void *a1, char a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  sub_241AABAD0();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t ExistingModelsStep = type metadata accessor for FetchExistingModelsStep();
  uint64_t v34 = *(void *)(ExistingModelsStep - 8);
  uint64_t v14 = *(void *)(v34 + 64);
  MEMORY[0x270FA5388](ExistingModelsStep - 8);
  uint64_t v37 = (uint64_t)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *uint64_t v12 = a1;
    swift_storeEnumTagMultiPayload();
    id v26 = a1;
    a3(v12);
    return sub_241C82F54((uint64_t)v12, (uint64_t (*)(void))sub_241AABAD0);
  }
  else
  {
    uint64_t v33 = a4;
    type metadata accessor for SummariesHealthPluginDelegate();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v20 = self;
    swift_retain();
    id v21 = objc_msgSend(v20, sel_bundleForClass_, ObjCClassFromMetadata);
    id v22 = objc_msgSend(v21, sel_bundleIdentifier);

    if (v22)
    {
      uint64_t v23 = sub_241CDB0D0();
      uint64_t v25 = v24;
    }
    else
    {
      uint64_t v23 = 0;
      uint64_t v25 = 0;
    }
    sub_241C8299C(v35, (uint64_t)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
    uint64_t v28 = v37;
    sub_241C8299C(v36, v37, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
    unint64_t v29 = (*(unsigned __int8 *)(v16 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v30 = (v17 + *(unsigned __int8 *)(v34 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v31 = (void *)swift_allocObject();
    void v31[2] = a1;
    v31[3] = v23;
    v31[4] = v25;
    v31[5] = a3;
    v31[6] = v33;
    sub_241C82E04((uint64_t)v18, (uint64_t)v31 + v29, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    sub_241C82E04(v28, (uint64_t)v31 + v30, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
    sub_241B54880(a1, 0);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_241CD7E30();
    sub_241C83838(a1, 0, MEMORY[0x263F8EED8]);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_241C803F8(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *), uint64_t a7, uint64_t a8)
{
  uint64_t v65 = a6;
  uint64_t v63 = a4;
  sub_241AABAD0();
  uint64_t v64 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_241CD6D70();
  uint64_t v61 = *(void *)(v16 - 8);
  uint64_t v62 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_241CDA1A0();
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  id v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  id v26 = (char *)&v53 - v25;
  if (a2)
  {
    id v56 = a8;
    uint64_t v57 = v24;
    uint64_t v58 = v23;
    uint64_t v59 = a7;
    id v27 = a1;
    BOOL v60 = a1;
    uint64_t v28 = (void *)sub_241CD6A30();
    unsigned __int8 v29 = objc_msgSend(v28, sel_hk_isObjectNotFoundError);

    if (v29)
    {
      sub_241CDA0F0();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      unint64_t v30 = sub_241CDA190();
      os_log_type_t v31 = sub_241CDB670();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        os_log_t v55 = (os_log_t)swift_slowAlloc();
        os_log_t v68 = v55;
        *(_DWORD *)uint64_t v32 = 136446722;
        os_log_t v54 = v30;
        uint64_t v66 = sub_241A33FE4(0xD000000000000017, 0x8000000241CF3090, (uint64_t *)&v68);
        sub_241CDBBF0();
        *(_WORD *)(v32 + 12) = 2080;
        uint64_t v53 = v32 + 14;
        sub_241CD7E40();
        uint64_t v33 = sub_241CD6D20();
        unint64_t v35 = v34;
        (*(void (**)(char *, uint64_t))(v61 + 8))(v18, v62);
        uint64_t v66 = sub_241A33FE4(v33, v35, (uint64_t *)&v68);
        sub_241CDBBF0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 22) = 2080;
        uint64_t v66 = v63;
        uint64_t v67 = a5;
        sub_241A30878(0, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_241CDB120();
        uint64_t v66 = sub_241A33FE4(v36, v37, (uint64_t *)&v68);
        sub_241CDBBF0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        os_log_t v38 = v54;
        _os_log_impl(&dword_241A23000, v54, v31, "[%{public}s] No summaries were found for transaction %s with identifier %s", (uint8_t *)v32, 0x20u);
        os_log_t v39 = v55;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v39, -1, -1);
        MEMORY[0x245637F20](v32, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v58);
      uint64_t v50 = v60;
      sub_241C8299C((uint64_t)v56, (uint64_t)v15, type metadata accessor for SummariesFullProfileExecutor.StepResult);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      sub_241CDA0F0();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      uint64_t v40 = sub_241CDA190();
      os_log_type_t v41 = sub_241CDB650();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        id v56 = swift_slowAlloc();
        os_log_t v68 = v56;
        *(_DWORD *)uint64_t v42 = 136446722;
        os_log_t v55 = v40;
        uint64_t v66 = sub_241A33FE4(0xD000000000000017, 0x8000000241CF3090, (uint64_t *)&v68);
        sub_241CDBBF0();
        *(_WORD *)(v42 + 12) = 2080;
        os_log_t v54 = (os_log_t)(v42 + 14);
        sub_241CD7E40();
        uint64_t v43 = sub_241CD6D20();
        unint64_t v45 = v44;
        (*(void (**)(char *, uint64_t))(v61 + 8))(v18, v62);
        uint64_t v66 = sub_241A33FE4(v43, v45, (uint64_t *)&v68);
        sub_241CDBBF0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v42 + 22) = 2080;
        uint64_t v66 = v63;
        uint64_t v67 = a5;
        sub_241A30878(0, (unint64_t *)&qword_26B038840, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
        swift_bridgeObjectRetain();
        uint64_t v46 = sub_241CDB120();
        uint64_t v66 = sub_241A33FE4(v46, v47, (uint64_t *)&v68);
        sub_241CDBBF0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        os_log_t v48 = v55;
        _os_log_impl(&dword_241A23000, v55, v41, "[%{public}s] Could not get summaries for transaction %s with identifier %s", (uint8_t *)v42, 0x20u);
        uint64_t v49 = (uint64_t)v56;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v49, -1, -1);
        MEMORY[0x245637F20](v42, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v22, v58);
      uint64_t v50 = v60;
      *uint64_t v15 = v60;
      swift_storeEnumTagMultiPayload();
      id v51 = v50;
    }
    v65(v15);
    sub_241C83838(v50, 1, MEMORY[0x263F8EEA0]);
  }
  else
  {
    sub_241C80BA4(a8, (unint64_t)a1, (uint64_t)v15);
    v65(v15);
  }
  return sub_241C82F54((uint64_t)v15, (uint64_t (*)(void))sub_241AABAD0);
}

uint64_t sub_241C80BA4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v179 = a3;
  uint64_t ExistingModelsStep = type metadata accessor for FetchExistingModelsStep();
  uint64_t v8 = MEMORY[0x270FA5388](ExistingModelsStep - 8);
  uint64_t v193 = (uint64_t)&v168 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v184 = (uint64_t)&v168 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v174 = (uint64_t)&v168 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v173 = (uint64_t)&v168 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v172 = (uint64_t)&v168 - v16;
  uint64_t v200 = sub_241CDA1A0();
  uint64_t v17 = *(void *)(v200 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v200);
  v194 = (char *)&v168 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v192 = (char *)&v168 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v178 = (char *)&v168 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v177 = (char *)&v168 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v176 = (char *)&v168 - v27;
  MEMORY[0x270FA5388](v26);
  v175 = (char *)&v168 - v28;
  sub_241C832E0(0, &qword_26B032000, MEMORY[0x263F07920]);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  uint64_t v191 = (uint64_t)&v168 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v198 = (uint64_t)&v168 - v32;
  uint64_t v197 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  MEMORY[0x270FA5388](v197);
  v201 = (void **)((char *)&v168 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241C8299C(a1, (uint64_t)v201, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  unint64_t v207 = a2;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_241CDBF50();
    if (v34) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v34)
    {
LABEL_3:
      uint64_t v35 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
      if (v34 < 1)
      {
        __break(1u);
        JUMPOUT(0x241C82560);
      }
      uint64_t v36 = 0;
      unint64_t v37 = v207 & 0xC000000000000001;
      uint64_t v195 = v35;
      uint64_t v206 = *(int *)(v35 + 28);
      v199 = (void (**)(char *, uint64_t))(v17 + 8);
      v190 = &v209;
      uint64_t v205 = MEMORY[0x263F8EE50] + 8;
      *((void *)&v38 + 1) = 3;
      long long v203 = xmmword_241CEB710;
      *(void *)&long long v38 = 136315650;
      long long v185 = v38;
      unint64_t v180 = (unint64_t)&unk_241CF3090;
      unint64_t v183 = 0x8000000241CF3090;
      uint64_t v182 = MEMORY[0x263F8EE58] + 8;
      *(void *)&long long v38 = 136446722;
      long long v171 = v38;
      *(void *)&long long v38 = 136446210;
      long long v170 = v38;
      uint64_t v189 = v4;
      uint64_t v196 = v34;
      unint64_t v202 = v207 & 0xC000000000000001;
      do
      {
        if (v37) {
          id v39 = (id)MEMORY[0x245637160](v36, v207);
        }
        else {
          id v39 = *(id *)(v207 + 8 * v36 + 32);
        }
        uint64_t v40 = v39;
        id v41 = objc_msgSend(v39, sel_objectTypes);
        sub_241A313AC(0, (unint64_t *)&qword_26B038440);
        sub_241AD5E58();
        uint64_t v42 = sub_241CDB370();

        sub_241A30878(0, (unint64_t *)&qword_26B038868, v205, MEMORY[0x263F8E0F8]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v203;
        unint64_t v44 = *(void **)(v4 + v206);
        *(void *)(inited + 32) = v44;
        unint64_t v209 = inited;
        sub_241CDB2E0();
        unint64_t v45 = v209;
        if (v209 >> 62)
        {
          id v50 = v44;
          swift_bridgeObjectRetain();
          uint64_t v51 = sub_241CDBF50();
          swift_bridgeObjectRelease();
          if (!v51)
          {
LABEL_14:
            uint64_t v49 = MEMORY[0x263F8EE88];
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v46 = *(void *)((v209 & 0xFFFFFFFFFFFFFF8) + 0x10);
          id v47 = v44;
          if (!v46) {
            goto LABEL_14;
          }
        }
        sub_241C69200(v45);
        uint64_t v49 = v48;
LABEL_15:
        swift_bridgeObjectRelease();
        sub_241C7F4E8(v42, v49);
        char v53 = v52;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v53)
        {
          id v54 = objc_msgSend(v40, sel_summaryData);
          uint64_t v55 = sub_241CD6AE0();
          unint64_t v57 = v56;

          id v58 = objc_allocWithZone(MEMORY[0x263F46528]);
          uint64_t v59 = (void *)sub_241CD6AD0();
          sub_241A37374(v55, v57);
          id v60 = objc_msgSend(v58, sel_initWithData_, v59);

          if (v60)
          {
            uint64_t v61 = v198;
            uint64_t v62 = (uint64_t)v201 + *(int *)(v197 + 28);
            sub_241C83164(v62, v198);
            uint64_t v63 = sub_241CD6EE0();
            int v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v61, 1, v63);
            sub_241C831E4(v61, &qword_26B032000, MEMORY[0x263F07920]);
            if (v64 == 1)
            {
              uint64_t v65 = v191;
              sub_241C82570(v60, *(void **)(v4 + *(int *)(v195 + 40)), v191);
              sub_241C83240(v65, v62);
            }
            id v66 = objc_msgSend(v60, sel_userData);
            if (v66)
            {
              uint64_t v67 = sub_241CD6AE0();
              unint64_t v69 = v68;

              id v66 = (id)sub_241CD6AD0();
              sub_241A37374(v67, v69);
            }
            id v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F465E8]), sel_initWithData_, v66);

            if (v70)
            {
              if (objc_msgSend(v70, sel_hasKindRawValue)
                && (id v71 = objc_msgSend(v70, sel_kindRawValue)) != 0)
              {
                id v72 = v71;
                sub_241CDB0D0();

                uint64_t v73 = sub_241CDBFD0();
                swift_bridgeObjectRelease();
                switch(v73)
                {
                  case 0:
                    uint64_t v74 = (void *)sub_241B87424();
                    id v75 = v74;
                    if ((unint64_t)v74 >= 2)
                    {
                      sub_241C832C0(v74);

                      sub_241C832D0(v75);
                      v163 = v201;
                      sub_241AABB8C(v201[2], v201[3]);
                      v163[2] = 0;
                      v163[3] = v75;
                      break;
                    }
                    uint64_t v76 = v176;
                    sub_241CDA0F0();
                    uint64_t v77 = v173;
                    sub_241C8299C(v4, v173, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
                    sub_241C832C0(v75);
                    sub_241C832C0(v75);
                    uint64_t v78 = sub_241CDA190();
                    os_log_type_t v79 = sub_241CDB650();
                    LODWORD(v187) = v79;
                    if (!os_log_type_enabled(v78, v79)) {
                      goto LABEL_49;
                    }
                    uint64_t v80 = swift_slowAlloc();
                    os_log_t v181 = v78;
                    uint64_t v81 = v80;
                    v186 = (void *)swift_slowAlloc();
                    unint64_t v209 = (unint64_t)v186;
                    *(_DWORD *)uint64_t v81 = v171;
                    uint64_t v208 = sub_241A33FE4(0xD000000000000017, v180 | 0x8000000000000000, (uint64_t *)&v209);
                    id v188 = v60;
                    sub_241CDBBF0();
                    *(_WORD *)(v81 + 12) = 2080;
                    uint64_t v168 = v81 + 14;
                    id v82 = objc_msgSend(*(id *)(v77 + *(int *)(v195 + 28)), sel_identifier, v81 + 14);
                    id v169 = v75;
                    id v83 = v82;
                    uint64_t v84 = sub_241CDB0D0();
                    unint64_t v86 = v85;

                    uint64_t v87 = v84;
                    uint64_t v34 = v196;
                    uint64_t v4 = v189;
                    uint64_t v208 = sub_241A33FE4(v87, v86, (uint64_t *)&v209);
                    sub_241CDBBF0();
                    swift_bridgeObjectRelease();
                    sub_241C82F54(v77, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
                    *(_WORD *)(v81 + 22) = 2082;
                    id v88 = v169;
                    uint64_t v208 = (uint64_t)v169;
                    sub_241C832C0(v169);
                    sub_241C7E0E8(0, &qword_268D438D8, &qword_26B030428, 0x263F46498, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelProcessingResult);
                    uint64_t v89 = sub_241CDB120();
                    uint64_t v208 = sub_241A33FE4(v89, v90, (uint64_t *)&v209);
                    sub_241CDBBF0();
                    swift_bridgeObjectRelease();
                    sub_241C832D0(v88);
                    sub_241C832D0(v88);
                    os_log_t v91 = v181;
                    _os_log_impl(&dword_241A23000, v181, (os_log_type_t)v187, "[%{public}s] Failed to fetch chart sharable model for %s: %{public}s", (uint8_t *)v81, 0x20u);
                    v92 = v186;
                    swift_arrayDestroy();
                    MEMORY[0x245637F20](v92, -1, -1);
                    MEMORY[0x245637F20](v81, -1, -1);

                    sub_241C832D0(v88);
                    v93 = *v199;
                    v94 = &v205;
                    goto LABEL_43;
                  case 1:
                    id v75 = sub_241B85FBC();
                    if ((unint64_t)v75 >= 2)
                    {

                      v164 = v201;
                      sub_241AABB8C(*v201, v201[1]);
                      *v164 = 0;
                      v164[1] = v75;
                      break;
                    }
                    uint64_t v76 = v175;
                    sub_241CDA0F0();
                    uint64_t v77 = v172;
                    sub_241C8299C(v4, v172, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
                    sub_241C832C0(v75);
                    sub_241C832C0(v75);
                    uint64_t v78 = sub_241CDA190();
                    os_log_type_t v127 = sub_241CDB650();
                    LODWORD(v187) = v127;
                    if (os_log_type_enabled(v78, v127))
                    {
                      uint64_t v128 = swift_slowAlloc();
                      os_log_t v181 = v78;
                      uint64_t v129 = v128;
                      v186 = (void *)swift_slowAlloc();
                      unint64_t v209 = (unint64_t)v186;
                      *(_DWORD *)uint64_t v129 = v171;
                      uint64_t v208 = sub_241A33FE4(0xD000000000000017, v180 | 0x8000000000000000, (uint64_t *)&v209);
                      id v188 = v60;
                      sub_241CDBBF0();
                      *(_WORD *)(v129 + 12) = 2080;
                      uint64_t v168 = v129 + 14;
                      id v130 = objc_msgSend(*(id *)(v77 + *(int *)(v195 + 28)), sel_identifier, v129 + 14);
                      id v169 = v75;
                      id v131 = v130;
                      uint64_t v132 = sub_241CDB0D0();
                      unint64_t v134 = v133;

                      uint64_t v135 = v132;
                      uint64_t v34 = v196;
                      uint64_t v4 = v189;
                      uint64_t v208 = sub_241A33FE4(v135, v134, (uint64_t *)&v209);
                      sub_241CDBBF0();
                      swift_bridgeObjectRelease();
                      sub_241C82F54(v77, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
                      *(_WORD *)(v129 + 22) = 2082;
                      id v136 = v169;
                      uint64_t v208 = (uint64_t)v169;
                      sub_241C832C0(v169);
                      sub_241C7E0E8(0, &qword_268D438D0, &qword_26B030440, 0x263F465E0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelProcessingResult);
                      uint64_t v137 = sub_241CDB120();
                      uint64_t v208 = sub_241A33FE4(v137, v138, (uint64_t *)&v209);
                      sub_241CDBBF0();
                      swift_bridgeObjectRelease();
                      sub_241C832D0(v136);
                      sub_241C832D0(v136);
                      os_log_t v139 = v181;
                      _os_log_impl(&dword_241A23000, v181, (os_log_type_t)v187, "[%{public}s] Failed to fetch current value sharable model for %s: %{public}s", (uint8_t *)v129, 0x20u);
                      v140 = v186;
                      swift_arrayDestroy();
                      MEMORY[0x245637F20](v140, -1, -1);
                      MEMORY[0x245637F20](v129, -1, -1);

                      sub_241C832D0(v136);
                      v93 = *v199;
                      v94 = (uint64_t *)&v204;
                      goto LABEL_43;
                    }
                    sub_241C832D0(v75);

                    goto LABEL_53;
                  case 2:
                    id v141 = sub_241B86AA0();
                    id v75 = v141;
                    if ((unint64_t)v141 >= 2)
                    {
                      sub_241C832C0(v141);

                      sub_241C832D0(v75);
                      v165 = v201;

                      v165[4] = v75;
                    }
                    else
                    {
                      uint64_t v76 = v177;
                      sub_241CDA0F0();
                      uint64_t v77 = v174;
                      sub_241C8299C(v4, v174, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
                      sub_241C832C0(v75);
                      sub_241C832C0(v75);
                      uint64_t v78 = sub_241CDA190();
                      os_log_type_t v142 = sub_241CDB650();
                      LODWORD(v187) = v142;
                      if (os_log_type_enabled(v78, v142))
                      {
                        uint64_t v143 = swift_slowAlloc();
                        os_log_t v181 = v78;
                        uint64_t v144 = v143;
                        v186 = (void *)swift_slowAlloc();
                        unint64_t v209 = (unint64_t)v186;
                        *(_DWORD *)uint64_t v144 = v171;
                        uint64_t v208 = sub_241A33FE4(0xD000000000000017, v180 | 0x8000000000000000, (uint64_t *)&v209);
                        id v188 = v60;
                        sub_241CDBBF0();
                        *(_WORD *)(v144 + 12) = 2080;
                        uint64_t v168 = v144 + 14;
                        id v145 = objc_msgSend(*(id *)(v77 + *(int *)(v195 + 28)), sel_identifier, v144 + 14);
                        id v169 = v75;
                        id v146 = v145;
                        uint64_t v147 = sub_241CDB0D0();
                        unint64_t v149 = v148;

                        uint64_t v150 = v147;
                        uint64_t v34 = v196;
                        uint64_t v4 = v189;
                        uint64_t v208 = sub_241A33FE4(v150, v149, (uint64_t *)&v209);
                        sub_241CDBBF0();
                        swift_bridgeObjectRelease();
                        sub_241C82F54(v77, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
                        *(_WORD *)(v144 + 22) = 2082;
                        id v151 = v169;
                        uint64_t v208 = (uint64_t)v169;
                        sub_241C832C0(v169);
                        sub_241C7E0E8(0, &qword_268D438C8, &qword_26B030450, 0x263F46650, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelProcessingResult);
                        uint64_t v152 = sub_241CDB120();
                        uint64_t v208 = sub_241A33FE4(v152, v153, (uint64_t *)&v209);
                        sub_241CDBBF0();
                        swift_bridgeObjectRelease();
                        sub_241C832D0(v151);
                        sub_241C832D0(v151);
                        os_log_t v154 = v181;
                        _os_log_impl(&dword_241A23000, v181, (os_log_type_t)v187, "[%{public}s] Failed to fetch trend sharable model for %s: %{public}s", (uint8_t *)v144, 0x20u);
                        v155 = v186;
                        swift_arrayDestroy();
                        MEMORY[0x245637F20](v155, -1, -1);
                        MEMORY[0x245637F20](v144, -1, -1);

                        sub_241C832D0(v151);
                        v93 = *v199;
                        v94 = &v206;
LABEL_43:
                        v156 = (char *)*(v94 - 32);
                      }
                      else
                      {
LABEL_49:

                        sub_241C832D0(v75);
LABEL_53:
                        sub_241C82F54(v77, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
                        sub_241C832D0(v75);
                        sub_241C832D0(v75);

                        v93 = *v199;
                        v156 = v76;
                      }
                      v93(v156, v200);
                    }
                    break;
                  case 3:
                    v157 = v178;
                    sub_241CDA0F0();
                    v158 = sub_241CDA190();
                    os_log_type_t v159 = sub_241CDB650();
                    if (os_log_type_enabled(v158, v159))
                    {
                      uint64_t v160 = swift_slowAlloc();
                      uint64_t v161 = swift_slowAlloc();
                      unint64_t v209 = v161;
                      *(_DWORD *)uint64_t v160 = v170;
                      *(void *)(v160 + 4) = sub_241A33FE4(0xD000000000000017, v180 | 0x8000000000000000, (uint64_t *)&v209);
                      _os_log_impl(&dword_241A23000, v158, v159, "[%{public}s] correlated trends unsupported", (uint8_t *)v160, 0xCu);
                      swift_arrayDestroy();
                      uint64_t v162 = v161;
                      uint64_t v34 = v196;
                      uint64_t v4 = v189;
                      MEMORY[0x245637F20](v162, -1, -1);
                      MEMORY[0x245637F20](v160, -1, -1);
                    }
                    else
                    {
                    }
                    (*v199)(v157, v200);
                    break;
                  default:
                    goto LABEL_30;
                }
              }
              else
              {
LABEL_30:
              }
            }
            else
            {
              v111 = v192;
              sub_241CDA0F0();
              uint64_t v112 = v184;
              sub_241C8299C(v4, v184, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
              id v113 = v40;
              v114 = sub_241CDA190();
              os_log_type_t v115 = sub_241CDB650();
              if (os_log_type_enabled(v114, v115))
              {
                uint64_t v116 = swift_slowAlloc();
                v186 = (void *)swift_slowAlloc();
                os_log_t v187 = (os_log_t)swift_slowAlloc();
                unint64_t v209 = (unint64_t)v187;
                *(_DWORD *)uint64_t v116 = v185;
                os_log_t v181 = v114;
                uint64_t v208 = sub_241A33FE4(0xD000000000000017, v180 | 0x8000000000000000, (uint64_t *)&v209);
                sub_241CDBBF0();
                *(_WORD *)(v116 + 12) = 2080;
                id v117 = objc_msgSend(v113, sel_name);
                uint64_t v118 = sub_241CDB0D0();
                id v188 = v60;
                uint64_t v119 = v118;
                unint64_t v121 = v120;

                uint64_t v208 = sub_241A33FE4(v119, v121, (uint64_t *)&v209);
                sub_241CDBBF0();

                swift_bridgeObjectRelease();
                *(_WORD *)(v116 + 22) = 2114;
                v122 = *(void **)(v112 + *(int *)(v195 + 28));
                uint64_t v208 = (uint64_t)v122;
                id v123 = v122;
                sub_241CDBBF0();
                v124 = v186;
                void *v186 = v122;
                sub_241C82F54(v112, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
                os_log_t v125 = v181;
                _os_log_impl(&dword_241A23000, v181, v115, "%s: received summary data with identifier %s that cannot have HKCodableSummaryData decoded for type: %{public}@", (uint8_t *)v116, 0x20u);
                sub_241C7E0E8(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
                swift_arrayDestroy();
                uint64_t v4 = v189;
                MEMORY[0x245637F20](v124, -1, -1);
                os_log_t v126 = v187;
                swift_arrayDestroy();
                MEMORY[0x245637F20](v126, -1, -1);
                MEMORY[0x245637F20](v116, -1, -1);

                (*v199)(v192, v200);
              }
              else
              {

                sub_241C82F54(v112, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
                (*v199)(v111, v200);
              }
              uint64_t v34 = v196;
            }
            unint64_t v37 = v202;
          }
          else
          {
            v95 = v194;
            sub_241CDA0F0();
            uint64_t v96 = v193;
            sub_241C8299C(v4, v193, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
            id v97 = v40;
            v98 = sub_241CDA190();
            os_log_type_t v99 = sub_241CDB650();
            if (os_log_type_enabled(v98, v99))
            {
              uint64_t v100 = swift_slowAlloc();
              v186 = (void *)swift_slowAlloc();
              id v188 = (id)swift_slowAlloc();
              unint64_t v209 = (unint64_t)v188;
              *(_DWORD *)uint64_t v100 = v185;
              os_log_t v187 = v98;
              uint64_t v208 = sub_241A33FE4(0xD000000000000017, v183, (uint64_t *)&v209);
              sub_241CDBBF0();
              *(_WORD *)(v100 + 12) = 2080;
              id v101 = objc_msgSend(v97, sel_name);
              uint64_t v102 = sub_241CDB0D0();
              unint64_t v104 = v103;

              uint64_t v208 = sub_241A33FE4(v102, v104, (uint64_t *)&v209);
              sub_241CDBBF0();

              swift_bridgeObjectRelease();
              *(_WORD *)(v100 + 22) = 2114;
              v105 = *(void **)(v96 + *(int *)(v195 + 28));
              uint64_t v208 = (uint64_t)v105;
              id v106 = v105;
              sub_241CDBBF0();
              v107 = v186;
              void *v186 = v105;
              sub_241C82F54(v96, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
              os_log_t v108 = v187;
              _os_log_impl(&dword_241A23000, v187, v99, "%s: received summary data with identifier %s that cannot have HKCodablePluginSharableModelData decoded for type: %{public}@", (uint8_t *)v100, 0x20u);
              sub_241C7E0E8(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
              swift_arrayDestroy();
              uint64_t v4 = v189;
              MEMORY[0x245637F20](v107, -1, -1);
              id v109 = v188;
              swift_arrayDestroy();
              MEMORY[0x245637F20](v109, -1, -1);
              uint64_t v110 = v100;
              unint64_t v37 = v202;
              MEMORY[0x245637F20](v110, -1, -1);

              (*v199)(v194, v200);
            }
            else
            {

              sub_241C82F54(v96, (uint64_t (*)(void))type metadata accessor for FetchExistingModelsStep);
              (*v199)(v95, v200);
            }
            uint64_t v34 = v196;
          }
        }
        else
        {
        }
        ++v36;
      }
      while (v34 != v36);
    }
  }
  swift_bridgeObjectRelease();
  v166 = v201;
  sub_241C8299C((uint64_t)v201, v179, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  sub_241AABAD0();
  swift_storeEnumTagMultiPayload();
  return sub_241C82F54((uint64_t)v166, type metadata accessor for SummariesFullProfileExecutor.StepResult);
}

id sub_241C82570@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v31 = a2;
  sub_241C832E0(0, (unint64_t *)&qword_26B02E8E8, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v28 - v6;
  uint64_t v8 = sub_241CD6EE0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C832E0(0, &qword_26B02E8F0, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v15 = sub_241CD6F50();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, sel_hasSourceLocaleIdentifier)
    || !objc_msgSend(a1, sel_hasSourceTimeZoneIdentifier))
  {
    uint64_t v22 = 1;
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v22, 1, v8);
  }
  uint64_t v29 = a3;
  uint64_t v30 = v16;
  uint64_t v28 = v7;
  id result = objc_msgSend(a1, sel_sourceTimeZoneIdentifier);
  if (result)
  {
    uint64_t v20 = result;
    sub_241CDB0D0();

    sub_241CD6EF0();
    swift_bridgeObjectRelease();
    uint64_t v21 = v30;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v14, 1, v15) == 1)
    {
      sub_241C831E4((uint64_t)v14, &qword_26B02E8F0, MEMORY[0x263F079C8]);
      uint64_t v22 = 1;
      a3 = v29;
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v22, 1, v8);
    }
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v14, v15);
    uint64_t v23 = (void *)sub_241CD6F10();
    id v24 = objc_msgSend(v31, sel_calendarForTimeZone_, v23);

    sub_241CD6E50();
    id result = objc_msgSend(a1, sel_sourceLocaleIdentifier);
    if (result)
    {
      uint64_t v25 = result;
      sub_241CDB0D0();

      uint64_t v26 = v28;
      sub_241CD6D80();
      uint64_t v27 = sub_241CD6DD0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
      sub_241CD6E90();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v15);
      a3 = v29;
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v29, v11, v8);
      uint64_t v22 = 0;
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v22, 1, v8);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_241C8299C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241C82A04()
{
  uint64_t v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = *(void *)(type metadata accessor for FetchExistingModelsStep() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 + v6;
  uint64_t v33 = *(void *)(v5 + 64);
  swift_release();
  uint64_t v8 = v0 + v3;
  uint64_t v9 = *(void **)(v0 + v3);
  if (v9 != (void *)1)
  {
  }
  uint64_t v10 = v3 + v7;
  uint64_t v11 = *(void **)(v8 + 16);
  if (v11 != (void *)1)
  {
  }
  uint64_t v12 = v10 & ~v6;

  uint64_t v13 = v8 + *(int *)(v1 + 28);
  uint64_t v14 = sub_241CD6EE0();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v32 = v12;
  uint64_t v16 = v0 + v12;
  swift_unknownObjectRelease();

  uint64_t v17 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v18 = v0 + v12 + v17[6];
  uint64_t v19 = (int *)_s8WorkPlanVMa();
  uint64_t v20 = v18 + v19[5];
  uint64_t v21 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  uint64_t v22 = v18 + v19[6];
  uint64_t v23 = sub_241CD78F0();
  uint64_t v24 = *(void *)(v23 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  uint64_t v25 = v18 + v19[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = v18 + v19[8];
  sub_241C7E0E8(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v27, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v27, v29);
  }

  sub_241A31190(v16 + v17[8]);
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, v32 + v33, v2 | v6 | 7);
}

uint64_t sub_241C82E04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241C82E6C(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for FetchExistingModelsStep() - 8);
  uint64_t v9 = *(void (**)(void *))(v2 + 16);
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t v11 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_241C80054(a1, v4, v9, v10, v2 + v6, v11);
}

uint64_t sub_241C82F54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_241C82FB4()
{
  unint64_t result = qword_268D438C0;
  if (!qword_268D438C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D438C0);
  }
  return result;
}

void sub_241C83010(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != sub_241CDBD00()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v13 = sub_241CDBD50();

    if ((v13 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_241C83164(uint64_t a1, uint64_t a2)
{
  sub_241C832E0(0, &qword_26B032000, MEMORY[0x263F07920]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241C831E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241C832E0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241C83240(uint64_t a1, uint64_t a2)
{
  sub_241C832E0(0, &qword_26B032000, MEMORY[0x263F07920]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_241C832C0(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

void sub_241C832D0(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

void sub_241C832E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241C83338()
{
  uint64_t v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = *(void *)(type metadata accessor for FetchExistingModelsStep() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 + v6;
  uint64_t v33 = *(void *)(v5 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v8 = v0 + v3;
  int64_t v9 = *(void **)(v0 + v3);
  if (v9 != (void *)1)
  {
  }
  uint64_t v10 = v3 + v7;
  unint64_t v11 = *(void **)(v8 + 16);
  if (v11 != (void *)1)
  {
  }
  uint64_t v12 = v10 & ~v6;

  uint64_t v13 = v8 + *(int *)(v1 + 28);
  uint64_t v14 = sub_241CD6EE0();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v32 = v12;
  uint64_t v16 = v0 + v12;
  swift_unknownObjectRelease();

  uint64_t v17 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v18 = v0 + v12 + v17[6];
  uint64_t v19 = (int *)_s8WorkPlanVMa();
  uint64_t v20 = v18 + v19[5];
  uint64_t v21 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  uint64_t v22 = v18 + v19[6];
  uint64_t v23 = sub_241CD78F0();
  uint64_t v24 = *(void *)(v23 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  uint64_t v25 = v18 + v19[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = v18 + v19[8];
  sub_241C7E0E8(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v27, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v27, v29);
  }

  sub_241A31190(v16 + v17[8]);
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, v32 + v33, v2 | v6 | 7);
}

uint64_t sub_241C83748(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  type metadata accessor for FetchExistingModelsStep();
  return sub_241C803F8(a1, v4, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void (**)(void *))(v2 + 40), *(void *)(v2 + 48), v2 + v6);
}

void sub_241C83838(id a1, char a2, void (*a3)(id))
{
  if (a2) {

  }
  else {
    a3(a1);
  }
}

unsigned char *storeEnumTagSinglePayload for FetchExistingModelsStep.FetchExistingModelsStepError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241C83914);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchExistingModelsStep.FetchExistingModelsStepError()
{
  return &type metadata for FetchExistingModelsStep.FetchExistingModelsStepError;
}

unint64_t sub_241C83950()
{
  unint64_t result = qword_268D438E0;
  if (!qword_268D438E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D438E0);
  }
  return result;
}

void HKActivitySummary.humanReadableDate.getter(char *a1@<X8>)
{
  sub_241A32E38(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v20 - v4;
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v20 - v11;
  id v13 = objc_msgSend(v1, sel__endDate);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_6;
  }
  uint64_t v14 = v13;
  sub_241CD6CB0();

  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v15(v5, v10, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_6:
    sub_241C85F74((uint64_t)v5, &qword_26B0385B8, MEMORY[0x263F07490]);
    id v18 = objc_msgSend(v1, sel__creationDate);
    sub_241CD6CB0();

    return;
  }
  v15(v12, v5, v6);
  id v16 = objc_msgSend(v1, sel__creationDate);
  sub_241CD6CB0();

  LOBYTE(v16) = sub_241CD6C80();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v10, v6);
  if (v16)
  {
    v15(a1, v12, v6);
  }
  else
  {
    id v19 = objc_msgSend(v1, sel__creationDate);
    sub_241CD6CB0();

    v17(v12, v6);
  }
}

id sub_241C83CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_241CD9ED0();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s8WorkPlanVMa();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v35 = (uint64_t)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = v2 + qword_268D4B278;
  uint64_t v17 = sub_241CD9E40();
  uint64_t v18 = *(void *)(v17 - 8);
  id v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  uint64_t v36 = a2;
  v19(v16, a2, v17);
  sub_241C858F4(a1, v3 + qword_26B0412F0, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v20 = *(void **)(a1 + 16);
  uint64_t v21 = type metadata accessor for HealthStoreActivityRingsResumeDateProvider();
  swift_allocObject();
  swift_retain();
  id v22 = v20;
  sub_241A99ABC(v22);
  uint64_t v23 = (void *)(v3 + qword_26B041378);
  v23[3] = v21;
  v23[4] = &off_26F5C14F0;
  *uint64_t v23 = v24;
  swift_release();
  long long v41 = *(_OWORD *)a1;
  sub_241C858F4(a1 + v11[6], (uint64_t)v10, (uint64_t (*)(void))_s8WorkPlanVMa);
  uint64_t v25 = self;
  id v26 = v22;
  swift_unknownObjectRetain();
  id result = objc_msgSend(v25, sel_activityCacheType);
  if (result)
  {
    id v28 = result;
    sub_241A37260(a1 + v11[8], (uint64_t)&v15[v11[8]]);
    long long v40 = *(_OWORD *)(a1 + v11[9]);
    id v29 = objc_allocWithZone(MEMORY[0x263F46A40]);
    swift_unknownObjectRetain();
    id v30 = objc_msgSend(v29, sel_initWithHealthStore_, v26);
    *(_OWORD *)uint64_t v15 = v41;
    *((void *)v15 + 2) = v26;
    sub_241C854A4((uint64_t)v10, (uint64_t)&v15[v11[6]], (uint64_t (*)(void))_s8WorkPlanVMa);
    *(void *)&v15[v11[7]] = v28;
    *(_OWORD *)&v15[v11[9]] = v40;
    uint64_t v31 = v11[10];
    *(void *)&v15[v31] = objc_msgSend(objc_allocWithZone((Class)sub_241CD8110()), sel_init);
    *(void *)&v15[v11[11]] = v30;
    uint64_t v32 = v35;
    sub_241C858F4((uint64_t)v15, v35, type metadata accessor for SummariesFullProfileExecutor.Request);
    uint64_t v33 = v37;
    sub_241CD9EC0();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v36, v17);
    sub_241C857EC(a1, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_241C857EC((uint64_t)v15, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_241C854A4(v32, v3 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v3 + qword_26B0411F8, v33, v39);
    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241C8411C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = v4;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = sub_241C85528;
  v8[3] = v7;
  v8[4] = v4;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_241C84DF4((uint64_t)sub_241C85550, (uint64_t)v8);
  swift_release();

  return swift_release();
}

void sub_241C841EC(uint64_t a1, void (*a2)(id, uint64_t))
{
  sub_241A32E38(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v16 - v5;
  sub_241C85560();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C858F4(a1, (uint64_t)v9, (uint64_t (*)(void))sub_241C85560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v10 = *(id *)v9;
    id v11 = *(id *)v9;
    a2(v10, 1);
  }
  else
  {
    id v12 = *(id *)v9;
    int v13 = v9[8];
    sub_241C855D0();
    sub_241B3BE44((uint64_t)&v9[*(int *)(v14 + 64)], (uint64_t)v6);
    id v15 = sub_241C8595C(v12, v13, (uint64_t)v6);
    a2(v15, 0);

    sub_241C85F74((uint64_t)v6, &qword_26B0385B8, MEMORY[0x263F07490]);
  }
}

uint64_t sub_241C843A0(void *a1, char a2, void (*a3)(void *), uint64_t a4, uint64_t a5)
{
  uint64_t v36 = a5;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v7 = sub_241CD6810();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD6D00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v34 - v16;
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v34 - v18;
  sub_241C85560();
  MEMORY[0x270FA5388](v20);
  id v22 = (void (**)(char *, uint64_t))((char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    *id v22 = a1;
    swift_storeEnumTagMultiPayload();
    id v33 = a1;
    v38(v22);
    return sub_241C857EC((uint64_t)v22, (uint64_t (*)(void))sub_241C85560);
  }
  else
  {
    sub_241CD6CF0();
    uint64_t v23 = (void *)sub_241CD6C60();
    uint64_t v35 = v7;
    uint64_t v34 = *(void (**)(char *, uint64_t))(v11 + 8);
    v34(v17, v10);
    id v24 = (id)HKEndOfDayForDate();

    sub_241CD6CB0();
    sub_241CD6BF0();
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v19, v10);
    sub_241CD67C0();
    sub_241CD9D20();
    uint64_t v25 = (void *)sub_241CD9D10();
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v39;
    *(void *)(v26 + 16) = v38;
    *(void *)(v26 + 24) = v27;
    uint64_t v28 = v36;
    *(void *)(v26 + 32) = v36;
    *(unsigned char *)(v26 + 40) = a1 & 1;
    id v29 = objc_allocWithZone(MEMORY[0x263F0A098]);
    aBlock[4] = sub_241C856EC;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241C85710;
    aBlock[3] = &unk_26F5C78C0;
    id v30 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    id v31 = objc_msgSend(v29, sel_initWithPredicate_resultsHandler_, v25, v30);
    _Block_release(v30);
    swift_release();
    objc_msgSend(v31, sel_setLimit_, 1);
    objc_msgSend(v31, sel_setOrderByDateAscending_, 0);
    objc_msgSend(*(id *)(v28 + qword_26B041200 + 16), sel_executeQuery_, v31);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v35);
    return ((uint64_t (*)(char *, uint64_t))v34)(v19, v10);
  }
}

void sub_241C847D0(uint64_t a1, unint64_t a2, void *a3, void (*a4)(os_unfair_lock_s *), uint64_t a5, uint64_t a6, char a7)
{
  sub_241C85560();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (os_unfair_lock_s *)&v41[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (os_unfair_lock_s *)&v41[-v17];
  sub_241A32E38(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = &v41[-v20];
  if (a3)
  {
    *(void *)&v16->_os_unfair_lock_opaque = a3;
    swift_storeEnumTagMultiPayload();
    id v22 = a3;
    a4(v16);
    sub_241C857EC((uint64_t)v16, (uint64_t (*)(void))sub_241C85560);
    return;
  }
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a4;
  *(void *)(v23 + 24) = a5;
  *(void *)(v23 + 32) = a2;
  int v42 = a7 & 1;
  *(unsigned char *)(v23 + 40) = a7 & 1;
  uint64_t v24 = *sub_241A311E0((void *)(a6 + qword_26B041378), *(void *)(a6 + qword_26B041378 + 24));
  uint64_t v25 = self;
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  id v26 = objc_msgSend(v25, sel_sharedBehavior);
  if (!v26) {
    goto LABEL_22;
  }
  uint64_t v27 = v26;
  id v28 = objc_msgSend(v26, sel_features);

  if (!v28)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    swift_release();
    __break(1u);
    swift_bridgeObjectRelease();
    swift_release();
    os_unfair_lock_unlock(v18);
    __break(1u);
    return;
  }
  unsigned __int8 v29 = objc_msgSend(v28, sel_pauseRings);

  if (v29)
  {
    MEMORY[0x270FA5388](v30);
    *(void *)&v41[-32] = sub_241C858C4;
    *(void *)&v41[-24] = v23;
    *(void *)&v41[-16] = v24;
    uint64_t v32 = (uint64_t)&v31[4];
    id v33 = v31 + 8;
    os_unfair_lock_lock(v31 + 8);
    sub_241C858D4(v32);
    os_unfair_lock_unlock(v33);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return;
  }
  uint64_t v34 = sub_241CD6D00();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v21, 1, 1, v34);
  if (!a2)
  {
    uint64_t v35 = 0;
LABEL_17:
    char v37 = v42;
    goto LABEL_18;
  }
  if (!(a2 >> 62))
  {
    uint64_t v35 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v35) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_241CDBF50();
  if (!v35)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_10:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v36 = (id)MEMORY[0x245637160](0, a2);
    goto LABEL_13;
  }
  if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_22:
    swift_bridgeObjectRelease();
    swift_release();
    __break(1u);
    goto LABEL_23;
  }
  id v36 = *(id *)(a2 + 32);
LABEL_13:
  uint64_t v35 = (uint64_t)v36;
  char v37 = v42;
  swift_bridgeObjectRelease();
LABEL_18:
  *(void *)&v18->_os_unfair_lock_opaque = v35;
  sub_241C855D0();
  uint64_t v39 = (uint64_t)v18 + *(int *)(v38 + 64);
  LOBYTE(v18[2]._os_unfair_lock_opaque) = v37;
  long long v40 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_241C85F08((uint64_t)v21, v39, &qword_26B0385B8, MEMORY[0x263F07490]);
  swift_storeEnumTagMultiPayload();
  a4(v18);
  sub_241C857EC((uint64_t)v18, (uint64_t (*)(void))sub_241C85560);
  sub_241C85F74((uint64_t)v21, &qword_26B0385B8, v40);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
}

uint64_t sub_241C84C58(uint64_t a1, void (*a2)(char *), uint64_t a3, unint64_t a4, char a5)
{
  sub_241C85560();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a4)
  {
    uint64_t v12 = 0;
    goto LABEL_10;
  }
  if (a4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_241CDBF50();
    uint64_t v12 = result;
    if (!result) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v12)
    {
LABEL_8:
      swift_bridgeObjectRelease();
LABEL_10:
      *(void *)uint64_t v11 = v12;
      sub_241C855D0();
      uint64_t v16 = (uint64_t)&v11[*(int *)(v15 + 64)];
      v11[8] = a5 & 1;
      sub_241C85F08(a1, v16, &qword_26B0385B8, MEMORY[0x263F07490]);
      swift_storeEnumTagMultiPayload();
      a2(v11);
      return sub_241C857EC((uint64_t)v11, (uint64_t (*)(void))sub_241C85560);
    }
  }
  if ((a4 & 0xC000000000000001) != 0)
  {
    id v14 = (id)MEMORY[0x245637160](0, a4);
    goto LABEL_7;
  }
  if (*(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v14 = *(id *)(a4 + 32);
LABEL_7:
    uint64_t v12 = (uint64_t)v14;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_241C84DF4(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel__predicateForObjectsFromAppleWatches);
  sub_241A313AC(0, (unint64_t *)&qword_26B038E58);
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_activityCacheType);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v5, v4);

    sub_241A33460();
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_241CEB710;
    *(void *)(v8 + 32) = v7;
    sub_241CDB2E0();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_241CEB710;
    sub_241A313AC(0, (unint64_t *)&qword_26B038848);
    swift_getKeyPath();
    id v10 = v7;
    *(void *)(v9 + 32) = sub_241CDB790();
    sub_241CDB2E0();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a1;
    *(void *)(v11 + 24) = a2;
    id v12 = objc_allocWithZone(MEMORY[0x263F0A6E0]);
    sub_241A313AC(0, &qword_26B036890);
    swift_retain();
    uint64_t v13 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    id v14 = (void *)sub_241CDB2A0();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_241C8600C;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241C856FC;
    aBlock[3] = &unk_26F5C7938;
    uint64_t v15 = _Block_copy(aBlock);
    id v16 = objc_msgSend(v12, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v13, 1, v14, v15);

    _Block_release(v15);
    swift_release();
    objc_msgSend(*(id *)(v17 + qword_26B041200 + 16), sel_executeQuery_, v16);
  }
  else
  {
    __break(1u);
  }
}

void sub_241C850D4(int a1, unint64_t a2, id a3, void (*a4)(id, uint64_t))
{
  if (a2)
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_241CDBF50();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    BOOL v6 = v5 != 0;
    goto LABEL_5;
  }
  if (!a3)
  {
    BOOL v6 = 0;
LABEL_5:
    ((void (*)(BOOL, void, id))a4)(v6, 0, a3);
    return;
  }
  id v8 = a3;
  a4(a3, 1);
}

uint64_t sub_241C851A4()
{
  uint64_t v1 = v0 + qword_268D4B278;
  uint64_t v2 = sub_241CD9E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_241C857EC(v0 + qword_26B0412F0, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v3 = v0 + qword_26B041378;

  return sub_241A31190(v3);
}

uint64_t sub_241C85244()
{
  sub_241C857EC(v0 + qword_26B041200, type metadata accessor for SummariesFullProfileExecutor.Request);
  uint64_t v1 = v0 + qword_26B0411F8;
  uint64_t v2 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_268D4B278;
  uint64_t v4 = sub_241CD9E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_241C857EC(v0 + qword_26B0412F0, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_241A31190(v0 + qword_26B041378);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivitySummaryCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B0351B8;
  if (!qword_26B0351B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241C853D0()
{
  uint64_t result = sub_241CD9E40();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_241C854A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241C8550C()
{
  return sub_241C85868(MEMORY[0x263F8EED8], 40);
}

void sub_241C85528(uint64_t a1)
{
  sub_241C841EC(a1, *(void (**)(id, uint64_t))(v1 + 16));
}

uint64_t sub_241C85534()
{
  return sub_241C85868(MEMORY[0x263F8EED8], 40);
}

uint64_t sub_241C85550(void *a1, char a2)
{
  return sub_241C843A0(a1, a2 & 1, *(void (**)(void *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_241C85560()
{
  if (!qword_26B0369E8)
  {
    sub_241C855D0();
    sub_241A3DA64();
    unint64_t v0 = sub_241CDC210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0369E8);
    }
  }
}

void sub_241C855D0()
{
  if (!qword_26B036880)
  {
    sub_241C85668();
    sub_241A32E38(255, &qword_26B0385B8, MEMORY[0x263F07490]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26B036880);
    }
  }
}

void sub_241C85668()
{
  if (!qword_26B036888)
  {
    sub_241A313AC(255, &qword_26B034D98);
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B036888);
    }
  }
}

uint64_t sub_241C856D0()
{
  return sub_241C85868(MEMORY[0x263F8EED8], 41);
}

void sub_241C856EC(uint64_t a1, unint64_t a2, void *a3)
{
  sub_241C847D0(a1, a2, a3, *(void (**)(os_unfair_lock_s *))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(unsigned char *)(v3 + 40));
}

uint64_t sub_241C856FC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  return sub_241C85724(a1, a2, a3, a4, &qword_26B0304D8);
}

uint64_t sub_241C85710(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  return sub_241C85724(a1, a2, a3, a4, &qword_26B034D98);
}

uint64_t sub_241C85724(uint64_t a1, void *a2, uint64_t a3, void *a4, unint64_t *a5)
{
  uint64_t v6 = a3;
  id v8 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_241A313AC(0, a5);
    uint64_t v6 = sub_241CDB2C0();
  }
  swift_retain();
  id v9 = a2;
  id v10 = a4;
  v8(v9, v6, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241C857D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241C857E4()
{
  return swift_release();
}

uint64_t sub_241C857EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241C8584C()
{
  return sub_241C85868(MEMORY[0x263F8EEA0], 41);
}

uint64_t sub_241C85868(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 32));

  return MEMORY[0x270FA0238](v2, a2, 7);
}

uint64_t sub_241C858C4(uint64_t a1)
{
  return sub_241C84C58(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

uint64_t sub_241C858D4(uint64_t a1)
{
  return sub_241A9A054(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_241C858F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_241C8595C(void *a1, int a2, uint64_t a3)
{
  LODWORD(v44) = a2;
  sub_241A32E38(0, &qword_26B032050, MEMORY[0x263F45780]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  id v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v43 - v9;
  sub_241A32E38(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v43 - v12;
  sub_241A32E38(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v14 - 8);
  id v16 = (char *)&v43 - v15;
  sub_241A32E38(0, &qword_26B0385B8, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v43 - v18;
  uint64_t v45 = sub_241CD6D00();
  uint64_t v20 = *(void *)(v45 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v45);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v43 - v24;
  if (!a1)
  {
    sub_241CD7A80();
    uint64_t v40 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v10, 0, 1, v40);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v41 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v13, 1, 1, v41);
    int v42 = (void (*)(uint64_t))MEMORY[0x263F45780];
    sub_241C85F08((uint64_t)v10, (uint64_t)v8, &qword_26B032050, MEMORY[0x263F45780]);
    id v39 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v13, (uint64_t)v8, 0, 0);
    sub_241C85F74((uint64_t)v10, &qword_26B032050, v42);
    return v39;
  }
  id v26 = a1;
  HKActivitySummary.humanReadableDate.getter(v25);
  uint64_t v27 = sub_241A313AC(0, &qword_26B02E818);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v23, v25, v45);
  sub_241C85F08(a3, (uint64_t)v19, &qword_26B0385B8, MEMORY[0x263F07490]);
  id v28 = v26;
  int v29 = v44 & 1;
  id v44 = v28;
  id v30 = HKCodableSummaryActivityRingsValue.init(activitySummary:date:hasEverHadAWatch:activityResumeDate:)(v28, v23, v29, (uint64_t)v19);
  sub_241A313AC(0, &qword_26B034E48);
  sub_241CD6770();
  uint64_t v31 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v16, 0, 1, v31);
  id v32 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v16, 1, 0);
  id result = objc_msgSend(v30, sel_data);
  if (result)
  {
    uint64_t v34 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v35 = sub_241CD6AE0();
    unint64_t v37 = v36;

    uint64_t v38 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v13, 1, 1, v38);
    v46[3] = v27;
    v46[4] = &off_26F5C0A88;
    v46[0] = v30;
    id v39 = sub_241A54648(v35, v37, 0, (uint64_t)v13, (uint64_t)v32, 0, (uint64_t)v46);

    sub_241A37374(v35, v37);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v45);
    return v39;
  }
  __break(1u);
  return result;
}

uint64_t sub_241C85F08(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241A32E38(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241C85F74(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241A32E38(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241C85FD4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241C8600C(int a1, unint64_t a2, void *a3)
{
  sub_241C850D4(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16));
}

uint64_t sub_241C8601C(uint64_t a1)
{
  uint64_t v59 = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A26100(0, (unint64_t *)&qword_26B034DA8, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  id v54 = (char *)&v51 - v4;
  sub_241C86A24();
  uint64_t v55 = v5;
  uint64_t v53 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C86AC4();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x270FA5388](v7);
  char v52 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A26100(0, &qword_26B0368D8, MEMORY[0x263F07CB0], v2);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v65 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v67 = (uint64_t)&v51 - v13;
  MEMORY[0x270FA5388](v12);
  id v66 = (char *)&v51 - v14;
  uint64_t v15 = sub_241CD7650();
  uint64_t v60 = *(void *)(v15 - 8);
  uint64_t v61 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CD7690();
  uint64_t v62 = *(void *)(v18 - 8);
  uint64_t v63 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v58 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v22 = *(void **)(v1 + OBJC_IVAR____TtC9Summaries32BalanceSummaryModelConfiguration_balanceType);
  *(void *)(inited + 32) = v22;
  uint64_t v68 = inited;
  sub_241CDB2E0();
  sub_241A26100(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v23 = sub_241CD73B0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 72);
  unint64_t v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_241CEB720;
  unint64_t v28 = v27 + v26;
  int v29 = *(void (**)(unint64_t, void, uint64_t))(v24 + 104);
  v29(v28, *MEMORY[0x263F45520], v23);
  v29(v28 + v25, *MEMORY[0x263F45538], v23);
  id v30 = v58;
  id v31 = v22;
  sub_241C5D74C(v27);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v32 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v32);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v17, *MEMORY[0x263F45690], v61);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  id v33 = (void *)sub_241CD7710();
  uint64_t v34 = v20;
  uint64_t v35 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v34, v63);
  id v36 = objc_msgSend(self, sel_defaultCenter);
  unint64_t v37 = v66;
  sub_241CDB910();

  uint64_t v38 = sub_241CDB900();
  uint64_t v39 = *(void *)(v38 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v37, 0, 1, v38);
  uint64_t v40 = (uint64_t)v37;
  uint64_t v41 = v67;
  sub_241C86BD8(v40, v67);
  uint64_t v42 = v64 + OBJC_IVAR____TtC9Summaries32BalanceSummaryModelConfiguration_significantTimeChangePublisher;
  swift_beginAccess();
  sub_241C86C6C(v41, v42);
  swift_endAccess();
  sub_241C86D00(v42, v35);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v35, 1, v38);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_241C86B90(&qword_26B034DD8, MEMORY[0x263F07CB0]);
    id v44 = v51;
    sub_241CDA710();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v35, v38);
    uint64_t v68 = (uint64_t)v33;
    uint64_t v45 = sub_241CDB8A0();
    uint64_t v46 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v54, 1, 1, v45);
    sub_241A313AC(0, &qword_26B0303B8);
    sub_241C86B90(&qword_268D438F8, (void (*)(uint64_t))sub_241C86A24);
    sub_241AAD6A4();
    id v47 = v52;
    uint64_t v48 = v55;
    sub_241CDA7E0();
    sub_241A26090(v46, (unint64_t *)&qword_26B034DA8, MEMORY[0x263F8F110]);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v48);
    sub_241C86B90(&qword_268D43900, (void (*)(uint64_t))sub_241C86AC4);
    uint64_t v49 = v57;
    uint64_t v50 = sub_241CDA6D0();

    (*(void (**)(char *, uint64_t))(v56 + 8))(v47, v49);
    return v50;
  }
  return result;
}

void sub_241C868CC()
{
}

uint64_t sub_241C868FC()
{
  return sub_241A26090(v0 + OBJC_IVAR____TtC9Summaries32BalanceSummaryModelConfiguration_significantTimeChangePublisher, &qword_26B0368D8, MEMORY[0x263F07CB0]);
}

uint64_t sub_241C8694C()
{
  return type metadata accessor for BalanceSummaryModelConfiguration();
}

void sub_241C86954()
{
  sub_241A26100(319, &qword_26B0368D8, MEMORY[0x263F07CB0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_241C86A24()
{
  if (!qword_268D438E8)
  {
    sub_241CDB900();
    sub_241C86B90(&qword_26B034DD8, MEMORY[0x263F07CB0]);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D438E8);
    }
  }
}

void sub_241C86AC4()
{
  if (!qword_268D438F0)
  {
    sub_241C86A24();
    sub_241A313AC(255, &qword_26B0303B8);
    sub_241C86B90(&qword_268D438F8, (void (*)(uint64_t))sub_241C86A24);
    sub_241AAD6A4();
    unint64_t v0 = sub_241CDA4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D438F0);
    }
  }
}

uint64_t sub_241C86B90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C86BD8(uint64_t a1, uint64_t a2)
{
  sub_241A26100(0, &qword_26B0368D8, MEMORY[0x263F07CB0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241C86C6C(uint64_t a1, uint64_t a2)
{
  sub_241A26100(0, &qword_26B0368D8, MEMORY[0x263F07CB0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_241C86D00(uint64_t a1, uint64_t a2)
{
  sub_241A26100(0, &qword_26B0368D8, MEMORY[0x263F07CB0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_241C86D94@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v3 = *a1;
  uint64_t v4 = self;
  id result = objc_msgSend(v4, sel_sharedBehavior);
  if (result)
  {
    uint64_t v6 = result;
    char v7 = objc_msgSend(result, sel_isiPad);

    id result = (id)sub_241C88380(v3, v7, (char)objc_msgSend(v4, sel_hasPairedWatch));
    *a2 = (_BYTE)result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241C86E30@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a3;
  sub_241A36ADC(0);
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_241CD7650();
  uint64_t v56 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  id v58 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD7690();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v60 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_241CD7740();
  uint64_t v53 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v57 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CDA1A0();
  uint64_t v50 = *(void *)(v14 - 8);
  uint64_t v51 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29620(0);
  uint64_t v63 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v62 = (uint64_t)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v45 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v45 - v23;
  id v52 = (id)sub_241CD76E0();
  unint64_t v25 = sub_241A2AC88();
  uint64_t v54 = v26;
  unint64_t v55 = v25;
  sub_241C874DC(a2, (uint64_t)v24);
  sub_241CDA0F0();
  sub_241A2944C((uint64_t)v24, (uint64_t)v22);
  uint64_t v27 = sub_241CDA190();
  os_log_type_t v28 = sub_241CDB670();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v48 = v8;
    uint64_t v31 = v30;
    v65[0] = v30;
    *(_DWORD *)uint64_t v29 = 136446466;
    uint64_t v46 = v12;
    uint64_t v32 = sub_241CDC270();
    uint64_t v47 = a1;
    uint64_t v64 = sub_241A33FE4(v32, v33, v65);
    uint64_t v49 = v6;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2082;
    sub_241A2944C((uint64_t)v22, v62);
    uint64_t v34 = sub_241CDB120();
    uint64_t v64 = sub_241A33FE4(v34, v35, v65);
    a1 = v47;
    sub_241CDBBF0();
    uint64_t v12 = v46;
    swift_bridgeObjectRelease();
    sub_241A293F0((uint64_t)v22);
    _os_log_impl(&dword_241A23000, v27, v28, "%{public}s Creating generator with feed item %{public}s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v31, -1, -1);
    MEMORY[0x245637F20](v29, -1, -1);
  }
  else
  {
    sub_241A293F0((uint64_t)v22);
  }

  (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v51);
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v57, a1, v12);
  sub_241A29DB0(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v36 = sub_241CD73B0();
  uint64_t v37 = *(void *)(v36 - 8);
  unint64_t v38 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, void, uint64_t))(v37 + 104))(v39 + v38, *MEMORY[0x263F45580], v36);
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v58, *MEMORY[0x263F45688], v59);
  id v40 = v52;
  sub_241CD7670();
  sub_241A2944C((uint64_t)v24, v62);
  sub_241CDA5D0();
  uint64_t v41 = sub_241CD7800();
  uint64_t v42 = MEMORY[0x263F456B8];
  uint64_t v43 = v61;
  v61[3] = v41;
  v43[4] = v42;
  sub_241A25BC8(v43);
  sub_241A2C424((unint64_t *)&qword_26B02EA80, sub_241A36ADC);
  sub_241CD77E0();

  return sub_241A293F0((uint64_t)v24);
}

uint64_t sub_241C874DC@<X0>(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  int v3 = a1;
  uint64_t v4 = sub_241CD7FD0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_241CD8160();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3)
  {
    uint64_t v18 = v7;
    uint64_t v19 = v6;
    uint64_t v20 = a2;
    unint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    unint64_t v21 = 0xD000000000000011;
    unint64_t v22 = 0x8000000241CE4CB0;
    uint64_t v10 = (void *)sub_241CD76E0();
    sub_241CD73D0();

    sub_241CDB180();
    swift_bridgeObjectRelease();
    v17[2] = v21;
    if (v3 == 1)
    {
      if (qword_26B038428 == -1) {
        goto LABEL_9;
      }
    }
    else if (qword_26B038428 == -1)
    {
LABEL_9:
      v17[1] = sub_241CD69E0();
      sub_241A313AC(0, &qword_268D43908);
      swift_bridgeObjectRetain();
      sub_241CDBB20();
      sub_241CD7FC0();
      if (qword_26B038428 != -1) {
        swift_once();
      }
      sub_241CD69E0();
      sub_241CD69E0();
      sub_241CD8150();
      uint64_t v14 = (void *)sub_241CD76E0();
      if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0)
      {
        if (sub_241CDBF50()) {
          sub_241C87FB8(MEMORY[0x263F8EE78]);
        }
      }
      type metadata accessor for FitnessPromotionTileActionHandler();
      sub_241A2C424(&qword_268D43910, (void (*)(uint64_t))type metadata accessor for FitnessPromotionTileActionHandler);
      uint64_t v15 = v20;
      sub_241CD7430();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
      uint64_t v16 = sub_241CD75A0();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
    }
    swift_once();
    goto LABEL_9;
  }
  uint64_t v11 = sub_241CD75A0();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(a2, 1, 1, v11);
}

uint64_t sub_241C87A70()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries35SummariesPromotionGeneratorPipeline_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries35SummariesPromotionGeneratorPipeline_context;
  uint64_t v4 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241C87B74()
{
  return type metadata accessor for SummariesPromotionGeneratorPipeline();
}

uint64_t sub_241C87B7C()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241CD7740();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_241C87C64()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_241C87D10(unint64_t a1, unint64_t a2)
{
  sub_241A313AC(0, (unint64_t *)&qword_26B038440);
  if (a2 >> 62)
  {
    uint64_t v4 = sub_241CDBF60();
    self;
    if (swift_dynamicCastObjCClass()) {
      return v4;
    }
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      self;
      if (!swift_dynamicCastObjCClass()) {
        goto LABEL_10;
      }
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_241CDBE00();
  sub_241CDB180();
  sub_241CDC270();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_241CDC270();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  uint64_t result = sub_241CDBF20();
  __break(1u);
  return result;
}

uint64_t sub_241C87EFC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_241C87F0C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_241C86D94(a1, a2);
}

uint64_t sub_241C87F18@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD7740() - 8);
  return sub_241C86E30(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), *a1, a2);
}

void sub_241C87FB8(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_241C8830C();
      uint64_t v3 = sub_241CDBDE0();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_241CDBF50();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v42 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = sub_241C87D10(v8, a1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      uint64_t v12 = sub_241CDBB50();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        sub_241A313AC(0, (unint64_t *)&qword_26B038440);
        id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
        char v19 = sub_241CDBB60();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          uint64_t v5 = v42;
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_241CDBB60();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v42;
      }
      *(void *)(v7 + 8 * v15) = v17 | v16;
      *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
      uint64_t v23 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      *(void *)(v3 + 16) = v24;
LABEL_12:
      if (v8 == v5) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = a1 + 32;
  uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_241CDBB50();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_241A313AC(0, (unint64_t *)&qword_26B038440);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_241CDBB60();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_241CDBB60();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_39;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v42) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_241C8830C()
{
  if (!qword_26B034EC0)
  {
    sub_241A313AC(255, (unint64_t *)&qword_26B038440);
    sub_241AD5E58();
    unint64_t v0 = sub_241CDBDF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034EC0);
    }
  }
}

uint64_t sub_241C88380(unint64_t a1, char a2, char a3)
{
  if (a2) {
    return 0;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_241CDBF50();
    if (result) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_4:
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)MEMORY[0x245637160](0, a1);
      }
      else
      {
        if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        id v7 = *(id *)(a1 + 32);
      }
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      id v9 = objc_msgSend(v8, sel_activityMoveMode);
      if (v9 == (id)1)
      {
        if (!objc_msgSend(v8, sel__hasEnergyBurnedGoal))
        {
LABEL_10:
          unsigned int v10 = objc_msgSend(v8, sel__isStandalonePhoneSummary);

          if (v10) {
            return 1;
          }
          else {
            return 2;
          }
        }
      }
      else if (v9 == (id)2 && (objc_msgSend(v8, sel__hasAppleMoveMinutesGoal) & 1) == 0)
      {
        goto LABEL_10;
      }

      return 0;
    }
  }
  swift_bridgeObjectRelease();
  if (a3) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t sub_241C884C0()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

unsigned char *storeEnumTagSinglePayload for SummariesPromotionGeneratorPipeline.FitnessPromotionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241C88628);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummariesPromotionGeneratorPipeline.FitnessPromotionType()
{
  return &type metadata for SummariesPromotionGeneratorPipeline.FitnessPromotionType;
}

unint64_t sub_241C88664()
{
  unint64_t result = qword_268D43920;
  if (!qword_268D43920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43920);
  }
  return result;
}

void *sub_241C886B8(void *a1, uint64_t a2, uint64_t a3)
{
  sub_241C88A8C();
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(a1, sel_localization);
  unsigned int v10 = v9;
  uint64_t v11 = &selRef_displayNameForFitnessJr;
  if (a3 != 2) {
    uint64_t v11 = &selRef_titleEmbeddedDisplayName;
  }
  id v12 = [v9 *v11];

  uint64_t v13 = sub_241CDB0D0();
  uint64_t v15 = v14;

  v3[2] = v13;
  v3[3] = v15;
  v3[4] = sub_241C88E14(a1, a3);
  v3[5] = v16;
  id v17 = a1;
  sub_241CD8DE0();
  sub_241C88F1C((uint64_t)v8, (uint64_t)v3 + OBJC_IVAR____TtC9Summaries35ActivityDataTypeDescriptionProvider_attribution);
  sub_241CDA560();
  swift_allocObject();
  *(void *)((char *)v3 + OBJC_IVAR____TtC9Summaries35ActivityDataTypeDescriptionProvider_objectWillChange) = sub_241CDA550();
  *(void *)((char *)v3 + OBJC_IVAR____TtC9Summaries35ActivityDataTypeDescriptionProvider_displayType) = v17;
  return v3;
}

uint64_t sub_241C88818(uint64_t a1)
{
  int v3 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Summaries35ActivityDataTypeDescriptionProvider_displayType);
  id v4 = objc_msgSend(v3, sel_localization);
  uint64_t v5 = v4;
  uint64_t v6 = &selRef_displayNameForFitnessJr;
  if (a1 != 2) {
    uint64_t v6 = &selRef_titleEmbeddedDisplayName;
  }
  id v7 = [v4 *v6];

  uint64_t v8 = sub_241CDB0D0();
  uint64_t v10 = v9;

  v1[2] = v8;
  v1[3] = v10;
  swift_bridgeObjectRelease();
  v1[4] = sub_241C88E14(v3, a1);
  v1[5] = v11;
  swift_bridgeObjectRelease();
  return sub_241CDA540();
}

uint64_t sub_241C888EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241C88EC0(v0 + OBJC_IVAR____TtC9Summaries35ActivityDataTypeDescriptionProvider_attribution);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241C88980()
{
  return type metadata accessor for ActivityDataTypeDescriptionProvider();
}

uint64_t type metadata accessor for ActivityDataTypeDescriptionProvider()
{
  uint64_t result = qword_26B030930;
  if (!qword_26B030930) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241C889D4()
{
  sub_241C88A8C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_241C88A8C()
{
  if (!qword_26B0308B0)
  {
    sub_241CD8DF0();
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0308B0);
    }
  }
}

uint64_t sub_241C88AE4()
{
  return swift_retain();
}

uint64_t sub_241C88AF8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241C88B2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241C88B60@<X0>(uint64_t a1@<X8>)
{
  return sub_241C88DB0(*v1 + OBJC_IVAR____TtC9Summaries35ActivityDataTypeDescriptionProvider_attribution, a1);
}

uint64_t sub_241C88B78(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F33FF0](a1, WitnessTable);
}

uint64_t sub_241C88BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F33FF8](a1, a2, a3, WitnessTable);
}

void (*sub_241C88C38(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  swift_getWitnessTable();
  v2[4] = sub_241CD8C80();
  return sub_241C88CBC;
}

void sub_241C88CBC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_241C88D04()
{
  return sub_241C88D6C(&qword_26B030920);
}

uint64_t sub_241C88D38()
{
  return sub_241C88D6C((unint64_t *)&qword_26B030928);
}

uint64_t sub_241C88D6C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ActivityDataTypeDescriptionProvider();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C88DB0(uint64_t a1, uint64_t a2)
{
  sub_241C88A8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241C88E14(void *a1, uint64_t a2)
{
  id v3 = objc_msgSend(a1, sel_localization);
  uint64_t v4 = v3;
  if (a2 == 2) {
    id v5 = objc_msgSend(v3, sel_summaryForFitnessJr);
  }
  else {
    id v5 = objc_msgSend(v3, sel_summary);
  }
  id v6 = v5;

  if (!v6) {
    return 0;
  }
  uint64_t v7 = sub_241CDB0D0();

  return v7;
}

uint64_t sub_241C88EC0(uint64_t a1)
{
  sub_241C88A8C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241C88F1C(uint64_t a1, uint64_t a2)
{
  sub_241C88A8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241C88F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C8BAAC(v2 + *(int *)(a1 + 28), a2, &qword_26B038F10, MEMORY[0x263F062D0]);
}

uint64_t *sub_241C88FC0(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v32 = *v3;
  uint64_t v30 = sub_241CD7650();
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_241CD7690();
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  id v26 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v10 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v34 = inited;
  sub_241CDB2E0();
  char v11 = *(unsigned char *)(a2 + *(int *)(v10 + 36));
  sub_241A35C70(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v12 = sub_241CD73B0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  if (v11)
  {
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v16 + v15, *MEMORY[0x263F454D0], v12);
  }
  else
  {
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_241CEB720;
    unint64_t v18 = v16 + v15;
    uint64_t v19 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
    v19(v18, *MEMORY[0x263F45520], v12);
    v19(v18 + v14, *MEMORY[0x263F45538], v12);
  }
  id v17 = v26;
  sub_241C5D74C(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v20 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v20);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, *MEMORY[0x263F45690], v30);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries52SampleCountCurrentValueSummarySharableModelGenerator_domain, v8, v31);
  sub_241C8A948(a2, (uint64_t)v3 + OBJC_IVAR____TtC9Summaries52SampleCountCurrentValueSummarySharableModelGenerator_request);
  uint64_t v21 = sub_241C8A89C(&qword_26B02FB28, (void (*)(uint64_t))type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator);
  uint64_t v22 = v33;
  uint64_t v23 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v33, a2, v32, v21);
  sub_241C8A9AC(a2);
  uint64_t v24 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v22, v24);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC9Summaries52SampleCountCurrentValueSummarySharableModelGenerator_publisher) = v23;
  return v3;
}

uint64_t sub_241C89484@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_241C89490()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries52SampleCountCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_241C8A9AC(v0 + OBJC_IVAR____TtC9Summaries52SampleCountCurrentValueSummarySharableModelGenerator_request);

  return swift_deallocClassInstance();
}

uint64_t sub_241C89550()
{
  return type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B038C00);
}

uint64_t sub_241C89578()
{
  uint64_t result = sub_241CD7690();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B038B50);
}

void *sub_241C89670(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD9D80();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_241CD6810();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_241A35C70(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (void *)((char *)a1 + v19);
    uint64_t v22 = (void *)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241C898B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD9D80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_241CD6810();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_241C899F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_241A35C70(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241C89BEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_241A35C70(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_241C89E60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_241A35C70(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  return a1;
}

uint64_t sub_241C8A048(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_241A35C70(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_241C8A2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C8A2BC);
}

uint64_t sub_241C8A2BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9D80();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD77C0();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_241A35C70(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[8] + 8);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_241C8A450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C8A464);
}

void sub_241C8A464(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_241CD9D80();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_241CD77C0();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      sub_241A35C70(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[8] + 8) = (a2 - 1);
        return;
      }
      uint64_t v10 = v16;
      uint64_t v14 = *(void *)(v16 - 8);
      uint64_t v15 = a4[7];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

void sub_241C8A5F4()
{
  sub_241CD9D80();
  if (v0 <= 0x3F)
  {
    sub_241CD77C0();
    if (v1 <= 0x3F)
    {
      sub_241A35C70(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

_UNKNOWN **sub_241C8A73C()
{
  return &off_26F5C7A90;
}

uint64_t sub_241C8A748(uint64_t a1)
{
  uint64_t result = sub_241C8A89C(&qword_26B038BF0, (void (*)(uint64_t))type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241C8A7A0()
{
  return &off_26F5C7AD8;
}

uint64_t sub_241C8A7AC()
{
  return swift_retain();
}

uint64_t sub_241C8A7C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries52SampleCountCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

id sub_241C8A83C(uint64_t *a1, uint64_t a2, void *a3)
{
  return sub_241C8B198(*a1, a2, a3);
}

uint64_t sub_241C8A844(uint64_t a1)
{
  uint64_t result = sub_241C8A89C(&qword_26B038BF8, (void (*)(uint64_t))type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241C8A89C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_241C8A8E4()
{
  return &off_26F5C7AF0;
}

uint64_t sub_241C8A8F0(uint64_t a1)
{
  uint64_t result = sub_241C8A89C(&qword_26B034428, (void (*)(uint64_t))type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241C8A948(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241C8A9AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241C8AA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a2;
  uint64_t v4 = sub_241CD7650();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  MEMORY[0x270FA5388](v4);
  id v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD7690();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CDB510();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C8BB9C();
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v51 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = self;
  uint64_t v14 = (void *)sub_241CD6790();
  id v15 = objc_msgSend(v13, sel_predicateForSamplesWithinDateInterval_options_, v14, 0);

  sub_241CD76B0();
  sub_241A311E0(v55, v55[3]);
  uint64_t v16 = (void *)sub_241CD75B0();
  sub_241A33460();
  uint64_t v17 = swift_allocObject();
  long long v39 = xmmword_241CEB710;
  *(_OWORD *)(v17 + 16) = xmmword_241CEB710;
  uint64_t v18 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  *(void *)(v17 + 32) = sub_241CD7770();
  uint64_t v54 = v17;
  sub_241CDB2E0();
  id v19 = v15;
  uint64_t v41 = v10;
  sub_241CDB570();

  swift_bridgeObjectRelease();
  id v43 = v19;

  sub_241A31190((uint64_t)v55);
  sub_241CD7730();
  uint64_t v20 = (void *)sub_241CD76E0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v39;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v54 = inited;
  sub_241CDB2E0();
  LOBYTE(v18) = *(unsigned char *)(a3 + *(int *)(v18 + 36));
  sub_241A35C70(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v22 = sub_241CD73B0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 72);
  unint64_t v25 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  if (v18)
  {
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v26 + v25, *MEMORY[0x263F454D0], v22);
  }
  else
  {
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_241CEB720;
    unint64_t v28 = v26 + v25;
    uint64_t v29 = *(void (**)(unint64_t, void, uint64_t))(v23 + 104);
    v29(v28, *MEMORY[0x263F45520], v22);
    v29(v28 + v24, *MEMORY[0x263F45538], v22);
  }
  id v27 = v20;
  sub_241C5D74C(v26);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v30 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v30);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v45 + 104))(v44, *MEMORY[0x263F45690], v46);
  uint64_t v31 = v42;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241C8A89C(&qword_26B034D40, MEMORY[0x263F44AC8]);
  uint64_t v32 = v48;
  uint64_t v33 = v41;
  uint64_t v34 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v50);
  sub_241A31190((uint64_t)v55);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v32);
  v55[0] = v34;
  sub_241C8BC78();
  sub_241A35C70(0, &qword_26B032CB0, (uint64_t (*)(uint64_t))sub_241C70A50, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_241C8A89C(&qword_26B02EA10, (void (*)(uint64_t))sub_241C8BC78);
  uint64_t v35 = v51;
  sub_241CDA710();
  swift_release();
  sub_241C8A89C(&qword_26B02E938, (void (*)(uint64_t))sub_241C8BB9C);
  uint64_t v36 = v53;
  uint64_t v37 = sub_241CDA6D0();

  (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v36);
  return v37;
}

id sub_241C8B198(uint64_t a1, uint64_t a2, void *a3)
{
  id v67 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35C70(0, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v60 - v10;
  sub_241A35C70(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v5);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v69 = (char *)&v60 - v13;
  uint64_t v14 = sub_241CD9970();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v66 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35C70(0, &qword_26B038F10, MEMORY[0x263F062D0], v5);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v65 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v60 - v20;
  sub_241A35C70(0, &qword_26B0385B8, MEMORY[0x263F07490], v5);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v60 - v23;
  uint64_t v25 = sub_241CD6D00();
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  unint64_t v28 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  if (!a1) {
    goto LABEL_10;
  }
  uint64_t v62 = (char *)&v60 - v30;
  uint64_t v63 = v31;
  uint64_t v64 = v29;
  uint64_t v68 = v14;
  type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v61 = a2;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_241CD7770();
  uint64_t v33 = (void *)v32;
  if (!*(void *)(a1 + 16) || (unint64_t v34 = sub_241C0B1DC(v32), (v35 & 1) == 0))
  {

    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v14 = v68;
LABEL_10:
    sub_241CD7A80();
    uint64_t v41 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v11, 0, 1, v41);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v42 = (uint64_t)v69;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v69, 1, 1, v14);
    id v43 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    sub_241C8BAAC((uint64_t)v11, (uint64_t)v9, &qword_26B032050, MEMORY[0x263F45780]);
    id v44 = sub_241A53EB0(0, 0xF000000000000000, 11, v42, (uint64_t)v9, 0, 0);
    sub_241C8BB2C((uint64_t)v11, &qword_26B032050, v43);
    return v44;
  }
  uint64_t v36 = *(void *)(*(void *)(a1 + 56) + 8 * v34);

  swift_bridgeObjectRelease();
  sub_241C8BAAC((uint64_t)v67, (uint64_t)v21, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v37 = sub_241CD6810();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v21, 1, v37) == 1)
  {
    sub_241C8BB2C((uint64_t)v21, &qword_26B038F10, MEMORY[0x263F062D0]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v24, 1, 1, v64);
LABEL_8:
    sub_241C8BB2C((uint64_t)v24, &qword_26B0385B8, MEMORY[0x263F07490]);
    goto LABEL_9;
  }
  sub_241CD67B0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v37);
  uint64_t v40 = v63;
  uint64_t v39 = v64;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v24, 0, 1, v64);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v24, 1, v39) == 1) {
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v62, v24, v39);
  if (v36 < 1)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v62, v39);
    goto LABEL_9;
  }
  uint64_t v46 = v39;
  id v47 = objc_msgSend(self, sel_countUnit);
  uint64_t v60 = v36;
  id v48 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v47, (double)v36);

  sub_241A313AC(0, &qword_26B034E30);
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v28, v62, v46);
  id v67 = v48;
  uint64_t v49 = (char *)HKCodableSummaryQuantityValue.init(quantity:date:)(v67, (uint64_t)v28);
  uint64_t v50 = sub_241CD9D80();
  uint64_t v51 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v66, v61, v50);
  uint64_t v52 = v68;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v51, *MEMORY[0x263F46C38], v68);
  sub_241A313AC(0, &qword_26B034E48);
  id v53 = v65;
  sub_241CD6770();
  (*(void (**)(id, void, uint64_t, uint64_t))(v38 + 56))(v53, 0, 1, v37);
  id v54 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v53, v60, 0);
  uint64_t v65 = v49;
  id result = objc_msgSend(v49, sel_data);
  if (result)
  {
    unint64_t v55 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v56 = sub_241CD6AE0();
    unint64_t v58 = v57;

    uint64_t v59 = (uint64_t)v69;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v69, v51, v52);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v59, 0, 1, v52);
    uint64_t v71 = 0;
    memset(v70, 0, sizeof(v70));
    id v44 = sub_241A54648(v56, v58, 14, v59, (uint64_t)v54, 0, (uint64_t)v70);

    sub_241A37374(v56, v58);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v51, v52);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v62, v64);
    return v44;
  }
  __break(1u);
  return result;
}

uint64_t sub_241C8BAAC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A35C70(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241C8BB2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A35C70(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241C8BB9C()
{
  if (!qword_26B0323A0)
  {
    sub_241C8BC78();
    sub_241A35C70(255, &qword_26B032CB0, (uint64_t (*)(uint64_t))sub_241C70A50, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241C8A89C(&qword_26B02EA10, (void (*)(uint64_t))sub_241C8BC78);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0323A0);
    }
  }
}

void sub_241C8BC78()
{
  if (!qword_26B0326F0)
  {
    sub_241C70A50();
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0326F0);
    }
  }
}

uint64_t type metadata accessor for TrendsAdvertisableFeatureSourceProvider()
{
  return self;
}

uint64_t sub_241C8BD0C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TrendsAdvertisableFeatureSourceProvider();
  uint64_t result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t sub_241C8BD44()
{
  sub_241CD8200();
  id v0 = objc_msgSend(self, sel_defaultCenter);
  sub_241A78694();
  sub_241CDB6D0();
  id v1 = objc_allocWithZone((Class)sub_241CD9190());
  uint64_t v2 = (void *)sub_241CD9150();
  sub_241C8BE50();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_241CEB730;
  id v4 = v2;
  uint64_t v5 = sub_241CD8210();
  type metadata accessor for TrendsNotificationAdvertisableFeatureSource();
  uint64_t v6 = (void *)swift_allocObject();
  v6[7] = 0;
  v6[4] = 0;
  v6[5] = 0;
  swift_unknownObjectWeakInit();
  v6[2] = v4;
  v6[3] = v5;
  unint64_t v7 = sub_241C8BEFC();
  *(void *)(v3 + 32) = v6;
  *(void *)(v3 + 40) = v7;

  return v3;
}

void sub_241C8BE50()
{
  if (!qword_268D43928)
  {
    sub_241C8BEA8();
    unint64_t v0 = sub_241CDC0E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43928);
    }
  }
}

unint64_t sub_241C8BEA8()
{
  unint64_t result = qword_268D43930;
  if (!qword_268D43930)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D43930);
  }
  return result;
}

unint64_t sub_241C8BEFC()
{
  unint64_t result = qword_268D43938;
  if (!qword_268D43938)
  {
    type metadata accessor for TrendsNotificationAdvertisableFeatureSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43938);
  }
  return result;
}

uint64_t sub_241C8BF54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v75 = a1;
  uint64_t v3 = sub_241CDA990();
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  MEMORY[0x270FA5388](v3);
  id v72 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CDA900();
  uint64_t v64 = *(void *)(v5 - 8);
  uint64_t v65 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v63 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SnidgetMultiValueLevelChartView.Specs(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BA1754();
  uint64_t v11 = v10;
  uint64_t v56 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BA16A0();
  uint64_t v57 = v14;
  uint64_t v58 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BA15B4();
  uint64_t v61 = *(void *)(v17 - 8);
  uint64_t v62 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C915AC();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v59 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = (uint64_t (*)(uint64_t))MEMORY[0x263F18DD8];
  sub_241C916AC(0, &qword_268D43940, (void (*)(uint64_t))sub_241C915AC, &qword_26B0308D0, MEMORY[0x263F18DD8]);
  uint64_t v23 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v56 - v24;
  sub_241C9160C();
  MEMORY[0x270FA5388](v26 - 8);
  id v66 = (char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C916AC(0, &qword_268D43950, (void (*)(uint64_t))sub_241C9160C, &qword_26B0308E0, MEMORY[0x263F191A0]);
  uint64_t v68 = v28;
  MEMORY[0x270FA5388](v28);
  unint64_t v69 = (char *)&v56 - v29;
  sub_241C917A8();
  uint64_t v70 = *(void *)(v30 - 8);
  uint64_t v71 = v30;
  MEMORY[0x270FA5388](v30);
  id v67 = (char *)&v56 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = v1;
  sub_241BA17B8();
  sub_241BA1F80();
  sub_241CDA2F0();
  uint64_t v32 = sub_241C950CC(&qword_268D43040, (void (*)(uint64_t))sub_241BA1754);
  sub_241CDAB80();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v11);
  uint64_t v77 = v11;
  unint64_t v78 = v32;
  uint64_t v33 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v34 = v57;
  sub_241CDAB90();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v34);
  type metadata accessor for SnidgetMultiValueLevelChartView(0);
  sub_241C8FBFC((uint64_t)v9);
  sub_241C91D58((uint64_t)v9, type metadata accessor for SnidgetMultiValueLevelChartView.Specs);
  sub_241C8FBFC((uint64_t)v9);
  sub_241C91D58((uint64_t)v9, type metadata accessor for SnidgetMultiValueLevelChartView.Specs);
  sub_241CDADB0();
  uint64_t v35 = v59;
  __n128 v36 = sub_241B9A838(0.0, 1, 0.0, 1, 80.0, 0, 0.0, 1, v59, 0.0, 1, 50.0, 0);
  (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v19, v62, v36);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v38 = v63;
  uint64_t v39 = v64;
  uint64_t v40 = v65;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v63, *MEMORY[0x263F18DC8], v65);
  uint64_t v41 = (uint64_t *)&v25[*(int *)(v33 + 36)];
  sub_241C91744(0, &qword_26B0308D0, v60, MEMORY[0x263F1A418]);
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))((char *)v41 + *(int *)(v42 + 28), v38, v40);
  *uint64_t v41 = KeyPath;
  sub_241C91FC8(v35, (uint64_t)v25, (uint64_t (*)(void))sub_241C915AC);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v40);
  sub_241C91D58(v35, (uint64_t (*)(void))sub_241C915AC);
  uint64_t v77 = 0;
  unint64_t v78 = 0xE000000000000000;
  sub_241CDBE00();
  uint64_t v65 = v2;
  if (*(void *)(v2 + 24))
  {
    swift_retain();
    sub_241CD85B0();
    uint64_t v44 = v43;
    swift_release();
    if (!v44) {
      sub_241CDB0D0();
    }
    uint64_t v46 = v73;
    uint64_t v45 = v74;
    id v47 = v72;
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    sub_241C91A78();
    uint64_t v48 = (uint64_t)v66;
    sub_241CDABE0();
    swift_bridgeObjectRelease();
    sub_241C91DC0((uint64_t)v25, &qword_268D43940, (void (*)(uint64_t))sub_241C915AC, &qword_26B0308D0, MEMORY[0x263F18DD8]);
    sub_241CDA980();
    uint64_t v49 = swift_getKeyPath();
    uint64_t v50 = (uint64_t)v69;
    uint64_t v51 = (uint64_t *)&v69[*(int *)(v68 + 36)];
    uint64_t v52 = (uint64_t (*)(uint64_t))MEMORY[0x263F191A0];
    sub_241C91744(0, &qword_26B0308E0, MEMORY[0x263F191A0], MEMORY[0x263F1A418]);
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))((char *)v51 + *(int *)(v53 + 28), v47, v45);
    *uint64_t v51 = v49;
    sub_241C91FC8(v48, v50, (uint64_t (*)(void))sub_241C9160C);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v45);
    sub_241C91D58(v48, (uint64_t (*)(void))sub_241C9160C);
    uint64_t v77 = *(void *)(v65 + 8);
    swift_bridgeObjectRetain();
    sub_241CDADC0();
    sub_241C91884();
    sub_241C91900();
    sub_241C91CBC();
    id v54 = v67;
    sub_241CDAB70();
    swift_bridgeObjectRelease();
    swift_release();
    sub_241C91DC0(v50, &qword_268D43950, (void (*)(uint64_t))sub_241C9160C, &qword_26B0308E0, v52);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v70 + 32))(v75, v54, v71);
  }
  else
  {
    sub_241CD85C0();
    sub_241C950CC(&qword_26B030970, MEMORY[0x263F43F10]);
    uint64_t result = sub_241CDA9B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_241C8CA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  sub_241C91F20();
  uint64_t v59 = v3 - 8;
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v58 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C914E4(0, &qword_268D42FF8, (void (*)(uint64_t))sub_241BA1C84);
  uint64_t v57 = v5;
  uint64_t v64 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v62 = (char *)v49 - v8;
  uint64_t v9 = type metadata accessor for SnidgetMultiValueLevelChartView(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C914E4(0, &qword_268D42FC8, (void (*)(uint64_t))sub_241BA18B4);
  uint64_t v55 = v13;
  uint64_t v63 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v61 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v49 - v16;
  uint64_t v50 = a1;
  uint64_t v18 = *(void *)(*(void *)(a1 + 16) + 16);
  uint64_t v69 = 0;
  uint64_t v70 = v18;
  v49[1] = swift_getKeyPath();
  id v54 = type metadata accessor for SnidgetMultiValueLevelChartView;
  sub_241C91FC8(a1, (uint64_t)v12, type metadata accessor for SnidgetMultiValueLevelChartView);
  uint64_t v19 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = (v19 + 16) & ~v19;
  uint64_t v52 = v19 | 7;
  uint64_t v53 = v20 + v11;
  uint64_t v21 = swift_allocObject();
  uint64_t v51 = type metadata accessor for SnidgetMultiValueLevelChartView;
  sub_241C91EB8((uint64_t)v12, v21 + v20, type metadata accessor for SnidgetMultiValueLevelChartView);
  sub_241C94F88(0, (unint64_t *)&qword_268D42F08, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6E0], MEMORY[0x263F8D870]);
  sub_241BA18B4();
  sub_241BA1AC4();
  sub_241BA19D4();
  uint64_t v23 = v22;
  uint64_t v24 = MEMORY[0x263EFCC18];
  sub_241BA1EFC(255, &qword_268D42FE0, MEMORY[0x263EFCC20]);
  uint64_t v26 = v25;
  uint64_t v65 = sub_241CDA2D0();
  uint64_t v66 = v24;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = v26;
  uint64_t v66 = MEMORY[0x263F1B440];
  uint64_t v67 = OpaqueTypeConformance2;
  uint64_t v68 = MEMORY[0x263F1B420];
  uint64_t v28 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = v23;
  uint64_t v66 = v28;
  swift_getOpaqueTypeConformance2();
  v49[0] = v17;
  sub_241CDAD70();
  uint64_t v29 = v50;
  uint64_t v30 = *(void *)(*(void *)(v50 + 8) + 16);
  uint64_t v65 = 0;
  uint64_t v66 = v30;
  swift_getKeyPath();
  sub_241C91FC8(v29, (uint64_t)v12, v54);
  uint64_t v31 = swift_allocObject();
  sub_241C91EB8((uint64_t)v12, v31 + v20, v51);
  sub_241BA1C84();
  sub_241BA21E4();
  uint64_t v32 = v62;
  sub_241CDAD70();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  uint64_t v34 = v61;
  uint64_t v35 = v17;
  uint64_t v36 = v55;
  v33(v61, v35, v55);
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  uint64_t v38 = v56;
  uint64_t v39 = v57;
  v37(v56, v32, v57);
  sub_241BA2000();
  uint64_t v40 = v58;
  v33(v58, v34, v36);
  sub_241BA2158();
  uint64_t v41 = v59;
  uint64_t v42 = &v40[*(int *)(v59 + 56)];
  v37(v42, v38, v39);
  uint64_t v43 = v63;
  uint64_t v44 = v60;
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v60, v40, v36);
  uint64_t v45 = v64;
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v44 + *(int *)(v41 + 56), v42, v39);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v45 + 8);
  v46(v62, v39);
  id v47 = *(uint64_t (**)(char *, uint64_t))(v43 + 8);
  v47((char *)v49[0], v36);
  v46(v38, v39);
  return v47(v61, v36);
}

uint64_t sub_241C8D098@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0) - 8;
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (double *)((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v11 = *a1;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = *(void *)(a2 + 16);
    if (v11 < *(void *)(v12 + 16))
    {
      sub_241C91FC8(v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v11, (uint64_t)v10, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      sub_241C8D1B8(v10, a3);
      return sub_241C91D58((uint64_t)v10, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_241C8D1B8@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v109 = a2;
  uint64_t v4 = sub_241CDAA90();
  uint64_t v107 = *(void *)(v4 - 8);
  uint64_t v108 = v4;
  MEMORY[0x270FA5388](v4);
  id v106 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD7FF0();
  uint64_t v103 = *(void *)(v6 - 8);
  uint64_t v104 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v102 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SnidgetMultiValueLevelChartView.Specs(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v105 = (uint64_t)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v112 = (uint64_t)&v84 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v84 - v13;
  uint64_t v15 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263EFCC50];
  sub_241C94F88(0, &qword_268D439A0, MEMORY[0x263F8D538], MEMORY[0x263EFCE78], MEMORY[0x263EFCC50]);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  os_log_t v91 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  v111 = (char *)&v84 - v19;
  sub_241C94F88(0, &qword_268D439B0, MEMORY[0x263F8D6C8], MEMORY[0x263EFCE88], v15);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v84 - v24;
  *(double *)&uint64_t v93 = COERCE_DOUBLE(sub_241CDA2D0());
  uint64_t v90 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v89 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BA1EFC(0, &qword_268D42FE0, MEMORY[0x263EFCC20]);
  double v98 = v27;
  uint64_t v94 = *(void *)(*(void *)&v27 - 8);
  MEMORY[0x270FA5388](*(void *)&v27);
  v92 = (char *)&v84 - v28;
  sub_241BA19D4();
  uint64_t v100 = *(void *)(v29 - 8);
  uint64_t v101 = v29;
  MEMORY[0x270FA5388](v29);
  id v97 = (char *)&v84 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BA18B4();
  uint64_t v99 = v31;
  uint64_t v96 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  v95 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDAA80();
  double v114 = 0.0;
  uint64_t v87 = v25;
  sub_241CDA2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241CDAA80();
  double v114 = *(double *)(v2[1] + 16);
  id v88 = v23;
  sub_241CDA2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_241CDAA80();
  int v85 = v34;
  double v35 = *a1;
  uint64_t v36 = *v2;
  uint64_t v37 = v2[2];
  uint64_t v38 = *(int *)(type metadata accessor for SnidgetMultiValueLevelChartView(0) + 24);
  uint64_t v110 = v2;
  uint64_t v39 = (char *)v2 + v38;
  unint64_t v86 = v14;
  sub_241C8FBFC((uint64_t)v14);
  uint64_t v40 = *(void *)(v36 + 16);
  uint64_t v41 = (double *)&unk_241CF3000;
  id v113 = v39;
  if (v40)
  {
    uint64_t v84 = v33;
    uint64_t v42 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
    uint64_t v43 = (unint64_t *)(v36
                             + ((*(unsigned __int8 *)(*(void *)(v42 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v42 - 8) + 80)));
    double v44 = a1[1];
    uint64_t v45 = *(void *)(*(void *)(v42 - 8) + 72);
    swift_bridgeObjectRetain();
    uint64_t v48 = 0;
    while (1)
    {
      v47.n128_u64[0] = v43[1];
      if (*(double *)v43 == v35 && v47.n128_f64[0] == v44)
      {
        v46.n128_u64[0] = *v43;
        if ((MEMORY[0x2456332B0]((char *)v43 + *(int *)(v42 + 20), (char *)a1 + *(int *)(v42 + 20), v46, v47) & 1) != 0
          && *((unsigned __int8 *)v43 + *(int *)(v42 + 24)) == *((unsigned __int8 *)a1 + *(int *)(v42 + 24)))
        {
          break;
        }
      }
      ++v48;
      uint64_t v43 = (unint64_t *)((char *)v43 + v45);
      if (v40 == v48)
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = (double *)&unk_241CF3000;
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v41 = (double *)&unk_241CF3000;
    if (v48) {
      goto LABEL_14;
    }
    double v50 = 0.0;
  }
  else
  {
LABEL_14:
    double v50 = sub_241C922BC(v37) * v41[187];
  }
  sub_241C91D58((uint64_t)v86, type metadata accessor for SnidgetMultiValueLevelChartView.Specs);
  double v114 = v35 + v50;
  sub_241CDA2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v86 = (char *)sub_241CDAA80();
  int v52 = v51;
  double v53 = a1[1];
  id v54 = v110;
  uint64_t v55 = *v110;
  uint64_t v56 = v110[2];
  sub_241C8FBFC(v112);
  uint64_t v57 = *(void *)(v55 + 16);
  if (v57)
  {
    int v85 = v52;
    uint64_t v58 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
    unint64_t v59 = (*(unsigned __int8 *)(*(void *)(v58 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v58 - 8) + 80);
    double v60 = *a1;
    uint64_t v61 = *(void *)(*(void *)(v58 - 8) + 72);
    swift_bridgeObjectRetain();
    uint64_t v62 = 0;
    while (1)
    {
      BOOL v63 = *(double *)(v55 + v59) == v60 && *(double *)(v55 + v59 + 8) == v53;
      if (v63
        && (MEMORY[0x2456332B0](v55 + v59 + *(int *)(v58 + 20), (char *)a1 + *(int *)(v58 + 20)) & 1) != 0
        && *(unsigned __int8 *)(v55 + *(int *)(v58 + 24) + v59) == *((unsigned __int8 *)a1 + *(int *)(v58 + 24)))
      {
        break;
      }
      ++v62;
      v59 += v61;
      if (v57 == v62)
      {
        swift_bridgeObjectRelease();
        id v54 = v110;
        uint64_t v41 = (double *)&unk_241CF3000;
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRelease();
    double v64 = 0.0;
    id v54 = v110;
    uint64_t v41 = (double *)&unk_241CF3000;
    if (*(void *)(v55 + 16) - 1 != v62) {
      goto LABEL_28;
    }
  }
  else
  {
LABEL_28:
    double v64 = sub_241C922BC(v56) * v41[187];
  }
  sub_241C91D58(v112, type metadata accessor for SnidgetMultiValueLevelChartView.Specs);
  double v114 = v53 - v64;
  sub_241CDA2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v65 = v89;
  sub_241CDA2C0();
  uint64_t v66 = v54[1];
  uint64_t v67 = v105;
  sub_241C8FBFC(v105);
  sub_241C92354(a1, v67, v66);
  sub_241C91D58(v67, type metadata accessor for SnidgetMultiValueLevelChartView.Specs);
  uint64_t v68 = MEMORY[0x263EFCC18];
  uint64_t v69 = v92;
  double v70 = *(double *)&v93;
  sub_241CDA2B0();
  (*(void (**)(char *, double))(v90 + 8))(v65, COERCE_DOUBLE(*(void *)&v70));
  if (v54[3])
  {
    uint64_t v71 = v54[1];
    swift_retain();
    sub_241CD8580();
    swift_release();
    uint64_t v72 = (uint64_t)v102;
    sub_241CD7FE0();
    sub_241C8FBFC(v67);
    uint64_t v73 = sub_241C92688(a1, v72, v67, v71);
    sub_241C91D58(v67, type metadata accessor for SnidgetMultiValueLevelChartView.Specs);
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v72, v104);
    uint64_t v118 = v73;
    double v114 = v70;
    uint64_t v115 = v68;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v75 = MEMORY[0x263F1B440];
    uint64_t v76 = v97;
    double v77 = v98;
    sub_241CDA2A0();
    swift_release();
    (*(void (**)(char *, double))(v94 + 8))(v69, COERCE_DOUBLE(*(void *)&v77));
    sub_241C8FBFC(v67);
    sub_241C91D58(v67, type metadata accessor for SnidgetMultiValueLevelChartView.Specs);
    os_log_type_t v79 = v106;
    uint64_t v78 = v107;
    uint64_t v80 = v108;
    (*(void (**)(char *, void, uint64_t))(v107 + 104))(v106, *MEMORY[0x263F19860], v108);
    double v114 = v77;
    uint64_t v115 = v75;
    uint64_t v116 = OpaqueTypeConformance2;
    uint64_t v117 = MEMORY[0x263F1B420];
    swift_getOpaqueTypeConformance2();
    uint64_t v81 = v95;
    uint64_t v82 = v101;
    sub_241CDA290();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v76, v82);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v96 + 32))(v109, v81, v99);
  }
  else
  {
    sub_241CD85C0();
    sub_241C950CC(&qword_26B030970, MEMORY[0x263F43F10]);
    uint64_t result = sub_241CDA9B0();
    __break(1u);
  }
  return result;
}

unint64_t *sub_241C8DEBC@<X0>(unint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (v3 < *(void *)(v4 + 16)) {
      return (unint64_t *)sub_241C8DF0C(*(void *)(v4 + 16 * v3 + 32), *(unsigned char *)(v4 + 16 * v3 + 40), v3, a3);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_241C8DF0C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v117 = a4;
  sub_241C92258();
  uint64_t v116 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v115 = &v94[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v113 = sub_241CDA870();
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  v111 = &v94[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for SnidgetMultiValueLevelChartView.Specs(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  double v114 = &v94[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  v124 = &v94[-v13];
  uint64_t v101 = (void *)sub_241CD7FF0();
  uint64_t v100 = (void (**)(uint64_t, void *))*(v101 - 1);
  MEMORY[0x270FA5388](v101);
  uint64_t v99 = &v94[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241C94F88(0, &qword_268D439A0, MEMORY[0x263F8D538], MEMORY[0x263EFCE78], MEMORY[0x263EFCC50]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v107 = &v94[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v105 = &v94[-v19];
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  MEMORY[0x270FA5388](v20);
  *(double *)&uint64_t v118 = COERCE_DOUBLE(sub_241CDA320());
  uint64_t v125 = *(void *)(v118 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v118);
  uint64_t v103 = &v94[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = &v94[-v23];
  sub_241BA1EFC(0, &qword_268D43018, MEMORY[0x263EFCD90]);
  double v121 = v25;
  uint64_t v128 = *(void *)(*(void *)&v25 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](*(void *)&v25);
  id v106 = &v94[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = &v94[-v28];
  sub_241BA1E0C();
  uint64_t v109 = v30;
  uint64_t v127 = *(void *)(v30 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v108 = &v94[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v31);
  int v34 = &v94[-v33];
  sub_241BA1CEC();
  uint64_t v120 = v35;
  uint64_t v122 = *(void *)(v35 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v110 = &v94[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  id v123 = &v94[-v39];
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v104 = &v94[-v41];
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v119 = &v94[-v43];
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  double v98 = &v94[-v45];
  MEMORY[0x270FA5388](v44);
  os_log_t v126 = &v94[-v46];
  sub_241CDAA80();
  double v47 = (double)a3 + 0.5;
  double v129 = v47;
  sub_241CDA2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241CDAA80();
  char v48 = a2;
  if (a2) {
    double v129 = 0.0;
  }
  else {
    double v129 = *(double *)&a1;
  }
  sub_241CDA2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241CDA310();
  uint64_t v49 = MEMORY[0x263EFCD88];
  double v50 = *(double *)&v118;
  sub_241CDA2B0();
  int v51 = *(void (**)(unsigned char *, uint64_t))(v125 + 8);
  v125 += 8;
  id v97 = v51;
  v51(v24, *(void *)&v50);
  if (*(void *)(v102 + 24))
  {
    int v52 = v48 & 1;
    int v95 = v52;
    uint64_t v53 = *(void *)(v102 + 16);
    swift_retain();
    sub_241CD8580();
    swift_release();
    uint64_t v54 = (uint64_t)v99;
    sub_241CD7FE0();
    uint64_t v55 = sub_241C929F0(a1, v52, v54, v53);
    v100[1](v54, v101);
    uint64_t v133 = v55;
    double v129 = v50;
    uint64_t v130 = v49;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v57 = MEMORY[0x263F1B440];
    uint64_t v58 = MEMORY[0x263F1B420];
    double v59 = v121;
    sub_241CDA2A0();
    swift_release();
    double v60 = *(void (***)(uint64_t, void *))(v128 + 8);
    v128 += 8;
    uint64_t v100 = v60;
    ((void (*)(unsigned char *, void))v60)(v29, *(void *)&v59);
    type metadata accessor for SnidgetMultiValueLevelChartView(0);
    uint64_t v61 = v124;
    sub_241C8FBFC((uint64_t)v124);
    sub_241C91D58((uint64_t)v61, type metadata accessor for SnidgetMultiValueLevelChartView.Specs);
    double v129 = v59;
    uint64_t v130 = v57;
    uint64_t v131 = OpaqueTypeConformance2;
    uint64_t v132 = v58;
    uint64_t v62 = swift_getOpaqueTypeConformance2();
    BOOL v63 = v98;
    uint64_t v64 = v109;
    uint64_t v99 = (unsigned char *)v62;
    sub_241CDA280();
    uint64_t v65 = *(void (**)(unsigned char *, uint64_t))(v127 + 8);
    v127 += 8;
    uint64_t v96 = v65;
    v65(v34, v64);
    uint64_t v66 = *(void **)(v122 + 32);
    uint64_t v102 = v122 + 32;
    uint64_t v101 = v66;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v66)(v126, v63, v120);
    sub_241CDAA80();
    double v129 = v47;
    sub_241CDA2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_241CDAA80();
    if (v95) {
      double v129 = 0.0;
    }
    else {
      double v129 = *(double *)&a1;
    }
    sub_241CDA2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v67 = v103;
    sub_241CDA310();
    uint64_t v68 = v106;
    uint64_t v69 = v118;
    sub_241CDA2B0();
    v97(v67, v69);
    double v70 = v114;
    sub_241C8FBFC((uint64_t)v114);
    uint64_t v71 = v112;
    uint64_t v72 = v111;
    uint64_t v73 = v113;
    (*(void (**)(unsigned char *, void, uint64_t))(v112 + 104))(v111, *MEMORY[0x263F18508], v113);
    LOBYTE(v69) = sub_241CDA860();
    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v72, v73);
    uint64_t v74 = self;
    uint64_t v75 = &selRef_systemBackgroundColor;
    if ((v69 & 1) == 0) {
      uint64_t v75 = &selRef_secondarySystemGroupedBackgroundColor;
    }
    *(double *)&uint64_t v76 = COERCE_DOUBLE(MEMORY[0x245635FB0]([v74 *v75]));
    sub_241C91D58((uint64_t)v70, type metadata accessor for SnidgetMultiValueLevelChartView.Specs);
    double v129 = *(double *)&v76;
    double v77 = v108;
    double v78 = v121;
    sub_241CDA2A0();
    swift_release();
    ((void (*)(unsigned char *, void))v100)(v68, *(void *)&v78);
    os_log_type_t v79 = v124;
    sub_241C8FBFC((uint64_t)v124);
    sub_241C91D58((uint64_t)v79, type metadata accessor for SnidgetMultiValueLevelChartView.Specs);
    uint64_t v80 = v104;
    sub_241CDA280();
    v96(v77, v64);
    uint64_t v81 = v119;
    uint64_t v82 = v120;
    id v83 = (void (*)(uint64_t, unsigned char *, uint64_t))v101;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v101)(v119, v80, v120);
    uint64_t v85 = v122;
    uint64_t v84 = v123;
    unint64_t v86 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v122 + 16);
    v86(v123, v126, v82);
    uint64_t v87 = v110;
    v86(v110, v81, v82);
    id v88 = v115;
    v86(v115, v84, v82);
    uint64_t v89 = v116;
    uint64_t v90 = &v88[*(int *)(v116 + 48)];
    v86(v90, v87, v82);
    uint64_t v91 = v117;
    v83(v117, v88, v82);
    v83(v91 + *(int *)(v89 + 48), v90, v82);
    v92 = *(void (**)(unsigned char *, uint64_t))(v85 + 8);
    v92(v119, v82);
    v92(v126, v82);
    v92(v87, v82);
    return ((uint64_t (*)(unsigned char *, uint64_t))v92)(v123, v82);
  }
  else
  {
    sub_241CD85C0();
    sub_241C950CC(&qword_26B030970, MEMORY[0x263F43F10]);
    uint64_t result = sub_241CDA9B0();
    __break(1u);
  }
  return result;
}

double sub_241C8EDAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_241CD85C0();
  sub_241C950CC(&qword_26B030970, MEMORY[0x263F43F10]);
  *(void *)(a3 + 24) = sub_241CDA9C0();
  *(void *)(a3 + 32) = v6;
  uint64_t v7 = (uint64_t *)(a3 + *(int *)(a2 + 24));
  *uint64_t v7 = swift_getKeyPath();
  sub_241C91744(0, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  sub_241C92DD4(0, &qword_268D439B8, (uint64_t)&type metadata for SnidgetMultiValueLevelChartView.ViewModel, MEMORY[0x263F43CB8]);
  uint64_t v9 = v8;
  sub_241CD8410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  double result = *(double *)&v11;
  *(_OWORD *)a3 = v11;
  *(void *)(a3 + 16) = v12;
  return result;
}

uint64_t sub_241C8EF10(void *a1)
{
  unint64_t v3 = v1;
  sub_241C95064(0, &qword_26B036950, (uint64_t (*)(void))sub_241C94F34, (uint64_t)&type metadata for SnidgetMultiValueLevelChartView.ViewModel.Level.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  sub_241A311E0(a1, a1[3]);
  sub_241C94F34();
  sub_241CDC230();
  long long v11 = *v3;
  char v12 = 0;
  sub_241C94F88(0, &qword_26B038838, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
  sub_241C94FD8(&qword_26B0367C0);
  sub_241CDC0A0();
  if (!v2)
  {
    type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
    LOBYTE(v11) = 1;
    sub_241CD7F90();
    sub_241C950CC(&qword_26B032090, MEMORY[0x263F43640]);
    sub_241CDC0A0();
    LOBYTE(v11) = 2;
    sub_241CDC080();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_241C8F1A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v25 = sub_241CD7F90();
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  sub_241C95064(0, &qword_268D439F8, (uint64_t (*)(void))sub_241C94F34, (uint64_t)&type metadata for SnidgetMultiValueLevelChartView.ViewModel.Level.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v27 = v3;
  uint64_t v24 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v20 - v4;
  uint64_t v6 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (_OWORD *)((char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_241A311E0(a1, a1[3]);
  sub_241C94F34();
  uint64_t v26 = v5;
  uint64_t v9 = (uint64_t)v28;
  sub_241CDC220();
  if (v9) {
    return sub_241A31190((uint64_t)a1);
  }
  uint64_t v21 = v6;
  uint64_t v28 = a1;
  uint64_t v10 = v24;
  sub_241C94F88(0, &qword_26B038838, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
  char v30 = 0;
  sub_241C94FD8(&qword_268D43A00);
  uint64_t v11 = v27;
  char v12 = v26;
  sub_241CDC030();
  *uint64_t v8 = v29;
  LOBYTE(v29) = 1;
  sub_241C950CC(&qword_26B030958, MEMORY[0x263F43640]);
  sub_241CDC030();
  uint64_t v13 = v21;
  uint64_t v14 = (char *)v8 + *(int *)(v21 + 20);
  uint64_t v15 = *(void (**)(void))(v23 + 32);
  v20[0] = v8;
  v20[1] = v14;
  v15();
  LOBYTE(v29) = 2;
  char v16 = sub_241CDC010();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v11);
  char v17 = v16 & 1;
  uint64_t v18 = v20[0];
  *(unsigned char *)(v20[0] + *(int *)(v13 + 24)) = v17;
  sub_241C91FC8(v18, v22, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
  sub_241A31190((uint64_t)v28);
  return sub_241C91D58(v18, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
}

uint64_t sub_241C8F5EC()
{
  uint64_t v1 = 0x6867696C68676968;
  if (*v0 != 1) {
    uint64_t v1 = 0x73756C636E497369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65676E6172;
  }
}

uint64_t sub_241C8F658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_241C92E20(a1, a2);
  *a3 = result;
  return result;
}

void sub_241C8F680(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_241C8F68C(uint64_t a1)
{
  unint64_t v2 = sub_241C94F34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241C8F6C8(uint64_t a1)
{
  unint64_t v2 = sub_241C94F34();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241C8F704@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241C8F1A0(a1, a2);
}

uint64_t sub_241C8F71C(void *a1)
{
  return sub_241C8EF10(a1);
}

uint64_t sub_241C8F734(uint64_t a1, double *a2, uint64_t a3, __n128 a4, __n128 a5)
{
  a5.n128_u64[0] = *(void *)(a1 + 8);
  BOOL v5 = *(double *)a1 == *a2 && a5.n128_f64[0] == a2[1];
  if (v5
    && (a4.n128_u64[0] = *(void *)a1,
        (MEMORY[0x2456332B0](a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), a4, a5) & 1) != 0))
  {
    char v9 = *(unsigned char *)(a1 + *(int *)(a3 + 24)) ^ *((unsigned char *)a2 + *(int *)(a3 + 24)) ^ 1;
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_241C8F7B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v16 = a3;
  sub_241C95064(0, &qword_26B036958, (uint64_t (*)(void))sub_241C93464, (uint64_t)&type metadata for SnidgetMultiValueLevelChartView.ViewModel.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v14 - v10;
  sub_241A311E0(a1, a1[3]);
  sub_241C93464();
  sub_241CDC230();
  uint64_t v18 = a2;
  char v17 = 0;
  sub_241C91744(0, &qword_26B0367D0, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level, MEMORY[0x263F8D488]);
  sub_241C935D0(&qword_26B0367D8, &qword_26B035E00);
  sub_241CDC0A0();
  if (!v4)
  {
    uint64_t v12 = v15;
    uint64_t v18 = v16;
    char v17 = 1;
    sub_241C91884();
    sub_241C93690();
    sub_241CDC0A0();
    uint64_t v18 = v12;
    char v17 = 2;
    sub_241CDC0A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_241C8FA2C()
{
  unint64_t v1 = 0x7365756C6176;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000017;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x736C6576656CLL;
  }
}

uint64_t sub_241C8FA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_241C92FAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241C8FAAC(uint64_t a1)
{
  unint64_t v2 = sub_241C93464();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241C8FAE8(uint64_t a1)
{
  unint64_t v2 = sub_241C93464();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241C8FB24@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_241C930F0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_241C8FB54(void *a1)
{
  return sub_241C8F7B4(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_241C8FB74()
{
  return sub_241C950CC(&qword_26B035F40, (void (*)(uint64_t))type metadata accessor for SnidgetMultiValueLevelChartView);
}

uint64_t type metadata accessor for SnidgetMultiValueLevelChartView(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B035F48);
}

uint64_t sub_241C8FBDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241C8FBFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241CDAA30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C91744(0, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v18 - v9;
  sub_241C91E24(v2, (uint64_t)v18 - v9);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_241C91EB8((uint64_t)v10, a1, type metadata accessor for SnidgetMultiValueLevelChartView.Specs);
  }
  os_log_type_t v12 = sub_241CDB660();
  uint64_t v13 = sub_241CDAB20();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[1] = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    v18[2] = sub_241A33FE4(0x7363657053, 0xE500000000000000, &v19);
    sub_241CDBBF0();
    _os_log_impl(&dword_241A23000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v17, -1, -1);
    MEMORY[0x245637F20](v15, -1, -1);
  }

  sub_241CDAA20();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_241C8FEB0(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_241B95564(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_241C8FF58(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_241C8FF58(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
  uint64_t v132 = *(void *)(v4 - 8);
  uint64_t v133 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v129 = (uint64_t)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v139 = (uint64_t)&v124 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v136 = (double *)((char *)&v124 - v10);
  MEMORY[0x270FA5388](v9);
  uint64_t v135 = (double *)((char *)&v124 - v11);
  uint64_t v12 = a1[1];
  uint64_t result = sub_241CDC0C0();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      return sub_241C90A08(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v126 = result;
  if (v12 < 2)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    unint64_t v131 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v20 = (char *)MEMORY[0x263F8EE78];
LABEL_105:
      uint64_t v117 = v20;
      uint64_t v125 = v18;
      if (v21 >= 2)
      {
        uint64_t v118 = *a1;
        do
        {
          unint64_t v119 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v118) {
            goto LABEL_147;
          }
          uint64_t v120 = *(void *)&v117[16 * v119 + 32];
          uint64_t v121 = *(void *)&v117[16 * v21 + 24];
          sub_241C90CC8(v118 + *(void *)(v132 + 72) * v120, v118 + *(void *)(v132 + 72) * *(void *)&v117[16 * v21 + 16], v118 + *(void *)(v132 + 72) * v121, v131);
          if (v2) {
            break;
          }
          if (v121 < v120) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v117 = sub_241B95528((uint64_t)v117);
          }
          if (v119 >= *((void *)v117 + 2)) {
            goto LABEL_137;
          }
          uint64_t v122 = &v117[16 * v119 + 32];
          *(void *)uint64_t v122 = v120;
          *((void *)v122 + 1) = v121;
          unint64_t v123 = *((void *)v117 + 2);
          if (v21 > v123) {
            goto LABEL_138;
          }
          memmove(&v117[16 * v21 + 16], &v117[16 * v21 + 32], 16 * (v123 - v21));
          *((void *)v117 + 2) = v123 - 1;
          unint64_t v21 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v125 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v125 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_241CDB300();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v132 + 80);
    uint64_t v125 = v16;
    unint64_t v131 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v20 = (char *)MEMORY[0x263F8EE78];
  unint64_t v138 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    uint64_t v130 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v33 = v19 + 1;
      goto LABEL_25;
    }
    uint64_t v128 = *a1;
    uint64_t v140 = *(void *)(v132 + 72);
    uint64_t v24 = v140;
    uint64_t v25 = v135;
    sub_241C91FC8(v128 + v140 * v23, (uint64_t)v135, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
    uint64_t v26 = v128 + v24 * v22;
    uint64_t v27 = v136;
    sub_241C91FC8(v26, (uint64_t)v136, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
    double v28 = *v25;
    double v29 = *v27;
    sub_241C91D58((uint64_t)v27, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
    uint64_t v30 = (uint64_t)v25;
    uint64_t v31 = v128;
    sub_241C91D58(v30, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
    uint64_t v32 = v140;
    uint64_t v33 = v22 + 2;
    if (v22 + 2 >= v12)
    {
LABEL_22:
      if (v28 >= v29) {
        goto LABEL_25;
      }
LABEL_43:
      if (v33 < v22) {
        goto LABEL_141;
      }
      if (v22 < v33)
      {
        uint64_t v134 = v12;
        uint64_t v127 = v20;
        uint64_t v55 = 0;
        uint64_t v56 = v32 * (v33 - 1);
        uint64_t v57 = v22;
        uint64_t v58 = v33 * v32;
        uint64_t v59 = v57;
        uint64_t v60 = v57 * v32;
        do
        {
          if (v59 != v33 + v55 - 1)
          {
            uint64_t v62 = v128;
            if (!v128) {
              goto LABEL_146;
            }
            unint64_t v63 = v128 + v60;
            uint64_t v137 = v128 + v56;
            sub_241C91EB8(v128 + v60, v129, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
            if (v60 < v56 || v63 >= v62 + v58)
            {
              uint64_t v61 = v137;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v61 = v137;
              if (v60 != v56) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_241C91EB8(v129, v61, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
            uint64_t v32 = v140;
          }
          ++v59;
          --v55;
          v56 -= v32;
          v58 -= v32;
          v60 += v32;
        }
        while (v59 < v33 + v55);
        a1 = v138;
        uint64_t v20 = v127;
        uint64_t v22 = v130;
        uint64_t v12 = v134;
      }
      goto LABEL_25;
    }
    uint64_t v124 = v2;
    uint64_t v127 = v20;
    uint64_t v137 = v140 * v23;
    uint64_t v134 = v140 * v33;
    while (1)
    {
      uint64_t v34 = v33;
      uint64_t v35 = v135;
      sub_241C91FC8(v31 + v134, (uint64_t)v135, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      uint64_t v36 = v136;
      sub_241C91FC8(v31 + v137, (uint64_t)v136, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      BOOL v37 = *v35 >= *v36;
      sub_241C91D58((uint64_t)v36, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      sub_241C91D58((uint64_t)v35, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      if (v28 < v29 == v37) {
        break;
      }
      ++v33;
      uint64_t v32 = v140;
      v31 += v140;
      if (v12 == v34 + 1)
      {
        uint64_t v33 = v12;
        uint64_t v20 = v127;
        uint64_t v2 = v124;
        uint64_t v22 = v130;
        goto LABEL_22;
      }
    }
    uint64_t v20 = v127;
    uint64_t v2 = v124;
    uint64_t v22 = v130;
    uint64_t v32 = v140;
    if (v28 < v29) {
      goto LABEL_43;
    }
LABEL_25:
    if (v33 < v12)
    {
      if (__OFSUB__(v33, v22)) {
        goto LABEL_139;
      }
      if (v33 - v22 < v126) {
        break;
      }
    }
LABEL_57:
    if (v33 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v20 = sub_241B951E8(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v66 = *((void *)v20 + 2);
    unint64_t v65 = *((void *)v20 + 3);
    unint64_t v21 = v66 + 1;
    if (v66 >= v65 >> 1) {
      uint64_t v20 = sub_241B951E8((char *)(v65 > 1), v66 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    uint64_t v67 = v20 + 32;
    uint64_t v68 = &v20[16 * v66 + 32];
    uint64_t v69 = v137;
    *(void *)uint64_t v68 = v22;
    *((void *)v68 + 1) = v69;
    if (v66)
    {
      while (1)
      {
        unint64_t v70 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v75 = &v67[16 * v21];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_123;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_124;
          }
          unint64_t v82 = v21 - 2;
          id v83 = &v67[16 * v21 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_126;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_129;
          }
          if (v87 >= v78)
          {
            uint64_t v105 = &v67[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_133;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v99 = *((void *)v20 + 4);
            uint64_t v100 = *((void *)v20 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_88;
          }
          uint64_t v72 = *((void *)v20 + 4);
          uint64_t v71 = *((void *)v20 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_125;
        }
        unint64_t v82 = v21 - 2;
        id v88 = &v67[16 * v21 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_128;
        }
        uint64_t v94 = &v67[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_131;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_132;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_94:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v93) {
          goto LABEL_127;
        }
        uint64_t v101 = &v67[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_130;
        }
        if (v104 < v92) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v110 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        v111 = v20;
        uint64_t v112 = &v67[16 * v109];
        uint64_t v113 = *(void *)v112;
        double v114 = &v67[16 * v70];
        uint64_t v115 = *((void *)v114 + 1);
        sub_241C90CC8(v110 + *(void *)(v132 + 72) * *(void *)v112, v110 + *(void *)(v132 + 72) * *(void *)v114, v110 + *(void *)(v132 + 72) * v115, v131);
        if (v2) {
          goto LABEL_116;
        }
        if (v115 < v113) {
          goto LABEL_120;
        }
        if (v70 > *((void *)v111 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v112 = v113;
        *(void *)&v67[16 * v109 + 8] = v115;
        unint64_t v116 = *((void *)v111 + 2);
        if (v70 >= v116) {
          goto LABEL_122;
        }
        uint64_t v20 = v111;
        unint64_t v21 = v116 - 1;
        memmove(&v67[16 * v70], v114 + 16, 16 * (v116 - 1 - v70));
        *((void *)v111 + 2) = v116 - 1;
        a1 = v138;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v19 = v137;
    if (v137 >= v12)
    {
      uint64_t v18 = v125;
      goto LABEL_105;
    }
  }
  if (__OFADD__(v22, v126)) {
    goto LABEL_142;
  }
  if (v22 + v126 >= v12) {
    uint64_t v38 = v12;
  }
  else {
    uint64_t v38 = v22 + v126;
  }
  if (v38 >= v22)
  {
    if (v33 != v38)
    {
      uint64_t v127 = v20;
      uint64_t v128 = v38;
      uint64_t v124 = v2;
      uint64_t v39 = *(void *)(v132 + 72);
      uint64_t v140 = v39 * (v33 - 1);
      uint64_t v134 = v39;
      uint64_t v40 = v33 * v39;
      do
      {
        uint64_t v42 = 0;
        uint64_t v43 = v22;
        uint64_t v137 = v33;
        while (1)
        {
          uint64_t v44 = v138;
          uint64_t v45 = *v138;
          uint64_t v46 = v40;
          uint64_t v47 = v40 + v42 + *v138;
          char v48 = v135;
          sub_241C91FC8(v47, (uint64_t)v135, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
          uint64_t v49 = v140 + v42 + v45;
          double v50 = v136;
          sub_241C91FC8(v49, (uint64_t)v136, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
          double v51 = *v48;
          double v52 = *v50;
          sub_241C91D58((uint64_t)v50, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
          sub_241C91D58((uint64_t)v48, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
          if (v51 >= v52) {
            break;
          }
          uint64_t v53 = *v44;
          if (!*v44) {
            goto LABEL_144;
          }
          uint64_t v40 = v46;
          uint64_t v54 = v53 + v140 + v42;
          sub_241C91EB8(v53 + v46 + v42, v139, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
          swift_arrayInitWithTakeFrontToBack();
          sub_241C91EB8(v139, v54, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
          v42 -= v134;
          ++v43;
          uint64_t v41 = v137;
          if (v137 == v43) {
            goto LABEL_36;
          }
        }
        uint64_t v41 = v137;
        uint64_t v40 = v46;
LABEL_36:
        uint64_t v33 = v41 + 1;
        v140 += v134;
        v40 += v134;
        uint64_t v22 = v130;
      }
      while (v33 != v128);
      uint64_t v33 = v128;
      uint64_t v2 = v124;
      a1 = v138;
      uint64_t v20 = v127;
    }
    goto LABEL_57;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_241CDBF00();
  __break(1u);
  return result;
}

uint64_t sub_241C90A08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v27 = a1;
  uint64_t v28 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
  uint64_t v7 = MEMORY[0x270FA5388](v28);
  uint64_t v31 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (double *)((char *)&v25 - v10);
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (double *)((char *)&v25 - v14);
  uint64_t v30 = a3;
  uint64_t v26 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v33 = v16 * (v30 - 1);
    uint64_t v29 = v16;
    uint64_t v32 = v16 * v30;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v27;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = a4;
      sub_241C91FC8(v32 + v17 + *a4, (uint64_t)v15, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      sub_241C91FC8(v33 + v17 + v19, (uint64_t)v11, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      double v21 = *v15;
      double v22 = *v11;
      sub_241C91D58((uint64_t)v11, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      uint64_t result = sub_241C91D58((uint64_t)v15, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      if (v21 >= v22)
      {
LABEL_4:
        v33 += v29;
        v32 += v29;
        if (++v30 == v26) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v23 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v24 = v23 + v33 + v17;
      sub_241C91EB8(v23 + v32 + v17, v31, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_241C91EB8(v31, v24, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      v17 -= v29;
      ++v18;
      a4 = v20;
      if (v30 == v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_241C90CC8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
  uint64_t v8 = MEMORY[0x270FA5388](v40);
  uint64_t v10 = (double *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (double *)((char *)&v38 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      unint64_t v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v31 = a3 - v14;
          sub_241C91FC8(v29 - v14, (uint64_t)v12, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
          unint64_t v32 = a2 - v14;
          sub_241C91FC8(a2 - v14, (uint64_t)v10, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
          double v33 = *v12;
          double v34 = *v10;
          sub_241C91D58((uint64_t)v10, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
          sub_241C91D58((uint64_t)v12, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
          if (v33 >= v34)
          {
            unint64_t v35 = v41;
            v41 -= v14;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 -= v14;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v32;
          a3 -= v14;
        }
        while (v32 > v39);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_241C91FC8(a2, (uint64_t)v12, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
        sub_241C91FC8(a4, (uint64_t)v10, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
        double v22 = *v12;
        double v23 = *v10;
        sub_241C91D58((uint64_t)v10, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
        sub_241C91D58((uint64_t)v12, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
        unint64_t v24 = v43;
        if (v22 >= v23)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_67:
    sub_241B953CC(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_241CDBFB0();
  __break(1u);
  return result;
}

uint64_t sub_241C9119C(unint64_t a1)
{
  return sub_241AF7C68(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_241C911B0(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (double *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = a1;
  swift_bridgeObjectRetain();
  sub_241C8FEB0(&v36);
  uint64_t v8 = v36;
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (unsigned char *)(a2 + 40);
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if ((*v10 & 1) == 0)
      {
        uint64_t v12 = *((void *)v10 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_241AF7CB0(0, v11[2] + 1, 1, v11);
        }
        unint64_t v14 = v11[2];
        unint64_t v13 = v11[3];
        if (v14 >= v13 >> 1) {
          uint64_t v11 = sub_241AF7CB0((void *)(v13 > 1), v14 + 1, 1, v11);
        }
        v11[2] = v14 + 1;
        v11[v14 + 4] = v12;
      }
      v10 += 16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v15 = sub_241A4DE24((uint64_t)v11);
  if (v16)
  {
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  double v17 = *(double *)&v15;
  double v18 = COERCE_DOUBLE(sub_241A4E2E0((uint64_t)v11));
  char v20 = v19;
  swift_bridgeObjectRelease();
  if (v20) {
    return (uint64_t)v8;
  }
  uint64_t v21 = v8[2];
  if (!v21) {
    return (uint64_t)v8;
  }
  double v22 = v17;
  unint64_t v23 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v24 = *(void *)(v5 + 72);
  sub_241C91FC8((uint64_t)v8 + v23 + v24 * (v21 - 1), (uint64_t)v7, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
  double v25 = *(double *)((char *)v8 + v23);
  double v26 = *(double *)((char *)v8 + v23 + 8);
  if (v25 >= v22) {
    double v25 = v22;
  }
  if (v7[1] < v18) {
    double v27 = v18;
  }
  else {
    double v27 = v7[1];
  }
  double v28 = 0.0;
  if (v25 == v22) {
    double v28 = (v27 - v25) * 0.05;
  }
  double v29 = v25 - v28;
  if (v27 == v18) {
    double v30 = (v27 - v25) * 0.05;
  }
  else {
    double v30 = -0.0;
  }
  if (v29 > v26)
  {
    __break(1u);
  }
  else if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v31 = v8[2];
    if (v31) {
      goto LABEL_28;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v8 = (void *)sub_241C9119C((unint64_t)v8);
  uint64_t v31 = v8[2];
  if (!v31) {
    goto LABEL_34;
  }
LABEL_28:
  unint64_t v32 = (double *)((char *)v8 + v23);
  double *v32 = v29;
  v32[1] = v26;
  double v33 = (double *)((char *)v8 + v23 + (v31 - 1) * v24);
  if (*v33 <= v27 + v30)
  {
    v33[1] = v27 + v30;
    sub_241C91D58((uint64_t)v7, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
    return (uint64_t)v8;
  }
LABEL_35:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B035E08);
}

uint64_t type metadata accessor for SnidgetMultiValueLevelChartView.Specs(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B035ED0);
}

void sub_241C914E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_241C94F88(255, (unint64_t *)&qword_268D42F08, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6E0], MEMORY[0x263F8D870]);
    a3(255);
    sub_241BA1AC4();
    unint64_t v5 = sub_241CDADA0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241C915AC()
{
  if (!qword_268D43048)
  {
    sub_241BA15B4();
    unint64_t v0 = sub_241CDA910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43048);
    }
  }
}

void sub_241C9160C()
{
  if (!qword_268D43948)
  {
    sub_241C916AC(255, &qword_268D43940, (void (*)(uint64_t))sub_241C915AC, &qword_26B0308D0, MEMORY[0x263F18DD8]);
    sub_241CDAB10();
    unint64_t v0 = sub_241CDA910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43948);
    }
  }
}

void sub_241C916AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_241C91744(255, a4, a5, MEMORY[0x263F1A418]);
    unint64_t v8 = sub_241CDA910();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241C91744(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241C917A8()
{
  if (!qword_268D43958)
  {
    sub_241C916AC(255, &qword_268D43950, (void (*)(uint64_t))sub_241C9160C, &qword_26B0308E0, MEMORY[0x263F191A0]);
    sub_241C91884();
    sub_241C91900();
    sub_241C91CBC();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_268D43958);
    }
  }
}

void sub_241C91884()
{
  if (!qword_26B0367E0)
  {
    sub_241C92DD4(255, (unint64_t *)&qword_26B034CF0, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241CDB320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0367E0);
    }
  }
}

unint64_t sub_241C91900()
{
  unint64_t result = qword_268D43960;
  if (!qword_268D43960)
  {
    uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x263F191A0];
    sub_241C916AC(255, &qword_268D43950, (void (*)(uint64_t))sub_241C9160C, &qword_26B0308E0, MEMORY[0x263F191A0]);
    sub_241C919D0();
    sub_241C91C58(&qword_26B0308D8, &qword_26B0308E0, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43960);
  }
  return result;
}

unint64_t sub_241C919D0()
{
  unint64_t result = qword_268D43968;
  if (!qword_268D43968)
  {
    sub_241C9160C();
    sub_241C91A78();
    sub_241C950CC(&qword_26B0308E8, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43968);
  }
  return result;
}

unint64_t sub_241C91A78()
{
  unint64_t result = qword_268D43970;
  if (!qword_268D43970)
  {
    uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x263F18DD8];
    sub_241C916AC(255, &qword_268D43940, (void (*)(uint64_t))sub_241C915AC, &qword_26B0308D0, MEMORY[0x263F18DD8]);
    sub_241C91B48();
    sub_241C91C58(&qword_26B0308C8, &qword_26B0308D0, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43970);
  }
  return result;
}

unint64_t sub_241C91B48()
{
  unint64_t result = qword_268D43978;
  if (!qword_268D43978)
  {
    sub_241C915AC();
    sub_241BA16A0();
    sub_241BA1754();
    sub_241C950CC(&qword_268D43040, (void (*)(uint64_t))sub_241BA1754);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43978);
  }
  return result;
}

uint64_t sub_241C91C58(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C91744(255, a2, a3, MEMORY[0x263F1A418]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241C91CBC()
{
  unint64_t result = qword_268D43980;
  if (!qword_268D43980)
  {
    sub_241C91884();
    sub_241C9354C(&qword_268D43988);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43980);
  }
  return result;
}

uint64_t sub_241C91D50@<X0>(uint64_t a1@<X8>)
{
  return sub_241C8CA34(*(void *)(v1 + 16), a1);
}

uint64_t sub_241C91D58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241C91DC0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  sub_241C916AC(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_241C91E24(uint64_t a1, uint64_t a2)
{
  sub_241C91744(0, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241C91EB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_241C91F20()
{
  if (!qword_268D43990)
  {
    sub_241C914E4(255, &qword_268D42FC8, (void (*)(uint64_t))sub_241BA18B4);
    sub_241C914E4(255, &qword_268D42FF8, (void (*)(uint64_t))sub_241BA1C84);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D43990);
    }
  }
}

uint64_t sub_241C91FC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241C92034(uint64_t a1)
{
  return sub_241C921C4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_241C8D098);
}

uint64_t sub_241C92050()
{
  uint64_t v1 = (int *)(type metadata accessor for SnidgetMultiValueLevelChartView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[8];
  sub_241C91744(0, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_241CDA870();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241C921AC(uint64_t a1)
{
  return sub_241C921C4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_241C8DEBC);
}

uint64_t sub_241C921C4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for SnidgetMultiValueLevelChartView(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

void sub_241C92258()
{
  if (!qword_268D43998)
  {
    sub_241BA1CEC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D43998);
    }
  }
}

double sub_241C922BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0.0;
  }
  uint64_t v3 = *(void *)(type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0) - 8);
  uint64_t v4 = (double *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  return *(double *)((char *)v4 + *(void *)(v3 + 72) * (v1 - 1) + 8) - *v4;
}

uint64_t sub_241C92354(double *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a2;
  uint64_t v28 = sub_241CDA870();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (double *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void *)(a3 + 16);
  if (!v10)
  {
    uint64_t v12 = (void *)MEMORY[0x263F8EE78];
    uint64_t v16 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v16) {
      goto LABEL_11;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = (unsigned char *)(a3 + 40);
  uint64_t v12 = (void *)MEMORY[0x263F8EE78];
  do
  {
    if ((*v11 & 1) == 0)
    {
      uint64_t v13 = *((void *)v11 - 1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_241AF7CB0(0, v12[2] + 1, 1, v12);
      }
      unint64_t v15 = v12[2];
      unint64_t v14 = v12[3];
      if (v15 >= v14 >> 1) {
        uint64_t v12 = sub_241AF7CB0((void *)(v14 > 1), v15 + 1, 1, v12);
      }
      void v12[2] = v15 + 1;
      v12[v15 + 4] = v13;
    }
    v11 += 16;
    --v10;
  }
  while (v10);
  swift_bridgeObjectRelease();
  uint64_t v16 = v12[2];
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  uint64_t v17 = *(int *)(v7 + 24);
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v16; ++i)
  {
    double v19 = *(double *)&v12[i + 4];
    double v20 = *a1;
    if (*((unsigned char *)a1 + v17) == 1)
    {
      if (v20 <= v19 && v19 <= a1[1])
      {
LABEL_20:
        swift_bridgeObjectRelease_n();
        uint64_t v22 = v26;
        uint64_t v23 = v28;
        (*(void (**)(char *, void, uint64_t))(v26 + 104))(v6, *MEMORY[0x263F18508], v28);
        sub_241CDA860();
        return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v6, v23);
      }
    }
    else
    {
      sub_241C91FC8((uint64_t)a1, (uint64_t)v9, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      if (v20 >= v19)
      {
        sub_241C91D58((uint64_t)v9, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      }
      else
      {
        double v21 = v9[1];
        sub_241C91D58((uint64_t)v9, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
        if (v19 < v21) {
          goto LABEL_20;
        }
      }
    }
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_241C92688(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = sub_241CDA870();
  uint64_t v6 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
  MEMORY[0x270FA5388](v31);
  uint64_t v10 = (double *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void *)(a4 + 16);
  if (!v11)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    uint64_t v17 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v17) {
      goto LABEL_11;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = (unsigned char *)(a4 + 40);
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  do
  {
    if ((*v12 & 1) == 0)
    {
      uint64_t v14 = *((void *)v12 - 1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_241AF7CB0(0, v13[2] + 1, 1, v13);
      }
      unint64_t v16 = v13[2];
      unint64_t v15 = v13[3];
      if (v16 >= v15 >> 1) {
        uint64_t v13 = sub_241AF7CB0((void *)(v15 > 1), v16 + 1, 1, v13);
      }
      v13[2] = v16 + 1;
      v13[v16 + 4] = v14;
    }
    v12 += 16;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  uint64_t v17 = v13[2];
  if (!v17) {
    goto LABEL_23;
  }
LABEL_11:
  uint64_t v18 = *(int *)(v31 + 24);
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v17; ++i)
  {
    double v20 = *(double *)&v13[i + 4];
    double v21 = *a1;
    if (*((unsigned char *)a1 + v18) == 1)
    {
      if (v21 <= v20 && v20 <= a1[1])
      {
LABEL_20:
        swift_bridgeObjectRelease_n();
        return sub_241CD7F80();
      }
    }
    else
    {
      sub_241C91FC8((uint64_t)a1, (uint64_t)v10, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      if (v21 >= v20)
      {
        sub_241C91D58((uint64_t)v10, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      }
      else
      {
        double v22 = v10[1];
        sub_241C91D58((uint64_t)v10, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
        if (v20 < v22) {
          goto LABEL_20;
        }
      }
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_24:
  uint64_t v24 = v30;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F18508], v30);
  char v25 = sub_241CDA860();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v24);
  uint64_t v26 = self;
  if (v25) {
    id v27 = objc_msgSend(v26, sel_systemGray6Color, v28, v29);
  }
  else {
    id v27 = objc_msgSend(v26, sel_systemGray3Color, v28, v29);
  }
  return MEMORY[0x245635FB0](v27);
}

uint64_t sub_241C929F0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_241C91744(0, &qword_268D439A8, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v30 - v9;
  uint64_t v11 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v15 = (double *)((char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (double *)((char *)v30 - v17);
  MEMORY[0x270FA5388](v16);
  double v20 = (char *)v30 - v19;
  if ((a2 & 1) == 0)
  {
    uint64_t v21 = *(void *)(a4 + 16);
    if (v21)
    {
      v30[1] = a3;
      double v22 = *(double *)&a1;
      uint64_t v23 = a4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
      uint64_t v24 = *(void *)(v12 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_241C91FC8(v23, (uint64_t)v18, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
        double v25 = *v18;
        if (*((unsigned char *)v18 + *(int *)(v11 + 24)) == 1)
        {
          if (v25 <= v22 && v18[1] >= v22)
          {
LABEL_12:
            sub_241C91EB8((uint64_t)v18, (uint64_t)v10, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
            uint64_t v27 = 0;
            goto LABEL_15;
          }
        }
        else
        {
          sub_241C91FC8((uint64_t)v18, (uint64_t)v15, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
          if (v25 >= v22)
          {
            sub_241C91D58((uint64_t)v15, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
          }
          else
          {
            double v26 = v15[1];
            sub_241C91D58((uint64_t)v15, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
            if (v26 > v22) {
              goto LABEL_12;
            }
          }
        }
        sub_241C91D58((uint64_t)v18, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
        v23 += v24;
        --v21;
      }
      while (v21);
      uint64_t v27 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = 1;
    }
LABEL_15:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v27, 1, v11);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      sub_241C91EB8((uint64_t)v10, (uint64_t)v20, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      uint64_t v28 = sub_241CD7F80();
      sub_241C91D58((uint64_t)v20, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
      return v28;
    }
    sub_241C947E8((uint64_t)v10, &qword_268D439A8, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level, MEMORY[0x263F8D8F0]);
  }
  return sub_241CDAC80();
}

uint64_t sub_241C92DB0()
{
  return sub_241CDA9D0();
}

void sub_241C92DD4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241C92E20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65676E6172 && a2 == 0xE500000000000000;
  if (v2 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6867696C68676968 && a2 == 0xEE00726F6C6F4374 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73756C636E497369 && a2 == 0xEB00000000657669)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_241C92FAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736C6576656CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000241CE4FC0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_241C930F0(void *a1)
{
  sub_241C95064(0, &qword_268D439C0, (uint64_t (*)(void))sub_241C93464, (uint64_t)&type metadata for SnidgetMultiValueLevelChartView.ViewModel.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[3];
  sub_241A311E0(a1, v8);
  sub_241C93464();
  sub_241CDC220();
  if (v1)
  {
    sub_241A31190((uint64_t)a1);
  }
  else
  {
    sub_241C91744(0, &qword_26B0367D0, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level, MEMORY[0x263F8D488]);
    char v11 = 0;
    sub_241C935D0(&qword_268D439C8, &qword_268D439D0);
    sub_241CDC030();
    uint64_t v8 = v12;
    sub_241C91884();
    char v11 = 1;
    sub_241C934B8();
    swift_bridgeObjectRetain();
    sub_241CDC030();
    char v11 = 2;
    swift_bridgeObjectRetain();
    sub_241CDC030();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    sub_241A31190((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_241C93464()
{
  unint64_t result = qword_26B035EA0;
  if (!qword_26B035EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035EA0);
  }
  return result;
}

unint64_t sub_241C934B8()
{
  unint64_t result = qword_268D439D8;
  if (!qword_268D439D8)
  {
    sub_241C91884();
    sub_241C9354C(&qword_268D439E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D439D8);
  }
  return result;
}

uint64_t sub_241C9354C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C92DD4(255, (unint64_t *)&qword_26B034CF0, MEMORY[0x263F8D538], MEMORY[0x263F8D8F0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C935D0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C91744(255, &qword_26B0367D0, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level, MEMORY[0x263F8D488]);
    sub_241C950CC(a2, (void (*)(uint64_t))type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241C93690()
{
  unint64_t result = qword_26B0367E8;
  if (!qword_26B0367E8)
  {
    sub_241C91884();
    sub_241C9354C(&qword_26B036800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0367E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.CodingKeys()
{
  return &type metadata for SnidgetMultiValueLevelChartView.ViewModel.CodingKeys;
}

uint64_t sub_241C9373C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA870();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_241C937A8(uint64_t a1)
{
  uint64_t v2 = sub_241CDA870();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_241C9380C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA870();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_241C93870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA870();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_241C938D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA870();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_241C93938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA870();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_241C9399C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C939B0);
}

uint64_t sub_241C939B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA870();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_241C93A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C93A30);
}

uint64_t sub_241C93A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA870();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_241C93AA0()
{
  uint64_t result = sub_241CDA870();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_241C93B2C(_OWORD *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_241CD7F90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_241C93C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_241CD7F90();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_241C93C7C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD7F90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_241C93D14(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD7F90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_241C93DB4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD7F90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_241C93E4C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD7F90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_241C93EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C93EF8);
}

uint64_t sub_241C93EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241CD7F90();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_241C93FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C93FE0);
}

uint64_t sub_241C93FE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_241CD7F90();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t sub_241C940A0()
{
  uint64_t result = sub_241CD7F90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for SnidgetMultiValueLevelChartView.ViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s9Summaries31SnidgetMultiValueLevelChartViewV9ViewModelVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SnidgetMultiValueLevelChartView.ViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SnidgetMultiValueLevelChartView.ViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel()
{
  return &type metadata for SnidgetMultiValueLevelChartView.ViewModel;
}

uint64_t *sub_241C942B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    int v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    sub_241C91744(0, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185C8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_241CDA870();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

uint64_t sub_241C94434(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_241C91744(0, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_241CDA870();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *sub_241C94530(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  sub_241C91744(0, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185C8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_241CDA870();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_241C94660(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_241C947E8((uint64_t)a1 + v6, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185C8]);
    sub_241C91744(0, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_241CDA870();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241C947E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_241C91744(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_241C94844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  sub_241C91744(0, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185C8]);
  uint64_t v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_241CDA870();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

void *sub_241C94954(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
    sub_241C947E8((uint64_t)a1 + v6, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185C8]);
    sub_241C91744(0, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, v9);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_241CDA870();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241C94ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C94AE0);
}

uint64_t sub_241C94AE0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_241C91744(0, &qword_268D439E8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185D0]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241C94BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C94BD4);
}

void *sub_241C94BD4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_241C91744(0, &qword_268D439E8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185D0]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_241C94CAC()
{
  sub_241C91744(319, &qword_26B0356A8, type metadata accessor for SnidgetMultiValueLevelChartView.Specs, MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_241C94D7C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_241C94E30()
{
  unint64_t result = qword_268D439F0;
  if (!qword_268D439F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D439F0);
  }
  return result;
}

unint64_t sub_241C94E88()
{
  unint64_t result = qword_26B035EB0;
  if (!qword_26B035EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035EB0);
  }
  return result;
}

unint64_t sub_241C94EE0()
{
  unint64_t result = qword_26B035EA8;
  if (!qword_26B035EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035EA8);
  }
  return result;
}

unint64_t sub_241C94F34()
{
  unint64_t result = qword_26B035DE8;
  if (!qword_26B035DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035DE8);
  }
  return result;
}

void sub_241C94F88(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_241C94FD8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C94F88(255, &qword_26B038838, MEMORY[0x263F8D538], MEMORY[0x263F8D560], MEMORY[0x263F8D1A0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241C95064(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_241C950CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s9Summaries31SnidgetMultiValueLevelChartViewV9ViewModelV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241C951E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level.CodingKeys()
{
  return &type metadata for SnidgetMultiValueLevelChartView.ViewModel.Level.CodingKeys;
}

unint64_t sub_241C9521C()
{
  unint64_t result = qword_268D43A08;
  if (!qword_268D43A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43A08);
  }
  return result;
}

unint64_t sub_241C95274()
{
  unint64_t result = qword_26B035DF8;
  if (!qword_26B035DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035DF8);
  }
  return result;
}

unint64_t sub_241C952CC()
{
  unint64_t result = qword_26B035DF0;
  if (!qword_26B035DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B035DF0);
  }
  return result;
}

uint64_t type metadata accessor for FitnessPromotionTileActionHandler()
{
  uint64_t result = qword_268D43A10;
  if (!qword_268D43A10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241C95374()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241C953B4()
{
  swift_getObjectType();
  sub_241B963B8(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_241CD6AC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CDA1A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA140();
  uint64_t v11 = sub_241CDA190();
  os_log_type_t v12 = sub_241CDB670();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v23 = v7;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = v4;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v28 = v15;
    uint64_t v24 = v6;
    *(_DWORD *)uint64_t v14 = 136446210;
    uint64_t v26 = v3;
    uint64_t v16 = sub_241CDC270();
    uint64_t v27 = sub_241A33FE4(v16, v17, &v28);
    uint64_t v3 = v26;
    unsigned int v6 = v24;
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v11, v12, "%{public}s did tap action", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v15, -1, -1);
    uint64_t v18 = v14;
    uint64_t v4 = v25;
    MEMORY[0x245637F20](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_241CD6AB0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_241BB9BF4((uint64_t)v2);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id v20 = objc_msgSend(self, sel_defaultWorkspace);
  if (v20)
  {
    uint64_t v21 = v20;
    double v22 = (void *)sub_241CD6A90();
    objc_msgSend(v21, sel_openSensitiveURL_withOptions_, v22, 0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_241C9576C(uint64_t a1)
{
  uint64_t v3 = sub_241CD8DC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_241CD9020();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_241C9586C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FitnessPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241C958A8()
{
  return type metadata accessor for FitnessPromotionTileActionHandler();
}

uint64_t sub_241C958B0()
{
  return sub_241C95940(&qword_268D42EE0, MEMORY[0x263F43E20]);
}

uint64_t sub_241C958F8()
{
  return sub_241C95940(&qword_268D43A20, (void (*)(uint64_t))type metadata accessor for FitnessPromotionTileActionHandler);
}

uint64_t sub_241C95940(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C95994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C959A8);
}

uint64_t sub_241C959A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241C95A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C95A6C);
}

void *sub_241C95A6C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031DD0;
  if (!qword_26B031DD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241C95B60()
{
  return sub_241C95CAC((unint64_t *)&qword_26B0320F0);
}

void sub_241C95B94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241C95C30(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241C95C30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C95C78()
{
  return sub_241C95CAC((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241C95CAC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C95B94(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241C95C30((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241C95C30(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241C95D90(uint64_t a1)
{
  uint64_t result = sub_241C95C30(&qword_26B037ED8, (void (*)(uint64_t))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241C95DE8()
{
  return sub_241C95E88(&qword_26B0383C0, &qword_26B0383C8, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241C95E38()
{
  return sub_241C95E88(&qword_26B032E10, &qword_26B032E18, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241C95E88(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241C95ECC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241C95ECC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241C95B94(255, &qword_26B032118, MEMORY[0x263F44150]);
    v9[0] = v6;
    v9[1] = &type metadata for EmptySnidgetVisualizationView;
    v9[2] = sub_241A3F5B0();
    v9[3] = sub_241A92E14();
    v9[4] = sub_241C95CAC((unint64_t *)&qword_26B0320F0);
    v9[5] = sub_241C95CAC((unint64_t *)&qword_26B0320E0);
    v9[6] = sub_241A92E68();
    v9[7] = sub_241A92EBC();
    unint64_t v7 = a3(a1, v9);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241C95FE8(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3591C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v105 = (char *)&v92 - v12;
  uint64_t v13 = sub_241CD6D00();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v103 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A3591C(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v104 = (char *)&v92 - v16;
  sub_241A3591C(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v100 = (char *)&v92 - v18;
  sub_241A3591C(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v99 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v106 = (char *)&v92 - v22;
  sub_241A3591C(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v92 - v24;
  uint64_t v26 = sub_241CD69B0();
  uint64_t v101 = *(void *)(v26 - 8);
  uint64_t v102 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v107 = (char *)&v92 - v30;
  id v31 = objc_msgSend(self, sel_sharedBehavior);
  if (!v31)
  {
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v32 = v31;
  id v33 = objc_msgSend(v31, sel_features);

  if (!v33)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unsigned int v34 = objc_msgSend(v33, sel_chamomile);

  if (!v34)
  {
    sub_241A41340();
    swift_allocError();
    *unint64_t v43 = 0;
LABEL_10:
    swift_willThrow();
    return;
  }
  uint64_t v97 = a2;
  uint64_t v98 = a3;
  uint64_t v35 = self;
  uint64_t v36 = (void *)*v4;
  id v37 = objc_msgSend(v35, sel_sharedInstanceForHealthStore_, *v4);
  if (!v37)
  {
LABEL_20:
    __break(1u);
    return;
  }
  uint64_t v38 = v37;
  sub_241B58980();
  unint64_t v39 = (void *)MEMORY[0x245636CC0]((id)*MEMORY[0x263F09F98]);
  id v40 = objc_msgSend(v38, sel_displayTypeForObjectType_, v39);

  if (!v40)
  {
    sub_241A3A824();
    swift_allocError();
    goto LABEL_10;
  }
  id v41 = v110;
  sub_241ADF918(a1);
  if (v41)
  {
  }
  else if (v42)
  {
    id v110 = v42;
    uint64_t v44 = (id *)((char *)v4 + *(int *)(type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider() + 20));
    uint64_t v45 = *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32);
    uint64_t v95 = v44;
    uint64_t v46 = *(id *)((char *)v44 + v45);
    id v94 = v46;
    type metadata accessor for MostRecentSampleSnidgetStringBuilder();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v36;
    char v48 = self;
    id v93 = v46;
    id v49 = v36;
    id v50 = objc_msgSend(v48, sel_sharedInstanceForHealthStore_, v49);
    uint64_t v51 = inited;
    *(void *)(inited + 32) = v50;
    if (v94)
    {
      id v52 = v93;
    }
    else
    {
      id v63 = v50;
      id v52 = objc_msgSend(v63, sel_createHKUnitPreferenceController);
    }
    *(void *)(v51 + 24) = v52;
    uint64_t v96 = v51;
    id v64 = v110;
    objc_msgSend(v110, sel_risk);
    id v65 = (id)HKUILocalizedStringForPHQ9Risk();
    sub_241CDB0D0();

    unint64_t v66 = v107;
    SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    sub_241CD89A0();
    sub_241A3A9CC();
    uint64_t v68 = *(int *)(v67 + 48);
    id v94 = v40;
    objc_msgSend(v64, sel_dateData);
    id v69 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    v25[v68] = 0;
    uint64_t v70 = *MEMORY[0x263F43F18];
    uint64_t v71 = sub_241CD8610();
    uint64_t v72 = *(void *)(v71 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 104))(v25, v70, v71);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v25, 0, 1, v71);
    id v93 = (id)sub_241CD8990();
    uint64_t v73 = v101;
    uint64_t v74 = v102;
    uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56);
    v75(v106, 1, 1, v102);
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v29, v66, v74);
    uint64_t v76 = v74;
    v75(v99, 1, 1, v74);
    uint64_t v108 = 0x5F74656764696E53;
    unint64_t v109 = 0xE800000000000000;
    id v77 = v95[2];
    id v78 = objc_msgSend(v77, sel_description);
    sub_241CDB0D0();

    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v79 = v100;
    sub_241CD8E50();
    swift_bridgeObjectRelease();
    uint64_t v80 = sub_241CD8E70();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v79, 0, 1, v80);
    sub_241CD8FF0();
    swift_allocObject();
    uint64_t v81 = sub_241CD8FE0();
    id v82 = v110;
    objc_msgSend(v110, sel_dateData);
    id v83 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v84 = (uint64_t)v104;
    sub_241CD79D0();
    uint64_t v85 = sub_241CD7A10();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v84, 0, 1, v85);
    uint64_t v86 = sub_241CD6810();
    uint64_t v87 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v105, 1, 1, v86);
    sub_241A92CDC(0);
    uint64_t v90 = v97;
    uint64_t v89 = v98;
    BOOL v91 = (unsigned char *)(v98 + *(int *)(v88 + 52));
    swift_bridgeObjectRetain();
    sub_241B4A1A8(1, v84, v90, v87, v91);
    swift_release();

    *(void *)uint64_t v89 = v93;
    *(void *)(v89 + 8) = v81;
    *(unsigned char *)(v89 + 16) = 1;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v107, v76);
  }
  else
  {
    uint64_t v53 = sub_241CD7A10();
    uint64_t v54 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v104, 1, 1, v53);
    uint64_t v55 = sub_241CD6810();
    uint64_t v56 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v105, 1, 1, v55);
    uint64_t v57 = v97;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, v54, v57, v56, v10);
    sub_241CD89A0();
    uint64_t v58 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v25, 1, 1, v58);
    id v59 = v40;
    uint64_t v60 = sub_241CD8990();
    sub_241A92CDC(0);
    uint64_t v62 = v98;
    sub_241A3AB20((uint64_t)v10, v98 + *(int *)(v61 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    *(void *)uint64_t v62 = v60;
    *(void *)(v62 + 8) = 0;
    *(unsigned char *)(v62 + 16) = 1;
    sub_241A3A914((uint64_t)v10);
  }
}

void sub_241C96AE0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void *sub_241C96B04(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v21 = *v1;
  uint64_t v19 = sub_241CD7650();
  uint64_t v4 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_241CD7690();
  uint64_t v7 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)v1 + OBJC_IVAR____TtC9Summaries34WheelchairSettingGeneratorPipeline_context;
  uint64_t v11 = sub_241CD7740();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  uint64_t v22 = a1;
  uint64_t v13 = (void *)sub_241CD76E0();
  uint64_t v14 = qword_26B033770;
  id v15 = v13;
  if (v14 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v19);
  swift_bridgeObjectRetain();
  sub_241CD7680();

  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC9Summaries34WheelchairSettingGeneratorPipeline_domain, v9, v20);
  uint64_t v16 = v22;
  uint64_t v17 = sub_241C96DC4(v22);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v11);
  *(void *)((char *)v2 + OBJC_IVAR____TtC9Summaries34WheelchairSettingGeneratorPipeline_publisher) = v17;
  return v2;
}

uint64_t sub_241C96DC4(uint64_t a1)
{
  uint64_t v23 = sub_241CD7740();
  uint64_t v2 = *(void *)(v23 - 8);
  v22[1] = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v23);
  v22[0] = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C99214();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  uint64_t v26 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C99480();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  uint64_t v28 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BBE894();
  sub_241CD76A0();
  sub_241A311E0(v30, v30[3]);
  uint64_t v12 = sub_241CD7A40();
  swift_bridgeObjectRelease();
  uint64_t v29 = v12;
  sub_241B6F5C4(0);
  sub_241C99438((unint64_t *)&qword_26B038970, sub_241B6F5C4);
  uint64_t v13 = sub_241CDA660();
  swift_release();
  sub_241A31190((uint64_t)v30);
  v30[0] = v13;
  sub_241CDA4F0();
  sub_241C99300();
  sub_241C99438(&qword_26B0325C0, (void (*)(uint64_t))sub_241C99300);
  sub_241CDA840();
  swift_release();
  uint64_t v14 = v22[0];
  uint64_t v15 = v23;
  (*(void (**)(void, uint64_t, uint64_t))(v2 + 16))(v22[0], a1, v23);
  unint64_t v16 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v24;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v17 + v16, v14, v15);
  sub_241A372C4();
  sub_241C99438(&qword_26B032598, (void (*)(uint64_t))sub_241C99214);
  uint64_t v18 = v25;
  sub_241CDA6E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v18);
  sub_241C99438(&qword_268D43A48, (void (*)(uint64_t))sub_241C99480);
  uint64_t v19 = v27;
  uint64_t v20 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v19);
  return v20;
}

uint64_t sub_241C97234()
{
  return sub_241CDB250();
}

double sub_241C972C0@<D0>(void (*a1)(os_log_t, char *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v205 = a3;
  uint64_t v206 = a1;
  uint64_t v198 = a2;
  uint64_t v200 = a4;
  sub_241C99640(0, &qword_26B035540, MEMORY[0x263F45738], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  id v188 = ((char *)&v182 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  os_log_t v192 = (os_log_t)((char *)&v182 - v7);
  uint64_t v208 = sub_241CD79A0();
  uint64_t v199 = *(void *)(v208 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v208);
  v190 = (char *)&v182 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v197 = (char *)&v182 - v11;
  MEMORY[0x270FA5388](v10);
  os_log_t v207 = (os_log_t)((char *)&v182 - v12);
  uint64_t v13 = sub_241CD7740();
  uint64_t v203 = *(void *)(v13 - 8);
  uint64_t v204 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v195 = (char *)&v182 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v194 = (char *)&v182 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v189 = (uint8_t *)&v182 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v193 = (void (*)(char *, uint64_t, uint64_t))((char *)&v182 - v21);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v191 = (char *)&v182 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v182 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v196 = (char *)&v182 - v27;
  uint64_t v28 = sub_241CDA1A0();
  uint64_t v201 = *(void *)(v28 - 8);
  uint64_t v202 = v28;
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  id v31 = (char *)&v182 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  unsigned int v34 = (char *)&v182 - v33;
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  id v37 = (char *)&v182 - v36;
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  id v40 = (char *)&v182 - v39;
  uint64_t v41 = MEMORY[0x270FA5388](v38);
  unint64_t v43 = (char *)&v182 - v42;
  MEMORY[0x270FA5388](v41);
  uint64_t v45 = (uint64_t *)((char *)&v182 - v44);
  uint64_t v46 = sub_241CD7C30();
  uint64_t v47 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  id v49 = (NSObject **)((char *)&v182 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(NSObject **, void (*)(void, void), uint64_t))(v47 + 16))(v49, (void (*)(void, void))v206, v46);
  int v50 = (*(uint64_t (**)(NSObject **, uint64_t))(v47 + 88))(v49, v46);
  if (v50 == *MEMORY[0x263F458A8])
  {
    os_log_t v187 = v43;
    uint64_t v195 = v26;
    (*(void (**)(NSObject **, uint64_t))(v47 + 96))(v49, v46);
    uint64_t v51 = (char *)*v49;
    sub_241CDA0F0();
    uint64_t v52 = v203;
    uint64_t v53 = v204;
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v203 + 16);
    uint64_t v55 = v196;
    uint64_t v56 = v205;
    v194 = (char *)(v203 + 16);
    uint64_t v193 = v54;
    v54(v196, v205, v204);
    swift_bridgeObjectRetain_n();
    uint64_t v57 = sub_241CDA190();
    int v58 = sub_241CDB670();
    id v59 = v45;
    if (os_log_type_enabled(v57, (os_log_type_t)v58))
    {
      LODWORD(v188) = v58;
      uint64_t v60 = swift_slowAlloc();
      uint64_t v186 = swift_slowAlloc();
      v210[0] = v186;
      *(_DWORD *)uint64_t v60 = 136446466;
      uint64_t v61 = sub_241C98A8C();
      uint64_t v209 = sub_241A33FE4(v61, v62, v210);
      long long v185 = v210;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      uint64_t v196 = *(char **)(v52 + 8);
      ((void (*)(char *, uint64_t))v196)(v55, v53);
      uint64_t v189 = (uint8_t *)v60;
      *(_WORD *)(v60 + 12) = 2080;
      id v63 = v51;
      int64_t v64 = *((void *)v51 + 2);
      uint64_t v65 = MEMORY[0x263F8EE78];
      v190 = v63;
      if (v64)
      {
        unint64_t v183 = v57;
        uint64_t v184 = v59;
        uint64_t v209 = MEMORY[0x263F8EE78];
        sub_241A521D8(0, v64, 0);
        uint64_t v206 = *(void (**)(os_log_t, char *, uint64_t))(v199 + 16);
        unint64_t v66 = &v63[(*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80)];
        uint64_t v67 = *(void *)(v199 + 72);
        uint64_t v68 = (void (**)(os_log_t, uint64_t))(v199 + 8);
        uint64_t v69 = v208;
        do
        {
          os_log_t v70 = v207;
          v206(v207, v66, v69);
          uint64_t v71 = sub_241CD7930();
          uint64_t v73 = v72;
          (*v68)(v70, v69);
          uint64_t v65 = v209;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_241A521D8(0, *(void *)(v65 + 16) + 1, 1);
            uint64_t v65 = v209;
          }
          unint64_t v75 = *(void *)(v65 + 16);
          unint64_t v74 = *(void *)(v65 + 24);
          if (v75 >= v74 >> 1)
          {
            sub_241A521D8(v74 > 1, v75 + 1, 1);
            uint64_t v65 = v209;
          }
          *(void *)(v65 + 16) = v75 + 1;
          unint64_t v76 = v65 + 16 * v75;
          *(void *)(v76 + 32) = v71;
          *(void *)(v76 + 40) = v73;
          v66 += v67;
          --v64;
          uint64_t v69 = v208;
        }
        while (v64);
        uint64_t v125 = v200;
        uint64_t v53 = v204;
        id v59 = v184;
        uint64_t v57 = v183;
      }
      else
      {
        uint64_t v125 = v200;
        uint64_t v69 = v208;
      }
      id v136 = v189;
      uint64_t v137 = MEMORY[0x245636610](v65, MEMORY[0x263F8D310]);
      unint64_t v139 = v138;
      swift_bridgeObjectRelease();
      uint64_t v209 = sub_241A33FE4(v137, v139, v210);
      sub_241CDBBF0();
      uint64_t v51 = v190;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v57, (os_log_type_t)v188, "[%{public}s] Processing %s initial models", v136, 0x16u);
      uint64_t v140 = v186;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v140, -1, -1);
      MEMORY[0x245637F20](v136, -1, -1);

      uint64_t v206 = *(void (**)(os_log_t, char *, uint64_t))(v201 + 8);
      ((void (*)(uint64_t *, uint64_t))v206)(v59, v202);
      uint64_t v105 = v199;
      uint64_t v106 = v197;
      os_log_t v107 = v192;
      uint64_t v108 = v195;
      unint64_t v109 = v187;
      uint64_t v56 = v205;
      if (!*((void *)v51 + 2)) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v196 = *(char **)(v52 + 8);
      ((void (*)(char *, uint64_t))v196)(v55, v53);

      swift_bridgeObjectRelease_n();
      uint64_t v206 = *(void (**)(os_log_t, char *, uint64_t))(v201 + 8);
      ((void (*)(uint64_t *, uint64_t))v206)(v45, v202);
      uint64_t v105 = v199;
      uint64_t v125 = v200;
      uint64_t v69 = v208;
      uint64_t v106 = v197;
      os_log_t v107 = v192;
      uint64_t v108 = v195;
      unint64_t v109 = v187;
      if (!*((void *)v51 + 2))
      {
LABEL_32:
        uint64_t v110 = 1;
LABEL_33:
        (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v107, v110, 1, v69);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(os_log_t, uint64_t, uint64_t))(v105 + 48))(v107, 1, v69) != 1)
        {
          (*(void (**)(char *, os_log_t, uint64_t))(v105 + 32))(v106, v107, v69);
          sub_241CDA0F0();
          v193(v108, v56, v53);
          id v141 = sub_241CDA190();
          os_log_type_t v142 = sub_241CDB670();
          if (os_log_type_enabled(v141, v142))
          {
            uint64_t v143 = (uint8_t *)swift_slowAlloc();
            uint64_t v144 = swift_slowAlloc();
            v210[0] = v144;
            *(_DWORD *)uint64_t v143 = 136446210;
            uint64_t v145 = sub_241C98A8C();
            uint64_t v209 = sub_241A33FE4(v145, v146, v210);
            uint64_t v125 = v200;
            sub_241CDBBF0();
            swift_bridgeObjectRelease();
            ((void (*)(char *, uint64_t))v196)(v108, v53);
            _os_log_impl(&dword_241A23000, v141, v142, "[%{public}s] Received initial wheelchair model, submitting generator", v143, 0xCu);
            swift_arrayDestroy();
            uint64_t v147 = v144;
            uint64_t v105 = v199;
            MEMORY[0x245637F20](v147, -1, -1);
            unint64_t v148 = v143;
            uint64_t v69 = v208;
            MEMORY[0x245637F20](v148, -1, -1);

            unint64_t v149 = v187;
          }
          else
          {
            ((void (*)(char *, uint64_t))v196)(v108, v53);

            unint64_t v149 = v109;
          }
          ((void (*)(char *, uint64_t))v206)(v149, v202);
          uint64_t v150 = (uint64_t)v191;
          v193(v191, v56, v53);
          os_log_t v151 = v207;
          uint64_t v152 = v197;
          (*(void (**)(os_log_t, char *, uint64_t))(v105 + 16))(v207, v197, v69);
LABEL_50:
          uint64_t v179 = type metadata accessor for WheelchairSettingGenerator();
          swift_allocObject();
          unint64_t v180 = sub_241BE6960(v150, (uint64_t)v151);
          *(void *)(v125 + 24) = v179;
          *(void *)(v125 + 32) = sub_241C99438(&qword_268D43A50, (void (*)(uint64_t))type metadata accessor for WheelchairSettingGenerator);
          *(void *)uint64_t v125 = v180;
          (*(void (**)(char *, uint64_t))(v105 + 8))(v152, v69);
          return result;
        }
        goto LABEL_43;
      }
    }
    (*(void (**)(os_log_t, char *, uint64_t))(v105 + 16))(v107, &v51[(*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80)], v69);
    uint64_t v110 = 0;
    goto LABEL_33;
  }
  id v77 = v193;
  id v78 = v194;
  uint64_t v79 = v195;
  uint64_t v197 = v40;
  uint64_t v186 = (uint64_t)v37;
  uint64_t v80 = v205;
  if (v50 == *MEMORY[0x263F45880])
  {
    (*(void (**)(NSObject **, uint64_t))(v47 + 96))(v49, v46);
    uint64_t v81 = *v49;
    id v82 = v197;
    sub_241CDA0F0();
    uint64_t v84 = v203;
    uint64_t v83 = v204;
    uint64_t v85 = v80;
    uint64_t v195 = *(char **)(v203 + 16);
    uint64_t v196 = (char *)(v203 + 16);
    ((void (*)(void, uint64_t, uint64_t))v195)(v77, v80, v204);
    swift_bridgeObjectRetain_n();
    uint64_t v86 = sub_241CDA190();
    int v87 = sub_241CDB670();
    if (os_log_type_enabled(v86, (os_log_type_t)v87))
    {
      LODWORD(v187) = v87;
      os_log_t v192 = v86;
      uint64_t v88 = swift_slowAlloc();
      long long v185 = (uint64_t *)swift_slowAlloc();
      v210[0] = (uint64_t)v185;
      *(_DWORD *)uint64_t v88 = 136446466;
      uint64_t v89 = sub_241C98A8C();
      uint64_t v209 = sub_241A33FE4(v89, v90, v210);
      uint64_t v184 = v210;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      v194 = *(char **)(v84 + 8);
      ((void (*)(void (*)(char *, uint64_t, uint64_t), uint64_t))v194)(v77, v83);
      uint64_t v193 = (void (*)(char *, uint64_t, uint64_t))v88;
      *(_WORD *)(v88 + 12) = 2080;
      int64_t isa = (int64_t)v81[2].isa;
      uint64_t v92 = MEMORY[0x263F8EE78];
      uint64_t v125 = v200;
      if (isa)
      {
        uint64_t v209 = MEMORY[0x263F8EE78];
        sub_241A521D8(0, isa, 0);
        uint64_t v206 = *(void (**)(os_log_t, char *, uint64_t))(v199 + 16);
        unint64_t v93 = (*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80);
        unint64_t v183 = v81;
        id v94 = (char *)v81 + v93;
        uint64_t v95 = *(void *)(v199 + 72);
        uint64_t v96 = (void (**)(os_log_t, uint64_t))(v199 + 8);
        do
        {
          os_log_t v98 = v207;
          uint64_t v97 = v208;
          v206(v207, v94, v208);
          uint64_t v99 = sub_241CD7930();
          uint64_t v101 = v100;
          (*v96)(v98, v97);
          uint64_t v92 = v209;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_241A521D8(0, *(void *)(v92 + 16) + 1, 1);
            uint64_t v92 = v209;
          }
          unint64_t v103 = *(void *)(v92 + 16);
          unint64_t v102 = *(void *)(v92 + 24);
          if (v103 >= v102 >> 1)
          {
            sub_241A521D8(v102 > 1, v103 + 1, 1);
            uint64_t v92 = v209;
          }
          *(void *)(v92 + 16) = v103 + 1;
          unint64_t v104 = v92 + 16 * v103;
          *(void *)(v104 + 32) = v99;
          *(void *)(v104 + 40) = v101;
          v94 += v95;
          --isa;
        }
        while (isa);
        uint64_t v125 = v200;
        uint64_t v85 = v205;
        id v82 = v197;
        uint64_t v81 = v183;
      }
      unint64_t v153 = (uint8_t *)v193;
      uint64_t v154 = MEMORY[0x245636610](v92, MEMORY[0x263F8D310]);
      unint64_t v156 = v155;
      swift_bridgeObjectRelease();
      uint64_t v209 = sub_241A33FE4(v154, v156, v210);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v157 = v192;
      _os_log_impl(&dword_241A23000, v192, (os_log_type_t)v187, "[%{public}s] Processing %s updateOrCreate models", v153, 0x16u);
      v158 = v185;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v158, -1, -1);
      MEMORY[0x245637F20](v153, -1, -1);

      uint64_t v206 = *(void (**)(os_log_t, char *, uint64_t))(v201 + 8);
      ((void (*)(char *, uint64_t))v206)(v82, v202);
    }
    else
    {
      v194 = *(char **)(v84 + 8);
      ((void (*)(void (*)(char *, uint64_t, uint64_t), uint64_t))v194)(v77, v83);

      swift_bridgeObjectRelease_n();
      uint64_t v206 = *(void (**)(os_log_t, char *, uint64_t))(v201 + 8);
      ((void (*)(char *, uint64_t))v206)(v82, v202);
      uint64_t v125 = v200;
    }
    uint64_t v69 = v208;
    Class v159 = v81[2].isa;
    uint64_t v105 = v199;
    uint64_t v160 = v190;
    uint64_t v161 = v81;
    uint64_t v162 = v189;
    os_log_t v107 = v188;
    uint64_t v163 = v186;
    if (v159)
    {
      (*(void (**)(NSObject *, unint64_t, uint64_t))(v199 + 16))(v188, (unint64_t)v161+ ((*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80)), v208);
      uint64_t v164 = 0;
    }
    else
    {
      uint64_t v164 = 1;
    }
    (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v105 + 56))(v107, v164, 1, v69);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(os_log_t, uint64_t, uint64_t))(v105 + 48))(v107, 1, v69) != 1)
    {
      (*(void (**)(char *, os_log_t, uint64_t))(v105 + 32))(v160, v107, v69);
      sub_241CDA0F0();
      uint64_t v166 = v204;
      ((void (*)(uint8_t *, uint64_t, uint64_t))v195)(v162, v85, v204);
      uint64_t v167 = v163;
      uint64_t v168 = sub_241CDA190();
      os_log_type_t v169 = sub_241CDB670();
      if (os_log_type_enabled(v168, v169))
      {
        long long v170 = (uint8_t *)swift_slowAlloc();
        uint64_t v171 = swift_slowAlloc();
        v210[0] = v171;
        *(_DWORD *)long long v170 = 136446210;
        uint64_t v172 = sub_241C98A8C();
        uint64_t v209 = sub_241A33FE4(v172, v173, v210);
        uint64_t v125 = v200;
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        ((void (*)(uint8_t *, uint64_t))v194)(v162, v166);
        _os_log_impl(&dword_241A23000, v168, v169, "[%{public}s] Received updateOrCreate wheelchair model, submitting generator", v170, 0xCu);
        swift_arrayDestroy();
        uint64_t v174 = v171;
        uint64_t v105 = v199;
        MEMORY[0x245637F20](v174, -1, -1);
        v175 = v170;
        uint64_t v69 = v208;
        MEMORY[0x245637F20](v175, -1, -1);

        uint64_t v176 = v186;
      }
      else
      {
        ((void (*)(uint8_t *, uint64_t))v194)(v162, v166);

        uint64_t v176 = v167;
      }
      ((void (*)(uint64_t, uint64_t))v206)(v176, v202);
      uint64_t v178 = v166;
      uint64_t v150 = (uint64_t)v191;
      ((void (*)(char *, uint64_t, uint64_t))v195)(v191, v85, v178);
      os_log_t v151 = v207;
      uint64_t v152 = v190;
      (*(void (**)(os_log_t, char *, uint64_t))(v105 + 16))(v207, v190, v69);
      goto LABEL_50;
    }
LABEL_43:
    sub_241C996A4((uint64_t)v107);
    double result = 0.0;
    *(_OWORD *)uint64_t v125 = 0u;
    *(_OWORD *)(v125 + 16) = 0u;
    *(void *)(v125 + 32) = 0;
    return result;
  }
  if (v50 == *MEMORY[0x263F458A0])
  {
    (*(void (**)(NSObject **, uint64_t))(v47 + 96))(v49, v46);
    v111 = *v49;
    uint64_t v112 = v34;
    sub_241CDA0F0();
    uint64_t v113 = v203;
    uint64_t v114 = v204;
    uint64_t v115 = v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v203 + 16))(v78, v80, v204);
    swift_bridgeObjectRetain();
    unint64_t v116 = sub_241CDA190();
    os_log_type_t v117 = sub_241CDB670();
    if (os_log_type_enabled(v116, v117))
    {
      uint64_t v118 = swift_slowAlloc();
      uint64_t v208 = swift_slowAlloc();
      v210[0] = v208;
      *(_DWORD *)uint64_t v118 = 136446466;
      os_log_t v207 = v116;
      uint64_t v119 = sub_241C98A8C();
      uint64_t v209 = sub_241A33FE4(v119, v120, v210);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v204);
      *(_WORD *)(v118 + 12) = 2048;
      uint64_t v121 = (uint64_t)v111[2].isa;
      swift_bridgeObjectRelease();
      uint64_t v209 = v121;
      uint64_t v122 = v200;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      os_log_t v123 = v207;
      _os_log_impl(&dword_241A23000, v207, v117, "[%{public}s] Processing %ld delete identifiers, resetting wheelchair", (uint8_t *)v118, 0x16u);
      uint64_t v124 = v208;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v124, -1, -1);
      MEMORY[0x245637F20](v118, -1, -1);

      (*(void (**)(char *, uint64_t))(v201 + 8))(v112, v202);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v114);

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v201 + 8))(v112, v202);
      uint64_t v122 = v200;
    }
  }
  else
  {
    if (v50 != *MEMORY[0x263F45888])
    {
      v177 = (_OWORD *)v200;
      *(void *)(v200 + 32) = 0;
      _OWORD *v177 = 0u;
      v177[1] = 0u;
      (*(void (**)(NSObject **, uint64_t))(v47 + 8))(v49, v46);
      return result;
    }
    uint64_t v126 = v31;
    sub_241CDA0F0();
    uint64_t v127 = v203;
    uint64_t v128 = v204;
    (*(void (**)(char *, uint64_t, uint64_t))(v203 + 16))(v79, v80, v204);
    uint64_t v129 = sub_241CDA190();
    os_log_type_t v130 = sub_241CDB670();
    if (os_log_type_enabled(v129, v130))
    {
      unint64_t v131 = (uint8_t *)swift_slowAlloc();
      uint64_t v132 = swift_slowAlloc();
      uint64_t v208 = (uint64_t)v126;
      uint64_t v133 = v132;
      v210[0] = v132;
      *(_DWORD *)unint64_t v131 = 136446210;
      uint64_t v134 = sub_241C98A8C();
      uint64_t v209 = sub_241A33FE4(v134, v135, v210);
      uint64_t v122 = v200;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v127 + 8))(v79, v204);
      _os_log_impl(&dword_241A23000, v129, v130, "[%{public}s] Received delete all models, resetting wheelchair", v131, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v133, -1, -1);
      MEMORY[0x245637F20](v131, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v208, v202);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v127 + 8))(v79, v128);

      (*(void (**)(char *, uint64_t))(v201 + 8))(v31, v202);
      uint64_t v122 = v200;
    }
  }
  sub_241CD76B0();
  sub_241A311E0(v210, v210[3]);
  os_log_t v181 = (void *)sub_241CD75B0();
  sub_241C98C10(v181);

  sub_241A31190((uint64_t)v210);
  *(void *)(v122 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)uint64_t v122 = 0u;
  *(_OWORD *)(v122 + 16) = 0u;
  return result;
}

uint64_t sub_241C98A8C()
{
  uint64_t v1 = sub_241CD6D70();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = v0;
  swift_getMetatypeMetadata();
  v10[0] = sub_241CDB120();
  v10[1] = v5;
  sub_241CDB180();
  uint64_t v6 = (void *)sub_241CD76E0();
  uint64_t v7 = (void *)sub_241CD73C0();

  if (v7)
  {
    id v8 = objc_msgSend(v7, sel_identifier);

    sub_241CD6D50();
    sub_241CD6D20();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return v10[0];
}

id sub_241C98C10(void *a1)
{
  uint64_t v2 = v1;
  v38[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_241CD6D70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v9 = *(uint64_t (***)(char *, uint64_t))(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v37 = 0;
  unsigned int v12 = objc_msgSend(a1, sel__setWheelchairUse_error_, 0, &v37);
  id v13 = v37;
  if (v12)
  {
    return v13;
  }
  else
  {
    uint64_t v35 = v5;
    uint64_t v36 = (uint64_t (**)(char *, uint64_t))v37;
    id v15 = v37;
    uint64_t v16 = (void *)sub_241CD6A40();

    swift_willThrow();
    sub_241CDA0F0();
    id v17 = a1;
    uint64_t v18 = sub_241CDA190();
    os_log_type_t v19 = sub_241CDB650();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v36 = v9;
      uint64_t v22 = v21;
      uint64_t v34 = swift_slowAlloc();
      id v37 = v2;
      v38[0] = v34;
      *(_DWORD *)uint64_t v22 = 136446466;
      int v32 = v20;
      swift_getMetatypeMetadata();
      uint64_t v23 = sub_241CDB120();
      id v33 = v16;
      id v37 = (id)sub_241A33FE4(v23, v24, v38);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      id v25 = objc_msgSend(v17, sel_profileIdentifier, v22 + 14);
      id v26 = objc_msgSend(v25, sel_identifier);

      sub_241CD6D50();
      uint64_t v27 = sub_241CD6D20();
      unint64_t v29 = v28;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v4);
      id v37 = (id)sub_241A33FE4(v27, v29, v38);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v18, (os_log_type_t)v32, "[%{public}s] Failed to reset wheelchair use for profile %{public}s", (uint8_t *)v22, 0x16u);
      uint64_t v30 = v34;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v30, -1, -1);
      MEMORY[0x245637F20](v22, -1, -1);

      return (id)v36[1](v11, v8);
    }
    else
    {

      return (id)v9[1](v11, v8);
    }
  }
}

uint64_t sub_241C99040()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries34WheelchairSettingGeneratorPipeline_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Summaries34WheelchairSettingGeneratorPipeline_context;
  uint64_t v4 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_241C99134()
{
  return type metadata accessor for WheelchairSettingGeneratorPipeline();
}

uint64_t type metadata accessor for WheelchairSettingGeneratorPipeline()
{
  uint64_t result = qword_268D43A30;
  if (!qword_268D43A30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241C99188()
{
  return swift_retain();
}

uint64_t sub_241C9919C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries34WheelchairSettingGeneratorPipeline_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_241C99214()
{
  if (!qword_26B0325A0)
  {
    sub_241C99300();
    sub_241B6F5C4(255);
    sub_241C99438(&qword_26B0325C0, (void (*)(uint64_t))sub_241C99300);
    sub_241C99438((unint64_t *)&qword_26B038970, sub_241B6F5C4);
    unint64_t v0 = sub_241CDA490();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0325A0);
    }
  }
}

void sub_241C99300()
{
  if (!qword_26B0325C8)
  {
    sub_241C99640(255, &qword_26B034C38, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    sub_241C993B0();
    unint64_t v0 = sub_241CDA4A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0325C8);
    }
  }
}

unint64_t sub_241C993B0()
{
  unint64_t result = qword_26B034C40;
  if (!qword_26B034C40)
  {
    sub_241C99640(255, &qword_26B034C38, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B034C40);
  }
  return result;
}

uint64_t sub_241C99438(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241C99480()
{
  if (!qword_268D43A40)
  {
    sub_241C99214();
    sub_241A372C4();
    sub_241C99438(&qword_26B032598, (void (*)(uint64_t))sub_241C99214);
    unint64_t v0 = sub_241CDA370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43A40);
    }
  }
}

uint64_t sub_241C9952C()
{
  uint64_t v1 = sub_241CD7740();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

double sub_241C995BC@<D0>(void (*a1)(os_log_t, char *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_241CD7740() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_241C972C0(a1, v6, v7, a2);
}

void sub_241C99640(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241C996A4(uint64_t a1)
{
  sub_241C99640(0, &qword_26B035540, MEMORY[0x263F45738], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241C99730@<X0>(uint64_t a1@<X8>)
{
  v15[1] = a1;
  uint64_t v1 = sub_241CD6D00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - v5;
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)v15 - v7;
  uint64_t v9 = sub_241CD6810();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unsigned int v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD6770();
  sub_241CD67E0();
  sub_241CD6C90();
  id v13 = *(void (**)(char *, uint64_t))(v2 + 8);
  v13(v6, v1);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v6, v8, v1);
  sub_241CD67B0();
  sub_241CD67C0();
  v13(v8, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_241C9996C@<X0>(uint64_t a1@<X8>)
{
  return sub_241C99730(a1);
}

unint64_t sub_241C99984(void *a1)
{
  id v1 = objc_msgSend(a1, sel_statistics);
  sub_241C99D54();
  unint64_t v2 = sub_241CDB2C0();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  unint64_t result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    id v5 = (id)MEMORY[0x245637160](result, v2);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v2 + 8 * result + 32);
LABEL_8:
    uint64_t v3 = (uint64_t)v5;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_241C99A70(uint64_t a1, char *a2)
{
  uint64_t v22 = a1;
  uint64_t v5 = sub_241CD9ED0();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD9D00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  id v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v21 - v16;
  sub_241A7A618(a1, (uint64_t)&v21 - v16);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v11, a2, v8);
  v18((char *)(v2 + qword_26B0411F0), v11, v8);
  sub_241A7A618((uint64_t)v17, (uint64_t)v15);
  sub_241CD9EC0();
  os_log_type_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v11, v8);
  sub_241A3F384((uint64_t)v17);
  sub_241A7A6EC((uint64_t)v15, v2 + qword_26B041200);
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v2 + qword_26B0411F8, v7, v24);
  v19(a2, v8);
  sub_241A3F384(v22);
  return v2;
}

uint64_t type metadata accessor for SleepingWristTemperatureStatisticsCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B031EE8;
  if (!qword_26B031EE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_241C99D54()
{
  unint64_t result = qword_26B038E68;
  if (!qword_26B038E68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B038E68);
  }
  return result;
}

uint64_t sub_241C99D98(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v62 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35CD4(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v52 - v10;
  uint64_t v12 = sub_241CD6810();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35CD4(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v8);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v52 - v17;
  sub_241A35CD4(0, &qword_26B032050, MEMORY[0x263F45780], v8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)v52 - v23;
  if (a1)
  {
    int v58 = v22;
    id v59 = v18;
    type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
    id v25 = a1;
    sub_241CD9E50();
    sub_241A313AC(0, &qword_26B034E48);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v15, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    id v26 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v11, 1, 0);
    uint64_t v27 = (*(uint64_t (**)(id, uint64_t, id))(v3 + 120))(v25, a2, v26);
    if (v27)
    {
      uint64_t v28 = v27;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    else
    {
      id v57 = v26;
      uint64_t v31 = v62;
      sub_241CDA140();
      id v32 = v25;
      id v33 = sub_241CDA190();
      os_log_type_t v34 = sub_241CDB650();
      int v35 = v34;
      BOOL v36 = os_log_type_enabled(v33, v34);
      id v56 = v32;
      if (v36)
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        uint64_t v63 = v55;
        uint64_t v64 = v3;
        *(_DWORD *)uint64_t v37 = 136315394;
        os_log_t v54 = v33;
        swift_getMetatypeMetadata();
        uint64_t v38 = sub_241CDB120();
        uint64_t v64 = sub_241A33FE4(v38, v39, &v63);
        int v53 = v35;
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v37 + 12) = 2080;
        v52[1] = v37 + 14;
        id v40 = v32;
        id v41 = objc_msgSend(v40, sel_description);
        uint64_t v42 = sub_241CDB0D0();
        unint64_t v44 = v43;

        uint64_t v64 = sub_241A33FE4(v42, v44, &v63);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        os_log_t v45 = v54;
        _os_log_impl(&dword_241A23000, v54, (os_log_type_t)v53, "[%s]: Unsupported most recent sample type: %s", (uint8_t *)v37, 0x16u);
        uint64_t v46 = v55;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v46, -1, -1);
        MEMORY[0x245637F20](v37, -1, -1);

        (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v61);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v60 + 8))(v31, v61);
      }
      uint64_t v48 = (uint64_t)v58;
      uint64_t v47 = (uint64_t)v59;
      sub_241CD7A80();
      uint64_t v49 = sub_241CD7AB0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v24, 0, 1, v49);
      sub_241A313AC(0, &qword_26B030440);
      uint64_t v50 = sub_241CD9970();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v47, 1, 1, v50);
      sub_241C9B48C((uint64_t)v24, v48, &qword_26B032050, MEMORY[0x263F45780]);
      uint64_t v28 = (uint64_t)sub_241A53EB0(0, 0xF000000000000000, 11, v47, v48, 0, 0);
      sub_241A3F30C((uint64_t)v24);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  else
  {
    sub_241CD7A80();
    uint64_t v29 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v24, 0, 1, v29);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v30 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v18, 1, 1, v30);
    sub_241C9B48C((uint64_t)v24, (uint64_t)v22, &qword_26B032050, MEMORY[0x263F45780]);
    uint64_t v28 = (uint64_t)sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v18, (uint64_t)v22, 0, 0);
    sub_241A3F30C((uint64_t)v24);
  }
  return v28;
}

uint64_t *sub_241C9A534(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = *v3;
  uint64_t v32 = sub_241CD7650();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_241CD7690();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a1;
  id v29 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v11 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v37 = inited;
  sub_241CDB2E0();
  uint64_t v12 = *(int *)(v11 + 40);
  uint64_t v35 = a2;
  char v13 = *(unsigned char *)(a2 + v12);
  sub_241A35CD4(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_241CD73B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  if (v13)
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v18 + v17, *MEMORY[0x263F454D0], v14);
  }
  else
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB720;
    unint64_t v20 = v18 + v17;
    uint64_t v21 = *(void (**)(unint64_t, void, uint64_t))(v15 + 104);
    v21(v20, *MEMORY[0x263F45520], v14);
    v21(v20 + v16, *MEMORY[0x263F45538], v14);
  }
  id v19 = v29;
  sub_241C5D74C(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v22 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v7, *MEMORY[0x263F45690], v32);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries57MostRecentSampleCurrentValueSummarySharableModelGenerator_domain, v9, v33);
  uint64_t v23 = sub_241C9ACAC(&qword_26B0300F0, (void (*)(uint64_t))type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  uint64_t v26 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v36, v35, v34, v23);
  sub_241C9AD78(v25);
  uint64_t v27 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v24, v27);
  v3[2] = v26;
  return v3;
}

uint64_t sub_241C9A9E0@<X0>(uint64_t a1@<X8>)
{
  return sub_241C9B48C(v1, a1, &qword_26B038F10, MEMORY[0x263F062D0]);
}

id sub_241C9AA1C@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

id sub_241C9AA28(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a2
     + *(int *)(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0) + 32);

  return sub_241AF1CC8(a1, v5, a3);
}

uint64_t sub_241C9AA80()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries57MostRecentSampleCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241C9AB28()
{
  return type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B038D78);
}

uint64_t sub_241C9AB50()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_241C9AB64(void **a1, uint64_t a2)
{
  return sub_241C99D98(*a1, a2);
}

uint64_t sub_241C9AB6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries57MostRecentSampleCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

_UNKNOWN **sub_241C9ABE4()
{
  return &off_26F5C7D30;
}

uint64_t sub_241C9ABF0(uint64_t a1)
{
  uint64_t result = sub_241C9ACAC(&qword_26B038D68, (void (*)(uint64_t))type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241C9AC48()
{
  return &off_26F5C7D78;
}

uint64_t sub_241C9AC54(uint64_t a1)
{
  uint64_t result = sub_241C9ACAC(&qword_26B038D70, (void (*)(uint64_t))type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241C9ACAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_241C9ACF4()
{
  return &off_26F5C7D90;
}

uint64_t sub_241C9AD00(uint64_t a1)
{
  uint64_t result = sub_241C9ACAC(&qword_26B034A60, (void (*)(uint64_t))type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B038CC0);
}

uint64_t sub_241C9AD78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241C9ADD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_241CD7650();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD7690();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C660F4();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v35 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = self;
  uint64_t v12 = (void *)sub_241CD6790();
  id v13 = objc_msgSend(v11, sel_predicateForSamplesWithinDateInterval_options_, v12, 0);

  sub_241CD76B0();
  sub_241A311E0(v46, v46[3]);
  uint64_t v14 = (void *)sub_241CD75B0();
  uint64_t v15 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v16 = (void *)sub_241CD7770();
  id v17 = v13;
  uint64_t v18 = sub_241CDB5D0();

  id v36 = v17;
  sub_241A31190((uint64_t)v46);
  uint64_t v45 = v18;
  sub_241CD7730();
  id v19 = (void *)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v44 = inited;
  sub_241CDB2E0();
  LOBYTE(v13) = *(unsigned char *)(a3 + *(int *)(v15 + 40));
  sub_241A35CD4(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v21 = sub_241CD73B0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 72);
  unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = swift_allocObject();
  if (v13)
  {
    *(_OWORD *)(v25 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v25 + v24, *MEMORY[0x263F454D0], v21);
  }
  else
  {
    *(_OWORD *)(v25 + 16) = xmmword_241CEB720;
    unint64_t v27 = v25 + v24;
    uint64_t v28 = *(void (**)(unint64_t, void, uint64_t))(v22 + 104);
    v28(v27, *MEMORY[0x263F45520], v21);
    v28(v27 + v23, *MEMORY[0x263F45538], v21);
  }
  id v26 = v19;
  sub_241C5D74C(v25);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v29 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v29);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v37, *MEMORY[0x263F45690], v39);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241A5B1CC();
  sub_241C9ACAC(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
  uint64_t v30 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_241A31190((uint64_t)v46);
  swift_release();
  v46[0] = v30;
  sub_241C9B41C(0, (unint64_t *)&qword_26B032CE0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  uint64_t v31 = v35;
  sub_241CDA710();
  swift_release();
  sub_241C9ACAC(&qword_26B038930, (void (*)(uint64_t))sub_241C660F4);
  uint64_t v32 = v43;
  uint64_t v33 = sub_241CDA6D0();

  (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v32);
  return v33;
}

void sub_241C9B41C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241A313AC(255, &qword_26B0304D8);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241C9B48C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A35CD4(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t *sub_241C9B50C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD6810();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_241A35CD4(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    id v13 = (char *)a2 + v11;
    uint64_t v14 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    id v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[8];
    unint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_241CD9ED0();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    id v26 = *(void **)((char *)a2 + v24);
    *(uint64_t *)((char *)a1 + v24) = (uint64_t)v26;
    *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
    id v27 = v26;
  }
  return a1;
}

void sub_241C9B784(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_241CD9ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = *(void **)(a1 + a2[9]);
}

char *sub_241C9B8E0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A35CD4(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_241CD9ED0();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = *(void **)&a2[v22];
  *(void *)&a1[v22] = v24;
  a1[v23] = a2[v23];
  id v25 = v24;
  return a1;
}

char *sub_241C9BB08(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A35CD4(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  a1[a3[6]] = a2[a3[6]];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_241CD9ED0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = *(void **)&a2[v23];
  id v25 = *(void **)&a1[v23];
  *(void *)&a1[v23] = v24;
  id v26 = v24;

  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *sub_241C9BDA0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A35CD4(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_241CD9ED0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v18] = a2[v18];
  return a1;
}

char *sub_241C9BFA0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A35CD4(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_241CD9ED0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  uint64_t v25 = a3[9];
  id v26 = *(void **)&a1[v25];
  *(void *)&a1[v25] = *(void *)&a2[v25];

  a1[a3[10]] = a2[a3[10]];
  return a1;
}

uint64_t sub_241C9C220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C9C234);
}

uint64_t sub_241C9C234(uint64_t a1, uint64_t a2, int *a3)
{
  sub_241A35CD4(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD77C0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[7] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_241CD9ED0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_241C9C3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C9C3FC);
}

uint64_t sub_241C9C3FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_241A35CD4(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_241CD77C0();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_241CD9ED0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_241C9C5B0()
{
  sub_241A35CD4(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_241CD77C0();
    if (v1 <= 0x3F)
    {
      sub_241CD9ED0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_241C9C708()
{
  sub_241C9C978();
  unint64_t v1 = *(void **)(v0 + 40);
  if (v1)
  {
    id v2 = *(id *)(v0 + 40);
  }
  else
  {
    if (qword_26B038428 != -1) {
      swift_once();
    }
    id v2 = (id)qword_26B0413A0;
    unint64_t v1 = 0;
  }
  id v3 = v1;
  uint64_t v4 = sub_241CD69E0();
  uint64_t v6 = v5;

  uint64_t v7 = *(void **)(v0 + 40);
  if (v7)
  {
    id v8 = *(id *)(v0 + 40);
  }
  else
  {
    if (qword_26B038428 != -1) {
      swift_once();
    }
    id v8 = (id)qword_26B0413A0;
    uint64_t v7 = 0;
  }
  id v9 = v7;
  uint64_t v10 = sub_241CD69E0();
  uint64_t v12 = v11;

  sub_241A313AC(0, &qword_268D43908);
  uint64_t v13 = (void *)sub_241CDBB20();
  uint64_t v14 = (void *)sub_241CDB090();
  id v15 = objc_msgSend(self, sel_imageNamed_inBundle_, v14, v13, 0xE000000000000000);

  if (!v15) {
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }

  return MEMORY[0x270F32468](v4, v6, v10, v12, v15);
}

uint64_t sub_241C9C978()
{
  uint64_t v1 = v0;
  sub_241C9D8C8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD8DD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241B768F4();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C9D968();
  uint64_t result = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v1 + 32))
  {
    uint64_t v27 = v11;
    uint64_t v19 = *MEMORY[0x263F444B0];
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
    uint64_t v28 = result;
    uint64_t v29 = v16;
    v20(v8, v19, v5);
    uint64_t v21 = (void *)sub_241CD9180();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    id v30 = v21;
    sub_241A6853C();
    sub_241C9D920(&qword_26B02EA48, 255, (void (*)(uint64_t))sub_241A6853C);
    sub_241CDA7F0();
    swift_release();
    id v30 = *(id *)(v1 + 24);
    id v22 = v30;
    uint64_t v23 = sub_241CDB8A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v4, 1, 1, v23);
    sub_241A313AC(0, &qword_26B0303B8);
    sub_241C9D920(&qword_26B031B90, 255, (void (*)(uint64_t))sub_241B768F4);
    sub_241AAD6A4();
    id v24 = v22;
    sub_241CDA7E0();
    sub_241AAD7BC((uint64_t)v4);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v10);
    swift_allocObject();
    swift_weakInit();
    sub_241C9D920(&qword_268D43A78, 255, (void (*)(uint64_t))sub_241C9D968);
    uint64_t v25 = v28;
    uint64_t v26 = sub_241CDA820();
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v25);
    *(void *)(v1 + 32) = v26;
    return swift_release();
  }
  return result;
}

uint64_t sub_241C9CDE8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result + 48;
    swift_beginAccess();
    if (MEMORY[0x245638000](v1))
    {
      swift_getObjectType();
      sub_241C9D920((unint64_t *)&qword_268D43938, v2, (void (*)(uint64_t))type metadata accessor for TrendsNotificationAdvertisableFeatureSource);
      sub_241C9CEF0();
      sub_241CD81E0();
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

BOOL sub_241C9CEF0()
{
  uint64_t v0 = sub_241CDA1A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241CD8DD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F444B0], v4);
  char v8 = sub_241CD9160();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    sub_241CDA110();
    uint64_t v9 = sub_241CDA190();
    os_log_type_t v10 = sub_241CDB670();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v17 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      v16[1] = v11 + 4;
      uint64_t v13 = sub_241CDC270();
      v16[2] = sub_241A33FE4(v13, v14, &v17);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v9, v10, "[%s] notifications already enabled, not advertising", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v12, -1, -1);
      MEMORY[0x245637F20](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return (v8 & 1) == 0;
}

uint64_t sub_241C9D1C8()
{
  swift_release();
  sub_241BF7B60((uint64_t)(v0 + 6));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TrendsNotificationAdvertisableFeatureSource()
{
  return self;
}

uint64_t sub_241C9D244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F435F8];
  uint64_t v3 = sub_241CD7F40();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_241C9D2B8()
{
  swift_beginAccess();
  return MEMORY[0x245638000](v0 + 48);
}

uint64_t sub_241C9D300(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 56) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_241C9D364(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x245638000](v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  v3[3] = v4;
  v3[4] = v5;
  return sub_241C9D3E4;
}

void sub_241C9D3E4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 56) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_241C9D46C(void (*a1)(BOOL *))
{
  sub_241C9D7CC(0, &qword_268D43A68);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (BOOL *)&v6 - v3;
  sub_241C9C978();
  *uint64_t v4 = sub_241C9CEF0();
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_241C9D86C((uint64_t)v4, &qword_268D43A68);
}

uint64_t sub_241C9D54C(void (*a1)(char *))
{
  sub_241C9D7CC(0, &qword_268D43A58);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v6 - v3;
  swift_storeEnumTagMultiPayload();
  a1(v4);
  return sub_241C9D86C((uint64_t)v4, &qword_268D43A58);
}

uint64_t sub_241C9D610(uint64_t a1, void (*a2)(char *))
{
  sub_241C9D7CC(0, &qword_268D43A58);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v11 - v4;
  uint64_t v6 = sub_241CD8DD0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C9C978();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F444B0], v6);
  sub_241CD9170();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_storeEnumTagMultiPayload();
  a2(v5);
  return sub_241C9D86C((uint64_t)v5, &qword_268D43A58);
}

uint64_t sub_241C9D7C0()
{
  return MEMORY[0x263F8EE78];
}

void sub_241C9D7CC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_241CD80B0();
    sub_241C9D920(&qword_268D43A60, 255, MEMORY[0x263F437A8]);
    unint64_t v3 = sub_241CDC210();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_241C9D86C(uint64_t a1, unint64_t *a2)
{
  sub_241C9D7CC(0, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_241C9D8C8()
{
  if (!qword_26B034DA8)
  {
    sub_241CDB8A0();
    unint64_t v0 = sub_241CDBBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B034DA8);
    }
  }
}

uint64_t sub_241C9D920(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241C9D968()
{
  if (!qword_268D43A70)
  {
    sub_241B768F4();
    sub_241A313AC(255, &qword_26B0303B8);
    sub_241C9D920(&qword_26B031B90, 255, (void (*)(uint64_t))sub_241B768F4);
    sub_241AAD6A4();
    unint64_t v0 = sub_241CDA4E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43A70);
    }
  }
}

uint64_t sub_241C9DA38()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241C9DA70()
{
  return sub_241C9CDE8();
}

void *sub_241C9DA78(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    uint64_t v3 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    uint64_t v7 = (void *)a2[2];
    *a1 = v5;
    a1[1] = v6;
    a1[2] = v7;
    id v59 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
    uint64_t v8 = v59[6];
    uint64_t v9 = (char *)v3 + v8;
    os_log_type_t v10 = (char *)a2 + v8;
    *((unsigned char *)v3 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v11 = _s8WorkPlanVMa();
    uint64_t v12 = *(int *)(v11 + 20);
    id v57 = &v9[v12];
    uint64_t v13 = &v10[v12];
    uint64_t v14 = sub_241CD95E0();
    id v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_unknownObjectRetain();
    id v16 = v7;
    uint64_t v17 = v11;
    v15(v57, v13, v14);
    uint64_t v18 = *(int *)(v11 + 24);
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    uint64_t v21 = sub_241CD78F0();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_241CA155C(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = *(int *)(v17 + 28);
    uint64_t v25 = &v9[v24];
    uint64_t v26 = &v10[v24];
    sub_241AC7534();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = *(int *)(v17 + 32);
    uint64_t v29 = &v9[v28];
    id v30 = &v10[v28];
    sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
    {
      sub_241B67D9C(0);
      memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
    }
    uint64_t v35 = v59[7];
    id v36 = *(void **)((char *)a2 + v35);
    *(void *)((char *)v3 + v35) = v36;
    uint64_t v37 = v59[8];
    uint64_t v38 = (char *)v3 + v37;
    uint64_t v39 = (char *)a2 + v37;
    long long v40 = *(_OWORD *)((char *)a2 + v37 + 24);
    *(_OWORD *)((char *)v3 + v37 + 24) = v40;
    uint64_t v41 = v40;
    uint64_t v42 = **(void (***)(char *, char *, uint64_t))(v40 - 8);
    id v43 = v36;
    v42(v38, v39, v41);
    *(_OWORD *)((char *)v3 + v59[9]) = *(_OWORD *)((char *)a2 + v59[9]);
    uint64_t v44 = v59[10];
    uint64_t v45 = *(void **)((char *)a2 + v44);
    *(void *)((char *)v3 + v44) = v45;
    uint64_t v46 = v59[11];
    uint64_t v47 = *(void **)((char *)a2 + v46);
    *(void *)((char *)v3 + v46) = v47;
    uint64_t v48 = *(int *)(a3 + 20);
    uint64_t v49 = (char *)v3 + v48;
    uint64_t v50 = (char *)a2 + v48;
    long long v51 = *(_OWORD *)((char *)a2 + v48 + 24);
    *(_OWORD *)((char *)v3 + v48 + 24) = v51;
    uint64_t v52 = v51;
    int v53 = **(void (***)(char *, char *, uint64_t))(v51 - 8);
    swift_unknownObjectRetain();
    id v54 = v45;
    id v55 = v47;
    v53(v49, v50, v52);
  }
  return v3;
}

uint64_t sub_241C9DF10(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();

  int v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = a1 + v4[6];
  uint64_t v6 = (int *)_s8WorkPlanVMa();
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v5 + v6[6];
  uint64_t v10 = sub_241CD78F0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v5 + v6[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v5 + v6[8];
  sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }

  sub_241A31190(a1 + v4[8]);
  swift_unknownObjectRelease();

  uint64_t v18 = a1 + *(int *)(a2 + 20);

  return sub_241A31190(v18);
}

uint64_t sub_241C9E174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  int v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  id v55 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v5 = v55[6];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(unsigned char *)(a1 + v5) = *(unsigned char *)(a2 + v5);
  uint64_t v8 = (int *)_s8WorkPlanVMa();
  uint64_t v9 = v8[5];
  uint64_t v10 = v6 + v9;
  uint64_t v11 = v7 + v9;
  uint64_t v12 = sub_241CD95E0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_unknownObjectRetain();
  id v14 = v4;
  v13(v10, v11, v12);
  uint64_t v15 = v8[6];
  uint64_t v16 = (void *)(v6 + v15);
  uint64_t v17 = (const void *)(v7 + v15);
  uint64_t v18 = sub_241CD78F0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_241CA155C(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v21 = v8[7];
  uint64_t v22 = v6 + v21;
  uint64_t v23 = v7 + v21;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = v8[8];
  uint64_t v26 = (void *)(v6 + v25);
  uint64_t v27 = (const void *)(v7 + v25);
  sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v28))
  {
    sub_241B67D9C(0);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v26, v27, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
  }
  uint64_t v32 = v55[7];
  uint64_t v33 = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = v33;
  uint64_t v34 = v55[8];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  long long v37 = *(_OWORD *)(a2 + v34 + 24);
  *(_OWORD *)(a1 + v34 + 24) = v37;
  uint64_t v38 = v37;
  uint64_t v39 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
  id v40 = v33;
  v39(v35, v36, v38);
  *(_OWORD *)(a1 + v55[9]) = *(_OWORD *)(a2 + v55[9]);
  uint64_t v41 = v55[10];
  uint64_t v42 = *(void **)(a2 + v41);
  *(void *)(a1 + v41) = v42;
  uint64_t v43 = v55[11];
  uint64_t v44 = *(void **)(a2 + v43);
  *(void *)(a1 + v43) = v44;
  uint64_t v45 = *(int *)(a3 + 20);
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  long long v48 = *(_OWORD *)(a2 + v45 + 24);
  *(_OWORD *)(a1 + v45 + 24) = v48;
  uint64_t v49 = v48;
  uint64_t v50 = **(void (***)(uint64_t, uint64_t, uint64_t))(v48 - 8);
  swift_unknownObjectRetain();
  id v51 = v42;
  id v52 = v44;
  v50(v46, v47, v49);
  return a1;
}

void *sub_241C9E5BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v5;
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  int v58 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v9 = v58[6];
  uint64_t v10 = (char *)a1 + v9;
  id v57 = a2;
  uint64_t v11 = (char *)a2 + v9;
  *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  uint64_t v12 = (int *)_s8WorkPlanVMa();
  uint64_t v13 = v12[5];
  id v14 = &v10[v13];
  uint64_t v15 = &v11[v13];
  uint64_t v16 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = v12[6];
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  uint64_t v20 = sub_241CD78F0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    sub_241CA155C(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  uint64_t v26 = v12[7];
  uint64_t v27 = &v10[v26];
  uint64_t v28 = &v11[v26];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  uint64_t v30 = v12[8];
  uint64_t v31 = &v10[v30];
  uint64_t v32 = &v11[v30];
  sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v34 = v33;
  uint64_t v35 = *(void *)(v33 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v31, 1, v33);
  int v38 = v36(v32, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v31, v32, v34);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v34);
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    sub_241B67D9C(0);
    memcpy(v31, v32, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v31, v32, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
LABEL_13:
  uint64_t v40 = v58[7];
  uint64_t v41 = *(void **)((char *)v57 + v40);
  uint64_t v42 = *(void **)((char *)a1 + v40);
  *(void *)((char *)a1 + v40) = v41;
  id v43 = v41;

  sub_241AC8320((void *)((char *)a1 + v58[8]), (void *)((char *)v57 + v58[8]));
  uint64_t v44 = v58[9];
  uint64_t v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (void *)((char *)v57 + v44);
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v45[1] = v47;
  uint64_t v48 = v58[10];
  uint64_t v49 = *(void **)((char *)v57 + v48);
  uint64_t v50 = *(void **)((char *)a1 + v48);
  *(void *)((char *)a1 + v48) = v49;
  id v51 = v49;

  uint64_t v52 = v58[11];
  int v53 = *(void **)((char *)v57 + v52);
  id v54 = *(void **)((char *)a1 + v52);
  *(void *)((char *)a1 + v52) = v53;
  id v55 = v53;

  sub_241AC8320((void *)((char *)a1 + *(int *)(a3 + 20)), (void *)((char *)v57 + *(int *)(a3 + 20)));
  return a1;
}

uint64_t sub_241C9EA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)_s8WorkPlanVMa();
  uint64_t v10 = v9[5];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = (void *)(v7 + v14);
  uint64_t v16 = (const void *)(v8 + v14);
  uint64_t v17 = sub_241CD78F0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_241CA155C(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = v9[7];
  uint64_t v21 = v7 + v20;
  uint64_t v22 = v8 + v20;
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = v9[8];
  uint64_t v25 = (void *)(v7 + v24);
  uint64_t v26 = (const void *)(v8 + v24);
  sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_241B67D9C(0);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
  uint64_t v31 = v5[8];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  long long v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  *(void *)(a1 + v5[10]) = *(void *)(a2 + v5[10]);
  *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
  uint64_t v35 = *(int *)(a3 + 20);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  long long v38 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  *(void *)(v36 + 32) = *(void *)(v37 + 32);
  return a1;
}

void *sub_241C9EDF4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v6 = a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[1] = v5;
  a1[2] = v6;

  uint64_t v61 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v8 = v61[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  uint64_t v11 = (int *)_s8WorkPlanVMa();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v9[v12];
  uint64_t v14 = &v10[v12];
  uint64_t v15 = sub_241CD95E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  uint64_t v19 = sub_241CD78F0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  uint64_t v60 = v17;
  LODWORD(v17) = v21(v17, 1, v19);
  int v22 = v21(v18, 1, v19);
  if (v17)
  {
    if (v22)
    {
      sub_241CA155C(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      size_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
      uint64_t v25 = v60;
LABEL_6:
      memcpy(v25, v18, v24);
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v60, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v60, 0, 1, v19);
  }
  else
  {
    if (v22)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v60, v19);
      sub_241CA155C(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
      size_t v24 = *(void *)(*(void *)(v26 - 8) + 64);
      uint64_t v25 = v60;
      goto LABEL_6;
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v60, v18, v19);
  }
LABEL_9:
  uint64_t v27 = v11[7];
  uint64_t v28 = &v9[v27];
  uint64_t v29 = &v10[v27];
  sub_241AC7534();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = v11[8];
  uint64_t v32 = &v9[v31];
  uint64_t v33 = &v10[v31];
  sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v35 = v34;
  uint64_t v36 = *(void *)(v34 - 8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v32, 1, v34);
  int v39 = v37(v33, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v32, v33, v35);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v35);
    goto LABEL_14;
  }
  if (v39)
  {
LABEL_14:
    sub_241B67D9C(0);
    memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v32, v33, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
LABEL_15:
  uint64_t v41 = v61[7];
  uint64_t v42 = *(void **)((char *)a1 + v41);
  *(void *)((char *)a1 + v41) = *(void *)((char *)a2 + v41);

  uint64_t v43 = v61[8];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  sub_241A31190((uint64_t)a1 + v43);
  long long v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  *((void *)v44 + 4) = *((void *)v45 + 4);
  uint64_t v47 = v61[9];
  uint64_t v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  uint64_t v50 = v49[1];
  *uint64_t v48 = *v49;
  swift_unknownObjectRelease();
  v48[1] = v50;
  uint64_t v51 = v61[10];
  uint64_t v52 = *(void **)((char *)a1 + v51);
  *(void *)((char *)a1 + v51) = *(void *)((char *)a2 + v51);

  uint64_t v53 = v61[11];
  id v54 = *(void **)((char *)a1 + v53);
  *(void *)((char *)a1 + v53) = *(void *)((char *)a2 + v53);

  uint64_t v55 = *(int *)(a3 + 20);
  id v56 = (char *)a1 + v55;
  id v57 = (char *)a2 + v55;
  sub_241A31190((uint64_t)a1 + v55);
  long long v58 = *((_OWORD *)v57 + 1);
  *(_OWORD *)id v56 = *(_OWORD *)v57;
  *((_OWORD *)v56 + 1) = v58;
  *((void *)v56 + 4) = *((void *)v57 + 4);
  return a1;
}

uint64_t sub_241C9F2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241C9F304);
}

uint64_t sub_241C9F304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_241C9F3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241C9F3DC);
}

uint64_t sub_241C9F3DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for SnidgetFeedItemStep(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B035998);
}

uint64_t sub_241C9F4BC()
{
  uint64_t result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241C9F550(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4, void **a5)
{
  sub_241AABAD0();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12 - 8);
  if (a1)
  {
    *uint64_t v11 = a1;
    swift_storeEnumTagMultiPayload();
    id v15 = a1;
    a2(v11);
    return sub_241CA14FC((uint64_t)v11, (uint64_t (*)(void))sub_241AABAD0);
  }
  else
  {
    sub_241CA0EE4((uint64_t)a5, (uint64_t)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
    unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a2;
    *(void *)(v18 + 24) = a3;
    sub_241CA1364((uint64_t)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_retain();
    sub_241C9F854(a5, 1, (uint64_t (*)(void))sub_241CA1780, v18);
    return swift_release();
  }
}

uint64_t sub_241C9F74C(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  sub_241AABAD0();
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = (uint64_t *)((char *)&v13 - v9);
  if (a1)
  {
    *uint64_t v10 = a1;
    swift_storeEnumTagMultiPayload();
    id v11 = a1;
  }
  else
  {
    sub_241CA0EE4(a4, (uint64_t)&v13 - v9, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
  }
  a2(v10);
  return sub_241CA14FC((uint64_t)v10, (uint64_t (*)(void))sub_241AABAD0);
}

uint64_t sub_241C9F854(void **a1, char a2, uint64_t (*a3)(void), uint64_t a4)
{
  int v8 = a2 & 1;
  uint64_t v9 = sub_241CD75A0();
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v39 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SnidgetFeedItemStep.FeedItemChange(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (uint64_t *)((char *)&v36 - v15);
  id v17 = objc_msgSend(*(id *)(v4 + 16), sel_profileIdentifier);
  id v18 = objc_msgSend(v17, sel_type);

  if (v18 == (id)2)
  {
    if (!v8)
    {
      swift_bridgeObjectRelease();
      return a3(0);
    }
    char v19 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if (v19) {
      return a3(0);
    }
  }
  sub_241C9FCE8(a1, v8, v16);
  sub_241CA0EE4((uint64_t)v16, (uint64_t)v14, type metadata accessor for SnidgetFeedItemStep.FeedItemChange);
  uint64_t v21 = a4;
  int v22 = a3;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = *v14;
    uint64_t v24 = v14[1];
    uint64_t v25 = type metadata accessor for SnidgetFeedItemStep(0);
    sub_241A37260(v4 + *(int *)(v25 + 20), (uint64_t)v40);
    sub_241A311E0(v40, v41);
    sub_241A31064(0, (unint64_t *)&qword_26B038860);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_241CEB730;
    *(void *)(v26 + 32) = v23;
    *(void *)(v26 + 40) = v24;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v22;
    *(void *)(v27 + 24) = v21;
    swift_retain();
    sub_241CD7640();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v29 = v38;
    uint64_t v28 = v39;
    uint64_t v30 = *(void (**)(char *, uint64_t *, uint64_t))(v38 + 32);
    uint64_t v36 = v22;
    uint64_t v31 = v37;
    v30(v37, v14, v39);
    uint64_t v32 = type metadata accessor for SnidgetFeedItemStep(0);
    sub_241A37260(v4 + *(int *)(v32 + 20), (uint64_t)v40);
    sub_241A311E0(v40, v41);
    sub_241CA155C(0, &qword_26B038858, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
    unint64_t v33 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, char *, uint64_t))(v29 + 16))(v34 + v33, v31, v28);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v36;
    *(void *)(v35 + 24) = v21;
    swift_retain();
    sub_241CD7620();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  }
  sub_241CA14FC((uint64_t)v16, type metadata accessor for SnidgetFeedItemStep.FeedItemChange);
  return sub_241A31190((uint64_t)v40);
}

void sub_241C9FCE8(void **a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  char v6 = a2 & 1;
  sub_241CA155C(0, &qword_26B032028, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t v10 = sub_241CD75A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C9FFB0(a1, v6);
  if (!v3)
  {
    uint64_t v42 = a3;
    uint64_t v36 = v11;
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    uint64_t v35 = (void *)sub_241CA02AC((uint64_t)a1, v6);
    uint64_t v19 = v18;
    sub_241CA0540(v6, v39);
    uint64_t v20 = v40;
    uint64_t v21 = v41;
    sub_241A311E0(v39, v40);
    uint64_t v37 = v16;
    uint64_t v38 = v17;
    uint64_t v22 = (uint64_t)v16;
    uint64_t v23 = v17;
    uint64_t v24 = v19;
    uint64_t v25 = v35;
    uint64_t v26 = v36;
    sub_241B4C108(v22, v23, (uint64_t)v35, v24, v20, v21, (uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v9, 1, v10) == 1)
    {
      sub_241A293F0((uint64_t)v9);
      uint64_t v27 = v40;
      uint64_t v28 = v41;
      sub_241A311E0(v39, v40);
      uint64_t v29 = sub_241B4BF90(v27, v28);
      uint64_t v31 = v30;
      sub_241ACB8D4(v25);
      sub_241ACB8D4(v37);
      uint64_t v32 = v42;
      *uint64_t v42 = v29;
      v32[1] = v31;
    }
    else
    {
      sub_241ACB8D4(v25);
      sub_241ACB8D4(v37);
      unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
      v33(v13, v9, v10);
      v33((char *)v42, v13, v10);
    }
    type metadata accessor for SnidgetFeedItemStep.FeedItemChange(0);
    swift_storeEnumTagMultiPayload();
    sub_241A31190((uint64_t)v39);
  }
}

void sub_241C9FFB0(void **a1, char a2)
{
  uint64_t v6 = sub_241CD7520();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  if (*a1 == (void *)1)
  {
    sub_241CA0730(2);
  }
  else
  {
    uint64_t v29 = v9;
    uint64_t v30 = v7;
    uint64_t v33 = v3;
    uint64_t v31 = v6;
    int v14 = a2 & 1;
    uint64_t v15 = a1[1];
    uint64_t v16 = v13;
    if (a2) {
      uint64_t v17 = a1[1];
    }
    else {
      uint64_t v17 = v13;
    }
    if (v17)
    {
      id v32 = v17;
      sub_241A31064(0, (unint64_t *)&qword_26B038868);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_241CEB710;
      uint64_t v19 = *(void **)(v2 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
      *(void *)(inited + 32) = v19;
      unint64_t v34 = inited;
      sub_241CDB2E0();
      unint64_t v20 = v34;
      swift_storeEnumTagMultiPayload();
      sub_241ACC264(v16, v15);
      id v21 = v32;
      id v22 = v19;
      sub_241B7417C(v20, (uint64_t)v12, v14);
      swift_bridgeObjectRelease();
      sub_241CA14FC((uint64_t)v12, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
      uint64_t v23 = v29;
      sub_241CD7510();
      sub_241CA155C(0, &qword_26B034F20, MEMORY[0x263F45618], MEMORY[0x263F8E0F8]);
      uint64_t v24 = v30;
      unint64_t v25 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_241CEB730;
      (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v26 + v25, v23, v31);
    }
    else
    {
      id v27 = v15;
      id v28 = v16;
      sub_241CA0730(a2 & 1);
    }
  }
}

uint64_t sub_241CA02AC(uint64_t a1, char a2)
{
  uint64_t v5 = sub_241CD7520();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void **)(a1 + 16);
  if (v12 == (void *)1) {
    return 1;
  }
  int v13 = a2 & 1;
  int v14 = *(void **)(a1 + 24);
  uint64_t v15 = v13 ? *(void **)(a1 + 24) : *(void **)(a1 + 16);
  if (!v15) {
    return 1;
  }
  int v26 = v13;
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v17 = *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28);
  uint64_t v27 = v5;
  unint64_t v28 = inited;
  uint64_t v18 = *(void **)(v2 + v17);
  *(void *)(inited + 32) = v18;
  sub_241CDB2E0();
  unint64_t v19 = v28;
  swift_storeEnumTagMultiPayload();
  sub_241ACC264(v12, v14);
  id v20 = v15;
  id v21 = v18;
  sub_241B7417C(v19, (uint64_t)v11, v26);
  swift_bridgeObjectRelease();
  sub_241CA14FC((uint64_t)v11, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  sub_241CD7510();
  sub_241CA155C(0, &qword_26B034F20, MEMORY[0x263F45618], MEMORY[0x263F8E0F8]);
  unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_241CEB730;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v23 + v22, v8, v27);

  return (uint64_t)v15;
}

uint64_t sub_241CA0540@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  char v4 = a1 & 1;
  uint64_t v5 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(v2 + 16);
  uint64_t v9 = (void *)sub_241CDB4D0();
  uint64_t v10 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v11 = *(void **)(v2 + *(int *)(v10 + 28));
  uint64_t v12 = *(void **)(v2 + *(int *)(v10 + 44));
  *(void *)uint64_t v7 = v9;
  v7[8] = v4;
  *((void *)v7 + 2) = v11;
  sub_241A31064(0, (unint64_t *)&qword_26B038868);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = v11;
  unint64_t v25 = inited;
  sub_241CDB2E0();
  unint64_t v14 = v25;
  if (v25 >> 62)
  {
    id v19 = v9;
    swift_bridgeObjectRetain();
    id v20 = v11;
    id v21 = v12;
    uint64_t v22 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (!v22) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  uint64_t v15 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v16 = v9;
  id v17 = v11;
  id v18 = v12;
  if (v15) {
LABEL_3:
  }
    sub_241C69200(v14);
LABEL_5:
  swift_bridgeObjectRelease();
  uint64_t v23 = *(int *)(v5 + 32);
  sub_241CD7DD0();

  *(void *)&v7[v23] = v12;
  sub_241ABD8B0(v8, v12, (uint64_t)v7, a2);
  return sub_241CA14FC((uint64_t)v7, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241CA0730(char a1)
{
  uint64_t v3 = type metadata accessor for SnidgetFeedItemStep(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)&v31 - v13;
  id v15 = objc_msgSend(*(id *)(v1 + 16), sel_profileIdentifier);
  unint64_t v16 = (unint64_t)objc_msgSend(v15, sel_type);

  if ((v16 | 2) == 3)
  {
    if (a1 == 2)
    {
      sub_241CDA0F0();
      sub_241CA0EE4(v1, (uint64_t)v6, type metadata accessor for SnidgetFeedItemStep);
      id v17 = sub_241CDA190();
      os_log_type_t v18 = sub_241CDB660();
      if (os_log_type_enabled(v17, v18))
      {
        id v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = (void *)swift_slowAlloc();
        *(_DWORD *)id v19 = 138412290;
        id v20 = *(void **)&v6[*(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)];
        uint64_t v37 = v20;
        id v21 = v20;
        sub_241CDBBF0();
        uint64_t v22 = v33;
        *uint64_t v33 = v20;
        sub_241CA14FC((uint64_t)v6, type metadata accessor for SnidgetFeedItemStep);
        _os_log_impl(&dword_241A23000, v17, v18, "Step for %@ should have at least a current value pair", v19, 0xCu);
        sub_241BCC6E0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
        swift_arrayDestroy();
        MEMORY[0x245637F20](v22, -1, -1);
        MEMORY[0x245637F20](v19, -1, -1);
      }
      else
      {
        sub_241CA14FC((uint64_t)v6, type metadata accessor for SnidgetFeedItemStep);
      }

      (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v35);
    }
    else
    {
      sub_241CDA0F0();
      sub_241CA0EE4(v1, (uint64_t)v8, type metadata accessor for SnidgetFeedItemStep);
      uint64_t v23 = sub_241CDA190();
      os_log_type_t v24 = sub_241CDB660();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        uint64_t v31 = (void *)swift_slowAlloc();
        uint64_t v33 = (void *)swift_slowAlloc();
        uint64_t v37 = v33;
        *(_DWORD *)uint64_t v25 = 138412546;
        os_log_t v32 = v23;
        int v26 = *(void **)&v8[*(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)];
        uint64_t v36 = (uint64_t)v26;
        id v27 = v26;
        sub_241CDBBF0();
        unint64_t v28 = v31;
        void *v31 = v26;
        sub_241CA14FC((uint64_t)v8, type metadata accessor for SnidgetFeedItemStep);
        *(_WORD *)(v25 + 12) = 2082;
        if (a1) {
          uint64_t v29 = 0x676E6972616873;
        }
        else {
          uint64_t v29 = 0x7972616D697270;
        }
        uint64_t v36 = sub_241A33FE4(v29, 0xE700000000000000, (uint64_t *)&v37);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        uint64_t v23 = v32;
        _os_log_impl(&dword_241A23000, v32, v24, "Step for %@ should have at least a current value for %{public}s audience", (uint8_t *)v25, 0x16u);
        sub_241BCC6E0(0, (unint64_t *)&qword_26B038850, qword_26B038448, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
        swift_arrayDestroy();
        MEMORY[0x245637F20](v28, -1, -1);
        uint64_t v30 = v33;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v30, -1, -1);
        MEMORY[0x245637F20](v25, -1, -1);
      }
      else
      {
        sub_241CA14FC((uint64_t)v8, type metadata accessor for SnidgetFeedItemStep);
      }

      (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v35);
    }
    sub_241CA15C0();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t sub_241CA0CCC(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v13 = *(void *)(a4 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CA0EE4(v4, (uint64_t)v15, type metadata accessor for SnidgetFeedItemStep);
  sub_241CA0EE4((uint64_t)a1, (uint64_t)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + *(unsigned __int8 *)(v10 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  sub_241CA1364((uint64_t)v15, v18 + v16, type metadata accessor for SnidgetFeedItemStep);
  sub_241CA1364((uint64_t)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  swift_retain();
  sub_241C9F854(a1, 0, (uint64_t (*)(void))sub_241CA13CC, v18);
  return swift_release();
}

uint64_t sub_241CA0EE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241CA0F4C()
{
  uint64_t v28 = type metadata accessor for SnidgetFeedItemStep(0);
  uint64_t v31 = *(unsigned __int8 *)(*(void *)(v28 - 8) + 80);
  uint64_t v1 = (v31 + 32) & ~v31;
  uint64_t v2 = *(void *)(*(void *)(v28 - 8) + 64);
  uint64_t v29 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v29 - 8) + 80);
  uint64_t v4 = v1 + v2 + v3;
  uint64_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v1;
  swift_unknownObjectRelease();

  uint64_t v6 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  uint64_t v7 = v0 + v1 + v6[6];
  uint64_t v8 = (int *)_s8WorkPlanVMa();
  uint64_t v9 = v7 + v8[5];
  uint64_t v10 = sub_241CD95E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v7 + v8[6];
  uint64_t v12 = sub_241CD78F0();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v14 = v4 & ~v3;
  uint64_t v15 = v7 + v8[7];
  sub_241AC7534();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v7 + v8[8];
  sub_241BCC6E0(0, (unint64_t *)&qword_26B031C80, (unint64_t *)&qword_26B031F28, 0x263F0A720, MEMORY[0x263F08F88]);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
  }

  sub_241A31190(v5 + v6[8]);
  swift_unknownObjectRelease();

  sub_241A31190(v5 + *(int *)(v28 + 20));
  uint64_t v21 = v0 + v14;
  uint64_t v22 = *(void **)(v0 + v14);
  if (v22 != (void *)1)
  {
  }
  uint64_t v23 = *(void **)(v21 + 16);
  if (v23 != (void *)1)
  {
  }
  uint64_t v24 = v21 + *(int *)(v29 + 28);
  uint64_t v25 = sub_241CD6EE0();
  uint64_t v26 = *(void *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }

  return MEMORY[0x270FA0238](v0, v14 + v30, v31 | v3 | 7);
}

uint64_t sub_241CA1364(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241CA13CC(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SnidgetFeedItemStep(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  uint64_t v7 = *(void (**)(void *))(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = (void **)(v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));

  return sub_241C9F550(a1, v7, v8, v1 + v4, v9);
}

uint64_t type metadata accessor for SnidgetFeedItemStep.FeedItemChange(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B035918);
}

uint64_t sub_241CA14C4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241CA14FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_241CA155C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_241CA15C0()
{
  unint64_t result = qword_268D43A80;
  if (!qword_268D43A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43A80);
  }
  return result;
}

uint64_t sub_241CA1614()
{
  uint64_t v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void **)(v0 + v3);
  if (v6 != (void *)1)
  {
  }
  uint64_t v7 = *(void **)(v5 + 16);
  if (v7 != (void *)1)
  {
  }
  uint64_t v8 = v5 + *(int *)(v1 + 28);
  uint64_t v9 = sub_241CD6EE0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_241CA1780(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  uint64_t v4 = *(void (**)(void *))(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_241C9F74C(a1, v4, v5, v6);
}

unsigned char *storeEnumTagSinglePayload for SnidgetFeedItemStep.RunError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x241CA1890);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SnidgetFeedItemStep.RunError()
{
  return &type metadata for SnidgetFeedItemStep.RunError;
}

void *sub_241CA18C8(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_241CA14FC((uint64_t)a1, type metadata accessor for SnidgetFeedItemStep.FeedItemChange);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v4 = sub_241CD75A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_241CA19A4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_241CA14FC((uint64_t)a1, type metadata accessor for SnidgetFeedItemStep.FeedItemChange);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_241CD75A0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_241CA1A7C()
{
  uint64_t result = sub_241CD75A0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_241CA1B10()
{
  unint64_t result = qword_268D43A88;
  if (!qword_268D43A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43A88);
  }
  return result;
}

uint64_t sub_241CA1B68(unsigned __int8 *a1, char *a2)
{
  return sub_241B696D4(*a1, *a2);
}

uint64_t sub_241CA1B74()
{
  return sub_241CDC200();
}

uint64_t sub_241CA1C60()
{
  sub_241CDB170();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241CA1D34()
{
  return sub_241CDC200();
}

uint64_t sub_241CA1E1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_241CA24A8();
  *a1 = result;
  return result;
}

void sub_241CA1E4C(uint64_t a1@<X8>)
{
  uint64_t v2 = 0x7472656C61;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x7472616863;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "currentValue");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0x74656764696E73;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 4:
      *(void *)a1 = 0x646E657274;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
  }
}

uint64_t sub_241CA1EFC(void *a1)
{
  sub_241CDBE00();
  sub_241CDBEB0();
  sub_241CDB180();
  id v2 = objc_msgSend(a1, sel_identifier);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CD73D0();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_241CA2008(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_241CA21B0(a1, a2, a3, 1);
}

uint64_t sub_241CA2010(void *a1)
{
  sub_241CDBE00();
  sub_241CDBEB0();
  sub_241CDB180();
  sub_241CDBEB0();
  sub_241CDB180();
  sub_241CDBEB0();
  sub_241CDB180();
  id v2 = objc_msgSend(a1, sel_identifier);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CD73D0();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_241CA21A0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_241CA21B0(a1, a2, a3, 3);
}

uint64_t sub_241CA21A8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_241CA21B0(a1, a2, a3, 2);
}

uint64_t sub_241CA21B0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_241CDBE00();
  LOBYTE(v8) = a4;
  sub_241CDBEB0();
  sub_241CDB180();
  id v6 = objc_msgSend(a1, sel_identifier, v8);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CD73D0();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  return 0;
}

unsigned char *storeEnumTagSinglePayload for SummaryFeedItemIdentifierFactory.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241CA2418);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryFeedItemIdentifierFactory.Kind()
{
  return &type metadata for SummaryFeedItemIdentifierFactory.Kind;
}

unint64_t sub_241CA2454()
{
  unint64_t result = qword_268D43A90;
  if (!qword_268D43A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43A90);
  }
  return result;
}

uint64_t sub_241CA24A8()
{
  unint64_t v0 = sub_241CDBFD0();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

void sub_241CA24F4(void *a1, void *a2, void (*a3)(id, void))
{
  uint64_t v4 = v3;
  sub_241A5D1DC();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v28 - v12;
  sub_241A313AC(0, &qword_268D421E8);
  uint64_t v14 = (void *)sub_241A4F420(a1);
  uint64_t v15 = v4 + qword_26B0411F8;
  uint64_t v16 = sub_241CD9ED0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v15, v16);
  uint64_t v17 = *MEMORY[0x263F46C78];
  uint64_t v18 = sub_241CD9970();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v13, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
  id v20 = a2;
  id v21 = objc_msgSend(v14, sel_data);
  if (v21)
  {
    uint64_t v22 = v21;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v23 = sub_241CD6AE0();
    unint64_t v25 = v24;

    sub_241A5D234((uint64_t)v13, (uint64_t)v11);
    uint64_t v29 = 0;
    memset(v28, 0, sizeof(v28));
    id v26 = sub_241A54648(v23, v25, 13, (uint64_t)v11, (uint64_t)v20, 0, (uint64_t)v28);

    sub_241A37374(v23, v25);
    sub_241A32954((uint64_t)v13, (uint64_t (*)(void))sub_241A5D1DC);
    id v27 = v26;
    a3(v26, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for PHQ9AssessmentMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result = qword_26B037FD0;
  if (!qword_26B037FD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241CA27E8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries41SummariesCorrelatedTrendFeedItemGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241CA2898()
{
  return type metadata accessor for SummariesCorrelatedTrendFeedItemGenerator();
}

uint64_t type metadata accessor for SummariesCorrelatedTrendFeedItemGenerator()
{
  uint64_t result = qword_268D43A98;
  if (!qword_268D43A98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241CA28EC()
{
  return swift_retain();
}

uint64_t sub_241CA2900@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries41SummariesCorrelatedTrendFeedItemGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_241CA2978(uint64_t a1)
{
  unint64_t result = sub_241CA29A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_241CA29A0()
{
  unint64_t result = qword_268D43AA8;
  if (!qword_268D43AA8)
  {
    type metadata accessor for SummariesCorrelatedTrendFeedItemGenerator();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43AA8);
  }
  return result;
}

uint64_t sub_241CA29F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = v3 - 1;
    uint64_t v6 = sub_241CD9910();
    uint64_t v13 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16))(a2, a1+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v5, v6);
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    uint64_t v8 = a2;
    uint64_t v9 = 0;
    uint64_t v10 = v6;
  }
  else
  {
    uint64_t v11 = sub_241CD9910();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v10 = v11;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v7(v8, v9, 1, v10);
}

id sub_241CA2B34(void *a1, void *a2, void *a3, uint64_t a4, void *a5, unsigned int a6, void *a7, void *a8, uint64_t a9)
{
  id v222 = a8;
  v211 = a7;
  unsigned int v234 = a6;
  id v231 = a5;
  uint64_t v201 = sub_241CD6D70();
  uint64_t v200 = *(void *)(v201 - 8);
  MEMORY[0x270FA5388](v201);
  uint64_t v199 = (char *)&v192 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241CDA1A0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v226 = v14;
  uint64_t v227 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v221 = (char *)&v192 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v203 = (char *)&v192 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v202 = (char *)&v192 - v21;
  MEMORY[0x270FA5388](v20);
  v210 = (char *)&v192 - v22;
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241CA8CFC(0, &qword_26B0321B8, MEMORY[0x263F46BC8], MEMORY[0x263F8D8F0]);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  os_log_t v207 = (char *)&v192 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v206 = (uint64_t)&v192 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v205 = (uint64_t)&v192 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v223 = (uint64_t)&v192 - v31;
  sub_241CA8CFC(0, &qword_26B0385B8, MEMORY[0x263F07490], v23);
  uint64_t v33 = MEMORY[0x270FA5388](v32 - 8);
  uint64_t v208 = (char *)&v192 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v219 = (uint64_t)&v192 - v36;
  MEMORY[0x270FA5388](v35);
  v214 = (char *)&v192 - v37;
  uint64_t v228 = sub_241CD6810();
  uint64_t v215 = *(void *)(v228 - 8);
  MEMORY[0x270FA5388](v228);
  uint64_t v39 = (char *)&v192 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_241CD6D00();
  uint64_t v232 = *(void *)(v40 - 8);
  uint64_t v233 = v40;
  uint64_t v41 = MEMORY[0x270FA5388](v40);
  v213 = (char *)&v192 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  v212 = (char *)&v192 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  v225 = (char *)&v192 - v46;
  MEMORY[0x270FA5388](v45);
  v230 = (char *)&v192 - v47;
  sub_241CA8CFC(0, &qword_26B0321C0, MEMORY[0x263F46BE0], v23);
  uint64_t v49 = MEMORY[0x270FA5388](v48 - 8);
  uint64_t v218 = (uint64_t)&v192 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v49);
  uint64_t v52 = (char *)&v192 - v51;
  v220 = (char *)sub_241CD9910();
  uint64_t v53 = *((void *)v220 - 1);
  MEMORY[0x270FA5388](v220);
  uint64_t v55 = (char *)&v192 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CA8CFC(0, &qword_26B0321C8, MEMORY[0x263F46BF8], v23);
  uint64_t v57 = MEMORY[0x270FA5388](v56 - 8);
  uint64_t v204 = (uint64_t)&v192 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v61 = (char *)&v192 - v60;
  MEMORY[0x270FA5388](v59);
  uint64_t v229 = (uint64_t)&v192 - v62;
  uint64_t v63 = self;
  v236 = a1;
  id result = objc_msgSend(v63, sel_sharedInstanceForHealthStore_, a1);
  if (!result)
  {
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v65 = result;
  id v66 = objc_msgSend(result, sel_displayTypeForObjectType_, a3);

  if (!v66)
  {
    uint64_t v73 = v221;
    sub_241CDA180();
    id v74 = a3;
    unint64_t v75 = v236;
    id v76 = v74;
    id v77 = v75;
    id v78 = sub_241CDA190();
    os_log_type_t v79 = sub_241CDB650();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      uint64_t v238 = v81;
      *(_DWORD *)uint64_t v80 = 136315394;
      uint64_t v82 = sub_241CA4648((uint64_t)v77, v76);
      uint64_t v237 = sub_241A33FE4(v82, v83, &v238);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v80 + 12) = 2080;
      id v84 = objc_msgSend(v76, sel_identifier);
      uint64_t v85 = sub_241CDB0D0();
      unint64_t v87 = v86;

      uint64_t v237 = sub_241A33FE4(v85, v87, &v238);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v78, v79, "%s: Unable to instantiate display type for %s", (uint8_t *)v80, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v81, -1, -1);
      MEMORY[0x245637F20](v80, -1, -1);

      (*(void (**)(char *, uint64_t))(v227 + 8))(v221, v226);
      return 0;
    }

LABEL_46:
    (*(void (**)(char *, uint64_t))(v227 + 8))(v73, v226);
    return 0;
  }
  uint64_t v217 = a4;
  v216 = a2;
  v224 = a3;
  id v67 = sub_241CA4744((uint64_t)v236, a2, a3, v66, v231, v234, (uint64_t)v222, 0, a4);
  v221 = v68;
  id v222 = v67;
  if (!v67)
  {
    sub_241A313AC(0, (unint64_t *)&qword_26B0303A0);
    uint64_t v88 = (void *)sub_241CDB6D0();
    uint64_t v89 = (void *)sub_241CDB090();
    unsigned int v90 = objc_msgSend(v88, sel_hk_BOOLForKey_defaultValue_, v89, 0);

    if (!v90)
    {

      return 0;
    }
    uint64_t v73 = v203;
    sub_241CDA180();
    BOOL v91 = v224;
    uint64_t v92 = sub_241CDA190();
    os_log_type_t v93 = sub_241CDB670();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      uint64_t v237 = v95;
      *(_DWORD *)uint64_t v94 = 136446722;
      uint64_t v238 = v235;
      swift_getMetatypeMetadata();
      uint64_t v96 = sub_241CDB120();
      uint64_t v238 = sub_241A33FE4(v96, v97, &v237);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 12) = 2080;
      id v98 = objc_msgSend(v91, sel_identifier);
      uint64_t v99 = sub_241CDB0D0();
      uint64_t v209 = v66;
      uint64_t v100 = v99;
      unint64_t v102 = v101;

      uint64_t v238 = sub_241A33FE4(v100, v102, &v237);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 22) = 2080;
      uint64_t v103 = sub_241CD9FA0();
      uint64_t v238 = sub_241A33FE4(v103, v104, &v237);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v92, v93, "[%{public}s] [%s] [%s] Trend model was supressed.", (uint8_t *)v94, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v95, -1, -1);
      MEMORY[0x245637F20](v94, -1, -1);

      (*(void (**)(char *, uint64_t))(v227 + 8))(v203, v226);
      return 0;
    }

    goto LABEL_46;
  }
  uint64_t v69 = sub_241CD9920();
  uint64_t v70 = *(void *)(v69 + 16);
  uint64_t v209 = v66;
  uint64_t v71 = v229;
  uint64_t v72 = v220;
  if (v70)
  {
    (*(void (**)(uint64_t, unint64_t, char *))(v53 + 16))(v229, v69+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * (v70 - 1), v220);
    (*(void (**)(uint64_t, void, uint64_t, char *))(v53 + 56))(v71, 0, 1, v72);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(v53 + 56))(v229, 1, 1, v220);
  }
  uint64_t v105 = v215;
  uint64_t v215 = a9;
  swift_bridgeObjectRelease();
  sub_241CD9930();
  sub_241CA88EC(v71, (uint64_t)v61, &qword_26B0321C8, MEMORY[0x263F46BF8]);
  uint64_t v196 = *(uint64_t (**)(char *, uint64_t, char *))(v53 + 48);
  int v106 = v196(v61, 1, v72);
  uint64_t v197 = v53 + 48;
  if (v106 == 1)
  {
    sub_241CA896C((uint64_t)v61, &qword_26B0321C8, MEMORY[0x263F46BF8]);
    uint64_t v107 = sub_241CD98D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v52, 1, 1, v107);
  }
  else
  {
    sub_241CD98F0();
    (*(void (**)(char *, char *))(v53 + 8))(v61, v72);
  }
  uint64_t v108 = v53;
  unint64_t v109 = v72;
  uint64_t v110 = v233;
  v111 = v221;
  uint64_t v112 = sub_241CA5458(v236, v216, v224, v209, (uint64_t)v55, v221, (uint64_t)v52, v234, v215, v217);
  uint64_t v215 = v113;
  uint64_t v198 = v114;
  uint64_t v203 = v115;
  sub_241CA896C((uint64_t)v52, &qword_26B0321C0, MEMORY[0x263F46BE0]);
  os_log_type_t v117 = *(void (**)(uint64_t, char *))(v108 + 8);
  uint64_t v116 = v108 + 8;
  os_log_t v192 = v117;
  v117((uint64_t)v55, v109);
  id result = objc_msgSend(v222, sel_dateInterval);
  if (!result) {
    goto LABEL_50;
  }
  uint64_t v118 = result;
  uint64_t v119 = v116;
  sub_241CDB920();

  sub_241CD67E0();
  unint64_t v120 = *(void (**)(char *, uint64_t))(v105 + 8);
  v120(v39, v228);
  uint64_t v121 = (uint64_t)v214;
  v194 = v112;
  uint64_t v195 = v119;
  if (v111)
  {
    id result = objc_msgSend(v111, sel_dateInterval);
    if (result)
    {
      uint64_t v122 = result;
      sub_241CDB920();

      sub_241CD67B0();
      v120(v39, v228);
      uint64_t v123 = v232;
      uint64_t v193 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v232 + 56);
      v193((char *)v121, 0, 1, v110);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v121, 1, v110) != 1)
      {
        uint64_t v124 = v225;
        (*(void (**)(char *, uint64_t, uint64_t))(v123 + 32))(v225, v121, v110);
        uint64_t v125 = v228;
LABEL_24:
        uint64_t v127 = *(void (**)(char *, char *, uint64_t))(v123 + 16);
        uint64_t v128 = v233;
        v127(v212, v230, v233);
        v127(v213, v124, v128);
        sub_241CD67C0();
        id v129 = sub_241CA608C((void (**)(char *, uint64_t))v236, v224, v234, (uint64_t)v39, v211, v216, v217);
        uint64_t v131 = v130;
        v120(v39, v125);
        if (v129)
        {
          uint64_t v132 = v223;
          sub_241CD98A0();
          uint64_t v133 = v204;
          sub_241CA88EC(v229, v204, &qword_26B0321C8, MEMORY[0x263F46BF8]);
          uint64_t v134 = v220;
          int v135 = v196((char *)v133, 1, v220);
          swift_bridgeObjectRetain();
          if (v135 == 1)
          {
            sub_241CA896C(v133, &qword_26B0321C8, MEMORY[0x263F46BF8]);
            uint64_t v136 = sub_241CD98D0();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v218, 1, 1, v136);
          }
          else
          {
            sub_241CD98F0();
            v192(v133, v134);
          }
          LODWORD(v228) = sub_241CA4548(v131);
          uint64_t v143 = v205;
          sub_241CA88EC(v132, v205, &qword_26B0321B8, MEMORY[0x263F46BC8]);
          uint64_t v144 = sub_241CD9890();
          uint64_t v145 = *(void *)(v144 - 8);
          unint64_t v146 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v145 + 48);
          int v147 = v146(v143, 1, v144);
          v220 = v221;
          id v231 = v222;
          if (v147 == 1)
          {
            sub_241CA896C(v143, &qword_26B0321B8, MEMORY[0x263F46BC8]);
            uint64_t v148 = 0;
            uint64_t v149 = 0;
          }
          else
          {
            uint64_t v148 = sub_241CD9850();
            uint64_t v149 = v150;
            (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v143, v144);
          }
          uint64_t v151 = v219;
          uint64_t v152 = v132;
          uint64_t v153 = v206;
          sub_241CA88EC(v152, v206, &qword_26B0321B8, MEMORY[0x263F46BC8]);
          if (v146(v153, 1, v144) == 1)
          {
            sub_241CA896C(v153, &qword_26B0321B8, MEMORY[0x263F46BC8]);
            uint64_t v154 = 1;
          }
          else
          {
            sub_241CD9870();
            (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v153, v144);
            uint64_t v154 = 0;
          }
          uint64_t v155 = (uint64_t)v207;
          uint64_t v156 = v151;
          os_log_t v157 = v193;
          v193((char *)v156, v154, 1, v233);
          sub_241CA88EC(v223, v155, &qword_26B0321B8, MEMORY[0x263F46BC8]);
          if (v146(v155, 1, v144) == 1)
          {
            sub_241CA896C(v155, &qword_26B0321B8, MEMORY[0x263F46BC8]);
            uint64_t v158 = 1;
            Class v159 = v210;
            uint64_t v160 = v208;
          }
          else
          {
            uint64_t v160 = v208;
            sub_241CD9880();
            (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v155, v144);
            uint64_t v158 = 0;
            Class v159 = v210;
          }
          uint64_t v161 = (uint64_t)v194;
          uint64_t v162 = (uint64_t)v203;
          uint64_t v163 = v233;
          v157(v160, v158, 1, v233);
          uint64_t v164 = v215;
          swift_bridgeObjectRelease();
          sub_241A313AC(0, (unint64_t *)&qword_26B034E60);
          id v165 = v224;
          uint64_t v191 = (uint64_t)v160;
          uint64_t v166 = v231;
          id v167 = HKCodableSummaryTrendTileViewModel.init(trendDescription:changeType:diagramStyle:dataType:coveredDateRange:baseTrendLine:changeTrendLine:visualizationPoints:notificationIdentifier:discoveryDate:originalEventDate:sharingPreviewString:cellHeaderViewModel:)(v161, v164, v218, v228, v165, v234, v231, v221, (unint64_t)v129, v148, v149, v219, v191, v198, v162, 0);
          sub_241CDA180();
          uint64_t v168 = v236;
          id v169 = v167;
          id v170 = v168;
          id v171 = v169;
          uint64_t v172 = sub_241CDA190();
          os_log_type_t v173 = sub_241CDB670();
          if (os_log_type_enabled(v172, v173))
          {
            uint64_t v174 = swift_slowAlloc();
            v236 = (void *)swift_slowAlloc();
            uint64_t v238 = (uint64_t)v236;
            *(_DWORD *)uint64_t v174 = 136315650;
            uint64_t v175 = sub_241CDC270();
            uint64_t v237 = sub_241A33FE4(v175, v176, &v238);
            sub_241CDBBF0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v174 + 12) = 2080;
            uint64_t v235 = v174 + 14;
            id v177 = objc_msgSend(v170, sel_profileIdentifier);
            id v178 = objc_msgSend(v177, sel_identifier);

            uint64_t v179 = v199;
            sub_241CD6D50();

            uint64_t v180 = sub_241CD6D20();
            unint64_t v182 = v181;
            (*(void (**)(char *, uint64_t))(v200 + 8))(v179, v201);
            uint64_t v237 = sub_241A33FE4(v180, v182, &v238);
            sub_241CDBBF0();

            swift_bridgeObjectRelease();
            *(_WORD *)(v174 + 22) = 2080;
            uint64_t v237 = (uint64_t)v171;
            id v183 = v171;
            uint64_t v184 = sub_241CDB140();
            uint64_t v237 = sub_241A33FE4(v184, v185, &v238);
            sub_241CDBBF0();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_241A23000, v172, v173, "[%s]_%s: Created mean shift user data: %s", (uint8_t *)v174, 0x20u);
            uint64_t v186 = v236;
            swift_arrayDestroy();
            MEMORY[0x245637F20](v186, -1, -1);
            MEMORY[0x245637F20](v174, -1, -1);

            (*(void (**)(char *, uint64_t))(v227 + 8))(v210, v226);
            sub_241CA896C(v223, &qword_26B0321B8, MEMORY[0x263F46BC8]);
            uint64_t v187 = v233;
            id v188 = *(void (**)(char *, uint64_t))(v232 + 8);
            v188(v225, v233);
            uint64_t v189 = v230;
            uint64_t v190 = v187;
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v227 + 8))(v159, v226);
            sub_241CA896C(v223, &qword_26B0321B8, MEMORY[0x263F46BC8]);
            id v188 = *(void (**)(char *, uint64_t))(v232 + 8);
            v188(v225, v163);
            uint64_t v189 = v230;
            uint64_t v190 = v163;
          }
          v188(v189, v190);
          sub_241CA896C(v229, &qword_26B0321C8, MEMORY[0x263F46BF8]);
          return v171;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v137 = v202;
        sub_241CDA180();
        unint64_t v138 = sub_241CDA190();
        os_log_type_t v139 = sub_241CDB660();
        if (os_log_type_enabled(v138, v139))
        {
          uint64_t v140 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v140 = 0;
          _os_log_impl(&dword_241A23000, v138, v139, "Failed to parse the chart model", v140, 2u);
          MEMORY[0x245637F20](v140, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v227 + 8))(v137, v226);
        uint64_t v141 = v233;
        os_log_type_t v142 = *(void (**)(char *, uint64_t))(v232 + 8);
        v142(v225, v233);
        v142(v230, v141);
        sub_241CA896C(v229, &qword_26B0321C8, MEMORY[0x263F46BF8]);
        return 0;
      }
      goto LABEL_22;
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v193 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v232 + 56);
  v193(v214, 1, 1, v110);
LABEL_22:
  id result = objc_msgSend(v222, sel_dateInterval);
  if (result)
  {
    uint64_t v126 = result;
    sub_241CDB920();

    uint64_t v124 = v225;
    sub_241CD67B0();
    uint64_t v125 = v228;
    v120(v39, v228);
    sub_241CA896C(v121, &qword_26B0385B8, MEMORY[0x263F07490]);
    uint64_t v123 = v232;
    goto LABEL_24;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_241CA4548(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  if (unint64_t)(a1 - 1) < 9 && ((0x10Du >> v1)) {
    return dword_241CF4198[v1];
  }
  sub_241CDBE00();
  sub_241CDB180();
  type metadata accessor for HKDisplayTypeChartStyle(0);
  sub_241CA89DC();
  sub_241CDB120();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  uint64_t result = sub_241CDBF10();
  __break(1u);
  return result;
}

uint64_t sub_241CA4648(uint64_t a1, void *a2)
{
  sub_241CDC270();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  uint64_t v3 = (void *)sub_241CDB4D0();
  sub_241CD73D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  id v4 = objc_msgSend(a2, sel_sensitiveLoggingIdentifier);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  return 91;
}

id sub_241CA4744(uint64_t a1, void *a2, void *a3, void *a4, void *a5, int a6, uint64_t a7, int a8, uint64_t a9)
{
  uint64_t v122 = (void *)a1;
  int v120 = a8;
  uint64_t v118 = a7;
  int v123 = a6;
  uint64_t v116 = a4;
  uint64_t v127 = a3;
  uint64_t v124 = a2;
  uint64_t v10 = sub_241CD9910();
  uint64_t v125 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v113 = &v106[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v11);
  uint64_t v114 = &v106[-v13];
  sub_241CA8CFC(0, &qword_26B0321C8, MEMORY[0x263F46BF8], MEMORY[0x263F8D8F0]);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v115 = &v106[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v128 = &v106[-v17];
  uint64_t v18 = sub_241CD9940();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = &v106[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = sub_241CDA1A0();
  uint64_t v117 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v112 = &v106[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v111 = &v106[-v26];
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = &v106[-v27];
  sub_241A313AC(0, (unint64_t *)&qword_26B0303A0);
  uint64_t v29 = (void *)sub_241CDB6D0();
  uint64_t v30 = (void *)sub_241CDB090();
  unsigned int v31 = objc_msgSend(v29, sel_hk_BOOLForKey_defaultValue_, v30, 0);

  id v126 = a5;
  uint64_t v119 = v10;
  if (v31)
  {
    sub_241CDA180();
    (*(void (**)(unsigned char *, void *, uint64_t))(v19 + 16))(v21, a5, v18);
    uint64_t v32 = v127;
    uint64_t v33 = sub_241CDA190();
    os_log_type_t v34 = sub_241CDB670();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v109 = swift_slowAlloc();
      uint64_t v129 = v109;
      *(_DWORD *)uint64_t v36 = 136446978;
      os_log_t v108 = v33;
      v130[0] = v121;
      swift_getMetatypeMetadata();
      int v107 = v35;
      uint64_t v37 = sub_241CDB120();
      uint64_t v110 = v22;
      v130[0] = sub_241A33FE4(v37, v38, &v129);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      id v39 = objc_msgSend(v32, sel_identifier, v36 + 14);
      uint64_t v40 = sub_241CDB0D0();
      unint64_t v42 = v41;

      uint64_t v22 = v110;
      v130[0] = sub_241A33FE4(v40, v42, &v129);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 22) = 2080;
      uint64_t v43 = sub_241CD9FA0();
      v130[0] = sub_241A33FE4(v43, v44, &v129);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 32) = 2080;
      sub_241CA8A18(&qword_268D43AB8, MEMORY[0x263F46C00]);
      uint64_t v45 = sub_241CDC0D0();
      v130[0] = sub_241A33FE4(v45, v46, &v129);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v21, v18);
      os_log_t v47 = v108;
      _os_log_impl(&dword_241A23000, v108, (os_log_type_t)v107, "[%{public}s] [%s] [%s] %s", (uint8_t *)v36, 0x2Au);
      uint64_t v48 = v109;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v48, -1, -1);
      uint64_t v49 = v36;
      uint64_t v10 = v119;
      MEMORY[0x245637F20](v49, -1, -1);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v21, v18);
    }
    (*(void (**)(unsigned char *, uint64_t))(v117 + 8))(v28, v22);
  }
  uint64_t v50 = sub_241CD9920();
  uint64_t v51 = *(void *)(v50 + 16);
  uint64_t v52 = v122;
  if (v51)
  {
    uint64_t v53 = v125;
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v125 + 16))(v128, v50+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(void *)(v125 + 72) * (v51 - 1), v10);
    uint64_t v54 = 0;
    uint64_t v55 = v124;
  }
  else
  {
    uint64_t v54 = 1;
    uint64_t v55 = v124;
    uint64_t v53 = v125;
  }
  uint64_t v56 = v128;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v128, v54, 1, v10);
  swift_bridgeObjectRelease();
  uint64_t v57 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v53 + 48);
  int v58 = v57(v56, 1, v10);
  int v59 = v58;
  if ((v120 & 1) == 0)
  {
    if ((v118 & 1) != 0 && v58 == 1)
    {
      uint64_t v60 = sub_241CD9FA0();
      uint64_t v62 = v61;
      if (v60 == sub_241CD9FA0() && v62 == v63)
      {
        swift_bridgeObjectRelease_n();
LABEL_16:
        uint64_t v65 = v111;
        sub_241CDA180();
        id v66 = v127;
        id v67 = v52;
        id v68 = v66;
        id v69 = v67;
        uint64_t v70 = sub_241CDA190();
        os_log_type_t v71 = sub_241CDB670();
        if (os_log_type_enabled(v70, v71))
        {
          uint64_t v72 = (uint8_t *)swift_slowAlloc();
          uint64_t v73 = swift_slowAlloc();
          v130[0] = v73;
          uint64_t v110 = v22;
          *(_DWORD *)uint64_t v72 = 136315138;
          uint64_t v74 = sub_241CA4648((uint64_t)v69, v68);
          uint64_t v129 = sub_241A33FE4(v74, v75, v130);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241A23000, v70, v71, "%s: Hiding short-term trend tile as directed by overrides", v72, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v73, -1, -1);
          MEMORY[0x245637F20](v72, -1, -1);

          (*(void (**)(unsigned char *, uint64_t))(v117 + 8))(v65, v110);
LABEL_33:
          sub_241CA896C((uint64_t)v128, &qword_26B0321C8, MEMORY[0x263F46BF8]);
          return 0;
        }

        uint64_t v80 = *(void (**)(unsigned char *, uint64_t))(v117 + 8);
        uint64_t v81 = v65;
        goto LABEL_32;
      }
      char v64 = sub_241CDC100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v64) {
        goto LABEL_16;
      }
    }
    if ((v118 & 2) != 0 && v59 == 1)
    {
      uint64_t v76 = sub_241CD9FA0();
      uint64_t v78 = v77;
      if (v76 == sub_241CD9FA0() && v78 == v79)
      {
        swift_bridgeObjectRelease_n();
LABEL_25:
        sub_241CDA180();
        unint64_t v83 = v127;
        id v84 = v52;
        id v85 = v83;
        id v86 = v84;
        unint64_t v87 = sub_241CDA190();
        os_log_type_t v88 = sub_241CDB670();
        if (os_log_type_enabled(v87, v88))
        {
          uint64_t v89 = (uint8_t *)swift_slowAlloc();
          uint64_t v90 = swift_slowAlloc();
          v130[0] = v90;
          *(_DWORD *)uint64_t v89 = 136315138;
          uint64_t v91 = sub_241CA4648((uint64_t)v86, v85);
          uint64_t v129 = sub_241A33FE4(v91, v92, v130);
          sub_241CDBBF0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241A23000, v87, v88, "%s: Hiding long-term trend tile as directed by overrides", v89, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v90, -1, -1);
          MEMORY[0x245637F20](v89, -1, -1);

          (*(void (**)(unsigned char *, uint64_t))(v117 + 8))(v112, v22);
          goto LABEL_33;
        }

        uint64_t v80 = *(void (**)(unsigned char *, uint64_t))(v117 + 8);
        uint64_t v81 = v112;
LABEL_32:
        v80(v81, v22);
        goto LABEL_33;
      }
      char v82 = sub_241CDC100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v82) {
        goto LABEL_25;
      }
    }
  }
  BOOL v93 = v59 == 1;
  int v120 = v59;
  uint64_t v94 = (uint64_t)v114;
  sub_241CD9930();
  uint64_t v121 = a9;
  uint64_t v95 = v116;
  char v96 = v123;
  id v126 = sub_241CA6E6C(v127, v116, (uint64_t)v52, v94, v123, v93, 1, v55, v93, a9);
  uint64_t v97 = v125;
  id v98 = *(void (**)(uint64_t, uint64_t))(v125 + 8);
  uint64_t v99 = v94;
  uint64_t v100 = v119;
  v98(v99, v119);
  unint64_t v101 = v115;
  sub_241CA88EC((uint64_t)v128, (uint64_t)v115, &qword_26B0321C8, MEMORY[0x263F46BF8]);
  if (v57(v101, 1, v100) == 1)
  {
    unint64_t v102 = (uint64_t (*)(uint64_t))MEMORY[0x263F46BF8];
    sub_241CA896C((uint64_t)v128, &qword_26B0321C8, MEMORY[0x263F46BF8]);
    sub_241CA896C((uint64_t)v101, &qword_26B0321C8, v102);
  }
  else
  {
    unsigned __int8 v103 = v120 == 1;
    uint64_t v104 = (uint64_t)v113;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v97 + 32))(v113, v101, v100);
    sub_241CA6E6C(v127, v95, (uint64_t)v122, v104, v96, 1, 0, v124, v103, v121);
    v98(v104, v100);
    sub_241CA896C((uint64_t)v128, &qword_26B0321C8, MEMORY[0x263F46BF8]);
  }
  return v126;
}

char *sub_241CA5458(void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v78 = a7;
  id v86 = a4;
  uint64_t v87 = a5;
  BOOL v93 = a3;
  uint64_t v91 = a9;
  uint64_t v75 = sub_241CDA1A0();
  v74[2] = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v76 = (char *)v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241CA8CFC(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v74 - v17;
  uint64_t v80 = sub_241CD98D0();
  uint64_t v81 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v77 = (uint64_t)v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CA8CFC(0, &qword_26B038F10, MEMORY[0x263F062D0], v15);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  id v84 = (void (*)(char *, uint64_t))((char *)v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v74 - v23;
  uint64_t v25 = sub_241CD6810();
  uint64_t v26 = *(char **)(v25 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  os_log_type_t v88 = (char *)v74 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v79 = (void *)((char *)v74 - v32);
  type metadata accessor for SummaryTrendFeedItemStringBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = a1;
  *(void *)(inited + 24) = a2;
  uint64_t v90 = inited;
  id v34 = a1;
  id v35 = a2;
  id v36 = objc_msgSend(v34, sel_profileIdentifier);
  id v92 = objc_msgSend(v36, sel_type);

  uint64_t v89 = v25;
  int v82 = a8;
  id v85 = v35;
  if (!a6)
  {
    uint64_t v44 = v25;
    unint64_t v42 = v29;
    uint64_t v43 = v26;
    unint64_t v83 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v26 + 7);
    v83(v24, 1, 1, v44);
    goto LABEL_6;
  }
  uint64_t result = (char *)objc_msgSend(a6, sel_dateInterval);
  if (result)
  {
    unint64_t v38 = result;
    sub_241CDB920();

    id v39 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v26 + 7);
    v39(v24, 0, 1, v25);
    int v40 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v26 + 6))(v24, 1, v25);
    uint64_t v41 = v81;
    unint64_t v83 = v39;
    if (v40 != 1)
    {
      uint64_t v62 = (uint64_t)v18;
      uint64_t v63 = (void (*)(void, void, void))v79;
      (*((void (**)(void *, char *, uint64_t))v26 + 4))(v79, v24, v25);
      sub_241CA88EC(v78, v62, &qword_26B0321C0, MEMORY[0x263F46BE0]);
      uint64_t v64 = v25;
      uint64_t v65 = v80;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v62, 1, v80) != 1)
      {
        os_log_type_t v88 = v26;
        uint64_t v66 = v77;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v77, v62, v65);
        id v67 = v93;
        uint64_t v68 = v91;
        int v69 = v82;
        sub_241CBA44C(v93, (uint64_t)v92, 0, v91, v66, (uint64_t)v63, v82, 0, 1);
        uint64_t v61 = v70;
        swift_bridgeObjectRelease();
        uint64_t v71 = v77;
        if (v92 == (id)1)
        {
          uint64_t v72 = v68;
          uint64_t v73 = (void (*)(void, void, void))v79;
          sub_241CBA44C(v67, 2, 0, v72, v77, (uint64_t)v79, v69, 0, 1);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v71, v80);
          (*((void (**)(void (*)(void, void, void), uint64_t))v88 + 1))(v73, v89);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v71, v65);
          (*((void (**)(void *, uint64_t))v88 + 1))(v79, v89);
        }
        return (char *)v61;
      }
      unint64_t v42 = v29;
      uint64_t v43 = v26;
      (*((void (**)(void (*)(void, void, void), uint64_t))v26 + 1))(v63, v64);
      sub_241CA896C(v62, &qword_26B0321C0, MEMORY[0x263F46BE0]);
      a8 = v82;
      uint64_t v45 = (uint64_t)v84;
LABEL_7:
      uint64_t v46 = (uint64_t)v88;
      sub_241CD98E0();
      os_log_t v47 = v93;
      id v49 = sub_241CCFC18(v93, v48);
      id v50 = v86;
      id v86 = v49;
      id v51 = sub_241CCFF74(v50, v85);
      sub_241CD9900();
      sub_241BAC570(1, a10, v46);
      uint64_t v52 = v42;
      uint64_t v53 = v89;
      id v84 = (void (*)(char *, uint64_t))*((void *)v43 + 1);
      v84(v52, v89);
      uint64_t v79 = (void *)*((void *)v43 + 2);
      ((void (*)(uint64_t, uint64_t, uint64_t))v79)(v45, v46, v53);
      uint64_t v54 = v83;
      uint64_t v80 = (uint64_t)(v43 + 56);
      v83((char *)v45, 0, 1, v53);
      uint64_t v81 = a10;
      id v85 = v51;
      uint64_t v55 = v51;
      uint64_t v56 = v91;
      id v57 = v92;
      sub_241CBB0D0(v55, v47, (uint64_t)v92, 0, v91, v45, a8, 0, 1, a10);
      uint64_t v87 = v59;
      os_log_type_t v88 = v58;
      sub_241CA896C(v45, &qword_26B038F10, MEMORY[0x263F062D0]);
      swift_bridgeObjectRelease();
      if (v57 == (id)1)
      {
        ((void (*)(uint64_t, uint64_t, uint64_t))v79)(v45, v46, v53);
        v54((char *)v45, 0, 1, v53);
        uint64_t v60 = v85;
        sub_241CBB0D0(v85, v93, 2, 0, v56, v45, v82, 0, 1, v81);

        swift_release();
        sub_241CA896C(v45, &qword_26B038F10, MEMORY[0x263F062D0]);
        v84((char *)v46, v53);
        swift_bridgeObjectRelease();
      }
      else
      {
        v84((char *)v46, v53);
        swift_release();
      }
      return v88;
    }
    unint64_t v42 = v29;
    uint64_t v43 = v26;
LABEL_6:
    uint64_t v45 = (uint64_t)v84;
    sub_241CA896C((uint64_t)v24, &qword_26B038F10, MEMORY[0x263F062D0]);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_241CA608C(void (**a1)(char *, uint64_t), void *a2, int a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v134 = a6;
  uint64_t v135 = a7;
  unint64_t v138 = a1;
  os_log_type_t v139 = a2;
  uint64_t v10 = sub_241CDA1A0();
  uint64_t v136 = *(void *)(v10 - 8);
  uint64_t v137 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v126 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v133 = (char *)&v126 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v126 - v19;
  uint64_t v21 = sub_241CD6810();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v131 = (char *)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v132 = (char *)&v126 - v25;
  uint64_t v26 = sub_241CD84A0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v142 = v26;
  uint64_t v143 = v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v141 = (char *)&v126 - v31;
  sub_241CA8CFC(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v32 - 8);
  id v34 = (char *)&v126 - v33;
  LODWORD(v140) = a3;
  uint64_t v35 = sub_241CD9F80();
  if (v36)
  {
    sub_241CDA180();
    uint64_t v66 = v138;
    id v67 = v139;
    uint64_t v68 = v66;
    id v69 = v67;
    uint64_t v70 = sub_241CDA190();
    os_log_type_t v71 = sub_241CDB650();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      v145[0] = v73;
      *(_DWORD *)uint64_t v72 = 136315394;
      uint64_t v74 = sub_241CA4648((uint64_t)v68, v69);
      uint64_t v144 = sub_241A33FE4(v74, v75, v145);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2080;
      uint64_t v76 = sub_241CD9FA0();
      uint64_t v144 = sub_241A33FE4(v76, v77, v145);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v70, v71, "%s: invalid date range of: %s", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v73, -1, -1);
      MEMORY[0x245637F20](v72, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v136 + 8))(v13, v137);
  }
  else
  {
    uint64_t v37 = (void *)v35;
    uint64_t v128 = v20;
    uint64_t v129 = v16;
    type metadata accessor for ChartModelParsing();
    unint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    uint64_t v127 = a4;
    v38(v34, a4, v21);
    uint64_t v130 = v22;
    id v39 = *(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56);
    uint64_t v140 = v21;
    v39(v34, 0, 1, v21);
    int v40 = v138;
    uint64_t v41 = sub_241AD8044(v138, v139, v37, (uint64_t)v34, a5, v134, v135);
    uint64_t v43 = v42;
    sub_241CA896C((uint64_t)v34, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v44 = (uint64_t)v37;
    if (v41)
    {
      uint64_t v45 = v41;
      uint64_t v135 = v43;
      uint64_t v46 = v139;
      uint64_t v47 = *(void *)(v45 + 16);
      if (v47)
      {
        v145[0] = MEMORY[0x263F8EE78];
        sub_241CDBE80();
        uint64_t v48 = v142;
        id v49 = *(void **)(v143 + 16);
        uint64_t v50 = *(unsigned __int8 *)(v143 + 80);
        uint64_t v136 = v45;
        uint64_t v51 = v45 + ((v50 + 32) & ~v50);
        unint64_t v138 = (void (**)(char *, uint64_t))(v130 + 8);
        os_log_type_t v139 = v49;
        uint64_t v52 = (void (**)(char *, uint64_t))(v143 + 8);
        v143 += 16;
        uint64_t v137 = *(void *)(v143 + 56);
        uint64_t v53 = v132;
        uint64_t v54 = v141;
        while (1)
        {
          uint64_t v56 = (void (*)(char *, char *, uint64_t))v139;
          ((void (*)(char *, uint64_t, uint64_t))v139)(v54, v51, v48);
          v56(v30, v54, v48);
          sub_241CD8460();
          sub_241CD8480();
          double v58 = v57;
          uint64_t v59 = sub_241CD8490();
          char v61 = v60;
          id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46680]), sel_init);
          if (!result) {
            break;
          }
          uint64_t v63 = result;
          sub_241A313AC(0, &qword_26B0303E8);
          id v64 = v63;
          uint64_t v65 = (void *)sub_241CDB930();
          objc_msgSend(v64, sel_setDateInterval_, v65);

          objc_msgSend(v64, sel_setValue_, v58);
          if (v61)
          {
            (*v138)(v53, v140);
          }
          else
          {
            objc_msgSend(v64, sel_setValue2_, *(double *)&v59);

            (*v138)(v53, v140);
          }
          uint64_t v54 = v141;
          uint64_t v48 = v142;
          uint64_t v55 = *v52;
          (*v52)(v30, v142);
          v55(v54, v48);
          sub_241CDBE60();
          sub_241CDBE90();
          sub_241CDBEA0();
          sub_241CDBE70();
          v51 += v137;
          if (!--v47)
          {
            uint64_t v78 = v145[0];
            swift_bridgeObjectRelease();
            return (id)v78;
          }
        }
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      BOOL v93 = v128;
      sub_241CDA180();
      uint64_t v94 = v131;
      uint64_t v95 = v140;
      v38(v131, v127, v140);
      char v96 = v40;
      id v97 = v46;
      id v98 = v96;
      id v99 = v97;
      uint64_t v100 = sub_241CDA190();
      os_log_type_t v101 = sub_241CDB650();
      if (os_log_type_enabled(v100, v101))
      {
        uint64_t v102 = swift_slowAlloc();
        uint64_t v143 = swift_slowAlloc();
        v145[0] = v143;
        *(_DWORD *)uint64_t v102 = 136315650;
        uint64_t v103 = sub_241CA4648((uint64_t)v98, v99);
        uint64_t v144 = sub_241A33FE4(v103, v104, v145);
        uint64_t v142 = v44;
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v102 + 12) = 2080;
        sub_241CA8A18(&qword_26B031F70, MEMORY[0x263F062D0]);
        uint64_t v105 = v131;
        uint64_t v106 = sub_241CDC0D0();
        uint64_t v144 = sub_241A33FE4(v106, v107, v145);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v130 + 8))(v105, v95);
        *(_WORD *)(v102 + 22) = 2080;
        uint64_t v144 = v142;
        type metadata accessor for HKTimeScope(0);
        uint64_t v108 = sub_241CDB130();
        uint64_t v144 = sub_241A33FE4(v108, v109, v145);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v100, v101, "%s:  unable to create trend, visualization has zero points that match requested date interval %s for %s", (uint8_t *)v102, 0x20u);
        uint64_t v110 = v143;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v110, -1, -1);
        MEMORY[0x245637F20](v102, -1, -1);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v130 + 8))(v94, v95);
      }

      (*(void (**)(char *, uint64_t))(v136 + 8))(v93, v137);
    }
    else
    {
      uint64_t v79 = v133;
      sub_241CDA180();
      uint64_t v80 = v40;
      uint64_t v81 = v139;
      int v82 = v80;
      id v83 = v81;
      id v84 = sub_241CDA190();
      os_log_type_t v85 = sub_241CDB650();
      if (os_log_type_enabled(v84, v85))
      {
        uint64_t v86 = swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        v145[0] = v87;
        *(_DWORD *)uint64_t v86 = 136315394;
        uint64_t v88 = sub_241CA4648((uint64_t)v82, v83);
        uint64_t v144 = sub_241A33FE4(v88, v89, v145);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v86 + 12) = 2080;
        uint64_t v144 = v44;
        type metadata accessor for HKTimeScope(0);
        uint64_t v90 = sub_241CDB130();
        uint64_t v144 = sub_241A33FE4(v90, v91, v145);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v84, v85, "%s: unable to create trend, model has unreadable chart for %s", (uint8_t *)v86, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x245637F20](v87, -1, -1);
        MEMORY[0x245637F20](v86, -1, -1);

        id v92 = *(void (**)(char *, uint64_t))(v136 + 8);
        v92(v133, v137);
      }
      else
      {

        id v92 = *(void (**)(char *, uint64_t))(v136 + 8);
        v92(v79, v137);
      }
      v111 = v129;
      sub_241CDA0F0();
      uint64_t v112 = v82;
      id v113 = v83;
      id v114 = a5;
      uint64_t v115 = v112;
      id v116 = v113;
      id v117 = v114;
      uint64_t v118 = sub_241CDA190();
      os_log_type_t v119 = sub_241CDB630();
      if (os_log_type_enabled(v118, v119))
      {
        uint64_t v120 = swift_slowAlloc();
        uint64_t v143 = (uint64_t)v92;
        uint64_t v121 = v120;
        uint64_t v122 = swift_slowAlloc();
        v145[0] = v122;
        *(_DWORD *)uint64_t v121 = 136315394;
        uint64_t v123 = sub_241CA4648((uint64_t)v115, v116);
        uint64_t v144 = sub_241A33FE4(v123, v124, v145);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v121 + 12) = 2080;
        Swift::String v125 = HKCodableChartSharableModel.logModelBytes()();
        uint64_t v144 = sub_241A33FE4(v125._countAndFlagsBits, (unint64_t)v125._object, v145);
        sub_241CDBBF0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v118, v119, "%s: chart data %s", (uint8_t *)v121, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x245637F20](v122, -1, -1);
        MEMORY[0x245637F20](v121, -1, -1);

        ((void (*)(char *, uint64_t))v143)(v129, v137);
      }
      else
      {

        v92(v111, v137);
      }
    }
  }
  return 0;
}

id sub_241CA6E6C(void *a1, void *a2, uint64_t a3, uint64_t a4, char a5, int a6, int a7, void *a8, unsigned __int8 a9, uint64_t a10)
{
  uint64_t v35 = a3;
  int v36 = a7;
  v32[0] = a6;
  uint64_t v29 = (uint64_t)a1;
  int v33 = a9;
  uint64_t v31 = a10;
  uint64_t v14 = sub_241CD6810();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v28 - v19;
  sub_241CD98E0();
  id v34 = sub_241CCFC18(a1, v21);
  uint64_t v22 = (uint64_t)a8;
  id v23 = sub_241CCFF74(a2, a8);
  id v30 = v23;
  sub_241CD9900();
  sub_241BAC570(v32[0], v31, (uint64_t)v20);
  *(void *)uint64_t v32 = *(void *)(v15 + 8);
  (*(void (**)(char *, uint64_t))v32)(v18, v14);
  sub_241CA70D0((uint64_t)v20, a5, v33);
  sub_241CA8A60(v29, v23, v35, v36, v22);
  double v25 = v24;
  sub_241A313AC(0, &qword_26B034E50);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
  swift_bridgeObjectRetain();
  id v26 = HKCodableSummaryTrendLineViewModel.init(dateInterval:average:xAxisLabel:lineLabel:)((uint64_t)v18, v25);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))v32)(v20, v14);
  return v26;
}

uint64_t sub_241CA70D0(uint64_t a1, char a2, char a3)
{
  uint64_t v5 = sub_241CD6EE0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    if (a2 == 4 || a2 == 5)
    {
LABEL_10:
      sub_241CD6EA0();
      uint64_t v20 = sub_241ABEF60(a2, (uint64_t)v8);
      char v22 = v21;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if (qword_26B038428 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_241CD69E0();
      if ((v22 & 1) == 0)
      {
        sub_241CA8CFC(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
        uint64_t v23 = swift_allocObject();
        uint64_t v24 = MEMORY[0x263F8D6C8];
        *(_OWORD *)(v23 + 16) = xmmword_241CEB730;
        uint64_t v25 = MEMORY[0x263F8D750];
        *(void *)(v23 + 56) = v24;
        *(void *)(v23 + 64) = v25;
        *(void *)(v23 + 32) = v20;
        uint64_t v19 = sub_241CDB0A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return v19;
    }
  }
  else if (a2 == 4 || a2 == 5)
  {
    goto LABEL_10;
  }
  sub_241CDA180();
  uint64_t v13 = sub_241CDA190();
  os_log_type_t v14 = sub_241CDB650();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v28 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v17 = sub_241CDC270();
    uint64_t v27 = sub_241A33FE4(v17, v18, &v28);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v13, v14, "[%s] Attempting to localize a trend for an unsupported date range.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v16, -1, -1);
    MEMORY[0x245637F20](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return 0;
}

uint64_t type metadata accessor for TrendComponentBuilder()
{
  return self;
}

id sub_241CA7564(uint64_t a1, void *a2, void *a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v127 = a6;
  int v148 = a5;
  id v134 = a3;
  int v147 = a2;
  id v125 = (id)a1;
  uint64_t v115 = sub_241CDA1A0();
  v114[3] = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  v114[2] = (char *)v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_241CD6EE0();
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  uint64_t v121 = (char *)v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241CA8CFC(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  os_log_type_t v14 = (char *)v114 - v13;
  uint64_t v138 = sub_241CD98D0();
  uint64_t v132 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  id v116 = (char *)v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CA8CFC(0, &qword_26B038F10, MEMORY[0x263F062D0], v8);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v144 = (uint64_t)v114 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v150 = (uint64_t)v114 - v22;
  uint64_t v23 = sub_241CD6810();
  uint64_t v149 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v131 = (char *)v114 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)v114 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v143 = (uint64_t)v114 - v29;
  uint64_t v30 = sub_241CD9910();
  uint64_t v146 = *(void *)(v30 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  id v117 = (char *)v114 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  id v34 = (char *)v114 - v33;
  sub_241CA8CFC(0, &qword_26B0321C8, MEMORY[0x263F46BF8], v8);
  uint64_t v36 = MEMORY[0x270FA5388](v35 - 8);
  uint64_t v129 = (uint64_t)v114 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v118 = (uint64_t)v114 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v128 = (char *)v114 - v41;
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)v114 - v42;
  uint64_t v44 = sub_241CD9920();
  uint64_t v45 = *(void *)(v44 + 16);
  uint64_t v130 = v12;
  os_log_type_t v119 = v14;
  unint64_t v124 = v19;
  uint64_t v142 = v23;
  if (v45)
  {
    uint64_t v46 = v146;
    (*(void (**)(char *, unint64_t, uint64_t))(v146 + 16))(v43, v44+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v146 + 72) * (v45 - 1), v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56))(v43, 1, 1, v30);
  }
  swift_bridgeObjectRelease();
  uint64_t v47 = v146;
  uint64_t v48 = v146 + 48;
  id v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v146 + 48);
  LODWORD(v145) = v49(v43, 1, v30) == 1;
  sub_241CD9930();
  sub_241CD98E0();
  double v51 = v50;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v52 = (char *)(v47 + 8);
  v53(v34, v30);
  id v140 = sub_241CCFC18(v147, v51);
  sub_241CD9930();
  sub_241CD9900();
  os_log_type_t v139 = v53;
  v53(v34, v30);
  sub_241BAC570((int)v145, (uint64_t)v134, v143);
  uint64_t v54 = v149;
  uint64_t v55 = v149 + 8;
  uint64_t v56 = v142;
  uint64_t v141 = *(void (**)(char *, uint64_t))(v149 + 8);
  v141(v28, v142);
  double v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
  v57(v150, 1, 1, v56);
  uint64_t v145 = v43;
  uint64_t v58 = (uint64_t)v43;
  uint64_t v59 = (uint64_t)v128;
  sub_241CA88EC(v58, (uint64_t)v128, &qword_26B0321C8, MEMORY[0x263F46BF8]);
  uint64_t v136 = v48;
  uint64_t v135 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v49;
  int v60 = v49((char *)v59, 1, v30);
  uint64_t v137 = v30;
  uint64_t v133 = v55;
  uint64_t v126 = v28;
  uint64_t v120 = v57;
  if (v60 == 1)
  {
    sub_241CA896C(v59, &qword_26B0321C8, MEMORY[0x263F46BF8]);
    uint64_t v128 = 0;
    uint64_t v61 = v150;
  }
  else
  {
    uint64_t v62 = v59;
    uint64_t v63 = v117;
    (*(void (**)(char *, uint64_t, uint64_t))(v146 + 32))(v117, v62, v30);
    sub_241CD98E0();
    uint64_t v128 = (char *)sub_241CCFC18(v147, v64);
    sub_241CD9900();
    uint64_t v65 = v144;
    sub_241BAC570(1, (uint64_t)v134, v144);
    v141(v28, v56);
    v139(v63, v30);
    uint64_t v66 = v150;
    sub_241CA896C(v150, &qword_26B038F10, MEMORY[0x263F062D0]);
    v57(v65, 0, 1, v56);
    sub_241A3AAA0(v65, v66);
    uint64_t v61 = v66;
  }
  id v67 = v52;
  uint64_t v68 = (uint64_t)v124;
  id v69 = self;
  uint64_t v70 = v125;
  id v71 = objc_msgSend(v69, sel_sharedInstanceForHealthStore_, v125);
  id v72 = objc_msgSend(v71, sel_createHKUnitPreferenceController);

  type metadata accessor for SummaryTrendFeedItemStringBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v70;
  *(void *)(inited + 24) = v72;
  uint64_t v146 = inited;
  id v74 = v70;
  id v75 = v72;
  id v76 = objc_msgSend(v74, sel_profileIdentifier);
  id v77 = objc_msgSend(v76, sel_type);

  sub_241CA88EC(v61, v68, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v78 = v149;
  int v79 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v149 + 48))(v68, 1, v56);
  uint64_t v80 = v138;
  id v134 = v75;
  if (v79 == 1)
  {
    sub_241CA896C(v68, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v81 = v132;
    uint64_t v82 = (uint64_t)v145;
    int v83 = v148;
    id v84 = v120;
LABEL_13:
    uint64_t v90 = v144;
    v84(v144, 1, 1, v56);
    uint64_t v91 = (uint64_t)v121;
    sub_241CD6EA0();
    id v92 = v147;
    uint64_t v127 = sub_241CBB0D0(v140, v147, (uint64_t)v77, 0, v127, v90, v83, 0, 1, v91);
    id v125 = (id)v93;
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v91, v123);
    sub_241CA896C(v90, &qword_26B038F10, MEMORY[0x263F062D0]);
    swift_bridgeObjectRelease();
    uint64_t v94 = (void (*)(uint64_t, uint64_t))v139;
    uint64_t v95 = (uint64_t)v126;
    goto LABEL_14;
  }
  id v125 = v77;
  id v117 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v131, v68, v56);
  uint64_t v85 = v118;
  sub_241CA88EC((uint64_t)v145, v118, &qword_26B0321C8, MEMORY[0x263F46BF8]);
  uint64_t v86 = v137;
  int v87 = v135(v85, 1, v137);
  uint64_t v81 = v132;
  if (v87 == 1)
  {
    sub_241CA896C(v85, &qword_26B0321C8, MEMORY[0x263F46BF8]);
    uint64_t v88 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v119, 1, 1, v80);
    int v83 = v148;
LABEL_12:
    v141(v131, v56);
    sub_241CA896C(v88, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    uint64_t v82 = (uint64_t)v145;
    id v84 = v120;
    id v77 = v125;
    goto LABEL_13;
  }
  uint64_t v88 = (uint64_t)v119;
  sub_241CD98F0();
  v139((char *)v85, v86);
  int v89 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v88, 1, v80);
  int v83 = v148;
  if (v89 == 1) {
    goto LABEL_12;
  }
  uint64_t v109 = (uint64_t)v116;
  uint64_t v110 = v138;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v116, v88, v138);
  id v92 = v147;
  uint64_t v111 = (uint64_t)v131;
  uint64_t v112 = sub_241CBA44C(v147, (uint64_t)v125, 0, v127, v109, (uint64_t)v131, v83, 0, 1);
  id v125 = (id)v113;
  uint64_t v127 = v112;
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v109, v110);
  v141((char *)v111, v56);
  swift_bridgeObjectRelease();
  uint64_t v94 = (void (*)(uint64_t, uint64_t))v139;
  uint64_t v95 = (uint64_t)v126;
  uint64_t v82 = (uint64_t)v145;
LABEL_14:
  uint64_t v96 = v129;
  sub_241CA88EC(v82, v129, &qword_26B0321C8, MEMORY[0x263F46BF8]);
  uint64_t v97 = v137;
  if (v135(v96, 1, v137) == 1)
  {
    sub_241CA896C(v96, &qword_26B0321C8, MEMORY[0x263F46BF8]);
    uint64_t v98 = (uint64_t)v130;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v130, 1, 1, v138);
  }
  else
  {
    uint64_t v98 = (uint64_t)v130;
    sub_241CD98F0();
    v94(v96, v97);
  }
  sub_241A313AC(0, &qword_26B034E68);
  id v99 = v92;
  uint64_t v100 = (void *)sub_241CD9F80();
  uint64_t v102 = v101 & 1;
  uint64_t v103 = v143;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v149 + 16))(v95, v143, v56);
  unint64_t v104 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  uint64_t v105 = v150;
  uint64_t v106 = v144;
  sub_241CA88EC(v150, v144, &qword_26B038F10, MEMORY[0x263F062D0]);
  id v107 = HKCodableSummaryTrendChartViewModel.init(chartString:changeType:dataType:coveredTimeScope:baselineDateInterval:baselineQuantity:changeDateInterval:changeQuantity:)(v127, (uint64_t)v125, v98, v99, v100, v102, v95, v140, v106, v128);

  swift_release();
  sub_241CA896C(v105, &qword_26B038F10, v104);
  v141((char *)v103, v142);
  sub_241CA896C((uint64_t)v145, &qword_26B0321C8, MEMORY[0x263F46BF8]);
  return v107;
}

uint64_t sub_241CA88EC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241CA8CFC(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241CA896C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241CA8CFC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_241CA89DC()
{
  unint64_t result = qword_268D43AB0;
  if (!qword_268D43AB0)
  {
    type metadata accessor for HKDisplayTypeChartStyle(255);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268D43AB0);
  }
  return result;
}

uint64_t sub_241CA8A18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241CA8A60(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5)
{
  id v9 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, a3);
  id v10 = objc_msgSend(v9, sel_profile);
  id v11 = objc_msgSend(v10, sel_displayTypeController);

  if (v11)
  {
    id v12 = objc_msgSend(v11, sel_displayTypeForObjectType_, a1);
    if (v12)
    {
      uint64_t v13 = v12;
      id v14 = objc_msgSend(a2, sel__unit);
      id v15 = objc_msgSend(v13, sel_hk_valueFormatterForUnit_, v14);

      id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46A48]), sel_initWithDisplayType_unitPreferenceController_, v13, a5);
      objc_msgSend(a2, sel__value);
      uint64_t v17 = (void *)sub_241CDB330();
      id v18 = objc_msgSend(v15, sel_stringFromValue_displayType_unitController_, v17, v13, a5);

      if (v18)
      {
        uint64_t v19 = sub_241CDB0D0();

        objc_msgSend(a2, sel__value);
        uint64_t v20 = (void *)sub_241CDB330();
        id v21 = objc_msgSend(v16, sel_stringFromNumber_displayType_unitController_, v20, 0, 0);

        if (v21)
        {
          uint64_t v24 = v19;
          uint64_t v22 = sub_241CDB0D0();

          swift_bridgeObjectRelease();
          objc_msgSend(a2, sel__value);
          if (a4) {
            uint64_t v22 = v24;
          }
          goto LABEL_10;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v22 = 0;
LABEL_10:

      id v9 = v15;
      goto LABEL_11;
    }
  }
  uint64_t v22 = 0;
  id v16 = v11;
LABEL_11:

  return v22;
}

void sub_241CA8CFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241CA8D60(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v65 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  MEMORY[0x270FA5388](v3);
  double v64 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD7FD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CAD480(0, &qword_268D43AD8, MEMORY[0x263F44060]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v66 = (uint64_t)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v68 = (char *)&v55 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v67 = (char *)&v55 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v60 = (uint64_t)&v55 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v55 - v18;
  uint64_t v20 = (uint64_t)v2 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_dataModel;
  swift_beginAccess();
  sub_241CAD300(v20, (uint64_t)v19);
  uint64_t v21 = sub_241CD87B0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v70(v19, 1, v21) == 1)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v69 = v20;
  sub_241CD8750();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v22 + 8);
  v23(v19, v21);
  id v24 = (id)sub_241CD7FA0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v24)
  {
    uint64_t v25 = (void (*)(uint64_t, uint64_t))v23;
    uint64_t v26 = (uint64_t)v67;
    uint64_t v27 = (uint64_t)v68;
    uint64_t v28 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v70;
    goto LABEL_9;
  }
  uint64_t v59 = v5;
  uint64_t v29 = v64;
  sub_241CDA120();
  id v30 = v2;
  uint64_t v31 = sub_241CDA190();
  int v32 = sub_241CDB650();
  if (!os_log_type_enabled(v31, (os_log_type_t)v32))
  {

    (*(void (**)(char *, uint64_t))(v62 + 8))(v29, v63);
    goto LABEL_8;
  }
  int v56 = v32;
  os_log_t v57 = v31;
  id v58 = v30;
  uint64_t v33 = swift_slowAlloc();
  uint64_t v55 = swift_slowAlloc();
  uint64_t v72 = v55;
  *(_DWORD *)uint64_t v33 = 136446466;
  uint64_t v34 = sub_241CDC270();
  uint64_t v71 = sub_241A33FE4(v34, v35, &v72);
  sub_241CDBBF0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v33 + 12) = 2080;
  uint64_t v36 = v60;
  sub_241CAD300(v69, v60);
  if (v70((char *)v36, 1, v21) != 1)
  {
    sub_241CD8750();
    v23((char *)v36, v21);
    uint64_t v37 = sub_241CDB120();
    uint64_t v71 = sub_241A33FE4(v37, v38, &v72);
    sub_241CDBBF0();
    id v39 = v58;

    swift_bridgeObjectRelease();
    os_log_t v40 = v57;
    _os_log_impl(&dword_241A23000, v57, (os_log_type_t)v56, "[%{public}s] Can not access data model image: %s", (uint8_t *)v33, 0x16u);
    uint64_t v41 = v55;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v41, -1, -1);
    MEMORY[0x245637F20](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v63);
LABEL_8:
    uint64_t v25 = (void (*)(uint64_t, uint64_t))v23;
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
    uint64_t v28 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v70;
    uint64_t v26 = (uint64_t)v67;
    uint64_t v27 = (uint64_t)v68;
LABEL_9:
    uint64_t v42 = v69;
    sub_241CAD300(v69, v26);
    if (v28(v26, 1, v21) != 1)
    {
      uint64_t v43 = sub_241CD8710();
      uint64_t v70 = v44;
      v25(v26, v21);
      sub_241CAD300(v42, v27);
      if (v28(v27, 1, v21) != 1)
      {
        uint64_t v45 = sub_241CD8740();
        uint64_t v46 = v27;
        uint64_t v47 = v45;
        v25(v46, v21);
        uint64_t v48 = v42;
        uint64_t v49 = v66;
        sub_241CAD300(v48, v66);
        if (v28(v49, 1, v21) != 1)
        {
          uint64_t v50 = sub_241CD8730();
          uint64_t v52 = v51;
          v25(v49, v21);
          uint64_t v53 = v65;
          uint64_t v54 = v70;
          uint64_t *v65 = v43;
          v53[1] = (uint64_t)v54;
          v53[2] = (uint64_t)v24;
          v53[3] = v47;
          v53[4] = v50;
          v53[5] = v52;
          return;
        }
        goto LABEL_16;
      }
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
LABEL_17:

  __break(1u);
}

void sub_241CA93D8()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v35 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v32 - v4;
  sub_241CAD480(0, &qword_268D43AD8, MEMORY[0x263F44060]);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = &v0[OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_context];
  swift_beginAccess();
  sub_241CAD15C((uint64_t)v9, (uint64_t)&v36);
  id v10 = v38;
  sub_241A68690((uint64_t)&v36, &qword_268D43B00, &qword_268D43B08);
  if (v10)
  {
    int v32 = v8;
    uint64_t v33 = v5;
    uint64_t v11 = *((void *)v9 + 3);
    if (!v11)
    {
      __break(1u);
      return;
    }
    uint64_t v12 = sub_241A311E0(v9, *((void *)v9 + 3));
    uint64_t v13 = *(void *)(v11 - 8);
    MEMORY[0x270FA5388](v12);
    uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v15);
    uint64_t v16 = sub_241CD8D90();
    unint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
    uint64_t v19 = (uint64_t)v32;
    uint64_t v5 = v33;
    if (v18 >> 60 != 15)
    {
      sub_241A3731C(v16, v18);
      sub_241CD8760();
      uint64_t v29 = sub_241CD87B0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v19, 0, 1, v29);
      uint64_t v30 = (uint64_t)v1 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_dataModel;
      swift_beginAccess();
      sub_241CAD1D8(v19, v30);
      swift_endAccess();
      id v31 = sub_241CA9B00();
      sub_241CA8D60((uint64_t *)&v36);
      sub_241C7B82C((uint64_t *)&v36);
      sub_241A54FC8(v16, v18);
      long long v41 = v36;
      sub_241CAD258((uint64_t)&v41);

      sub_241BB4D18((uint64_t)&v39, (uint64_t)v40);
      sub_241CAD258((uint64_t)v40);

      return;
    }
  }
  sub_241CDA120();
  id v20 = v1;
  uint64_t v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB650();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(void *)&long long v41 = v24;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v25 = sub_241CDC270();
    *(void *)&long long v36 = sub_241A33FE4(v25, v26, (uint64_t *)&v41);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    sub_241CAD15C((uint64_t)v9, (uint64_t)&v36);
    sub_241A686EC(0, &qword_268D43B00, &qword_268D43B08);
    uint64_t v27 = sub_241CDB120();
    *(void *)&long long v36 = sub_241A33FE4(v27, v28, (uint64_t *)&v41);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v21, v22, "[%{public}s] Can not access user data: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v24, -1, -1);
    MEMORY[0x245637F20](v23, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v35);
}

id sub_241CA9B00()
{
  uint64_t v1 = OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController____lazy_storage___tileView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController____lazy_storage___tileView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController____lazy_storage___tileView);
  }
  else
  {
    uint64_t v4 = v0;
    sub_241CA8D60((uint64_t *)&v18);
    uint64_t v5 = (objc_class *)type metadata accessor for SummaryAlertTileView();
    uint64_t v6 = (char *)objc_allocWithZone(v5);
    long long v22 = v18;
    long long v7 = v19;
    sub_241BB4D18((uint64_t)&v20, (uint64_t)v21);
    unint64_t v8 = &v6[qword_268D43880];
    long long v9 = v18;
    long long v10 = v20;
    *((_OWORD *)v8 + 1) = v19;
    *((_OWORD *)v8 + 2) = v10;
    *(_OWORD *)unint64_t v8 = v9;
    sub_241BB4DF0((uint64_t)&v22);
    id v11 = (id)v7;
    id v12 = *((id *)&v7 + 1);
    sub_241BB4DF0((uint64_t)v21);
    v17.receiver = v6;
    v17.super_class = v5;
    id v13 = objc_msgSendSuper2(&v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_241C7B82C((uint64_t *)&v18);
    sub_241CAD258((uint64_t)&v22);

    sub_241CAD258((uint64_t)v21);
    objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v14 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v13;
    id v3 = v13;

    uint64_t v2 = 0;
  }
  id v15 = v2;
  return v3;
}

void (*sub_241CA9C54(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = sub_241CA9B00();
  return sub_241CA9C9C;
}

void sub_241CA9C9C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController____lazy_storage___tileView);
  *(void *)(v1 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController____lazy_storage___tileView) = v2;
}

uint64_t sub_241CA9CB4()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CDA120();
  uint64_t v6 = sub_241CDA190();
  os_log_type_t v7 = sub_241CDB670();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = v2;
    long long v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = v10;
    *(_DWORD *)long long v9 = 136446210;
    uint64_t v11 = sub_241CDC270();
    uint64_t v19 = sub_241A33FE4(v11, v12, &v20);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v6, v7, "%{public}s loaded", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v10, -1, -1);
    MEMORY[0x245637F20](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v13 = (objc_class *)type metadata accessor for SummaryAlertTileViewController();
  v21.receiver = v1;
  v21.super_class = v13;
  objc_msgSendSuper2(&v21, sel_viewDidLoad);
  sub_241CAA318();
  id v14 = sub_241CA9B00();
  id v15 = (void *)sub_241CD82C0();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_241CD8A00();

  return swift_release();
}

void sub_241CA9F40(uint64_t a1)
{
  uint64_t v2 = sub_241CD8300();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CAD480(0, &qword_268D43B18, MEMORY[0x263F43FE0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = sub_241CD8660();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x245638000](a1 + 16);
  if (v13)
  {
    id v14 = (void *)v13;
    sub_241CAA9CC();
    if (v15)
    {
      uint64_t v16 = v15;
      MEMORY[0x245636B00]();
      int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
      uint64_t v24 = v2;
      if (v17 == 1)
      {
        (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F43FD0], v9);
        sub_241CAD514((uint64_t)v8, &qword_268D43B18, MEMORY[0x263F43FE0]);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      }
      id v23 = v16;
      sub_241CD8650();
      id v18 = (id)HKStringFromProfileType();
      uint64_t v19 = sub_241CDB0D0();
      uint64_t v21 = v20;

      *(void *)&v25[0] = v19;
      *((void *)&v25[0] + 1) = v21;
      sub_241CDB180();
      sub_241CD8320();
      uint64_t v22 = v24;
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F43A28], v24);
      uint64_t v26 = 0;
      memset(v25, 0, sizeof(v25));
      sub_241CD8310();
      swift_bridgeObjectRelease();

      sub_241A68690((uint64_t)v25, &qword_268D43B20, &qword_268D43B28);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v22);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
}

void sub_241CAA318()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  id v3 = sub_241CA9B00();
  objc_msgSend(v2, sel_addSubview_, v3);

  sub_241A30878(0, (unint64_t *)&qword_26B038868, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_241CF16B0;
  id v5 = sub_241CA9B00();
  id v6 = objc_msgSend(v5, sel_topAnchor);

  id v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v7, sel_topAnchor);

  id v10 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v9);
  *(void *)(v4 + 32) = v10;
  id v11 = sub_241CA9B00();
  id v12 = objc_msgSend(v11, sel_bottomAnchor);

  id v13 = objc_msgSend(v0, sel_view);
  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v14 = v13;
  id v15 = objc_msgSend(v13, sel_bottomAnchor);

  id v16 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v15);
  *(void *)(v4 + 40) = v16;
  id v17 = sub_241CA9B00();
  id v18 = objc_msgSend(v17, sel_leadingAnchor);

  id v19 = objc_msgSend(v0, sel_view);
  if (!v19)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v20 = v19;
  id v21 = objc_msgSend(v19, sel_leadingAnchor);

  id v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v21);
  *(void *)(v4 + 48) = v22;
  id v23 = sub_241CA9B00();
  id v24 = objc_msgSend(v23, sel_trailingAnchor);

  id v25 = objc_msgSend(v0, sel_view);
  if (!v25)
  {
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v26 = v25;
  uint64_t v27 = self;
  id v28 = objc_msgSend(v26, sel_trailingAnchor);

  id v29 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v28);
  *(void *)(v4 + 56) = v29;
  sub_241CDB2E0();
  sub_241A313AC(0, &qword_268D43B30);
  id v30 = (id)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, v30);
}

void sub_241CAA678()
{
  uint64_t v0 = sub_241CD8300();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CAD480(0, &qword_268D43B18, MEMORY[0x263F43FE0]);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v20 - v5;
  uint64_t v7 = sub_241CD8660();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CAA9CC();
  if (v11)
  {
    id v12 = v11;
    MEMORY[0x245636B00]();
    id v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v21 = v7;
    int v14 = v13(v6, 1, v7);
    uint64_t v15 = v0;
    if (v14 == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F43FD0], v21);
      sub_241CAD514((uint64_t)v6, &qword_268D43B18, MEMORY[0x263F43FE0]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v21);
    }
    sub_241CD8650();
    id v16 = (id)HKStringFromProfileType();
    uint64_t v17 = sub_241CDB0D0();
    uint64_t v19 = v18;

    *(void *)&v22[0] = v17;
    *((void *)&v22[0] + 1) = v19;
    sub_241CDB180();
    sub_241CD8320();
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F43A28], v15);
    uint64_t v23 = 0;
    memset(v22, 0, sizeof(v22));
    sub_241CD8310();
    swift_bridgeObjectRelease();

    sub_241A68690((uint64_t)v22, &qword_268D43B20, &qword_268D43B28);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  }
}

void sub_241CAA9CC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_241CDA1A0();
  uint64_t v4 = *(void **)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int v56 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD8C50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v62 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CAD480(0, &qword_268D43AD8, MEMORY[0x263F44060]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v53 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)v49 - v12;
  uint64_t v14 = sub_241CD86E0();
  uint64_t v61 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  double v64 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CAD480(0, &qword_26B030648, MEMORY[0x263F43C08]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v49 - v17;
  uint64_t v63 = v1;
  uint64_t v19 = &v1[OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_context];
  swift_beginAccess();
  sub_241CAD15C((uint64_t)v19, (uint64_t)&v69);
  uint64_t v20 = v70;
  if (!v70)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v58 = v14;
  uint64_t v59 = v7;
  uint64_t v60 = v6;
  uint64_t v52 = ObjectType;
  uint64_t v54 = v4;
  uint64_t v55 = v3;
  uint64_t v21 = sub_241A311E0(&v69, v70);
  uint64_t v22 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v21);
  id v24 = (char *)v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v22 + 16))(v24);
  id v25 = (void *)sub_241CD8D60();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
  id v26 = objc_msgSend(v25, sel_profileIdentifier);

  sub_241CAD15C((uint64_t)v19, (uint64_t)&v67);
  uint64_t v27 = v68;
  if (!v68)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v28 = sub_241A311E0(&v67, v68);
  uint64_t v29 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v28);
  id v31 = (char *)v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v29 + 16))(v31);
  sub_241CD8D70();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v27);
  uint64_t v32 = sub_241CD83C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v18, 0, 1, v32);
  int v57 = sub_241CD84B0();

  sub_241CAD514((uint64_t)v18, &qword_26B030648, MEMORY[0x263F43C08]);
  sub_241A31190((uint64_t)&v67);
  sub_241A31190((uint64_t)&v69);
  sub_241CD86D0();
  uint64_t v4 = v63;
  uint64_t v33 = (uint64_t)v63 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_dataModel;
  swift_beginAccess();
  sub_241CAD300(v33, (uint64_t)v13);
  uint64_t v34 = sub_241CD87B0();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  if (v51(v13, 1, v34) == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  long long v36 = (void *)sub_241CD8790();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v35 + 8);
  v50(v13, v34);
  sub_241CDB7B0();
  sub_241CAD15C((uint64_t)v19, (uint64_t)&v67);
  uint64_t v37 = v68;
  if (!v68)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v49[1] = v35 + 48;
  void v49[2] = v33;
  id v38 = sub_241A311E0(&v67, v68);
  uint64_t v39 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v38);
  long long v41 = (char *)v49 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v39 + 16))(v41);
  sub_241CD8D60();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v4 = (void *)(v39 + 8);
  v42(v41, v37);
  sub_241CAD15C((uint64_t)v19, (uint64_t)v65);
  uint64_t v19 = v66;
  if (v66)
  {
    uint64_t v43 = sub_241A311E0(v65, (uint64_t)v66);
    uint64_t v44 = *((void *)v19 - 1);
    MEMORY[0x270FA5388](v43);
    uint64_t v46 = (char *)v49 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v44 + 16))(v46);
    sub_241CD8D80();
    (*(void (**)(char *, char *))(v44 + 8))(v46, v19);
    uint64_t v47 = v62;
    sub_241CD8C20();
    sub_241A31190((uint64_t)v65);
    sub_241A31190((uint64_t)&v67);
    uint64_t v48 = v64;
    sub_241CD86C0();

    (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v60);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v48, v58);
    return;
  }
LABEL_11:
  __break(1u);

  __break(1u);
}

id sub_241CAB640(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = &v3[OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_dataModel];
  uint64_t v7 = sub_241CD87B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = &v3[OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_context];
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((void *)v8 + 4) = 0;
  *(void *)&v3[OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController____lazy_storage___tileView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_dismissalStateCancellable] = 0;
  if (a2)
  {
    uint64_t v9 = (void *)sub_241CDB090();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for SummaryAlertTileViewController();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, v9, a3);

  return v10;
}

id sub_241CAB7B4(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_dataModel];
  uint64_t v4 = sub_241CD87B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = &v1[OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_context];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController____lazy_storage___tileView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_dismissalStateCancellable] = 0;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for SummaryAlertTileViewController();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);

  return v6;
}

id sub_241CAB8B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummaryAlertTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241CAB98C()
{
  return type metadata accessor for SummaryAlertTileViewController();
}

uint64_t type metadata accessor for SummaryAlertTileViewController()
{
  uint64_t result = qword_268D43AC8;
  if (!qword_268D43AC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241CAB9E0()
{
  sub_241CAD480(319, &qword_268D43AD8, MEMORY[0x263F44060]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_241CABAA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_context;
  swift_beginAccess();
  return sub_241CAD15C(v3, a1);
}

uint64_t sub_241CABAF4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_context;
  swift_beginAccess();
  sub_241CAD284(a1, v3);
  swift_endAccess();
  sub_241CA93D8();
  return sub_241A68690(a1, &qword_268D43B00, &qword_268D43B08);
}

void (*sub_241CABB7C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241CABBDC;
}

void sub_241CABBDC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_241CA93D8();
  }
}

id sub_241CABC10@<X0>(void *a1@<X8>)
{
  id result = sub_241CA9B00();
  *a1 = result;
  return result;
}

void sub_241CABC3C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(*v1 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController____lazy_storage___tileView);
  *(void *)(*v1 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController____lazy_storage___tileView) = v2;
}

void (*sub_241CABC58(id **a1))(void *)
{
  uint64_t v2 = (id *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_241CA9C54(v2);
  return sub_241CABCB4;
}

uint64_t sub_241CABCC8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F34920](a1, WitnessTable);
}

uint64_t sub_241CABD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F34928](a1, a2, a3, WitnessTable);
}

void (*sub_241CABD88(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  swift_getWitnessTable();
  v2[4] = sub_241CD91B0();
  return sub_241CABCB4;
}

uint64_t sub_241CABE0C()
{
  return sub_241CD91E0();
}

void sub_241CABE70()
{
}

uint64_t sub_241CABF10()
{
  uint64_t v1 = v0;
  sub_241CAD480(0, &qword_268D43AD8, MEMORY[0x263F44060]);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v25 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v25 - v5;
  uint64_t v7 = (uint64_t)v1 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_dataModel;
  swift_beginAccess();
  sub_241CAD300(v7, (uint64_t)v6);
  uint64_t v8 = sub_241CD87B0();
  uint64_t v9 = *(void *)(v8 - 8);
  id v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  uint64_t result = v10(v6, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = sub_241CD8720();
    uint64_t v14 = v13;
    uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
    v15(v6, v8);
    if (v14) {
      return v12;
    }
    id v16 = objc_msgSend(v1, sel_resolvedHealthStore);
    id v17 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, v16);
    if (!v17)
    {

      return 0;
    }
    uint64_t v18 = v17;
    uint64_t v19 = v25;
    sub_241CAD300(v7, v25);
    uint64_t result = v10((char *)v19, 1, v8);
    if (result != 1)
    {
      id v20 = v18;
      uint64_t v21 = (void *)sub_241CD8790();
      v15((char *)v19, v8);
      id v22 = objc_msgSend(v20, sel_displayTypeForObjectType_, v21);

      if (v22)
      {
        id v23 = objc_msgSend(v22, sel_localization);

        id v24 = objc_msgSend(v23, sel_displayName);
        uint64_t v12 = sub_241CDB0D0();

        return v12;
      }
      return 0;
    }
  }
  __break(1u);
  return result;
}

id sub_241CAC1DC(uint64_t a1, uint64_t a2)
{
  return sub_241CAC1F4(a1, a2, (SEL *)&selRef_hk_alertHeaderBackgroundColor);
}

id sub_241CAC1E8(uint64_t a1, uint64_t a2)
{
  return sub_241CAC1F4(a1, a2, (SEL *)&selRef_hk_alertHeaderForegroundColor);
}

id sub_241CAC1F4(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v3 = [self *a3];

  return v3;
}

uint64_t sub_241CAC23C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F342E8](a1, WitnessTable);
}

uint64_t sub_241CAC2A4()
{
  sub_241A313AC(0, &qword_26B0304D0);
  id v0 = (id)*MEMORY[0x263F83570];
  uint64_t v1 = sub_241CDBB00();

  return v1;
}

uint64_t sub_241CAC320()
{
  id v1 = objc_msgSend(*v0, sel_title);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_241CDB0D0();

  return v3;
}

uint64_t sub_241CAC388@<X0>(uint64_t a1@<X8>)
{
  sub_241CAD480(0, &qword_268D43AD8, MEMORY[0x263F44060]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v16 - v4;
  uint64_t v6 = *v1 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_dataModel;
  swift_beginAccess();
  sub_241CAD300(v6, (uint64_t)v5);
  uint64_t v7 = sub_241CD87B0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_241CAD380();
    uint64_t v11 = a1 + *(int *)(v10 + 48);
    sub_241CD87A0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    uint64_t v12 = *MEMORY[0x263F43FB0];
    uint64_t v13 = sub_241CD8630();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
    uint64_t v14 = *MEMORY[0x263F43FB8];
    uint64_t v15 = sub_241CD8640();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(a1, v14, v15);
  }
  return result;
}

uint64_t sub_241CAC574()
{
  return sub_241CD8E90() & 1;
}

uint64_t sub_241CAC5F0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_241CAD480(0, &qword_268D43AD8, MEMORY[0x263F44060]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v38 - v3;
  uint64_t v5 = v0 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_context;
  swift_beginAccess();
  uint64_t result = sub_241CAD15C(v5, (uint64_t)v40);
  uint64_t v7 = v41;
  if (!v41)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v8 = sub_241A311E0(v40, v41);
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  uint64_t v12 = (void *)sub_241CD8D60();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  sub_241CD6710();
  swift_allocObject();
  uint64_t v14 = sub_241CD6700();
  sub_241CD6740();
  swift_allocObject();
  uint64_t v15 = sub_241CD6730();
  id v16 = objc_allocWithZone(MEMORY[0x263F0A2F8]);
  id v17 = v12;
  uint64_t v18 = (void *)sub_241CDB090();
  id v19 = objc_msgSend(v16, sel_initWithProtectionCategory_domain_healthStore_, 0, v18, v13);

  id v42 = v17;
  char v43 = 0;
  uint64_t v38 = v14;
  uint64_t v44 = v14;
  uint64_t v20 = v15;
  uint64_t v21 = v19;
  uint64_t v45 = v20;
  id v46 = v19;
  sub_241A31190((uint64_t)v40);
  uint64_t v22 = v1 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_dataModel;
  swift_beginAccess();
  sub_241CAD300(v22, (uint64_t)v4);
  uint64_t v23 = sub_241CD87B0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v4, 1, v23);
  if (result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v25 = (void *)sub_241CD8790();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v23);
  uint64_t result = sub_241CAD15C(v5, (uint64_t)v40);
  uint64_t v26 = v41;
  if (v41)
  {
    uint64_t v27 = sub_241A311E0(v40, v41);
    uint64_t v28 = *(void *)(v26 - 8);
    MEMORY[0x270FA5388](v27);
    uint64_t v30 = (char *)&v38 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v28 + 16))(v30);
    id v31 = (void *)sub_241CD8D60();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
    uint64_t v32 = (void *)sub_241CDB4D0();

    uint64_t v33 = sub_241CA1EFC(v25);
    uint64_t v35 = v34;

    sub_241A31190((uint64_t)v40);
    v40[0] = sub_241B7C894();
    long long v36 = (void *)swift_allocObject();
    v36[2] = v33;
    v36[3] = v35;
    v36[4] = ObjectType;
    sub_241A97D54();
    sub_241CAD438((unint64_t *)&qword_26B02EA70, (void (*)(uint64_t))sub_241A97D54);
    uint64_t v37 = sub_241CDA740();
    swift_release();
    swift_release();
    *(void *)(v1 + OBJC_IVAR____TtC9Summaries30SummaryAlertTileViewController_dismissalStateCancellable) = v37;

    swift_release();
    swift_release();

    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_241CACB50(void **a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_241CDA1A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v36 - v11;
  id v13 = *a1;
  if (v13)
  {
    id v14 = v13;
    sub_241CDA120();
    swift_bridgeObjectRetain();
    id v15 = v13;
    swift_bridgeObjectRetain();
    id v16 = v13;
    id v17 = sub_241CDA190();
    os_log_type_t v18 = sub_241CDB650();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v41 = v37;
      *(_DWORD *)uint64_t v19 = 136446723;
      uint64_t v38 = v7;
      uint64_t v20 = sub_241CDC270();
      uint64_t v22 = sub_241A33FE4(v20, v21, &v41);
      uint64_t v39 = v6;
      uint64_t v40 = v22;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_241A33FE4(a2, a3, &v41);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 22) = 2082;
      uint64_t v40 = (uint64_t)v13;
      id v23 = v13;
      sub_241A35FBC(0, (unint64_t *)&qword_26B038870);
      uint64_t v24 = sub_241CDB130();
      uint64_t v40 = sub_241A33FE4(v24, v25, &v41);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241A23000, v17, v18, "%{public}s Could not save dismissal state for %{private}s. Error: %{public}s", (uint8_t *)v19, 0x20u);
      uint64_t v26 = v37;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v26, -1, -1);
      MEMORY[0x245637F20](v19, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v10, v39);
    }

    swift_bridgeObjectRelease_n();
    uint64_t v34 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v35 = v10;
  }
  else
  {
    sub_241CDA120();
    swift_bridgeObjectRetain_n();
    uint64_t v28 = sub_241CDA190();
    os_log_type_t v29 = sub_241CDB670();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v41 = v38;
      *(_DWORD *)uint64_t v30 = 136446467;
      uint64_t v39 = v6;
      uint64_t v31 = sub_241CDC270();
      uint64_t v40 = sub_241A33FE4(v31, v32, &v41);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_241A33FE4(a2, a3, &v41);
      sub_241CDBBF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241A23000, v28, v29, "%{public}s Saved dismissal state for %{private}s", (uint8_t *)v30, 0x16u);
      uint64_t v33 = v38;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v33, -1, -1);
      MEMORY[0x245637F20](v30, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v39);
    }

    swift_bridgeObjectRelease_n();
    uint64_t v34 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v35 = v12;
  }
  return v34(v35, v6);
}

uint64_t sub_241CAD030()
{
  return sub_241CAD438(&qword_268D43AE0, (void (*)(uint64_t))type metadata accessor for SummaryAlertTileViewController);
}

uint64_t sub_241CAD078()
{
  return sub_241CAD438(&qword_268D43AE8, (void (*)(uint64_t))type metadata accessor for SummaryAlertTileViewController);
}

uint64_t sub_241CAD0C0()
{
  return sub_241CAD438(&qword_268D43AF0, (void (*)(uint64_t))type metadata accessor for SummaryAlertTileViewController);
}

uint64_t sub_241CAD108()
{
  return MEMORY[0x263F43A10];
}

uint64_t sub_241CAD114()
{
  return sub_241CAD438(&qword_268D43AF8, (void (*)(uint64_t))type metadata accessor for SummaryAlertTileViewController);
}

uint64_t sub_241CAD15C(uint64_t a1, uint64_t a2)
{
  sub_241A686EC(0, &qword_268D43B00, &qword_268D43B08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241CAD1D8(uint64_t a1, uint64_t a2)
{
  sub_241CAD480(0, &qword_268D43AD8, MEMORY[0x263F44060]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_241CAD258(uint64_t a1)
{
  return a1;
}

uint64_t sub_241CAD284(uint64_t a1, uint64_t a2)
{
  sub_241A686EC(0, &qword_268D43B00, &qword_268D43B08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_241CAD300(uint64_t a1, uint64_t a2)
{
  sub_241CAD480(0, &qword_268D43AD8, MEMORY[0x263F44060]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_241CAD380()
{
  if (!qword_268D43B10)
  {
    sub_241CD6D00();
    sub_241CD8630();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268D43B10);
    }
  }
}

uint64_t sub_241CAD3F4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241CAD42C(void **a1)
{
  return sub_241CACB50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_241CAD438(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241CAD480(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241CAD4D4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_241CAD50C()
{
  sub_241CA9F40(v0);
}

uint64_t sub_241CAD514(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241CAD480(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241CAD570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241CAD584);
}

uint64_t sub_241CAD584(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_241CB0A44(a1, a2, a3, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

uint64_t sub_241CAD59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241CAD5B0);
}

void *sub_241CAD5B0(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_241CB0B24(a1, a2, a3, a4, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

uint64_t type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B031DF0);
}

uint64_t sub_241CAD5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241CB0BF4(a1, a2, a3, MEMORY[0x263F8CF48] + 64, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

uint64_t sub_241CAD60C()
{
  return sub_241CAF848(&qword_26B0382C8, MEMORY[0x263F470A8]);
}

uint64_t sub_241CAD654()
{
  return sub_241CAF848(&qword_26B032240, MEMORY[0x263F470C0]);
}

uint64_t sub_241CAD69C(uint64_t a1, char a2)
{
  if (objc_msgSend(v2, sel__isStandalonePhoneSummary))
  {
    if ((a1 != 1) | a2 & 1)
    {
      if (qword_26B038428 != -1) {
        swift_once();
      }
    }
    else if (qword_26B038428 != -1)
    {
      swift_once();
    }
  }
  else if ((a1 != 1) | a2 & 1)
  {
    if (qword_26B038428 != -1) {
      swift_once();
    }
  }
  else if (qword_26B038428 != -1)
  {
    swift_once();
  }
  sub_241CD69E0();
  uint64_t v5 = (void *)sub_241CD9F40();
  id v6 = objc_msgSend(self, sel_labelColor, 0xE000000000000000);
  uint64_t v7 = sub_241CDB850();
  swift_bridgeObjectRelease();

  return v7;
}

uint64_t sub_241CAD8C0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 2);
  objc_msgSend(v0, sel_setTimeStyle_, 0);
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  sub_241CAF96C(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_241CEB730;
  uint64_t v2 = (void *)sub_241CD6C60();
  id v3 = objc_msgSend(v0, sel_stringFromDate_, v2, 0xE000000000000000);

  uint64_t v4 = sub_241CDB0D0();
  uint64_t v6 = v5;

  *(void *)(v1 + 56) = MEMORY[0x263F8D310];
  *(void *)(v1 + 64) = sub_241A55A74();
  *(void *)(v1 + 32) = v4;
  *(void *)(v1 + 40) = v6;
  sub_241CDB0A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_241CD9F50();
  id v8 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v9 = sub_241CDB850();

  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_241CADB04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  sub_241A918D0();
  if ((sub_241CDBB60() & 1) == 0) {
    return 0;
  }

  return sub_241A91014(v2, v3);
}

void sub_241CADB7C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v171 = a2;
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241CAF96C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v175 = (char *)v141 - v10;
  sub_241CAF96C(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v172 = (char *)v141 - v12;
  uint64_t v13 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v156 = (char *)v141 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241BA9EA0();
  MEMORY[0x270FA5388](v15 - 8);
  id v170 = (char *)v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CAF96C(0, &qword_26B0320B0, MEMORY[0x263F43F20], v8);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)v141 - v18;
  uint64_t v149 = (void *)sub_241CD6D00();
  uint64_t v148 = *(v149 - 1);
  MEMORY[0x270FA5388](v149);
  os_log_t v157 = (char *)v141 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CAF96C(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828], v8);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v154 = (uint64_t)v141 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v155 = (uint64_t)v141 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v153 = (uint64_t)v141 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v159 = (uint64_t)v141 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v160 = (uint64_t)v141 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v161 = (uint64_t)v141 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v162 = (uint64_t)v141 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v163 = (uint64_t)v141 - v36;
  uint64_t v37 = sub_241CD69B0();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v168 = v37;
  uint64_t v169 = v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v151 = (char *)v141 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v152 = (char *)v141 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v150 = (char *)v141 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v158 = (char *)v141 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v164 = (char *)v141 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  id v165 = (char *)v141 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v166 = (char *)v141 - v52;
  MEMORY[0x270FA5388](v51);
  id v167 = (char *)v141 - v53;
  id v54 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v5);
  if (v54)
  {
    uint64_t v55 = v54;
    id v56 = objc_msgSend(self, sel_activitySummaryType);
    id v57 = objc_msgSend(v55, sel_displayTypeForObjectType_, v56);

    if (v57)
    {
      sub_241ADF958(a1);
      if (v4)
      {

LABEL_5:
        uint64_t v59 = type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider(0);
        unint64_t v60 = sub_241BBE5A4(*(id *)((char *)v5 + *(int *)(v59 + 20) + 16));
        uint64_t v173 = v171;
        swift_bridgeObjectRetain();
        sub_241AFF3B0(v60);
        uint64_t v61 = v173;
        sub_241CD89A0();
        uint64_t v62 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v19, 1, 1, v62);
        id v63 = v57;
        sub_241CD8990();
        uint64_t v64 = sub_241CD97B0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v170, 1, 1, v64);
        sub_241CD9C20();
        swift_allocObject();
        uint64_t v65 = sub_241CD9C10();
        uint64_t v66 = sub_241CD7A10();
        uint64_t v67 = (uint64_t)v172;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v172, 1, 1, v66);
        uint64_t v68 = sub_241CD6810();
        uint64_t v69 = (uint64_t)v175;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v175, 1, 1, v68);
        uint64_t v70 = type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider.FeedItemModel(0);
        sub_241B4A1A8(0, v67, v61, v69, (unsigned char *)a3 + *(int *)(v70 + 20));

        *a3 = v65;
        return;
      }
      uint64_t v72 = v58;
      if (!v58) {
        goto LABEL_5;
      }
      id v73 = HKCodableSummaryActivityRingsValue.activitySummary.getter();
      if (!v73)
      {

        goto LABEL_5;
      }
      id v145 = v72;
      uint64_t v143 = a3;
      id v74 = v73;
      v141[3] = objc_msgSend(v73, sel__isStandalonePhoneSummary);
      uint64_t v75 = type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider(0);
      uint64_t v174 = v75;
      id v76 = sub_241A25BC8(&v173);
      sub_241CAF7E0((uint64_t)v5, (uint64_t)v76, type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider);
      id v77 = (void *)sub_241CD9F30();
      sub_241CDB810();

      sub_241A31190((uint64_t)&v173);
      sub_241CD69D0();
      uint64_t v146 = v75;
      uint64_t v174 = v75;
      uint64_t v78 = sub_241A25BC8(&v173);
      sub_241CAF7E0((uint64_t)v5, (uint64_t)v78, type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider);
      int v79 = (void *)sub_241CD9F20();
      uint64_t v80 = (void *)sub_241CD9F60();
      id v81 = objc_msgSend(*v5, sel_viewControllerFactory);
      id v147 = v74;
      uint64_t v82 = (void *)sub_241CDB7F0();

      sub_241A31190((uint64_t)&v173);
      if (v82)
      {
        id v83 = v82;
        uint64_t v84 = v163;
        sub_241CD69D0();
        uint64_t v144 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v169 + 56);
        v144(v84, 0, 1, v168);
      }
      else
      {
        uint64_t v144 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v169 + 56);
        v144(v163, 1, 1, v168);
      }
      uint64_t v85 = v146;
      uint64_t v174 = v146;
      uint64_t v86 = sub_241A25BC8(&v173);
      sub_241CAF7E0((uint64_t)v5, (uint64_t)v86, type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider);
      int v87 = (void *)sub_241CD9F30();
      sub_241CDB830();

      sub_241A31190((uint64_t)&v173);
      sub_241CD69D0();
      uint64_t v174 = v85;
      uint64_t v88 = sub_241A25BC8(&v173);
      sub_241CAF7E0((uint64_t)v5, (uint64_t)v88, type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider);
      int v89 = (void *)sub_241CD9F20();
      uint64_t v90 = (void *)sub_241CD9F60();
      uint64_t v91 = (void *)sub_241CDB800();

      sub_241A31190((uint64_t)&v173);
      if (v91)
      {
        id v92 = v91;
        uint64_t v93 = v162;
        sub_241CD69D0();
        v144(v93, 0, 1, v168);
      }
      else
      {
        v144(v162, 1, 1, v168);
      }
      uint64_t v94 = v146;
      uint64_t v174 = v146;
      uint64_t v95 = sub_241A25BC8(&v173);
      sub_241CAF7E0((uint64_t)v5, (uint64_t)v95, type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider);
      uint64_t v96 = (void *)sub_241CD9F30();
      objc_msgSend(v57, sel__isWheelchairUser);
      sub_241CDB840();

      sub_241A31190((uint64_t)&v173);
      sub_241CD69D0();
      uint64_t v174 = v94;
      uint64_t v97 = sub_241A25BC8(&v173);
      sub_241CAF7E0((uint64_t)v5, (uint64_t)v97, type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider);
      uint64_t v98 = (void *)sub_241CD9F20();
      id v99 = (void *)sub_241CD9F60();
      uint64_t v100 = (void *)sub_241CDB820();

      sub_241A31190((uint64_t)&v173);
      if (v100)
      {
        id v101 = v100;
        uint64_t v102 = v161;
        sub_241CD69D0();
        uint64_t v103 = v144;
        v144(v102, 0, 1, v168);
      }
      else
      {
        uint64_t v103 = v144;
        v144(v161, 1, 1, v168);
      }
      id v104 = v145;
      if (objc_msgSend(v145, sel_hasHasEverHadAWatch)) {
        LODWORD(v144) = objc_msgSend(v104, sel_hasEverHadAWatch);
      }
      else {
        LODWORD(v144) = 2;
      }
      id v105 = objc_msgSend(*v5, sel_profileIdentifier);
      id v106 = objc_msgSend(v105, sel_type);

      id v107 = (char *)v5 + *(int *)(v146 + 20);
      sub_241CAD69C((uint64_t)v106, v107[8]);
      sub_241CD69D0();
      unsigned int v108 = objc_msgSend(v104, sel_hasActivityResumeDate);
      uint64_t v109 = v104;
      uint64_t v142 = 0;
      uint64_t v146 = (uint64_t)v107;
      if (v108)
      {
        objc_msgSend(v104, sel_activityResumeDate);
        id v110 = (id)HKDecodeDateForValue();
        uint64_t v111 = v157;
        sub_241CD6CB0();

        sub_241CAD8C0();
        uint64_t v112 = v160;
        sub_241CD69D0();
        (*(void (**)(char *, void *))(v148 + 8))(v111, v149);
        uint64_t v113 = 0;
      }
      else
      {
        uint64_t v113 = 1;
        uint64_t v112 = v160;
      }
      uint64_t v114 = v169;
      uint64_t v115 = v112;
      uint64_t v116 = v168;
      v103(v115, v113, 1, v168);
      sub_241CD89A0();
      sub_241A3A9CC();
      uint64_t v118 = *(int *)(v117 + 48);
      uint64_t v149 = v57;
      objc_msgSend(v109, sel_dateData);
      id v119 = (id)HKDecodeDateForValue();
      sub_241CD6CB0();

      v19[v118] = 0;
      uint64_t v120 = *MEMORY[0x263F43F18];
      uint64_t v121 = sub_241CD8610();
      uint64_t v122 = *(void *)(v121 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v122 + 104))(v19, v120, v121);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v19, 0, 1, v121);
      uint64_t v148 = sub_241CD8990();
      uint64_t v123 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
      v123(v158, v167, v116);
      unint64_t v124 = (uint64_t (*)(uint64_t))MEMORY[0x263F06828];
      sub_241CAF8EC(v163, v159, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
      v123(v150, v166, v116);
      sub_241CAF8EC(v162, v153, (unint64_t *)&qword_26B031FB8, v124);
      v123(v152, v165, v116);
      sub_241CAF8EC(v161, v155, (unint64_t *)&qword_26B031FB8, v124);
      v123(v151, v164, v116);
      sub_241CAF8EC(v160, v154, (unint64_t *)&qword_26B031FB8, v124);
      id v125 = v147;
      uint64_t v126 = v170;
      sub_241CD9790();
      uint64_t v127 = sub_241CD97B0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56))(v126, 0, 1, v127);
      sub_241CD9C20();
      swift_allocObject();
      uint64_t v128 = sub_241CD9C10();
      id v129 = v145;
      objc_msgSend(v145, sel_dateData);
      id v130 = (id)HKDecodeDateForValue();
      sub_241CD6CB0();

      uint64_t v131 = (uint64_t)v172;
      sub_241CD79D0();
      uint64_t v132 = sub_241CD7A10();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v131, 0, 1, v132);
      unint64_t v133 = sub_241BBE5A4(*(void **)(v146 + 16));
      uint64_t v173 = v171;
      swift_bridgeObjectRetain();
      sub_241AFF3B0(v133);
      uint64_t v134 = v173;
      uint64_t v135 = sub_241CD6810();
      uint64_t v136 = (uint64_t)v175;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v175, 1, 1, v135);
      uint64_t v137 = v156;
      sub_241B4A1A8(1, v131, v134, v136, v156);

      sub_241AD16D0(v160);
      uint64_t v138 = *(void (**)(char *, uint64_t))(v169 + 8);
      v138(v164, v116);
      sub_241AD16D0(v161);
      v138(v165, v116);
      sub_241AD16D0(v162);
      v138(v166, v116);
      sub_241AD16D0(v163);
      v138(v167, v116);
      os_log_type_t v139 = v143;
      *uint64_t v143 = v128;
      uint64_t v140 = type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider.FeedItemModel(0);
      sub_241B853D0((uint64_t)v137, (uint64_t)v139 + *(int *)(v140 + 20));
    }
    else
    {
      sub_241A41340();
      swift_allocError();
      *uint64_t v71 = 1;
      swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_241CAEDBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  id v8 = (uint64_t *)((char *)&v51 - v7);
  uint64_t v9 = sub_241CDA1A0();
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  MEMORY[0x270FA5388](v9);
  id v54 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241CAF96C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v51 - v13;
  sub_241CAF96C(0, &qword_26B038880, MEMORY[0x263F45770], v11);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v51 - v16;
  sub_241BA9EA0();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CAF96C(0, &qword_26B0320B0, MEMORY[0x263F43F20], v11);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v51 - v22;
  uint64_t v24 = (char *)v1 + *(int *)(v3 + 20);
  if (v24[8])
  {
    uint64_t v25 = type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider.FeedItemModel(0);
    uint64_t v26 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    return (id)v26(a1, 1, 1, v25);
  }
  else
  {
    uint64_t v51 = a1;
    id result = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      uint64_t v28 = result;
      id v29 = objc_msgSend(result, sel_displayTypeForObjectType_, *((void *)v24 + 2));

      if (v29)
      {
        sub_241CD89A0();
        uint64_t v30 = sub_241CD8610();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v23, 1, 1, v30);
        id v31 = v29;
        sub_241CD8990();
        uint64_t v32 = sub_241CD97B0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v20, 1, 1, v32);
        sub_241CD9C20();
        swift_allocObject();
        uint64_t v33 = sub_241CD9C10();
        uint64_t v34 = sub_241CD7A10();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v17, 1, 1, v34);
        uint64_t v35 = sub_241CD6810();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v14, 1, 1, v35);
        uint64_t v36 = type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider.FeedItemModel(0);
        uint64_t v37 = v51;
        sub_241B4A1A8(0, (uint64_t)v17, MEMORY[0x263F8EE78], (uint64_t)v14, (unsigned char *)v51 + *(int *)(v36 + 20));

        *uint64_t v37 = v33;
        return (id)(*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v37, 0, 1, v36);
      }
      else
      {
        uint64_t v38 = v54;
        sub_241CDA0F0();
        sub_241CAF7E0((uint64_t)v1, (uint64_t)v8, type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider);
        sub_241CAF7E0((uint64_t)v1, (uint64_t)v6, type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider);
        uint64_t v39 = sub_241CDA190();
        os_log_type_t v40 = sub_241CDB650();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          uint64_t v56 = v42;
          *(_DWORD *)uint64_t v41 = 136315394;
          uint64_t v43 = sub_241AE03E8(*v8, *((unsigned __int8 *)v8 + *(int *)(v3 + 20) + 8));
          uint64_t v55 = sub_241A33FE4(v43, v44, &v56);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241CAF890((uint64_t)v8);
          *(_WORD *)(v41 + 12) = 2080;
          id v45 = objc_msgSend(*(id *)&v6[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          uint64_t v46 = sub_241CDB0D0();
          unint64_t v48 = v47;

          uint64_t v55 = sub_241A33FE4(v46, v48, &v56);
          sub_241CDBBF0();
          swift_bridgeObjectRelease();
          sub_241CAF890((uint64_t)v6);
          _os_log_impl(&dword_241A23000, v39, v40, "[%s]: No display type could be found for %s for error case feedItem", (uint8_t *)v41, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x245637F20](v42, -1, -1);
          MEMORY[0x245637F20](v41, -1, -1);

          (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v53);
        }
        else
        {
          sub_241CAF890((uint64_t)v8);
          sub_241CAF890((uint64_t)v6);

          (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v53);
        }
        uint64_t v49 = v51;
        uint64_t v50 = type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider.FeedItemModel(0);
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 1, 1, v50);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_241CAF528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241CAF7E0(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void *sub_241CAF560@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = result;
  if ((unint64_t)result >= 2)
  {
    uint64_t v5 = a2;
    id v6 = result;
    id result = (void *)swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a3 = v3;
  a3[1] = v5;
  return result;
}

void sub_241CAF5B0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_241CAF5D4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x263F45770];
  sub_241CAF96C(0, &qword_26B038880, MEMORY[0x263F45770], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)v17 - v7;
  uint64_t v9 = (uint64_t)a1
     + *(int *)(type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider.FeedItemModel(0) + 20);
  uint64_t v10 = type metadata accessor for SnidgetFeedItemMetadata(0);
  sub_241CAF8EC(v9 + *(int *)(v10 + 20), (uint64_t)v8, &qword_26B038880, v5);
  sub_241CD9C40();
  swift_allocObject();
  v17[1] = sub_241CD9C30();
  sub_241CAF848(&qword_26B032238, MEMORY[0x263F470B8]);
  uint64_t v11 = sub_241CD87E0();
  uint64_t v13 = v12;
  uint64_t result = swift_release();
  if (!v2)
  {
    uint64_t v15 = *a1;
    sub_241CAF96C(0, &qword_26B033488, MEMORY[0x263F47090], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    sub_241CAF7E0(v9, (uint64_t)a2 + *(int *)(v16 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *a2 = v15;
    a2[1] = v11;
    a2[2] = v13;
    return swift_retain();
  }
  return result;
}

uint64_t type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider.FeedItemModel(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B031DE0);
}

uint64_t sub_241CAF7E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241CAF848(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241CAF890(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241CAF8EC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241CAF96C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_241CAF96C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_241CAF9D0(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    *((unsigned char *)a1 + v6) = *((unsigned char *)a2 + v6);
    uint64_t v9 = (int *)type metadata accessor for SnidgetFeedItemMetadata(0);
    uint64_t v10 = v9[5];
    __dst = &v7[v10];
    uint64_t v11 = &v8[v10];
    uint64_t v12 = sub_241CD7A10();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_retain();
    if (v14(v11, 1, v12))
    {
      sub_241CAF96C(0, &qword_26B038880, MEMORY[0x263F45770], MEMORY[0x263F8D8F0]);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
    uint64_t v16 = v9[7];
    uint64_t v17 = &v7[v16];
    uint64_t v18 = &v8[v16];
    uint64_t v19 = sub_241CD6810();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      sub_241CAF96C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return v5;
}

uint64_t sub_241CAFCBC(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = sub_241CD7A10();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v4 + *(int *)(v5 + 28);
  uint64_t v10 = sub_241CD6810();
  uint64_t v13 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    return v12(v9, v10);
  }
  return result;
}

void *sub_241CAFE40(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  *((unsigned char *)a1 + v3) = *((unsigned char *)a2 + v3);
  uint64_t v6 = (int *)type metadata accessor for SnidgetFeedItemMetadata(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &v4[v7];
  uint64_t v9 = &v5[v7];
  uint64_t v10 = sub_241CD7A10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_retain();
  if (v12(v9, 1, v10))
  {
    sub_241CAF96C(0, &qword_26B038880, MEMORY[0x263F45770], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)&v4[v6[6]] = *(void *)&v5[v6[6]];
  uint64_t v14 = v6[7];
  uint64_t v15 = &v4[v14];
  uint64_t v16 = &v5[v14];
  uint64_t v17 = sub_241CD6810();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    sub_241CAF96C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

void *sub_241CB00D8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  id v29 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *((unsigned char *)a1 + v6) = *((unsigned char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for SnidgetFeedItemMetadata(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_241CD7A10();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_241CAF96C(0, &qword_26B038880, MEMORY[0x263F45770], MEMORY[0x263F8D8F0]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v9[7];
  uint64_t v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  uint64_t v22 = sub_241CD6810();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
      return v29;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    sub_241CAF96C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    return v29;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return v29;
}

void *sub_241CB0444(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *((unsigned char *)a1 + v4) = *((unsigned char *)a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for SnidgetFeedItemMetadata(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v6[v8];
  uint64_t v11 = sub_241CD7A10();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_241CAF96C(0, &qword_26B038880, MEMORY[0x263F45770], MEMORY[0x263F8D8F0]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(void *)&v5[v7[6]] = *(void *)&v6[v7[6]];
  uint64_t v14 = v7[7];
  uint64_t v15 = &v5[v14];
  int v16 = &v6[v14];
  uint64_t v17 = sub_241CD6810();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_241CAF96C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

void *sub_241CB06BC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  id v29 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *((unsigned char *)a1 + v6) = *((unsigned char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for SnidgetFeedItemMetadata(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_241CD7A10();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_241CAF96C(0, &qword_26B038880, MEMORY[0x263F45770], MEMORY[0x263F8D8F0]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
  swift_bridgeObjectRelease();
  uint64_t v19 = v9[7];
  uint64_t v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  uint64_t v22 = sub_241CD6810();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v20, v21, v22);
      return v29;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    sub_241CAF96C(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    return v29;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return v29;
}

uint64_t sub_241CB0A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241CB0A2C);
}

uint64_t sub_241CB0A2C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_241CB0A44(a1, a2, a3, type metadata accessor for SnidgetFeedItemMetadata);
}

uint64_t sub_241CB0A44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v5 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = a4(0);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_241CB0AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241CB0B0C);
}

void *sub_241CB0B0C(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_241CB0B24(a1, a2, a3, a4, type metadata accessor for SnidgetFeedItemMetadata);
}

void *sub_241CB0B24(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = a5(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)v6 + *(int *)(a4 + 20);
    return (void *)v9(v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_241CB0BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241CB0BF4(a1, a2, a3, MEMORY[0x263F8CF88] + 64, type metadata accessor for SnidgetFeedItemMetadata);
}

uint64_t sub_241CB0BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result = a5(319);
  if (v6 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ActivitySummarySnidgetFeedItemModelProvider.GeneratorInputModel(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ActivitySummarySnidgetFeedItemModelProvider.GeneratorInputModel(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for ActivitySummarySnidgetFeedItemModelProvider.GeneratorInputModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for ActivitySummarySnidgetFeedItemModelProvider.GeneratorInputModel(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivitySummarySnidgetFeedItemModelProvider.GeneratorInputModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivitySummarySnidgetFeedItemModelProvider.GeneratorInputModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider.GeneratorInputModel()
{
  return &type metadata for ActivitySummarySnidgetFeedItemModelProvider.GeneratorInputModel;
}

uint64_t sub_241CB0E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241CB0E44);
}

uint64_t sub_241CB0E44(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241CB0EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241CB0F08);
}

void *sub_241CB0F08(void *result, uint64_t a2, int a3, uint64_t a4)
{
  id v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031DC0;
  if (!qword_26B031DC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241CB0FFC()
{
  return sub_241CB1314(&qword_26B0320B8, MEMORY[0x263F44058]);
}

uint64_t sub_241CB1044()
{
  return sub_241CB1148((unint64_t *)&qword_26B0320F0);
}

void sub_241CB1078(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241CB1314(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241CB1114()
{
  return sub_241CB1148((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241CB1148(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241CB1078(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241CB1314((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241CB1314(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241CB122C()
{
  return sub_241CB1314(&qword_26B0385C8, MEMORY[0x263F44308]);
}

uint64_t sub_241CB1274()
{
  return sub_241CB1314(&qword_26B032140, MEMORY[0x263F44308]);
}

uint64_t sub_241CB12BC(uint64_t a1)
{
  uint64_t result = sub_241CB1314(&qword_26B037ED0, (void (*)(uint64_t))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241CB1314(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241CB135C()
{
  return sub_241CB13FC(&qword_26B0383F8, &qword_26B038400, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241CB13AC()
{
  return sub_241CB13FC(&qword_26B032E48, &qword_26B032E50, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

uint64_t sub_241CB13FC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241CB1440(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241CB1440(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241CB1078(255, &qword_26B032118, MEMORY[0x263F44150]);
    uint64_t v15 = v6;
    uint64_t v7 = sub_241CD86F0();
    unint64_t v8 = sub_241A3F5B0();
    uint64_t v9 = sub_241CB1314(&qword_26B0320B8, MEMORY[0x263F44058]);
    uint64_t v10 = sub_241CB1148((unint64_t *)&qword_26B0320F0);
    uint64_t v11 = sub_241CB1148((unint64_t *)&qword_26B0320E0);
    uint64_t v12 = (void (*)(uint64_t))MEMORY[0x263F44308];
    v16[0] = v15;
    v16[1] = v7;
    v16[2] = v8;
    void v16[3] = v9;
    v16[4] = v10;
    v16[5] = v11;
    v16[6] = sub_241CB1314(&qword_26B0385C8, MEMORY[0x263F44308]);
    v16[7] = sub_241CB1314(&qword_26B032140, v12);
    unint64_t v13 = a3(a1, v16);
    if (!v14) {
      atomic_store(v13, a2);
    }
  }
}

void sub_241CB15E8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v227 = a3;
  uint64_t v212 = a2;
  uint64_t v228 = a1;
  uint64_t v226 = a4;
  uint64_t v6 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x270FA5388](v6 - 8);
  v224 = (char *)v199 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35D38(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v199 - v10;
  sub_241A35D38(0, &qword_26B038880, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v199 - v13;
  sub_241A35D38(0, &qword_26B031AD8, MEMORY[0x263F44508], v8);
  MEMORY[0x270FA5388](v15 - 8);
  v211 = (char *)v199 - v16;
  sub_241A35D38(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828], v8);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  v210 = (char *)v199 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v209 = (char *)v199 - v20;
  sub_241A35D38(0, &qword_26B0320B0, MEMORY[0x263F43F20], v8);
  MEMORY[0x270FA5388](v21 - 8);
  v225 = (char *)v199 - v22;
  uint64_t v23 = sub_241CD69B0();
  uint64_t v213 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v208 = (char *)v199 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v221 = (char *)v199 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v219 = (char *)v199 - v28;
  uint64_t v215 = sub_241CD6D00();
  uint64_t v217 = *(void *)(v215 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v215);
  v214 = (char *)v199 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  v220 = (char *)v199 - v31;
  uint64_t v32 = type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider();
  MEMORY[0x270FA5388](v32);
  uint64_t v218 = (uint64_t)v199 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = self;
  uint64_t v35 = (void *)*v4;
  id v36 = objc_msgSend(v34, sel_sharedInstanceForHealthStore_, *v4);
  if (!v36)
  {
    __break(1u);
    return;
  }
  uint64_t v37 = v36;
  uint64_t v216 = v32;
  id v222 = (char *)v4 + *(int *)(v32 + 20);
  uint64_t v223 = (void (*)(void, void))v4;
  id v38 = objc_msgSend(v36, sel_displayTypeForObjectType_, *((void *)v222 + 2));

  uint64_t v229 = v38;
  if (!v38)
  {
    sub_241A3A824();
    swift_allocError();
    swift_willThrow();
    return;
  }
  uint64_t v207 = v23;
  sub_241ADF8D8(v228);
  if (v5)
  {

    return;
  }
  os_log_type_t v40 = v39;
  uint64_t v42 = v226;
  uint64_t v41 = v227;
  if (!v39) {
    goto LABEL_19;
  }
  if (!objc_msgSend(v39, sel_hasEarliestStartDate)
    || !objc_msgSend(v40, sel_hasLatestEndDate))
  {

LABEL_19:
    uint64_t v68 = sub_241CD7A10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v14, 1, 1, v68);
    uint64_t v69 = sub_241CD6810();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v11, 1, 1, v69);
    swift_bridgeObjectRetain();
    uint64_t v70 = v224;
    sub_241B4A1A8(0, (uint64_t)v14, v41, (uint64_t)v11, v224);
    sub_241CD89A0();
    uint64_t v71 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v225, 1, 1, v71);
    uint64_t v72 = v229;
    uint64_t v73 = sub_241CD8990();
    sub_241A3A878();
    sub_241CB5968((uint64_t)v70, (uint64_t)v42 + *(int *)(v74 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v42[1] = 0;
    v42[2] = 0;
    *uint64_t v42 = v73;
    uint64_t v75 = (uint64_t)v70;
LABEL_20:
    sub_241CB5908(v75, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  uint64_t v202 = v14;
  uint64_t v203 = v11;
  uint64_t v206 = 0;
  uint64_t v43 = *(void **)&v222[*(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32)];
  type metadata accessor for SnidgetStringBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v35;
  id v45 = self;
  id v46 = v43;
  uint64_t v47 = v35;
  id v48 = objc_msgSend(v45, sel_sharedInstanceForHealthStore_, v47);
  uint64_t v205 = inited;
  *(void *)(inited + 32) = v48;
  if (!v43)
  {
    id v49 = v48;
    id v46 = objc_msgSend(v49, sel_createHKUnitPreferenceController);
  }
  *(void *)(v205 + 24) = v46;
  id v50 = objc_msgSend(v40, sel_categoryValueRawValuesCount);
  uint64_t v51 = v206;
  if (((unint64_t)v50 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_63;
  }
  uint64_t v52 = (char *)v50;
  id v53 = v40;
  id v54 = sub_241CB57A0(0, v52, v53);
  uint64_t v204 = v53;

  MEMORY[0x270FA5388](v55);
  uint64_t v198 = v223;
  uint64_t v56 = sub_241A426B8((void (*)(long long *__return_ptr, uint64_t *))sub_241CB58AC, (uint64_t)&v199[-4], (uint64_t)v54);
  uint64_t v57 = v51;
  swift_bridgeObjectRelease();
  int64_t v58 = *(void *)(v56 + 16);
  if (v58)
  {
    uint64_t v206 = v51;
    v230[0] = MEMORY[0x263F8EE78];
    sub_241A5234C(0, v58, 0);
    uint64_t v59 = v230[0];
    uint64_t v201 = v56;
    unint64_t v60 = (uint64_t *)(v56 + 56);
    do
    {
      uint64_t v62 = *(v60 - 3);
      uint64_t v61 = *(v60 - 2);
      uint64_t v63 = *(v60 - 1);
      uint64_t v64 = *v60;
      v230[0] = v59;
      unint64_t v66 = *(void *)(v59 + 16);
      unint64_t v65 = *(void *)(v59 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v66 >= v65 >> 1)
      {
        sub_241A5234C(v65 > 1, v66 + 1, 1);
        uint64_t v59 = v230[0];
      }
      v60 += 4;
      *(void *)(v59 + 16) = v66 + 1;
      uint64_t v67 = (void *)(v59 + 32 * v66);
      v67[4] = v62;
      v67[5] = v61;
      v67[6] = v63;
      v67[7] = v64;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease();
    uint64_t v42 = v226;
    uint64_t v41 = v227;
    uint64_t v57 = v206;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v59 = MEMORY[0x263F8EE78];
  }
  unint64_t v76 = *(void *)(v59 + 16);
  uint64_t v77 = (uint64_t)v203;
  uint64_t v78 = v59;
  uint64_t v79 = (uint64_t)v202;
  if (!v76)
  {
    swift_bridgeObjectRelease();
    uint64_t v91 = sub_241CD7A10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v79, 1, 1, v91);
    uint64_t v92 = sub_241CD6810();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v77, 1, 1, v92);
    swift_bridgeObjectRetain();
    uint64_t v93 = v224;
    sub_241B4A1A8(0, v79, v41, v77, v224);
    sub_241CD89A0();
    uint64_t v94 = sub_241CD8610();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v225, 1, 1, v94);
    uint64_t v95 = v229;
    uint64_t v96 = sub_241CD8990();
    sub_241A3A878();
    sub_241CB5968((uint64_t)v93, (uint64_t)v42 + *(int *)(v97 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    swift_release();
    v42[1] = 0;
    v42[2] = 0;
    *uint64_t v42 = v96;
    uint64_t v75 = (uint64_t)v93;
    goto LABEL_20;
  }
  unint64_t v200 = v76;
  uint64_t v80 = *(void *)(v78 + 40);
  v199[2] = *(void *)(v78 + 32);
  uint64_t v81 = *(void *)(v78 + 56);
  v199[1] = *(void *)(v78 + 48);
  v224 = (unsigned char *)v78;
  uint64_t v82 = (void *)*((void *)v222 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v83 = objc_msgSend(v82, sel_identifier);
  if (!v83)
  {
    sub_241CDB0D0();
    id v83 = (id)sub_241CDB090();
    swift_bridgeObjectRelease();
  }
  uint64_t v201 = v81;
  uint64_t v84 = sub_241CDB0D0();
  uint64_t v86 = v85;
  if (v84 == sub_241CDB0D0() && v86 == v87)
  {

    swift_bridgeObjectRelease_n();
    uint64_t v90 = v218;
    sub_241CB5968((uint64_t)v223, v218, (uint64_t (*)(void))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider);
  }
  else
  {
    char v89 = sub_241CDC100();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v90 = v218;
    sub_241CB5968((uint64_t)v223, v218, (uint64_t (*)(void))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider);
    if ((v89 & 1) == 0)
    {
      sub_241CB5908(v90, (uint64_t (*)(void))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider);
      goto LABEL_35;
    }
  }
  if ((*(unsigned char *)(v90 + *(int *)(v216 + 20) + 8) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_241CB5908(v90, (uint64_t (*)(void))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider);
    goto LABEL_41;
  }
  char v98 = sub_241CDC100();
  swift_bridgeObjectRelease();
  sub_241CB5908(v90, (uint64_t (*)(void))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider);
  if (v98)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v107 = v229;
    unsigned int v108 = v204;
    uint64_t v109 = (id *)v205;
    sub_241CB3570(v41, v204, v229, v205, v42);

    swift_setDeallocating();
    return;
  }
LABEL_35:
  uint64_t v206 = v57;
  if (v80 && v201)
  {
    sub_241CD9800();
    uint64_t v231 = sub_241A313AC(0, (unint64_t *)&qword_26B034D28);
    v230[0] = v229;
    id v99 = v229;
    uint64_t v100 = sub_241CD97F0();
    uint64_t v102 = v101;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_241CB5908((uint64_t)v230, (uint64_t (*)(void))sub_241A78738);
    uint64_t v103 = sub_241AF7104(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v105 = v103[2];
    unint64_t v104 = v103[3];
    if (v105 >= v104 >> 1) {
      uint64_t v103 = sub_241AF7104((void *)(v104 > 1), v105 + 1, 1, v103);
    }
    v103[2] = v105 + 1;
    id v106 = &v103[2 * v105];
    v106[4] = v100;
    v106[5] = v102;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v103 = (void *)MEMORY[0x263F8EE78];
  }
  id v110 = v204;
  objc_msgSend(v204, sel_latestEndDate);
  id v111 = (id)HKDecodeDateForValue();
  uint64_t v112 = v220;
  sub_241CD6CB0();

  uint64_t v113 = v214;
  sub_241CD6C00();
  uint64_t v47 = sub_241CD6CA0();
  uint64_t v114 = v217 + 8;
  uint64_t v115 = v113;
  os_log_type_t v40 = *(void **)(v217 + 8);
  uint64_t v116 = v215;
  ((void (*)(char *, uint64_t))v40)(v115, v215);
  ((void (*)(char *, uint64_t))v40)(v112, v116);
  if (v47)
  {
    if (*((void *)v224 + 2) >= v200)
    {
      unint64_t v117 = v200 - 1;
      uint64_t v217 = v114;
      uint64_t v223 = (void (*)(void, void))v40;
      if (v200 != 1)
      {
        id v165 = v224 + 88;
        do
        {
          if (*(v165 - 2)) {
            BOOL v167 = *v165 == 0;
          }
          else {
            BOOL v167 = 1;
          }
          if (!v167)
          {
            sub_241CD9800();
            uint64_t v231 = sub_241A313AC(0, (unint64_t *)&qword_26B034D28);
            v230[0] = v229;
            id v168 = v229;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v169 = sub_241CD97F0();
            uint64_t v171 = v170;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_241CB5908((uint64_t)v230, (uint64_t (*)(void))sub_241A78738);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v103 = sub_241AF7104(0, v103[2] + 1, 1, v103);
            }
            unint64_t v173 = v103[2];
            unint64_t v172 = v103[3];
            if (v173 >= v172 >> 1) {
              uint64_t v103 = sub_241AF7104((void *)(v172 > 1), v173 + 1, 1, v103);
            }
            v103[2] = v173 + 1;
            uint64_t v166 = &v103[2 * v173];
            v166[4] = v169;
            v166[5] = v171;
          }
          v165 += 4;
          --v117;
        }
        while (v117);
      }
      swift_bridgeObjectRelease();
      uint64_t v118 = self;
      os_log_type_t v40 = (void *)MEMORY[0x263F8D310];
      id v119 = (void *)sub_241CDB2A0();
      swift_bridgeObjectRelease();
      id v120 = objc_msgSend(v118, sel_localizedStringByJoiningStrings_, v119);

      sub_241CDB0D0();
      objc_msgSend(v204, sel_earliestStartDate);
      id v121 = (id)HKDecodeDateForValue();
      uint64_t v122 = (uint64_t)v220;
      sub_241CD6CB0();

      uint64_t v123 = (uint64_t)v214;
      sub_241CD6CF0();
      uint64_t v47 = sub_241CB4274(v122, v123);
      uint64_t v42 = v124;
      uint64_t v125 = v123;
      uint64_t v126 = v215;
      uint64_t v127 = v223;
      v223(v125, v215);
      v127(v122, v126);
      if (qword_26B038428 == -1) {
        goto LABEL_47;
      }
      goto LABEL_64;
    }
LABEL_63:
    __break(1u);
LABEL_64:
    swift_once();
LABEL_47:
    uint64_t v198 = (void (*)(void, void))0xE000000000000000;
    sub_241CD69E0();
    sub_241A35D38(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
    uint64_t v128 = swift_allocObject();
    *(_OWORD *)(v128 + 16) = xmmword_241CEB730;
    *(void *)(v128 + 56) = v40;
    *(void *)(v128 + 64) = sub_241A55A74();
    *(void *)(v128 + 32) = v47;
    *(void *)(v128 + 40) = v42;
    sub_241CDB0A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v129 = v219;
    SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    sub_241CD89A0();
    sub_241A3A9CC();
    uint64_t v131 = *(int *)(v130 + 48);
    uint64_t v228 = v229;
    objc_msgSend(v204, sel_earliestStartDate);
    id v132 = (id)HKDecodeDateForValue();
    unint64_t v133 = v225;
    sub_241CD6CB0();

    v133[v131] = 1;
    uint64_t v134 = *MEMORY[0x263F43F18];
    uint64_t v135 = sub_241CD8610();
    uint64_t v136 = *(void *)(v135 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v136 + 104))(v133, v134, v135);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
    uint64_t v229 = (void *)sub_241CD8990();
    uint64_t v137 = v213;
    uint64_t v138 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v213 + 56);
    uint64_t v139 = v207;
    v138(v209, 1, 1, v207);
    uint64_t v140 = *(void (**)(char *, char *, uint64_t))(v137 + 16);
    v140(v208, v129, v139);
    uint64_t v141 = v210;
    v140(v210, v221, v139);
    v138(v141, 0, 1, v139);
    v230[0] = 0x5F74656764696E53;
    v230[1] = 0xE800000000000000;
    id v142 = *((id *)v222 + 2);
    id v143 = objc_msgSend(v142, sel_description);
    sub_241CDB0D0();

    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v144 = v211;
    sub_241CD8E50();
    swift_bridgeObjectRelease();
    uint64_t v145 = sub_241CD8E70();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v144, 0, 1, v145);
    sub_241CD8FF0();
    swift_allocObject();
    uint64_t v146 = sub_241CD8FE0();
    id v147 = v204;
    objc_msgSend(v204, sel_earliestStartDate);
    id v148 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    uint64_t v149 = (uint64_t)v202;
    sub_241CD79D0();
    uint64_t v150 = sub_241CD7A10();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v150 - 8) + 56))(v149, 0, 1, v150);
    uint64_t v151 = sub_241CD6810();
    uint64_t v152 = (uint64_t)v203;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 56))(v203, 1, 1, v151);
    sub_241A3A878();
    uint64_t v154 = v226;
    uint64_t v155 = v227;
    uint64_t v156 = (char *)v226 + *(int *)(v153 + 52);
    swift_bridgeObjectRetain();
    sub_241B4A1A8(1, v149, v155, v152, v156);
    swift_release();

    *uint64_t v154 = (uint64_t)v229;
    v154[1] = v146;
    v154[2] = 0;
    os_log_t v157 = *(void (**)(char *, uint64_t))(v137 + 8);
    v157(v221, v139);
    v157(v219, v139);
    return;
  }
  swift_bridgeObjectRelease();
  sub_241A313AC(0, &qword_26B034DE8);
  uint64_t v158 = (void (*)(char *, uint64_t))v40;
  uint64_t v228 = (void *)sub_241CDB9A0();
  objc_msgSend(v110, sel_earliestStartDate);
  id v159 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v160 = (void *)sub_241CD6C60();
  v158(v112, v116);
  objc_msgSend(v110, sel_latestEndDate);
  id v161 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v162 = (void *)sub_241CD6C60();
  v158(v112, v116);
  uint64_t v163 = v228;
  id v164 = objc_msgSend(v228, sel_stringFromDate_toDate_, v160, v162);

  sub_241CDB0D0();
  if (v103[2]) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
  swift_bridgeObjectRelease();
  SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
  swift_bridgeObjectRelease();
  sub_241CD89A0();
  sub_241A3A9CC();
  uint64_t v175 = *(int *)(v174 + 48);
  uint64_t v228 = v229;
  objc_msgSend(v204, sel_earliestStartDate);
  id v176 = (id)HKDecodeDateForValue();
  id v177 = v225;
  sub_241CD6CB0();

  v177[v175] = 1;
  uint64_t v178 = *MEMORY[0x263F43F18];
  uint64_t v179 = sub_241CD8610();
  uint64_t v180 = *(void *)(v179 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v180 + 104))(v177, v178, v179);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v180 + 56))(v177, 0, 1, v179);
  uint64_t v229 = (void *)sub_241CD8990();
  uint64_t v181 = v213;
  unint64_t v182 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v213 + 56);
  uint64_t v183 = v207;
  v182(v209, 1, 1, v207);
  uint64_t v184 = *(void (**)(char *, char *, uint64_t))(v181 + 16);
  v184(v208, v219, v183);
  unint64_t v185 = v210;
  v184(v210, v221, v183);
  v182(v185, 0, 1, v183);
  uint64_t v186 = sub_241CD8E70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v186 - 8) + 56))(v211, 1, 1, v186);
  sub_241CD8FF0();
  swift_allocObject();
  uint64_t v187 = sub_241CD8FE0();
  id v188 = v204;
  objc_msgSend(v204, sel_latestEndDate);
  id v189 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v190 = (uint64_t)v202;
  sub_241CD79D0();
  uint64_t v191 = sub_241CD7A10();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v191 - 8) + 56))(v190, 0, 1, v191);
  uint64_t v192 = sub_241CD6810();
  uint64_t v193 = (uint64_t)v203;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v192 - 8) + 56))(v203, 1, 1, v192);
  sub_241A3A878();
  uint64_t v195 = (char *)v42 + *(int *)(v194 + 52);
  uint64_t v196 = v227;
  swift_bridgeObjectRetain();
  sub_241B4A1A8(1, v190, v196, v193, v195);
  swift_release();

  *uint64_t v42 = (uint64_t)v229;
  v42[1] = v187;
  v42[2] = 0;
  uint64_t v197 = *(void (**)(char *, uint64_t))(v213 + 8);
  v197(v221, v183);
  v197(v219, v183);
}

uint64_t sub_241CB31C8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_identifier);
  uint64_t v9 = sub_241CDB0D0();
  uint64_t v11 = v10;

  if (sub_241CDB0D0() == v9 && v12 == v11)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v14 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x245636D70](a2);
  }
  if (sub_241CDB0D0() == v9 && v15 == v11) {
    goto LABEL_16;
  }
  char v17 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRelease();
    return 0xD00000000000001CLL;
  }
  if (sub_241CDB0D0() == v9 && v19 == v11)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
    return 0xD00000000000001CLL;
  }
  char v20 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20) {
    return 0xD00000000000001CLL;
  }
  sub_241CDA0F0();
  id v21 = a1;
  uint64_t v22 = sub_241CDA190();
  os_log_type_t v23 = sub_241CDB650();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    int v33 = v24;
    uint64_t v26 = (uint8_t *)v25;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v36 = v34;
    *(_DWORD *)uint64_t v26 = 136315138;
    v32[1] = v26 + 4;
    id v27 = objc_msgSend(v21, sel_sensitiveLoggingIdentifier);
    uint64_t v28 = sub_241CDB0D0();
    unint64_t v30 = v29;

    uint64_t v35 = sub_241A33FE4(v28, v30, &v36);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v22, (os_log_type_t)v33, "Unsupported type %s for ongoing factors", v26, 0xCu);
    uint64_t v31 = v34;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v31, -1, -1);
    MEMORY[0x245637F20](v26, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

uint64_t sub_241CB3570@<X0>(uint64_t a1@<X2>, void *a2@<X3>, void *a3@<X4>, uint64_t a4@<X5>, void *a5@<X8>)
{
  uint64_t v115 = a5;
  uint64_t v103 = a4;
  id v106 = a3;
  uint64_t v114 = a1;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35D38(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v113 = (char *)&v97 - v8;
  sub_241A35D38(0, &qword_26B038880, MEMORY[0x263F45770], v6);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v112 = (char *)&v97 - v10;
  sub_241A35D38(0, &qword_26B031AD8, MEMORY[0x263F44508], v6);
  MEMORY[0x270FA5388](v11 - 8);
  id v111 = (char *)&v97 - v12;
  sub_241A35D38(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828], v6);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  unsigned int v108 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  id v107 = (char *)&v97 - v16;
  sub_241A35D38(0, &qword_26B0320B0, MEMORY[0x263F43F20], v6);
  MEMORY[0x270FA5388](v17 - 8);
  unint64_t v104 = (char *)&v97 - v18;
  uint64_t v19 = sub_241CD6DD0();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v102 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_241CDB070();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v101 = (char *)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_241CD6F50();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  int v24 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_241CD69B0();
  uint64_t v109 = *(void *)(v25 - 8);
  uint64_t v110 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  unint64_t v105 = (char *)&v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v118 = (char *)&v97 - v29;
  MEMORY[0x270FA5388](v28);
  id v120 = (char *)&v97 - v30;
  uint64_t v31 = sub_241CD6D00();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v97 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v97 - v36;
  id v38 = a2;
  objc_msgSend(a2, sel_latestEndDate);
  id v39 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  sub_241CD6C00();
  LOBYTE(v39) = sub_241CD6CA0();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v41 = (char *)(v32 + 8);
  os_log_type_t v40 = v42;
  v42(v35, v31);
  id v119 = v37;
  uint64_t v43 = v31;
  uint64_t v44 = v31;
  id v45 = (void (*)(uint64_t, uint64_t))v42;
  v42(v37, v44);
  id v116 = v38;
  if (v39)
  {
    objc_msgSend(v38, sel_earliestStartDate);
    id v46 = (id)HKDecodeDateForValue();
    uint64_t v47 = (uint64_t)v119;
    sub_241CD6CB0();

    sub_241CB53D0(v47);
    uint64_t v98 = v43;
    uint64_t v97 = v45;
    v45(v47, v43);
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    uint64_t v103 = sub_241A313AC(0, &qword_26B038060);
    objc_msgSend(v38, sel_earliestStartDate);
    id v48 = (id)HKDecodeDateForValue();
    sub_241CD6CB0();

    sub_241CD6F40();
    sub_241CD6F00();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v24, v100);
    sub_241CD6CF0();
    uint64_t v49 = sub_241CD8F10();
    uint64_t v102 = v41;
    id v50 = (void *)v49;
    uint64_t v51 = self;
    id v52 = objc_msgSend(v51, sel_hk_chartLollipopLabelColor);
    id v53 = (void *)sub_241CD8EF0();
    id v54 = objc_msgSend(v51, sel_hk_chartLollipopValueColor);
    uint64_t v55 = v118;
    sub_241CDB9D0();
    swift_bridgeObjectRelease();

    uint64_t v56 = v98;
    uint64_t v57 = v97;
    v97((uint64_t)v35, v98);
    v57(v47, v56);
    id v58 = v116;
    uint64_t v59 = v55;
    unint64_t v60 = v120;
  }
  else
  {
    id v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    objc_msgSend(v61, sel_setDateStyle_, 2);
    objc_msgSend(v61, sel_setTimeStyle_, 0);
    objc_msgSend(v38, sel_latestEndDate);
    id v62 = (id)HKDecodeDateForValue();
    uint64_t v63 = v119;
    sub_241CD6CB0();

    uint64_t v64 = (void *)sub_241CD6C60();
    v40(v63, v43);
    id v65 = objc_msgSend(v61, sel_stringFromDate_, v64);

    sub_241CDB0D0();
    uint64_t v59 = v118;
    SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    sub_241CDB060();
    id v58 = v38;
    if (qword_26B038428 != -1) {
      swift_once();
    }
    id v66 = (id)qword_26B0413A0;
    sub_241CD6DC0();
    sub_241CDB110();
    unint64_t v60 = v120;
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
  }
  uint64_t v67 = v104;
  sub_241CD89A0();
  sub_241A3A9CC();
  uint64_t v69 = *(int *)(v68 + 48);
  id v70 = v106;
  objc_msgSend(v58, sel_earliestStartDate);
  id v71 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  v67[v69] = 1;
  uint64_t v72 = *MEMORY[0x263F43F18];
  uint64_t v73 = sub_241CD8610();
  uint64_t v74 = *(void *)(v73 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 104))(v67, v72, v73);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v67, 0, 1, v73);
  id v106 = (id)sub_241CD8990();
  uint64_t v75 = v109;
  unint64_t v76 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
  uint64_t v77 = v107;
  uint64_t v78 = v60;
  uint64_t v79 = v110;
  v76(v107, v78, v110);
  uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56);
  v80(v77, 0, 1, v79);
  v76(v105, v59, v79);
  v80(v108, 1, 1, v79);
  uint64_t v121 = 0x5F74656764696E53;
  unint64_t v122 = 0xE800000000000000;
  id v81 = objc_retain(*(id *)(v117
                          + *(int *)(type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider() + 20)
                          + 16));
  id v82 = objc_msgSend(v81, sel_description);
  sub_241CDB0D0();

  sub_241CDB180();
  swift_bridgeObjectRelease();
  id v83 = v111;
  sub_241CD8E50();
  swift_bridgeObjectRelease();
  uint64_t v84 = sub_241CD8E70();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v83, 0, 1, v84);
  sub_241CD8FF0();
  swift_allocObject();
  uint64_t v85 = sub_241CD8FE0();
  objc_msgSend(v116, sel_earliestStartDate);
  id v86 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v87 = (uint64_t)v112;
  sub_241CD79D0();
  uint64_t v88 = sub_241CD7A10();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v87, 0, 1, v88);
  uint64_t v89 = sub_241CD6810();
  uint64_t v90 = (uint64_t)v113;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v113, 1, 1, v89);
  sub_241A3A878();
  uint64_t v93 = v114;
  uint64_t v92 = v115;
  uint64_t v94 = (char *)v115 + *(int *)(v91 + 52);
  swift_bridgeObjectRetain();
  sub_241B4A1A8(1, v87, v93, v90, v94);
  void *v92 = v106;
  v92[1] = v85;
  v92[2] = 0;
  uint64_t v95 = *(void (**)(char *, uint64_t))(v75 + 8);
  v95(v118, v79);
  return ((uint64_t (*)(char *, uint64_t))v95)(v120, v79);
}

uint64_t sub_241CB4274(uint64_t a1, uint64_t a2)
{
  uint64_t v123 = a2;
  uint64_t v134 = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A35D38(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  id v111 = (char *)v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v112 = (char *)v97 - v6;
  uint64_t v119 = sub_241CD6D00();
  uint64_t v103 = *(void *)(v119 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v119);
  uint64_t v109 = (char *)v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v104 = (char *)v97 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unsigned int v108 = (char *)v97 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v118 = (char *)v97 - v13;
  sub_241A35D38(0, &qword_26B02E8F0, MEMORY[0x263F079C8], v2);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v102 = (char *)v97 - v15;
  sub_241A35D38(0, &qword_26B032000, MEMORY[0x263F07920], v2);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v101 = (char *)v97 - v17;
  uint64_t v114 = sub_241CD68F0();
  uint64_t v113 = *(void *)(v114 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v114);
  uint64_t v110 = (char *)v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v125 = (char *)v97 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v126 = (char *)v97 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  unint64_t v124 = (char *)v97 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v127 = (char *)v97 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)v97 - v28;
  uint64_t v30 = sub_241CD6DE0();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)v97 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_241CD6EE0();
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v135 = (char *)v97 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v33, *MEMORY[0x263F07740], v30);
  sub_241CD6DF0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  sub_241A35D38(0, &qword_26B034F18, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
  uint64_t v133 = v35;
  uint64_t v36 = sub_241CD6ED0();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(void *)(v37 + 72);
  uint64_t v39 = *(unsigned __int8 *)(v37 + 80);
  uint64_t v122 = 2 * v38;
  uint64_t v40 = (v39 + 32) & ~v39;
  uint64_t v131 = v39 | 7;
  uint64_t v132 = v40 + 3 * v38;
  uint64_t v41 = swift_allocObject();
  long long v129 = xmmword_241CEC2D0;
  *(_OWORD *)(v41 + 16) = xmmword_241CEC2D0;
  uint64_t v42 = v41 + v40;
  uint64_t v43 = v40;
  uint64_t v121 = v40;
  unsigned int v130 = *MEMORY[0x263F078A0];
  uint64_t v44 = *(void (**)(uint64_t))(v37 + 104);
  v44(v41 + v40);
  unsigned int v128 = *MEMORY[0x263F078A8];
  v44(v41 + v40 + v38);
  unsigned int v120 = *MEMORY[0x263F07870];
  uint64_t v45 = v120;
  ((void (*)(uint64_t, void, uint64_t))v44)(v42 + 2 * v38, v120, v36);
  sub_241C69E8C(v41);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v117 = v29;
  sub_241CD6E30();
  swift_bridgeObjectRelease();
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v129;
  uint64_t v47 = v46 + v43;
  ((void (*)(uint64_t, void, uint64_t))v44)(v46 + v43, v130, v36);
  ((void (*)(uint64_t, void, uint64_t))v44)(v46 + v43 + v38, v128, v36);
  uint64_t v48 = v122;
  ((void (*)(uint64_t, uint64_t, uint64_t))v44)(v47 + v122, v45, v36);
  sub_241C69E8C(v46);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_241CD6E30();
  swift_bridgeObjectRelease();
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = v129;
  uint64_t v50 = v49 + v121;
  ((void (*)(uint64_t, void, uint64_t))v44)(v49 + v121, v130, v36);
  uint64_t v106 = v38;
  ((void (*)(uint64_t, void, uint64_t))v44)(v50 + v38, v128, v36);
  unint64_t v105 = v44;
  ((void (*)(uint64_t, void, uint64_t))v44)(v50 + v48, v120, v36);
  sub_241C69E8C(v49);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_241CD6E20();
  swift_bridgeObjectRelease();
  uint64_t result = sub_241CD68B0();
  uint64_t v107 = v37 + 104;
  if (v52) {
    goto LABEL_6;
  }
  if (result < 0)
  {
    BOOL v53 = __OFSUB__(0, result);
    uint64_t result = -result;
    if (v53)
    {
      __break(1u);
      goto LABEL_21;
    }
  }
  if (result < 1)
  {
LABEL_6:
    uint64_t result = sub_241CD68C0();
    id v61 = v125;
    uint64_t v60 = (uint64_t)v112;
    if (v62) {
      goto LABEL_11;
    }
    if ((result & 0x8000000000000000) == 0 || (v53 = __OFSUB__(0, result), uint64_t result = -result, !v53))
    {
      if (result >= 1)
      {
        uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56);
        uint64_t v63 = v101;
        uint64_t v64 = v116;
        v100(v101, 1, 1, v116);
        uint64_t v99 = sub_241CD6F50();
        id v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56);
        id v66 = v102;
        v65(v102, 1, 1, v99);
        uint64_t v98 = sub_241CD68B0();
        v97[1] = v67 & 1;
        sub_241CD68C0();
        sub_241CD68D0();
        v100(v63, 1, 1, v64);
        v65(v66, 1, 1, v99);
        sub_241CD68B0();
        sub_241CD68C0();
        sub_241CD68D0();
LABEL_12:
        uint64_t v59 = v103;
        goto LABEL_13;
      }
LABEL_11:
      uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
      uint64_t v69 = v114;
      v68(v126, v117, v114);
      v68(v61, v127, v69);
      goto LABEL_12;
    }
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56);
  id v54 = v101;
  uint64_t v55 = v116;
  v100(v101, 1, 1, v116);
  uint64_t v56 = sub_241CD6F50();
  uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56);
  id v58 = v102;
  v57(v102, 1, 1, v56);
  sub_241CD68B0();
  sub_241CD68D0();
  v100(v54, 1, 1, v55);
  v57(v58, 1, 1, v56);
  uint64_t v59 = v103;
  sub_241CD68B0();
  sub_241CD68D0();
  uint64_t v60 = (uint64_t)v112;
LABEL_13:
  id v70 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AF8]), sel_init);
  objc_msgSend(v70, sel_setDateTimeStyle_, 1);
  uint64_t v112 = v70;
  objc_msgSend(v70, sel_setFormattingContext_, 5);
  sub_241CD6E60();
  id v71 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  uint64_t v72 = v108;
  uint64_t v73 = v119;
  v71(v108, v123, v119);
  uint64_t v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  if (v74(v60, 1, v73) == 1)
  {
    uint64_t v75 = v59;
    unint64_t v76 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
    v76(v118, v72, v73);
    sub_241A9A4DC(v60);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v72, v73);
    uint64_t v75 = v59;
    unint64_t v76 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
    v76(v118, (char *)v60, v73);
  }
  uint64_t v77 = v73;
  uint64_t v78 = (uint64_t)v111;
  sub_241CD6E60();
  uint64_t v79 = v109;
  v71(v109, v134, v77);
  unsigned int v80 = v74(v78, 1, v77);
  uint64_t v81 = v75;
  if (v80 == 1)
  {
    id v82 = v104;
    v76(v104, v79, v77);
    sub_241A9A4DC(v78);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v79, v77);
    id v82 = v104;
    v76(v104, (char *)v78, v77);
  }
  uint64_t v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = v129;
  uint64_t v84 = v83 + v121;
  uint64_t v85 = v105;
  ((void (*)(uint64_t, void, uint64_t))v105)(v83 + v121, v130, v36);
  ((void (*)(uint64_t, void, uint64_t))v85)(v84 + v106, v128, v36);
  ((void (*)(uint64_t, void, uint64_t))v85)(v84 + v122, v120, v36);
  sub_241C69E8C(v83);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v86 = v110;
  uint64_t v87 = v118;
  uint64_t v88 = v135;
  sub_241CD6E20();
  swift_bridgeObjectRelease();
  uint64_t v89 = (void *)sub_241CD6890();
  id v90 = v112;
  id v91 = objc_msgSend(v112, sel_localizedStringFromDateComponents_, v89);

  uint64_t v92 = sub_241CDB0D0();
  uint64_t v93 = *(void (**)(char *, uint64_t))(v113 + 8);
  uint64_t v94 = v114;
  v93(v86, v114);
  uint64_t v95 = *(void (**)(char *, uint64_t))(v81 + 8);
  uint64_t v96 = v119;
  v95(v82, v119);
  v95(v87, v96);
  v93(v125, v94);
  v93(v126, v94);
  v93(v124, v94);
  v93(v127, v94);
  v93(v117, v94);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v88, v116);
  return v92;
}

uint64_t sub_241CB53D0(uint64_t a1)
{
  uint64_t v2 = sub_241CD6DD0();
  MEMORY[0x270FA5388](v2 - 8);
  v19[2] = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241CDB070();
  MEMORY[0x270FA5388](v4 - 8);
  v19[1] = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD6F50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD6D00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A313AC(0, &qword_26B038060);
  sub_241CD6CF0();
  sub_241CD6F40();
  uint64_t v14 = sub_241CD6F00();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  MEMORY[0x245636D20](v13, a1, v14, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_241CDB060();
  if (qword_26B038428 != -1) {
    swift_once();
  }
  id v17 = (id)qword_26B0413A0;
  sub_241CD6DC0();
  return sub_241CDB110();
}

uint64_t sub_241CB5744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241CB5968(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241CB577C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

char *sub_241CB57A0(char *result, char *a2, void *a3)
{
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (!v3) {
    return (char *)v4;
  }
  uint64_t v7 = result;
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t result = (char *)sub_241A5238C(0, v3 & ~(v3 >> 63), 0);
  if ((uint64_t)a2 >= (uint64_t)v7 && (v3 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = v11;
    while (a2 != v7)
    {
      uint64_t result = (char *)objc_msgSend(a3, sel_categoryValueRawValuesAtIndex_, v7);
      uint64_t v8 = result;
      unint64_t v10 = *(void *)(v11 + 16);
      unint64_t v9 = *(void *)(v11 + 24);
      if (v10 >= v9 >> 1) {
        uint64_t result = (char *)sub_241A5238C(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v11 + 16) = v10 + 1;
      *(void *)(v11 + 8 * v10 + 32) = v8;
      if (a2 == ++v7) {
        return (char *)v4;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_241CB58AC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *a1;
  uint64_t v6 = type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider();
  uint64_t result = sub_241CB31C8(*(void **)(v4 + *(int *)(v6 + 20) + 16), v5);
  *a2 = result;
  a2[1] = v8;
  a2[2] = v9;
  a2[3] = v10;
  return result;
}

uint64_t sub_241CB5908(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241CB5968(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241CB59D0@<X0>(uint64_t a1@<X8>)
{
  return sub_241CB8164(v1, a1, &qword_26B038F10, MEMORY[0x263F062D0]);
}

uint64_t *sub_241CB5A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = *v3;
  uint64_t v32 = sub_241CD7650();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_241CD7690();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a1;
  id v29 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v11 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v37 = inited;
  sub_241CDB2E0();
  uint64_t v12 = *(int *)(v11 + 36);
  uint64_t v35 = a2;
  char v13 = *(unsigned char *)(a2 + v12);
  sub_241A29E14(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_241CD73B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  if (v13)
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v18 + v17, *MEMORY[0x263F454D0], v14);
  }
  else
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB720;
    unint64_t v20 = v18 + v17;
    uint64_t v21 = *(void (**)(unint64_t, void, uint64_t))(v15 + 104);
    v21(v20, *MEMORY[0x263F45520], v14);
    v21(v20 + v16, *MEMORY[0x263F45538], v14);
  }
  id v19 = v29;
  sub_241C5D74C(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v22 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v7, *MEMORY[0x263F45690], v32);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries54CorrelatedStatisticsCurrentValueSharableModelGenerator_domain, v9, v33);
  uint64_t v23 = sub_241CB811C(&qword_26B02FEA0, (void (*)(uint64_t))type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  uint64_t v26 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v36, v35, v34, v23);
  sub_241CB6648(v25);
  uint64_t v27 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v24, v27);
  v3[2] = v26;
  return v3;
}

id sub_241CB5EB8(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_241CD6D00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v52 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v52 - v15;
  MEMORY[0x270FA5388](v14);
  if (!a1 || !a2) {
    return 0;
  }
  uint64_t v55 = v20;
  id v58 = v19;
  uint64_t v59 = v18;
  uint64_t v60 = (char *)&v52 - v17;
  id v21 = a1;
  id v22 = a2;
  objc_msgSend(v21, sel__setSourceRevision_, 0);
  objc_msgSend(v22, sel__setSourceRevision_, 0);
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEDF90;
  *(void *)(inited + 32) = v21;
  *(void *)(inited + 40) = v22;
  unint64_t v61 = inited;
  sub_241CDB2E0();
  unint64_t v24 = v61;
  if (v61 >> 62)
  {
    id v30 = v21;
    id v31 = v22;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_5;
    }
LABEL_8:
    uint64_t v57 = MEMORY[0x263F8EE88];
    goto LABEL_9;
  }
  uint64_t v25 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v26 = v21;
  id v27 = v22;
  if (!v25) {
    goto LABEL_8;
  }
LABEL_5:
  sub_241C69AF4(v24);
  uint64_t v57 = v28;
LABEL_9:
  swift_bridgeObjectRelease();
  id v56 = a3;
  id v33 = objc_msgSend(v21, sel_startDate);
  sub_241CD6CB0();

  id v34 = objc_msgSend(v22, sel_startDate);
  sub_241CD6CB0();

  sub_241CB811C((unint64_t *)&qword_26B02E8D0, MEMORY[0x263F07490]);
  char v35 = sub_241CDB010();
  id v53 = v22;
  id v54 = v21;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  char v52 = v36;
  if (v35) {
    uint64_t v37 = v13;
  }
  else {
    uint64_t v37 = v16;
  }
  v36(v60, v37, v6);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v7 + 8);
  v38(v13, v6);
  v38(v16, v6);
  id v39 = objc_msgSend(v21, sel_endDate);
  uint64_t v40 = v55;
  sub_241CD6CB0();

  id v41 = objc_msgSend(v22, sel_endDate);
  uint64_t v42 = v58;
  sub_241CD6CB0();

  if (sub_241CDB020()) {
    uint64_t v43 = v42;
  }
  else {
    uint64_t v43 = v40;
  }
  uint64_t v44 = v59;
  v52(v59, v43, v6);
  v38(v42, v6);
  v38(v40, v6);
  uint64_t v45 = v60;
  uint64_t v46 = (void *)sub_241CD6C60();
  uint64_t v47 = (void *)sub_241CD6C60();
  sub_241A313AC(0, &qword_26B0304D8);
  sub_241B8DEF4();
  uint64_t v48 = (void *)sub_241CDB360();
  swift_bridgeObjectRelease();
  uint64_t v49 = self;
  uint64_t v50 = v56;
  id v29 = objc_msgSend(v49, sel_correlationWithType_startDate_endDate_objects_, v56, v46, v47, v48);

  v38(v44, v6);
  v38(v45, v6);

  return v29;
}

uint64_t sub_241CB63A8()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries54CorrelatedStatisticsCurrentValueSharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241CB6450()
{
  return type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator(0);
}

uint64_t type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B02FEA8);
}

id sub_241CB647C(void **a1, uint64_t a2)
{
  return sub_241CB75B8(*a1, a2);
}

uint64_t sub_241CB6484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries54CorrelatedStatisticsCurrentValueSharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

_UNKNOWN **sub_241CB64FC()
{
  return &off_26F5C8090;
}

uint64_t sub_241CB6508(uint64_t a1)
{
  uint64_t result = sub_241CB811C(&qword_26B02FE90, (void (*)(uint64_t))type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241CB6560()
{
  return &off_26F5C80D8;
}

uint64_t sub_241CB656C(uint64_t a1)
{
  uint64_t result = sub_241CB811C(&qword_26B02FE98, (void (*)(uint64_t))type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241CB65C4()
{
  return &off_26F5C80F0;
}

uint64_t sub_241CB65D0(uint64_t a1)
{
  uint64_t result = sub_241CB811C(&qword_26B034518, (void (*)(uint64_t))type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B02FDF0);
}

uint64_t sub_241CB6648(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241CB66A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241CB7F44(0, (unint64_t *)&qword_26B032400, (void (*)(uint64_t))sub_241A5B1CC, (void (*)(void))sub_241CB7EA0);
  uint64_t v5 = v4;
  id v111 = *(void (***)(void, void))(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v81 - v6;
  sub_241CB7ED4();
  uint64_t v103 = v8;
  uint64_t v102 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v101 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CB7F44(0, &qword_26B032458, (void (*)(uint64_t))sub_241CB7ED4, (void (*)(void))sub_241CB7FE8);
  uint64_t v11 = v10;
  uint64_t v105 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v104 = (char *)&v81 - v12;
  uint64_t v109 = sub_241CD7650();
  uint64_t v112 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  unsigned int v108 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_241CD7690();
  uint64_t v113 = *(void *)(v110 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v110);
  uint64_t v100 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v106 = (char *)&v81 - v16;
  uint64_t v17 = self;
  uint64_t v18 = (void *)sub_241CD6790();
  id v19 = objc_msgSend(v17, sel_predicateForSamplesWithinDateInterval_options_, v18, 0);

  uint64_t v20 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  unint64_t v21 = sub_241CD9EE0();
  uint64_t v22 = *(int *)(v20 + 20);
  uint64_t v107 = a3;
  uint64_t v23 = a3 + v22;
  unint64_t v24 = (void *)sub_241CD7770();
  self;
  uint64_t v25 = swift_dynamicCastObjCClass();
  if (!v25)
  {
    swift_bridgeObjectRelease();

LABEL_12:
    sub_241CD76B0();
    sub_241A311E0(&v116, v117);
    uint64_t v44 = (void *)sub_241CD75B0();
    uint64_t v45 = (void *)sub_241CD7770();
    id v46 = v19;
    uint64_t v47 = sub_241CDB5D0();

    sub_241A31190((uint64_t)&v116);
    uint64_t v116 = v47;
    sub_241A5B1CC();
    sub_241C9B41C(0, (unint64_t *)&qword_26B032CE0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241CB7EA0();
    sub_241CDA710();
    swift_release();
    sub_241CB80CC(&qword_26B038930, (unint64_t *)&qword_26B032400, (void (*)(uint64_t))sub_241A5B1CC, (void (*)(void))sub_241CB7EA0);
    uint64_t v48 = sub_241CDA6D0();

    ((void (**)(char *, uint64_t))v111)[1](v7, v5);
    return v48;
  }
  id v99 = v24;
  if (v21 >> 62)
  {
    uint64_t v98 = v25;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_241CDBF50();
    swift_bridgeObjectRelease();
    uint64_t v25 = v98;
  }
  else
  {
    uint64_t v26 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v26 != 2)
  {

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v98 = v25;
  sub_241CD76B0();
  sub_241A311E0(&v116, v117);
  uint64_t result = sub_241CD75B0();
  uint64_t v28 = (void *)result;
  uint64_t v97 = v11;
  id v111 = (void (**)(void, void))(v21 & 0xC000000000000001);
  if ((v21 & 0xC000000000000001) != 0)
  {
    id v29 = (id)MEMORY[0x245637160](0, v21);
  }
  else
  {
    if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_26;
    }
    id v29 = *(id *)(v21 + 32);
  }
  id v30 = v29;
  id v31 = v19;
  uint64_t v32 = sub_241CDB5D0();

  id v90 = v31;
  sub_241A31190((uint64_t)&v116);
  uint64_t v115 = v32;
  sub_241CD7730();
  id v96 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t v91 = v33;
  uint64_t inited = swift_initStackObject();
  long long v89 = xmmword_241CEB710;
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v93 = v23;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v114 = inited;
  sub_241CDB2E0();
  uint64_t v95 = v114;
  uint64_t v82 = *(int *)(v20 + 36);
  LOBYTE(v31) = *(unsigned char *)(v107 + v82);
  sub_241A29E14(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v36 = v35;
  uint64_t v37 = sub_241CD73B0();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(void *)(v38 + 72);
  uint64_t v40 = *(unsigned __int8 *)(v38 + 80);
  uint64_t v41 = (v40 + 32) & ~v40;
  uint64_t v94 = v37;
  uint64_t v92 = v38;
  uint64_t v88 = v39;
  uint64_t v87 = v41;
  uint64_t v86 = v36;
  uint64_t v85 = v40;
  uint64_t v42 = swift_allocObject();
  if (v31)
  {
    *(_OWORD *)(v42 + 16) = xmmword_241CEB730;
    (*(void (**)(uint64_t, void, uint64_t))(v38 + 104))(v42 + v41, *MEMORY[0x263F454D0], v37);
  }
  else
  {
    *(_OWORD *)(v42 + 16) = xmmword_241CEB720;
    uint64_t v49 = *(void (**)(uint64_t, void, uint64_t))(v38 + 104);
    v49(v42 + v41, *MEMORY[0x263F45520], v37);
    v49(v42 + v41 + v39, *MEMORY[0x263F45538], v37);
  }
  id v43 = v96;
  sub_241C5D74C(v42);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v50 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v50);
  swift_bridgeObjectRelease();
  uint64_t v51 = *(void (**)(void))(v112 + 104);
  unsigned int v84 = *MEMORY[0x263F45690];
  v112 += 104;
  uint64_t v83 = (void (*)(char *, void, uint64_t))v51;
  v51(v108);
  char v52 = v106;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241A5B1CC();
  uint64_t v54 = v53;
  sub_241CB7EA0();
  uint64_t v95 = v54;
  id v96 = (id)sub_241CDA680();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v113 + 8);
  v113 += 8;
  v55(v52, v110);
  sub_241A31190((uint64_t)&v116);
  swift_release();
  sub_241CD76B0();
  sub_241A311E0(&v116, v117);
  uint64_t result = sub_241CD75B0();
  id v56 = (void *)result;
  if (v111)
  {
    id v57 = (id)MEMORY[0x245637160](1, v21);
LABEL_18:
    id v58 = v57;
    swift_bridgeObjectRelease();
    id v59 = v90;
    uint64_t v60 = sub_241CDB5D0();

    id v111 = (void (**)(void, void))v59;
    sub_241A31190((uint64_t)&v116);
    uint64_t v115 = v60;
    sub_241CD7730();
    unint64_t v61 = (void *)sub_241CD76E0();
    uint64_t v62 = swift_initStackObject();
    *(_OWORD *)(v62 + 16) = v89;
    *(void *)(v62 + 32) = sub_241CD7770();
    uint64_t v114 = v62;
    sub_241CDB2E0();
    if (*(unsigned char *)(v107 + v82))
    {
      uint64_t v63 = v87;
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_241CEB730;
      (*(void (**)(uint64_t, void, uint64_t))(v92 + 104))(v64 + v63, *MEMORY[0x263F454D0], v94);
    }
    else
    {
      uint64_t v66 = v88;
      uint64_t v67 = v87;
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_241CEB720;
      uint64_t v68 = v64 + v67;
      uint64_t v69 = *(void (**)(uint64_t, void, uint64_t))(v92 + 104);
      uint64_t v70 = v94;
      v69(v68, *MEMORY[0x263F45520], v94);
      v69(v68 + v66, *MEMORY[0x263F45538], v70);
    }
    id v65 = v61;
    sub_241C5D74C(v64);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    unint64_t v71 = swift_bridgeObjectRetain();
    sub_241C5D7A0(v71);
    swift_bridgeObjectRelease();
    v83(v108, v84, v109);
    uint64_t v72 = v100;
    sub_241CD7680();

    swift_bridgeObjectRelease();
    uint64_t v73 = sub_241CDA680();
    v55(v72, v110);
    sub_241A31190((uint64_t)&v116);
    swift_release();
    uint64_t v115 = v73;
    uint64_t v116 = (uint64_t)v96;
    swift_retain();
    swift_retain();
    uint64_t v74 = v101;
    sub_241CDA400();
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = v98;
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = sub_241CB8054;
    *(void *)(v76 + 24) = v75;
    sub_241C9B41C(0, (unint64_t *)&qword_26B032CE0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241CB7FE8();
    id v77 = v99;
    uint64_t v78 = v104;
    uint64_t v79 = v103;
    sub_241CDA710();
    swift_release();
    (*(void (**)(char *, uint64_t))(v102 + 8))(v74, v79);
    sub_241CB80CC(&qword_26B02E990, &qword_26B032458, (void (*)(uint64_t))sub_241CB7ED4, (void (*)(void))sub_241CB7FE8);
    uint64_t v80 = v97;
    uint64_t v48 = sub_241CDA6D0();

    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v105 + 8))(v78, v80);
    return v48;
  }
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    id v57 = *(id *)(v21 + 40);
    goto LABEL_18;
  }
LABEL_26:
  __break(1u);
  return result;
}

id sub_241CB75B8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void (***)(void, void))(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29E14(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v58 - v10;
  sub_241A29E14(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v8);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v58 - v16;
  sub_241A29E14(0, &qword_26B032050, MEMORY[0x263F45780], v8);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  unint64_t v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v58 - v22;
  if (!a1)
  {
    sub_241CD7A80();
    uint64_t v43 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v23, 0, 1, v43);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v44 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v17, 1, 1, v44);
    uint64_t v45 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    sub_241CB8164((uint64_t)v23, (uint64_t)v21, &qword_26B032050, MEMORY[0x263F45780]);
    id v42 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v17, (uint64_t)v21, 0, 0);
    sub_241CB7E30((uint64_t)v23, &qword_26B032050, v45);
    return v42;
  }
  unint64_t v61 = v5;
  self;
  uint64_t v24 = swift_dynamicCastObjCClass();
  if (!v24)
  {
    id v46 = a1;
    sub_241CDA0F0();
    id v47 = v46;
    uint64_t v48 = sub_241CDA190();
    os_log_type_t v49 = sub_241CDB650();
    if (os_log_type_enabled(v48, v49))
    {
      unint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      *(void *)&v62[0] = v60;
      *(_DWORD *)unint64_t v50 = 136315138;
      id v58 = v50 + 4;
      id v59 = v50;
      swift_getObjectType();
      uint64_t v51 = sub_241CDC270();
      uint64_t v64 = sub_241A33FE4(v51, v52, (uint64_t *)v62);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      uint64_t v53 = v59;
      _os_log_impl(&dword_241A23000, v48, v49, "Unexpected correlated sample received: %s", v59, 0xCu);
      uint64_t v54 = v60;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v54, -1, -1);
      MEMORY[0x245637F20](v53, -1, -1);
    }
    else
    {
    }
    ((void (**)(char *, uint64_t))v61)[1](v7, v4);
    sub_241CD7A80();
    uint64_t v55 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v23, 0, 1, v55);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v56 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v17, 1, 1, v56);
    id v57 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    sub_241CB8164((uint64_t)v23, (uint64_t)v21, &qword_26B032050, MEMORY[0x263F45780]);
    id v42 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v17, (uint64_t)v21, 0, 0);
    sub_241CB7E30((uint64_t)v23, &qword_26B032050, v57);

    return v42;
  }
  uint64_t v25 = (void *)v24;
  sub_241A313AC(0, &qword_26B030488);
  id v26 = a1;
  id v27 = (void (**)(void, void))HKCodableSummaryBloodPressureValue.init(correlation:)(v25);
  uint64_t v28 = a2
      + *(int *)(type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0) + 32);
  uint64_t v29 = sub_241CD9F00();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v15, v28, v29);
  uint64_t v30 = *MEMORY[0x263F46C88];
  uint64_t v31 = sub_241CD9970();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 104))(v15, v30, v31);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v15, 0, 1, v31);
  sub_241A313AC(0, &qword_26B034E48);
  id v33 = v26;
  sub_241CDBB10();

  uint64_t v34 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v11, 0, 1, v34);
  id v35 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v11, 1, 0);
  unint64_t v61 = v27;
  id result = objc_msgSend(v27, sel_data);
  if (result)
  {
    uint64_t v37 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v38 = sub_241CD6AE0();
    unint64_t v40 = v39;

    uint64_t v41 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
    sub_241CB8164((uint64_t)v15, (uint64_t)v17, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    uint64_t v63 = 0;
    memset(v62, 0, sizeof(v62));
    id v42 = sub_241A54648(v38, v40, 5, (uint64_t)v17, (uint64_t)v35, 0, (uint64_t)v62);

    sub_241A37374(v38, v40);
    sub_241CB7E30((uint64_t)v15, (unint64_t *)&qword_26B0321F0, v41);

    return v42;
  }
  __break(1u);
  return result;
}

uint64_t sub_241CB7E30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A29E14(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241CB7EA0()
{
  return sub_241CB811C(&qword_26B038980, (void (*)(uint64_t))sub_241A5B1CC);
}

void sub_241CB7ED4()
{
  if (!qword_26B0324C8)
  {
    sub_241A5B1CC();
    sub_241CB7EA0();
    unint64_t v0 = sub_241CDA3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0324C8);
    }
  }
}

void sub_241CB7F44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_241C9B41C(255, (unint64_t *)&qword_26B032CE0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    a4();
    unint64_t v6 = sub_241CDA3E0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_241CB7FE8()
{
  return sub_241CB811C(&qword_26B02E9A0, (void (*)(uint64_t))sub_241CB7ED4);
}

uint64_t sub_241CB801C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_241CB8054(void *a1, void *a2)
{
  return sub_241CB5EB8(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_241CB805C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241CB8094@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_241CB80CC(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241CB7F44(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241CB811C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241CB8164(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A29E14(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t *sub_241CB81E4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD6810();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_241A29E14(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)a1 + v19;
    unint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_241CD9F00();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  }
  return a1;
}

uint64_t sub_241CB8450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 32);
  uint64_t v9 = sub_241CD9F00();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

char *sub_241CB85A0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A29E14(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_241CD9F00();
  unint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_241CB87BC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A29E14(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  a1[a3[6]] = a2[a3[6]];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  unint64_t v21 = &a2[v19];
  uint64_t v22 = sub_241CD9F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_241CB8A3C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A29E14(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_241CD9F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_241CB8C34(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A29E14(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_241CD9F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t sub_241CB8EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241CB8EB4);
}

uint64_t sub_241CB8EB4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_241A29E14(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD77C0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[7] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_241CD9F00();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_241CB9068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241CB907C);
}

uint64_t sub_241CB907C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_241A29E14(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_241CD77C0();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_241CD9F00();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_241CB9230()
{
  sub_241A29E14(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_241CD77C0();
    if (v1 <= 0x3F)
    {
      sub_241CD9F00();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t type metadata accessor for ActivityDataTypeDetailChartCell()
{
  uint64_t result = qword_26B030908;
  if (!qword_26B030908) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241CB93C4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241CB9404()
{
  return sub_241CDB7A0();
}

uint64_t sub_241CB943C()
{
  return sub_241CD83D0();
}

uint64_t sub_241CB9470()
{
  swift_getObjectType();
  uint64_t v1 = sub_241CDA1A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_241CD88D0();
  if (v20)
  {
    sub_241A35FBC(0, (unint64_t *)&qword_26B030960);
    sub_241A35FBC(0, &qword_26B0308F0);
    if (swift_dynamicCast())
    {
      if (*((void *)&v22 + 1))
      {
        sub_241A5598C(&v21, (uint64_t)v24);
        uint64_t v5 = (void *)sub_241CD88A0();
        id v6 = objc_msgSend(v5, sel_view);

        objc_msgSend(v6, sel_removeFromSuperview);
        uint64_t v7 = (void *)sub_241CD88A0();
        objc_msgSend(v7, sel_removeFromParentViewController);

        sub_241CB9820(v24);
        sub_241CD88B0();
        sub_241CD8880();
        return sub_241A31190((uint64_t)v24);
      }
    }
    else
    {
      uint64_t v23 = 0;
      long long v21 = 0u;
      long long v22 = 0u;
    }
  }
  else
  {
    sub_241A68690((uint64_t)v19, &qword_268D432A0, (unint64_t *)&qword_26B030960);
    long long v21 = 0u;
    long long v22 = 0u;
    uint64_t v23 = 0;
  }
  sub_241A68690((uint64_t)&v21, &qword_268D43B38, &qword_26B0308F0);
  sub_241CDA120();
  id v9 = v0;
  uint64_t v10 = sub_241CDA190();
  os_log_type_t v11 = sub_241CDB650();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(void *)&long long v21 = v13;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v14 = sub_241CDC270();
    v24[0] = sub_241A33FE4(v14, v15, (uint64_t *)&v21);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    sub_241CD88D0();
    sub_241A686EC(0, &qword_268D432A0, (unint64_t *)&qword_26B030960);
    uint64_t v16 = sub_241CDB120();
    v24[0] = sub_241A33FE4(v16, v17, (uint64_t *)&v21);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v10, v11, "%s: Item kind wrong: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x245637F20](v13, -1, -1);
    MEMORY[0x245637F20](v12, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

id sub_241CB9820(void *a1)
{
  sub_241A72DB8(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD6D00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241CD8890();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    sub_241CD8370();

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  sub_241CD6CF0();
  sub_241A9A4DC((uint64_t)v4);
LABEL_6:
  uint64_t v11 = sub_241CB9A84();
  uint64_t v12 = (void *)sub_241CD88C0();
  id v13 = v12;
  if (v12)
  {
    id v14 = objc_msgSend(v12, sel_resolvedHealthToolbox);

    uint64_t v15 = a1[3];
    uint64_t v16 = a1[4];
    sub_241A311E0(a1, v15);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
    uint64_t v18 = (void *)sub_241CD6C60();
    id v13 = objc_msgSend(v14, sel_createActivityChartForActivityMoveMode_displayDate_activityOptions_chartSharableModel_, v17, v18, v11, 0);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v13;
}

uint64_t sub_241CB9A84()
{
  swift_getObjectType();
  uint64_t v1 = sub_241CDA1A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_241CD88D0();
  if (!v21)
  {
    sub_241A68690((uint64_t)v20, &qword_268D432A0, (unint64_t *)&qword_26B030960);
    long long v22 = 0u;
    long long v23 = 0u;
    uint64_t v24 = 0;
    goto LABEL_8;
  }
  sub_241A35FBC(0, (unint64_t *)&qword_26B030960);
  sub_241A35FBC(0, &qword_26B0308F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    goto LABEL_8;
  }
  if (!*((void *)&v23 + 1))
  {
LABEL_8:
    sub_241A68690((uint64_t)&v22, &qword_268D43B38, &qword_26B0308F0);
    sub_241CDA120();
    id v8 = v0;
    uint64_t v9 = sub_241CDA190();
    os_log_type_t v10 = sub_241CDB650();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(void *)&long long v22 = v12;
      *(_DWORD *)uint64_t v11 = 136315394;
      uint64_t v13 = sub_241CDC270();
      v25[0] = sub_241A33FE4(v13, v14, (uint64_t *)&v22);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      sub_241CD88D0();
      sub_241A686EC(0, &qword_268D432A0, (unint64_t *)&qword_26B030960);
      uint64_t v15 = sub_241CDB120();
      v25[0] = sub_241A33FE4(v15, v16, (uint64_t *)&v22);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v9, v10, "%s: Item kind wrong: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v12, -1, -1);
      MEMORY[0x245637F20](v11, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  sub_241A5598C(&v22, (uint64_t)v25);
  uint64_t v5 = v26;
  uint64_t v6 = v27;
  sub_241A311E0(v25, v26);
  char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  if (v7 == 2)
  {
    sub_241A31190((uint64_t)v25);
    return 0;
  }
  if (v7) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = 6;
  }
  sub_241A31190((uint64_t)v25);
  return v17;
}

id sub_241CB9E30(void *a1, double a2, double a3, double a4, double a5)
{
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for ActivityDataTypeDetailChartCell();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_241CB9EA4(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for ActivityDataTypeDetailChartCell();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_241CB9EF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityDataTypeDetailChartCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241CB9F28()
{
  return type metadata accessor for ActivityDataTypeDetailChartCell();
}

void sub_241CB9F30(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_241A3600C();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_241CEB720;
  id v7 = objc_msgSend(self, sel_activitySummaryType);
  id v8 = objc_msgSend(v7, sel_identifier);

  uint64_t v9 = sub_241CDB0D0();
  uint64_t v11 = v10;

  *(void *)(v6 + 32) = v9;
  *(void *)(v6 + 40) = v11;
  *(void *)(v6 + 48) = 0xD000000000000019;
  *(void *)(v6 + 56) = 0x8000000241CE5680;
  uint64_t v12 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  id v13 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v13)
  {
    uint64_t v14 = sub_241CDB0D0();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  *(void *)a3 = 0xD000000000000019;
  *(void *)(a3 + 8) = 0x8000000241CE5680;
  *(unsigned char *)(a3 + 16) = a1;
  *(unsigned char *)(a3 + 17) = a2 & 1;
  *(void *)(a3 + 24) = v14;
  *(void *)(a3 + 32) = v16;
}

void sub_241CBA074(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_241A3600C();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_241CEB720;
  id v7 = objc_msgSend(self, sel_activitySummaryType);
  id v8 = objc_msgSend(v7, sel_identifier);

  uint64_t v9 = sub_241CDB0D0();
  uint64_t v11 = v10;

  *(void *)(v6 + 32) = v9;
  *(void *)(v6 + 40) = v11;
  *(void *)(v6 + 48) = 0xD000000000000018;
  *(void *)(v6 + 56) = 0x8000000241CE56A0;
  uint64_t v12 = (void *)sub_241CDB2A0();
  swift_bridgeObjectRelease();
  id v13 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v13)
  {
    uint64_t v14 = sub_241CDB0D0();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  *(void *)a3 = 0xD000000000000018;
  *(void *)(a3 + 8) = 0x8000000241CE56A0;
  *(unsigned char *)(a3 + 16) = a1;
  *(unsigned char *)(a3 + 17) = a2 & 1;
  *(void *)(a3 + 24) = v14;
  *(void *)(a3 + 32) = v16;
}

ValueMetadata *type metadata accessor for ActivityDataTypeDetailChartCell.ActiveEnergyDataSourceItem()
{
  return &type metadata for ActivityDataTypeDetailChartCell.ActiveEnergyDataSourceItem;
}

uint64_t _s9Summaries31ActivityDataTypeDetailChartCellC26ActiveEnergyDataSourceItemVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s9Summaries31ActivityDataTypeDetailChartCellC26ActiveEnergyDataSourceItemVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9Summaries31ActivityDataTypeDetailChartCellC26ActiveEnergyDataSourceItemVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ActivityDataTypeDetailChartCell.MoveTimeDataSourceItem()
{
  return &type metadata for ActivityDataTypeDetailChartCell.MoveTimeDataSourceItem;
}

uint64_t sub_241CBA304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241CBA3B0(a1, a2, a3, (uint64_t (*)(void))sub_241AFB618, (uint64_t (*)(void))sub_241CBA330);
}

unint64_t sub_241CBA330()
{
  unint64_t result = qword_268D43B40;
  if (!qword_268D43B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43B40);
  }
  return result;
}

uint64_t sub_241CBA384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241CBA3B0(a1, a2, a3, (uint64_t (*)(void))sub_241AFB670, (uint64_t (*)(void))sub_241CBA3EC);
}

uint64_t sub_241CBA3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_241CBA3EC()
{
  unint64_t result = qword_26B030900;
  if (!qword_26B030900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B030900);
  }
  return result;
}

uint64_t sub_241CBA44C(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, char a9)
{
  uint64_t v124 = a8;
  LODWORD(v130) = a7;
  uint64_t v122 = a6;
  uint64_t v116 = a4;
  uint64_t v127 = a2;
  int v11 = a3 & 1;
  LODWORD(v123) = a9 & 1;
  uint64_t v117 = sub_241CD78F0();
  uint64_t v115 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v106 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241CBEE50(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v107 = (uint64_t)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  *(void *)&long long v113 = (char *)&v101 - v17;
  uint64_t v111 = sub_241CD6970();
  uint64_t v110 = *(void *)(v111 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v111);
  unsigned int v108 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v109 = (char *)&v101 - v20;
  uint64_t v21 = sub_241CD6EE0();
  uint64_t v119 = *(void *)(v21 - 8);
  uint64_t v120 = v21;
  MEMORY[0x270FA5388](v21);
  long long v23 = (char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x263F46BE0];
  sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], v13);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v112 = (char *)&v101 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v101 - v28;
  uint64_t v30 = sub_241CD98D0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v33 = v31 + 16;
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  uint64_t v126 = a5;
  uint64_t v121 = v32;
  v32((uint64_t)v29, a5, v30);
  uint64_t v36 = *(void (**)(uint64_t, void, uint64_t, void *))(v31 + 56);
  uint64_t v34 = v31 + 56;
  id v35 = v36;
  v36((uint64_t)v29, 0, 1, (void *)v30);
  uint64_t v118 = a1;
  uint64_t v37 = a1;
  int v38 = v11;
  uint64_t v125 = sub_241CBC1C0(v37, v127, v11, (uint64_t)v29, v130, v124, (char)v123);
  uint64_t v40 = v39;
  sub_241CBEF34((uint64_t)v29, &qword_26B0321C0, v24);
  if (!v40)
  {
    BOOL v58 = v38 != 0;
    type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure();
    sub_241CC0B60(&qword_268D43B50, (void (*)(uint64_t))type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure);
    swift_allocError();
    uint64_t v60 = v59;
    sub_241CBEFF0();
    uint64_t v62 = v60 + *(int *)(v61 + 80);
    uint64_t v63 = v126;
    *(void *)uint64_t v60 = v127;
    *(unsigned char *)(v60 + 8) = v58;
    uint64_t v64 = v118;
    *(void *)(v60 + 16) = v118;
    *(unsigned char *)(v60 + 24) = v130;
    v121(v62, v63, v30);
    v35(v62, 0, 1, (void *)v30);
    swift_storeEnumTagMultiPayload();
    id v65 = v64;
    return swift_willThrow();
  }
  uint64_t v41 = v40;
  uint64_t v42 = v33;
  uint64_t v123 = v35;
  uint64_t v124 = v34;
  uint64_t v118 = (void *)v30;
  int v104 = v38;
  uint64_t v43 = v126;
  sub_241CD6EA0();
  uint64_t v44 = v122;
  uint64_t v45 = sub_241ABEF60(v130, (uint64_t)v23);
  char v47 = v46;
  (*(void (**)(char *, uint64_t))(v119 + 8))(v23, v120);
  if (v47)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure();
    sub_241CC0B60(&qword_268D43B50, (void (*)(uint64_t))type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure);
    swift_allocError();
    uint64_t v67 = v66;
    uint64_t v68 = sub_241CD6810();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v67, v44, v68);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  uint64_t v120 = v45;
  uint64_t v48 = v113;
  sub_241CBEEB4(v116, v113, &qword_26B032040, MEMORY[0x263F45718]);
  uint64_t v49 = v115;
  unint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
  uint64_t v51 = v117;
  uint64_t v103 = v115 + 48;
  uint64_t v102 = v50;
  unsigned int v52 = v50(v48, 1, v117);
  uint64_t v105 = v42;
  if (v52 == 1)
  {
    sub_241CBEF34(v48, &qword_26B032040, MEMORY[0x263F45718]);
    uint64_t v53 = (uint64_t)v109;
    sub_241CD6960();
    uint64_t v54 = (void (*)(uint64_t, uint64_t, void *))v121;
    uint64_t v55 = v111;
    uint64_t v56 = (uint64_t)v112;
    uint64_t v57 = v110;
  }
  else
  {
    uint64_t v69 = v108;
    sub_241CD78E0();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v51);
    uint64_t v57 = v110;
    uint64_t v53 = (uint64_t)v109;
    uint64_t v55 = v111;
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v109, v69, v111);
    uint64_t v54 = (void (*)(uint64_t, uint64_t, void *))v121;
    uint64_t v56 = (uint64_t)v112;
  }
  uint64_t v70 = v125;
  uint64_t v119 = sub_241AE50C0(v125, v41, (uint64_t)"", 0, 2, v53);
  uint64_t v126 = v71;
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v53, v55);
  uint64_t v128 = v70;
  uint64_t v129 = v41;
  swift_bridgeObjectRetain();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  swift_bridgeObjectRelease();
  sub_241CBEE50(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
  uint64_t v72 = swift_allocObject();
  uint64_t v73 = MEMORY[0x263F8D6C8];
  long long v113 = xmmword_241CEB730;
  *(_OWORD *)(v72 + 16) = xmmword_241CEB730;
  uint64_t v74 = MEMORY[0x263F8D750];
  *(void *)(v72 + 56) = v73;
  *(void *)(v72 + 64) = v74;
  *(void *)(v72 + 32) = v120;
  uint64_t v125 = sub_241CDB0A0();
  uint64_t v76 = v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v77 = v43;
  uint64_t v78 = v43;
  uint64_t v79 = v118;
  v54(v56, v78, v118);
  uint64_t v80 = v123;
  v123(v56, 0, 1, v79);
  uint64_t v81 = v114;
  uint64_t v82 = sub_241CBF164(v122, v56, v130);
  if (v81)
  {
    uint64_t v84 = v77;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_241CBEF34(v56, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure();
    sub_241CC0B60(&qword_268D43B50, (void (*)(uint64_t))type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure);
    swift_allocError();
    uint64_t v86 = v85;
    v121(v85, v84, (uint64_t)v79);
    v80(v86, 0, 1, v79);
    goto LABEL_12;
  }
  uint64_t v88 = v125;
  uint64_t v130 = v83;
  uint64_t v124 = (uint64_t)v82;
  sub_241CBEF34(v56, &qword_26B0321C0, MEMORY[0x263F46BE0]);
  if (v104) {
    goto LABEL_20;
  }
  if (v127 == 2)
  {
    uint64_t v90 = v107;
    sub_241CBEEB4(v116, v107, &qword_26B032040, MEMORY[0x263F45718]);
    uint64_t v91 = v117;
    if (v102(v90, 1, v117) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_241CBEF34(v90, &qword_26B032040, MEMORY[0x263F45718]);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v127 = v76;
      uint64_t v92 = v115;
      uint64_t v93 = v91;
      uint64_t v94 = v106;
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v106, v90, v93);
      uint64_t v95 = swift_allocObject();
      *(_OWORD *)(v95 + 16) = xmmword_241CEB720;
      uint64_t v96 = sub_241CD78D0();
      uint64_t v98 = v97;
      uint64_t v99 = MEMORY[0x263F8D310];
      *(void *)(v95 + 56) = MEMORY[0x263F8D310];
      unint64_t v100 = sub_241A55A74();
      *(void *)(v95 + 32) = v96;
      *(void *)(v95 + 40) = v98;
      *(void *)(v95 + 96) = v99;
      *(void *)(v95 + 104) = v100;
      *(void *)(v95 + 64) = v100;
      *(void *)(v95 + 72) = v88;
      *(void *)(v95 + 80) = v127;
      sub_241CDB0A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v94, v93);
    }
    return v124;
  }
  if (v127 != 1)
  {
LABEL_20:
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v89 = swift_allocObject();
    *(_OWORD *)(v89 + 16) = v113;
    *(void *)(v89 + 56) = MEMORY[0x263F8D310];
    *(void *)(v89 + 64) = sub_241A55A74();
    *(void *)(v89 + 32) = v88;
    *(void *)(v89 + 40) = v76;
    sub_241CDB0A0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v124;
}

uint64_t sub_241CBB0D0(void *a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, char a9, uint64_t a10)
{
  int v11 = v10;
  uint64_t v133 = a8;
  LODWORD(v132) = a7;
  uint64_t v123 = a6;
  uint64_t v117 = a5;
  uint64_t v134 = a3;
  uint64_t v120 = *v10;
  LODWORD(v135) = a4 & 1;
  LODWORD(v131) = a9 & 1;
  uint64_t v14 = sub_241CDA1A0();
  uint64_t v125 = *(void *)(v14 - 8);
  uint64_t v126 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v124 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v121 = (char *)&v108 - v17;
  uint64_t v18 = sub_241CD78F0();
  uint64_t v118 = *(void *)(v18 - 8);
  uint64_t v119 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v109 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241CBEE50(0, &qword_26B032040, MEMORY[0x263F45718], MEMORY[0x263F8D8F0]);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v110 = (uint64_t)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v112 = (uint64_t)&v108 - v24;
  uint64_t v115 = sub_241CD6970();
  uint64_t v114 = *(void *)(v115 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v115);
  uint64_t v111 = (char *)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  long long v113 = (char *)&v108 - v27;
  sub_241CBEE50(0, &qword_26B038F10, MEMORY[0x263F062D0], v20);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v108 - v29;
  uint64_t v31 = sub_241CD6810();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v122 = (char *)&v108 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = (uint64_t (*)(uint64_t))MEMORY[0x263F46BE0];
  sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], v20);
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v37 = (char *)&v108 - v36;
  uint64_t v116 = a1;
  uint64_t v38 = sub_241CBBFF8(a1, a2);
  uint64_t v129 = v39;
  uint64_t v130 = v38;
  uint64_t v127 = v40;
  uint64_t v128 = v41;
  uint64_t v42 = sub_241CD98D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v37, 1, 1, v42);
  uint64_t v43 = v133;
  char v44 = v132;
  uint64_t v133 = (uint64_t)v11;
  uint64_t v45 = sub_241CBC1C0(a2, v134, v135, (uint64_t)v37, v132, v43, (char)v131);
  uint64_t v47 = v46;
  sub_241CBEF34((uint64_t)v37, &qword_26B0321C0, v34);
  if (!v47)
  {
    sub_241CDA0F0();
    id v48 = a2;
    uint64_t v49 = sub_241CDA190();
    os_log_type_t v50 = sub_241CDB630();
    if (os_log_type_enabled(v49, v50))
    {
      LODWORD(v133) = v135 != 0;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v135 = swift_slowAlloc();
      v138[0] = v135;
      *(_DWORD *)uint64_t v51 = 136315906;
      uint64_t v136 = v120;
      swift_getMetatypeMetadata();
      uint64_t v52 = sub_241CDB120();
      uint64_t v136 = sub_241A33FE4(v52, v53, v138);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2080;
      id v54 = objc_msgSend(v48, sel_sensitiveLoggingIdentifier);
      uint64_t v55 = sub_241CDB0D0();
      unint64_t v57 = v56;

      uint64_t v136 = sub_241A33FE4(v55, v57, v138);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 22) = 2080;
      uint64_t v136 = v134;
      LOBYTE(v137) = v133;
      sub_241CBEE50(0, &qword_268D43B48, (uint64_t (*)(uint64_t))type metadata accessor for HKProfileType, MEMORY[0x263F8D8F0]);
      uint64_t v58 = sub_241CDB120();
      uint64_t v136 = sub_241A33FE4(v58, v59, v138);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 32) = 2080;
      LOBYTE(v136) = v44;
      uint64_t v60 = sub_241CDB120();
      uint64_t v136 = sub_241A33FE4(v60, v61, v138);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v49, v50, "[%s] Was not able to create string key for objectType: %s, profile: %s and dateRange: %s", (uint8_t *)v51, 0x2Au);
      uint64_t v62 = v135;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v62, -1, -1);
      MEMORY[0x245637F20](v51, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v125 + 8))(v124, v126);
    return v130;
  }
  uint64_t v131 = a2;
  sub_241CBEEB4(v123, (uint64_t)v30, &qword_26B038F10, MEMORY[0x263F062D0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    swift_bridgeObjectRelease();
    sub_241CBEF34((uint64_t)v30, &qword_26B038F10, MEMORY[0x263F062D0]);
LABEL_12:
    uint64_t v74 = v121;
    sub_241CDA0F0();
    uint64_t v75 = sub_241CDA190();
    os_log_type_t v76 = sub_241CDB630();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      v138[0] = v78;
      *(_DWORD *)uint64_t v77 = 136315138;
      uint64_t v136 = v120;
      swift_getMetatypeMetadata();
      uint64_t v79 = sub_241CDB120();
      uint64_t v136 = sub_241A33FE4(v79, v80, v138);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v75, v76, "[%s] Was not able to get change period value. Returning short strings.", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v78, -1, -1);
      MEMORY[0x245637F20](v77, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v125 + 8))(v74, v126);
    return v130;
  }
  uint64_t v63 = v45;
  uint64_t v64 = v122;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v122, v30, v31);
  uint64_t v65 = sub_241ABEF60(v44, a10);
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v64, v31);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v67 = v65;
  uint64_t v126 = v31;
  uint64_t v132 = v32;
  uint64_t v68 = v112;
  sub_241CBEEB4(v117, v112, &qword_26B032040, MEMORY[0x263F45718]);
  uint64_t v70 = v118;
  uint64_t v69 = v119;
  uint64_t v124 = *(char **)(v118 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v68, 1, v119) == 1)
  {
    sub_241CBEF34(v68, &qword_26B032040, MEMORY[0x263F45718]);
    uint64_t v71 = (uint64_t)v113;
    sub_241CD6960();
    uint64_t v72 = v115;
    uint64_t v73 = v114;
  }
  else
  {
    uint64_t v82 = v67;
    uint64_t v83 = v111;
    sub_241CD78E0();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v69);
    uint64_t v73 = v114;
    uint64_t v71 = (uint64_t)v113;
    uint64_t v84 = v83;
    uint64_t v67 = v82;
    uint64_t v72 = v115;
    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v113, v84, v115);
  }
  uint64_t v125 = sub_241AE50C0(v63, v47, (uint64_t)"", 0, 2, v71);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v71, v72);
  uint64_t v136 = v63;
  uint64_t v137 = v47;
  swift_bridgeObjectRetain();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  uint64_t v85 = v136;
  uint64_t v86 = v137;
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  sub_241CBEE50(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
  uint64_t v87 = swift_allocObject();
  uint64_t v88 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v87 + 16) = xmmword_241CEB730;
  uint64_t v89 = MEMORY[0x263F8D750];
  *(void *)(v87 + 56) = v88;
  *(void *)(v87 + 64) = v89;
  *(void *)(v87 + 32) = v67;
  uint64_t v90 = sub_241CDB0A0();
  uint64_t v92 = v91;
  swift_bridgeObjectRelease();
  uint64_t v136 = v85;
  uint64_t v137 = v86;
  swift_bridgeObjectRetain();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  id v93 = sub_241CBE0D8(v116, v131, v136, v137);
  uint64_t v95 = v94;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v135) {
    goto LABEL_23;
  }
  if (v134 == 2)
  {
    uint64_t v99 = v110;
    sub_241CBEEB4(v117, v110, &qword_26B032040, MEMORY[0x263F45718]);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v99, 1, v119) != 1)
    {
      swift_bridgeObjectRelease();
      unint64_t v100 = v109;
      (*(void (**)(void))(v118 + 32))();
      uint64_t v101 = swift_allocObject();
      *(_OWORD *)(v101 + 16) = xmmword_241CEC2D0;
      uint64_t v102 = v100;
      uint64_t v103 = sub_241CD78D0();
      uint64_t v105 = v104;
      uint64_t v106 = MEMORY[0x263F8D310];
      *(void *)(v101 + 56) = MEMORY[0x263F8D310];
      unint64_t v107 = sub_241A55A74();
      *(void *)(v101 + 32) = v103;
      *(void *)(v101 + 40) = v105;
      *(void *)(v101 + 96) = v106;
      *(void *)(v101 + 104) = v107;
      *(void *)(v101 + 64) = v107;
      *(void *)(v101 + 72) = v93;
      *(void *)(v101 + 80) = v95;
      *(void *)(v101 + 136) = v106;
      *(void *)(v101 + 144) = v107;
      *(void *)(v101 + 112) = v90;
      *(void *)(v101 + 120) = v92;
      sub_241CDB0A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v118 + 8))(v102, v119);
      goto LABEL_27;
    }
    (*(void (**)(char *, uint64_t))(v132 + 8))(v122, v126);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_241CBEF34(v99, &qword_26B032040, MEMORY[0x263F45718]);
    return v130;
  }
  if (v134 != 1)
  {
LABEL_23:
    (*(void (**)(char *, uint64_t))(v132 + 8))(v122, v126);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v130;
  }
  swift_bridgeObjectRelease();
  uint64_t v96 = swift_allocObject();
  *(_OWORD *)(v96 + 16) = xmmword_241CEB720;
  uint64_t v97 = MEMORY[0x263F8D310];
  *(void *)(v96 + 56) = MEMORY[0x263F8D310];
  unint64_t v98 = sub_241A55A74();
  *(void *)(v96 + 32) = v93;
  *(void *)(v96 + 40) = v95;
  *(void *)(v96 + 96) = v97;
  *(void *)(v96 + 104) = v98;
  *(void *)(v96 + 64) = v98;
  *(void *)(v96 + 72) = v90;
  *(void *)(v96 + 80) = v92;
  sub_241CDB0A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_27:
  (*(void (**)(char *, uint64_t))(v132 + 8))(v122, v126);
  return v130;
}

uint64_t sub_241CBBFF8(void *a1, void *a2)
{
  id v2 = sub_241CBE0D8(a1, a2, 0, 0);
  uint64_t v4 = v3;
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  sub_241CBEE50(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_241CEB730;
  *(void *)(v5 + 56) = MEMORY[0x263F8D310];
  *(void *)(v5 + 64) = sub_241A55A74();
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v4;
  sub_241CDB0A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_241CD69E0();
}

uint64_t sub_241CBC1C0(void *a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v12 = sub_241CBC3B4(a1, a4);
  if (!v13) {
    return 0;
  }
  uint64_t v14 = v12;
  sub_241CBD31C(a2, a3 & 1);
  if (v15)
  {
    sub_241CBD600(a4);
    if (v16)
    {
      if (a5 == 4)
      {
        if (a7) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
      if (a5 == 5)
      {
        if (a7)
        {
LABEL_7:
          sub_241CBECF0();
LABEL_13:
          sub_241CDB180();
          sub_241CDB180();
          swift_bridgeObjectRelease();
          sub_241CDB180();
          sub_241CDB180();
          swift_bridgeObjectRelease();
          sub_241CDB180();
          sub_241CDB180();
          swift_bridgeObjectRelease();
          sub_241CDB180();
          sub_241CDB180();
          swift_bridgeObjectRelease();
          return v14;
        }
LABEL_12:
        sub_241CDC0D0();
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_241CBC3B4(void *a1, uint64_t a2)
{
  v89[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = sub_241CDA1A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(a1, sel_identifier);
  uint64_t v10 = sub_241CDB0D0();
  uint64_t v12 = v11;

  if (sub_241CDB0D0() == v10 && v13 == v12)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_241CD98D0();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(a2, 1, v20) == 1) {
      return 0x455F455649544341;
    }
    id v21 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *(void *)(v2 + 16));
    id v22 = objc_msgSend(v21, sel_preferredUnitForType_, a1);

    sub_241A313AC(0, qword_26B038448);
    uint64_t v23 = sub_241CDB090();
    uint64_t v24 = self;
    id v25 = objc_msgSend(v24, sel_unitFromString_, v23);

    LOBYTE(v23) = sub_241CDBB60();
    if (v23)
    {

      return 0xD000000000000012;
    }
    else
    {
      uint64_t v26 = (void *)sub_241CDB090();
      id v27 = objc_msgSend(v24, sel_unitFromString_, v26);

      char v28 = sub_241CDBB60();
      if (v28) {
        return 0xD000000000000010;
      }
      else {
        return 0xD000000000000011;
      }
    }
  }
  uint64_t v87 = v6;
  char v15 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_14;
  }
  if (sub_241CDB0D0() == v10 && v16 == v12)
  {
    unint64_t v19 = 0x53414D5F59444F42;
LABEL_22:
    swift_bridgeObjectRelease_n();
    return v19;
  }
  char v18 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v18)
  {
    unint64_t v19 = 0x53414D5F59444F42;
LABEL_12:
    swift_bridgeObjectRelease();
    return v19;
  }
  if (sub_241CDB0D0() == v10 && v30 == v12)
  {
    unint64_t v19 = 0x5F53544847494C46;
    goto LABEL_22;
  }
  char v31 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v31)
  {
    unint64_t v19 = 0x5F53544847494C46;
    goto LABEL_12;
  }
  if (sub_241CDB0D0() == v10 && v32 == v12)
  {
LABEL_73:
    unint64_t v19 = 0xD000000000000010;
    swift_bridgeObjectRelease_n();
    return v19;
  }
  char v33 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v33) {
    goto LABEL_75;
  }
  if (sub_241CDB0D0() == v10 && v34 == v12) {
    goto LABEL_73;
  }
  char v35 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_75;
  }
  if (sub_241CDB0D0() == v10 && v36 == v12)
  {
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  char v37 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v37)
  {
LABEL_41:
    unint64_t v19 = 0x4F485F444E415453;
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void **)(v2 + 16);
    v89[0] = 0;
    id v39 = objc_msgSend(v38, sel_wheelchairUseWithError_, v89);
    if (v39)
    {
      uint64_t v40 = v39;
      id v41 = v89[0];
      id v42 = objc_msgSend(v40, sel_wheelchairUse);

      if (v42 == (id)2) {
        return 0x554F485F4C4C4F52;
      }
    }
    else
    {
      id v43 = v89[0];
      char v44 = (void *)sub_241CD6A40();

      swift_willThrow();
    }
    return v19;
  }
  if (sub_241CDB0D0() == v10 && v45 == v12)
  {
    unint64_t v19 = 0x4C475F444F4F4C42;
    goto LABEL_22;
  }
  char v46 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v46)
  {
    unint64_t v19 = 0x4C475F444F4F4C42;
    goto LABEL_12;
  }
  if (sub_241CDB0D0() == v10 && v47 == v12)
  {
    swift_bridgeObjectRelease_n();
    return 0xD000000000000011;
  }
  char v48 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v48)
  {
    swift_bridgeObjectRelease();
    return 0xD000000000000011;
  }
  if (sub_241CDB0D0() == v10 && v49 == v12) {
    goto LABEL_73;
  }
  char v50 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v50) {
    goto LABEL_75;
  }
  if (sub_241CDB0D0() == v10 && v51 == v12)
  {
    unint64_t v19 = 0x5F4C5546444E494DLL;
    goto LABEL_22;
  }
  char v52 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v52)
  {
    unint64_t v19 = 0x5F4C5546444E494DLL;
    goto LABEL_12;
  }
  if (sub_241CDB0D0() == v10 && v53 == v12)
  {
    swift_bridgeObjectRelease_n();
    return 0xD000000000000011;
  }
  char v54 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v54)
  {
    swift_bridgeObjectRelease();
    return 0xD000000000000011;
  }
  if (sub_241CDB0D0() == v10 && v55 == v12) {
    goto LABEL_73;
  }
  char v56 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v56)
  {
LABEL_75:
    unint64_t v19 = 0xD000000000000010;
    swift_bridgeObjectRelease();
    return v19;
  }
  if (sub_241CDB0D0() == v10 && v57 == v12)
  {
    swift_bridgeObjectRelease_n();
    return 0xD000000000000012;
  }
  char v58 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v58)
  {
    swift_bridgeObjectRelease();
    return 0xD000000000000012;
  }
  if (sub_241CDB0D0() == v10 && v59 == v12)
  {
    unint64_t v19 = 0x4E415F5045454C53;
    goto LABEL_22;
  }
  char v60 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v60)
  {
    unint64_t v19 = 0x4E415F5045454C53;
    goto LABEL_12;
  }
  if (sub_241CDB0D0() == v10 && v61 == v12)
  {
    unint64_t v19 = 0x554F435F50455453;
    goto LABEL_22;
  }
  char v62 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v62)
  {
    unint64_t v19 = 0x554F435F50455453;
    goto LABEL_12;
  }
  if (sub_241CDB0D0() == v10 && v63 == v12)
  {
    unint64_t v19 = 0x534548535550;
    swift_bridgeObjectRelease_n();
    return v19;
  }
  char v64 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v64)
  {
    unint64_t v19 = 0x534548535550;
    swift_bridgeObjectRelease();
    return v19;
  }
  if (sub_241CDB0D0() == v10 && v65 == v12)
  {
    unint64_t v19 = 0x465F4F4944524143;
    goto LABEL_22;
  }
  char v66 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v66)
  {
    unint64_t v19 = 0x465F4F4944524143;
    goto LABEL_12;
  }
  if (sub_241CDB0D0() == v10 && v67 == v12)
  {
    unint64_t v19 = 0x525F4F4944524143;
    goto LABEL_22;
  }
  char v68 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v68)
  {
    unint64_t v19 = 0x525F4F4944524143;
    goto LABEL_12;
  }
  if (sub_241CDB0D0() == v10 && v69 == v12)
  {
    swift_bridgeObjectRelease_n();
    return 0xD000000000000012;
  }
  char v70 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v70)
  {
    swift_bridgeObjectRelease();
    return 0xD000000000000012;
  }
  if (sub_241CDB0D0() == v10 && v71 == v12)
  {
    swift_bridgeObjectRelease_n();
    return 0x5354554F4B524F57;
  }
  char v72 = sub_241CDC100();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v72) {
    return 0x5354554F4B524F57;
  }
  sub_241CDA0F0();
  id v73 = a1;
  uint64_t v74 = sub_241CDA190();
  os_log_type_t v75 = sub_241CDB650();
  int v86 = v75;
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = swift_slowAlloc();
    uint64_t v85 = (void *)swift_slowAlloc();
    v89[0] = v85;
    *(_DWORD *)uint64_t v76 = 136315395;
    uint64_t v77 = sub_241CDC270();
    uint64_t v88 = sub_241A33FE4(v77, v78, (uint64_t *)v89);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 12) = 2081;
    id v79 = objc_msgSend(v73, sel_identifier);
    uint64_t v80 = sub_241CDB0D0();
    unint64_t v82 = v81;

    uint64_t v88 = sub_241A33FE4(v80, v82, (uint64_t *)v89);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v74, (os_log_type_t)v86, "%s Unexpected object type %{private}s for trend string", (uint8_t *)v76, 0x16u);
    uint64_t v83 = v85;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v83, -1, -1);
    MEMORY[0x245637F20](v76, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v87 + 8))(v8, v5);
  return 0;
}

uint64_t sub_241CBD31C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    if (a1 == 1) {
      return 0x505F454C474E4953;
    }
    if (a1 == 2) {
      return 0x474E4952414853;
    }
  }
  sub_241CDA0F0();
  id v9 = sub_241CDA190();
  os_log_type_t v10 = sub_241CDB650();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v20 = v17;
    *(_DWORD *)uint64_t v11 = 136315395;
    uint64_t v12 = sub_241CDC270();
    uint64_t v18 = sub_241A33FE4(v12, v13, &v20);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2081;
    uint64_t v18 = a1;
    char v19 = a2 & 1;
    sub_241CBEE50(0, &qword_268D43B48, (uint64_t (*)(uint64_t))type metadata accessor for HKProfileType, MEMORY[0x263F8D8F0]);
    uint64_t v14 = sub_241CDB120();
    uint64_t v18 = sub_241A33FE4(v14, v15, &v20);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241A23000, v9, v10, "%s Unexpected profile type %{private}s for trend string", (uint8_t *)v11, 0x16u);
    uint64_t v16 = v17;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v16, -1, -1);
    MEMORY[0x245637F20](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

uint64_t sub_241CBD600(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_241CDA1A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F46BE0];
  sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v26 - v13;
  sub_241CBEEB4(a1, (uint64_t)v26 - v13, &qword_26B0321C0, v8);
  uint64_t v15 = sub_241CD98D0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v17 = 0x554C434E4F434E49;
  }
  else
  {
    uint64_t v17 = 0x4953414552434544;
    sub_241CBEEB4((uint64_t)v14, (uint64_t)v12, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    int v18 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v12, v15);
    if (v18 == *MEMORY[0x263F46BD8])
    {
      uint64_t v17 = 0x4953414552434E49;
    }
    else if (v18 != *MEMORY[0x263F46BD0])
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v15);
      sub_241CDA0F0();
      char v19 = sub_241CDA190();
      os_log_type_t v20 = sub_241CDB650();
      if (os_log_type_enabled(v19, v20))
      {
        id v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        *(_DWORD *)id v21 = 136315138;
        v26[1] = v21 + 4;
        uint64_t v27 = v22;
        uint64_t v28 = v3;
        swift_getMetatypeMetadata();
        uint64_t v23 = sub_241CDB120();
        uint64_t v28 = sub_241A33FE4(v23, v24, &v27);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241A23000, v19, v20, "[%s]: Unknown changeType.", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x245637F20](v22, -1, -1);
        MEMORY[0x245637F20](v21, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v17 = 0;
    }
  }
  sub_241CBEF34((uint64_t)v14, &qword_26B0321C0, MEMORY[0x263F46BE0]);
  return v17;
}

unint64_t sub_241CBDA14()
{
  uint64_t v1 = sub_241CD6D00();
  uint64_t v35 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
  uint64_t v36 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CC0A68(v0, (uint64_t)v16);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_241CC0ACC((uint64_t)v16, (uint64_t)v13);
    unint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_241CDBE00();
    swift_bridgeObjectRelease();
    unint64_t v39 = 0xD00000000000002DLL;
    unint64_t v40 = 0x8000000241CE5970;
    id v21 = (uint64_t (*)(uint64_t))MEMORY[0x263F46BE0];
    sub_241CBEEB4((uint64_t)v13, (uint64_t)v11, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    sub_241CDB120();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    unint64_t v20 = v39;
    uint64_t v22 = (uint64_t)v13;
    uint64_t v23 = v21;
LABEL_6:
    sub_241CBEF34(v22, &qword_26B0321C0, v23);
    return v20;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v24 = *(void *)v16;
    char v25 = v16[8];
    uint64_t v26 = (void *)*((void *)v16 + 2);
    char v27 = v16[24];
    sub_241CBEFF0();
    sub_241CC0ACC((uint64_t)&v16[*(int *)(v28 + 80)], (uint64_t)v13);
    unint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    sub_241CDBE00();
    sub_241CDB180();
    uint64_t v37 = v24;
    char v38 = v25;
    sub_241CBEE50(0, &qword_268D43B48, (uint64_t (*)(uint64_t))type metadata accessor for HKProfileType, MEMORY[0x263F8D8F0]);
    sub_241CDB120();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    id v29 = v26;
    id v30 = objc_msgSend(v29, sel_description);
    sub_241CDB0D0();

    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    LOBYTE(v37) = v27;
    sub_241CDB120();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();
    char v31 = (uint64_t (*)(uint64_t))MEMORY[0x263F46BE0];
    sub_241CBEEB4((uint64_t)v13, (uint64_t)v11, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    sub_241CDB120();
    sub_241CDB180();
    swift_bridgeObjectRelease();
    sub_241CDB180();

    unint64_t v20 = v39;
    uint64_t v22 = (uint64_t)v13;
    uint64_t v23 = v31;
    goto LABEL_6;
  }
  int v18 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v34 = v4;
  v18(v7, v16, v4);
  unint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  sub_241CDBE00();
  sub_241CDB180();
  sub_241CD67E0();
  sub_241CC0B60(&qword_26B02E8E0, MEMORY[0x263F07490]);
  sub_241CDC0D0();
  char v19 = *(void (**)(char *, uint64_t))(v35 + 8);
  v19(v3, v1);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  sub_241CD67B0();
  sub_241CDC0D0();
  v19(v3, v1);
  sub_241CDB180();
  swift_bridgeObjectRelease();
  unint64_t v20 = v39;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v34);
  return v20;
}

uint64_t sub_241CBE074()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SummaryTrendFeedItemStringBuilder()
{
  return self;
}

id sub_241CBE0D8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *(void *)(v4 + 16));
  id v9 = objc_msgSend(v8, sel_profile);
  id v10 = objc_msgSend(v9, sel_displayTypeController);

  objc_msgSend(a1, sel__value);
  uint64_t v11 = (void *)sub_241CDB330();
  if (!v10) {
    goto LABEL_7;
  }
  id v12 = objc_msgSend(v10, sel_displayTypeForObjectType_, a2);
  if (!v12)
  {

LABEL_7:
    return 0;
  }
  uint64_t v13 = v12;
  uint64_t v78 = a4;
  id v79 = v11;
  id v14 = objc_msgSend(a2, sel_identifier);
  id v15 = (id)sub_241CDB0D0();
  uint64_t v17 = v16;

  if ((id)sub_241CDB0D0() == v15 && v18 == v17) {
    goto LABEL_5;
  }
  char v20 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_9;
  }
  if ((id)sub_241CDB0D0() == v15 && v26 == v17) {
    goto LABEL_5;
  }
  char v27 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_9;
  }
  if ((id)sub_241CDB0D0() == v15 && v28 == v17) {
    goto LABEL_5;
  }
  char v29 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v29) {
    goto LABEL_9;
  }
  if ((id)sub_241CDB0D0() == v15 && v30 == v17) {
    goto LABEL_5;
  }
  char v31 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_9;
  }
  if ((id)sub_241CDB0D0() == v15 && v32 == v17) {
    goto LABEL_5;
  }
  char v33 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v33) {
    goto LABEL_9;
  }
  if ((id)sub_241CDB0D0() == v15 && v34 == v17) {
    goto LABEL_5;
  }
  char v35 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_9;
  }
  if ((id)sub_241CDB0D0() == v15 && v36 == v17) {
    goto LABEL_5;
  }
  char v37 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v37) {
    goto LABEL_9;
  }
  if ((id)sub_241CDB0D0() == v15 && v38 == v17) {
    goto LABEL_5;
  }
  char v39 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v39) {
    goto LABEL_9;
  }
  if ((id)sub_241CDB0D0() == v15 && v40 == v17)
  {
LABEL_5:
    swift_bridgeObjectRelease();
LABEL_9:
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(a1, sel__unit);
    id v15 = objc_msgSend(v13, sel_hk_valueFormatterForUnit_, v21);

    uint64_t v22 = v79;
    id v23 = objc_msgSend(v15, sel_stringFromValue_displayType_unitController_, v79, v13, *(void *)(v4 + 24));
    if (v23)
    {
      uint64_t v24 = v23;
      sub_241CDB0D0();

LABEL_11:
      sub_241A3DE4C();
      uint64_t v19 = sub_241CDBC20();
      swift_bridgeObjectRelease();

      return (id)v19;
    }
    __break(1u);
    goto LABEL_57;
  }
  char v41 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if (v41) {
    goto LABEL_9;
  }
  if ((id)sub_241CDB0D0() == v15 && v42 == v17) {
    goto LABEL_39;
  }
  char v43 = sub_241CDC100();
  swift_bridgeObjectRelease();
  if ((v43 & 1) == 0)
  {
    if ((id)sub_241CDB0D0() == v15 && v44 == v17)
    {
LABEL_39:
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
    char v45 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if ((v45 & 1) == 0)
    {
LABEL_57:
      if ((id)sub_241CDB0D0() == v15 && v58 == v17)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v59 = sub_241CDC100();
        swift_bridgeObjectRelease();
        if ((v59 & 1) == 0) {
          goto LABEL_69;
        }
      }
      swift_bridgeObjectRelease();
      if (v78)
      {
        if (qword_26B038428 == -1) {
          goto LABEL_63;
        }
        goto LABEL_83;
      }
      id v62 = objc_msgSend(a1, sel__unit);
      id v15 = objc_msgSend(v13, sel_hk_valueFormatterForUnit_, v62);

      id result = objc_msgSend(v15, sel_stringFromValue_displayType_unitController_, v79, v13, *(void *)(v4 + 24));
      if (!result)
      {
        __break(1u);
LABEL_69:
        if ((id)sub_241CDB0D0() == v15 && v63 == v17)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_73;
        }
        char v64 = sub_241CDC100();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v64)
        {
LABEL_73:
          id result = objc_msgSend(a1, sel__value);
          double v66 = v65 / 3600.0;
          if ((~*(void *)&v66 & 0x7FF0000000000000) != 0)
          {
            if (v66 > -9.22337204e18)
            {
              if (v66 < 9.22337204e18)
              {
                double v67 = (double)(uint64_t)v66;
                id v68 = objc_msgSend(self, sel_countUnit);
                id v69 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v68, v67);

                id v70 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46928]), sel_init);
                objc_msgSend(v70, sel_setOmitUnit_, 1);
                id v71 = objc_msgSend(v69, sel_localizedStringForType_parameters_, a2, v70);
                sub_241CDB0D0();

                goto LABEL_55;
              }
              goto LABEL_89;
            }
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
            goto LABEL_90;
          }
LABEL_87:
          __break(1u);
          goto LABEL_88;
        }
        uint64_t v72 = *(void *)(v4 + 24);
        id v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46A48]), sel_initWithDisplayType_unitPreferenceController_forceUnitlessForAllTypes_, v13, v72, 1);
        id v73 = objc_msgSend(v57, sel_stringFromNumber_displayType_unitController_, v79, v13, v72);
        if (v73)
        {
          uint64_t v74 = v73;
          sub_241CDB0D0();

          goto LABEL_55;
        }
        sub_241CBEE50(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
        uint64_t v75 = swift_allocObject();
        *(_OWORD *)(v75 + 16) = xmmword_241CEB730;
        objc_msgSend(a1, sel__value);
        uint64_t v76 = MEMORY[0x263F8D5B8];
        *(void *)(v75 + 56) = MEMORY[0x263F8D538];
        *(void *)(v75 + 64) = v76;
        *(void *)(v75 + 32) = v77;
        sub_241CDB100();
LABEL_54:

        goto LABEL_55;
      }
LABEL_53:
      id v57 = result;
      sub_241CDB0D0();

      goto LABEL_54;
    }
  }
LABEL_44:
  swift_bridgeObjectRelease();
  if (v78)
  {
    if (qword_26B038428 != -1) {
      swift_once();
    }
    sub_241CD69E0();
    id v46 = objc_msgSend(v13, sel_presentation, 0xE000000000000000);
    id v47 = objc_msgSend(a1, sel__unit);
    objc_msgSend(a1, sel_doubleValueForUnit_, v47);
    double v49 = v48;

    objc_msgSend(v46, sel_adjustedDoubleForDaemonDouble_, v49);
    double v51 = v50;

    if ((~*(void *)&v51 & 0x7FF0000000000000) != 0)
    {
      if (v51 > -9.22337204e18)
      {
        if (v51 < 9.22337204e18)
        {
          uint64_t v52 = (uint64_t)v51;
LABEL_51:
          sub_241CBEE50(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
          uint64_t v53 = swift_allocObject();
          uint64_t v54 = MEMORY[0x263F8D6C8];
          *(_OWORD *)(v53 + 16) = xmmword_241CEB730;
          uint64_t v55 = MEMORY[0x263F8D750];
          *(void *)(v53 + 56) = v54;
          *(void *)(v53 + 64) = v55;
          *(void *)(v53 + 32) = v52;
          sub_241CDB0A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_55:
          uint64_t v22 = v79;
          goto LABEL_11;
        }
        goto LABEL_82;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    swift_once();
LABEL_63:
    sub_241CD69E0();
    id result = objc_msgSend(a1, sel__value, 0xE000000000000000);
    double v61 = round(v60 / 60.0);
    if ((~*(void *)&v61 & 0x7FF0000000000000) != 0)
    {
      if (v61 > -9.22337204e18)
      {
        if (v61 < 9.22337204e18)
        {
          uint64_t v52 = (uint64_t)v61;
          goto LABEL_51;
        }
        goto LABEL_86;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  id v56 = objc_msgSend(a1, sel__unit);
  id v15 = objc_msgSend(v13, sel_hk_valueFormatterForUnit_, v56);

  id result = objc_msgSend(v15, sel_stringFromValue_displayType_unitController_, v79, v13, *(void *)(v4 + 24));
  if (result) {
    goto LABEL_53;
  }
LABEL_90:
  __break(1u);
  return result;
}

uint64_t sub_241CBECF0()
{
  uint64_t v0 = sub_241CD6D00();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD6CF0();
  sub_241CD6B00();
  double v5 = v4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  double v7 = v5 / 86400.0;
  if ((~COERCE__INT64(v5 / 86400.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 9.22337204e18)
  {
    v8[1] = (uint64_t)v7 % 3 + 1;
    return sub_241CDC0D0();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_241CBEE50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241CBEEB4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241CBEE50(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241CBEF34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241CBEE50(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure()
{
  uint64_t result = qword_268D43B60;
  if (!qword_268D43B60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241CBEFF0()
{
  if (!qword_268D43B58)
  {
    MEMORY[0x270FA5388](0);
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
    sub_241CBEE50(255, &qword_268D43B48, (uint64_t (*)(uint64_t))type metadata accessor for HKProfileType, MEMORY[0x263F8D8F0]);
    sub_241A313AC(255, (unint64_t *)&qword_26B038440);
    sub_241CBEE50(255, &qword_26B0321C0, MEMORY[0x263F46BE0], v0);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_268D43B58);
    }
  }
}

char *sub_241CBF164(uint64_t a1, uint64_t a2, char a3)
{
  sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = sub_241ABECF8(a3);
  if (!v13)
  {
    type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure();
    sub_241CC0B60(&qword_268D43B50, (void (*)(uint64_t))type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure);
    swift_allocError();
    uint64_t v19 = v18;
    uint64_t v20 = sub_241CD6810();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, a1, v20);
LABEL_13:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v11;
  }
  uint64_t v14 = v12;
  uint64_t v15 = v13;
  sub_241CBEEB4(a2, (uint64_t)v11, &qword_26B0321C0, MEMORY[0x263F46BE0]);
  uint64_t v16 = sub_241CD98D0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    char v27 = (uint64_t (*)(uint64_t))MEMORY[0x263F46BE0];
    sub_241CBEF34((uint64_t)v11, &qword_26B0321C0, MEMORY[0x263F46BE0]);
    uint64_t v11 = (char *)type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure();
    sub_241CC0B60(&qword_268D43B50, (void (*)(uint64_t))type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure);
    swift_allocError();
    sub_241CBEEB4(a2, v28, &qword_26B0321C0, v27);
    goto LABEL_13;
  }
  sub_241CBEEB4((uint64_t)v11, (uint64_t)v9, &qword_26B0321C0, MEMORY[0x263F46BE0]);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v9, v16);
  if (v21 == *MEMORY[0x263F46BD8])
  {
    uint64_t v33 = v14;
    if (qword_26B038428 == -1) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
  if (v21 != *MEMORY[0x263F46BD0])
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
    goto LABEL_12;
  }
  uint64_t v33 = v14;
  if (qword_26B038428 != -1) {
LABEL_15:
  }
    swift_once();
LABEL_10:
  uint64_t v31 = sub_241CD69E0();
  uint64_t v32 = v22;
  sub_241CD69E0();
  sub_241CBEF34((uint64_t)v11, &qword_26B0321C0, MEMORY[0x263F46BE0]);
  sub_241CBEE50(0, (unint64_t *)&qword_26B034FE0, (uint64_t (*)(uint64_t))sub_241A9FD94, MEMORY[0x263F8E0F8]);
  uint64_t v23 = swift_allocObject();
  long long v30 = xmmword_241CEB730;
  *(_OWORD *)(v23 + 16) = xmmword_241CEB730;
  *(void *)(v23 + 56) = MEMORY[0x263F8D310];
  unint64_t v24 = sub_241A55A74();
  *(void *)(v23 + 64) = v24;
  uint64_t v25 = v33;
  *(void *)(v23 + 32) = v33;
  *(void *)(v23 + 40) = v15;
  swift_bridgeObjectRetain();
  uint64_t v11 = (char *)sub_241CDB0A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v30;
  *(void *)(v26 + 56) = MEMORY[0x263F8D310];
  *(void *)(v26 + 64) = v24;
  *(void *)(v26 + 32) = v25;
  *(void *)(v26 + 40) = v15;
  sub_241CDB0A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_241CBF7B4(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v9 = (void *)*((void *)a2 + 2);
      *((void *)a1 + 2) = v9;
      a1[24] = a2[24];
      sub_241CBEFF0();
      uint64_t v11 = *(int *)(v10 + 80);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_241CD98D0();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      id v17 = v9;
      if (v16(v13, 1, v14))
      {
        sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
        memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_241CD6810();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      uint64_t v19 = sub_241CD98D0();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
      {
        sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(a1, a2, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241CBFB14(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {

    sub_241CBEFF0();
    a1 += *(int *)(v7 + 80);
    uint64_t v3 = sub_241CD98D0();
    uint64_t v9 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v3);
    if (result) {
      return result;
    }
  }
  else
  {
    if (result == 1)
    {
      uint64_t v8 = sub_241CD6810();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      uint64_t v6 = v8;
      uint64_t v5 = a1;
      goto LABEL_9;
    }
    if (result) {
      return result;
    }
    uint64_t v3 = sub_241CD98D0();
    uint64_t v9 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v3);
    if (result) {
      return result;
    }
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
  uint64_t v5 = a1;
  uint64_t v6 = v3;
LABEL_9:

  return v4(v5, v6);
}

char *sub_241CBFCA0(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    uint64_t v6 = (void *)*((void *)a2 + 2);
    *((void *)a1 + 2) = v6;
    a1[24] = a2[24];
    sub_241CBEFF0();
    uint64_t v8 = *(int *)(v7 + 80);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_241CD98D0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    id v14 = v6;
    if (v13(v10, 1, v11))
    {
      sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_241CD6810();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  }
  else
  {
    uint64_t v16 = sub_241CD98D0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
    {
      sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(a1, a2, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_241CBFFB0(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_241CC02D0((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v6 = *(void *)a2;
      a1[8] = a2[8];
      *(void *)a1 = v6;
      uint64_t v7 = (void *)*((void *)a2 + 2);
      *((void *)a1 + 2) = v7;
      a1[24] = a2[24];
      sub_241CBEFF0();
      uint64_t v9 = *(int *)(v8 + 80);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_241CD98D0();
      uint64_t v13 = *(void *)(v12 - 8);
      id v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      id v15 = v7;
      if (v14(v11, 1, v12))
      {
        sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_241CD6810();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      uint64_t v17 = sub_241CD98D0();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
      {
        sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(a1, a2, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241CC02D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_241CC032C(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    *((void *)a1 + 2) = *((void *)a2 + 2);
    a1[24] = a2[24];
    sub_241CBEFF0();
    uint64_t v7 = *(int *)(v6 + 80);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_241CD98D0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_241CD6810();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  }
  else
  {
    uint64_t v13 = sub_241CD98D0();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
    {
      sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_241CC0628(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_241CC02D0((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      *((void *)a1 + 2) = *((void *)a2 + 2);
      a1[24] = a2[24];
      sub_241CBEFF0();
      uint64_t v7 = *(int *)(v6 + 80);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_241CD98D0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_241CD6810();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    }
    else
    {
      uint64_t v13 = sub_241CD98D0();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_241CC0934()
{
  sub_241CBEE50(319, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
  if (v1 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v0 - 8) + 64;
    uint64_t v2 = sub_241CD6810();
    if (v3 <= 0x3F)
    {
      uint64_t v6 = *(void *)(v2 - 8) + 64;
      swift_getTupleTypeLayout();
      uint64_t v7 = &v4;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t sub_241CC0A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SummaryTrendFeedItemStringBuilder.Failure();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241CC0ACC(uint64_t a1, uint64_t a2)
{
  sub_241CBEE50(0, &qword_26B0321C0, MEMORY[0x263F46BE0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241CC0B60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241CC0BA8(uint64_t a1, uint64_t a2)
{
  sub_241A3DE4C();
  char v4 = sub_241CDBC30();
  if (v4 & 1) != 0 || (sub_241CDBC30()) {
    return (v4 & 1) == 0;
  }
  sub_241CC0CB8();
  swift_allocError();
  *uint64_t v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

unint64_t sub_241CC0CB8()
{
  unint64_t result = qword_268D43B70;
  if (!qword_268D43B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43B70);
  }
  return result;
}

ValueMetadata *type metadata accessor for SummariesNotificationRouter.ResolutionError()
{
  return &type metadata for SummariesNotificationRouter.ResolutionError;
}

void **sub_241CC0D1C(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  char v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void **)((char *)a2 + v8);
    *(void *)uint64_t v9 = v11;
    void v9[8] = *((unsigned char *)a2 + v8 + 8);
    uint64_t v12 = *(void **)((char *)a2 + v8 + 16);
    *((void *)v9 + 2) = v12;
    uint64_t v13 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v14 = *(int *)(v13 + 28);
    char v27 = &v10[v14];
    uint64_t v28 = &v9[v14];
    uint64_t v15 = sub_241CD7DE0();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    uint64_t v16 = v4;
    id v17 = v11;
    id v18 = v12;
    v26(v28, v27, v15);
    uint64_t v19 = *(int *)(v13 + 32);
    uint64_t v20 = *(void **)&v10[v19];
    *(void *)&v9[v19] = v20;
    uint64_t v21 = *(int *)(a3 + 24);
    uint64_t v22 = *(void **)((char *)a2 + v21);
    *(void **)((char *)v7 + v21) = v22;
    id v23 = v20;
    id v24 = v22;
  }
  return v7;
}

void sub_241CC0E70(id *a1, uint64_t a2)
{
  char v4 = (id *)((char *)a1 + *(int *)(a2 + 20));
  uint64_t v5 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v6 = (char *)v4 + *(int *)(v5 + 28);
  uint64_t v7 = sub_241CD7DE0();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  uint64_t v8 = *(id *)((char *)a1 + *(int *)(a2 + 24));
}

void **sub_241CC0F34(void **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void **)((char *)a2 + v6);
  *(void *)uint64_t v7 = v9;
  v7[8] = *((unsigned char *)a2 + v6 + 8);
  uint64_t v10 = *(void **)((char *)a2 + v6 + 16);
  *((void *)v7 + 2) = v10;
  uint64_t v11 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v12 = *(int *)(v11 + 28);
  uint64_t v25 = &v8[v12];
  uint64_t v26 = &v7[v12];
  uint64_t v13 = sub_241CD7DE0();
  id v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  id v14 = v5;
  id v15 = v9;
  id v16 = v10;
  v24(v26, v25, v13);
  uint64_t v17 = *(int *)(v11 + 32);
  id v18 = *(void **)&v8[v17];
  *(void *)&v7[v17] = v18;
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = *(void **)((char *)a2 + v19);
  *(void **)((char *)a1 + v19) = v20;
  id v21 = v18;
  id v22 = v20;
  return a1;
}

void **sub_241CC1044(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = *(void **)((char *)a1 + v9);
  uint64_t v13 = *(void **)((char *)a2 + v9);
  *(void *)uint64_t v10 = v13;
  id v14 = v13;

  v10[8] = v11[8];
  id v15 = (void *)*((void *)v11 + 2);
  id v16 = (void *)*((void *)v10 + 2);
  *((void *)v10 + 2) = v15;
  id v17 = v15;

  uint64_t v18 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v19 = *(int *)(v18 + 28);
  uint64_t v20 = &v10[v19];
  id v21 = &v11[v19];
  uint64_t v22 = sub_241CD7DE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = *(int *)(v18 + 32);
  id v24 = *(void **)&v10[v23];
  uint64_t v25 = *(void **)&v11[v23];
  *(void *)&v10[v23] = v25;
  id v26 = v25;

  uint64_t v27 = *(int *)(a3 + 24);
  uint64_t v28 = *(void **)((char *)a2 + v27);
  char v29 = *(void **)((char *)a1 + v27);
  *(void **)((char *)a1 + v27) = v28;
  id v30 = v28;

  return a1;
}

void *sub_241CC115C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  *(void *)uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[8] = *((unsigned char *)a2 + v6 + 8);
  *((void *)v7 + 2) = *(void *)((char *)a2 + v6 + 16);
  uint64_t v9 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v10 = *(int *)(v9 + 28);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_241CD7DE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)&v7[*(int *)(v9 + 32)] = *(void *)&v8[*(int *)(v9 + 32)];
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void **sub_241CC1238(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void **)((char *)a1 + v7);
  *(void *)id v8 = *(void *)v9;

  v8[8] = v9[8];
  uint64_t v11 = (void *)*((void *)v8 + 2);
  *((void *)v8 + 2) = *((void *)v9 + 2);

  uint64_t v12 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  uint64_t v13 = *(int *)(v12 + 28);
  id v14 = &v8[v13];
  id v15 = &v9[v13];
  uint64_t v16 = sub_241CD7DE0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = *(int *)(v12 + 32);
  uint64_t v18 = *(void **)&v8[v17];
  *(void *)&v8[v17] = *(void *)&v9[v17];

  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = *(void **)((char *)a1 + v19);
  *(void **)((char *)a1 + v19) = *(void **)((char *)a2 + v19);

  return a1;
}

uint64_t sub_241CC133C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241CC1350);
}

uint64_t sub_241CC1350(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_241CC1400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241CC1414);
}

void *sub_241CC1414(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider()
{
  uint64_t result = qword_26B031D18;
  if (!qword_26B031D18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241CC1508()
{
  uint64_t result = type metadata accessor for SnidgetFeedItemGeneratorRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241CC15A8()
{
  return sub_241CC16AC((unint64_t *)&qword_26B0320F0);
}

void sub_241CC15DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241CD9000();
    uint64_t v7 = sub_241CC549C(&qword_26B032190, MEMORY[0x263F44680]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241CC1678()
{
  return sub_241CC16AC((unint64_t *)&qword_26B0320E0);
}

uint64_t sub_241CC16AC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241CC15DC(255, &qword_26B0320F8, MEMORY[0x263F44138]);
    int v3 = (void (*)(uint64_t))MEMORY[0x263F44660];
    sub_241CC549C((unint64_t *)&unk_26B032180, MEMORY[0x263F44660]);
    sub_241CC549C(&qword_26B032178, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241CC1798(uint64_t a1)
{
  uint64_t result = sub_241CC549C(&qword_26B037E68, (void (*)(uint64_t))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_241CC17F0(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v101 = a1;
  uint64_t v95 = a2;
  uint64_t v93 = a3;
  uint64_t v4 = type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v97 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v96 = (uint64_t *)((char *)&v86 - v7);
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v98 = *(void *)(v8 - 8);
  uint64_t v99 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v100 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241CD6810();
  uint64_t v91 = *(void *)(v10 - 8);
  uint64_t v92 = v10;
  MEMORY[0x270FA5388](v10);
  int v86 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CC556C(0, &qword_26B0320B0, MEMORY[0x263F43F20]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v90 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v88 = (char *)&v86 - v15;
  sub_241CC556C(0, &qword_26B038880, MEMORY[0x263F45770]);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v86 - v20;
  sub_241CC556C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v87 = (char *)&v86 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v89 = (char *)&v86 - v28;
  uint64_t v29 = type metadata accessor for SnidgetFeedItemMetadata(0);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v86 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v94 = (char *)&v86 - v33;
  id v34 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *v3);
  if (v34)
  {
    char v35 = v34;
    id v36 = objc_msgSend(v34, sel_displayTypeForObjectType_, *(void *)((char *)v3 + *(int *)(v4 + 20) + 16));

    if (v36)
    {
      uint64_t v37 = v102;
      sub_241ADF798(v101);
      if (v37)
      {
      }
      else
      {
        uint64_t v54 = v38;
        if (v38)
        {
          uint64_t v55 = v94;
          char v64 = sub_241CC2354(v94, v38, v95);
          uint64_t v102 = (uint64_t)v36;
          sub_241CC53D4((uint64_t)&v55[*(int *)(v29 + 20)], (uint64_t)v21, &qword_26B038880, MEMORY[0x263F45770]);
          uint64_t v65 = sub_241CD7A10();
          uint64_t v66 = *(void *)(v65 - 8);
          int v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48))(v21, 1, v65);
          uint64_t v101 = v64;
          if (v67 == 1)
          {
            sub_241CC5440((uint64_t)v21, &qword_26B038880, MEMORY[0x263F45770]);
            uint64_t v68 = 1;
            uint64_t v70 = v91;
            uint64_t v69 = v92;
            uint64_t v72 = v88;
            uint64_t v71 = (uint64_t)v89;
          }
          else
          {
            uint64_t v71 = (uint64_t)v89;
            sub_241CD79E0();
            (*(void (**)(char *, uint64_t))(v66 + 8))(v21, v65);
            uint64_t v68 = 0;
            uint64_t v70 = v91;
            uint64_t v69 = v92;
            uint64_t v72 = v88;
          }
          uint64_t v73 = (uint64_t)v87;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v71, v68, 1, v69);
          sub_241CC53D4(v71, v73, &qword_26B038F10, MEMORY[0x263F062D0]);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v73, 1, v69) == 1)
          {
            uint64_t v74 = sub_241CD8610();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v72, 1, 1, v74);
          }
          else
          {
            uint64_t v75 = v86;
            (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v86, v73, v69);
            sub_241A3A9CC();
            uint64_t v77 = *(int *)(v76 + 48);
            sub_241CD67B0();
            v72[v77] = 0;
            uint64_t v78 = *MEMORY[0x263F43F18];
            uint64_t v79 = sub_241CD8610();
            uint64_t v80 = *(void *)(v79 - 8);
            (*(void (**)(char *, uint64_t, uint64_t))(v80 + 104))(v72, v78, v79);
            unint64_t v81 = v75;
            uint64_t v71 = (uint64_t)v89;
            (*(void (**)(char *, uint64_t))(v70 + 8))(v81, v69);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v72, 0, 1, v79);
          }
          uint64_t v82 = v93;
          sub_241CD89A0();
          uint64_t v83 = sub_241CD8990();

          sub_241A93F80(0);
          uint64_t v32 = v94;
          sub_241CC530C((uint64_t)v94, v82 + *(int *)(v84 + 52), type metadata accessor for SnidgetFeedItemMetadata);
          uint64_t v85 = v101;
          *(void *)uint64_t v82 = v83;
          *(void *)(v82 + 8) = v85;
          *(unsigned char *)(v82 + 16) = 1;
          sub_241CC5440(v71, &qword_26B038F10, MEMORY[0x263F062D0]);
        }
        else
        {
          uint64_t v57 = sub_241CD7A10();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v19, 1, 1, v57);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56))(v25, 1, 1, v92);
          uint64_t v58 = v95;
          swift_bridgeObjectRetain();
          sub_241B4A1A8(0, (uint64_t)v19, v58, (uint64_t)v25, v32);
          sub_241CD89A0();
          uint64_t v59 = sub_241CD8610();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v90, 1, 1, v59);
          id v60 = v36;
          uint64_t v61 = sub_241CD8990();
          sub_241A93F80(0);
          uint64_t v63 = v93;
          sub_241CC530C((uint64_t)v32, v93 + *(int *)(v62 + 52), type metadata accessor for SnidgetFeedItemMetadata);

          *(void *)uint64_t v63 = v61;
          *(void *)(v63 + 8) = 0;
          *(unsigned char *)(v63 + 16) = 1;
        }
        sub_241CC5374((uint64_t)v32, type metadata accessor for SnidgetFeedItemMetadata);
      }
    }
    else
    {
      char v39 = v100;
      sub_241CDA0F0();
      uint64_t v40 = v96;
      sub_241CC530C((uint64_t)v3, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
      uint64_t v41 = v97;
      sub_241CC530C((uint64_t)v3, v97, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
      uint64_t v42 = sub_241CDA190();
      os_log_type_t v43 = sub_241CDB650();
      int v44 = v43;
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v45 = swift_slowAlloc();
        LODWORD(v101) = v44;
        uint64_t v46 = v45;
        uint64_t v102 = swift_slowAlloc();
        uint64_t v104 = v102;
        *(_DWORD *)uint64_t v46 = 136315394;
        uint64_t v47 = sub_241AE0340(*v40, *((unsigned __int8 *)v40 + *(int *)(v4 + 20) + 8));
        uint64_t v103 = sub_241A33FE4(v47, v48, &v104);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        sub_241CC5374((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
        *(_WORD *)(v46 + 12) = 2080;
        id v49 = objc_msgSend(*(id *)(v41 + *(int *)(v4 + 20) + 16), sel_sensitiveLoggingIdentifier);
        uint64_t v50 = sub_241CDB0D0();
        unint64_t v52 = v51;

        uint64_t v103 = sub_241A33FE4(v50, v52, &v104);
        sub_241CDBBF0();
        swift_bridgeObjectRelease();
        sub_241CC5374(v41, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
        _os_log_impl(&dword_241A23000, v42, (os_log_type_t)v101, "[%s]: unable to find display type: %s", (uint8_t *)v46, 0x16u);
        uint64_t v53 = v102;
        swift_arrayDestroy();
        MEMORY[0x245637F20](v53, -1, -1);
        MEMORY[0x245637F20](v46, -1, -1);

        (*(void (**)(char *, uint64_t))(v98 + 8))(v100, v99);
      }
      else
      {
        sub_241CC5374((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
        sub_241CC5374(v41, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);

        (*(void (**)(char *, uint64_t))(v98 + 8))(v39, v99);
      }
      sub_241A41340();
      swift_allocError();
      unsigned char *v56 = 0;
      swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
}

char *sub_241CC2354(unsigned char *a1, void *a2, uint64_t a3)
{
  uint64_t v54 = a1;
  uint64_t v55 = a3;
  uint64_t v4 = sub_241CD9310();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v50 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v46 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v47 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C0B2A4();
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CC556C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v46 - v12;
  sub_241CC556C(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v46 - v15;
  if (objc_msgSend(a2, sel_hasBurdenValue))
  {
    id v17 = objc_msgSend(a2, sel_burdenValue);
    if ((objc_msgSend(a2, sel_hasLastAnalysisDayIndexRange) & 1) == 0)
    {
      if (!v17) {
        goto LABEL_20;
      }
      goto LABEL_11;
    }
  }
  else
  {
    if (!objc_msgSend(a2, sel_hasLastAnalysisDayIndexRange))
    {
LABEL_20:
      uint64_t v43 = sub_241CD7A10();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v16, 1, 1, v43);
      uint64_t v44 = sub_241CD6810();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v13, 1, 1, v44);
      uint64_t v45 = v55;
      swift_bridgeObjectRetain();
      sub_241B4A1A8(0, (uint64_t)v16, v45, (uint64_t)v13, v54);
      return 0;
    }
    id v17 = 0;
  }
  uint64_t result = (char *)objc_msgSend(a2, sel_lastAnalysisDayIndexRange);
  if (!result)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v19 = result;
  uint64_t v20 = sub_241CDB960();
  uint64_t v22 = v21;
  char v24 = v23;

  if (!v17)
  {
    if ((v24 & 1) == 0)
    {
      uint64_t v41 = v56;
      uint64_t v42 = sub_241CC2984(v54, v20, v22, v55);
      if (!v41) {
        return (char *)v42;
      }
      return v10;
    }
    goto LABEL_20;
  }
  if ((v24 & 1) == 0)
  {
    uint64_t v25 = (uint64_t)sub_241CC3760(v54, v17, v20, v22, v55);
LABEL_15:
    uint64_t v10 = (char *)v25;

    return v10;
  }
LABEL_11:
  if (!objc_msgSend(v17, sel_hasDayIndexRange)) {
    goto LABEL_16;
  }
  uint64_t result = (char *)objc_msgSend(v17, sel_dayIndexRange);
  if (result)
  {
    uint64_t v26 = result;
    uint64_t v27 = sub_241CDB960();
    uint64_t v29 = v28;
    char v31 = v30;

    if ((v31 & 1) == 0)
    {
      uint64_t v25 = sub_241CC3124(v54, v17, v27, v29, v55);
      goto LABEL_15;
    }
LABEL_16:
    sub_241CDA170();
    uint64_t v32 = v47;
    sub_241CC530C(v53, v47, (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
    unint64_t v33 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v34 = swift_allocObject();
    sub_241CC54E8(v32, v34 + v33);
    char v35 = v50;
    uint64_t v36 = v52;
    sub_241CD9270();
    uint64_t v37 = v49;
    sub_241CD92B0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v35, v36);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v37);
    uint64_t v38 = sub_241CD7A10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v16, 1, 1, v38);
    uint64_t v39 = sub_241CD6810();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v13, 1, 1, v39);
    uint64_t v40 = v55;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, (uint64_t)v16, v40, (uint64_t)v13, v54);

    return 0;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_241CC2984(unsigned char *a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v73 = a3;
  uint64_t v5 = v4;
  uint64_t v68 = a1;
  uint64_t v69 = a4;
  uint64_t v72 = a2;
  sub_241CC556C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v6 - 8);
  int v67 = (char *)&v61 - v7;
  sub_241CC556C(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v66 = (char *)&v61 - v9;
  sub_241CC556C(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v65 = (char *)&v61 - v11;
  sub_241CC556C(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  char v64 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v71 = (char *)&v61 - v15;
  uint64_t v16 = sub_241CD6810();
  uint64_t v75 = *(void *)(v16 - 8);
  uint64_t v76 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_241CD69B0();
  uint64_t v19 = *(void *)(v81 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v81);
  uint64_t v70 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v77 = (uint64_t)&v61 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v78 = (char *)&v61 - v24;
  uint64_t v25 = *v4;
  uint64_t v26 = (void **)((char *)v5 + *(int *)(type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider() + 20));
  uint64_t v27 = *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32);
  uint64_t v63 = v26;
  uint64_t v28 = *(id *)((char *)v26 + v27);
  type metadata accessor for SnidgetStringBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v25;
  char v30 = self;
  id v31 = v28;
  id v32 = v25;
  id v33 = objc_msgSend(v30, sel_sharedInstanceForHealthStore_, v32);
  *(void *)(inited + 32) = v33;
  if (!v28)
  {
    id v34 = v33;
    id v31 = objc_msgSend(v34, sel_createHKUnitPreferenceController);
  }
  *(void *)(inited + 24) = v31;
  char v35 = v18;
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  uint64_t v36 = v78;
  SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
  swift_bridgeObjectRelease();
  uint64_t v37 = (uint64_t)v5;
  sub_241CC3F60(v72, v73, v35);
  uint64_t v38 = v77;
  uint64_t v39 = v74;
  sub_241CC4584((uint64_t)v35, v77);
  if (v39)
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v35, v76);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v36, v81);
  }
  else
  {
    uint64_t v40 = v19;
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 56);
    uint64_t v42 = v40;
    uint64_t v62 = v40;
    uint64_t v73 = (char *)inited;
    uint64_t v43 = v36;
    uint64_t v44 = v81;
    v41(v71, 1, 1);
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
    v45(v70, v43, v44);
    uint64_t v46 = v64;
    v45(v64, (char *)v38, v44);
    ((void (*)(char *, void, uint64_t, uint64_t))v41)(v46, 0, 1, v44);
    uint64_t v79 = 0x5F74656764696E53;
    unint64_t v80 = 0xE800000000000000;
    id v47 = v63[2];
    id v48 = objc_msgSend(v47, sel_description);
    sub_241CDB0D0();

    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v74 = 0;
    uint64_t v49 = v65;
    sub_241CD8E50();
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_241CD8E70();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
    sub_241CD8FF0();
    swift_allocObject();
    uint64_t v37 = sub_241CD8FE0();
    uint64_t v51 = v75;
    uint64_t v52 = v76;
    uint64_t v53 = (uint64_t)v67;
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v67, v35, v76);
    uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56);
    v54(v53, 0, 1, v52);
    uint64_t v55 = v35;
    uint64_t v56 = (uint64_t)v66;
    sub_241CD7A00();
    v54(v53, 1, 1, v52);
    uint64_t v57 = v69;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(1, v56, v57, v53, v68);
    swift_release();
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
    uint64_t v59 = v81;
    v58(v77, v81);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v55, v52);
    v58((uint64_t)v78, v59);
  }
  return v37;
}

uint64_t sub_241CC3124(unsigned char *a1, void *a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v58 = a5;
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v56 = a1;
  sub_241CC556C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v59 = (char *)&v49 - v8;
  sub_241CC556C(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v57 = (char *)&v49 - v10;
  sub_241CC556C(0, &qword_26B031AD8, MEMORY[0x263F44508]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v55 = (char *)&v49 - v12;
  sub_241CC556C(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = sub_241CD6810();
  uint64_t v63 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v62 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_241CD69B0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  char v64 = (char *)&v49 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v49 - v28;
  char v30 = v67;
  sub_241CC4918(a2, (uint64_t)&v49 - v28);
  if (!v30)
  {
    uint64_t v51 = v25;
    uint64_t v52 = v16;
    int v67 = v29;
    uint64_t v53 = v19;
    uint64_t v54 = v21;
    id v31 = v62;
    sub_241CC3F60(v60, v61, v62);
    sub_241CC4584((uint64_t)v31, (uint64_t)v64);
    uint64_t v61 = 0;
    uint64_t v49 = v18;
    uint64_t v50 = v22;
    id v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    uint64_t v34 = v54;
    v33(v18, 1, 1, v54);
    char v35 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    v35(v51, v67, v34);
    uint64_t v36 = v52;
    v35(v52, v64, v34);
    v33(v36, 0, 1, v34);
    uint64_t v65 = 0x5F74656764696E53;
    unint64_t v66 = 0xE800000000000000;
    id v37 = objc_retain(*(id *)(v5
                            + *(int *)(type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider() + 20)
                            + 16));
    id v38 = objc_msgSend(v37, sel_description);
    sub_241CDB0D0();

    sub_241CDB180();
    swift_bridgeObjectRelease();
    uint64_t v39 = v55;
    sub_241CD8E50();
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_241CD8E70();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
    sub_241CD8FF0();
    swift_allocObject();
    uint64_t v5 = sub_241CD8FE0();
    uint64_t v41 = v63;
    uint64_t v42 = (uint64_t)v59;
    uint64_t v43 = v53;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v59, v31, v53);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
    v44(v42, 0, 1, v43);
    uint64_t v45 = (uint64_t)v57;
    sub_241CD7A00();
    v44(v42, 1, 1, v43);
    uint64_t v46 = v58;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(1, v45, v46, v42, v56);
    id v47 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    uint64_t v48 = v54;
    v47((uint64_t)v64, v54);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v43);
    v47((uint64_t)v67, v48);
  }
  return v5;
}

id sub_241CC3760(unsigned char *a1, void *a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v58 = a5;
  uint64_t v54 = a4;
  uint64_t v55 = a3;
  uint64_t v57 = a1;
  sub_241CC556C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v50 - v8;
  sub_241CC556C(0, &qword_26B038880, MEMORY[0x263F45770]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v50 - v11;
  uint64_t v63 = sub_241CD9310();
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider();
  uint64_t v60 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v60 + 64);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241C0B2A4();
  uint64_t v62 = v18;
  uint64_t v59 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a2;
  if (!objc_msgSend(a2, sel_hasDayIndexRange)) {
    goto LABEL_7;
  }
  uint64_t v53 = v5;
  id result = objc_msgSend(v56, sel_dayIndexRange);
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v22 = result;
  uint64_t v52 = sub_241CDB960();
  uint64_t v24 = v23;
  char v26 = v25;

  uint64_t v5 = v53;
  if (v26)
  {
LABEL_7:
    sub_241CDA170();
    sub_241CC530C(v5, (uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
    unint64_t v32 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    uint64_t v33 = swift_allocObject();
    sub_241CC54E8((uint64_t)v17, v33 + v32);
    uint64_t v34 = v63;
    sub_241CD9270();
    uint64_t v35 = v62;
    sub_241CD92B0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v14, v34);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v20, v35);
    uint64_t v36 = sub_241CD7A10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v12, 1, 1, v36);
    uint64_t v37 = sub_241CD6810();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v9, 1, 1, v37);
    uint64_t v38 = v58;
    swift_bridgeObjectRetain();
    sub_241B4A1A8(0, (uint64_t)v12, v38, (uint64_t)v9, v57);
    return 0;
  }
  if ((uint64_t)v24 < 1)
  {
    sub_241CDA170();
    sub_241CC530C(v5, (uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
    unint64_t v39 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    uint64_t v40 = swift_allocObject();
    sub_241CC54E8((uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v40 + v39);
    uint64_t v41 = v63;
    sub_241CD9270();
    uint64_t v42 = v62;
    sub_241CD92B0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v14, v41);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v20, v42);
    sub_241A41340();
    swift_allocError();
    *uint64_t v43 = 0;
    return (id)swift_willThrow();
  }
  else
  {
    uint64_t v27 = v55;
    if (v52 >= v55)
    {
      uint64_t v51 = v24;
      sub_241CDB710();
      sub_241CDA170();
      sub_241CC530C(v5, (uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
      unint64_t v44 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      uint64_t v45 = (void (**)(char *, uint64_t))(v61 + 8);
      uint64_t v46 = (void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v47 = swift_allocObject();
      sub_241CC54E8((uint64_t)v17, v47 + v44);
      uint64_t v48 = v63;
      sub_241CD9270();
      uint64_t v49 = v62;
      sub_241CD92A0();
      swift_release();
      (*v45)(v14, v48);
      (*v46)(v20, v49);
      return (id)sub_241CC3124(v57, v56, v52, v51, v58);
    }
    else
    {
      sub_241CDA170();
      sub_241CC530C(v5, (uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
      unint64_t v28 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      uint64_t v29 = swift_allocObject();
      sub_241CC54E8((uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28);
      uint64_t v30 = v63;
      sub_241CD9270();
      uint64_t v31 = v62;
      sub_241CD92A0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v14, v30);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v20, v31);
      return (id)sub_241CC2984(v57, v27, v54, v58);
    }
  }
}

void sub_241CC3F60(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X8>)
{
  char v64 = a3;
  uint64_t v65 = a2;
  sub_241CC556C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v63 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v59 = (char *)&v54 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v58 = (uint64_t)&v54 - v10;
  uint64_t v11 = sub_241CD6810();
  uint64_t v61 = *(void *)(v11 - 8);
  uint64_t v62 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v60 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v54 - v14;
  uint64_t v16 = sub_241CD6D00();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v55 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  unint64_t v66 = (char *)&v54 - v24;
  MEMORY[0x270FA5388](v23);
  char v26 = (char *)&v54 - v25;
  uint64_t v27 = sub_241CD6EE0();
  uint64_t v56 = *(void *)(v27 - 8);
  uint64_t v57 = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v30 = objc_msgSend(*(id *)(v3 + *(int *)(type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider() + 24)), sel_currentCalendar);
  sub_241CD6E50();

  uint64_t v31 = self;
  unint64_t v32 = (void *)sub_241CD6E40();
  id v33 = objc_msgSend(v31, sel_hk_dateOnDayIndex_atHour_calendar_, a1, 0, v32);

  int v67 = v26;
  sub_241CD6CB0();

  uint64_t v34 = &v65[a1];
  if (__OFADD__(a1, v65))
  {
    __break(1u);
  }
  else
  {
    uint64_t v35 = (void *)sub_241CD6E40();
    id v36 = objc_msgSend(v31, sel_hk_dateOnDayIndex_atHour_calendar_, v34, 0, v35);

    uint64_t v37 = v66;
    sub_241CD6CB0();

    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v38(v22, v67, v16);
    v38(v55, v37, v16);
    sub_241CD67C0();
    unint64_t v39 = self;
    uint64_t v65 = v15;
    uint64_t v40 = (void *)sub_241CD6790();
    uint64_t v41 = (void *)sub_241CD6E40();
    uint64_t v42 = (void *)sub_241CD6E40();
    id v43 = objc_msgSend(v39, sel_hk_julianDayDateIntervalFromOpenUpperBoundDateInterval_sourceCalendar_localCalendar_, v40, v41, v42);

    if (v43)
    {
      uint64_t v44 = (uint64_t)v59;
      sub_241CD67A0();

      uint64_t v45 = *(void (**)(char *, uint64_t))(v17 + 8);
      v45(v66, v16);
      v45(v67, v16);
      uint64_t v46 = 0;
      uint64_t v47 = (uint64_t)v63;
    }
    else
    {
      uint64_t v49 = *(void (**)(char *, uint64_t))(v17 + 8);
      v49(v66, v16);
      v49(v67, v16);
      uint64_t v46 = 1;
      uint64_t v47 = (uint64_t)v63;
      uint64_t v44 = (uint64_t)v59;
    }
    uint64_t v48 = v60;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v57);
    uint64_t v51 = v61;
    uint64_t v50 = v62;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v44, v46, 1, v62);
    uint64_t v52 = v58;
    sub_241A3AAA0(v44, v58);
    sub_241A3AAA0(v52, v47);
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
    v53(v48, v65, v50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v47, 1, v50) == 1)
    {
      v53(v64, v48, v50);
      sub_241CC5440(v47, &qword_26B038F10, MEMORY[0x263F062D0]);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
      v53(v64, (char *)v47, v50);
    }
  }
}

uint64_t sub_241CC4584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = v2;
  uint64_t v31 = a1;
  uint64_t v4 = sub_241CD6F50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241CD6EE0();
  uint64_t v30 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider();
  id v12 = objc_msgSend(*(void **)((char *)v2 + *(int *)(v11 + 24)), sel_currentCalendar, v29);
  sub_241CD6E50();

  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F087A8]), sel_init);
  sub_241CD6EB0();
  uint64_t v14 = (void *)sub_241CD6F10();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  objc_msgSend(v13, sel_setTimeZone_, v14);

  uint64_t v15 = (void *)sub_241CDB090();
  objc_msgSend(v13, sel_setDateTemplate_, v15);

  uint64_t v16 = (void *)sub_241CD6790();
  id v17 = objc_msgSend(v13, sel_stringFromDateInterval_, v16);

  if (v17)
  {
    uint64_t v31 = v8;
    sub_241CDB0D0();

    uint64_t v18 = *v3;
    uint64_t v19 = (char *)v3 + *(int *)(v11 + 20);
    uint64_t v20 = *(void **)&v19[*(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32)];
    type metadata accessor for SnidgetStringBuilder();
    swift_initStackObject();
    uint64_t v21 = self;
    id v22 = v20;
    id v23 = v18;
    id v24 = objc_msgSend(v21, sel_sharedInstanceForHealthStore_, v23);
    uint64_t v25 = v24;
    if (!v20)
    {
      id v26 = v24;
      id v22 = objc_msgSend(v26, sel_createHKUnitPreferenceController);
    }
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();

    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  }
  else
  {
    sub_241A41340();
    swift_allocError();
    unsigned char *v28 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v10, v8);
  }
}

void sub_241CC4918(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_241CC556C(0, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v35 - v7;
  if (!objc_msgSend(a1, sel_hasValueClamped) || !objc_msgSend(a1, sel_hasValue))
  {
    sub_241A41340();
    swift_allocError();
    *id v26 = 0;
    swift_willThrow();
    return;
  }
  uint64_t v36 = a2;
  id v9 = objc_msgSend(a1, sel_value);
  if (!v9)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  uint64_t v10 = v9;
  uint64_t v37 = (void *)sub_241CDB860();

  uint64_t v11 = *v3;
  id v12 = (char *)v3 + *(int *)(type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider() + 20);
  uint64_t v13 = *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32);
  uint64_t v35 = v12;
  uint64_t v14 = *(void **)&v12[v13];
  type metadata accessor for SnidgetStringBuilder();
  uint64_t inited = (id *)swift_initStackObject();
  inited[2] = v11;
  uint64_t v16 = self;
  id v17 = v14;
  id v18 = v11;
  id v19 = objc_msgSend(v16, sel_sharedInstanceForHealthStore_, v18);
  uint64_t v20 = v19;
  inited[4] = v19;
  if (!v14)
  {
    id v21 = v19;
    id v17 = objc_msgSend(v21, sel_createHKUnitPreferenceController);
  }
  inited[3] = v17;
  if (objc_msgSend(a1, sel_valueClamped))
  {
    id v22 = objc_msgSend(self, sel_percentUnit);
    id v23 = v37;
    objc_msgSend(v37, sel_doubleValueForUnit_, v22);

    id v24 = (void *)sub_241CDB330();
    id v25 = (id)HKAFibBurdenClampedLowerBoundLocalizedString();

    sub_241CDB0D0();
    SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();

    swift_bridgeObjectRelease();
    return;
  }
  id v27 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, v18);
  if (!v27) {
    goto LABEL_16;
  }
  uint64_t v28 = v27;
  id v29 = objc_msgSend(v27, sel_displayTypeForObjectType_, v35[2]);

  if (v29)
  {
    uint64_t v35 = v17;
    uint64_t v30 = v37;
    SnidgetStringBuilder.makeQuantityPrimaryAttributedString(displayType:quantity:)(v29, v37, v8);
    uint64_t v31 = sub_241CD69B0();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v8, 1, v31) == 1)
    {
      sub_241CC5440((uint64_t)v8, (unint64_t *)&qword_26B031FB8, MEMORY[0x263F06828]);
      sub_241A41340();
      swift_allocError();
      *id v33 = 0;
      swift_willThrow();

      swift_setDeallocating();
    }
    else
    {

      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v36, v8, v31);
    }
  }
  else
  {
    sub_241A41340();
    swift_allocError();
    unsigned char *v34 = 0;
    swift_willThrow();
  }
}

uint64_t sub_241CC4DA0(uint64_t *a1)
{
  sub_241CDBE00();
  sub_241CDB180();
  uint64_t v2 = *a1;
  uint64_t v3 = type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider();
  sub_241AE0340(v2, *((unsigned __int8 *)a1 + *(int *)(v3 + 20) + 8));
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CDB180();
  return 0;
}

uint64_t sub_241CC4E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241CC530C(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_241CC4E84(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_241CC4EA8(uint64_t a1)
{
  unint64_t v2 = sub_241CC58BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241CC4EE4(uint64_t a1)
{
  unint64_t v2 = sub_241CC58BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241CC4F20(void *a1)
{
  sub_241CC5860();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A311E0(a1, a1[3]);
  sub_241CC58BC();
  sub_241CDC230();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_241CC5030()
{
  unint64_t result = qword_26B0334F8[0];
  if (!qword_26B0334F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B0334F8);
  }
  return result;
}

uint64_t sub_241CC5084(uint64_t a1)
{
  sub_241CC5808();
  uint64_t v3 = v2;
  sub_241CD8410();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

uint64_t sub_241CC50F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241CC510C()
{
  return sub_241CC515C(&qword_26B0383B0, &qword_26B0383B8, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_241CC515C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241CC51F0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241CC51A0()
{
  return sub_241CC515C(&qword_26B032E00, &qword_26B032E08, (uint64_t (*)(uint64_t, void *))type metadata accessor for SnidgetHarnessPluginView);
}

void sub_241CC51F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_241CC15DC(255, &qword_26B032118, MEMORY[0x263F44150]);
    v9[0] = v6;
    v9[1] = &type metadata for AFibHistoryVisualizationView;
    v9[2] = sub_241A3F5B0();
    v9[3] = sub_241A940B8();
    v9[4] = sub_241CC16AC((unint64_t *)&qword_26B0320F0);
    v9[5] = sub_241CC16AC((unint64_t *)&qword_26B0320E0);
    v9[6] = sub_241A9410C();
    v9[7] = sub_241A94160();
    unint64_t v7 = a3(a1, v9);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241CC530C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241CC5374(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241CC53D4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241CC556C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241CC5440(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241CC556C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241CC549C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241CC54E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241CC554C()
{
  return sub_241CC55C4();
}

void sub_241CC556C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241CDBBD0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241CC55C4()
{
  uint64_t v1 = *(void *)(type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider() - 8);
  return sub_241CC4DA0((uint64_t *)(v0
                                 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))));
}

uint64_t sub_241CC5644()
{
  return sub_241CC55C4();
}

uint64_t sub_241CC5668()
{
  return sub_241CC55C4();
}

uint64_t sub_241CC568C()
{
  return sub_241CC55C4();
}

uint64_t sub_241CC56B0()
{
  uint64_t v1 = (int *)(type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;

  unint64_t v7 = (id *)(v6 + v1[7]);
  uint64_t v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  id v9 = (char *)v7 + *(int *)(v8 + 28);
  uint64_t v10 = sub_241CD7DE0();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_241CC57E8()
{
  return sub_241CC55C4();
}

void sub_241CC5808()
{
  if (!qword_268D43B78)
  {
    unint64_t v0 = sub_241CD8450();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43B78);
    }
  }
}

void sub_241CC5860()
{
  if (!qword_268D43B80)
  {
    sub_241CC58BC();
    unint64_t v0 = sub_241CDC0B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43B80);
    }
  }
}

unint64_t sub_241CC58BC()
{
  unint64_t result = qword_268D43B88;
  if (!qword_268D43B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43B88);
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibHistoryVisualizationView.ViewModel.CodingKeys()
{
  return &type metadata for AFibHistoryVisualizationView.ViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for AFibHistoryVisualizationView.ViewModel()
{
  return &type metadata for AFibHistoryVisualizationView.ViewModel;
}

ValueMetadata *type metadata accessor for AFibHistoryVisualizationView()
{
  return &type metadata for AFibHistoryVisualizationView;
}

uint64_t sub_241CC5940()
{
  return MEMORY[0x263F1BA00];
}

unint64_t sub_241CC5950()
{
  unint64_t result = qword_268D43B90;
  if (!qword_268D43B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43B90);
  }
  return result;
}

unint64_t sub_241CC59A8()
{
  unint64_t result = qword_268D43B98;
  if (!qword_268D43B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43B98);
  }
  return result;
}

uint64_t sub_241CC59FC@<X0>(uint64_t *a1@<X8>)
{
  swift_getWitnessTable();
  uint64_t result = sub_241CD8930();
  *a1 = result;
  return result;
}

uint64_t sub_241CC5A74()
{
  return sub_241CD8920();
}

uint64_t sub_241CC5AD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_241A32E8C(0, &qword_26B032200, MEMORY[0x263F47028], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v34 - v5;
  uint64_t v7 = sub_241CD9A80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD85C0();
  sub_241CC97EC(&qword_26B030970, MEMORY[0x263F43F10]);
  *a2 = sub_241CDA9C0();
  a2[1] = v11;
  sub_241CD8560();
  sub_241CC97EC(&qword_268D43BB8, MEMORY[0x263F43EC8]);
  a2[2] = sub_241CDA9C0();
  a2[3] = v12;
  uint64_t v13 = (int *)type metadata accessor for SummaryTrendView(0);
  uint64_t v14 = (char *)a2 + v13[6];
  uint64_t v15 = sub_241CD8F70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = (uint64_t)a2 + v13[8];
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v35(v16, 1, 1, v7);
  uint64_t v36 = v13[9];
  *(uint64_t *)((char *)a2 + v36) = 0;
  sub_241A32E8C(0, &qword_268D43BC0, (uint64_t (*)(uint64_t))sub_241CC7734, MEMORY[0x263F43CB8]);
  uint64_t v37 = v17;
  uint64_t v38 = a1;
  sub_241CD8410();
  id v18 = v39;
  uint64_t v19 = v13[7];
  *(uint64_t *)((char *)a2 + v19) = (uint64_t)v39;
  id v20 = v18;
  HKCodableSummaryTrendTileViewModel.coreChartTrendModel.getter((uint64_t)v6);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_241CC9744((uint64_t)v6, (uint64_t)&qword_26B032200, MEMORY[0x263F47028], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241A32E8C);
  }
  else
  {
    id v21 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v21(v10, v6, v7);
    sub_241CC9744(v16, (uint64_t)&qword_26B032200, MEMORY[0x263F47028], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241A32E8C);
    v21((char *)v16, v10, v7);
    v35(v16, 0, 1, v7);
  }
  uint64_t v22 = v37;
  uint64_t v23 = v38;
  id v24 = *(id *)((char *)a2 + v19);
  id v25 = HKCodableSummaryTrendTileViewModel.dataTypeHeaderModel.getter();

  if (v25)
  {
    uint64_t v26 = v36;
    swift_release();
    *(uint64_t *)((char *)a2 + v26) = (uint64_t)v25;
  }
  id v27 = objc_msgSend(v24, sel_pregnancyLabelValue);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = sub_241CDB0D0();
    uint64_t v31 = v30;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v31 = 0;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v23, v22);
  id v33 = (uint64_t *)((char *)a2 + v13[10]);
  *id v33 = v29;
  v33[1] = v31;
  return result;
}

uint64_t sub_241CC5F60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241CD83C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SummaryTrendView(0);
  if (*v1)
  {
    swift_retain();
    sub_241CD8590();
    swift_release();
    uint64_t v8 = HKCodableSummaryTrendTileViewModel.trendDescriptionText(presentation:)();
    uint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v10)
    {
      uint64_t v11 = v10;
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v11 = 0xE000000000000000;
    }
    *(void *)a1 = sub_241CDAAB0();
    *(void *)(a1 + 8) = 0x401C000000000000;
    *(unsigned char *)(a1 + 16) = 0;
    sub_241CC9584();
    sub_241CC6118(v2, v8, v11, a1 + *(int *)(v12 + 44));
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_241CD85C0();
    sub_241CC97EC(&qword_26B030970, MEMORY[0x263F43F10]);
    uint64_t result = sub_241CDA9B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_241CC6118@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v58 = a3;
  uint64_t v56 = a2;
  uint64_t v62 = a4;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A32E8C(0, &qword_26B032200, MEMORY[0x263F47028], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v55 = (uint64_t)&v48 - v7;
  uint64_t v8 = sub_241CD9A50();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v59 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v57 = (char *)&v48 - v11;
  uint64_t v12 = sub_241CD83C0();
  uint64_t v51 = *(void *)(v12 - 8);
  uint64_t v52 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241CD89C0();
  uint64_t v49 = *(void *)(v15 - 8);
  uint64_t v50 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A2E464();
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  id v25 = (char *)&v48 - v24;
  uint64_t v26 = v5;
  id v27 = a1;
  sub_241A32E8C(0, &qword_268D43BE0, (uint64_t (*)(uint64_t))sub_241A2E464, v26);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  uint64_t v54 = (uint64_t)&v48 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v48 - v31;
  uint64_t v33 = type metadata accessor for SummaryTrendView(0);
  if (!*(void *)((char *)a1 + *(int *)(v33 + 36)))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v32, 1, 1, v19);
    goto LABEL_5;
  }
  swift_retain_n();
  sub_241CD89B0();
  uint64_t v48 = a1;
  if (*a1)
  {
    swift_retain();
    sub_241CD8590();
    swift_release();
    sub_241CD8980();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v52);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v17, v50);
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v34(v25, v23, v19);
    v34(v32, v25, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v32, 0, 1, v19);
    id v27 = v48;
LABEL_5:
    uint64_t v53 = v32;
    sub_241CC96C4((uint64_t)v27 + *(int *)(v33 + 32), v55, &qword_26B032200, MEMORY[0x263F47028]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = v57;
    sub_241CD9A40();
    uint64_t v36 = v54;
    sub_241CC96C4((uint64_t)v32, v54, &qword_268D43BE0, (uint64_t (*)(uint64_t))sub_241A2E464);
    char v63 = 0;
    uint64_t v38 = v59;
    uint64_t v37 = v60;
    unint64_t v39 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
    uint64_t v40 = v61;
    v39(v59, v35, v61);
    uint64_t v41 = v62;
    sub_241CC96C4(v36, v62, &qword_268D43BE0, (uint64_t (*)(uint64_t))sub_241A2E464);
    sub_241CC961C();
    uint64_t v43 = v41 + *(int *)(v42 + 48);
    char v44 = v63;
    *(void *)uint64_t v43 = 0;
    *(unsigned char *)(v43 + 8) = v44;
    v39((char *)(v41 + *(int *)(v42 + 64)), v38, v40);
    uint64_t v45 = *(void (**)(char *, uint64_t))(v37 + 8);
    v45(v35, v40);
    uint64_t v46 = MEMORY[0x263F8D8F0];
    sub_241CC9744((uint64_t)v53, (uint64_t)&qword_268D43BE0, (uint64_t)sub_241A2E464, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241A32E8C);
    v45(v38, v40);
    return sub_241CC9744(v36, (uint64_t)&qword_268D43BE0, (uint64_t)sub_241A2E464, v46, (uint64_t (*)(void))sub_241A32E8C);
  }
  sub_241CD85C0();
  sub_241CC97EC(&qword_26B030970, MEMORY[0x263F43F10]);
  uint64_t result = sub_241CDA9B0();
  __break(1u);
  return result;
}

uint64_t sub_241CC67AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241CC96C4(v2 + *(int *)(a1 + 24), a2, &qword_26B0385D0, MEMORY[0x263F445F8]);
}

uint64_t sub_241CC67EC(uint64_t a1, uint64_t a2)
{
  return sub_241CC94F0(a1, v2 + *(int *)(a2 + 24));
}

uint64_t (*sub_241CC67F8())()
{
  return nullsub_1;
}

BOOL SummaryTrendViewActionHandler.isSelectable.getter()
{
  uint64_t v0 = sub_241CD83C0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = sub_241CD8F70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD8CF0();
  sub_241CD8F30();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_241CD8590();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, *MEMORY[0x263F43BD8], v0);
  sub_241CC97EC(&qword_268D43BA0, MEMORY[0x263F43C08]);
  char v11 = sub_241CDB050();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v4, v0);
  v12(v6, v0);
  return (v11 & 1) == 0;
}

Swift::Void __swiftcall SummaryTrendViewActionHandler.didSelect()()
{
  uint64_t v1 = *v0;
  uint64_t v62 = sub_241CDA1A0();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  char v63 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_241CD8C50();
  uint64_t v71 = *(void *)(v3 - 8);
  uint64_t v72 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v68 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD89F0();
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  MEMORY[0x270FA5388](v5);
  int v67 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v66 = (id)sub_241CD8350();
  MEMORY[0x270FA5388](v66);
  uint64_t v65 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A32E8C(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)&v54 - v10;
  sub_241A32E8C(0, &qword_26B030648, MEMORY[0x263F43C08], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = sub_241CD8F70();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v60 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  char v64 = (char *)&v54 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v54 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v54 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v54 - v27;
  uint64_t v73 = v0;
  sub_241CD8CF0();
  sub_241CD8F60();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v16 + 8);
  v29(v28, v15);
  if (v75[3])
  {
    sub_241A35FBC(0, &qword_268D43BB0);
    sub_241CC7734();
    if (swift_dynamicCast())
    {
      uint64_t v59 = v1;
      id v30 = v74;
      if (objc_msgSend(v74, sel_hasObjectTypeIdentifier)
        && (uint64_t v31 = self,
            id v32 = objc_msgSend(v30, sel_objectTypeIdentifier),
            id v33 = objc_msgSend(v31, sel__typeWithIdentifier_, v32),
            v32,
            (id v58 = v33) != 0))
      {
        id v57 = v30;
        LODWORD(v55) = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
        sub_241CD8CF0();
        sub_241CD8F30();
        v29(v26, v15);
        uint64_t v34 = (void *)sub_241CD8580();
        swift_release();
        id v54 = objc_msgSend(v34, sel_profileIdentifier);

        sub_241CD8CF0();
        sub_241CD8F30();
        v29(v23, v15);
        sub_241CD8590();
        swift_release();
        uint64_t v35 = sub_241CD83C0();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v14, 0, 1, v35);
        uint64_t v36 = v54;
        int v56 = sub_241CD84B0();

        sub_241CC9744((uint64_t)v14, (uint64_t)&qword_26B030648, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241A32E8C);
        uint64_t v37 = sub_241CD6D00();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v11, 1, 1, v37);
        uint64_t v38 = sub_241CD9FA0();
        uint64_t v40 = v39;
        if (v38 == sub_241CD9FA0() && v40 == v41)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v42 = 1;
        }
        else
        {
          char v43 = sub_241CDC100();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v42 = 1;
          if ((v43 & 1) == 0) {
            uint64_t v42 = 2;
          }
        }
        uint64_t v55 = v42;
        sub_241CD8390();
        v75[0] = MEMORY[0x263F8EE78];
        sub_241CC97EC(&qword_26B030968, MEMORY[0x263F43B50]);
        sub_241A32E8C(0, &qword_26B030B30, MEMORY[0x263F43B50], MEMORY[0x263F8D488]);
        sub_241AB375C();
        sub_241CDBC70();
        char v44 = (void *)sub_241CD8380();
        uint64_t v45 = v67;
        sub_241CD89E0();
        sub_241CD8CF0();
        sub_241CD8F30();
        v29(v26, v15);
        sub_241CD8570();
        swift_release();
        sub_241CD8CF0();
        sub_241CD8F30();
        v29(v23, v15);
        sub_241CD8580();
        swift_release();
        uint64_t v46 = v64;
        sub_241CD8CF0();
        sub_241CD8F30();
        v29(v46, v15);
        sub_241CD85A0();
        swift_release();
        id v66 = v44;
        uint64_t v47 = v68;
        sub_241CD8C20();
        uint64_t v48 = v58;
        uint64_t v49 = (void *)sub_241CD89D0();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v47, v72);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v70);
        uint64_t v50 = v60;
        sub_241CD8CF0();
        uint64_t v51 = (void *)sub_241CD8F50();
        v29(v50, v15);
        id v52 = objc_msgSend(v51, sel_navigationController);

        if (v52)
        {
          objc_msgSend(v52, sel_pushViewController_animated_, v49, 1);
        }
        uint64_t v53 = v66;
        sub_241CC7774();
      }
      else
      {
      }
    }
  }
  else
  {
    sub_241CC9744((uint64_t)v75, (uint64_t)&unk_268D43BA8, (uint64_t)&qword_268D43BB0, MEMORY[0x263F43D28], (uint64_t (*)(void))sub_241A686EC);
  }
}

unint64_t sub_241CC7734()
{
  unint64_t result = qword_26B034E60;
  if (!qword_26B034E60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B034E60);
  }
  return result;
}

uint64_t sub_241CC7774()
{
  uint64_t v28 = sub_241CD8300();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_241CD83C0();
  uint64_t v2 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD8F70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v0;
  sub_241CD8CF0();
  sub_241CD8F30();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v23 = v5;
  v9(v8, v5);
  uint64_t v22 = v9;
  uint64_t v10 = (void *)sub_241CD8580();
  swift_release();
  id v11 = objc_msgSend(v10, sel_profileIdentifier);

  objc_msgSend(v11, sel_type);
  id v12 = (id)HKStringFromProfileType();
  uint64_t v13 = sub_241CDB0D0();
  uint64_t v15 = v14;

  sub_241CD8CF0();
  sub_241CD8F30();
  v9(v8, v5);
  sub_241CD8590();
  swift_release();
  sub_241CD83A0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v25);
  *(void *)&v29[0] = v13;
  *((void *)&v29[0] + 1) = v15;
  sub_241CDB180();
  sub_241CDB180();
  swift_bridgeObjectRelease();
  sub_241CD8320();
  uint64_t v17 = v26;
  uint64_t v16 = v27;
  uint64_t v18 = v28;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v27, *MEMORY[0x263F43A28], v28);
  sub_241CD8CF0();
  uint64_t v19 = (void *)sub_241CD8F50();
  v22(v8, v23);
  uint64_t v30 = 0;
  memset(v29, 0, sizeof(v29));
  sub_241CD8310();
  swift_bridgeObjectRelease();

  sub_241CC9744((uint64_t)v29, (uint64_t)&qword_268D43B20, (uint64_t)&qword_268D43B28, MEMORY[0x263F45830], (uint64_t (*)(void))sub_241A686EC);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v16, v18);
}

uint64_t SummaryTrendViewActionHandler.__allocating_init(content:)(uint64_t a1)
{
  uint64_t v2 = sub_241CD8F70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_241CD8D00();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t SummaryTrendViewActionHandler.init(content:)(uint64_t a1)
{
  uint64_t v2 = sub_241CD8F70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  uint64_t v5 = sub_241CD8D00();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v5;
}

uint64_t SummaryTrendViewActionHandler.__deallocating_deinit()
{
  _s9Summaries29SummaryTrendViewActionHandlerCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_241CC7D88()
{
  return sub_241CC97EC(&qword_26B034E58, (void (*)(uint64_t))sub_241CC7734);
}

uint64_t sub_241CC7DD0()
{
  return sub_241CC97EC(&qword_26B038408, (void (*)(uint64_t))type metadata accessor for SummaryTrendViewActionHandler);
}

uint64_t type metadata accessor for SummaryTrendViewActionHandler(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B033728);
}

uint64_t sub_241CC7E38()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241CC7E78()
{
  return type metadata accessor for SummaryTrendViewActionHandler(0);
}

uint64_t *sub_241CC7E80(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    a1[3] = a2[3];
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_241CD8F70();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    swift_retain();
    if (v13(v10, 1, v11))
    {
      sub_241A32E8C(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v7 + v15) = (uint64_t)v17;
    uint64_t v18 = (char *)v7 + v16;
    uint64_t v19 = (char *)a2 + v16;
    uint64_t v20 = sub_241CD9A80();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    id v23 = v17;
    if (v22(v19, 1, v20))
    {
      sub_241A32E8C(0, &qword_26B032200, MEMORY[0x263F47028], MEMORY[0x263F8D8F0]);
      memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v25 = a3[10];
    *(uint64_t *)((char *)v7 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v26 = (uint64_t *)((char *)v7 + v25);
    uint64_t v27 = (uint64_t *)((char *)a2 + v25);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_241CC818C(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_241CD8F70();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  uint64_t v7 = a1 + a2[8];
  uint64_t v8 = sub_241CD9A80();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_241CC82FC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_241CD8F70();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_retain();
  swift_retain();
  if (v12(v9, 1, v10))
  {
    sub_241A32E8C(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = *(void **)((char *)a2 + v14);
  *(void *)((char *)a1 + v14) = v16;
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  uint64_t v19 = sub_241CD9A80();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  id v22 = v16;
  if (v21(v18, 1, v19))
  {
    sub_241A32E8C(0, &qword_26B032200, MEMORY[0x263F47028], MEMORY[0x263F8D8F0]);
    memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v24 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_241CC85B4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD8F70();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_241A32E8C(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = *(void **)((char *)a2 + v15);
  uint64_t v17 = *(void **)((char *)a1 + v15);
  *(void *)((char *)a1 + v15) = v16;
  id v18 = v16;

  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_241CD9A80();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    sub_241A32E8C(0, &qword_26B032200, MEMORY[0x263F47028], MEMORY[0x263F8D8F0]);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_241CC8960(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241CD8F70();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_241A32E8C(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_241CD9A80();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_241A32E8C(0, &qword_26B032200, MEMORY[0x263F47028], MEMORY[0x263F8D8F0]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  return a1;
}

void *sub_241CC8BD0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_release();
  a1[3] = a2[3];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241CD8F70();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_241A32E8C(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = *(void **)((char *)a1 + v16);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);

  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_241CD9A80();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    sub_241A32E8C(0, &qword_26B032200, MEMORY[0x263F47028], MEMORY[0x263F8D8F0]);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_release();
  uint64_t v27 = a3[10];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  void *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241CC8F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241CC8F5C);
}

uint64_t sub_241CC8F5C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_241A32E8C(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[6];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[7]);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    sub_241A32E8C(0, &qword_26B032200, MEMORY[0x263F47028], MEMORY[0x263F8D8F0]);
    int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[8];
    return v14(v16, a2, v15);
  }
}

uint64_t sub_241CC90EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241CC9100);
}

void sub_241CC9100(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_241A32E8C(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + a4[6];
    unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7]) = (a2 - 1);
  }
  else
  {
    sub_241A32E8C(0, &qword_26B032200, MEMORY[0x263F47028], MEMORY[0x263F8D8F0]);
    int v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[8];
    v14(v16, a2, a2, v15);
  }
}

uint64_t type metadata accessor for SummaryTrendView(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B0328F0);
}

void sub_241CC92B0()
{
  sub_241A32E8C(319, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_241A32E8C(319, &qword_26B032200, MEMORY[0x263F47028], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_241CC93FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_241CC9418()
{
  return sub_241CC97EC(&qword_26B0328E8, (void (*)(uint64_t))type metadata accessor for SummaryTrendView);
}

uint64_t sub_241CC9460()
{
  return sub_241CC97EC(&qword_26B0328E0, (void (*)(uint64_t))type metadata accessor for SummaryTrendView);
}

uint64_t sub_241CC94A8()
{
  return sub_241CC97EC(&qword_26B0328D8, (void (*)(uint64_t))type metadata accessor for SummaryTrendView);
}

uint64_t sub_241CC94F0(uint64_t a1, uint64_t a2)
{
  sub_241A32E8C(0, &qword_26B0385D0, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_241CC9584()
{
  if (!qword_268D43BC8)
  {
    sub_241A32E8C(255, &qword_268D43BD0, (uint64_t (*)(uint64_t))sub_241CC961C, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_241CDA8C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43BC8);
    }
  }
}

void sub_241CC961C()
{
  if (!qword_268D43BD8)
  {
    sub_241A32E8C(255, &qword_268D43BE0, (uint64_t (*)(uint64_t))sub_241A2E464, MEMORY[0x263F8D8F0]);
    sub_241CD9A50();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268D43BD8);
    }
  }
}

uint64_t sub_241CC96C4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A32E8C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241CC9744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_241CC97A4()
{
  return sub_241CC97EC(&qword_268D43BE8, (void (*)(uint64_t))sub_241CC9834);
}

uint64_t sub_241CC97EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241CC9834()
{
  if (!qword_268D43BF0)
  {
    sub_241A32E8C(255, &qword_268D43BD0, (uint64_t (*)(uint64_t))sub_241CC961C, MEMORY[0x263F1BAC8]);
    sub_241CC98C8();
    unint64_t v0 = sub_241CDAD50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268D43BF0);
    }
  }
}

unint64_t sub_241CC98C8()
{
  unint64_t result = qword_268D43BF8;
  if (!qword_268D43BF8)
  {
    sub_241A32E8C(255, &qword_268D43BD0, (uint64_t (*)(uint64_t))sub_241CC961C, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43BF8);
  }
  return result;
}

uint64_t sub_241CC9950(void *a1)
{
  uint64_t v2 = v1;
  sub_241A7517C(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241CD6D70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_241CD6D00();
  uint64_t v11 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_endDate);
  id v14 = (id)HKDecodeDateForValue();
  sub_241CD6CB0();

  uint64_t v15 = 0;
  uint64_t v16 = 0;
  if (objc_msgSend(a1, sel_hasSampleUUID))
  {
    id v17 = objc_msgSend(a1, sel_sampleUUID);
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v15 = sub_241CDB0D0();
      uint64_t v16 = v19;
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v16 = 0;
    }
  }
  uint64_t v20 = type metadata accessor for SummaryAlertContentState();
  sub_241CCB90C(v2 + *(int *)(v20 + 24), (uint64_t)v6, (uint64_t (*)(void))sub_241A7517C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    swift_bridgeObjectRelease();
    sub_241CCBE9C((uint64_t)v6, (uint64_t (*)(void))sub_241A7517C);
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_12:
    if (sub_241CD6C80())
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
      char v22 = 1;
    }
    else if (*(unsigned char *)(v2 + *(int *)(v20 + 32)) == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
      char v22 = 0;
    }
    else
    {
      char v22 = sub_241CD6CA0();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
    }
    return v22 & 1;
  }
  if (sub_241CD6D20() == v15 && v16 == v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v23 = sub_241CDC100();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      sub_241CCBEFC((unint64_t *)&qword_26B02E8D0, MEMORY[0x263F07490]);
      uint64_t v24 = v27;
      char v22 = sub_241CDB010() ^ 1;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v24);
      return v22 & 1;
    }
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
  char v22 = *(unsigned char *)(v2 + *(int *)(v20 + 32)) ^ 1;
  return v22 & 1;
}

uint64_t type metadata accessor for SummaryAlertContentState()
{
  uint64_t result = qword_268D43C00;
  if (!qword_268D43C00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_241CC9E14(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241CD6D00();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    id v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_241CD6D70();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_241A7517C(0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v20) = *((unsigned char *)a2 + v20);
  }
  return v4;
}

uint64_t sub_241CC9FF4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_241CD6D00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_241CD6D70();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

void *sub_241CCA110(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241CD6D00();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  id v14 = (char *)a2 + v12;
  uint64_t v15 = sub_241CD6D70();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_241A7517C(0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
  return a1;
}

void *sub_241CCA2A0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD6D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_241CD6D70();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_241A7517C(0);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_241CCA49C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_241CD6D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_241CD6D70();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_241A7517C(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  return a1;
}

void *sub_241CCA618(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_241CD6D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_241CD6D70();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_241A7517C(0);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v20 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
  return a1;
}

uint64_t sub_241CCA800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241CCA814);
}

uint64_t sub_241CCA814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_241CD6D00();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_241A7517C(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_241CCA940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241CCA954);
}

uint64_t sub_241CCA954(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_241CD6D00();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_241A7517C(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_241CCAA80()
{
  sub_241CD6D00();
  if (v0 <= 0x3F)
  {
    sub_241A7517C(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_241CCAB60()
{
  return sub_241CCBEFC(&qword_268D43C10, (void (*)(uint64_t))type metadata accessor for SummaryAlertContentState);
}

uint64_t sub_241CCABA8()
{
  uint64_t v1 = sub_241CD6D70();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A7517C(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_241CDB170();
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for SummaryAlertContentState();
  sub_241CD6D00();
  sub_241CCBEFC(&qword_268D43C40, MEMORY[0x263F07490]);
  sub_241CDAFD0();
  sub_241CCB90C(v0 + *(int *)(v8 + 24), (uint64_t)v7, (uint64_t (*)(void))sub_241A7517C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_241CDC1F0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_241CDC1F0();
    sub_241CCBEFC(&qword_268D43C48, MEMORY[0x263F07508]);
    sub_241CDAFD0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_241CDC1F0();
  return sub_241CDC1F0();
}

uint64_t sub_241CCAE3C(void *a1)
{
  sub_241CCB8A8(0, &qword_268D43C18, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  sub_241A311E0(a1, a1[3]);
  sub_241CCB854();
  sub_241CDC230();
  v9[15] = 0;
  sub_241CDC070();
  if (!v1)
  {
    type metadata accessor for SummaryAlertContentState();
    v9[14] = 1;
    sub_241CD6D00();
    sub_241CCBEFC(&qword_26B02E8C8, MEMORY[0x263F07490]);
    sub_241CDC0A0();
    v9[13] = 2;
    sub_241CD6D70();
    sub_241CCBEFC(&qword_268D43C28, MEMORY[0x263F07508]);
    sub_241CDC060();
    v9[12] = 3;
    sub_241CDC080();
    v9[11] = 4;
    sub_241CDC080();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_241CCB0DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  sub_241A7517C(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v36 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241CD6D00();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CCB8A8(0, &qword_268D43C30, MEMORY[0x263F8E040]);
  uint64_t v40 = v8;
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v34 - v9;
  uint64_t v11 = (int *)type metadata accessor for SummaryAlertContentState();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (void *)((char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = (uint64_t)v14 + *(int *)(v12 + 24);
  uint64_t v16 = sub_241CD6D70();
  int v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v44 = v15;
  v17(v15, 1, 1, v16);
  uint64_t v18 = a1[3];
  uint64_t v42 = a1;
  sub_241A311E0(a1, v18);
  sub_241CCB854();
  uint64_t v41 = v10;
  uint64_t v19 = v43;
  sub_241CDC220();
  if (v19)
  {
    sub_241A31190((uint64_t)v42);
    id v32 = (uint64_t (*)(void))sub_241A7517C;
    uint64_t v33 = v44;
  }
  else
  {
    uint64_t v20 = v37;
    uint64_t v21 = v38;
    char v43 = v14;
    uint64_t v22 = v39;
    char v49 = 0;
    uint64_t v23 = sub_241CDC000();
    int v25 = v43;
    *char v43 = v23;
    v25[1] = v26;
    char v48 = 1;
    sub_241CCBEFC(&qword_26B035488, MEMORY[0x263F07490]);
    sub_241CDC030();
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v25 + v11[5], v7, v22);
    char v47 = 2;
    sub_241CCBEFC(&qword_268D43C38, MEMORY[0x263F07508]);
    uint64_t v27 = (uint64_t)v36;
    uint64_t v28 = v40;
    v34[1] = 0;
    sub_241CDBFF0();
    sub_241A751B0(v27, v44);
    char v46 = 3;
    char v29 = sub_241CDC010();
    uint64_t v30 = (uint64_t)v43;
    *((unsigned char *)v43 + v11[7]) = v29 & 1;
    char v45 = 4;
    uint64_t v31 = sub_241CDC010();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v41, v28);
    *(unsigned char *)(v30 + v11[8]) = v31 & 1;
    sub_241CCB90C(v30, v35, (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState);
    sub_241A31190((uint64_t)v42);
    id v32 = (uint64_t (*)(void))type metadata accessor for SummaryAlertContentState;
    uint64_t v33 = v30;
  }
  return sub_241CCBE9C(v33, v32);
}

unint64_t sub_241CCB63C()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x746144746E657665;
      break;
    case 2:
      unint64_t result = 0x5555656C706D6173;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x73696D7369447369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_241CCB700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_241CCC150(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241CCB728(uint64_t a1)
{
  unint64_t v2 = sub_241CCB854();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241CCB764(uint64_t a1)
{
  unint64_t v2 = sub_241CCB854();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241CCB7A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241CCB0DC(a1, a2);
}

uint64_t sub_241CCB7B8(void *a1)
{
  return sub_241CCAE3C(a1);
}

uint64_t sub_241CCB7D4()
{
  return sub_241CDC200();
}

uint64_t sub_241CCB818()
{
  return sub_241CDC200();
}

unint64_t sub_241CCB854()
{
  unint64_t result = qword_268D43C20;
  if (!qword_268D43C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43C20);
  }
  return result;
}

void sub_241CCB8A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_241CCB854();
    unint64_t v7 = a3(a1, &type metadata for SummaryAlertContentState.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241CCB90C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241CCB974(void *a1, void *a2)
{
  uint64_t v4 = sub_241CD6D70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CCBE38();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A7517C(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v41 = (uint64_t)&v36 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v36 - v18;
  if (*a1 == *a2 && a1[1] == a2[1] || (char v20 = sub_241CDC100(), v21 = 0, (v20 & 1) != 0))
  {
    uint64_t v22 = type metadata accessor for SummaryAlertContentState();
    if (sub_241CD6CA0())
    {
      uint64_t v40 = v15;
      uint64_t v36 = v7;
      uint64_t v37 = a1;
      uint64_t v23 = (uint64_t)a1 + *(int *)(v22 + 24);
      uint64_t v24 = (uint64_t)v19;
      sub_241CCB90C(v23, (uint64_t)v19, (uint64_t (*)(void))sub_241A7517C);
      uint64_t v38 = a2;
      uint64_t v39 = v22;
      uint64_t v25 = v41;
      sub_241CCB90C((uint64_t)a2 + *(int *)(v22 + 24), v41, (uint64_t (*)(void))sub_241A7517C);
      uint64_t v26 = (uint64_t)v11;
      uint64_t v27 = (uint64_t)&v11[*(int *)(v9 + 48)];
      sub_241CCB90C(v24, (uint64_t)v11, (uint64_t (*)(void))sub_241A7517C);
      uint64_t v28 = v4;
      sub_241CCB90C(v25, v27, (uint64_t (*)(void))sub_241A7517C);
      char v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v29((uint64_t)v11, 1, v28) == 1)
      {
        sub_241CCBE9C(v25, (uint64_t (*)(void))sub_241A7517C);
        sub_241CCBE9C(v24, (uint64_t (*)(void))sub_241A7517C);
        if (v29(v27, 1, v28) == 1)
        {
          sub_241CCBE9C((uint64_t)v11, (uint64_t (*)(void))sub_241A7517C);
          goto LABEL_12;
        }
        goto LABEL_10;
      }
      uint64_t v30 = (uint64_t)v11;
      uint64_t v31 = (uint64_t)v40;
      sub_241CCB90C(v30, (uint64_t)v40, (uint64_t (*)(void))sub_241A7517C);
      if (v29(v27, 1, v28) == 1)
      {
        sub_241CCBE9C(v25, (uint64_t (*)(void))sub_241A7517C);
        sub_241CCBE9C(v24, (uint64_t (*)(void))sub_241A7517C);
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v31, v28);
LABEL_10:
        sub_241CCBE9C(v26, (uint64_t (*)(void))sub_241CCBE38);
        goto LABEL_13;
      }
      id v32 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v36, v27, v28);
      sub_241CCBEFC(&qword_26B0369F8, MEMORY[0x263F07508]);
      char v33 = sub_241CDB050();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v5 + 8);
      v34(v32, v28);
      sub_241CCBE9C(v25, (uint64_t (*)(void))sub_241A7517C);
      sub_241CCBE9C(v24, (uint64_t (*)(void))sub_241A7517C);
      v34((char *)v31, v28);
      sub_241CCBE9C(v26, (uint64_t (*)(void))sub_241A7517C);
      if (v33)
      {
LABEL_12:
        if (*((unsigned __int8 *)v37 + *(int *)(v39 + 28)) == *((unsigned __int8 *)v38 + *(int *)(v39 + 28)))
        {
          char v21 = *((unsigned char *)v37 + *(int *)(v39 + 32)) ^ *((unsigned char *)v38 + *(int *)(v39 + 32)) ^ 1;
          return v21 & 1;
        }
      }
    }
LABEL_13:
    char v21 = 0;
  }
  return v21 & 1;
}

void sub_241CCBE38()
{
  if (!qword_26B0354B0)
  {
    sub_241A7517C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B0354B0);
    }
  }
}

uint64_t sub_241CCBE9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241CCBEFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SummaryAlertContentState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241CCC010);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryAlertContentState.CodingKeys()
{
  return &type metadata for SummaryAlertContentState.CodingKeys;
}

unint64_t sub_241CCC04C()
{
  unint64_t result = qword_268D43C50;
  if (!qword_268D43C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43C50);
  }
  return result;
}

unint64_t sub_241CCC0A4()
{
  unint64_t result = qword_268D43C58;
  if (!qword_268D43C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43C58);
  }
  return result;
}

unint64_t sub_241CCC0FC()
{
  unint64_t result = qword_268D43C60;
  if (!qword_268D43C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43C60);
  }
  return result;
}

uint64_t sub_241CCC150(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000065 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5555656C706D6173 && a2 == 0xEA00000000004449 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000241CE5B90 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73696D7369447369 && a2 == 0xEB00000000646573)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_241CCC3A4@<X0>(uint64_t a1@<X8>)
{
  return sub_241CCE99C(v1, a1, &qword_26B038F10, MEMORY[0x263F062D0]);
}

uint64_t *sub_241CCC3E0(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v34 = *v3;
  uint64_t v32 = sub_241CD7650();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_241CD7690();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a2;
  id v29 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v11 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v37 = inited;
  sub_241CDB2E0();
  uint64_t v12 = *(int *)(v11 + 40);
  uint64_t v36 = a1;
  char v13 = *(unsigned char *)(a1 + v12);
  sub_241A29E78(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_241CD73B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  if (v13)
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v18 + v17, *MEMORY[0x263F454D0], v14);
  }
  else
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB720;
    unint64_t v20 = v18 + v17;
    char v21 = *(void (**)(unint64_t, void, uint64_t))(v15 + 104);
    v21(v20, *MEMORY[0x263F45520], v14);
    v21(v20 + v16, *MEMORY[0x263F45538], v14);
  }
  id v19 = v29;
  sub_241C5D74C(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v22 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v7, *MEMORY[0x263F45690], v32);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries47SleepDurationValueSummarySharableModelGenerator_domain, v9, v33);
  uint64_t v23 = sub_241CCDA5C(&qword_26B02FA28, (void (*)(uint64_t))type metadata accessor for SleepDurationValueSummarySharableModelGenerator);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  uint64_t v26 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v35, v36, v34, v23);
  uint64_t v27 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v25, v27);
  sub_241CCDB28(v24);
  v3[2] = v26;
  return v3;
}

uint64_t sub_241CCC88C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_241CDBF50();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4)
    {
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = v4;
      return result;
    }
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x245637160](0, v3);
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v3 + 32);
LABEL_6:
    uint64_t v4 = (uint64_t)v6;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_241CCC93C(void *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29E78(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v47 - v6;
  sub_241A29E78(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], v4);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  char v13 = (char *)&v47 - v12;
  sub_241A29E78(0, &qword_26B032050, MEMORY[0x263F45780], v4);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v47 - v18;
  if (!a1)
  {
    sub_241CD7A80();
    uint64_t v41 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v19, 0, 1, v41);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v42 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v13, 1, 1, v42);
    char v43 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    sub_241CCE99C((uint64_t)v19, (uint64_t)v17, &qword_26B032050, MEMORY[0x263F45780]);
    id v40 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v13, (uint64_t)v17, 0, 0);
    sub_241CCDB84((uint64_t)v19, &qword_26B032050, v43);
    return v40;
  }
  id v20 = a1;
  unint64_t v21 = sub_241CCD028(v20);
  if (!v21)
  {
    sub_241CD7A80();
    uint64_t v44 = sub_241CD7AB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v19, 0, 1, v44);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v45 = sub_241CD9970();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v13, 1, 1, v45);
    char v46 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    sub_241CCE99C((uint64_t)v19, (uint64_t)v17, &qword_26B032050, MEMORY[0x263F45780]);
    id v40 = sub_241A53EB0(0, 0xF000000000000000, 11, (uint64_t)v13, (uint64_t)v17, 0, 0);
    sub_241CCDB84((uint64_t)v19, &qword_26B032050, v46);

    return v40;
  }
  unint64_t v22 = (void *)v21;
  uint64_t v23 = a2 + *(int *)(type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0) + 32);
  uint64_t v24 = sub_241CD9BD0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v11, v23, v24);
  uint64_t v25 = *MEMORY[0x263F46C98];
  uint64_t v26 = sub_241CD9970();
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v11, v25, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v11, 0, 1, v26);
  id v28 = objc_msgSend(v20, sel_dateInterval);
  sub_241CD67A0();

  uint64_t v29 = sub_241CD6810();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v7, 0, 1, v29);
  id v30 = objc_msgSend(v20, sel_periods);
  sub_241A313AC(0, &qword_26B030388);
  unint64_t v31 = sub_241CDB2C0();

  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_241CDBF50();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v48 = v20;
  swift_bridgeObjectRelease();
  sub_241A313AC(0, &qword_26B034E48);
  id v33 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v7, v32, 0);
  id result = objc_msgSend(v22, sel_data);
  if (result)
  {
    uint64_t v35 = result;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v36 = sub_241CD6AE0();
    unint64_t v38 = v37;

    uint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
    sub_241CCE99C((uint64_t)v11, (uint64_t)v13, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8]);
    uint64_t v50 = 0;
    memset(v49, 0, sizeof(v49));
    id v40 = sub_241A54648(v36, v38, 15, (uint64_t)v13, (uint64_t)v33, 0, (uint64_t)v49);

    sub_241A37374(v36, v38);
    sub_241CCDB84((uint64_t)v11, (unint64_t *)&qword_26B0321F0, v39);

    return v40;
  }
  __break(1u);
  return result;
}

unint64_t sub_241CCD028(void *a1)
{
  uint64_t v2 = sub_241CDA1A0();
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v52 = (char *)&v52 - v6;
  uint64_t v7 = sub_241CD6810();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29E78(0, &qword_26B0385B8, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  char v13 = (char *)&v52 - v12;
  uint64_t v14 = sub_241CD6D00();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  id v53 = a1;
  id v54 = (char *)&v52 - v19;
  id v20 = objc_msgSend(a1, sel_periods);
  sub_241A313AC(0, &qword_26B030388);
  unint64_t v21 = sub_241CDB2C0();

  if (!(v21 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_241CDBF50();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_17;
  }
LABEL_3:
  unint64_t result = v22 - 1;
  if (__OFSUB__(v22, 1))
  {
    __break(1u);
  }
  else if ((v21 & 0xC000000000000001) == 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v24 = *(id *)(v21 + 8 * result + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_27;
  }
  id v24 = (id)MEMORY[0x245637160](result, v21);
LABEL_8:
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v25, sel_dateInterval);

  sub_241CD67A0();
  sub_241CD67B0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_18:
    sub_241CCDB84((uint64_t)v13, &qword_26B0385B8, MEMORY[0x263F07490]);
    sub_241CDA140();
    char v46 = sub_241CDA190();
    os_log_type_t v47 = sub_241CDB660();
    if (os_log_type_enabled(v46, v47))
    {
      id v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v58 = v49;
      *(_DWORD *)id v48 = 136315138;
      uint64_t v59 = v55;
      swift_getMetatypeMetadata();
      uint64_t v50 = sub_241CDB120();
      uint64_t v59 = sub_241A33FE4(v50, v51, &v58);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v46, v47, "[%s]: Unexpected nil value for endOfSleepDate. SleepPublisher query should be configured with onlySleepAnalysis", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v49, -1, -1);
      MEMORY[0x245637F20](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v56 + 8))(v5, v57);
    return 0;
  }
  uint64_t v27 = v54;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v54, v13, v14);
  id v28 = objc_msgSend(v53, sel_summaryFilteredToLastPeriod);
  if (!v28)
  {
    uint64_t v39 = v52;
    sub_241CDA140();
    id v40 = sub_241CDA190();
    os_log_type_t v41 = sub_241CDB660();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v58 = v43;
      *(_DWORD *)uint64_t v42 = 136315138;
      uint64_t v59 = v55;
      swift_getMetatypeMetadata();
      uint64_t v44 = sub_241CDB120();
      uint64_t v59 = sub_241A33FE4(v44, v45, &v58);
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v40, v41, "[%s]: Unexpected nil value for sleepSummaryForDisplay", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x245637F20](v43, -1, -1);
      MEMORY[0x245637F20](v42, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v57);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v54, v14);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v57);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v27, v14);
    }
    return 0;
  }
  id v29 = v28;
  objc_msgSend(v29, sel_inBedDuration);
  double v31 = v30;
  objc_msgSend(v29, sel_sleepDuration);
  double v33 = v32;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v27, v14);
  unint64_t result = (unint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F46620]), sel_init);
  if (result)
  {
    unint64_t v34 = result;
    id v35 = (id)result;
    objc_msgSend(v35, sel_setInBedDuration_, v31);
    objc_msgSend(v35, sel_setAsleepDuration_, v33);
    uint64_t v36 = (void *)sub_241CD6C60();
    double v37 = MEMORY[0x245637600]();

    objc_msgSend(v35, sel_setEndOfSleepTimeIntervalSinceReferenceDate_, v37);
    unint64_t v38 = *(void (**)(char *, uint64_t))(v15 + 8);
    v38(v18, v14);

    v38(v27, v14);
    return v34;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_241CCD840()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries47SleepDurationValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241CCD8E8()
{
  return type metadata accessor for SleepDurationValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for SleepDurationValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B02E7B0);
}

id sub_241CCD914(void **a1, uint64_t a2)
{
  return sub_241CCC93C(*a1, a2);
}

uint64_t sub_241CCD91C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries47SleepDurationValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

_UNKNOWN **sub_241CCD994()
{
  return &off_26F5C8588;
}

uint64_t sub_241CCD9A0(uint64_t a1)
{
  uint64_t result = sub_241CCDA5C(&qword_26B02FA20, (void (*)(uint64_t))type metadata accessor for SleepDurationValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241CCD9F8()
{
  return &off_26F5C85D0;
}

uint64_t sub_241CCDA04(uint64_t a1)
{
  uint64_t result = sub_241CCDA5C(&qword_26B02FA30, (void (*)(uint64_t))type metadata accessor for SleepDurationValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241CCDA5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_241CCDAA4()
{
  return &off_26F5C85E8;
}

uint64_t sub_241CCDAB0(uint64_t a1)
{
  uint64_t result = sub_241CCDA5C(&qword_26B0342A0, (void (*)(uint64_t))type metadata accessor for SleepDurationValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B02E7A0);
}

uint64_t sub_241CCDB28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241CCDB84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241A29E78(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241CCDBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v60 = a3;
  uint64_t v59 = a2;
  uint64_t v3 = sub_241CD7650();
  uint64_t v64 = *(void *)(v3 - 8);
  uint64_t v65 = v3;
  MEMORY[0x270FA5388](v3);
  char v63 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_241CD7690();
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  int v67 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_241CDB560();
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  id v53 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CCE710();
  uint64_t v58 = v7;
  uint64_t v57 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v54 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CCE848();
  uint64_t v70 = v9;
  uint64_t v68 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v66 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241CD6D00();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241CD6DE0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_241CD6EE0();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  id v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F07740], v15);
  sub_241CD6DF0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_241CD67E0();
  unint64_t v21 = (void *)sub_241CD6C60();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v14, v11);
  uint64_t v23 = (void *)sub_241CD6E40();
  id v24 = objc_msgSend(v21, sel_hk_morningIndexWithCalendar_, v23);

  sub_241CD67B0();
  uint64_t v25 = (void *)sub_241CD6C60();
  id v26 = v14;
  uint64_t v27 = v20;
  v22(v26, v11);
  id v28 = (void *)sub_241CD6E40();
  id v29 = objc_msgSend(v25, sel_hk_morningIndexWithCalendar_, v28);

  if (__OFSUB__(v29, v24))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFADD__(v29 - v24, 1))
  {
LABEL_8:
    __break(1u);
    return;
  }
  sub_241CD76B0();
  sub_241A311E0(v74, v74[3]);
  double v30 = (void *)sub_241CD75B0();
  uint64_t v31 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
  uint64_t v32 = v60;
  sub_241CD9BB0();
  double v33 = v53;
  sub_241CDB590();

  sub_241A31190((uint64_t)v74);
  sub_241CCE7D8(0, &qword_26B034DA0, MEMORY[0x263F8D8F0]);
  sub_241CCDA5C(&qword_26B034D50, MEMORY[0x263F44B20]);
  unint64_t v34 = v54;
  uint64_t v35 = v56;
  sub_241CDA710();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v35);
  sub_241CCDA5C(&qword_26B0324A0, (void (*)(uint64_t))sub_241CCE710);
  uint64_t v36 = v58;
  uint64_t v37 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v34, v36);
  uint64_t v73 = v37;
  sub_241CD7730();
  unint64_t v38 = (void *)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v72 = inited;
  sub_241CDB2E0();
  LOBYTE(v33) = *(unsigned char *)(v32 + *(int *)(v31 + 40));
  sub_241A29E78(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v40 = sub_241CD73B0();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(void *)(v41 + 72);
  unint64_t v43 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v44 = swift_allocObject();
  if (v33)
  {
    *(_OWORD *)(v44 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v41 + 104))(v44 + v43, *MEMORY[0x263F454D0], v40);
  }
  else
  {
    *(_OWORD *)(v44 + 16) = xmmword_241CEB720;
    unint64_t v46 = v44 + v43;
    os_log_type_t v47 = *(void (**)(unint64_t, void, uint64_t))(v41 + 104);
    v47(v46, *MEMORY[0x263F45520], v40);
    v47(v46 + v42, *MEMORY[0x263F45538], v40);
  }
  id v45 = v38;
  sub_241C5D74C(v44);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v48 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v48);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v63, *MEMORY[0x263F45690], v65);
  uint64_t v49 = v67;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241CCE910();
  sub_241CCDA5C(&qword_26B02EA58, (void (*)(uint64_t))sub_241CCE910);
  uint64_t v50 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v49, v71);
  sub_241A31190((uint64_t)v74);
  swift_release();
  v74[0] = v50;
  sub_241CCE7D8(0, &qword_26B032CC8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  unint64_t v51 = v66;
  sub_241CDA710();
  swift_release();
  sub_241CCDA5C(&qword_26B02E958, (void (*)(uint64_t))sub_241CCE848);
  uint64_t v52 = v70;
  sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v51, v52);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v27, v62);
}

void sub_241CCE710()
{
  if (!qword_26B0324A8)
  {
    sub_241CDB560();
    sub_241CCE7D8(255, &qword_26B034DA0, MEMORY[0x263F8D8F0]);
    sub_241CCDA5C(&qword_26B034D50, MEMORY[0x263F44B20]);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0324A8);
    }
  }
}

void sub_241CCE7D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241A313AC(255, (unint64_t *)&qword_26B02E800);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241CCE848()
{
  if (!qword_26B0323E0)
  {
    sub_241CCE910();
    sub_241CCE7D8(255, &qword_26B032CC8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_241CCDA5C(&qword_26B02EA58, (void (*)(uint64_t))sub_241CCE910);
    unint64_t v0 = sub_241CDA3E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0323E0);
    }
  }
}

void sub_241CCE910()
{
  if (!qword_26B032778)
  {
    sub_241CCE7D8(255, &qword_26B034DA0, MEMORY[0x263F8D8F0]);
    sub_241A3DA64();
    unint64_t v0 = sub_241CDA510();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B032778);
    }
  }
}

uint64_t sub_241CCE99C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241A29E78(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t *sub_241CCEA1C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD6810();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_241A29E78(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[8];
    id v20 = (char *)a1 + v19;
    unint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_241CD9BD0();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    id v26 = *(void **)((char *)a2 + v24);
    *(uint64_t *)((char *)a1 + v24) = (uint64_t)v26;
    *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
    id v27 = v26;
  }
  return a1;
}

void sub_241CCEC94(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_241CD6810();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = sub_241CD9BD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = *(void **)(a1 + a2[9]);
}

char *sub_241CCEDF0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A29E78(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_241CD9BD0();
  unint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = *(void **)&a2[v22];
  *(void *)&a1[v22] = v24;
  a1[v23] = a2[v23];
  id v25 = v24;
  return a1;
}

char *sub_241CCF018(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A29E78(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  a1[a3[6]] = a2[a3[6]];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  unint64_t v21 = &a2[v19];
  uint64_t v22 = sub_241CD9BD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = *(void **)&a2[v23];
  id v25 = *(void **)&a1[v23];
  *(void *)&a1[v23] = v24;
  id v26 = v24;

  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *sub_241CCF2B0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241A29E78(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_241CD9BD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v18] = a2[v18];
  return a1;
}

char *sub_241CCF4B0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241A29E78(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_241CD77C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_241CD9BD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  uint64_t v25 = a3[9];
  id v26 = *(void **)&a1[v25];
  *(void *)&a1[v25] = *(void *)&a2[v25];

  a1[a3[10]] = a2[a3[10]];
  return a1;
}

uint64_t sub_241CCF730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241CCF744);
}

uint64_t sub_241CCF744(uint64_t a1, uint64_t a2, int *a3)
{
  sub_241A29E78(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_241CD77C0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[7] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_241CD9BD0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_241CCF8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241CCF90C);
}

uint64_t sub_241CCF90C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_241A29E78(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_241CD77C0();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_241CD9BD0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_241CCFAC0()
{
  sub_241A29E78(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_241CD77C0();
    if (v1 <= 0x3F)
    {
      sub_241CD9BD0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

id sub_241CCFC18(void *a1, double a2)
{
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (!v4) {
    goto LABEL_5;
  }
  uint64_t v5 = (void *)v4;
  id v6 = a1;
  id v7 = objc_msgSend(v5, sel_canonicalUnit);
  if (!v7)
  {

LABEL_5:
    id v10 = objc_msgSend(a1, sel_identifier);
    uint64_t v11 = sub_241CDB0D0();
    uint64_t v13 = v12;

    if (v11 != sub_241CDB0D0() || v13 != v14)
    {
      char v16 = sub_241CDC100();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_13;
      }
      id v17 = objc_msgSend(a1, sel_identifier);
      uint64_t v18 = sub_241CDB0D0();
      uint64_t v20 = v19;

      if (v18 != sub_241CDB0D0() || v20 != v21)
      {
        char v24 = sub_241CDC100();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v24) {
          goto LABEL_13;
        }
        id v25 = objc_msgSend(a1, sel_identifier);
        uint64_t v26 = sub_241CDB0D0();
        uint64_t v28 = v27;

        if (v26 != sub_241CDB0D0() || v28 != v29)
        {
          char v30 = sub_241CDC100();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v30) {
            goto LABEL_13;
          }
          id v31 = objc_msgSend(a1, sel_identifier);
          uint64_t v32 = sub_241CDB0D0();
          uint64_t v34 = v33;

          if (v32 != sub_241CDB0D0() || v34 != v35)
          {
            char v36 = sub_241CDC100();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v36 & 1) == 0)
            {
              id v8 = objc_msgSend(self, sel_countUnit);
              id v22 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v8, a2);
              goto LABEL_14;
            }
LABEL_13:
            id v8 = objc_msgSend(self, sel_secondUnit);
            id v22 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v8, a2);
LABEL_14:
            id v9 = v22;
            goto LABEL_15;
          }
        }
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  id v8 = v7;
  id v9 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v7, a2);

LABEL_15:
  return v9;
}

id sub_241CCFF74(void *a1, id a2)
{
  id v3 = objc_msgSend(a2, sel_unitForChartingDisplayType_, a1);
  if (v3)
  {
    uint64_t v4 = v3;
    if (objc_msgSend(v13, sel_isCompatibleWithUnit_, v3) && !objc_msgSend(v4, sel_isNull))
    {
      objc_msgSend(v13, sel_doubleValueForUnit_, v4);
      double v8 = v7;
      id v9 = objc_msgSend(a1, sel_presentation);
      objc_msgSend(v9, sel_adjustedDoubleForDaemonDouble_, v8);
      double v11 = v10;

      id v5 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v4, v11);
    }
    else
    {
      id v5 = v13;
    }
    id v12 = v5;

    return v12;
  }
  else
  {
    return v13;
  }
}

uint64_t sub_241CD00B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241CD2340(v2 + *(int *)(a1 + 20), a2, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
}

uint64_t *sub_241CD0104(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v34 = *v3;
  uint64_t v32 = sub_241CD7650();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  double v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_241CD7690();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  id v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a1;
  id v29 = (id)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  uint64_t v11 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v37 = inited;
  sub_241CDB2E0();
  uint64_t v12 = *(int *)(v11 + 24);
  uint64_t v35 = a2;
  char v13 = *(unsigned char *)(a2 + v12);
  sub_241A29EDC(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v14 = sub_241CD73B0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  if (v13)
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v18 + v17, *MEMORY[0x263F454D0], v14);
  }
  else
  {
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_241CEB720;
    unint64_t v20 = v18 + v17;
    uint64_t v21 = *(void (**)(unint64_t, void, uint64_t))(v15 + 104);
    v21(v20, *MEMORY[0x263F45520], v14);
    v21(v20 + v16, *MEMORY[0x263F45538], v14);
  }
  id v19 = v29;
  sub_241C5D74C(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v22 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v7, *MEMORY[0x263F45690], v32);
  sub_241CD7680();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries56MostRecentRangeCurrentValueSummarySharableModelGenerator_domain, v9, v33);
  uint64_t v23 = sub_241CD07C8(&qword_26B034788, (void (*)(uint64_t))type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator);
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  uint64_t v26 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v36, v35, v34, v23);
  sub_241CD0894(v25);
  uint64_t v27 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v24, v27);
  v3[2] = v26;
  return v3;
}

uint64_t sub_241CD05B0()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Summaries56MostRecentRangeCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v2 = sub_241CD7690();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_241CD0658()
{
  return type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_241A31CC0(a1, (uint64_t *)&unk_26B034798);
}

uint64_t sub_241CD0688@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC9Summaries56MostRecentRangeCurrentValueSummarySharableModelGenerator_domain;
  uint64_t v4 = sub_241CD7690();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

_UNKNOWN **sub_241CD0700()
{
  return &off_26F5C8600;
}

uint64_t sub_241CD070C(uint64_t a1)
{
  uint64_t result = sub_241CD07C8(&qword_26B034778, (void (*)(uint64_t))type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_241CD0764()
{
  return &off_26F5C8648;
}

uint64_t sub_241CD0770(uint64_t a1)
{
  uint64_t result = sub_241CD07C8(&qword_26B034790, (void (*)(uint64_t))type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_241CD07C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_241CD0810()
{
  return &off_26F5C8660;
}

uint64_t sub_241CD081C(uint64_t a1)
{
  uint64_t result = sub_241CD07C8(&qword_26B034780, (void (*)(uint64_t))type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_241A31CC0(a1, qword_26B0346D8);
}

uint64_t sub_241CD0894(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241CD08F0(char *a1, uint64_t a2, uint64_t a3)
{
  v47[1] = a2;
  id v53 = a1;
  uint64_t v4 = sub_241CD7650();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v58 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_241CD7690();
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v61 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = (uint64_t (*)(uint64_t))MEMORY[0x263F062D0];
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29EDC(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v47 - v10;
  uint64_t v49 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241A29EDC(0, &qword_26B0385B8, MEMORY[0x263F07490], v8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v47 - v13;
  uint64_t v54 = sub_241CDB5C0();
  uint64_t v52 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v16 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241ABD6A4();
  uint64_t v62 = *(void *)(v17 - 8);
  uint64_t v63 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v57 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_241CD97E0();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v56 = sub_241CD9D00();
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v21 = (char *)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD9E60();
  sub_241CD9E80();
  sub_241CD9E70();
  uint64_t v48 = a3;
  sub_241CD9E90();
  sub_241CD9CE0();
  sub_241CD76B0();
  sub_241A311E0(v67, v67[3]);
  unint64_t v22 = (void *)sub_241CD75B0();
  uint64_t v23 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  uint64_t v24 = (void *)sub_241CD7770();
  uint64_t v25 = sub_241CD6D00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 1, 1, v25);
  uint64_t v26 = sub_241CD6810();
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v11, v53, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v11, 0, 1, v26);
  unint64_t v51 = v16;
  id v53 = v21;
  sub_241CDB5F0();

  sub_241A32BF4((uint64_t)v11, &qword_26B038F10, v50);
  sub_241A32BF4((uint64_t)v14, &qword_26B0385B8, v49);
  sub_241A31190((uint64_t)v67);
  sub_241CD7730();
  uint64_t v28 = (void *)sub_241CD76E0();
  sub_241A33460();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_241CEB710;
  *(void *)(inited + 32) = sub_241CD7770();
  uint64_t v66 = inited;
  sub_241CDB2E0();
  LOBYTE(v16) = *(unsigned char *)(v48 + *(int *)(v23 + 24));
  sub_241A29EDC(0, &qword_26B0384D0, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v30 = sub_241CD73B0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void *)(v31 + 72);
  unint64_t v33 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  if (v16)
  {
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_241CEB730;
    (*(void (**)(unint64_t, void, uint64_t))(v31 + 104))(v34 + v33, *MEMORY[0x263F454D0], v30);
  }
  else
  {
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_241CEB720;
    unint64_t v36 = v34 + v33;
    uint64_t v37 = *(void (**)(unint64_t, void, uint64_t))(v31 + 104);
    v37(v36, *MEMORY[0x263F45520], v30);
    v37(v36 + v32, *MEMORY[0x263F45538], v30);
  }
  id v35 = v28;
  sub_241C5D74C(v34);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v38 = swift_bridgeObjectRetain();
  sub_241C5D7A0(v38);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v58, *MEMORY[0x263F45690], v60);
  uint64_t v39 = v61;
  sub_241CD7680();

  swift_bridgeObjectRelease();
  sub_241CD07C8(&qword_26B034D68, MEMORY[0x263F44B38]);
  uint64_t v40 = v54;
  uint64_t v41 = v51;
  uint64_t v42 = sub_241CDA680();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v39, v65);
  sub_241A31190((uint64_t)v67);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v40);
  v67[0] = v42;
  sub_241ABD780();
  sub_241A29EDC(0, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_241CD07C8(&qword_26B032768, (void (*)(uint64_t))sub_241ABD780);
  unint64_t v43 = v57;
  sub_241CDA710();
  swift_release();
  sub_241CD07C8(&qword_26B0323D0, (void (*)(uint64_t))sub_241ABD6A4);
  uint64_t v44 = v63;
  uint64_t v45 = sub_241CDA6D0();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v43, v44);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v53, v56);
  return v45;
}

unint64_t sub_241CD1300(uint64_t a1, uint64_t a2, void *a3)
{
  id v116 = a3;
  uint64_t v109 = a2;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241A29EDC(0, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v110 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v122 = (uint64_t)&v107 - v8;
  sub_241A29EDC(0, &qword_26B032050, MEMORY[0x263F45780], v4);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v120 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v121 = (char *)&v107 - v12;
  uint64_t v112 = sub_241CD9840();
  uint64_t v114 = *(void (**)(char *, uint64_t))(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v111 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A29EDC(0, &qword_26B038F10, MEMORY[0x263F062D0], v4);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v107 - v15;
  sub_241A29EDC(0, &qword_26B0385B8, MEMORY[0x263F07490], v4);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v107 - v18;
  uint64_t v20 = sub_241CD6D00();
  uint64_t v118 = *(void *)(v20 - 8);
  uint64_t v119 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v108 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v115 = (char *)&v107 - v23;
  uint64_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x263F44B28];
  sub_241A29EDC(0, &qword_26B032CD8, MEMORY[0x263F44B28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (char *)&v107 - v26;
  sub_241A29EDC(0, &qword_26B034D58, v24, v4);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v107 - v29;
  uint64_t v31 = sub_241CDB5B0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  long long v113 = (char *)&v107 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v117 = (char *)&v107 - v35;
  sub_241CD2340(a1, (uint64_t)v27, &qword_26B032CD8, v24, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  unint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  uint64_t v37 = 1;
  if (v36(v27, 1, v31) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v30, v27, v31);
    uint64_t v37 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v30, v37, 1, v31);
  if (v36(v30, 1, v31) == 1)
  {
    unint64_t v38 = &qword_26B034D58;
    uint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x263F44B28];
    uint64_t v40 = (uint64_t)v30;
LABEL_9:
    sub_241A32BF4(v40, v38, v39);
LABEL_10:
    id v46 = v121;
    sub_241CD7A80();
    uint64_t v47 = sub_241CD7AB0();
    (*(void (**)(id, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v48 = sub_241CD9970();
    uint64_t v49 = v122;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v122, 1, 1, v48);
    uint64_t v50 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v51 = (uint64_t)v120;
    sub_241CD2340((uint64_t)v46, (uint64_t)v120, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    id v52 = sub_241A53EB0(0, 0xF000000000000000, 11, v49, v51, 0, 0);
    sub_241A32BF4((uint64_t)v46, &qword_26B032050, v50);
    return (unint64_t)v52;
  }
  uint64_t v41 = v117;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v117, v30, v31);
  sub_241CD2340((uint64_t)v116, (uint64_t)v16, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v42 = sub_241CD6810();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v16, 1, v42) == 1)
  {
    sub_241A32BF4((uint64_t)v16, &qword_26B038F10, MEMORY[0x263F062D0]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56))(v19, 1, 1, v119);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v32 + 8))(v41, v31);
    unint64_t v38 = &qword_26B0385B8;
    uint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    uint64_t v40 = (uint64_t)v19;
    goto LABEL_9;
  }
  sub_241CD67B0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v42);
  uint64_t v45 = v118;
  uint64_t v44 = v119;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v118 + 56))(v19, 0, 1, v119);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v19, 1, v44) == 1) {
    goto LABEL_8;
  }
  uint64_t v54 = v115;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v115, v19, v44);
  uint64_t v55 = (void *)sub_241CDB5A0();
  uint64_t v56 = (void *)sub_241CD6C60();
  id v57 = objc_msgSend(v55, sel_statisticsForDate_, v56);

  uint64_t v58 = v57;
  uint64_t v59 = v113;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v113, v41, v31);
  uint64_t v60 = v114;
  if (v58) {
    goto LABEL_21;
  }
  uint64_t v61 = (void *)sub_241CDB5A0();
  id v62 = objc_msgSend(v61, sel_statistics);

  sub_241A313AC(0, (unint64_t *)&qword_26B038E68);
  unint64_t v63 = sub_241CDB2C0();

  if (!(v63 >> 62))
  {
    uint64_t v64 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v64) {
      goto LABEL_15;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v106 = *(void (**)(char *, uint64_t))(v32 + 8);
    v106(v59, v31);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v54, v44);
    v106(v41, v31);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v64 = sub_241CDBF50();
  swift_bridgeObjectRelease();
  if (!v64) {
    goto LABEL_29;
  }
LABEL_15:
  unint64_t result = v64 - 1;
  if (__OFSUB__(v64, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if ((v63 & 0xC000000000000001) != 0)
  {
LABEL_31:
    id v65 = (id)MEMORY[0x245637160](result, v63);
    goto LABEL_20;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (result >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v65 = *(id *)(v63 + 8 * result + 32);
LABEL_20:
  uint64_t v58 = v65;
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v66 = *(void (**)(char *, uint64_t))(v32 + 8);
  v66(v59, v31);
  int v67 = (void (*)(char *, void, uint64_t))*((void *)v60 + 13);
  uint64_t v69 = v111;
  uint64_t v68 = v112;
  v67(v111, *MEMORY[0x263F46B68], v112);
  id v116 = v58;
  uint64_t v70 = v68;
  uint64_t v71 = (void *)sub_241CDB4C0();
  uint64_t v72 = (void (*)(char *, uint64_t))*((void *)v60 + 1);
  v72(v69, v70);
  if (!v71)
  {
    id v92 = v121;
    sub_241CD7A80();
    uint64_t v93 = sub_241CD7AB0();
    (*(void (**)(id, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v92, 0, 1, v93);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v94 = sub_241CD9970();
    uint64_t v95 = v122;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v122, 1, 1, v94);
    uint64_t v96 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v97 = (uint64_t)v120;
    sub_241CD2340((uint64_t)v92, (uint64_t)v120, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    id v52 = sub_241A53EB0(0, 0xF000000000000000, 11, v95, v97, 0, 0);
    sub_241A32BF4((uint64_t)v92, &qword_26B032050, v96);

    (*(void (**)(char *, uint64_t))(v118 + 8))(v115, v119);
    v66(v117, v31);
    return (unint64_t)v52;
  }
  uint64_t v114 = v66;
  v67(v69, *MEMORY[0x263F46B60], v70);
  uint64_t v73 = v71;
  uint64_t v74 = v70;
  id v75 = v116;
  uint64_t v76 = (void *)sub_241CDB4C0();
  v72(v69, v74);
  if (!v76)
  {

    uint64_t v98 = v75;
    id v99 = v121;
    sub_241CD7A80();
    uint64_t v100 = sub_241CD7AB0();
    (*(void (**)(id, void, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v99, 0, 1, v100);
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v101 = sub_241CD9970();
    uint64_t v102 = v73;
    uint64_t v103 = v122;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v122, 1, 1, v101);
    uint64_t v104 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
    uint64_t v105 = (uint64_t)v120;
    sub_241CD2340((uint64_t)v99, (uint64_t)v120, &qword_26B032050, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    id v52 = sub_241A53EB0(0, 0xF000000000000000, 11, v103, v105, 0, 0);
    sub_241A32BF4((uint64_t)v99, &qword_26B032050, v104);

    (*(void (**)(char *, uint64_t))(v118 + 8))(v115, v119);
    goto LABEL_27;
  }
  sub_241A313AC(0, &qword_26B034E70);
  uint64_t v77 = v118;
  uint64_t v78 = (uint64_t)v108;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v108, v115, v119);
  uint64_t v120 = v76;
  uint64_t v121 = v73;
  uint64_t v79 = (char *)sub_241A4F5C4(v73, v120, v78);
  uint64_t v80 = sub_241CD9EA0();
  uint64_t v81 = (uint64_t)v110;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v110, v109, v80);
  uint64_t v82 = *MEMORY[0x263F46C68];
  uint64_t v83 = sub_241CD9970();
  uint64_t v84 = *(void *)(v83 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 104))(v81, v82, v83);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
  long long v113 = v79;
  unint64_t result = (unint64_t)objc_msgSend(v79, sel_data);
  if (result)
  {
    uint64_t v85 = (void *)result;
    uint64_t v86 = v77;
    sub_241A313AC(0, &qword_26B030440);
    uint64_t v87 = sub_241CD6AE0();
    unint64_t v89 = v88;

    uint64_t v90 = (uint64_t (*)(uint64_t))MEMORY[0x263F46CA8];
    uint64_t v91 = v122;
    sub_241CD2340(v81, v122, (unint64_t *)&qword_26B0321F0, MEMORY[0x263F46CA8], MEMORY[0x263F8D8F0]);
    uint64_t v124 = 0;
    memset(v123, 0, sizeof(v123));
    id v52 = sub_241A54648(v87, v89, 10, v91, 0, 0, (uint64_t)v123);
    sub_241A37374(v87, v89);

    sub_241A32BF4(v81, (unint64_t *)&qword_26B0321F0, v90);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v115, v119);
LABEL_27:
    v114(v117, v31);
    return (unint64_t)v52;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_241CD2340(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_241A29EDC(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void *sub_241CD23B0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_241CD9EA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_241CD6810();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_241A29EDC(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_241CD77C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241CD25F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_241CD9EA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_241CD6810();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241CD2738(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9EA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_241A29EDC(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241CD292C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9EA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_241A29EDC(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241CD2BA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9EA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_241A29EDC(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  return a1;
}

uint64_t sub_241CD2D88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9EA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_241CD6810();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_241A29EDC(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_241CD77C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_241CD2FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241CD2FF8);
}

uint64_t sub_241CD2FF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_241CD9EA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_241A29EDC(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_241CD77C0();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[9] + 8);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_241CD318C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241CD31A0);
}

uint64_t sub_241CD31A0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_241CD9EA0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_241A29EDC(0, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = sub_241CD77C0();
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[9] + 8) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[7];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_241CD3330()
{
  sub_241CD9EA0();
  if (v0 <= 0x3F)
  {
    sub_241A29EDC(319, &qword_26B038F10, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F)
    {
      sub_241CD77C0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *SnidgetStringBuilder.__allocating_init(healthStore:unitPreferenceController:)(void *a1, id a2)
{
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = a1;
  uint64_t v5 = self;
  id v6 = a1;
  id v7 = objc_msgSend(v5, sel_sharedInstanceForHealthStore_, v6);
  v4[4] = v7;
  if (!a2)
  {
    id v8 = v7;
    a2 = objc_msgSend(v8, sel_createHKUnitPreferenceController);
  }
  v4[3] = a2;
  return v4;
}

void *SnidgetStringBuilder.init(healthStore:unitPreferenceController:viewControllerFactory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

void *SnidgetStringBuilder.init(healthStore:unitPreferenceController:)(void *a1, id a2)
{
  v2[2] = a1;
  uint64_t v5 = self;
  id v6 = a1;
  id v7 = objc_msgSend(v5, sel_sharedInstanceForHealthStore_, v6);
  v2[4] = v7;
  if (!a2)
  {
    id v8 = v7;
    a2 = objc_msgSend(v8, sel_createHKUnitPreferenceController);
  }
  v2[3] = a2;
  return v2;
}

void *SnidgetStringBuilder.init(healthStore:)(void *a1)
{
  v1[2] = a1;
  uint64_t v3 = self;
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_sharedInstanceForHealthStore_, v4);
  v1[4] = v5;
  id v6 = v5;
  id v7 = objc_msgSend(v6, sel_createHKUnitPreferenceController);

  v1[3] = v7;
  return v1;
}

id *SnidgetStringBuilder.deinit()
{
  return v0;
}

id SnidgetStringBuilder.getPreferredUnit(displayType:)(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(v1 + 24), sel_unitForChartingDisplayType_, a1);

  return v2;
}

uint64_t SnidgetStringBuilder.makeSafeDouble(displayType:quantity:preferredUnit:)(void *a1, void *a2, void *a3)
{
  uint64_t v7 = *v3;
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(a1, sel_objectType);
  self;
  uint64_t v13 = swift_dynamicCastObjCClass();

  if (!v13)
  {
    objc_msgSend(a2, sel__value);
    return v16;
  }
  if (objc_msgSend(a2, sel_isCompatibleWithUnit_, a3))
  {
    id v14 = objc_msgSend(a1, sel_behavior);
    unsigned int v15 = objc_msgSend(v14, sel_chartsRelativeData);

    if (v15) {
      objc_msgSend(a2, sel__baselineRelativeDoubleValueForUnit_, a3);
    }
    else {
      objc_msgSend(a2, sel_doubleValueForUnit_, a3);
    }
    return v16;
  }
  sub_241CDA0F0();
  id v17 = a3;
  id v18 = a1;
  id v19 = v17;
  id v20 = v18;
  uint64_t v21 = sub_241CDA190();
  os_log_type_t v22 = sub_241CDB650();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    int v41 = v23;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v42 = v26;
    *(_DWORD *)uint64_t v25 = 136446722;
    uint64_t v43 = v9;
    uint64_t v44 = v26;
    uint64_t v45 = v7;
    swift_getMetatypeMetadata();
    os_log_t v40 = v21;
    uint64_t v27 = sub_241CDB120();
    uint64_t v45 = sub_241A33FE4(v27, v28, &v44);
    sub_241CDBBF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    id v29 = objc_msgSend(v19, sel_unitString);
    uint64_t v30 = sub_241CDB0D0();
    unint64_t v32 = v31;

    uint64_t v45 = sub_241A33FE4(v30, v32, &v44);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2080;
    id v33 = objc_msgSend(v20, sel_displayTypeIdentifierString);
    uint64_t v34 = sub_241CDB0D0();
    unint64_t v36 = v35;

    uint64_t v45 = sub_241A33FE4(v34, v36, &v44);
    sub_241CDBBF0();

    swift_bridgeObjectRelease();
    os_log_t v37 = v40;
    _os_log_impl(&dword_241A23000, v40, (os_log_type_t)v41, "[%{public}s] Preferred Unit %s isn't compatible with asked for quantity type: %s", (uint8_t *)v25, 0x20u);
    uint64_t v38 = v42;
    swift_arrayDestroy();
    MEMORY[0x245637F20](v38, -1, -1);
    MEMORY[0x245637F20](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v8);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return 0;
}

id SnidgetStringBuilder.makeFormattedNumber(displayType:value:)(void *a1, double a2)
{
  id v3 = objc_msgSend(a1, sel_presentation);
  id v4 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a2);
  id v5 = objc_msgSend(v3, sel_adjustedValueForDaemonValue_, v4);

  return v5;
}

uint64_t SnidgetStringBuilder.makeQuantityFormattedDouble(displayType:quantity:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(*(id *)(v2 + 24), sel_unitForChartingDisplayType_, a1);
  if (!v5) {
    id v5 = objc_msgSend(a2, sel__unit);
  }
  uint64_t v6 = SnidgetStringBuilder.makeSafeDouble(displayType:quantity:preferredUnit:)(a1, a2, v5);
  if (v7)
  {
  }
  else
  {
    id v8 = objc_msgSend(a1, sel_presentation);
    id v9 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)&v6);
    id v10 = objc_msgSend(v8, sel_adjustedValueForDaemonValue_, v9);

    objc_msgSend(v10, sel_doubleValue);
    uint64_t v12 = v11;

    return v12;
  }
  return v6;
}

uint64_t SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)()
{
  uint64_t v0 = sub_241CD6A10();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  id v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v8 - v5;
  sub_241CD6A00();
  void v8[2] = swift_getKeyPath();
  swift_getKeyPath();
  id v9 = (id)sub_241CD8F00();
  sub_241C04D80();
  sub_241CD69F0();
  v8[0] = swift_getKeyPath();
  swift_getKeyPath();
  id v9 = objc_msgSend(self, sel_labelColor);
  sub_241C04CEC();
  sub_241CD69F0();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  swift_bridgeObjectRetain();
  sub_241CD69C0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
}

uint64_t SnidgetStringBuilder.makeNoDataPrimaryAttributedString()()
{
  if (qword_26B038428 != -1) {
    swift_once();
  }
  sub_241CD69E0();
  SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();

  return swift_bridgeObjectRelease();
}

void SnidgetStringBuilder.makeQuantityPrimaryAttributedString(displayType:quantity:)(void *a1@<X0>, void *a2@<X1>, id a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v8 = sub_241CDA1A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)v3[3];
  id v13 = objc_msgSend(v12, sel_unitForChartingDisplayType_, a1);
  if (!v13) {
    id v13 = objc_msgSend(a2, sel__unit);
  }
  uint64_t v14 = SnidgetStringBuilder.makeSafeDouble(displayType:quantity:preferredUnit:)(a1, a2, v13);
  if (v15)
  {
    sub_241CDA0F0();
    id v26 = a1;
    uint64_t v27 = sub_241CDA190();
    os_log_type_t v28 = sub_241CDB650();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v44 = v30;
      *(_DWORD *)uint64_t v29 = 136446466;
      id v46 = a3;
      uint64_t v47 = v30;
      uint64_t v48 = v7;
      swift_getMetatypeMetadata();
      uint64_t v45 = v8;
      uint64_t v31 = sub_241CDB120();
      uint64_t v48 = sub_241A33FE4(v31, v32, &v47);
      uint64_t v43 = v9;
      sub_241CDBBF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      v42[1] = v29 + 14;
      id v33 = objc_msgSend(v26, sel_displayTypeIdentifierString);
      uint64_t v34 = sub_241CDB0D0();
      unint64_t v36 = v35;

      uint64_t v37 = v34;
      a3 = v46;
      uint64_t v48 = sub_241A33FE4(v37, v36, &v47);
      sub_241CDBBF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241A23000, v27, v28, "[%{public}s] Failed to create string for quantity type: %s", (uint8_t *)v29, 0x16u);
      uint64_t v38 = v44;
      swift_arrayDestroy();
      MEMORY[0x245637F20](v38, -1, -1);
      MEMORY[0x245637F20](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v45);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    uint64_t v39 = sub_241CD69B0();
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(a3, 1, 1, v39);
  }
  else
  {
    double v16 = *(double *)&v14;
    id v17 = objc_msgSend(a1, sel_presentation);
    id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v16);
    id v19 = objc_msgSend(v17, sel_adjustedValueForDaemonValue_, v18);

    id v46 = objc_msgSend(a1, sel_hk_valueFormatterForUnit_, v13);
    id v20 = v19;
    uint64_t v21 = (void *)sub_241CD8EF0();
    os_log_type_t v22 = (void *)sub_241CD8F10();
    id v23 = objc_msgSend(v46, sel_attributedStringFromValue_displayType_unitController_valueFont_unitFont_, v20, a1, v12, v21, v22);

    if (v23)
    {
      sub_241CD69D0();

      uint64_t v24 = sub_241CD69B0();
      uint64_t v25 = *(void (**)(id, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
      v25(a3, 0, 1, v24);
    }
    else
    {
      uint64_t v40 = sub_241CD69B0();
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(a3, 1, 1, v40);

      id v41 = v46;
    }
  }
}

uint64_t SnidgetStringBuilder.makeSupplementaryAttributedString(supplementaryLabelConfiguration:statisticsOption:aggregationInterval:supplementaryLabelInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  int v11 = a4 & 1;
  sub_241AE39A4();
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  char v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v15 = a3;
  v15[8] = v11;
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_241CD6644(a5, v16, &qword_26B038F10, MEMORY[0x263F062D0]);
  sub_241CD57BC(a1, a2, v16, a3, v11);
  if (v17)
  {
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    sub_241BD8AB4((uint64_t)v15);
    uint64_t v18 = sub_241CD69B0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a6, 0, 1, v18);
  }
  else
  {
    sub_241BD8AB4((uint64_t)v15);
    uint64_t v20 = sub_241CD69B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a6, 1, 1, v20);
  }
}

uint64_t SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)()
{
  uint64_t v0 = sub_241CD6A10();
  MEMORY[0x270FA5388](v0 - 8);
  swift_bridgeObjectRetain();
  sub_241CD6A00();
  sub_241CD69C0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_241CD8F10();
  sub_241C04D80();
  sub_241CD6950();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  objc_msgSend(self, sel_secondaryLabelColor, KeyPath);
  sub_241C04CEC();
  return sub_241CD6950();
}

uint64_t SnidgetStringBuilder.makeDateRangeSupplementaryAttributedString(dateRange:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F062D0];
  sub_241A35D9C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = (void (*)(uint64_t))MEMORY[0x263F46B90];
  sub_241A35D9C(0, &qword_26B0321B0, MEMORY[0x263F46B90]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = sub_241CD9DF0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F471B0], v11);
  uint64_t v15 = sub_241CD9840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
  uint64_t v16 = sub_241CD6810();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v6, a1, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
  sub_241CD57BC((uint64_t)v14, (uint64_t)v10, (uint64_t)v6, 0, 1);
  uint64_t v19 = v18;
  sub_241CD5D98((uint64_t)v6, &qword_26B038F10, v3);
  sub_241CD5D98((uint64_t)v10, &qword_26B0321B0, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v19)
  {
    uint64_t v20 = v25;
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_241CD69B0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  }
  else
  {
    uint64_t v23 = sub_241CD69B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v25, 1, 1, v23);
  }
}

uint64_t sub_241CD4AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241CD4B60(a1, a2, a3, &qword_268D43C98);
}

uint64_t sub_241CD4AF4(uint64_t a1, uint64_t a2)
{
  return sub_241CD4BD4(a1, a2, &qword_268D43C98);
}

void sub_241CD4B08()
{
}

void sub_241CD4B30()
{
}

uint64_t sub_241CD4B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241CD4B60(a1, a2, a3, &qword_268D43CA0);
}

uint64_t sub_241CD4B60(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  return sub_241CDB050() & 1;
}

uint64_t sub_241CD4BC0(uint64_t a1, uint64_t a2)
{
  return sub_241CD4BD4(a1, a2, &qword_268D43CA0);
}

uint64_t sub_241CD4BD4(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  return sub_241CDAFE0();
}

void sub_241CD4C20()
{
}

void sub_241CD4C48()
{
}

uint64_t LocalizationOverride.valueOverrideLocalizedStringKey.getter(uint64_t a1)
{
  return a1;
}

uint64_t LocalizationOverride.valueOverrideLocalizedStringTable.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

unint64_t sub_241CD4CD4()
{
  if (*v0) {
    return 0xD000000000000021;
  }
  else {
    return 0xD00000000000001FLL;
  }
}

uint64_t sub_241CD4D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_241CD5E48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241CD4D3C(uint64_t a1)
{
  unint64_t v2 = sub_241CD5DF4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241CD4D78(uint64_t a1)
{
  unint64_t v2 = sub_241CD5DF4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LocalizationOverride.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  sub_241CD6580(0, &qword_268D43C68, MEMORY[0x263F8E0C0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v13 - v10;
  sub_241A311E0(a1, a1[3]);
  sub_241CD5DF4();
  sub_241CDC230();
  char v15 = 0;
  sub_241CDC050();
  if (!v5)
  {
    char v14 = 1;
    sub_241CDC050();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t LocalizationOverride.init(from:)(void *a1)
{
  uint64_t result = sub_241CD5F34(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_241CD4F68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_241CD5F34(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_241CD4F98(void *a1)
{
  return LocalizationOverride.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_241CD4FB8(uint64_t *a1, uint64_t *a2)
{
  return _s9Summaries20LocalizationOverrideV23__derived_struct_equalsySbAC_ACtFZ_0(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_241CD4FD4()
{
  uint64_t v0 = sub_241CD6EE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241CD6EA0();
  id v4 = objc_allocWithZone(MEMORY[0x263F466D0]);
  uint64_t v5 = (void *)sub_241CD6E40();
  id v6 = objc_msgSend(v4, sel_initWithCalendar_, v5);

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_26B041148 = (uint64_t)v6;
  return result;
}

void *SnidgetStringBuilder.__allocating_init(healthStore:unitPreferenceController:viewControllerFactory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

void *SnidgetStringBuilder.__allocating_init(healthStore:)(void *a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = a1;
  uint64_t v3 = self;
  id v4 = a1;
  id v5 = objc_msgSend(v3, sel_sharedInstanceForHealthStore_, v4);
  v2[4] = v5;
  id v6 = v5;
  id v7 = objc_msgSend(v6, sel_createHKUnitPreferenceController);

  v2[3] = v7;
  return v2;
}

uint64_t SnidgetStringBuilder.__allocating_init(context:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_241CD76D0();
  sub_241CD76B0();
  sub_241A311E0(v12, v12[3]);
  uint64_t v5 = sub_241CD75F0();
  id v6 = self;
  id v7 = (void *)sub_241CD76D0();
  id v8 = objc_msgSend(v6, sel_sharedInstanceForHealthStore_, v7);

  uint64_t v9 = sub_241CD7740();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, id))(v2 + 104))(v4, v5, v8);
  sub_241A31190((uint64_t)v12);
  return v10;
}

uint64_t SnidgetStringBuilder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_241CD5334()
{
}

void sub_241CD5354()
{
}

uint64_t sub_241CD537C()
{
  return 8;
}

uint64_t sub_241CD5388()
{
  return swift_release();
}

uint64_t sub_241CD5390(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_241CD539C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241CD4B60(a1, a2, a3, &qword_268D43CA0) & 1;
}

uint64_t sub_241CD53C8(uint64_t a1, uint64_t a2)
{
  return sub_241CD4BD4(a1, a2, &qword_268D43CA0);
}

void *sub_241CD53DC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_241CD53E8()
{
}

void sub_241CD5408()
{
}

uint64_t sub_241CD5430()
{
  return 8;
}

uint64_t sub_241CD543C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241CD4B60(a1, a2, a3, &qword_268D43C98) & 1;
}

uint64_t sub_241CD5468(uint64_t a1, uint64_t a2)
{
  return sub_241CD4BD4(a1, a2, &qword_268D43C98);
}

uint64_t _s9Summaries20LocalizationOverrideV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a2)
  {
    if (a6) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!a6) {
    return 0;
  }
  if (a1 == a5 && a2 == a6 || (v12 = sub_241CDC100(), uint64_t result = 0, (v12 & 1) != 0))
  {
LABEL_8:
    if (a4)
    {
      if (a8 && (a3 == a7 && a4 == a8 || (sub_241CDC100() & 1) != 0)) {
        return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_241CD5530(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_241CD9840();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x263F46B58]) {
    goto LABEL_2;
  }
  int v12 = v10;
  if (v10 == *MEMORY[0x263F46B68] || v10 == *MEMORY[0x263F46B60]) {
    return 0xD000000000000028;
  }
  if (v10 == *MEMORY[0x263F46B48]) {
    return 0xD000000000000026;
  }
  if (v10 == *MEMORY[0x263F46B40]) {
    return 0xD000000000000027;
  }
  if (v10 == *MEMORY[0x263F46B80]) {
    return 0xD00000000000002FLL;
  }
  if (v10 == *MEMORY[0x263F46B50]) {
    goto LABEL_2;
  }
  unint64_t result = 0;
  if (v12 != *MEMORY[0x263F46B88] && v12 != *MEMORY[0x263F46B78])
  {
    if (v12 != *MEMORY[0x263F46B70])
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return 0;
    }
LABEL_2:
    if ((a3 & 1) == 0 && a2 > 1) {
      return 0xD000000000000028;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241CD57BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v35 = a5;
  uint64_t v36 = a4;
  uint64_t v34 = a3;
  uint64_t v38 = a2;
  sub_241A35D9C(0, &qword_26B038F10, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = sub_241CD6810();
  uint64_t v37 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v33 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241A35D9C(0, &qword_26B0321B0, MEMORY[0x263F46B90]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = sub_241CD9840();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_241CD9DF0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a1, v18);
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
  if (v22 == *MEMORY[0x263F471A8])
  {
    sub_241CD6644(v38, (uint64_t)v13, &qword_26B0321B0, MEMORY[0x263F46B90]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_241CD5D98((uint64_t)v13, &qword_26B0321B0, MEMORY[0x263F46B90]);
      return 0;
    }
    char v24 = v35 & 1;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    sub_241CD5530((uint64_t)v17, v36, v24);
    if (!v25)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return 0;
    }
    if (qword_26B038428 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_241CD69E0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  else
  {
    if (v22 != *MEMORY[0x263F471B0])
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      return 0;
    }
    sub_241CD6644(v34, (uint64_t)v8, &qword_26B038F10, MEMORY[0x263F062D0]);
    uint64_t v23 = v37;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v8, 1, v9) == 1)
    {
      sub_241CD5D98((uint64_t)v8, &qword_26B038F10, MEMORY[0x263F062D0]);
      return 0;
    }
    uint64_t v27 = v33;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v33, v8, v9);
    id v28 = objc_msgSend(self, sel_hk_mediumMonthDayDateIntervalFormatter);
    if (!v28)
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v9);
      return 0;
    }
    uint64_t v29 = v28;
    uint64_t v30 = (void *)sub_241CD6790();
    id v31 = objc_msgSend(v29, sel_stringFromDateInterval_, v30);

    if (v31)
    {
      uint64_t v26 = sub_241CDB0D0();
    }
    else
    {

      uint64_t v26 = 0;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v9);
  }
  return v26;
}

uint64_t sub_241CD5D98(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_241A35D9C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_241CD5DF4()
{
  unint64_t result = qword_268D43C70;
  if (!qword_268D43C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43C70);
  }
  return result;
}

uint64_t sub_241CD5E48(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001FLL && a2 == 0x8000000241CE5C90 || (sub_241CDC100() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000241CE5CB0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_241CDC100();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_241CD5F34(void *a1)
{
  sub_241CD6580(0, &qword_268D43C90, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  sub_241A311E0(a1, a1[3]);
  sub_241CD5DF4();
  sub_241CDC220();
  if (v1)
  {
    sub_241A31190((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_241CDBFE0();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_241CDBFE0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    sub_241A31190((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t destroy for LocalizationOverride()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LocalizationOverride(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LocalizationOverride(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for LocalizationOverride(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for LocalizationOverride(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizationOverride(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizationOverride(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationOverride()
{
  return &type metadata for LocalizationOverride;
}

uint64_t type metadata accessor for SnidgetStringBuilder()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for LocalizationOverride.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241CD6440);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationOverride.CodingKeys()
{
  return &type metadata for LocalizationOverride.CodingKeys;
}

unint64_t sub_241CD647C()
{
  unint64_t result = qword_268D43C78;
  if (!qword_268D43C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43C78);
  }
  return result;
}

unint64_t sub_241CD64D4()
{
  unint64_t result = qword_268D43C80;
  if (!qword_268D43C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43C80);
  }
  return result;
}

unint64_t sub_241CD652C()
{
  unint64_t result = qword_268D43C88;
  if (!qword_268D43C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268D43C88);
  }
  return result;
}

void sub_241CD6580(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_241CD5DF4();
    unint64_t v7 = a3(a1, &type metadata for LocalizationOverride.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241CD65E4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_241CD6920();
    unint64_t v3 = sub_241CDC240();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_241CD6644(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_241A35D9C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_241CD66E0()
{
  return MEMORY[0x270EEDD38]();
}

uint64_t sub_241CD66F0()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_241CD6700()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_241CD6710()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_241CD6720()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_241CD6730()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_241CD6740()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_241CD6750()
{
  return MEMORY[0x270EEE070]();
}

uint64_t sub_241CD6760()
{
  return MEMORY[0x270EEE2B0]();
}

uint64_t sub_241CD6770()
{
  return MEMORY[0x270F31B80]();
}

uint64_t sub_241CD6780()
{
  return MEMORY[0x270F31B88]();
}

uint64_t sub_241CD6790()
{
  return MEMORY[0x270EEE2C8]();
}

uint64_t sub_241CD67A0()
{
  return MEMORY[0x270EEE2E8]();
}

uint64_t sub_241CD67B0()
{
  return MEMORY[0x270EEE2F0]();
}

uint64_t sub_241CD67C0()
{
  return MEMORY[0x270EEE2F8]();
}

uint64_t sub_241CD67D0()
{
  return MEMORY[0x270EEE300]();
}

uint64_t sub_241CD67E0()
{
  return MEMORY[0x270EEE308]();
}

uint64_t sub_241CD67F0()
{
  return MEMORY[0x270EEE318]();
}

uint64_t sub_241CD6800()
{
  return MEMORY[0x270EEE328]();
}

uint64_t sub_241CD6810()
{
  return MEMORY[0x270EEE338]();
}

uint64_t sub_241CD6820()
{
  return MEMORY[0x270EEE378]();
}

uint64_t sub_241CD6830()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_241CD6840()
{
  return MEMORY[0x270EEE478]();
}

uint64_t sub_241CD6850()
{
  return MEMORY[0x270EEE480]();
}

uint64_t sub_241CD6860()
{
  return MEMORY[0x270EEE488]();
}

uint64_t sub_241CD6870()
{
  return MEMORY[0x270EEE490]();
}

uint64_t sub_241CD6880()
{
  return MEMORY[0x270EEE6D0]();
}

uint64_t sub_241CD6890()
{
  return MEMORY[0x270EEE738]();
}

uint64_t sub_241CD68A0()
{
  return MEMORY[0x270EEE768]();
}

uint64_t sub_241CD68B0()
{
  return MEMORY[0x270EEE7D8]();
}

uint64_t sub_241CD68C0()
{
  return MEMORY[0x270EEE800]();
}

uint64_t sub_241CD68D0()
{
  return MEMORY[0x270EEE890]();
}

uint64_t sub_241CD68E0()
{
  return MEMORY[0x270EEE8C8]();
}

uint64_t sub_241CD68F0()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_241CD6900()
{
  return MEMORY[0x270F816B0]();
}

uint64_t sub_241CD6910()
{
  return MEMORY[0x270F816C0]();
}

uint64_t sub_241CD6920()
{
  return MEMORY[0x270F816C8]();
}

uint64_t sub_241CD6930()
{
  return MEMORY[0x270EEEA90]();
}

uint64_t sub_241CD6940()
{
  return MEMORY[0x270EEEAE8]();
}

uint64_t sub_241CD6950()
{
  return MEMORY[0x270EEEB18]();
}

uint64_t sub_241CD6960()
{
  return MEMORY[0x270EEEBD0]();
}

uint64_t sub_241CD6970()
{
  return MEMORY[0x270EEEBD8]();
}

uint64_t sub_241CD6980()
{
  return MEMORY[0x270EEED40]();
}

uint64_t sub_241CD6990()
{
  return MEMORY[0x270EEED98]();
}

uint64_t sub_241CD69A0()
{
  return MEMORY[0x270EEEDD0]();
}

uint64_t sub_241CD69B0()
{
  return MEMORY[0x270EEEDD8]();
}

uint64_t sub_241CD69C0()
{
  return MEMORY[0x270EEEDF0]();
}

uint64_t sub_241CD69D0()
{
  return MEMORY[0x270EEEE40]();
}

uint64_t sub_241CD69E0()
{
  return MEMORY[0x270EEEEC0]();
}

uint64_t sub_241CD69F0()
{
  return MEMORY[0x270EEF020]();
}

uint64_t sub_241CD6A00()
{
  return MEMORY[0x270EEF060]();
}

uint64_t sub_241CD6A10()
{
  return MEMORY[0x270EEF070]();
}

uint64_t sub_241CD6A20()
{
  return MEMORY[0x270F816D8]();
}

uint64_t sub_241CD6A30()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_241CD6A40()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_241CD6A50()
{
  return MEMORY[0x270EEFA08]();
}

uint64_t sub_241CD6A60()
{
  return MEMORY[0x270EEFA18]();
}

uint64_t sub_241CD6A70()
{
  return MEMORY[0x270EEFB78]();
}

uint64_t sub_241CD6A80()
{
  return MEMORY[0x270EEFB88]();
}

uint64_t sub_241CD6A90()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_241CD6AA0()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_241CD6AB0()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_241CD6AC0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_241CD6AD0()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_241CD6AE0()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_241CD6AF0()
{
  return MEMORY[0x270EF02B0]();
}

uint64_t sub_241CD6B00()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_241CD6B10()
{
  return MEMORY[0x270EF0320]();
}

uint64_t sub_241CD6B20()
{
  return MEMORY[0x270EF0360]();
}

uint64_t sub_241CD6B30()
{
  return MEMORY[0x270EF0428]();
}

uint64_t sub_241CD6B40()
{
  return MEMORY[0x270EF0430]();
}

uint64_t sub_241CD6B50()
{
  return MEMORY[0x270EF04D0]();
}

uint64_t sub_241CD6B60()
{
  return MEMORY[0x270EF04E8]();
}

uint64_t sub_241CD6B70()
{
  return MEMORY[0x270EF0500]();
}

uint64_t sub_241CD6B80()
{
  return MEMORY[0x270EF0508]();
}

uint64_t sub_241CD6B90()
{
  return MEMORY[0x270EF0518]();
}

uint64_t sub_241CD6BA0()
{
  return MEMORY[0x270EF05A0]();
}

uint64_t sub_241CD6BB0()
{
  return MEMORY[0x270EF05B8]();
}

uint64_t sub_241CD6BC0()
{
  return MEMORY[0x270EF0690]();
}

uint64_t sub_241CD6BD0()
{
  return MEMORY[0x270EF06E0]();
}

uint64_t sub_241CD6BE0()
{
  return MEMORY[0x270EF06F8]();
}

uint64_t sub_241CD6BF0()
{
  return MEMORY[0x270EF0700]();
}

uint64_t sub_241CD6C00()
{
  return MEMORY[0x270EF07A0]();
}

uint64_t sub_241CD6C10()
{
  return MEMORY[0x270F31B98]();
}

uint64_t sub_241CD6C20()
{
  return MEMORY[0x270F31BB8]();
}

uint64_t sub_241CD6C30()
{
  return MEMORY[0x270F31BD8]();
}

uint64_t sub_241CD6C40()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_241CD6C50()
{
  return MEMORY[0x270EF0898]();
}

uint64_t sub_241CD6C60()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_241CD6C70()
{
  return MEMORY[0x270EF09A8]();
}

uint64_t sub_241CD6C80()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_241CD6C90()
{
  return MEMORY[0x270EF09C8]();
}

uint64_t sub_241CD6CA0()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_241CD6CB0()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_241CD6CC0()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_241CD6CD0()
{
  return MEMORY[0x270EF0BD8]();
}

uint64_t sub_241CD6CE0()
{
  return MEMORY[0x270EF0C20]();
}

uint64_t sub_241CD6CF0()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_241CD6D00()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_241CD6D10()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_241CD6D20()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_241CD6D30()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_241CD6D40()
{
  return MEMORY[0x270EF0C98]();
}

uint64_t sub_241CD6D50()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_241CD6D60()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_241CD6D70()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_241CD6D80()
{
  return MEMORY[0x270EF0D78]();
}

uint64_t sub_241CD6D90()
{
  return MEMORY[0x270EF0D80]();
}

uint64_t sub_241CD6DA0()
{
  return MEMORY[0x270EF0EE0]();
}

uint64_t sub_241CD6DB0()
{
  return MEMORY[0x270EF0EF8]();
}

uint64_t sub_241CD6DC0()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_241CD6DD0()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_241CD6DE0()
{
  return MEMORY[0x270EF10C8]();
}

uint64_t sub_241CD6DF0()
{
  return MEMORY[0x270EF10D8]();
}

uint64_t sub_241CD6E00()
{
  return MEMORY[0x270EF1100]();
}

uint64_t sub_241CD6E10()
{
  return MEMORY[0x270EF1150]();
}

uint64_t sub_241CD6E20()
{
  return MEMORY[0x270EF1248]();
}

uint64_t sub_241CD6E30()
{
  return MEMORY[0x270EF1258]();
}

uint64_t sub_241CD6E40()
{
  return MEMORY[0x270EF12C8]();
}

uint64_t sub_241CD6E50()
{
  return MEMORY[0x270EF1350]();
}

uint64_t sub_241CD6E60()
{
  return MEMORY[0x270EF1368]();
}

uint64_t sub_241CD6E70()
{
  return MEMORY[0x270EF1388]();
}

uint64_t sub_241CD6E80()
{
  return MEMORY[0x270EF13C0]();
}

uint64_t sub_241CD6E90()
{
  return MEMORY[0x270EF13C8]();
}

uint64_t sub_241CD6EA0()
{
  return MEMORY[0x270EF13D8]();
}

uint64_t sub_241CD6EB0()
{
  return MEMORY[0x270EF1400]();
}

uint64_t sub_241CD6EC0()
{
  return MEMORY[0x270EF1410]();
}

uint64_t sub_241CD6ED0()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_241CD6EE0()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_241CD6EF0()
{
  return MEMORY[0x270EF1570]();
}

uint64_t sub_241CD6F00()
{
  return MEMORY[0x270EF1580]();
}

uint64_t sub_241CD6F10()
{
  return MEMORY[0x270EF15C8]();
}

uint64_t sub_241CD6F20()
{
  return MEMORY[0x270EF15D0]();
}

uint64_t sub_241CD6F30()
{
  return MEMORY[0x270EF15E8]();
}

uint64_t sub_241CD6F40()
{
  return MEMORY[0x270EF1600]();
}

uint64_t sub_241CD6F50()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_241CD6F60()
{
  return MEMORY[0x270F32658]();
}

uint64_t sub_241CD6F70()
{
  return MEMORY[0x270F31138]();
}

uint64_t sub_241CD6F80()
{
  return MEMORY[0x270F31140]();
}

uint64_t sub_241CD6F90()
{
  return MEMORY[0x270F311E0]();
}

uint64_t sub_241CD6FB0()
{
  return MEMORY[0x270F31200]();
}

uint64_t sub_241CD6FC0()
{
  return MEMORY[0x270F31208]();
}

uint64_t sub_241CD6FD0()
{
  return MEMORY[0x270F318B0]();
}

uint64_t sub_241CD6FE0()
{
  return MEMORY[0x270F31218]();
}

uint64_t sub_241CD6FF0()
{
  return MEMORY[0x270F31220]();
}

uint64_t sub_241CD7000()
{
  return MEMORY[0x270F31228]();
}

uint64_t sub_241CD7010()
{
  return MEMORY[0x270F31230]();
}

uint64_t sub_241CD7020()
{
  return MEMORY[0x270F31250]();
}

uint64_t sub_241CD7030()
{
  return MEMORY[0x270F31268]();
}

uint64_t sub_241CD7040()
{
  return MEMORY[0x270F31278]();
}

uint64_t sub_241CD7050()
{
  return MEMORY[0x270F31280]();
}

uint64_t sub_241CD7060()
{
  return MEMORY[0x270F31290]();
}

uint64_t sub_241CD7070()
{
  return MEMORY[0x270F31298]();
}

uint64_t sub_241CD7080()
{
  return MEMORY[0x270F312A0]();
}

uint64_t sub_241CD7090()
{
  return MEMORY[0x270F312C0]();
}

uint64_t sub_241CD70A0()
{
  return MEMORY[0x270F312C8]();
}

uint64_t sub_241CD70B0()
{
  return MEMORY[0x270F312D0]();
}

uint64_t sub_241CD70C0()
{
  return MEMORY[0x270F31318]();
}

uint64_t sub_241CD70D0()
{
  return MEMORY[0x270F31320]();
}

uint64_t sub_241CD70E0()
{
  return MEMORY[0x270F31330]();
}

uint64_t sub_241CD70F0()
{
  return MEMORY[0x270F31350]();
}

uint64_t sub_241CD7100()
{
  return MEMORY[0x270F31428]();
}

uint64_t sub_241CD7110()
{
  return MEMORY[0x270F31430]();
}

uint64_t sub_241CD7120()
{
  return MEMORY[0x270F31468]();
}

uint64_t sub_241CD7130()
{
  return MEMORY[0x270F31478]();
}

uint64_t sub_241CD7140()
{
  return MEMORY[0x270F31488]();
}

uint64_t sub_241CD7150()
{
  return MEMORY[0x270F314C8]();
}

uint64_t sub_241CD7160()
{
  return MEMORY[0x270F314E0]();
}

uint64_t sub_241CD7170()
{
  return MEMORY[0x270F314F0]();
}

uint64_t sub_241CD7180()
{
  return MEMORY[0x270F314F8]();
}

uint64_t sub_241CD7190()
{
  return MEMORY[0x270F31500]();
}

uint64_t sub_241CD71A0()
{
  return MEMORY[0x270F315C0]();
}

uint64_t sub_241CD71B0()
{
  return MEMORY[0x270F315C8]();
}

uint64_t sub_241CD71C0()
{
  return MEMORY[0x270F315F8]();
}

uint64_t sub_241CD71D0()
{
  return MEMORY[0x270F31600]();
}

uint64_t sub_241CD71E0()
{
  return MEMORY[0x270F31608]();
}

uint64_t sub_241CD71F0()
{
  return MEMORY[0x270F31780]();
}

uint64_t sub_241CD7200()
{
  return MEMORY[0x270F317A0]();
}

uint64_t sub_241CD7210()
{
  return MEMORY[0x270F317A8]();
}

uint64_t sub_241CD7230()
{
  return MEMORY[0x270F36160]();
}

uint64_t sub_241CD7240()
{
  return MEMORY[0x270F36168]();
}

uint64_t sub_241CD7260()
{
  return MEMORY[0x270F36180]();
}

uint64_t sub_241CD7270()
{
  return MEMORY[0x270F36198]();
}

uint64_t sub_241CD7280()
{
  return MEMORY[0x270F361B8]();
}

uint64_t sub_241CD7290()
{
  return MEMORY[0x270F361C0]();
}

uint64_t sub_241CD72A0()
{
  return MEMORY[0x270F361F0]();
}

uint64_t sub_241CD72B0()
{
  return MEMORY[0x270F361F8]();
}

uint64_t sub_241CD72C0()
{
  return MEMORY[0x270F36200]();
}

uint64_t sub_241CD72D0()
{
  return MEMORY[0x270F36208]();
}

uint64_t sub_241CD72E0()
{
  return MEMORY[0x270F36210]();
}

uint64_t sub_241CD72F0()
{
  return MEMORY[0x270F36220]();
}

uint64_t sub_241CD7300()
{
  return MEMORY[0x270F36228]();
}

uint64_t sub_241CD7310()
{
  return MEMORY[0x270F36230]();
}

uint64_t sub_241CD7320()
{
  return MEMORY[0x270F36238]();
}

uint64_t sub_241CD7330()
{
  return MEMORY[0x270F36248]();
}

uint64_t sub_241CD7340()
{
  return MEMORY[0x270F36250]();
}

uint64_t sub_241CD7350()
{
  return MEMORY[0x270F36258]();
}

uint64_t sub_241CD7360()
{
  return MEMORY[0x270F36260]();
}

uint64_t sub_241CD7370()
{
  return MEMORY[0x270F36280]();
}

uint64_t sub_241CD7380()
{
  return MEMORY[0x270F36288]();
}

uint64_t sub_241CD7390()
{
  return MEMORY[0x270F36290]();
}

uint64_t sub_241CD73A0()
{
  return MEMORY[0x270F36298]();
}

uint64_t sub_241CD73B0()
{
  return MEMORY[0x270F362C0]();
}

uint64_t sub_241CD73C0()
{
  return MEMORY[0x270F36320]();
}

uint64_t sub_241CD73D0()
{
  return MEMORY[0x270F36328]();
}

uint64_t sub_241CD73E0()
{
  return MEMORY[0x270F36330]();
}

uint64_t sub_241CD73F0()
{
  return MEMORY[0x270F36338]();
}

uint64_t sub_241CD7400()
{
  return MEMORY[0x270F36340]();
}

uint64_t sub_241CD7410()
{
  return MEMORY[0x270F36348]();
}

uint64_t sub_241CD7420()
{
  return MEMORY[0x270F36380]();
}

uint64_t sub_241CD7430()
{
  return MEMORY[0x270F32680]();
}

uint64_t sub_241CD7440()
{
  return MEMORY[0x270F32688]();
}

uint64_t sub_241CD7450()
{
  return MEMORY[0x270F36390]();
}

uint64_t sub_241CD7460()
{
  return MEMORY[0x270F363B8]();
}

uint64_t sub_241CD7470()
{
  return MEMORY[0x270F363D8]();
}

uint64_t sub_241CD7480()
{
  return MEMORY[0x270F363E8]();
}

uint64_t sub_241CD7490()
{
  return MEMORY[0x270F363F8]();
}

uint64_t sub_241CD74A0()
{
  return MEMORY[0x270F36400]();
}

uint64_t sub_241CD74B0()
{
  return MEMORY[0x270F36408]();
}

uint64_t sub_241CD74C0()
{
  return MEMORY[0x270F36420]();
}

uint64_t sub_241CD74D0()
{
  return MEMORY[0x270F36460]();
}

uint64_t sub_241CD74E0()
{
  return MEMORY[0x270F36470]();
}

uint64_t sub_241CD74F0()
{
  return MEMORY[0x270F36488]();
}

uint64_t sub_241CD7500()
{
  return MEMORY[0x270F36490]();
}

uint64_t sub_241CD7510()
{
  return MEMORY[0x270F36498]();
}

uint64_t sub_241CD7520()
{
  return MEMORY[0x270F364A0]();
}

uint64_t sub_241CD7530()
{
  return MEMORY[0x270F364B0]();
}

uint64_t sub_241CD7540()
{
  return MEMORY[0x270F364C0]();
}

uint64_t sub_241CD7550()
{
  return MEMORY[0x270F364C8]();
}

uint64_t sub_241CD7560()
{
  return MEMORY[0x270F364D0]();
}

uint64_t sub_241CD7570()
{
  return MEMORY[0x270F364D8]();
}

uint64_t sub_241CD7580()
{
  return MEMORY[0x270F364F0]();
}

uint64_t sub_241CD7590()
{
  return MEMORY[0x270F364F8]();
}

uint64_t sub_241CD75A0()
{
  return MEMORY[0x270F36500]();
}

uint64_t sub_241CD75B0()
{
  return MEMORY[0x270F36528]();
}

uint64_t sub_241CD75C0()
{
  return MEMORY[0x270F36538]();
}

uint64_t sub_241CD75D0()
{
  return MEMORY[0x270F36540]();
}

uint64_t sub_241CD75E0()
{
  return MEMORY[0x270F36548]();
}

uint64_t sub_241CD75F0()
{
  return MEMORY[0x270F36558]();
}

uint64_t sub_241CD7600()
{
  return MEMORY[0x270F36578]();
}

uint64_t sub_241CD7610()
{
  return MEMORY[0x270F36590]();
}

uint64_t sub_241CD7620()
{
  return MEMORY[0x270F365A8]();
}

uint64_t sub_241CD7630()
{
  return MEMORY[0x270F365B0]();
}

uint64_t sub_241CD7640()
{
  return MEMORY[0x270F365B8]();
}

uint64_t sub_241CD7650()
{
  return MEMORY[0x270F365D8]();
}

uint64_t sub_241CD7660()
{
  return MEMORY[0x270F365E8]();
}

uint64_t sub_241CD7670()
{
  return MEMORY[0x270F365F0]();
}

uint64_t sub_241CD7680()
{
  return MEMORY[0x270F365F8]();
}

uint64_t sub_241CD7690()
{
  return MEMORY[0x270F36608]();
}

uint64_t sub_241CD76A0()
{
  return MEMORY[0x270F36610]();
}

uint64_t sub_241CD76B0()
{
  return MEMORY[0x270F36618]();
}

uint64_t sub_241CD76C0()
{
  return MEMORY[0x270F36620]();
}

uint64_t sub_241CD76D0()
{
  return MEMORY[0x270F36628]();
}

uint64_t sub_241CD76E0()
{
  return MEMORY[0x270F36630]();
}

uint64_t sub_241CD76F0()
{
  return MEMORY[0x270F36638]();
}

uint64_t sub_241CD7700()
{
  return MEMORY[0x270F36640]();
}

uint64_t sub_241CD7710()
{
  return MEMORY[0x270F36648]();
}

uint64_t sub_241CD7720()
{
  return MEMORY[0x270F36650]();
}

uint64_t sub_241CD7730()
{
  return MEMORY[0x270F36658]();
}

uint64_t sub_241CD7740()
{
  return MEMORY[0x270F36660]();
}

uint64_t sub_241CD7750()
{
  return MEMORY[0x270F36670]();
}

uint64_t sub_241CD7760()
{
  return MEMORY[0x270F36690]();
}

uint64_t sub_241CD7770()
{
  return MEMORY[0x270F36698]();
}

uint64_t sub_241CD7780()
{
  return MEMORY[0x270F366A0]();
}

uint64_t sub_241CD7790()
{
  return MEMORY[0x270F366A8]();
}

uint64_t sub_241CD77A0()
{
  return MEMORY[0x270F366B0]();
}

uint64_t sub_241CD77B0()
{
  return MEMORY[0x270F366B8]();
}

uint64_t sub_241CD77C0()
{
  return MEMORY[0x270F366C0]();
}

uint64_t sub_241CD77D0()
{
  return MEMORY[0x270F366C8]();
}

uint64_t sub_241CD77E0()
{
  return MEMORY[0x270F366D8]();
}

uint64_t sub_241CD77F0()
{
  return MEMORY[0x270F366E8]();
}

uint64_t sub_241CD7800()
{
  return MEMORY[0x270F366F0]();
}

uint64_t sub_241CD7810()
{
  return MEMORY[0x270F366F8]();
}

uint64_t sub_241CD7820()
{
  return MEMORY[0x270F36700]();
}

uint64_t sub_241CD7830()
{
  return MEMORY[0x270F36710]();
}

uint64_t sub_241CD7840()
{
  return MEMORY[0x270F36808]();
}

uint64_t sub_241CD7850()
{
  return MEMORY[0x270F36848]();
}

uint64_t sub_241CD7860()
{
  return MEMORY[0x270F36850]();
}

uint64_t sub_241CD7870()
{
  return MEMORY[0x270F36868]();
}

uint64_t sub_241CD7880()
{
  return MEMORY[0x270F368A8]();
}

uint64_t sub_241CD7890()
{
  return MEMORY[0x270F368B0]();
}

uint64_t sub_241CD78A0()
{
  return MEMORY[0x270F368B8]();
}

uint64_t sub_241CD78B0()
{
  return MEMORY[0x270F368C0]();
}

uint64_t sub_241CD78C0()
{
  return MEMORY[0x270F368D0]();
}

uint64_t sub_241CD78D0()
{
  return MEMORY[0x270F368D8]();
}

uint64_t sub_241CD78E0()
{
  return MEMORY[0x270F368E8]();
}

uint64_t sub_241CD78F0()
{
  return MEMORY[0x270F368F0]();
}

uint64_t sub_241CD7900()
{
  return MEMORY[0x270F368F8]();
}

uint64_t sub_241CD7910()
{
  return MEMORY[0x270F36900]();
}

uint64_t sub_241CD7920()
{
  return MEMORY[0x270F36908]();
}

uint64_t sub_241CD7930()
{
  return MEMORY[0x270F36910]();
}

uint64_t sub_241CD7940()
{
  return MEMORY[0x270F36918]();
}

uint64_t sub_241CD7950()
{
  return MEMORY[0x270F36920]();
}

uint64_t sub_241CD7960()
{
  return MEMORY[0x270F36928]();
}

uint64_t sub_241CD7970()
{
  return MEMORY[0x270F36930]();
}

uint64_t sub_241CD7980()
{
  return MEMORY[0x270F36938]();
}

uint64_t sub_241CD7990()
{
  return MEMORY[0x270F36940]();
}

uint64_t sub_241CD79A0()
{
  return MEMORY[0x270F36948]();
}

uint64_t sub_241CD79B0()
{
  return MEMORY[0x270F36950]();
}

uint64_t sub_241CD79C0()
{
  return MEMORY[0x270F36958]();
}

uint64_t sub_241CD79D0()
{
  return MEMORY[0x270F369A8]();
}

uint64_t sub_241CD79E0()
{
  return MEMORY[0x270F369B0]();
}

uint64_t sub_241CD79F0()
{
  return MEMORY[0x270F369B8]();
}

uint64_t sub_241CD7A00()
{
  return MEMORY[0x270F369C0]();
}

uint64_t sub_241CD7A10()
{
  return MEMORY[0x270F369C8]();
}

uint64_t sub_241CD7A20()
{
  return MEMORY[0x270F369D0]();
}

uint64_t sub_241CD7A30()
{
  return MEMORY[0x270F369E8]();
}

uint64_t sub_241CD7A40()
{
  return MEMORY[0x270F369F0]();
}

uint64_t sub_241CD7A50()
{
  return MEMORY[0x270F369F8]();
}

uint64_t sub_241CD7A60()
{
  return MEMORY[0x270F36A00]();
}

uint64_t sub_241CD7A70()
{
  return MEMORY[0x270F36A08]();
}

uint64_t sub_241CD7A80()
{
  return MEMORY[0x270F36A10]();
}

uint64_t sub_241CD7A90()
{
  return MEMORY[0x270F36A18]();
}

uint64_t sub_241CD7AA0()
{
  return MEMORY[0x270F36A20]();
}

uint64_t sub_241CD7AB0()
{
  return MEMORY[0x270F36A28]();
}

uint64_t sub_241CD7AC0()
{
  return MEMORY[0x270F36A30]();
}

uint64_t sub_241CD7AD0()
{
  return MEMORY[0x270F36A38]();
}

uint64_t sub_241CD7AE0()
{
  return MEMORY[0x270F36A40]();
}

uint64_t sub_241CD7AF0()
{
  return MEMORY[0x270F36A48]();
}

uint64_t sub_241CD7B00()
{
  return MEMORY[0x270F36A50]();
}

uint64_t sub_241CD7B10()
{
  return MEMORY[0x270F36A78]();
}

uint64_t sub_241CD7B20()
{
  return MEMORY[0x270F36AA0]();
}

uint64_t sub_241CD7B30()
{
  return MEMORY[0x270F36AB8]();
}

uint64_t sub_241CD7B40()
{
  return MEMORY[0x270F36AC0]();
}

uint64_t sub_241CD7B50()
{
  return MEMORY[0x270F36AC8]();
}

uint64_t sub_241CD7B60()
{
  return MEMORY[0x270F36AD0]();
}

uint64_t sub_241CD7B70()
{
  return MEMORY[0x270F36AD8]();
}

uint64_t sub_241CD7B80()
{
  return MEMORY[0x270F36AE0]();
}

uint64_t sub_241CD7B90()
{
  return MEMORY[0x270F36AE8]();
}

uint64_t sub_241CD7BA0()
{
  return MEMORY[0x270F36AF0]();
}

uint64_t sub_241CD7BB0()
{
  return MEMORY[0x270F36AF8]();
}

uint64_t sub_241CD7BC0()
{
  return MEMORY[0x270F36B00]();
}

uint64_t sub_241CD7BD0()
{
  return MEMORY[0x270F36B08]();
}

uint64_t sub_241CD7BE0()
{
  return MEMORY[0x270F36B10]();
}

uint64_t sub_241CD7BF0()
{
  return MEMORY[0x270F36B18]();
}

uint64_t sub_241CD7C00()
{
  return MEMORY[0x270F36B20]();
}

uint64_t sub_241CD7C10()
{
  return MEMORY[0x270F36B28]();
}

uint64_t sub_241CD7C20()
{
  return MEMORY[0x270F36B78]();
}

uint64_t sub_241CD7C30()
{
  return MEMORY[0x270F36B88]();
}

uint64_t sub_241CD7C40()
{
  return MEMORY[0x270F36B90]();
}

uint64_t sub_241CD7C50()
{
  return MEMORY[0x270F36BA0]();
}

uint64_t sub_241CD7C60()
{
  return MEMORY[0x270F36BA8]();
}

uint64_t sub_241CD7C70()
{
  return MEMORY[0x270F36BB0]();
}

uint64_t sub_241CD7C90()
{
  return MEMORY[0x270F36C00]();
}

uint64_t sub_241CD7CA0()
{
  return MEMORY[0x270F36C08]();
}

uint64_t sub_241CD7CB0()
{
  return MEMORY[0x270F36C28]();
}

uint64_t sub_241CD7CC0()
{
  return MEMORY[0x270F36C30]();
}

uint64_t sub_241CD7CD0()
{
  return MEMORY[0x270F36C60]();
}

uint64_t sub_241CD7CE0()
{
  return MEMORY[0x270F36C68]();
}

uint64_t sub_241CD7CF0()
{
  return MEMORY[0x270F36C70]();
}

uint64_t sub_241CD7D00()
{
  return MEMORY[0x270F36C78]();
}

uint64_t sub_241CD7D10()
{
  return MEMORY[0x270F36C80]();
}

uint64_t sub_241CD7D20()
{
  return MEMORY[0x270F36C88]();
}

uint64_t sub_241CD7D30()
{
  return MEMORY[0x270F36C90]();
}

uint64_t sub_241CD7D40()
{
  return MEMORY[0x270F36C98]();
}

uint64_t sub_241CD7D50()
{
  return MEMORY[0x270F36CA0]();
}

uint64_t sub_241CD7D60()
{
  return MEMORY[0x270F36CA8]();
}

uint64_t sub_241CD7D70()
{
  return MEMORY[0x270F36CB0]();
}

uint64_t sub_241CD7D80()
{
  return MEMORY[0x270F36CE8]();
}

uint64_t sub_241CD7D90()
{
  return MEMORY[0x270F36CF0]();
}

uint64_t sub_241CD7DA0()
{
  return MEMORY[0x270F36D00]();
}

uint64_t sub_241CD7DB0()
{
  return MEMORY[0x270F36D08]();
}

uint64_t sub_241CD7DC0()
{
  return MEMORY[0x270F36D10]();
}

uint64_t sub_241CD7DD0()
{
  return MEMORY[0x270F36D18]();
}

uint64_t sub_241CD7DE0()
{
  return MEMORY[0x270F36D28]();
}

uint64_t sub_241CD7DF0()
{
  return MEMORY[0x270F36D30]();
}

uint64_t sub_241CD7E00()
{
  return MEMORY[0x270F36D38]();
}

uint64_t sub_241CD7E10()
{
  return MEMORY[0x270F36D40]();
}

uint64_t sub_241CD7E20()
{
  return MEMORY[0x270F36D48]();
}

uint64_t sub_241CD7E30()
{
  return MEMORY[0x270F36D50]();
}

uint64_t sub_241CD7E40()
{
  return MEMORY[0x270F36D58]();
}

uint64_t sub_241CD7E50()
{
  return MEMORY[0x270F36D80]();
}

uint64_t sub_241CD7E60()
{
  return MEMORY[0x270F36D88]();
}

uint64_t sub_241CD7E70()
{
  return MEMORY[0x270F32698]();
}

uint64_t sub_241CD7E80()
{
  return MEMORY[0x270F36FD0]();
}

uint64_t sub_241CD7E90()
{
  return MEMORY[0x270F36FF8]();
}

uint64_t sub_241CD7EA0()
{
  return MEMORY[0x270F36DC8]();
}

uint64_t sub_241CD7EB0()
{
  return MEMORY[0x270F36DD0]();
}

uint64_t sub_241CD7EC0()
{
  return MEMORY[0x270F36DE8]();
}

uint64_t sub_241CD7ED0()
{
  return MEMORY[0x270F4A588]();
}

uint64_t sub_241CD7EE0()
{
  return MEMORY[0x270F4A590]();
}

uint64_t sub_241CD7EF0()
{
  return MEMORY[0x270F4A598]();
}

uint64_t sub_241CD7F00()
{
  return MEMORY[0x270F31CB0]();
}

uint64_t sub_241CD7F10()
{
  return MEMORY[0x270F31D20]();
}

uint64_t sub_241CD7F20()
{
  return MEMORY[0x270F31E00]();
}

uint64_t sub_241CD7F30()
{
  return MEMORY[0x270F31E08]();
}

uint64_t sub_241CD7F40()
{
  return MEMORY[0x270F31E50]();
}

uint64_t sub_241CD7F50()
{
  return MEMORY[0x270F31E68]();
}

uint64_t sub_241CD7F60()
{
  return MEMORY[0x270F31E70]();
}

uint64_t sub_241CD7F70()
{
  return MEMORY[0x270F31E78]();
}

uint64_t sub_241CD7F80()
{
  return MEMORY[0x270F31E80]();
}

uint64_t sub_241CD7F90()
{
  return MEMORY[0x270F31E88]();
}

uint64_t sub_241CD7FA0()
{
  return MEMORY[0x270F31E90]();
}

uint64_t sub_241CD7FB0()
{
  return MEMORY[0x270F31E98]();
}

uint64_t sub_241CD7FC0()
{
  return MEMORY[0x270F31EB0]();
}

uint64_t sub_241CD7FD0()
{
  return MEMORY[0x270F31EB8]();
}

uint64_t sub_241CD7FE0()
{
  return MEMORY[0x270F31FC0]();
}

uint64_t sub_241CD7FF0()
{
  return MEMORY[0x270F31FC8]();
}

uint64_t sub_241CD8000()
{
  return MEMORY[0x270F320C8]();
}

uint64_t sub_241CD8010()
{
  return MEMORY[0x270F320D8]();
}

uint64_t sub_241CD8020()
{
  return MEMORY[0x270F320E8]();
}

uint64_t sub_241CD8030()
{
  return MEMORY[0x270F320F0]();
}

uint64_t sub_241CD8040()
{
  return MEMORY[0x270F320F8]();
}

uint64_t sub_241CD8050()
{
  return MEMORY[0x270F32100]();
}

uint64_t sub_241CD8060()
{
  return MEMORY[0x270F32130]();
}

uint64_t sub_241CD8070()
{
  return MEMORY[0x270F32138]();
}

uint64_t sub_241CD8080()
{
  return MEMORY[0x270F32140]();
}

uint64_t sub_241CD8090()
{
  return MEMORY[0x270F32148]();
}

uint64_t sub_241CD80A0()
{
  return MEMORY[0x270F32150]();
}

uint64_t sub_241CD80B0()
{
  return MEMORY[0x270F32190]();
}

uint64_t sub_241CD80C0()
{
  return MEMORY[0x270F321C0]();
}

uint64_t sub_241CD80D0()
{
  return MEMORY[0x270F321D0]();
}

uint64_t sub_241CD80E0()
{
  return MEMORY[0x270F321D8]();
}

uint64_t sub_241CD80F0()
{
  return MEMORY[0x270F321F8]();
}

uint64_t sub_241CD8100()
{
  return MEMORY[0x270F32200]();
}

uint64_t sub_241CD8110()
{
  return MEMORY[0x270F32220]();
}

uint64_t sub_241CD8120()
{
  return MEMORY[0x270F322A8]();
}

uint64_t sub_241CD8130()
{
  return MEMORY[0x270F322B0]();
}

uint64_t sub_241CD8140()
{
  return MEMORY[0x270F322E8]();
}

uint64_t sub_241CD8150()
{
  return MEMORY[0x270F32308]();
}

uint64_t sub_241CD8160()
{
  return MEMORY[0x270F32330]();
}

uint64_t sub_241CD8170()
{
  return MEMORY[0x270F32338]();
}

uint64_t sub_241CD8180()
{
  return MEMORY[0x270F32340]();
}

uint64_t sub_241CD8190()
{
  return MEMORY[0x270F32348]();
}

uint64_t sub_241CD81A0()
{
  return MEMORY[0x270F32350]();
}

uint64_t sub_241CD81B0()
{
  return MEMORY[0x270F32358]();
}

uint64_t sub_241CD81C0()
{
  return MEMORY[0x270F323C0]();
}

uint64_t sub_241CD81E0()
{
  return MEMORY[0x270F32478]();
}

uint64_t sub_241CD81F0()
{
  return MEMORY[0x270F32480]();
}

uint64_t sub_241CD8200()
{
  return MEMORY[0x270F324C8]();
}

uint64_t sub_241CD8210()
{
  return MEMORY[0x270F324E8]();
}

uint64_t sub_241CD8220()
{
  return MEMORY[0x270F324F8]();
}

uint64_t sub_241CD8230()
{
  return MEMORY[0x270F30E48]();
}

uint64_t sub_241CD8240()
{
  return MEMORY[0x270F30E50]();
}

uint64_t sub_241CD8250()
{
  return MEMORY[0x270F326B8]();
}

uint64_t sub_241CD8260()
{
  return MEMORY[0x270F326C0]();
}

uint64_t sub_241CD8270()
{
  return MEMORY[0x270F326C8]();
}

uint64_t sub_241CD8280()
{
  return MEMORY[0x270F326D0]();
}

uint64_t sub_241CD8290()
{
  return MEMORY[0x270F32708]();
}

uint64_t sub_241CD82A0()
{
  return MEMORY[0x270F32710]();
}

uint64_t sub_241CD82B0()
{
  return MEMORY[0x270F32738]();
}

uint64_t sub_241CD82C0()
{
  return MEMORY[0x270F32740]();
}

uint64_t sub_241CD82D0()
{
  return MEMORY[0x270F32750]();
}

uint64_t sub_241CD82E0()
{
  return MEMORY[0x270F32758]();
}

uint64_t sub_241CD82F0()
{
  return MEMORY[0x270F32760]();
}

uint64_t sub_241CD8300()
{
  return MEMORY[0x270F32798]();
}

uint64_t sub_241CD8310()
{
  return MEMORY[0x270F327B0]();
}

uint64_t sub_241CD8320()
{
  return MEMORY[0x270F327B8]();
}

uint64_t sub_241CD8330()
{
  return MEMORY[0x270F327F0]();
}

uint64_t sub_241CD8340()
{
  return MEMORY[0x270F327F8]();
}

uint64_t sub_241CD8350()
{
  return MEMORY[0x270F32B30]();
}

uint64_t sub_241CD8360()
{
  return MEMORY[0x270F32B48]();
}

uint64_t sub_241CD8370()
{
  return MEMORY[0x270F32B58]();
}

uint64_t sub_241CD8380()
{
  return MEMORY[0x270F32B60]();
}

uint64_t sub_241CD8390()
{
  return MEMORY[0x270F32B68]();
}

uint64_t sub_241CD83A0()
{
  return MEMORY[0x270F32BB8]();
}

uint64_t sub_241CD83B0()
{
  return MEMORY[0x270F32BD8]();
}

uint64_t sub_241CD83C0()
{
  return MEMORY[0x270F32BE0]();
}

uint64_t sub_241CD83D0()
{
  return MEMORY[0x270F32BE8]();
}

uint64_t sub_241CD83E0()
{
  return MEMORY[0x270F32BF0]();
}

uint64_t sub_241CD83F0()
{
  return MEMORY[0x270F32BF8]();
}

uint64_t sub_241CD8400()
{
  return MEMORY[0x270F32C00]();
}

uint64_t sub_241CD8410()
{
  return MEMORY[0x270F32D38]();
}

uint64_t sub_241CD8420()
{
  return MEMORY[0x270F32D40]();
}

uint64_t sub_241CD8430()
{
  return MEMORY[0x270F32D48]();
}

uint64_t sub_241CD8440()
{
  return MEMORY[0x270F32D50]();
}

uint64_t sub_241CD8450()
{
  return MEMORY[0x270F32D58]();
}

uint64_t sub_241CD8460()
{
  return MEMORY[0x270F32DE0]();
}

uint64_t sub_241CD8470()
{
  return MEMORY[0x270F32DE8]();
}

uint64_t sub_241CD8480()
{
  return MEMORY[0x270F32DF0]();
}

uint64_t sub_241CD8490()
{
  return MEMORY[0x270F32DF8]();
}

uint64_t sub_241CD84A0()
{
  return MEMORY[0x270F32E00]();
}

uint64_t sub_241CD84B0()
{
  return MEMORY[0x270F32FD0]();
}

uint64_t sub_241CD84C0()
{
  return MEMORY[0x270F32FD8]();
}

uint64_t sub_241CD84D0()
{
  return MEMORY[0x270F32FE0]();
}

uint64_t sub_241CD84E0()
{
  return MEMORY[0x270F33008]();
}

uint64_t sub_241CD84F0()
{
  return MEMORY[0x270F33020]();
}

uint64_t sub_241CD8500()
{
  return MEMORY[0x270F330D8]();
}

uint64_t sub_241CD8510()
{
  return MEMORY[0x270F330E0]();
}

uint64_t sub_241CD8520()
{
  return MEMORY[0x270F330E8]();
}

uint64_t sub_241CD8530()
{
  return MEMORY[0x270F33118]();
}

uint64_t sub_241CD8540()
{
  return MEMORY[0x270F33188]();
}

uint64_t sub_241CD8550()
{
  return MEMORY[0x270F331B0]();
}

uint64_t sub_241CD8560()
{
  return MEMORY[0x270F331C8]();
}

uint64_t sub_241CD8570()
{
  return MEMORY[0x270F33240]();
}

uint64_t sub_241CD8580()
{
  return MEMORY[0x270F33250]();
}

uint64_t sub_241CD8590()
{
  return MEMORY[0x270F33258]();
}

uint64_t sub_241CD85A0()
{
  return MEMORY[0x270F33260]();
}

uint64_t sub_241CD85B0()
{
  return MEMORY[0x270F33268]();
}

uint64_t sub_241CD85C0()
{
  return MEMORY[0x270F33270]();
}

uint64_t sub_241CD85D0()
{
  return MEMORY[0x270F33278]();
}

uint64_t sub_241CD85E0()
{
  return MEMORY[0x270F33280]();
}

uint64_t sub_241CD85F0()
{
  return MEMORY[0x270F33288]();
}

uint64_t sub_241CD8600()
{
  return MEMORY[0x270F33290]();
}

uint64_t sub_241CD8610()
{
  return MEMORY[0x270F332A0]();
}

uint64_t sub_241CD8620()
{
  return MEMORY[0x270F33378]();
}

uint64_t sub_241CD8630()
{
  return MEMORY[0x270F33390]();
}

uint64_t sub_241CD8640()
{
  return MEMORY[0x270F33398]();
}

uint64_t sub_241CD8650()
{
  return MEMORY[0x270F333A0]();
}

uint64_t sub_241CD8660()
{
  return MEMORY[0x270F333B0]();
}

uint64_t sub_241CD8670()
{
  return MEMORY[0x270F333D0]();
}

uint64_t sub_241CD8680()
{
  return MEMORY[0x270F333D8]();
}

uint64_t sub_241CD8690()
{
  return MEMORY[0x270F333E0]();
}

uint64_t sub_241CD86A0()
{
  return MEMORY[0x270F333E8]();
}

uint64_t sub_241CD86B0()
{
  return MEMORY[0x270F333F0]();
}

uint64_t sub_241CD86C0()
{
  return MEMORY[0x270F33430]();
}

uint64_t sub_241CD86D0()
{
  return MEMORY[0x270F33438]();
}

uint64_t sub_241CD86E0()
{
  return MEMORY[0x270F33440]();
}

uint64_t sub_241CD86F0()
{
  return MEMORY[0x270F33498]();
}

uint64_t sub_241CD8700()
{
  return MEMORY[0x270F334A0]();
}

uint64_t sub_241CD8710()
{
  return MEMORY[0x270F334A8]();
}

uint64_t sub_241CD8720()
{
  return MEMORY[0x270F334B0]();
}

uint64_t sub_241CD8730()
{
  return MEMORY[0x270F334B8]();
}

uint64_t sub_241CD8740()
{
  return MEMORY[0x270F334C0]();
}

uint64_t sub_241CD8750()
{
  return MEMORY[0x270F334C8]();
}

uint64_t sub_241CD8760()
{
  return MEMORY[0x270F334D0]();
}

uint64_t sub_241CD8770()
{
  return MEMORY[0x270F334D8]();
}

uint64_t sub_241CD8780()
{
  return MEMORY[0x270F334E0]();
}

uint64_t sub_241CD8790()
{
  return MEMORY[0x270F334E8]();
}

uint64_t sub_241CD87A0()
{
  return MEMORY[0x270F334F0]();
}

uint64_t sub_241CD87B0()
{
  return MEMORY[0x270F33500]();
}

uint64_t sub_241CD87C0()
{
  return MEMORY[0x270F33530]();
}

uint64_t sub_241CD87D0()
{
  return MEMORY[0x270F33538]();
}

uint64_t sub_241CD87E0()
{
  return MEMORY[0x270F33560]();
}

uint64_t sub_241CD87F0()
{
  return MEMORY[0x270F33568]();
}

uint64_t sub_241CD8800()
{
  return MEMORY[0x270F33650]();
}

uint64_t sub_241CD8810()
{
  return MEMORY[0x270F336C8]();
}

uint64_t sub_241CD8820()
{
  return MEMORY[0x270F336D0]();
}

uint64_t sub_241CD8830()
{
  return MEMORY[0x270F336D8]();
}

uint64_t sub_241CD8840()
{
  return MEMORY[0x270F336E0]();
}

uint64_t sub_241CD8850()
{
  return MEMORY[0x270F33720]();
}

uint64_t sub_241CD8860()
{
  return MEMORY[0x270F33728]();
}

uint64_t sub_241CD8870()
{
  return MEMORY[0x270F33748]();
}

uint64_t sub_241CD8880()
{
  return MEMORY[0x270F33750]();
}

uint64_t sub_241CD8890()
{
  return MEMORY[0x270F33758]();
}

uint64_t sub_241CD88A0()
{
  return MEMORY[0x270F33760]();
}

uint64_t sub_241CD88B0()
{
  return MEMORY[0x270F33768]();
}

uint64_t sub_241CD88C0()
{
  return MEMORY[0x270F33770]();
}

uint64_t sub_241CD88D0()
{
  return MEMORY[0x270F33788]();
}

uint64_t sub_241CD88E0()
{
  return MEMORY[0x270F33790]();
}

uint64_t sub_241CD88F0()
{
  return MEMORY[0x270F337C0]();
}

uint64_t sub_241CD8900()
{
  return MEMORY[0x270F337F8]();
}

uint64_t sub_241CD8910()
{
  return MEMORY[0x270F33800]();
}

uint64_t sub_241CD8920()
{
  return MEMORY[0x270F33818]();
}

uint64_t sub_241CD8930()
{
  return MEMORY[0x270F33820]();
}

uint64_t sub_241CD8940()
{
  return MEMORY[0x270F33828]();
}

uint64_t sub_241CD8950()
{
  return MEMORY[0x270F33830]();
}

uint64_t sub_241CD8960()
{
  return MEMORY[0x270F338F8]();
}

uint64_t sub_241CD8970()
{
  return MEMORY[0x270F33900]();
}

uint64_t sub_241CD8980()
{
  return MEMORY[0x270F33920]();
}

uint64_t sub_241CD8990()
{
  return MEMORY[0x270F33928]();
}

uint64_t sub_241CD89A0()
{
  return MEMORY[0x270F33938]();
}

uint64_t sub_241CD89B0()
{
  return MEMORY[0x270F33940]();
}

uint64_t sub_241CD89C0()
{
  return MEMORY[0x270F33948]();
}

uint64_t sub_241CD89D0()
{
  return MEMORY[0x270F33960]();
}

uint64_t sub_241CD89E0()
{
  return MEMORY[0x270F33968]();
}

uint64_t sub_241CD89F0()
{
  return MEMORY[0x270F33970]();
}

uint64_t sub_241CD8A00()
{
  return MEMORY[0x270F33A38]();
}

uint64_t sub_241CD8A10()
{
  return MEMORY[0x270F33B50]();
}

uint64_t sub_241CD8A20()
{
  return MEMORY[0x270F33B58]();
}

uint64_t sub_241CD8A30()
{
  return MEMORY[0x270F33B60]();
}

uint64_t sub_241CD8A40()
{
  return MEMORY[0x270F33B68]();
}

uint64_t sub_241CD8A50()
{
  return MEMORY[0x270F33B70]();
}

uint64_t sub_241CD8A60()
{
  return MEMORY[0x270F33B78]();
}

uint64_t sub_241CD8A70()
{
  return MEMORY[0x270F33B80]();
}

uint64_t sub_241CD8A80()
{
  return MEMORY[0x270F33B88]();
}

uint64_t sub_241CD8A90()
{
  return MEMORY[0x270F33B90]();
}

uint64_t sub_241CD8AA0()
{
  return MEMORY[0x270F33B98]();
}

uint64_t sub_241CD8AB0()
{
  return MEMORY[0x270F33BA0]();
}

uint64_t sub_241CD8AC0()
{
  return MEMORY[0x270F33BC8]();
}

uint64_t sub_241CD8AD0()
{
  return MEMORY[0x270F33C58]();
}

uint64_t sub_241CD8AE0()
{
  return MEMORY[0x270F33C60]();
}

uint64_t sub_241CD8AF0()
{
  return MEMORY[0x270F33C70]();
}

uint64_t sub_241CD8B00()
{
  return MEMORY[0x270F33C80]();
}

uint64_t sub_241CD8B10()
{
  return MEMORY[0x270F33C88]();
}

uint64_t sub_241CD8B20()
{
  return MEMORY[0x270F33C90]();
}

uint64_t sub_241CD8B30()
{
  return MEMORY[0x270F33C98]();
}

uint64_t sub_241CD8B40()
{
  return MEMORY[0x270F33CA0]();
}

uint64_t sub_241CD8B50()
{
  return MEMORY[0x270F33CC0]();
}

uint64_t sub_241CD8B60()
{
  return MEMORY[0x270F33CC8]();
}

uint64_t sub_241CD8B70()
{
  return MEMORY[0x270F33CD8]();
}

uint64_t sub_241CD8B80()
{
  return MEMORY[0x270F33CF8]();
}

uint64_t sub_241CD8B90()
{
  return MEMORY[0x270F33D08]();
}

uint64_t sub_241CD8BA0()
{
  return MEMORY[0x270F33D18]();
}

uint64_t sub_241CD8BB0()
{
  return MEMORY[0x270F33D38]();
}

uint64_t sub_241CD8BC0()
{
  return MEMORY[0x270F33D78]();
}

uint64_t sub_241CD8BD0()
{
  return MEMORY[0x270F33D80]();
}

uint64_t sub_241CD8BE0()
{
  return MEMORY[0x270F33DA0]();
}

uint64_t sub_241CD8BF0()
{
  return MEMORY[0x270F33DB8]();
}

uint64_t sub_241CD8C00()
{
  return MEMORY[0x270F33DC8]();
}

uint64_t sub_241CD8C10()
{
  return MEMORY[0x270F33ED0]();
}

uint64_t sub_241CD8C20()
{
  return MEMORY[0x270F33ED8]();
}

uint64_t sub_241CD8C30()
{
  return MEMORY[0x270F33EE0]();
}

uint64_t sub_241CD8C40()
{
  return MEMORY[0x270F33EF8]();
}

uint64_t sub_241CD8C50()
{
  return MEMORY[0x270F33F00]();
}

uint64_t sub_241CD8C60()
{
  return MEMORY[0x270F33F08]();
}

uint64_t sub_241CD8C70()
{
  return MEMORY[0x270F33FE0]();
}

uint64_t sub_241CD8C80()
{
  return MEMORY[0x270F33FE8]();
}

uint64_t sub_241CD8CB0()
{
  return MEMORY[0x270F34000]();
}

uint64_t sub_241CD8CC0()
{
  return MEMORY[0x270F34010]();
}

uint64_t sub_241CD8CD0()
{
  return MEMORY[0x270F34020]();
}

uint64_t sub_241CD8CE0()
{
  return MEMORY[0x270F34038]();
}

uint64_t sub_241CD8CF0()
{
  return MEMORY[0x270F340A0]();
}

uint64_t sub_241CD8D00()
{
  return MEMORY[0x270F340A8]();
}

uint64_t _s9Summaries29SummaryTrendViewActionHandlerCfd_0()
{
  return MEMORY[0x270F340B0]();
}

uint64_t sub_241CD8D20()
{
  return MEMORY[0x270F340B8]();
}

uint64_t sub_241CD8D30()
{
  return MEMORY[0x270F340C0]();
}

uint64_t sub_241CD8D40()
{
  return MEMORY[0x270F340C8]();
}

uint64_t sub_241CD8D50()
{
  return MEMORY[0x270F340E0]();
}

uint64_t sub_241CD8D60()
{
  return MEMORY[0x270F34108]();
}

uint64_t sub_241CD8D70()
{
  return MEMORY[0x270F34110]();
}

uint64_t sub_241CD8D80()
{
  return MEMORY[0x270F34120]();
}

uint64_t sub_241CD8D90()
{
  return MEMORY[0x270F34130]();
}

uint64_t sub_241CD8DA0()
{
  return MEMORY[0x270F34160]();
}

uint64_t sub_241CD8DB0()
{
  return MEMORY[0x270F34168]();
}

uint64_t sub_241CD8DC0()
{
  return MEMORY[0x270F34178]();
}

uint64_t sub_241CD8DD0()
{
  return MEMORY[0x270F34190]();
}

uint64_t sub_241CD8DE0()
{
  return MEMORY[0x270F341B8]();
}

uint64_t sub_241CD8DF0()
{
  return MEMORY[0x270F341C0]();
}

uint64_t sub_241CD8E00()
{
  return MEMORY[0x270F341C8]();
}

uint64_t sub_241CD8E10()
{
  return MEMORY[0x270F341D0]();
}

uint64_t sub_241CD8E20()
{
  return MEMORY[0x270F341D8]();
}

uint64_t sub_241CD8E30()
{
  return MEMORY[0x270F341E0]();
}

uint64_t sub_241CD8E40()
{
  return MEMORY[0x270F341F0]();
}

uint64_t sub_241CD8E50()
{
  return MEMORY[0x270F34228]();
}

uint64_t sub_241CD8E60()
{
  return MEMORY[0x270F34230]();
}

uint64_t sub_241CD8E70()
{
  return MEMORY[0x270F34238]();
}

uint64_t sub_241CD8E80()
{
  return MEMORY[0x270F34298]();
}

uint64_t sub_241CD8E90()
{
  return MEMORY[0x270F342E0]();
}

uint64_t sub_241CD8EB0()
{
  return MEMORY[0x270F34400]();
}

uint64_t sub_241CD8EC0()
{
  return MEMORY[0x270F34408]();
}

uint64_t sub_241CD8ED0()
{
  return MEMORY[0x270F34410]();
}

uint64_t sub_241CD8EE0()
{
  return MEMORY[0x270F34418]();
}

uint64_t sub_241CD8EF0()
{
  return MEMORY[0x270F34420]();
}

uint64_t sub_241CD8F00()
{
  return MEMORY[0x270F34428]();
}

uint64_t sub_241CD8F10()
{
  return MEMORY[0x270F34430]();
}

uint64_t sub_241CD8F20()
{
  return MEMORY[0x270F34438]();
}

uint64_t sub_241CD8F30()
{
  return MEMORY[0x270F344F0]();
}

uint64_t sub_241CD8F40()
{
  return MEMORY[0x270F344F8]();
}

uint64_t sub_241CD8F50()
{
  return MEMORY[0x270F34500]();
}

uint64_t sub_241CD8F60()
{
  return MEMORY[0x270F34508]();
}

uint64_t sub_241CD8F70()
{
  return MEMORY[0x270F34510]();
}

uint64_t sub_241CD8F80()
{
  return MEMORY[0x270F345C8]();
}

uint64_t sub_241CD8F90()
{
  return MEMORY[0x270F345D0]();
}

uint64_t sub_241CD8FA0()
{
  return MEMORY[0x270F345D8]();
}

uint64_t sub_241CD8FB0()
{
  return MEMORY[0x270F345E8]();
}

uint64_t sub_241CD8FC0()
{
  return MEMORY[0x270F345F0]();
}

uint64_t sub_241CD8FD0()
{
  return MEMORY[0x270F34648]();
}

uint64_t sub_241CD8FE0()
{
  return MEMORY[0x270F346C0]();
}

uint64_t sub_241CD8FF0()
{
  return MEMORY[0x270F346C8]();
}

uint64_t sub_241CD9000()
{
  return MEMORY[0x270F346D0]();
}

uint64_t sub_241CD9010()
{
  return MEMORY[0x270F346D8]();
}

uint64_t sub_241CD9020()
{
  return MEMORY[0x270F346E0]();
}

uint64_t sub_241CD9030()
{
  return MEMORY[0x270F346E8]();
}

uint64_t sub_241CD9040()
{
  return MEMORY[0x270F346F0]();
}

uint64_t sub_241CD9050()
{
  return MEMORY[0x270F346F8]();
}

uint64_t sub_241CD9060()
{
  return MEMORY[0x270F34700]();
}

uint64_t sub_241CD9070()
{
  return MEMORY[0x270F34708]();
}

uint64_t sub_241CD9080()
{
  return MEMORY[0x270F34710]();
}

uint64_t sub_241CD9090()
{
  return MEMORY[0x270F34718]();
}

uint64_t sub_241CD90A0()
{
  return MEMORY[0x270F34720]();
}

uint64_t sub_241CD90B0()
{
  return MEMORY[0x270F34728]();
}

uint64_t sub_241CD90C0()
{
  return MEMORY[0x270F34758]();
}

uint64_t sub_241CD90D0()
{
  return MEMORY[0x270F34760]();
}

uint64_t sub_241CD90E0()
{
  return MEMORY[0x270F34778]();
}

uint64_t sub_241CD90F0()
{
  return MEMORY[0x270F34780]();
}

uint64_t sub_241CD9100()
{
  return MEMORY[0x270F34788]();
}

uint64_t sub_241CD9110()
{
  return MEMORY[0x270F34790]();
}

uint64_t sub_241CD9120()
{
  return MEMORY[0x270F347A8]();
}

uint64_t sub_241CD9130()
{
  return MEMORY[0x270F347B0]();
}

uint64_t sub_241CD9140()
{
  return MEMORY[0x270F347E8]();
}

uint64_t sub_241CD9150()
{
  return MEMORY[0x270F348C0]();
}

uint64_t sub_241CD9160()
{
  return MEMORY[0x270F348C8]();
}

uint64_t sub_241CD9170()
{
  return MEMORY[0x270F348D0]();
}

uint64_t sub_241CD9180()
{
  return MEMORY[0x270F348D8]();
}

uint64_t sub_241CD9190()
{
  return MEMORY[0x270F348E0]();
}

uint64_t sub_241CD91A0()
{
  return MEMORY[0x270F348F8]();
}

uint64_t sub_241CD91B0()
{
  return MEMORY[0x270F34918]();
}

uint64_t sub_241CD91E0()
{
  return MEMORY[0x270F34930]();
}

uint64_t sub_241CD91F0()
{
  return MEMORY[0x270F34948]();
}

uint64_t sub_241CD9200()
{
  return MEMORY[0x270F34970]();
}

uint64_t sub_241CD9210()
{
  return MEMORY[0x270F34AC0]();
}

uint64_t sub_241CD9220()
{
  return MEMORY[0x270F34AC8]();
}

uint64_t sub_241CD9230()
{
  return MEMORY[0x270F34C30]();
}

uint64_t sub_241CD9240()
{
  return MEMORY[0x270F34C38]();
}

uint64_t sub_241CD9250()
{
  return MEMORY[0x270F34C40]();
}

uint64_t sub_241CD9260()
{
  return MEMORY[0x270F34C48]();
}

uint64_t sub_241CD9270()
{
  return MEMORY[0x270F34F28]();
}

uint64_t sub_241CD9280()
{
  return MEMORY[0x270F34FA0]();
}

uint64_t sub_241CD9290()
{
  return MEMORY[0x270F34FB0]();
}

uint64_t sub_241CD92A0()
{
  return MEMORY[0x270F34FC8]();
}

uint64_t sub_241CD92B0()
{
  return MEMORY[0x270F34FD8]();
}

uint64_t sub_241CD92C0()
{
  return MEMORY[0x270F34FE0]();
}

uint64_t sub_241CD92D0()
{
  return MEMORY[0x270F34FF0]();
}

uint64_t sub_241CD92F0()
{
  return MEMORY[0x270F35028]();
}

uint64_t sub_241CD9300()
{
  return MEMORY[0x270F35030]();
}

uint64_t sub_241CD9310()
{
  return MEMORY[0x270F35040]();
}

uint64_t sub_241CD9320()
{
  return MEMORY[0x270F35070]();
}

uint64_t sub_241CD9330()
{
  return MEMORY[0x270F35078]();
}

uint64_t sub_241CD9340()
{
  return MEMORY[0x270F350B0]();
}

uint64_t sub_241CD9350()
{
  return MEMORY[0x270F350D0]();
}

uint64_t sub_241CD9360()
{
  return MEMORY[0x270F37020]();
}

uint64_t sub_241CD9370()
{
  return MEMORY[0x270F37040]();
}

uint64_t sub_241CD9380()
{
  return MEMORY[0x270F37048]();
}

uint64_t sub_241CD93A0()
{
  return MEMORY[0x270F35ED0]();
}

uint64_t sub_241CD93B0()
{
  return MEMORY[0x270F35ED8]();
}

uint64_t sub_241CD93C0()
{
  return MEMORY[0x270F35EE0]();
}

uint64_t sub_241CD93D0()
{
  return MEMORY[0x270F35EE8]();
}

uint64_t sub_241CD93E0()
{
  return MEMORY[0x270F35EF0]();
}

uint64_t sub_241CD93F0()
{
  return MEMORY[0x270F35EF8]();
}

uint64_t sub_241CD9400()
{
  return MEMORY[0x270F35F10]();
}

uint64_t sub_241CD9410()
{
  return MEMORY[0x270F35F18]();
}

uint64_t sub_241CD9430()
{
  return MEMORY[0x270F35F28]();
}

uint64_t sub_241CD9440()
{
  return MEMORY[0x270F35F30]();
}

uint64_t sub_241CD9450()
{
  return MEMORY[0x270F35F38]();
}

uint64_t sub_241CD9460()
{
  return MEMORY[0x270F35F40]();
}

uint64_t sub_241CD9470()
{
  return MEMORY[0x270F36DF0]();
}

uint64_t sub_241CD9480()
{
  return MEMORY[0x270F36DF8]();
}

uint64_t sub_241CD9490()
{
  return MEMORY[0x270F36E18]();
}

uint64_t sub_241CD94A0()
{
  return MEMORY[0x270F36E20]();
}

uint64_t sub_241CD94B0()
{
  return MEMORY[0x270F36E28]();
}

uint64_t sub_241CD94C0()
{
  return MEMORY[0x270F35F58]();
}

uint64_t sub_241CD94D0()
{
  return MEMORY[0x270F35F60]();
}

uint64_t sub_241CD94E0()
{
  return MEMORY[0x270F35F68]();
}

uint64_t sub_241CD94F0()
{
  return MEMORY[0x270F35F88]();
}

uint64_t sub_241CD9500()
{
  return MEMORY[0x270F35F90]();
}

uint64_t sub_241CD9510()
{
  return MEMORY[0x270F35F98]();
}

uint64_t sub_241CD9520()
{
  return MEMORY[0x270F35FA0]();
}

uint64_t sub_241CD9530()
{
  return MEMORY[0x270F35FB0]();
}

uint64_t sub_241CD9540()
{
  return MEMORY[0x270F35FC0]();
}

uint64_t sub_241CD9550()
{
  return MEMORY[0x270F35FC8]();
}

uint64_t sub_241CD9560()
{
  return MEMORY[0x270F35FD0]();
}

uint64_t sub_241CD9570()
{
  return MEMORY[0x270F35FD8]();
}

uint64_t sub_241CD9580()
{
  return MEMORY[0x270F35FE0]();
}

uint64_t sub_241CD95A0()
{
  return MEMORY[0x270F35FF0]();
}

uint64_t sub_241CD95B0()
{
  return MEMORY[0x270F36008]();
}

uint64_t sub_241CD95C0()
{
  return MEMORY[0x270F36010]();
}

uint64_t sub_241CD95D0()
{
  return MEMORY[0x270F36018]();
}

uint64_t sub_241CD95E0()
{
  return MEMORY[0x270F36020]();
}

uint64_t sub_241CD95F0()
{
  return MEMORY[0x270F36048]();
}

uint64_t sub_241CD9600()
{
  return MEMORY[0x270F36050]();
}

uint64_t sub_241CD9610()
{
  return MEMORY[0x270F36058]();
}

uint64_t sub_241CD9620()
{
  return MEMORY[0x270F36060]();
}

uint64_t sub_241CD9630()
{
  return MEMORY[0x270F36068]();
}

uint64_t sub_241CD9640()
{
  return MEMORY[0x270F36070]();
}

uint64_t sub_241CD9650()
{
  return MEMORY[0x270F36078]();
}

uint64_t sub_241CD9660()
{
  return MEMORY[0x270F36080]();
}

uint64_t sub_241CD9670()
{
  return MEMORY[0x270F36088]();
}

uint64_t sub_241CD9680()
{
  return MEMORY[0x270F36090]();
}

uint64_t sub_241CD9690()
{
  return MEMORY[0x270F36098]();
}

uint64_t sub_241CD96A0()
{
  return MEMORY[0x270F360A0]();
}

uint64_t sub_241CD96B0()
{
  return MEMORY[0x270F360A8]();
}

uint64_t sub_241CD96C0()
{
  return MEMORY[0x270F360B0]();
}

uint64_t sub_241CD96D0()
{
  return MEMORY[0x270F360B8]();
}

uint64_t sub_241CD96E0()
{
  return MEMORY[0x270F360C0]();
}

uint64_t sub_241CD96F0()
{
  return MEMORY[0x270F360C8]();
}

uint64_t sub_241CD9700()
{
  return MEMORY[0x270F360D0]();
}

uint64_t sub_241CD9710()
{
  return MEMORY[0x270F360D8]();
}

uint64_t sub_241CD9720()
{
  return MEMORY[0x270F360E0]();
}

uint64_t sub_241CD9730()
{
  return MEMORY[0x270F360E8]();
}

uint64_t sub_241CD9740()
{
  return MEMORY[0x270F36E30]();
}

uint64_t sub_241CD9750()
{
  return MEMORY[0x270F360F0]();
}

uint64_t sub_241CD9760()
{
  return MEMORY[0x270F360F8]();
}

uint64_t sub_241CD9770()
{
  return MEMORY[0x270F36100]();
}

uint64_t sub_241CD9780()
{
  return MEMORY[0x270F36108]();
}

uint64_t sub_241CD9790()
{
  return MEMORY[0x270F38420]();
}

uint64_t sub_241CD97A0()
{
  return MEMORY[0x270F38428]();
}

uint64_t sub_241CD97B0()
{
  return MEMORY[0x270F38430]();
}

uint64_t sub_241CD97C0()
{
  return MEMORY[0x270F38438]();
}

uint64_t sub_241CD97D0()
{
  return MEMORY[0x270F38470]();
}

uint64_t sub_241CD97E0()
{
  return MEMORY[0x270F38478]();
}

uint64_t sub_241CD97F0()
{
  return MEMORY[0x270F384D8]();
}

uint64_t sub_241CD9800()
{
  return MEMORY[0x270F384E8]();
}

uint64_t sub_241CD9810()
{
  return MEMORY[0x270F38530]();
}

uint64_t sub_241CD9820()
{
  return MEMORY[0x270F38538]();
}

uint64_t sub_241CD9830()
{
  return MEMORY[0x270F38580]();
}

uint64_t sub_241CD9840()
{
  return MEMORY[0x270F38588]();
}

uint64_t sub_241CD9850()
{
  return MEMORY[0x270F385A0]();
}

uint64_t sub_241CD9860()
{
  return MEMORY[0x270F385A8]();
}

uint64_t sub_241CD9870()
{
  return MEMORY[0x270F385B0]();
}

uint64_t sub_241CD9880()
{
  return MEMORY[0x270F385B8]();
}

uint64_t sub_241CD9890()
{
  return MEMORY[0x270F385C0]();
}

uint64_t sub_241CD98A0()
{
  return MEMORY[0x270F385C8]();
}

uint64_t sub_241CD98B0()
{
  return MEMORY[0x270F385D0]();
}

uint64_t sub_241CD98C0()
{
  return MEMORY[0x270F385D8]();
}

uint64_t sub_241CD98D0()
{
  return MEMORY[0x270F385E0]();
}

uint64_t sub_241CD98E0()
{
  return MEMORY[0x270F385E8]();
}

uint64_t sub_241CD98F0()
{
  return MEMORY[0x270F385F0]();
}

uint64_t sub_241CD9900()
{
  return MEMORY[0x270F385F8]();
}

uint64_t sub_241CD9910()
{
  return MEMORY[0x270F38600]();
}

uint64_t sub_241CD9920()
{
  return MEMORY[0x270F38608]();
}

uint64_t sub_241CD9930()
{
  return MEMORY[0x270F38610]();
}

uint64_t sub_241CD9940()
{
  return MEMORY[0x270F38618]();
}

uint64_t sub_241CD9950()
{
  return MEMORY[0x270F38620]();
}

uint64_t sub_241CD9960()
{
  return MEMORY[0x270F38638]();
}

uint64_t sub_241CD9970()
{
  return MEMORY[0x270F38640]();
}

uint64_t sub_241CD9980()
{
  return MEMORY[0x270F38650]();
}

uint64_t sub_241CD9990()
{
  return MEMORY[0x270F38670]();
}

uint64_t sub_241CD99A0()
{
  return MEMORY[0x270F38678]();
}

uint64_t sub_241CD99B0()
{
  return MEMORY[0x270F38680]();
}

uint64_t sub_241CD99C0()
{
  return MEMORY[0x270F38688]();
}

uint64_t sub_241CD99D0()
{
  return MEMORY[0x270F38690]();
}

uint64_t sub_241CD99E0()
{
  return MEMORY[0x270F38698]();
}

uint64_t sub_241CD99F0()
{
  return MEMORY[0x270F386A0]();
}

uint64_t sub_241CD9A00()
{
  return MEMORY[0x270F386A8]();
}

uint64_t sub_241CD9A10()
{
  return MEMORY[0x270F386B0]();
}

uint64_t sub_241CD9A20()
{
  return MEMORY[0x270F386B8]();
}

uint64_t sub_241CD9A30()
{
  return MEMORY[0x270F386C0]();
}

uint64_t sub_241CD9A40()
{
  return MEMORY[0x270F388C8]();
}

uint64_t sub_241CD9A50()
{
  return MEMORY[0x270F388D0]();
}

uint64_t sub_241CD9A60()
{
  return MEMORY[0x270F38988]();
}

uint64_t sub_241CD9A70()
{
  return MEMORY[0x270F389B8]();
}

uint64_t sub_241CD9A80()
{
  return MEMORY[0x270F389C0]();
}

uint64_t sub_241CD9A90()
{
  return MEMORY[0x270F389C8]();
}

uint64_t sub_241CD9AA0()
{
  return MEMORY[0x270F389D0]();
}

uint64_t sub_241CD9AB0()
{
  return MEMORY[0x270F389D8]();
}

uint64_t sub_241CD9AC0()
{
  return MEMORY[0x270F389E0]();
}

uint64_t sub_241CD9AD0()
{
  return MEMORY[0x270F389E8]();
}

uint64_t sub_241CD9AE0()
{
  return MEMORY[0x270F389F0]();
}

uint64_t sub_241CD9AF0()
{
  return MEMORY[0x270F389F8]();
}

uint64_t sub_241CD9B00()
{
  return MEMORY[0x270F38A00]();
}

uint64_t sub_241CD9B10()
{
  return MEMORY[0x270F38A08]();
}

uint64_t sub_241CD9B20()
{
  return MEMORY[0x270F38A10]();
}

uint64_t sub_241CD9B30()
{
  return MEMORY[0x270F38A18]();
}

uint64_t sub_241CD9B40()
{
  return MEMORY[0x270F38A20]();
}

uint64_t sub_241CD9B50()
{
  return MEMORY[0x270F38A28]();
}

uint64_t sub_241CD9B60()
{
  return MEMORY[0x270F38A30]();
}

uint64_t sub_241CD9B70()
{
  return MEMORY[0x270F38A38]();
}

uint64_t sub_241CD9B80()
{
  return MEMORY[0x270F38A40]();
}

uint64_t sub_241CD9B90()
{
  return MEMORY[0x270F38A48]();
}

uint64_t sub_241CD9BA0()
{
  return MEMORY[0x270F38A50]();
}

uint64_t sub_241CD9BB0()
{
  return MEMORY[0x270F38A58]();
}

uint64_t sub_241CD9BC0()
{
  return MEMORY[0x270F38A60]();
}

uint64_t sub_241CD9BD0()
{
  return MEMORY[0x270F38A68]();
}

uint64_t sub_241CD9BE0()
{
  return MEMORY[0x270F38AB0]();
}

uint64_t sub_241CD9BF0()
{
  return MEMORY[0x270F38AB8]();
}

uint64_t sub_241CD9C00()
{
  return MEMORY[0x270F38AC8]();
}

uint64_t sub_241CD9C10()
{
  return MEMORY[0x270F38AD0]();
}

uint64_t sub_241CD9C20()
{
  return MEMORY[0x270F38AD8]();
}

uint64_t sub_241CD9C30()
{
  return MEMORY[0x270F38AE0]();
}

uint64_t sub_241CD9C40()
{
  return MEMORY[0x270F38AE8]();
}

uint64_t sub_241CD9C50()
{
  return MEMORY[0x270F38B18]();
}

uint64_t sub_241CD9C60()
{
  return MEMORY[0x270F38B20]();
}

uint64_t sub_241CD9C70()
{
  return MEMORY[0x270F38B28]();
}

uint64_t sub_241CD9C80()
{
  return MEMORY[0x270F38B48]();
}

uint64_t sub_241CD9C90()
{
  return MEMORY[0x270F38B50]();
}

uint64_t sub_241CD9CA0()
{
  return MEMORY[0x270F38B58]();
}

uint64_t sub_241CD9CB0()
{
  return MEMORY[0x270F38B78]();
}

uint64_t sub_241CD9CC0()
{
  return MEMORY[0x270F38B80]();
}

uint64_t sub_241CD9CD0()
{
  return MEMORY[0x270F38B88]();
}

uint64_t sub_241CD9CE0()
{
  return MEMORY[0x270F38B90]();
}

uint64_t sub_241CD9CF0()
{
  return MEMORY[0x270F38B98]();
}

uint64_t sub_241CD9D00()
{
  return MEMORY[0x270F38BA0]();
}

uint64_t sub_241CD9D10()
{
  return MEMORY[0x270F38BA8]();
}

uint64_t sub_241CD9D20()
{
  return MEMORY[0x270F38BC0]();
}

uint64_t sub_241CD9D30()
{
  return MEMORY[0x270F38C10]();
}

uint64_t sub_241CD9D40()
{
  return MEMORY[0x270F38C18]();
}

uint64_t sub_241CD9D50()
{
  return MEMORY[0x270F38C20]();
}

uint64_t sub_241CD9D60()
{
  return MEMORY[0x270F38C28]();
}

uint64_t sub_241CD9D70()
{
  return MEMORY[0x270F38C30]();
}

uint64_t sub_241CD9D80()
{
  return MEMORY[0x270F38C38]();
}

uint64_t sub_241CD9D90()
{
  return MEMORY[0x270F38C90]();
}

uint64_t sub_241CD9DA0()
{
  return MEMORY[0x270F38C98]();
}

uint64_t sub_241CD9DB0()
{
  return MEMORY[0x270F38CA0]();
}

uint64_t sub_241CD9DC0()
{
  return MEMORY[0x270F38CB0]();
}

uint64_t sub_241CD9DD0()
{
  return MEMORY[0x270F38CB8]();
}

uint64_t sub_241CD9DE0()
{
  return MEMORY[0x270F38CC0]();
}

uint64_t sub_241CD9DF0()
{
  return MEMORY[0x270F38CC8]();
}

uint64_t sub_241CD9E00()
{
  return MEMORY[0x270F38CE8]();
}

uint64_t sub_241CD9E10()
{
  return MEMORY[0x270F38CF0]();
}

uint64_t sub_241CD9E20()
{
  return MEMORY[0x270F38CF8]();
}

uint64_t sub_241CD9E30()
{
  return MEMORY[0x270F38D00]();
}

uint64_t sub_241CD9E40()
{
  return MEMORY[0x270F38D08]();
}

uint64_t sub_241CD9E50()
{
  return MEMORY[0x270F38D10]();
}

uint64_t sub_241CD9E60()
{
  return MEMORY[0x270F38D18]();
}

uint64_t sub_241CD9E70()
{
  return MEMORY[0x270F38D20]();
}

uint64_t sub_241CD9E80()
{
  return MEMORY[0x270F38D28]();
}

uint64_t sub_241CD9E90()
{
  return MEMORY[0x270F38D30]();
}

uint64_t sub_241CD9EA0()
{
  return MEMORY[0x270F38D38]();
}

uint64_t sub_241CD9EB0()
{
  return MEMORY[0x270F38D50]();
}

uint64_t sub_241CD9EC0()
{
  return MEMORY[0x270F38D58]();
}

uint64_t sub_241CD9ED0()
{
  return MEMORY[0x270F38D60]();
}

uint64_t sub_241CD9EE0()
{
  return MEMORY[0x270F38DD0]();
}

uint64_t sub_241CD9EF0()
{
  return MEMORY[0x270F38DD8]();
}

uint64_t sub_241CD9F00()
{
  return MEMORY[0x270F38DE0]();
}

uint64_t sub_241CD9F10()
{
  return MEMORY[0x270F38DE8]();
}

uint64_t sub_241CD9F20()
{
  return MEMORY[0x270F38E20]();
}

uint64_t sub_241CD9F30()
{
  return MEMORY[0x270F38E28]();
}

uint64_t sub_241CD9F40()
{
  return MEMORY[0x270F38E30]();
}

uint64_t sub_241CD9F50()
{
  return MEMORY[0x270F38E38]();
}

uint64_t sub_241CD9F60()
{
  return MEMORY[0x270F38E40]();
}

uint64_t sub_241CD9F70()
{
  return MEMORY[0x270F38EB8]();
}

uint64_t sub_241CD9F80()
{
  return MEMORY[0x270F38EC0]();
}

uint64_t sub_241CD9F90()
{
  return MEMORY[0x270F38EC8]();
}

uint64_t sub_241CD9FA0()
{
  return MEMORY[0x270F38ED0]();
}

uint64_t sub_241CD9FB0()
{
  return MEMORY[0x270F38ED8]();
}

uint64_t sub_241CD9FC0()
{
  return MEMORY[0x270F38EE0]();
}

uint64_t _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0()
{
  return MEMORY[0x270F38EE8]();
}

uint64_t sub_241CD9FE0()
{
  return MEMORY[0x270F38EF0]();
}

uint64_t sub_241CD9FF0()
{
  return MEMORY[0x270F38EF8]();
}

uint64_t sub_241CDA000()
{
  return MEMORY[0x270F38F00]();
}

uint64_t sub_241CDA010()
{
  return MEMORY[0x270F38F08]();
}

uint64_t sub_241CDA020()
{
  return MEMORY[0x270F38F10]();
}

uint64_t sub_241CDA030()
{
  return MEMORY[0x270F38F18]();
}

uint64_t sub_241CDA040()
{
  return MEMORY[0x270F38F20]();
}

uint64_t sub_241CDA050()
{
  return MEMORY[0x270F38F28]();
}

uint64_t sub_241CDA060()
{
  return MEMORY[0x270F38F30]();
}

uint64_t sub_241CDA070()
{
  return MEMORY[0x270F38F38]();
}

uint64_t sub_241CDA080()
{
  return MEMORY[0x270F38F40]();
}

uint64_t sub_241CDA090()
{
  return MEMORY[0x270F38F48]();
}

uint64_t sub_241CDA0A0()
{
  return MEMORY[0x270FA17A0]();
}

uint64_t sub_241CDA0B0()
{
  return MEMORY[0x270FA1938]();
}

uint64_t sub_241CDA0C0()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t sub_241CDA0D0()
{
  return MEMORY[0x270F31848]();
}

uint64_t sub_241CDA0E0()
{
  return MEMORY[0x270F36E38]();
}

uint64_t sub_241CDA0F0()
{
  return MEMORY[0x270F36E40]();
}

uint64_t sub_241CDA100()
{
  return MEMORY[0x270F36E60]();
}

uint64_t sub_241CDA110()
{
  return MEMORY[0x270F36E70]();
}

uint64_t sub_241CDA120()
{
  return MEMORY[0x270F36E78]();
}

uint64_t sub_241CDA130()
{
  return MEMORY[0x270F36E90]();
}

uint64_t sub_241CDA140()
{
  return MEMORY[0x270F36E98]();
}

uint64_t sub_241CDA150()
{
  return MEMORY[0x270F36EA0]();
}

uint64_t sub_241CDA160()
{
  return MEMORY[0x270F35100]();
}

uint64_t sub_241CDA170()
{
  return MEMORY[0x270F38F50]();
}

uint64_t sub_241CDA180()
{
  return MEMORY[0x270F38F58]();
}

uint64_t sub_241CDA190()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_241CDA1A0()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_241CDA1B0()
{
  return MEMORY[0x270F81960]();
}

uint64_t sub_241CDA1C0()
{
  return MEMORY[0x270F81978]();
}

uint64_t sub_241CDA1D0()
{
  return MEMORY[0x270F81990]();
}

uint64_t sub_241CDA1E0()
{
  return MEMORY[0x270F819A8]();
}

uint64_t sub_241CDA1F0()
{
  return MEMORY[0x270F819B0]();
}

uint64_t sub_241CDA200()
{
  return MEMORY[0x270F819D0]();
}

uint64_t sub_241CDA210()
{
  return MEMORY[0x270F81CD0]();
}

uint64_t sub_241CDA220()
{
  return MEMORY[0x270F81CD8]();
}

uint64_t sub_241CDA230()
{
  return MEMORY[0x270F81D10]();
}

uint64_t sub_241CDA240()
{
  return MEMORY[0x270F81EB0]();
}

uint64_t sub_241CDA250()
{
  return MEMORY[0x270F81ED8]();
}

uint64_t sub_241CDA260()
{
  return MEMORY[0x270F81EE0]();
}

uint64_t sub_241CDA270()
{
  return MEMORY[0x270EE2B58]();
}

uint64_t sub_241CDA280()
{
  return MEMORY[0x270EE2BA0]();
}

uint64_t sub_241CDA290()
{
  return MEMORY[0x270EE2BA8]();
}

uint64_t sub_241CDA2A0()
{
  return MEMORY[0x270EE2BB8]();
}

uint64_t sub_241CDA2B0()
{
  return MEMORY[0x270EE2C50]();
}

uint64_t sub_241CDA2C0()
{
  return MEMORY[0x270EE2C70]();
}

uint64_t sub_241CDA2D0()
{
  return MEMORY[0x270EE2C78]();
}

uint64_t sub_241CDA2E0()
{
  return MEMORY[0x270EE2D20]();
}

uint64_t sub_241CDA2F0()
{
  return MEMORY[0x270EE2EE8]();
}

uint64_t sub_241CDA300()
{
  return MEMORY[0x270EE2EF0]();
}

uint64_t sub_241CDA310()
{
  return MEMORY[0x270EE3040]();
}

uint64_t sub_241CDA320()
{
  return MEMORY[0x270EE3048]();
}

uint64_t sub_241CDA330()
{
  return MEMORY[0x270F36EC0]();
}

uint64_t sub_241CDA340()
{
  return MEMORY[0x270EE3840]();
}

uint64_t sub_241CDA350()
{
  return MEMORY[0x270EE3848]();
}

uint64_t sub_241CDA360()
{
  return MEMORY[0x270EE3878]();
}

uint64_t sub_241CDA370()
{
  return MEMORY[0x270EE3880]();
}

uint64_t sub_241CDA380()
{
  return MEMORY[0x270EE38A0]();
}

uint64_t sub_241CDA390()
{
  return MEMORY[0x270EE38B0]();
}

uint64_t sub_241CDA3A0()
{
  return MEMORY[0x270EE38C8]();
}

uint64_t sub_241CDA3B0()
{
  return MEMORY[0x270EE3900]();
}

uint64_t sub_241CDA3C0()
{
  return MEMORY[0x270EE3908]();
}

uint64_t sub_241CDA3D0()
{
  return MEMORY[0x270EE3930]();
}

uint64_t sub_241CDA3E0()
{
  return MEMORY[0x270EE3950]();
}

uint64_t sub_241CDA3F0()
{
  return MEMORY[0x270EE3958]();
}

uint64_t sub_241CDA400()
{
  return MEMORY[0x270EE3960]();
}

uint64_t sub_241CDA410()
{
  return MEMORY[0x270EE3968]();
}

uint64_t sub_241CDA420()
{
  return MEMORY[0x270EE3970]();
}

uint64_t sub_241CDA430()
{
  return MEMORY[0x270EE3988]();
}

uint64_t sub_241CDA440()
{
  return MEMORY[0x270EE3998]();
}

uint64_t sub_241CDA450()
{
  return MEMORY[0x270EE39A8]();
}

uint64_t sub_241CDA460()
{
  return MEMORY[0x270EE39C0]();
}

uint64_t sub_241CDA470()
{
  return MEMORY[0x270EE39C8]();
}

uint64_t sub_241CDA480()
{
  return MEMORY[0x270EE3A38]();
}

uint64_t sub_241CDA490()
{
  return MEMORY[0x270EE3A48]();
}

uint64_t sub_241CDA4A0()
{
  return MEMORY[0x270EE3A90]();
}

uint64_t sub_241CDA4B0()
{
  return MEMORY[0x270EE3AB8]();
}

uint64_t sub_241CDA4C0()
{
  return MEMORY[0x270EE3AC0]();
}

uint64_t sub_241CDA4D0()
{
  return MEMORY[0x270EE3AD0]();
}

uint64_t sub_241CDA4E0()
{
  return MEMORY[0x270EE3AD8]();
}

uint64_t sub_241CDA4F0()
{
  return MEMORY[0x270EE3B50]();
}

uint64_t sub_241CDA500()
{
  return MEMORY[0x270F34CD0]();
}

uint64_t sub_241CDA510()
{
  return MEMORY[0x270EE3B60]();
}

uint64_t sub_241CDA520()
{
  return MEMORY[0x270EE3B98]();
}

uint64_t sub_241CDA530()
{
  return MEMORY[0x270EE3C20]();
}

uint64_t sub_241CDA540()
{
  return MEMORY[0x270EE3CE0]();
}

uint64_t sub_241CDA550()
{
  return MEMORY[0x270EE3CE8]();
}

uint64_t sub_241CDA560()
{
  return MEMORY[0x270EE3CF0]();
}

uint64_t sub_241CDA570()
{
  return MEMORY[0x270EE3CF8]();
}

uint64_t sub_241CDA580()
{
  return MEMORY[0x270EE3D08]();
}

uint64_t sub_241CDA590()
{
  return MEMORY[0x270EE3D18]();
}

uint64_t sub_241CDA5A0()
{
  return MEMORY[0x270EE3D28]();
}

uint64_t sub_241CDA5B0()
{
  return MEMORY[0x270EE3D30]();
}

uint64_t sub_241CDA5C0()
{
  return MEMORY[0x270EE3D38]();
}

uint64_t sub_241CDA5D0()
{
  return MEMORY[0x270EE3D40]();
}

uint64_t sub_241CDA5E0()
{
  return MEMORY[0x270EE3D50]();
}

uint64_t sub_241CDA5F0()
{
  return MEMORY[0x270EE3D58]();
}

uint64_t sub_241CDA600()
{
  return MEMORY[0x270EE3D68]();
}

uint64_t sub_241CDA610()
{
  return MEMORY[0x270EE3D78]();
}

uint64_t sub_241CDA620()
{
  return MEMORY[0x270EE3D98]();
}

uint64_t sub_241CDA630()
{
  return MEMORY[0x270EE3DA0]();
}

uint64_t sub_241CDA640()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_241CDA650()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_241CDA660()
{
  return MEMORY[0x270F36F00]();
}

uint64_t sub_241CDA670()
{
  return MEMORY[0x270F36F10]();
}

uint64_t sub_241CDA680()
{
  return MEMORY[0x270F36F18]();
}

uint64_t sub_241CDA690()
{
  return MEMORY[0x270F32518]();
}

uint64_t sub_241CDA6A0()
{
  return MEMORY[0x270F35108]();
}

uint64_t sub_241CDA6B0()
{
  return MEMORY[0x270F35110]();
}

uint64_t sub_241CDA6C0()
{
  return MEMORY[0x270EE3E00]();
}

uint64_t sub_241CDA6D0()
{
  return MEMORY[0x270EE3E08]();
}

uint64_t sub_241CDA6E0()
{
  return MEMORY[0x270EE3E18]();
}

uint64_t sub_241CDA6F0()
{
  return MEMORY[0x270EE3E20]();
}

uint64_t sub_241CDA700()
{
  return MEMORY[0x270EE3E50]();
}

uint64_t sub_241CDA710()
{
  return MEMORY[0x270EE3E78]();
}

uint64_t sub_241CDA720()
{
  return MEMORY[0x270EE3E80]();
}

uint64_t sub_241CDA730()
{
  return MEMORY[0x270EE3E90]();
}

uint64_t sub_241CDA740()
{
  return MEMORY[0x270EE3E98]();
}

uint64_t sub_241CDA750()
{
  return MEMORY[0x270EE3EA0]();
}

uint64_t sub_241CDA760()
{
  return MEMORY[0x270EE3EB8]();
}

uint64_t sub_241CDA770()
{
  return MEMORY[0x270EE3EC0]();
}

uint64_t sub_241CDA780()
{
  return MEMORY[0x270EE3F18]();
}

uint64_t sub_241CDA790()
{
  return MEMORY[0x270EE3F30]();
}

uint64_t sub_241CDA7A0()
{
  return MEMORY[0x270EE3F40]();
}

uint64_t sub_241CDA7B0()
{
  return MEMORY[0x270EE3F58]();
}

uint64_t sub_241CDA7C0()
{
  return MEMORY[0x270EE3F60]();
}

uint64_t sub_241CDA7D0()
{
  return MEMORY[0x270EE3F68]();
}

uint64_t sub_241CDA7E0()
{
  return MEMORY[0x270EE3F78]();
}

uint64_t sub_241CDA7F0()
{
  return MEMORY[0x270EE3FB0]();
}

uint64_t sub_241CDA800()
{
  return MEMORY[0x270EE3FD8]();
}

uint64_t sub_241CDA810()
{
  return MEMORY[0x270EE3FF0]();
}

uint64_t sub_241CDA820()
{
  return MEMORY[0x270EE4008]();
}

uint64_t sub_241CDA830()
{
  return MEMORY[0x270EE4028]();
}

uint64_t sub_241CDA840()
{
  return MEMORY[0x270EE4030]();
}

uint64_t sub_241CDA850()
{
  return MEMORY[0x270EFEEC0]();
}

uint64_t sub_241CDA860()
{
  return MEMORY[0x270EFEF10]();
}

uint64_t sub_241CDA870()
{
  return MEMORY[0x270EFEF30]();
}

uint64_t sub_241CDA880()
{
  return MEMORY[0x270EFF040]();
}

uint64_t sub_241CDA890()
{
  return MEMORY[0x270EFF598]();
}

uint64_t sub_241CDA8A0()
{
  return MEMORY[0x270EFF6D0]();
}

uint64_t sub_241CDA8B0()
{
  return MEMORY[0x270EFF6F8]();
}

uint64_t sub_241CDA8C0()
{
  return MEMORY[0x270EFF918]();
}

uint64_t sub_241CDA8D0()
{
  return MEMORY[0x270EFFA10]();
}

uint64_t sub_241CDA8E0()
{
  return MEMORY[0x270EFFB80]();
}

uint64_t sub_241CDA900()
{
  return MEMORY[0x270F00058]();
}

uint64_t sub_241CDA910()
{
  return MEMORY[0x270F001A8]();
}

uint64_t sub_241CDA920()
{
  return MEMORY[0x270F00598]();
}

uint64_t sub_241CDA930()
{
  return MEMORY[0x270F00608]();
}

uint64_t sub_241CDA940()
{
  return MEMORY[0x270F00618]();
}

uint64_t sub_241CDA950()
{
  return MEMORY[0x270F00670]();
}

uint64_t sub_241CDA960()
{
  return MEMORY[0x270F00688]();
}

uint64_t sub_241CDA970()
{
  return MEMORY[0x270F00698]();
}

uint64_t sub_241CDA980()
{
  return MEMORY[0x270F00768]();
}

uint64_t sub_241CDA990()
{
  return MEMORY[0x270F007E0]();
}

uint64_t sub_241CDA9B0()
{
  return MEMORY[0x270F00828]();
}

uint64_t sub_241CDA9C0()
{
  return MEMORY[0x270F00840]();
}

uint64_t sub_241CDA9D0()
{
  return MEMORY[0x270F008D0]();
}

uint64_t sub_241CDA9E0()
{
  return MEMORY[0x270F00940]();
}

uint64_t sub_241CDA9F0()
{
  return MEMORY[0x270F00948]();
}

uint64_t sub_241CDAA00()
{
  return MEMORY[0x270F00A50]();
}

uint64_t sub_241CDAA10()
{
  return MEMORY[0x270F00AF0]();
}

uint64_t sub_241CDAA20()
{
  return MEMORY[0x270F00ED8]();
}

uint64_t sub_241CDAA30()
{
  return MEMORY[0x270F00EE0]();
}

uint64_t sub_241CDAA40()
{
  return MEMORY[0x270F00FE8]();
}

uint64_t sub_241CDAA50()
{
  return MEMORY[0x270F00FF8]();
}

uint64_t sub_241CDAA60()
{
  return MEMORY[0x270F01028]();
}

uint64_t sub_241CDAA70()
{
  return MEMORY[0x270F01070]();
}

uint64_t sub_241CDAA80()
{
  return MEMORY[0x270F01270]();
}

uint64_t sub_241CDAA90()
{
  return MEMORY[0x270F01358]();
}

uint64_t sub_241CDAAA0()
{
  return MEMORY[0x270F01510]();
}

uint64_t sub_241CDAAB0()
{
  return MEMORY[0x270F01520]();
}

uint64_t sub_241CDAAC0()
{
  return MEMORY[0x270F016A0]();
}

uint64_t sub_241CDAAD0()
{
  return MEMORY[0x270F016D0]();
}

uint64_t sub_241CDAAE0()
{
  return MEMORY[0x270F01800]();
}

uint64_t sub_241CDAAF0()
{
  return MEMORY[0x270F01AE0]();
}

uint64_t sub_241CDAB00()
{
  return MEMORY[0x270F01C58]();
}

uint64_t sub_241CDAB10()
{
  return MEMORY[0x270F027A8]();
}

uint64_t sub_241CDAB20()
{
  return MEMORY[0x270F029E0]();
}

uint64_t sub_241CDAB30()
{
  return MEMORY[0x270F02DC8]();
}

uint64_t sub_241CDAB40()
{
  return MEMORY[0x270F02DE8]();
}

uint64_t sub_241CDAB50()
{
  return MEMORY[0x270F03228]();
}

uint64_t sub_241CDAB60()
{
  return MEMORY[0x270F03250]();
}

uint64_t sub_241CDAB70()
{
  return MEMORY[0x270F34CE0]();
}

uint64_t sub_241CDAB80()
{
  return MEMORY[0x270EE3078]();
}

uint64_t sub_241CDAB90()
{
  return MEMORY[0x270EE3088]();
}

uint64_t sub_241CDABA0()
{
  return MEMORY[0x270F032C0]();
}

uint64_t sub_241CDABB0()
{
  return MEMORY[0x270F032D0]();
}

uint64_t sub_241CDABC0()
{
  return MEMORY[0x270F03548]();
}

uint64_t sub_241CDABD0()
{
  return MEMORY[0x270F036C0]();
}

uint64_t sub_241CDABE0()
{
  return MEMORY[0x270F03D30]();
}

uint64_t sub_241CDABF0()
{
  return MEMORY[0x270F03E80]();
}

uint64_t sub_241CDAC00()
{
  return MEMORY[0x270F03F18]();
}

uint64_t sub_241CDAC10()
{
  return MEMORY[0x270F03FF8]();
}

uint64_t sub_241CDAC20()
{
  return MEMORY[0x270F040E0]();
}

uint64_t sub_241CDAC30()
{
  return MEMORY[0x270F041A0]();
}

uint64_t sub_241CDAC40()
{
  return MEMORY[0x270F041F0]();
}

uint64_t sub_241CDAC50()
{
  return MEMORY[0x270F31918]();
}

uint64_t sub_241CDAC60()
{
  return MEMORY[0x270F31920]();
}

uint64_t sub_241CDAC70()
{
  return MEMORY[0x270F04378]();
}

uint64_t sub_241CDAC80()
{
  return MEMORY[0x270F04410]();
}

uint64_t sub_241CDAC90()
{
  return MEMORY[0x270F04818]();
}

uint64_t sub_241CDACA0()
{
  return MEMORY[0x270F04820]();
}

uint64_t sub_241CDACB0()
{
  return MEMORY[0x270F04830]();
}

uint64_t sub_241CDACC0()
{
  return MEMORY[0x270F04848]();
}

uint64_t sub_241CDACD0()
{
  return MEMORY[0x270F048E0]();
}

uint64_t sub_241CDACE0()
{
  return MEMORY[0x270F04950]();
}

uint64_t sub_241CDACF0()
{
  return MEMORY[0x270F04960]();
}

uint64_t sub_241CDAD00()
{
  return MEMORY[0x270F04978]();
}

uint64_t sub_241CDAD10()
{
  return MEMORY[0x270F049D0]();
}

uint64_t sub_241CDAD20()
{
  return MEMORY[0x270F049E8]();
}

uint64_t sub_241CDAD30()
{
  return MEMORY[0x270F04AB0]();
}

uint64_t sub_241CDAD40()
{
  return MEMORY[0x270F04AF0]();
}

uint64_t sub_241CDAD50()
{
  return MEMORY[0x270F04AF8]();
}

uint64_t sub_241CDAD60()
{
  return MEMORY[0x270F04B10]();
}

uint64_t sub_241CDAD70()
{
  return MEMORY[0x270EE3108]();
}

uint64_t sub_241CDAD80()
{
  return MEMORY[0x270F04C90]();
}

uint64_t sub_241CDAD90()
{
  return MEMORY[0x270F04CA8]();
}

uint64_t sub_241CDADA0()
{
  return MEMORY[0x270F04CC0]();
}

uint64_t sub_241CDADB0()
{
  return MEMORY[0x270F05078]();
}

uint64_t sub_241CDADC0()
{
  return MEMORY[0x270F05120]();
}

uint64_t sub_241CDADD0()
{
  return MEMORY[0x270F05198]();
}

uint64_t sub_241CDADE0()
{
  return MEMORY[0x270F05320]();
}

uint64_t sub_241CDADF0()
{
  return MEMORY[0x270F05330]();
}

uint64_t sub_241CDAE00()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_241CDAE10()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_241CDAE20()
{
  return MEMORY[0x270F37E90]();
}

uint64_t sub_241CDAE30()
{
  return MEMORY[0x270F37E98]();
}

uint64_t sub_241CDAE40()
{
  return MEMORY[0x270F37EA8]();
}

uint64_t sub_241CDAE50()
{
  return MEMORY[0x270F37FD8]();
}

uint64_t sub_241CDAE60()
{
  return MEMORY[0x270F38080]();
}

uint64_t sub_241CDAE70()
{
  return MEMORY[0x270F38088]();
}

uint64_t sub_241CDAE80()
{
  return MEMORY[0x270F38090]();
}

uint64_t sub_241CDAE90()
{
  return MEMORY[0x270F38098]();
}

uint64_t sub_241CDAEA0()
{
  return MEMORY[0x270F380A0]();
}

uint64_t sub_241CDAEB0()
{
  return MEMORY[0x270EF30B8]();
}

uint64_t sub_241CDAEC0()
{
  return MEMORY[0x270EF30D0]();
}

uint64_t sub_241CDAED0()
{
  return MEMORY[0x270EF30D8]();
}

uint64_t sub_241CDAEE0()
{
  return MEMORY[0x270EF30E0]();
}

uint64_t sub_241CDAEF0()
{
  return MEMORY[0x270EF30F0]();
}

uint64_t sub_241CDAF00()
{
  return MEMORY[0x270EF3278]();
}

uint64_t sub_241CDAF10()
{
  return MEMORY[0x270EF3328]();
}

uint64_t sub_241CDAF20()
{
  return MEMORY[0x270EF3348]();
}

uint64_t sub_241CDAF30()
{
  return MEMORY[0x270EF3360]();
}

uint64_t sub_241CDAF40()
{
  return MEMORY[0x270EF3368]();
}

uint64_t sub_241CDAF50()
{
  return MEMORY[0x270EF3370]();
}

uint64_t sub_241CDAF60()
{
  return MEMORY[0x270EF3390]();
}

uint64_t sub_241CDAF70()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_241CDAF80()
{
  return MEMORY[0x270EF1830]();
}

uint64_t sub_241CDAF90()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_241CDAFA0()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_241CDAFB0()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_241CDAFC0()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_241CDAFD0()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_241CDAFE0()
{
  return MEMORY[0x270F9D328]();
}

uint64_t sub_241CDAFF0()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_241CDB000()
{
  return MEMORY[0x270F35120]();
}

uint64_t sub_241CDB010()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_241CDB020()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_241CDB030()
{
  return MEMORY[0x270F9D498]();
}

uint64_t sub_241CDB040()
{
  return MEMORY[0x270F9D550]();
}

uint64_t sub_241CDB050()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_241CDB060()
{
  return MEMORY[0x270EF18D0]();
}

uint64_t sub_241CDB070()
{
  return MEMORY[0x270EF1958]();
}

uint64_t sub_241CDB080()
{
  return MEMORY[0x270EF1968]();
}

uint64_t sub_241CDB090()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_241CDB0A0()
{
  return MEMORY[0x270EF19B8]();
}

uint64_t sub_241CDB0B0()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_241CDB0C0()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_241CDB0D0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_241CDB0E0()
{
  return MEMORY[0x270EF1A28]();
}

uint64_t sub_241CDB0F0()
{
  return MEMORY[0x270EF1A38]();
}

uint64_t sub_241CDB100()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_241CDB110()
{
  return MEMORY[0x270EF1AF8]();
}

uint64_t sub_241CDB120()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_241CDB130()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_241CDB140()
{
  return MEMORY[0x270F36F20]();
}

uint64_t sub_241CDB150()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_241CDB160()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_241CDB170()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_241CDB180()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_241CDB190()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_241CDB1A0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_241CDB1B0()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_241CDB1C0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_241CDB1E0()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_241CDB1F0()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_241CDB200()
{
  return MEMORY[0x270F9D8D8]();
}

uint64_t sub_241CDB210()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_241CDB220()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_241CDB230()
{
  return MEMORY[0x270EF1B60]();
}

uint64_t sub_241CDB240()
{
  return MEMORY[0x270F36F30]();
}

uint64_t sub_241CDB250()
{
  return MEMORY[0x270EE4040]();
}

uint64_t sub_241CDB260()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_241CDB270()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_241CDB280()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_241CDB290()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_241CDB2A0()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_241CDB2B0()
{
  return MEMORY[0x270EF1BA8]();
}

uint64_t sub_241CDB2C0()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_241CDB2D0()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_241CDB2E0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_241CDB2F0()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_241CDB300()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_241CDB310()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_241CDB320()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_241CDB330()
{
  return MEMORY[0x270EF1C18]();
}

uint64_t sub_241CDB340()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_241CDB350()
{
  return MEMORY[0x270F32558]();
}

uint64_t sub_241CDB360()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_241CDB370()
{
  return MEMORY[0x270EF1CC0]();
}

uint64_t sub_241CDB380()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_241CDB390()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_241CDB3A0()
{
  return MEMORY[0x270F9DF28]();
}

uint64_t sub_241CDB3B0()
{
  return MEMORY[0x270F9DF30]();
}

uint64_t sub_241CDB3C0()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_241CDB3D0()
{
  return MEMORY[0x270F9DFD0]();
}

uint64_t sub_241CDB3E0()
{
  return MEMORY[0x270F32560]();
}

uint64_t sub_241CDB3F0()
{
  return MEMORY[0x270F9E330]();
}

uint64_t sub_241CDB400()
{
  return MEMORY[0x270F34D08]();
}

uint64_t sub_241CDB410()
{
  return MEMORY[0x270EF1DB8]();
}

uint64_t sub_241CDB420()
{
  return MEMORY[0x270F36F50]();
}

uint64_t sub_241CDB430()
{
  return MEMORY[0x270F32570]();
}

uint64_t sub_241CDB440()
{
  return MEMORY[0x270F34D20]();
}

uint64_t sub_241CDB450()
{
  return MEMORY[0x270F34D28]();
}

uint64_t sub_241CDB460()
{
  return MEMORY[0x270F34D30]();
}

uint64_t sub_241CDB470()
{
  return MEMORY[0x270F35130]();
}

uint64_t sub_241CDB480()
{
  return MEMORY[0x270F38FA0]();
}

uint64_t sub_241CDB490()
{
  return MEMORY[0x270F38FA8]();
}

uint64_t sub_241CDB4A0()
{
  return MEMORY[0x270F38FB0]();
}

uint64_t sub_241CDB4B0()
{
  return MEMORY[0x270F38FB8]();
}

uint64_t sub_241CDB4C0()
{
  return MEMORY[0x270F38FC0]();
}

uint64_t sub_241CDB4D0()
{
  return MEMORY[0x270F36F58]();
}

uint64_t sub_241CDB4E0()
{
  return MEMORY[0x270F35138]();
}

uint64_t sub_241CDB4F0()
{
  return MEMORY[0x270F35140]();
}

uint64_t sub_241CDB500()
{
  return MEMORY[0x270F35148]();
}

uint64_t sub_241CDB510()
{
  return MEMORY[0x270F35150]();
}

uint64_t sub_241CDB520()
{
  return MEMORY[0x270F35158]();
}

uint64_t sub_241CDB530()
{
  return MEMORY[0x270F35168]();
}

uint64_t sub_241CDB540()
{
  return MEMORY[0x270F35180]();
}

uint64_t sub_241CDB550()
{
  return MEMORY[0x270F35190]();
}

uint64_t sub_241CDB560()
{
  return MEMORY[0x270F351A0]();
}

uint64_t sub_241CDB570()
{
  return MEMORY[0x270F351B0]();
}

uint64_t sub_241CDB580()
{
  return MEMORY[0x270F351C0]();
}

uint64_t sub_241CDB590()
{
  return MEMORY[0x270F351D0]();
}

uint64_t sub_241CDB5A0()
{
  return MEMORY[0x270F351D8]();
}

uint64_t sub_241CDB5B0()
{
  return MEMORY[0x270F351E0]();
}

uint64_t sub_241CDB5C0()
{
  return MEMORY[0x270F351E8]();
}

uint64_t sub_241CDB5D0()
{
  return MEMORY[0x270F38FC8]();
}

uint64_t sub_241CDB5E0()
{
  return MEMORY[0x270F38FD0]();
}

uint64_t sub_241CDB5F0()
{
  return MEMORY[0x270F38FD8]();
}

uint64_t sub_241CDB600()
{
  return MEMORY[0x270EF33C8]();
}

uint64_t sub_241CDB610()
{
  return MEMORY[0x270EF33D8]();
}

uint64_t sub_241CDB620()
{
  return MEMORY[0x270EF33E0]();
}

uint64_t sub_241CDB630()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_241CDB640()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_241CDB650()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_241CDB660()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_241CDB670()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_241CDB680()
{
  return MEMORY[0x270F32578]();
}

uint64_t sub_241CDB690()
{
  return MEMORY[0x270F32580]();
}

uint64_t sub_241CDB6A0()
{
  return MEMORY[0x270F32590]();
}

uint64_t sub_241CDB6B0()
{
  return MEMORY[0x270EF33E8]();
}

uint64_t sub_241CDB6C0()
{
  return MEMORY[0x270EF33F8]();
}

uint64_t sub_241CDB6D0()
{
  return MEMORY[0x270F36F60]();
}

uint64_t sub_241CDB6E0()
{
  return MEMORY[0x270F36F68]();
}

uint64_t sub_241CDB6F0()
{
  return MEMORY[0x270EF3400]();
}

uint64_t sub_241CDB700()
{
  return MEMORY[0x270EF3410]();
}

uint64_t sub_241CDB710()
{
  return MEMORY[0x270EF3418]();
}

uint64_t sub_241CDB720()
{
  return MEMORY[0x270EF3420]();
}

uint64_t sub_241CDB730()
{
  return MEMORY[0x270F36F70]();
}

uint64_t sub_241CDB740()
{
  return MEMORY[0x270F36F78]();
}

uint64_t sub_241CDB750()
{
  return MEMORY[0x270F35218]();
}

uint64_t sub_241CDB760()
{
  return MEMORY[0x270F35220]();
}

uint64_t sub_241CDB770()
{
  return MEMORY[0x270F35228]();
}

uint64_t sub_241CDB780()
{
  return MEMORY[0x270EF3468]();
}

uint64_t sub_241CDB790()
{
  return MEMORY[0x270EF1F38]();
}

uint64_t sub_241CDB7A0()
{
  return MEMORY[0x270F34D40]();
}

uint64_t sub_241CDB7B0()
{
  return MEMORY[0x270F34D60]();
}

uint64_t sub_241CDB7C0()
{
  return MEMORY[0x270F34D70]();
}

uint64_t sub_241CDB7D0()
{
  return MEMORY[0x270F34D80]();
}

uint64_t sub_241CDB7E0()
{
  return MEMORY[0x270F38148]();
}

uint64_t sub_241CDB7F0()
{
  return MEMORY[0x270F38FE0]();
}

uint64_t sub_241CDB800()
{
  return MEMORY[0x270F38FE8]();
}

uint64_t sub_241CDB810()
{
  return MEMORY[0x270F38FF0]();
}

uint64_t sub_241CDB820()
{
  return MEMORY[0x270F38FF8]();
}

uint64_t sub_241CDB830()
{
  return MEMORY[0x270F39000]();
}

uint64_t sub_241CDB840()
{
  return MEMORY[0x270F39008]();
}

uint64_t sub_241CDB850()
{
  return MEMORY[0x270F39010]();
}

uint64_t sub_241CDB860()
{
  return MEMORY[0x270F34D90]();
}

uint64_t sub_241CDB870()
{
  return MEMORY[0x270F34D98]();
}

uint64_t sub_241CDB880()
{
  return MEMORY[0x270EF1F60]();
}

uint64_t sub_241CDB890()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_241CDB8A0()
{
  return MEMORY[0x270FA0CD0]();
}

uint64_t sub_241CDB8B0()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_241CDB8C0()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_241CDB8D0()
{
  return MEMORY[0x270F325B0]();
}

uint64_t sub_241CDB8E0()
{
  return MEMORY[0x270F325E0]();
}

uint64_t sub_241CDB8F0()
{
  return MEMORY[0x270F39018]();
}

uint64_t sub_241CDB900()
{
  return MEMORY[0x270EF2010]();
}

uint64_t sub_241CDB910()
{
  return MEMORY[0x270EF2020]();
}

uint64_t sub_241CDB920()
{
  return MEMORY[0x270F34DE0]();
}

uint64_t sub_241CDB930()
{
  return MEMORY[0x270F34DE8]();
}

uint64_t sub_241CDB940()
{
  return MEMORY[0x270F35260]();
}

uint64_t sub_241CDB950()
{
  return MEMORY[0x270F35268]();
}

uint64_t sub_241CDB960()
{
  return MEMORY[0x270F34DF8]();
}

uint64_t sub_241CDB970()
{
  return MEMORY[0x270F34E00]();
}

uint64_t sub_241CDB980()
{
  return MEMORY[0x270EF34E0]();
}

uint64_t sub_241CDB990()
{
  return MEMORY[0x270EE4238]();
}

uint64_t sub_241CDB9A0()
{
  return MEMORY[0x270F39020]();
}

uint64_t sub_241CDB9B0()
{
  return MEMORY[0x270F34E18]();
}

uint64_t sub_241CDB9C0()
{
  return MEMORY[0x270F35270]();
}

uint64_t sub_241CDB9D0()
{
  return MEMORY[0x270F38168]();
}

uint64_t sub_241CDB9E0()
{
  return MEMORY[0x270EF3500]();
}

uint64_t sub_241CDB9F0()
{
  return MEMORY[0x270F34E28]();
}

uint64_t sub_241CDBA00()
{
  return MEMORY[0x270F34E30]();
}

uint64_t sub_241CDBA10()
{
  return MEMORY[0x270F32610]();
}

uint64_t sub_241CDBA20()
{
  return MEMORY[0x270F34E38]();
}

uint64_t sub_241CDBA30()
{
  return MEMORY[0x270F39028]();
}

uint64_t sub_241CDBA40()
{
  return MEMORY[0x270EF3580]();
}

uint64_t sub_241CDBA50()
{
  return MEMORY[0x270F34E48]();
}

uint64_t sub_241CDBA60()
{
  return MEMORY[0x270F34E50]();
}

uint64_t sub_241CDBA70()
{
  return MEMORY[0x270EF3598]();
}

uint64_t sub_241CDBA80()
{
  return MEMORY[0x270EF35A0]();
}

uint64_t sub_241CDBA90()
{
  return MEMORY[0x270EF35A8]();
}

uint64_t sub_241CDBAA0()
{
  return MEMORY[0x270EF35B0]();
}

uint64_t sub_241CDBAB0()
{
  return MEMORY[0x270EF35B8]();
}

uint64_t sub_241CDBAC0()
{
  return MEMORY[0x270EF35C0]();
}

uint64_t sub_241CDBAD0()
{
  return MEMORY[0x270F32620]();
}

uint64_t sub_241CDBAE0()
{
  return MEMORY[0x270EF20D8]();
}

uint64_t sub_241CDBAF0()
{
  return MEMORY[0x270F05438]();
}

uint64_t sub_241CDBB00()
{
  return MEMORY[0x270F34EA8]();
}

uint64_t sub_241CDBB10()
{
  return MEMORY[0x270F32628]();
}

uint64_t sub_241CDBB20()
{
  return MEMORY[0x270F34EC0]();
}

uint64_t sub_241CDBB30()
{
  return MEMORY[0x270EF2170]();
}

uint64_t sub_241CDBB40()
{
  return MEMORY[0x270EF2198]();
}

uint64_t sub_241CDBB50()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_241CDBB60()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_241CDBB70()
{
  return MEMORY[0x270F32630]();
}

uint64_t sub_241CDBB80()
{
  return MEMORY[0x270F9E3A0]();
}

uint64_t sub_241CDBB90()
{
  return MEMORY[0x270F36FA8]();
}

uint64_t sub_241CDBBA0()
{
  return MEMORY[0x270F36FB0]();
}

uint64_t sub_241CDBBB0()
{
  return MEMORY[0x270F36FB8]();
}

uint64_t sub_241CDBBC0()
{
  return MEMORY[0x270EE4048]();
}

uint64_t sub_241CDBBD0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_241CDBBE0()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_241CDBBF0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_241CDBC00()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_241CDBC10()
{
  return MEMORY[0x270EF2410]();
}

uint64_t sub_241CDBC20()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_241CDBC30()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_241CDBC40()
{
  return MEMORY[0x270FA13A0]();
}

uint64_t sub_241CDBC50()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_241CDBC70()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_241CDBC80()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_241CDBC90()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_241CDBCA0()
{
  return MEMORY[0x270F9E810]();
}

uint64_t sub_241CDBCB0()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_241CDBCC0()
{
  return MEMORY[0x270F9E820]();
}

uint64_t sub_241CDBCD0()
{
  return MEMORY[0x270F9E830]();
}

uint64_t sub_241CDBCE0()
{
  return MEMORY[0x270F9E838]();
}

uint64_t sub_241CDBCF0()
{
  return MEMORY[0x270F9E840]();
}

uint64_t sub_241CDBD00()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_241CDBD10()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_241CDBD20()
{
  return MEMORY[0x270F9E860]();
}

uint64_t sub_241CDBD40()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_241CDBD50()
{
  return MEMORY[0x270F9E878]();
}

uint64_t sub_241CDBD60()
{
  return MEMORY[0x270F9E880]();
}

uint64_t sub_241CDBD70()
{
  return MEMORY[0x270F9E888]();
}

uint64_t sub_241CDBD80()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_241CDBD90()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_241CDBDA0()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_241CDBDB0()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_241CDBDC0()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_241CDBDD0()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_241CDBDE0()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_241CDBDF0()
{
  return MEMORY[0x270F9E978]();
}

uint64_t sub_241CDBE00()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_241CDBE10()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_241CDBE20()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_241CDBE30()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_241CDBE40()
{
  return MEMORY[0x270F9EAE0]();
}

uint64_t sub_241CDBE50()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_241CDBE60()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_241CDBE70()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_241CDBE80()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_241CDBE90()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_241CDBEA0()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_241CDBEB0()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_241CDBEC0()
{
  return MEMORY[0x270F9EF50]();
}

uint64_t sub_241CDBED0()
{
  return MEMORY[0x270F9EF88]();
}

uint64_t sub_241CDBEE0()
{
  return MEMORY[0x270F9EFB0]();
}

uint64_t sub_241CDBEF0()
{
  return MEMORY[0x270F9EFC0]();
}

uint64_t sub_241CDBF00()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_241CDBF10()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_241CDBF20()
{
  return MEMORY[0x270F9EFF8]();
}

uint64_t sub_241CDBF30()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_241CDBF40()
{
  return MEMORY[0x270F9F078]();
}

uint64_t sub_241CDBF50()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_241CDBF60()
{
  return MEMORY[0x270F9F090]();
}

uint64_t sub_241CDBF70()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_241CDBF80()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_241CDBF90()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_241CDBFA0()
{
  return MEMORY[0x270F9F0B8]();
}

uint64_t sub_241CDBFB0()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_241CDBFD0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_241CDBFE0()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_241CDBFF0()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_241CDC000()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_241CDC010()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_241CDC020()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_241CDC030()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_241CDC040()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_241CDC050()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_241CDC060()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_241CDC070()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_241CDC080()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_241CDC090()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_241CDC0A0()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_241CDC0B0()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_241CDC0C0()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_241CDC0D0()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_241CDC0E0()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_241CDC0F0()
{
  return MEMORY[0x270F9F788]();
}

uint64_t sub_241CDC100()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_241CDC110()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_241CDC120()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_241CDC130()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_241CDC140()
{
  return MEMORY[0x270F9FA58]();
}

uint64_t sub_241CDC150()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_241CDC160()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_241CDC170()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_241CDC180()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_241CDC190()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_241CDC1A0()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_241CDC1B0()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_241CDC1C0()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_241CDC1D0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_241CDC1E0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_241CDC1F0()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_241CDC200()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_241CDC210()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_241CDC220()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_241CDC230()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_241CDC240()
{
  return MEMORY[0x270F9FDD0]();
}

uint64_t sub_241CDC270()
{
  return MEMORY[0x270FA0128]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x270EE4278]();
  return result;
}

uint64_t HKAFibBurdenClampedLowerBoundLocalizedString()
{
  return MEMORY[0x270F381A0]();
}

uint64_t HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification()
{
  return MEMORY[0x270EF3600]();
}

uint64_t HKDecodeDateForValue()
{
  return MEMORY[0x270F381C0]();
}

uint64_t HKEncodeValueForDate()
{
  return MEMORY[0x270F381E0]();
}

uint64_t HKEndOfDayForDate()
{
  return MEMORY[0x270F381E8]();
}

uint64_t HKHRAFibBurdenPreviousWeekDayIndexRange()
{
  return MEMORY[0x270F39530]();
}

uint64_t HKHealthUIFrameworkBundle()
{
  return MEMORY[0x270F38250]();
}

uint64_t HKQuantityRangeInclusive()
{
  return MEMORY[0x270EF37F0]();
}

uint64_t HKShowSensitiveLogItems()
{
  return MEMORY[0x270EF3818]();
}

uint64_t HKStringForHKTimeScope()
{
  return MEMORY[0x270F382B0]();
}

uint64_t HKStringFromProfileType()
{
  return MEMORY[0x270EF3888]();
}

uint64_t HKTimePeriodStringWithFonts()
{
  return MEMORY[0x270F382C8]();
}

uint64_t HKUIJoinStringsForAutomationIdentifier()
{
  return MEMORY[0x270F38330]();
}

uint64_t HKUILocalizedString()
{
  return MEMORY[0x270F38340]();
}

uint64_t HKUILocalizedStringForGAD7Risk()
{
  return MEMORY[0x270F38348]();
}

uint64_t HKUILocalizedStringForPHQ9Risk()
{
  return MEMORY[0x270F38350]();
}

uint64_t HKUILocalizedStringForStateOfMind()
{
  return MEMORY[0x270F38358]();
}

uint64_t HKUILocalizedStringForStateOfMindDomain()
{
  return MEMORY[0x270F38360]();
}

uint64_t HKUILocalizedStringForStateOfMindLabel()
{
  return MEMORY[0x270F38368]();
}

uint64_t HKVisionLeftRightLongLocalizedString()
{
  return MEMORY[0x270F383B8]();
}

uint64_t HKVisionPrescriptionImageOnlyLocalizedString()
{
  return MEMORY[0x270F383D0]();
}

uint64_t HKVisionPrescriptionSupportedImageUTTypeIdentifiers()
{
  return MEMORY[0x270F383D8]();
}

uint64_t HKVisionPrescriptionTypeDetailedLongLocalizedString()
{
  return MEMORY[0x270F383E0]();
}

uint64_t HKVisionPrescriptionTypeLongLocalizedString()
{
  return MEMORY[0x270F383E8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _HKAllObjectTypes()
{
  return MEMORY[0x270EF3908]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x270FA0298]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x270FA02B0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x270FA0350]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x270FA0358]();
}

uint64_t swift_getFunctionTypeMetadata()
{
  return MEMORY[0x270FA0380]();
}

uint64_t swift_getFunctionTypeMetadata0()
{
  return MEMORY[0x270FA0388]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x270FA0390]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x270FA03F8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x270FA0408]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x270FA0418]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x270FA0420]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x270FA0678]();
}